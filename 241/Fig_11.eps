%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: c_v2_BW_six.pdf
%%Creator: Adobe Acrobat 8.0
%%For: posk
%%CreationDate: 12/24/15, 5:15:41 PM
%%BoundingBox: -16 16 551 567
%%HiResBoundingBox: -16 16 551 567
%%CropBox: -16 16 551 567
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 2662 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c321 44.398116, Tue Aug 04 2009 14:24:30">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xap:CreateDate="2015-12-22T12:30:35Z"
   xap:CreatorTool="ROOT Version 5.34/28"
   pdf:Keywords="ROOT"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">./c_v2_BW_six.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceRGB] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -567 translate
pgsv
[0 1 -1 0 551 0 ]ct
gsave
np
gsave
0 0 mo
0 567 li
551 567 li
551 0 li
cp
clp
[1 0 0 1 -20 0 ]ct
571 567 mo
571 0.0709839 li
20.452 0.0709839 li
20.452 567 li
cp
false sop
0.999 0.999 0.999 rgb
ef
0.002 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
571 567 mo
571 0.0709839 li
20.452 0.0709839 li
20.452 567 li
cp
@
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
1 1 1 rgb
ef
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
@
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
0.999 0.999 0.999 rgb
ef
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
@
0.75 lw
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
0 0 0 rgb
@
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
@
0.75 lw
211.475 512.424 mo
211.475 275.926 li
45.476 275.926 li
45.476 512.424 li
cp
0 0 0 rgb
@
1.5 lw
211.475 512.424 mo
211.475 275.926 li
@
207.429 481.061 mo
211.475 481.061 li
@
209.452 472.876 mo
211.475 472.876 li
@
209.452 464.692 mo
211.475 464.692 li
@
209.452 456.508 mo
211.475 456.508 li
@
207.429 448.323 mo
211.475 448.323 li
@
209.452 440.139 mo
211.475 440.139 li
@
209.452 431.954 mo
211.475 431.954 li
@
209.452 423.77 mo
211.475 423.77 li
@
207.429 415.585 mo
211.475 415.585 li
@
209.452 407.401 mo
211.475 407.401 li
@
209.452 399.216 mo
211.475 399.216 li
@
209.452 391.032 mo
211.475 391.032 li
@
207.429 382.848 mo
211.475 382.848 li
@
209.452 374.663 mo
211.475 374.663 li
@
209.452 366.479 mo
211.475 366.479 li
@
209.452 358.294 mo
211.475 358.294 li
@
207.429 350.11 mo
211.475 350.11 li
@
209.452 341.925 mo
211.475 341.925 li
@
209.452 333.741 mo
211.475 333.741 li
@
209.452 325.556 mo
211.475 325.556 li
@
207.429 317.372 mo
211.475 317.372 li
@
209.452 309.188 mo
211.475 309.188 li
@
209.452 301.003 mo
211.475 301.003 li
@
209.452 292.819 mo
211.475 292.819 li
@
207.429 284.634 mo
211.475 284.634 li
@
207.429 481.061 mo
211.475 481.061 li
@
209.452 489.245 mo
211.475 489.245 li
@
209.452 497.43 mo
211.475 497.43 li
@
209.452 505.614 mo
211.475 505.614 li
@
207.429 284.634 mo
211.475 284.634 li
@
209.452 276.45 mo
211.475 276.45 li
@
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f321047244e000000cc000000606376
74208de93e9e0000012c0000036c6670676de80497d30000049800000a1d
676c7966dd2c6c9800005cf40003f58068656164d35a3c7a00000eb80000
003668686561af0f210900000ef000000024686d747839ad1f4300000f14
000022546c6f63610f66441800003168000022586d61787010ff0b2d0000
53c0000000206e616d6558b85cfc000053e00000054470726570bc836e31
00005924000003cf67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a40292a292827262524232221201f1e1d1c1b1a1918171615
14131211100d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b0004361
7d6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2c20b0032552582359212d2c69b04061b0008b
0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0112b
b0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0
172344b0177ae5182d2cb002254661658a46b040608b482d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019236a4445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005258b21a401a4523614459b0005058b219401945236144592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442d2c4569b014b0324b505821b0205961442db800
2b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db8002f2c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800302c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800312c2020456944b001
602020457d691844b001602db800322cb800312a2db800332c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800342c4b535845441b2121592db800352c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800362c202045
6944b001602db800372cb800362a212db800382c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
392c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8003b2c2020456944b001602020457d69
1844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800402c2020456944b001602d
b800412cb800402a212db800422c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db800432c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
00442c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db800452c2020456944b001602020457d691844b001602d
b800462cb800452a2db800472c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800482c
4b535845441b2121592db800492c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db8004a2c2020456944b001602db8004b2cb800
4a2a212db8004c2c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db8004d2c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db8004f2c2020456944b001602020457d691844b001602db800502cb800
4f2a2db800512c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db800522c4b535845441b
2121592db800532c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800542c2020456944b001602db800552cb800542a212db800
562c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800572c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800582c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800592c20
20456944b001602020457d691844b001602db8005a2cb800592a2db8005b
2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a
235920b0032653582321b800c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db8005c2c4b535845441b2121592d000000000100000000000037422dfa
5f0f3cf500110800000000005f4d8f0000000000cff2eef7f865fc270b91
08f9000000090001000100000000000100000629fe2900000c01f865fced
0b9100010000000000000000000000000000089505120042000000000239
000002390000023900ed02d700520473000004730040071d004205560059
0187009c02aa008e02aa0044031d004e04ac005c023900aa02aa00550239
00af0239000004730040047300c404730040047300310473003404730042
0473004d0473004b0473004204730049023900e3023900e304ac001c04ac
005c04ac001c0473009c081f00e10556001e0556009705c7005a05c700a5
055600af04e300af0639006305c700a1023900c9040000230556009c0473
009c06aa009705c7009c06390050055600af0639005005c700b405560060
04e3002105c700aa05560034078d00250556002a0556002a04e3002f0239
00800239ffbb0239002f03c100780473000002aa00260473005204730076
0400003b04730038047300480239001c0473003d0473008401c7008401c7
ffda0400008001c7008906aa0084047300840473003b047300760473003c
02aa00890400004202390017047300800400000b05c700120400000b0400
00150400003402acffd50214009002ac002a04ac00120556001e0556001e
05c7005a055600af05c7009c0639005005c700aa04730052047300520473
00520473005204730052047300520400003b047300480473004804730048
0473004802390067023900080239000002390025047300840473003b0473
003b0473003b0473003b0473003b04730080047300800473008004730080
047300500333006f04730068047300380473004b02cd0095044cfff504e3
00c705e5001505e50012080000ed02aa008a02aa00520464005c08000010
0639004205b4002a0464005c0464005a0464005c0473ffe1049cffb403f4
006a05b400280696001c0464002f0231ff7902f6003b02ec00310625005e
071d004904e3005c04e300ba02aa00e804ac005c0464ffef047300280464
005c04e50071047300c2047300c2080000ed023900000556001e0556001e
0639005008000049078d00470473fffb080000f102aa004e02aa004e01c7
008401c700aa0464005c03f40042040000150556002a0156feaa05f40060
02aa00b402aa00aa0400001c0400001c047300500239009701c700aa02aa
004e0800000e0556001e055600af0556001e055600af055600af0239006b
0239fff902390020023900020639005006390050065200690639005005c7
00aa05c700aa05c700aa023900bd02aa002a02aafff702aa001502aa0019
02aa00f702aa008402aa007902aaffff02aa00a102aa002a0473ffe801c7
ffd7055600600400004204e3002f040000340214009005c700210473003d
0556002a04000015055600800473008004ac005c04ac007402aa005702aa
000b02aa000706ac005a06ac00a306ac004b04730000063900630473003d
023900c9055600600400004205c7005a0400003b05c7005a0400003b0473
00380556001e047300520556001e047300520556001e0473005205c7005a
0400003b05c7005a0400003b05c700a505480038055600af047300480556
00af04730048055600af04730048055600af04730048055600af04730048
063900630473003d063900630473003d063900630473003d0473003d05c7
00a10473008405c700350473003e038f00690371004403330059031f0065
0239003501c7ffdf063900c9038e00840400002301c7ffa3055600320400
fff10473009c021f00830473009c01c7000c0473009c021a004e0473009c
027b008905c7009c0473008405c7002a0473000a05c7009c047300840473
000e063900500473003b063900500473003b063900500473003b05c700b4
02aa008905c7004902aa001705c700b402aa004205560060040000420556
00600400004204e300210239001704e3002102e1001704e30021028fffe2
05c700aa0473008005c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080078d002505c700120556002a
0400001504e3002f0400003404e3002f04000034055600600400004204e3
0021023900170473004b0000fcfc0000fcfc0000fc9c0000fc680000fc86
0000fc8a0000fd690000fcc40000fcf60000fc700000fc9c0000fd5b0000
fcea0000fd120000fc9105c70021063900630473003d0473009c01c70089
0556009c0400008005c7009c0473008405c700b402aa008901aaffdb0237
00e102aa005501c7ffda040000800239001c04730048047300480400003a
047300510000fd3c0000fc660000fc8a0239fffb0239fffb05c7009c0473
00840000fcc4056d0024054c00980556009804270098059c002505560098
07f0000a0554004505c7009805c7009805560098057e002506aa009805c7
00980639005005c700980556009805c7005004e3001d0556002f06d80041
0556002505db009805360060078d009807a1009806aa001d070900980536
009805c700640800009805b7006a04730056047300480462008703390087
04d9001c04730050063d00170400003304ab008704ab0087046200870498
001b055400870473008704730048047300870473007d0400004804000033
0400001706a800460400001404910087044e005c063900870657008704e3
001b05c7008703ff00870414002f06390087047700500556009804730050
0427009803390087023900ba01c700870400002305c70050040000480239
001d020300290800002506c3001b07e10098067c008701c7ffdd05560062
0639004e0473001b0556009804620087040000480617001b0473001b0556
002f0400001705c700980473008704730098031d00870000fd5b0000fd5b
0000fd5b0000fd5b0000fc700000fd930000fd2a0000fc8a0000fcfc0000
fcfc0000fc860000fd690000fcc40000fcf60000fd930000fc9c0000fc9c
0000fc8a0000fc8a0000fc680000fc860000fc660000fc680000fc860000
fc660000fc660000fd500000fc660000fd5b0000fc8a0000fc8d0000fd2a
000000000239001b0473008306aa008302aa008806aa008302aa008902aa
0088042b0052042b005302020087033afffd02390017023900170400000a
05c70011040000140473009c0473009d0473009c0400008004b2003904b2
003905c7005905c7002104890049055600af055600600400004204980039
06e600aa05950080060a0052021400b6037300b6023900c3048c002b0400
003b0134005102aa00c102aa00c20b06000e055600ed029600ed02aa004e
01c700aa02aa0055044cfff5042f00c1042f00c2056500c1056500c202aa
0055029600ed02aa0055080000f102d500a4011d00000000000000000000
000000000000000000000000000000000000000002390000023900000239
000002390000023900000239000002390000023900000239000002390000
00000000000000000000000000000000011d0000008f000002aafff70370
00b60473009c02aa005502aa0006044c0072044c00730556001e04e300ae
04730048071c00500568003b0000fd5e0000fd5e0000fd5e0000fd5e0000
fcc90000fcd20000fd980000fccd0000fcef0000fce10000fcd90000fcec
0000fc5e0000fd440000fd4a0000fccf0000fcd10000fc860000fc910000
fcc10000fcc10000fcc10000fcc20000fcc20000fc8a01550061027b0061
0155006101550061046400320464002b03f4002d03f4002f05b4011305b4
00280231006b0231fe830464ff330464ffef0464002b0464002d08fa006f
0816006f0556009c023900c9047200c906ab00c9078f00c905560034078f
003409c800340c010034078f00c90556002a078f002a09c8002a0473009c
05c7005a05c700a506aa009701c70084038e00840555008405c700840400
000b05c7000b078e000b0955000b05c700840400000b05c7000b078e000b
01c700890400003b0473003806aa008409e2007408c1004f07db003807da
006b05a7007102f7005808e7007106f0006b05a100530556001e04730052
0239001e0239ffff063900500473003b05c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa047300800556001e
047300520556001e0473005208000010071d0049063900630473003d0556
009c04000080063900500473003b063900500473003b01c7ffbe09cd0054
08fc006f07fb00380639006305c7009c047300840556001e047300520800
0010071d00490639004204e3005c0556001e047300520556001e04730052
055600af04730048055600af047300480239ff7101c7ff350239fff801c7
ffaa063900500473003b063900500473003b05c700b402aaffd605c700b4
02aa004f05c700aa0473008005c700aa0473008005c700a1047300840556
001e04730052055600af04730048063900500473003b063900500473003b
063900500473003b063900500473003b0556002a0400001502aa004e0239
00c90556001e047300520556009704730076055600970473007605560097
0473007605c7005a0400003b05c700a50473003805c700a50473003805c7
00a50473003805c700a50473003805c700a504730038055600af04730048
055600af04730048055600af04730048055600af04730048055600af0473
004804e300af0239001c063900630473003d05c700a10473008405c700a1
0473008405c700a10473008405c700390473001b05c700a1047300840239
ffec01c7ff9e02390027023900160556009c040000800556009c04000080
0556009c040000800473009c01c700890473009c01c7ff9d0473009c01c7
ffb50473009c01c7ffc006aa009706aa008406aa009706aa008406aa0097
06aa008405c7009c0473008405c7009c0473008405c7009c0473008405c7
009c04730084063900500473003b063900500473003b063900500473003b
063900500473003b055600af04730076055600af0473007605c700b402aa
008905c700b402aa008305c700b402aa004a05c700b402aa001805560060
040000420556006004000042055600600400004205560060040000420556
00600400004204e300210239001704e300210239001704e300210239ffe2
04e300210239ffe705c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080055600340400000b05560034
0400000b078d002505c70012078d002505c70012078d002505c70012078d
002505c70012078d002505c700120556002a0400000b0556002a0400000b
0556002a0400001504e3002f0400003404e3002f0400003404e3002f0400
0034047300840239001005c70012040000150239001c0556001e04730052
0556001e047300520556001e047300520556001e0473ffcb0556001e0473
00520556001e047300520556001e047300520556001e047300520556001e
047300520556001e047300520556001e047300520556001e047300520556
00af04730048055600af04730048055600af04730048055600af04730048
0556008c0473fff0055600af04730048055600af04730048055600af0473
0048023900ae02390099023900c701c70084063900500473003b06390050
0473003b063900500473003b063900500473ffd8063900500473003b0639
00500473003b063900500473003b071c00500568003b071c00500568003b
071c00500568003b071c00500568003b071c00500568003b05c700aa0473
008005c700aa0473008006e600aa0595008006e600aa0595008006e600aa
0595008006e600aa0595008006e600aa059500800556002a040000150556
002a040000150556002a040000150556002a04000015055600af04730048
055600af04730048056d007505df009604860052048600870723000a0589
0017056d002404860043056d002404860043056d00750486005208d90010
06dd0012054f0043040a003005df00960486008705df0096048600870655
00500486005205df006004120037056d001004120019056d001004120019
056d00100412001905ac005e047a0069074800980600008d08000010071d
004906aa009706aa008405c700b402aa004c0222ffc50556001b05c700c5
04e300d505c70029055600c504e3004805c700b006390071023900ba0556
00b00556002f071d00be05c700b004e300620639007105c700b0055600c5
04e3005804e1002f0556002905c700500558003d06a8007f063900640239
000a0556002904e3005a04e300b40473001204e3006804730077038d004a
04e3003b04e5008f023900b0047300b00473002504e300b8047300420400
007104e3006f04e300aa0473004c04e3006f0400003b04e300b805c70077
0473000e05c7008f0610006a0239000a04e300b80239009a0222000b0000
fd19023900b0016c0088016c00880000fcfc0000fcfc016c008802ca001a
02b5001a03050088031200880222002e0222002f031e00880362006f0333
00880362006f0735007f0625005e0639ffef01c7008401c700aa047200ed
06ac009c06ac00ed04730048047300480556001e04730052047300520556
00af04730048055600af04730048055600af047300480239fff00239ffdb
01c70079063900500473003b063900500473003b063900500473003b0556
00600400004205c700aa047300800400000b06e600aa0595008006020061
0473ffd605c7fff20473008406aa008403f0009c0460009a03a6005a03e9
000c02cf00020448005c06020061047300500655004e0486004c06390050
02aa001e07c6002407c6002408e6ffca0000f9200000fa0b0000fa0b0000
fa060000fa0606020061047300500655004e0486004c0222002f02b5001a
0473002504e3002f040000340473003b04d2008404dc00380473007204bd
003804d7003d0473008204d7008202220086078d00470387008802aa0086
04d2003c04b80032052b00320772003805600017043a001705ce001c04c2
008904b8008901a9008a01a9008a01c700aa0187007802aa000802aa00c1
02aa003a0187007802aa000802aa00c102aa003a01a9008a01a9008a02aa
001e02aafff7023a0042023a004100e4ffed015500450155004401c40044
02e400090200000b023a004e023a004f0256000e0256000e025600240256
002402aa00550256002e0256002e0256002e020000210200000600e30044
0256003a023a000902560024025600240256000e0256000e02aa0078023a
004f0000fccd0000fca20000fca20000fd6f0000fd6f0000fc490000fc49
0000fb9e0000fca20000fc490000fccd0000fcc20000fcc2000000000239
0000000000000000000000000000031d004e031d004e06da00c107c60024
023900e308e6009c07c60024071d00d00703001b02390080023900800000
00000000000000000000000000000000000000000000067b003a023a0020
0239001a02390021023a002702390025023a0021023900240256002e0155
002b0256002e0155004701550022023a0042023a0020023a006202390020
023900180239001a02390021023a002702390025023a0021023900240256
002e0155002b0256002e0155004701550022063c0011063900630473009c
0473009c0556002a06ab002806000030075600110473007207c8005806ac
005a05c7005a0556005904e500710696001c06ab003406ab0028055600af
04730076055600af0473007604e300020639005004c400a1024100230369
001105c7005002bb0023033afffd0473009c0473009c01c7002a01c7002a
0473003d04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a05c1005b05b3005b076c00880776008807760088078d0088
07ca006f07a0006f04730077047300770473007704730077047300770473
007706c2008806c200880874008808890088085b00880868008804e3003b
04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b0733
00880733008808e5008808fa008808cc008808d900880929006f0929006f
023900b0023900b002390041023900390239003d0239003d023900230239
002303a5008803a5008805570088056c0088053e0088054b0088059b006f
059b006f04e3006f04e3006f04e3006f04e3006f04e3006f04e3006f07a5
008807a5008809570088096c0088093e0088094b008804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b806c200880889
00880868008808b8006f0610006a0610006a0610006a0610006a0610006a
0610006a0610006a0610006a07910088079100880943008809580088092a
0088093700880987006f0987006f04e3005a04e3005a0473007704730077
04e3003b04e3003b023900b0023900b004e3006f04e3006f04e300b804e3
00b80610006a0610006a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a0811005b080c005b0991008809d80088097f
0088099b008809d3006f09ce006f04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b04e3003b04e3003b096c0088096c00880b1e00880b33
00880b0500880b1200880b62006f0b62006f0610006a0610006a0610006a
0610006a0610006a0610006a0610006a0610006a09ca008809ca00880b7c
00880b9100880b6300880b7000880bc0006f0bc0006f04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a0556001b0556001b0666
002e0661002f07a9001b04e3003b04e3003b04e3003b04e3003b04e3003b
06ac002e06a7002f06d2002e06ba002f083100b00239ffcf0239ffce0239
ffcc0239ffda0239ffdc0239ffc50239ffe10239ffee0343002e0348002f
04e300b804e300b804e300b804e300b804e300aa04e300aa04e300b804e3
00b8055600290556002906b1002e0713002f06c200880610006a0610006a
0610006a0610006a0610006a075a002e0789002f0792002e07a9002f0878
005e04e3005a0473007704e3003b023900b004e3006f04e300b80610006a
05d5007206a7002f06ba002f0348002f0789002f0713002f07a9002f0239
ffcb04e300b804ac002504ea011704f700a102f3001b02bb002304730025
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a0239ffd70239ffe40239ffd20239ffd70239ffdb0239ffdb0239
ffcd0239ffe00239ffc80239ffc30239ffdc0239ffdc0239ffd70239ffd7
0239ffd20239ffcd0239ffd20239ffd704e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b80666
002e0661002f05c1005b076c00880776008805b3005b07760088078d0088
0666002e0661002f05c1005b076c00880776008805b3005b07760088078d
00880343002e0348002f0348002f03a5008805570088053e008803a50088
056c0088054b00880343002e0348002f0348002f03a5008805570088053e
008803a50088056c0088054b008806b1002e0713002f0713002f06c20088
088900880868008806c20088088900880868008806b1002e0713002f0713
002f06c20088088900880868008806c20088088900880868008805c700b4
05c7005a0639005001c70020051d0029055600af05c700a10000fd310552
00680473003806390050047300480772005b0738004505e5001306ac003d
06ac003d06ac003a06ac003a066d001d04e3001b082200d005e1008a06a8
007f05c7008f0556001e0400000b079900d005cf008a04da003802ca0024
05d900160588003805c700b404730052031f000004da00a103eb00a10649
00a104cf00840556009c0400008004e3002f0400003408d9001406dd0030
054f0072040a0047056d00a50412007a05df00ac0486009105df00630412
003f04f8002b0412003a056d002e0412002405ac00ac047a007705ac00ac
047a00770556002a0556002a04d900bc037c009105ac00ac047a00770632
00a504df007a075f00ac059b00910556002a0556002a06fe0028054e0035
0748003a059400260748003a059400260772004805b3003805df00ac0486
009104730052054f00ac054f00ac06a8007f04dc005d0855004405e00026
05560025040000040556003404b6000b0400003b054f0072040a004705f1
0026049c0024023900bd056d002e04120024055600340556001e05c7005a
0400003b0473ffe804e3002101c7003e02bb002304e30021055600af0473
009c0473009c055600af047300480456002301c7ffda05c700aa01a90021
01a9002102aa003302aa003302aa003a02aaffe9023900e302aa003c02aa
003c057f005b04ac002504ac0074023900e304ac0025057c004c04ac0074
023900e3023900e3063900710412003f0412003f055600ae0473008005c7
005a06aa009705dd0097059b004605c7005a05c7005a05c7005a0400003b
0400003b0400003b0473003805ca003006c6002e063f002f031f001a062e
001904e900310488004502aa00be02aa00be02aa00be02aa00be0277003b
0277003b034b0000034b0000034b0000034b0000034b00000487001203f7
001e045e0054043600830436008302fd005d034f0012069900390655003e
052900300000f86506e1002204e9002001e0004b01e9004b015d0025015d
000a0199002a0198001202fb001703040017026700130257001202570012
02c8004b01d8000701d8000707e9003a097c004b0931004909310002013c
004b04570022058900050589000d04be00150442001801d8000701d80007
03fe003d03fe003d0404003a036f000b0467003c0000fb760000fcc10000
fc080000fc730000fc730000fa630000fce00000fe950000fc8e0000fc51
0000fa0b0000fc9f0465003604650022040100340401002407760017044c
001b03ea001d051a00340653003204c8003306c200880889008808680088
0556001b0556001b0239ffdf0239ffe105560029055600290404001505e5
001405e5001405e500140800ffeb0800ffeb080003b40800038c080003b4
0800038c0800ffe90800ffe9080003b40800038c0800ffe90800ffe90800
00000404001500e40042023a0029023a0024023a001e02000006023a0024
05c7005a0639006305c7005a047100220552002904e300210556001e04d0
002805c2004e04d9004e05c7005a06aa008405d0003106640037082d0035
0552006805520068039c003f0380003b039c003f0380003b039c00530381
003c039c00530381003c02eb005302e3005302e3005302e3005302eb0053
02eb000802e3000002e3000002e3000002eb000803630053036300530363
00530363005303630053027f00010330004503b2002603c3000b050b0031
069c00290390007f0000fc4f0000fc4f0000fc420000fc420000fc420000
fc420000fc010000fc010000fd4404650022040100240a3900500873003b
0436008304360083043600830329003a0329003a03550028050d00340329
005403290028032900330329003302f6003a02f6003a0329002b0143005e
02d7005b04bb005e0329005e0329002a02d70029032900270329002a0329
0054019400100329005b0373003704bb005e02d70008037800800329000d
0378004a04dc004d0632002a04be0033047300390473003b04e6003804e1
003a04fa0039076e003e0329000a0143005e01e400610329005b02d70008
037800800329000d037800790329000a042b005205c5001001c70084045e
0054070a002e06cb003504d6001b04fa001a02d8000d04e9001b0330000d
02d9000a02db000c01c700aa02aa004e01c700aa02aa004e01c700aa02aa
004e01c700aa02aa004e053d007a0708003b0310008f0574009708c00022
0473004002e00034047300400473003104730034047300420473004d0430
002b047300420473004903cc000903cc000903cc00090428005803b7006b
0497007104b0004f0797004a0418006a045a005505d5004c07a9004404bf
004b03e0003b0965004a03f900560419004e06ed004a0420003f04500050
06a3004a03f3004d0633006006b90047064000440419004b0667004503be
003e043d003d03d60052048400440412004a041600460497003903fa0058
0650002d03cd005e0560005604950032045e005503e9003e0462005406c2
0049044500f604d500b10473005e0473002f000000000000006c0000006c
0000006c0000006c000000cc0000011c0000028000000430000005c00000
07500000079400000824000008a80000099800000a0000000a6400000aa0
00000ae000000b2800000c0400000c5000000d6800000ec000000f5c0000
1084000011b000001244000013a8000014d40000152c000015a80000163c
0000168c0000172400001828000019d800001af000001bf800001d180000
1ddc00001e6400001ec80000201800002088000020b80000213c00002230
00002280000023980000244400002540000025ec00002760000028740000
2a0c00002a6800002af800002bb400002d4c00002e4400002f0800002fa0
00002ff800003058000030bc000031540000317c000031a80000333c0000
341000003514000035ec00003780000038180000396800003a0800003a64
00003ad800003bb800003bfc00003cf400003dac00003e9c00003f800000
4068000040f4000042b400004354000044080000453400004690000046f0
0000481c000048bc0000499c000049e000004adc00004b9800004bb00000
4bc800004d9000004da800004dc000004dd800004df000004e0800004e20
00004e3800004e5000004e6800004e800000502c000050440000505c0000
50740000508c000050a4000050bc000050d4000050ec000051040000511c
000051340000514c000051640000517c00005194000051ac000051c40000
51dc00005238000052b00000547400005600000057cc00005858000058cc
000059e400005b8400005ce800005dcc00005dfc00005e6400005f440000
60280000620400006358000063e000006480000065300000665000006750
0000688800006954000069b400006a6400006aec00006c4800006d1c0000
6e3c000070640000720c0000730400007368000073ac0000745c00007598
000076900000771c000077cc00007880000078ec000078ec000079040000
791c0000793400007a6000007c4000007c7800007cb400007d5400007de4
00007e4400007ea400007f1400007ffc000080140000802c0000808c0000
81f800008268000082d80000839c0000844c000084d0000085280000858c
0000862000008848000088600000887800008890000088a8000088c00000
890c0000897c000089fc00008a4800008a6000008a7800008b2000008b38
00008b5000008b6800008b8000008bd000008c1400008c9800008cc40000
8d2000008d5000008e6400008f4800008f900000905c0000909c0000916c
000091fc000092140000922c000092440000925c000092b8000093a80000
95100000952800009540000095f8000096c4000096ec000097a4000097f0
000098a80000999c00009a9400009ba400009d7000009e2800009f9c0000
a1140000a16c0000a39c0000a5d80000a5f00000a6080000a6200000a638
0000a7000000a7180000a7300000a7c80000a98c0000a9a40000a9bc0000
a9d40000a9ec0000aa040000aa1c0000aa340000ab6c0000ab840000ab9c
0000ac480000ad500000ad680000ad800000ad980000adb00000adc80000
ade00000adf80000ae100000ae280000ae400000ae580000ae700000ae88
0000aea00000aeb80000afa00000afb80000b0580000b0700000b0b40000
b0cc0000b1c40000b1dc0000b2640000b27c0000b2940000b2ac0000b2c4
0000b2dc0000b2f40000b30c0000b3240000b33c0000b3cc0000b42c0000
b4440000b45c0000b4740000b48c0000b4a40000b4bc0000b4d40000b4ec
0000b5040000b51c0000b5340000b6b00000b8180000b8300000b8480000
b8600000b8780000b8900000b8a80000b8c00000b8d80000b8f00000b908
0000b9200000b9380000b9500000b9680000b9800000ba980000bab00000
bac80000bae00000baf80000bb100000bb280000bbf40000bcdc0000bcf4
0000bd0c0000bd240000bd3c0000bd540000bd6c0000bd840000bd9c0000
bdb40000bdcc0000bde40000bdfc0000be140000be2c0000bfc00000c154
0000c1e80000c2e40000c44c0000c4780000c4a80000c4ec0000c5700000
c59c0000c5fc0000c62c0000c68c0000c79c0000c7e40000c8240000c878
0000c9540000ca200000ca4c0000cb380000cb500000cb6c0000cb840000
cb9c0000cbb40000cbcc0000cbe40000cbfc0000cc140000cc2c0000cca8
0000cd200000cd4c0000cd9c0000ce040000ce7c0000cf340000cfec0000
d0b00000d2340000d2f40000d3200000d3800000d3980000d3b00000d450
0000d5140000d55c0000d5b40000d6a80000d8380000d8740000d9440000
d9a40000da500000dbc40000dc5c0000dd240000dd900000de200000dedc
0000df640000e0b00000e1180000e1fc0000e2f00000e3380000e3a80000
e5500000e5bc0000e6400000e6e80000e75c0000e8080000e8fc0000e9f8
0000eae40000ebcc0000ecf40000ee6c0000eff80000f1c80000f3340000
f3700000f4340000f5200000f5c80000f7040000f79c0000f8640000f8cc
0000f9580000fa140000fa9c0000fbd80000fc3c0000fd880000fe7c0000
fec40000ff3000010178000101e000010264000103040001037800010424
0001051800010614000106fc000107c0000108dc00010a1c00010abc0001
0bc800010c2000010c7c00010cac00010cfc00010d8c00010e5c00010f18
00010f9800011018000111640001129c000113c0000114e4000115680001
16b8000117700001185c000118e80001197000011a5800011b9c00011c98
00011d4800011df400011e6800011edc00011f4800011fb4000120080001
205c000120b0000121040001215000012184000121ec000122600001228c
000122b8000122e4000123140001237400012484000124b4000124f40001
253800012594000125f400012678000126a4000126d00001275400012780
000127ac000127ec00012908000129480001299c000129fc00012a8c0001
2af400012af400012b9400012c2c00012cfc00012d6c00012e6800012ed8
00012f480001304400013190000131e40001326c0001330c000133b00001
33f800013470000134f4000135d8000136bc0001379c0001380c00013918
00013a2000013af800013c1800013d7c00013ddc00013f48000140440001
409c00014154000142240001438c000143bc000144200001447c0001452c
000145e80001463c0001466c0001469c00014a7c00014ae000014b100001
4bb800014c1400014c4000014cc400014d0c00014d5000014db000014e0c
00014e3800014e6800014e9400014ec000014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014ef4
00014ef400014ef400014ef400014ef400014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014f30
00014f94000150bc000150e8000150fc00015154000151b4000151cc0001
5224000152dc0001545c000155c800015620000156bc00015758000157b0
0001592c000159d400015a2000015b3400015bd800015c9000015d8c0001
5e2400015f0000015f740001601c00016060000160c0000161000001612c
00016194000161dc0001622400016270000162bc000163300001635c0001
63a0000163cc000163f80001641000016420000164380001644800016460
00016470000164880001649c000164b4000164c4000164dc000164ec0001
65040001651c0001652c0001653c00016554000165740001658c0001659c
000165b4000165d4000165fc00016614000166240001663c0001665c0001
666c0001667c0001668c0001669c000166ac000166c4000166e4000166fc
0001670c00016724000167440001676c0001678400016794000167ac0001
67cc000167dc000167ec000167fc0001680c0001682c0001684c0001686c
000168840001689c000168b4000168cc000168e4000168fc000169140001
692c000169440001695c000169740001698c000169a4000169bc000169dc
000169fc00016a1c00016a3c00016a5c00016a7c00016a9c00016abc0001
6adc00016afc00016b1c00016b3c00016b5400016b6c00016b8400016b9c
00016bb400016bcc00016be400016bfc00016c1c00016c3c00016c540001
6c6c00016c8400016c9c00016cb400016ccc00016ce400016d0400016d24
00016d3c00016d5400016d6c00016d8400016d9c00016db400016dcc0001
6de400016dfc00016e1400016e2c00016e4400016e5c00016e7400016e8c
00016ea400016ebc00016ed400016eec00016f0400016f1c00016f340001
6f4c00016f6400016f7c00016f9400016fac00016fc400016fdc00016ff4
0001700c000170240001703c000170540001707400017094000170b40001
70d4000170ec0001710400017124000171440001715c0001717400017184
00017194000171ac000171c4000171dc000171f40001720c000172240001
723c000172540001726c000172840001729c000172b4000172cc000172e4
000172fc000173140001732c000173440001735c00017374000173940001
73b4000173d4000173f40001740c000174240001743c0001745400017474
00017494000174ac000174c4000174dc000174f40001750c000175240001
753c000175540001756c000175840001759c000175b4000175cc000175e4
000175fc0001761400017634000176540001766c000176840001769c0001
76b4000176cc000176e4000176fc0001771400017734000177540001776c
000177840001779c000177b4000177cc000177e4000177fc000178140001
782c000178440001785c000178740001788c000178a4000178bc000178d4
000178ec0001790400017924000179440001796400017984000179a40001
79c4000179e400017a0400017a1c00017a3400017a4c00017a6400017a7c
00017a9400017aac00017ac400017ae400017b0400017b1c00017b340001
7b4c00017b6400017b7c00017b9400017bb400017bd400017bf400017c14
00017c3400017c5400017c6c00017c8400017c9c00017cb400017ccc0001
7ce400017cfc00017d1400017d2c00017d4400017d5c00017d7400017d8c
00017da400017dc400017de400017e0400017e2400017e3c00017e540001
7e6c00017e8400017e9c00017eb400017ecc00017ee400017efc00017f14
00017f2c00017f4400017f5c00017f7400017f8c00017fa400017fbc0001
7fd400017fec000180040001801c000180340001804c000180640001807c
00018094000180ac000180c4000180dc000180f40001810c000181240001
813c000181540001816c0001818c000181ac000181cc000181ec0001820c
0001822c0001824c0001826c0001828c000182ac000182cc000182ec0001
830c0001832c0001834c0001836c0001838c000183ac000183cc000183ec
000184040001841c000184340001844c000184640001847c0001849c0001
84bc000184dc000184fc0001851c0001853c0001855c0001857c0001859c
000185bc000185d4000185ec000186040001861c000186340001864c0001
86640001867c0001869c000186bc000186dc000186fc0001871c0001873c
0001875c0001877c0001879c000187bc000187d4000187ec000188040001
881c000188340001884c000188640001887c00018894000188ac000188c4
000188dc000188f40001890c000189240001893c000189540001896c0001
89840001899c000189b4000189cc000189e4000189fc00018a1400018a2c
00018a4400018a5c00018a7400018a8c00018aa400018abc00018adc0001
8afc00018b1c00018b3c00018b5400018b6c00018b8400018b9c00018bb4
00018bcc00018be400018bfc00018c1400018c2c00018c4400018c5c0001
8c7400018c8c00018ca400018cbc00018cd400018cec00018d0400018d1c
00018d3400018d4c00018d6400018d7c00018d9400018dac00018dc40001
8ddc00018df400018e0c00018e2400018e3c00018e5400018e6c00018e7c
00018e8c00018ea400018ebc00018ed400018eec00018fa4000190040001
9184000191c0000191fc0001925c000192a400019324000194a4000194d4
0001953c0001958400019638000196bc0001971000019878000198dc0001
99b000019a0800019a5000019ab000019c4000019cac00019dec00019f54
00019fdc0001a0740001a1bc0001a3840001a41c0001a5940001a6e80001
a8000001a8a00001a99c0001aa0c0001aa780001aaf40001abf40001ac38
0001adb00001aef00001b0140001b12c0001b27c0001b2fc0001b37c0001
b5080001b5d40001b6880001b8200001b8d00001b9880001b9d40001ba34
0001ba980001baf40001bb500001bbac0001bbd80001bc080001bc640001
bcfc0001bda00001be100001be800001beac0001bed80001bf480001bfd4
0001c0440001c0d80001c2680001c3d40001c5340001c5900001c5ec0001
c6040001c61c0001c6340001c6540001c6740001c6940001c6b40001c6d4
0001c6ec0001c7040001c7240001c7440001c7640001c7840001c7a40001
c7c40001c7dc0001c7f40001c80c0001c82c0001c84c0001c86c0001c88c
0001c8a40001c8bc0001c8dc0001c8fc0001c9140001c92c0001c9440001
ca000001caf00001cb980001cc2c0001cd380001cd740001ce500001cf4c
0001cfc00001d0380001d1740001d2300001d3200001d3d00001d4640001
d53c0001d5800001d5e40001d6480001d8900001d9380001d99c0001da00
0001da2c0001da580001da700001da880001daa00001dab80001dae40001
db7c0001dc0c0001dc800001dcf40001dd840001de4c0001df940001e0d0
0001e1f40001e3540001e4380001e5500001e5c40001e7200001e7dc0001
e8980001e9d80001eab00001eb680001eca80001ee940001ef940001f104
0001f2500001f2b40001f3140001f3b00001f40c0001f43c0001f4680001
f4980001f4c40001f4f40001f51c0001f5480001f5740001f5d40001f670
0001f6b00001f6f00001f78c0001f8700001f8dc0001f9500001f9cc0001
fa600001fad40001fb4c0001fc300001fd140001fd540001fd940001fdd8
0001fe1c0001fe480001feb00001ff180001ff84000200e8000201500002
0180000201cc00020268000202ac000202f0000203300002037000020480
00020564000205b0000205f00002063000020680000206d0000207300002
07900002080c0002084c000208b0000208fc000209d000020a0c00020a0c
00020a0c00020a0c00020a0c00020a0c00020aa000020bac00020c240002
0c8800020d1000020d2800020dd000020f0c00020fb0000210240002109c
0002109c0002109c0002109c0002109c0002109c0002109c0002124c0002
1374000213f8000214e0000216340002168400021868000219cc00021a34
00021a5c00021a9c00021b5000021bfc00021ca800021dd000021e100002
1ebc00021ff40002207800022160000222b400022304000224e400022648
000226b0000226d800022718000227cc00022878000228dc000229f80002
2a3400022a7000022acc00022b4c00022d4000022e2000022e9800022f70
00022fc8000230a80002324000023280000232f800023310000233200002
34000002352c0002360c0002372c000237b4000238f80002397800023a20
00023ab000023c2c00023cb800023d6800023ec000024014000240680002
40c0000241ec000242040002421c000242340002424c000242640002427c
00024294000242ac000242c4000242dc000242f40002430c000243240002
433c000243540002436c000243840002439c000243b4000243cc000243e4
000243fc000244140002442c000244440002445c000244740002448c0002
44a4000244bc000244d4000244ec000245040002451c000245340002454c
000245640002457c00024594000245ac000245c4000245dc000245f40002
460c000246240002463c000246540002466c000246840002469c000246b4
000246cc000246e4000246fc000247140002472c000247440002475c0002
47740002478c000247a4000247bc000247d4000247ec000248040002481c
000248340002484c000248640002487c00024894000248ac000248c40002
48dc000248f40002490c000249240002493c000249540002496c00024984
0002499c000249b4000249cc000249e4000249fc00024a1400024a2c0002
4a4400024a5c00024a7400024a8c00024aa400024abc00024ad400024aec
00024b0400024b1c00024b3400024b4c00024b6400024b7c00024b940002
4bac00024bc400024bdc00024bf400024c0c00024c2400024c3c00024c54
00024c6c00024c8400024c9c00024cbc00024cdc00024cfc00024d1c0002
4d3c00024d5c00024d7c00024d9c00024dbc00024ddc00024dfc00024e1c
00024e3c00024e5c00024e7c00024e9c00024ebc00024edc00024efc0002
4f1c00024f3c00024f5c00024f7c00024f9c00024fbc00024fdc00024ffc
0002501c0002503c0002505c0002507c0002509c000250bc000250dc0002
50fc0002511c0002513c0002515c0002517c0002519c000251bc000251dc
000251fc0002521c0002523c0002525c0002527c0002529c000252b40002
52cc000252ec00025304000253240002533c0002535c000253740002538c
000253a4000253bc000253d4000253f40002540c0002542c000254440002
54640002547c00025494000254ac000254c4000254dc000254f40002550c
000255240002553c000255540002556c000255840002559c000255b40002
55cc000255e4000255fc000256140002562c000256440002565c00025674
0002568c000256a4000256bc000256d4000256ec00025704000257240002
573c0002575c0002577400025794000257ac000257c4000257dc000257f4
0002580c000258240002583c000258540002586c000258840002589c0002
58b4000258cc000258e4000258fc000259140002592c000259440002595c
000259740002598c00025a5c00025aa800025afc00025bb400025c200002
5c3800025c5800025c7800025c9800025cb800025cd800025cf800025d18
00025d3800025d5800025d7800025d9800025db800025dd800025df80002
5e1800025e3800025e5800025e7800025e9800025eb800025ed800025ef8
00025f1800025f3800025f5800025f7800025f9800025fb800025fd80002
5ff80002601800026038000260580002607800026098000260b8000260d8
000260f80002611800026138000261580002617800026198000261b80002
61d8000261f80002621800026238000262580002627800026298000262b8
000262d0000262e800026300000263180002633000026348000263600002
637800026390000263a8000263c0000263d8000263f00002640800026420
00026438000264500002646800026488000264a0000264b8000264d00002
64e800026500000265180002653000026548000265680002658000026598
000265b0000265c8000265e0000265f80002661000026628000266480002
66600002667800026690000266a8000266c0000266d8000266f000026708
0002672800026740000267580002677000026788000267a0000267b80002
68e000026a0c00026b8c00026be400026c9800026dac00026e6800026ea0
00026f4000026f5800027040000270dc000272d800027508000276e00002
78fc00027bb800027da000027f04000280280002814c0002824800028310
000284500002850400028580000285fc000286d8000287c4000288740002
891800028a0000028b1800028c1400028e7000028f5800028fa400028ff0
000290840002912c000291c400029260000292c80002932c000294000002
94d4000296c400029924000299b400029a3800029ac800029b5800029c88
00029dac00029e1000029e7800029f0800029f9c0002a0300002a0dc0002
a1600002a1f40002a2500002a2ac0002a3040002a35c0002a41c0002a4d4
0002a5800002a61c0002a6e00002a7680002a80c0002a8900002a9280002
a9a80002aaa00002ab900002ad200002aeac0002af400002aff80002b098
0002b1440002b31c0002b4380002b5540002b6dc0002b8100002b95c0002
baac0002bb1c0002bb840002bc280002bcdc0002bdac0002bee00002c02c
0002c0d00002c1780002c1a80002c2480002c2e00002c3280002c39c0002
c4c00002c6000002c67c0002c7240002c7740002c7e00002c8480002c920
0002ca040002cacc0002cba80002ccfc0002cdb00002ce580002ceec0002
cf2c0002cf8c0002cfd40002d0200002d04c0002d0d00002d12c0002d194
0002d1d80002d2940002d3300002d3b00002d40c0002d4a80002d5800002
d6000002d6800002d7200002d7f80002d88c0002d9240002da140002db40
0002dc180002dce80002ddb00002df180002dff80002e0fc0002e2080002
e2d80002e3cc0002e4c40002e5fc0002e7ac0002e89c0002e9a00002ea54
0002eafc0002ebc00002ecc00002ecfc0002ed380002ed740002edac0002
edf80002ee340002ee780002eebc0002ef100002ef640002efbc0002eff8
0002f0540002f0d80002f1900002f2480002f3980002f40c0002f4ec0002
f6480002f7500002f7900002f8c80002fa040002fa400002fafc0002fb34
0002fb6c0002fc240002fce00002fd280002fdf00002ff0c0002ffa40003
003c000300ac000300d800030104000301ac000301d4000302180003025c
000302bc000303040003038400030404000304fc0003054c000305780003
05a400030754000308c40003099400030a6800030b7c00030c2800030c90
00030d0c00030d7c00030e1000030e6c00030ebc00030eec00030f800003
111000031174000311c000031290000313640003143800031514000316fc
000317f0000318f4000319e000031af400031c6c00031c8400031c9c0003
1cb400031d1c00031db800031dfc00031e7400031ed800031f7000032058
0003227000032488000326300003265c00032688000326bc000326f00003
272c00032768000327a4000327e00003281c0003285800032894000328d0
000328fc000329e400032a3000032bb000032c5800032d7000032dd80003
2e8800032fac00033104000332400003338c000334c40003356000033664
0003382c00033ab800033ccc00033e3000033fa4000340580003422c0003
43d8000344300003448c00034530000345ec000346900003474c000347f8
000348b80003496400034a2400034ae400034ba000034c5c00034d180003
4dd400034e9400034f500003500c000350c800035188000351c400035210
0003525c000352a8000352e4000353a4000353f40003549c000354e00003
5608000357dc000358340003597800035ac000035afc00035b3800035b74
00035bb000035c0400035c5400035cc800035d9c00035e7800035e900003
5ea800035f84000360440003610400036288000364000003651c00036724
0003682c00036930000369dc00036a8c00036b8400036c8400036db00003
6e0000036e7000036f480003701000037128000371f80003727800037348
0003747000037518000375bc0003769000037760000377a4000379640003
7a0000037b8800037c5c00037dac00037ec000037f94000380a8000381cc
000382a80003845c000385c000038690000386e000038754000387f80003
883c000389fc00038a9800038bbc00038c8c00038de400038e8400038ed4
00038f500003910000039258000393ec00039580000396d8000398880003
998800039a6000039bc400039c2000039cd000039d2c00039dd400039e34
00039ee000039f3c00039fe80003a1580003a1c00003a2e40003a4f80003
a5680003a6980003a6e00003a7cc0003a9640003a9ec0003aad80003ac30
0003ac840003ae700003afdc0003b0200003b05c0003b0a00003b1740003
b2f00003b4c40003b6140003b8640003b9300003bab80003bd240003bee0
0003bfe80003c1640003c3a80003c4fc0003c6a00003c8480003c9d00003
cb400003ccc00003cda00003d0b40003d2ac0003d52c0003d6080003d7c0
0003d8b00003da780003dbe40003ddb80003ded00003e08c0003e2640003
e3d00003e6b00003e8ec0003eb3c0003ecd00003ee100003efdc0003f178
0003f3880003f40c0003f45c0003f54c0003f58000010000089500920009
006b0007000200100010005d000007e80a1d000400010000002701da0001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f006000010000000000040009007f0001
000000000005000800880001000000000006000900900001000000000007
003200990001000000000012000900cb0001000000000100000900d40001
000000000101001000dd0001000000000102000e00ed0001000000000103
001400fb00010000000001040012010f0001000000000105000901210001
000000010007002f012a0001000000020007003c01590001000000030007
003001950001000000040007003a01c50001000000050007003601ff0001
000000060007003002350001000000070007003c02650003000104040002
000602a10003000104060002000e02a70003000104070002000c02b50003
000104090002000e02c100030001040b0002001002cf00030001040c0002
000c02df0003000104100002001002eb0003000104110002000a02fb0003
0001041200020006030500030001041300020010030b0003000104140002
000c031b0003000104160002000c03270003000104190002000e03330003
0001041d0002000c034100030001080400020006034d000300010c010002
00080353000300010c0a0002000c035ba920313939302d32303036204170
706c6520436f6d707574657220496e632e20a92031393831204c696e6f74
79706520414720a920313939302d3931205479706520536f6c7574696f6e
7320496e632e48656c766574696361526567756c617248656c7665746963
613b2031302e30643165313b20323031342d30372d323148656c76657469
636131302e306431653148656c76657469636148656c7665746963612069
73206120726567697374657265642074726164656d61726b206f66204c69
6e6f7479706520414748656c7665746963614c6967617475726573436f6d
6d6f6e204c69676174757265734e756d6265722053706163696e6750726f
706f7274696f6e616c204e756d626572734d6f6e6f737061636564204e75
6d626572734e6f204368616e676548656c7665746963612065737420756e
65206d617271756520648e706f738e65206465204c696e6f747970652041
4748656c766574696361206973742065696e2065696e676574726167656e
657320576172656e7a65696368656e20646572204c696e6f747970652041
4748656c766574696361208f20756e206d61726368696f20726567697374
7261746f206469204c696e6f7479706520414748656c7665746963612069
732065656e20676572656769737472656572642068616e64656c736d6572
6b2076616e204c696e6f7479706520414748656c766574696361208a7220
65747420726567697374726572617420766172756d8a726b6520669a7220
4c696e6f7479706520414748656c76657469636120657320756e61206d61
7263612072656769737472616461206465204c696e6f7479706520414748
656c76657469636120657220657420726567697374726572657420766172
656dbe726b652074696c68bf72656e6465204c696e6f747970652041476a
196e969ad4004f007200640069006e00e60072004e006f0072006d006100
6c0052006500670075006c00610072004e006f0072006d00610061006c00
69004e006f0072006d0061006c005200650067006f006c00610072006530
ec30ae30e530e930fcc77cbc18ccb40052006500670075006c0069006500
72004e006f0072006d0061006c004e006f0072006d0061006c041e043104
4b0447043d044b0439004e006f0072006d0061006c5e3889c44f53063906
27062f064a004e006f0072006d0061006c000000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[16257 16277 16153 16221 16373 16377 16265 16181 16381 16269 16333 16361 16205
16201 16177 15441 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2720 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>Helvetica AddT42Char 
1 2856 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>Helvetica AddT42Char 
1 3152 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/period 17 def
/zero 19 def
/two 21 def
end
Helvetica /Encoding get
dup 46 /period put
dup 48 /zero put
dup 50 /two put
pop
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica /Helvetica findfont ct_VMDictPut/NLZQYP+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 205{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 489.368 mo(0.2)[-5.94177 -2.97086 0 ]yshgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 3776 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/four 23 def
end
Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 203{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 456.606 mo(0.4)[-5.94177 -2.97086 0 ]yshgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 4228 25 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/six 25 def
end
Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six 201{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 423.843 mo(0.6)[-5.94177 -2.97086 0 ]yshgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 4676 27 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/eight 27 def
end
Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six /.notdef /eight 199{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 391.081 mo(0.8)[-5.94177 -2.97086 0 ]yshgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 3076 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/one 20 def
end
Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 199{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 352.621 mo(1)shgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 325.557 mo(1.2)[-5.94177 -2.97086 0 ]yshgrestore
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 292.794 mo(1.4)[-5.94177 -2.97086 0 ]yshgrestore
45.477 512.424 mo
45.477 275.926 li
@
49.523 481.061 mo
45.477 481.061 li
@
47.5 472.876 mo
45.477 472.876 li
@
47.5 464.692 mo
45.477 464.692 li
@
47.5 456.508 mo
45.477 456.508 li
@
49.523 448.323 mo
45.477 448.323 li
@
47.5 440.139 mo
45.477 440.139 li
@
47.5 431.954 mo
45.477 431.954 li
@
47.5 423.77 mo
45.477 423.77 li
@
49.523 415.585 mo
45.477 415.585 li
@
47.5 407.401 mo
45.477 407.401 li
@
47.5 399.216 mo
45.477 399.216 li
@
47.5 391.032 mo
45.477 391.032 li
@
49.523 382.848 mo
45.477 382.848 li
@
47.5 374.663 mo
45.477 374.663 li
@
47.5 366.479 mo
45.477 366.479 li
@
47.5 358.294 mo
45.477 358.294 li
@
49.523 350.11 mo
45.477 350.11 li
@
47.5 341.925 mo
45.477 341.925 li
@
47.5 333.741 mo
45.477 333.741 li
@
47.5 325.556 mo
45.477 325.556 li
@
49.523 317.372 mo
45.477 317.372 li
@
47.5 309.188 mo
45.477 309.188 li
@
47.5 301.003 mo
45.477 301.003 li
@
47.5 292.819 mo
45.477 292.819 li
@
49.523 284.634 mo
45.477 284.634 li
@
49.523 481.061 mo
45.477 481.061 li
@
47.5 489.245 mo
45.477 489.245 li
@
47.5 497.43 mo
45.477 497.43 li
@
47.5 505.614 mo
45.477 505.614 li
@
49.523 284.634 mo
45.477 284.634 li
@
47.5 276.45 mo
45.477 276.45 li
@
211.475 512.424 mo
45.477 512.424 li
@
191.556 503.691 mo
191.556 512.424 li
@
184.916 508.057 mo
184.916 512.424 li
@
178.276 508.057 mo
178.276 512.424 li
@
171.636 508.057 mo
171.636 512.424 li
@
164.996 503.691 mo
164.996 512.424 li
@
158.356 508.057 mo
158.356 512.424 li
@
151.716 508.057 mo
151.716 512.424 li
@
145.076 508.057 mo
145.076 512.424 li
@
138.436 503.691 mo
138.436 512.424 li
@
131.796 508.057 mo
131.796 512.424 li
@
125.156 508.057 mo
125.156 512.424 li
@
118.516 508.057 mo
118.516 512.424 li
@
111.876 503.691 mo
111.876 512.424 li
@
105.236 508.057 mo
105.236 512.424 li
@
98.596 508.057 mo
98.596 512.424 li
@
91.957 508.057 mo
91.957 512.424 li
@
85.317 503.691 mo
85.317 512.424 li
@
78.677 508.057 mo
78.677 512.424 li
@
72.037 508.057 mo
72.037 512.424 li
@
65.397 508.057 mo
65.397 512.424 li
@
58.757 503.691 mo
58.757 512.424 li
@
191.556 503.691 mo
191.556 512.424 li
@
198.196 508.057 mo
198.196 512.424 li
@
204.836 508.057 mo
204.836 512.424 li
@
211.475 508.057 mo
211.475 512.424 li
@
58.757 503.691 mo
58.757 512.424 li
@
52.117 508.057 mo
52.117 512.424 li
@
45.477 508.057 mo
45.477 512.424 li
@
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf195.659 519.993 mo(0)sh168.594 534.95 mo(0.02)[-5.94177 -2.97089 -5.94171 0 ]ysh142.242 534.95 mo(0.04)[-5.94177 -2.97089 -5.94171 0 ]ysh115.89 534.95 mo(0.06)[-5.94177 -2.97089 -5.94171 0 ]ysh89.538 534.95 mo(0.08)[-5.94177 -2.97089 -5.94171 0 ]ysh62.473 527.115 mo(0.1)[-5.94177 -2.97089 0 ]ysh211.475 275.926 mo
45.477 275.926 li
@
191.556 284.658 mo
191.556 275.926 li
@
184.916 280.292 mo
184.916 275.926 li
@
178.276 280.292 mo
178.276 275.926 li
@
171.636 280.292 mo
171.636 275.926 li
@
164.996 284.658 mo
164.996 275.926 li
@
158.356 280.292 mo
158.356 275.926 li
@
151.716 280.292 mo
151.716 275.926 li
@
145.076 280.292 mo
145.076 275.926 li
@
138.436 284.658 mo
138.436 275.926 li
@
131.796 280.292 mo
131.796 275.926 li
@
125.156 280.292 mo
125.156 275.926 li
@
118.516 280.292 mo
118.516 275.926 li
@
111.876 284.658 mo
111.876 275.926 li
@
105.236 280.292 mo
105.236 275.926 li
@
98.596 280.292 mo
98.596 275.926 li
@
91.957 280.292 mo
91.957 275.926 li
@
85.317 284.658 mo
85.317 275.926 li
@
78.677 280.292 mo
78.677 275.926 li
@
72.037 280.292 mo
72.037 275.926 li
@
65.397 280.292 mo
65.397 275.926 li
@
58.757 284.658 mo
58.757 275.926 li
@
191.556 284.658 mo
191.556 275.926 li
@
198.196 280.292 mo
198.196 275.926 li
@
204.836 280.292 mo
204.836 275.926 li
@
211.475 280.292 mo
211.475 275.926 li
@
58.757 284.658 mo
58.757 275.926 li
@
52.117 280.292 mo
52.117 275.926 li
@
45.477 280.292 mo
45.477 275.926 li
@
gsave
211.475 567 mo
211.475 275.926 li
45.476 275.926 li
45.476 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if

1 0 3 <> Helvetica AddT42Char 
1 1072 8 <00050042ffda06d00592000b000f001b0027003300f04052060c250c0237
0e580c670c960ca70cc60cd70cf60c0868080d0e0e46120f0f0c0e0f1218
0c0d2a301b2421f215240d272d240bf23324050a0f0e3517171a2a2402f2
302408ea12241ef218242419343f52182b4e10f44dedfcedf6edfced4e45
6544e6002f3c4d3fedfcfd2fc4edf4ed011112393911123939872e2b7d10
c43130184379405200322e0a301b002c002a1b011a22181b001020121b01
1626181b00141c121b013206301b0028042a1b012f092d1b012b012d1b01
19231b1b00111f1b1b001725151b01131d151b013107331b002903331b00
002b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b81015d710016151406232226
353436330333012312363534262322061514163312161514062322263534
36330036353426232206151416330604cccc9091cccc91916ffcdf6f3279
79565579795591cccc9190cccc90042b7979555679795602b8cc9090cccc
9090cc02dafa4803687955557978565579022bcd9090cccc9090cdfb2179
55557979555579000000>Helvetica AddT42Char 
1 2660 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b90000
>Helvetica AddT42Char 
1 4528 26 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>Helvetica AddT42Char 
1 7880 42 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>Helvetica AddT42Char 
1 11000 57 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd000000>Helvetica AddT42Char 
1 13804 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/space 3 def
/percent 8 def
/hyphen 16 def
/seven 26 def
/G 42 def
/V 57 def
/e 72 def
end
Helvetica /Encoding get
dup 32 /space put
dup 37 /percent put
dup 45 /hyphen put
dup 55 /seven put
dup 71 /G put
dup 86 /V put
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 14{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp /e 154{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -15.6737 -15.6737 0 0 0 ]msf64.61 497.914 mo(27 GeV 0%-10%)[-8.7146 -8.71457 -4.35727 -12.1942 -8.71457 -10.4542 -4.3573 -8.71457 -13.9338 -5.21921 -8.71457 -8.7146 0 ]yshgrestore
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 6616 36 <0003001e0000053d05bd0002000a000b00da405048015801680103880397
04980aa90ab809b80a06280a010007060601020809090102080a00070501
8c01030420140a0a251209090114050525120606010b0b0503090a040605
010b02010300021e0708b80159400904030206090a030508b801a840120d
0d17171a059e019e0a190c0da1218c5e182b2b194ef4184dfdfd194e4565
44e6464418003f173c3f3c4dfd3cfd3c11393f011112393912393911392f
872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b003c01bb0
03c4592b1112393912393987103c3c07103c3c3130015d5d005d010b0113
3301230321032301038edfed85e10215da95fdbb9fcc0290025a0289fd77
0363fa4301b8fe4805bd>Helvetica AddT42Char 
1 12712 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>Helvetica AddT42Char 
1 13328 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>Helvetica AddT42Char 
1 14856 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>Helvetica AddT42Char 
1 15288 79 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>Helvetica AddT42Char 
1 15604 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>Helvetica AddT42Char 
1 16028 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>Helvetica AddT42Char 
2 232 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>Helvetica AddT42Char 
2 372 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>Helvetica AddT42Char 
2 820 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/A 36 def
/a 68 def
/c 70 def
/i 76 def
/l 79 def
/n 81 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
end
Helvetica /Encoding get
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t 139{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf80.991 481.533 mo(Antiparticles)[-8.07828 -6.73401 -3.367 -2.68857 -6.73398 -6.73398 -4.03305 -3.367 -2.68857 -6.05576 -2.68857 -6.73398 0 ]ysh96.657 502.13 mo
96.657 492.729 li
87.256 497.43 li
cp
f
95.09 500.564 mo
95.09 494.296 li
88.823 497.43 li
cp
0.999 0.999 0.999 rgb
f
0.75 lw
95.09 500.563 mo
95.09 494.296 li
88.823 497.43 li
cp
1 0.8 0 rgb
@
0 0 0 rgb
NLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf90.25 475.123 mo(-)shtrue set_gvm
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 112 /pi putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/pi <1C60D8A8C9B79676F4DD18DBFDF17BB128C9FFF22699F24B59533FE5E07ED6CEE94FB8357908C50BCDD6B70F4E7924C2FB68F929BCB277E7BC845662C54500C0C81E0BF52FBCAEF7F7B1F4667738FF84E496C448E4376718B2A904671C2C9B88D66FD1D8BA464B180C1411B54685EE1291C28B068BF72233CCA91BFF414760303897A050C0776AE6D539A2D620A1CFE532EFB6593401DDFC1D151612310049BE378C3A621B747D419B5C> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/NLZQYQ+Symbol /Symbol findfont ct_VMDictPut/NLZQYQ+Symbol*1 [112{/.notdef}rp /pi 143{/.notdef}rp]NLZQYQ+Symbol nfNLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf95.948 481.533 mo(p)sh105.236 501.66 mo
99.596 501.66 99.596 493.199 105.236 493.199 cv
110.877 493.199 110.877 501.66 105.236 501.66 cv
cp
f
105.236 500.564 mo
101.058 500.564 101.058 494.296 105.236 494.296 cv
109.415 494.296 109.415 500.564 105.236 500.564 cv
cp
0.999 0.999 0.999 rgb
f
105.236 500.564 mo
101.058 500.564 101.058 494.296 105.236 494.296 cv
109.415 494.296 109.415 500.564 105.236 500.564 cv
cp
0.2 0.4 1 rgb
f
0 0 0 rgb
NLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf101.645 475.123 mo(-)shNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf107.343 481.533 mo(p)sh122.747 497.43 mo
114.286 493.199 li
114.286 501.66 li
cp
f
121.65 497.43 mo
115.383 494.296 li
115.383 500.564 li
cp
0.999 0.999 0.999 rgb
f
121.65 497.43 mo
115.383 494.296 li
115.383 500.564 li
cp
0.6 0.6 0.6 rgb
f
0 0 0 rgb
true set_gvm
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)systemdict beginNLZQYQ+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Lambda <1C60D8A8C9B6232B7E1C7D5CC806BE95B37703306625FDAB4684CB3E2A79F5B1901217E94050ABDE85095071F326177C2A640D2CAFB56DAEA85FFBA6915B2144C2CFEC6F14CB97D17E95E656800C22F28819D5FC459D3274> |-systemdict /gcheck known {setglobal} if end {end} ifendNLZQYQ+Symbol /Encoding getdup 76 /Lambda putpop%ADOEndSubsetFont
reset_gvm
/NLZQYQ+Symbol*1 [76{/.notdef}rp /Lambda 35{/.notdef}rp /pi 143{/.notdef}rp]NLZQYQ+Symbol nfNLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf123.724 481.533 mo(L)sh1.5 lw
113.753 481.533 mo
113.753 472.987 li
@
126.939 497.43 mo
130.295 496.339 li
130.295 492.81 li
132.37 495.665 li
135.726 494.575 li
133.651 497.43 li
135.726 500.285 li
132.37 499.194 li
130.295 502.049 li
130.295 498.52 li
cp
f
128.662 497.43 mo
130.828 496.726 li
130.828 494.449 li
132.166 496.291 li
134.331 495.588 li
132.993 497.43 li
134.331 499.272 li
132.166 498.568 li
130.828 500.41 li
130.828 498.133 li
cp
0.999 0.999 0.999 rgb
f
128.662 497.43 mo
130.828 496.726 li
130.828 494.449 li
132.166 496.291 li
134.331 495.588 li
132.993 497.43 li
134.331 499.272 li
132.166 498.568 li
130.828 500.41 li
130.828 498.133 li
cp
0 0.6 0 rgb
f
0 0 0 rgb
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 8508 46 <0001009c0000054e05bd000b00ba407a0605250527084807580777058803
9803b803c803e7070ba603a60402050528082909a809f902050705070805
0903d4020105050608080709020228030325120404090605052512080807
050409080705040302070609080502040a040301020a0706086b067b06e8
0603061a0d010a250b00190c0dd621765e182b2b4ef43c4dfd3c194e10e6
5d18003f3c3c3f3c3c1217390111173908874d2e2b057d10c5872e182b04
104b52787ac510083c083c31300072715d01715d13331101210901210107
11239cc202cc0113fd9d0274fefdfdfeebc205bdfd3402ccfdb0fc9302e1
e1fe0000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/K 46 def
end
Helvetica /Encoding get
dup 75 /K put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 10{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t 139{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf138.681 472.987 mo(s)sh129.422 472.987 mo(0)shNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf135.12 481.533 mo(K)sh145.076 501.66 mo
139.435 501.66 139.435 493.199 145.076 493.199 cv
150.717 493.199 150.717 501.66 145.076 501.66 cv
cp
f
145.076 500.564 mo
140.898 500.564 140.898 494.296 145.076 494.296 cv
149.254 494.296 149.254 500.564 145.076 500.564 cv
cp
0.999 0.999 0.999 rgb
f
145.076 500.564 mo
140.898 500.564 140.898 494.296 145.076 494.296 cv
149.254 494.296 149.254 500.564 145.076 500.564 cv
cp
1 0 0 rgb
f
0 0 0 rgb
true set_gvm
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)systemdict beginNLZQYQ+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/phi <1C60D8A8C9B7B202FA70E5D913E85DBEA26431CA15D23170272CFFE17D051ED827955A3FB44F8C33E06AB56DEE6FD4527737281A8670E09920133655E078B066AEB50ED856BC5346837C9EA878F79B919656003C43B8A11643B4C5A94D8DF4C7D6E45B471EEE9FD8C89BFDF2173E61CE358396D48F5C326536DCCF> |-systemdict /gcheck known {setglobal} if end {end} ifendNLZQYQ+Symbol /Encoding getdup 102 /phi putpop%ADOEndSubsetFont
reset_gvm
/NLZQYQ+Symbol*1 [76{/.notdef}rp /Lambda 25{/.notdef}rp /phi 9{/.notdef}rp /pi 143{/.notdef}rp]NLZQYQ+Symbol nfNLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf147.228 481.533 mo(f)sh0.75 lw
[3 3 ] 0 dsh
191.556 513.799 mo
191.556 276.45 li
@
[] 0 dsh
195.577 462.237 mo
194.124 462.237 li
0.999 0.999 0.999 rgb
@
201.275 462.237 mo
202.728 462.237 li
@
198.426 465.313 mo
194.324 465.313 194.324 459.16 198.426 459.16 cv
202.528 459.16 202.528 465.313 198.426 465.313 cv
cp
194.722 435.849 mo
190.619 435.849 190.619 429.696 194.722 429.696 cv
198.824 429.696 198.824 435.849 194.722 435.849 cv
cp
182.335 401.475 mo
178.233 401.475 178.233 395.321 182.335 395.321 cv
186.438 395.321 186.438 401.475 182.335 401.475 cv
cp
173.943 372.011 mo
169.84 372.011 169.84 365.857 173.943 365.857 cv
178.045 365.857 178.045 372.011 173.943 372.011 cv
cp
155.715 337.636 mo
151.612 337.636 151.612 331.483 155.715 331.483 cv
159.817 331.483 159.817 337.636 155.715 337.636 cv
cp
135.882 308.172 mo
131.78 308.172 131.78 302.019 135.882 302.019 cv
139.984 302.019 139.984 308.172 135.882 308.172 cv
cp
0 0 0 rgb
f
196.289 462.237 mo
194.124 462.237 li
0.999 0.999 0.999 rgb
@
200.563 462.237 mo
202.728 462.237 li
@
198.426 464.516 mo
195.387 464.516 195.387 459.958 198.426 459.958 cv
201.465 459.958 201.465 464.516 198.426 464.516 cv
cp
194.722 435.052 mo
191.683 435.052 191.683 430.494 194.722 430.494 cv
197.761 430.494 197.761 435.052 194.722 435.052 cv
cp
182.335 400.677 mo
179.297 400.677 179.297 396.119 182.335 396.119 cv
185.374 396.119 185.374 400.677 182.335 400.677 cv
cp
173.943 371.213 mo
170.904 371.213 170.904 366.655 173.943 366.655 cv
176.982 366.655 176.982 371.213 173.943 371.213 cv
cp
155.715 336.838 mo
152.676 336.838 152.676 332.28 155.715 332.28 cv
158.754 332.28 158.754 336.838 155.715 336.838 cv
cp
135.882 307.374 mo
132.843 307.374 132.843 302.816 135.882 302.816 cv
138.921 302.816 138.921 307.374 135.882 307.374 cv
cp
f
196.289 462.237 mo
194.124 462.237 li
0 0 0 rgb
@
200.563 462.237 mo
202.728 462.237 li
@
198.426 464.516 mo
195.387 464.516 195.387 459.958 198.426 459.958 cv
201.465 459.958 201.465 464.516 198.426 464.516 cv
cp
194.722 435.052 mo
191.683 435.052 191.683 430.494 194.722 430.494 cv
197.761 430.494 197.761 435.052 194.722 435.052 cv
cp
182.335 400.677 mo
179.297 400.677 179.297 396.119 182.335 396.119 cv
185.374 396.119 185.374 400.677 182.335 400.677 cv
cp
173.943 371.213 mo
170.904 371.213 170.904 366.655 173.943 366.655 cv
176.982 366.655 176.982 371.213 173.943 371.213 cv
cp
155.715 336.838 mo
152.676 336.838 152.676 332.28 155.715 332.28 cv
158.754 332.28 158.754 336.838 155.715 336.838 cv
cp
135.882 307.374 mo
132.843 307.374 132.843 302.816 135.882 302.816 cv
138.921 302.816 138.921 307.374 135.882 307.374 cv
cp
0.2 0.6 1 rgb
f
176.571 470.566 mo
176.571 463.729 li
169.733 467.147 li
cp
163.446 436.191 mo
163.446 429.354 li
156.609 432.773 li
cp
149.711 406.727 mo
149.711 399.89 li
142.874 403.309 li
cp
138.094 372.353 mo
138.094 365.515 li
131.257 368.934 li
cp
128.954 342.889 mo
128.954 336.051 li
122.117 339.47 li
cp
121.277 308.514 mo
121.277 301.677 li
114.439 305.095 li
cp
0 0 0 rgb
f
175.431 469.426 mo
175.431 464.868 li
170.873 467.147 li
cp
162.307 435.052 mo
162.307 430.494 li
157.749 432.773 li
cp
148.572 405.588 mo
148.572 401.03 li
144.013 403.309 li
cp
136.955 371.213 mo
136.955 366.655 li
132.397 368.934 li
cp
127.815 341.749 mo
127.815 337.191 li
123.256 339.47 li
cp
120.137 307.374 mo
120.137 302.816 li
115.579 305.095 li
cp
0.999 0.999 0.999 rgb
f
175.431 469.426 mo
175.431 464.868 li
170.873 467.147 li
cp
162.307 435.052 mo
162.307 430.494 li
157.749 432.773 li
cp
148.572 405.588 mo
148.572 401.03 li
144.013 403.309 li
cp
136.955 371.213 mo
136.955 366.655 li
132.397 368.934 li
cp
127.815 341.749 mo
127.815 337.191 li
123.256 339.47 li
cp
120.137 307.374 mo
120.137 302.816 li
115.579 305.095 li
cp
1 0.6 0 rgb
@
185.064 463.792 mo
183.432 463.792 li
0.999 0.999 0.999 rgb
@
187.913 463.792 mo
189.546 463.792 li
@
173.346 431.054 mo
173.069 431.054 li
@
176.194 431.054 mo
176.471 431.054 li
@
146.983 365.578 mo
146.941 365.578 li
@
149.832 365.578 mo
149.874 365.578 li
@
135.058 332.841 mo
134.711 332.841 li
@
137.907 332.841 mo
138.254 332.841 li
@
126.272 301.74 mo
125.398 301.74 li
@
129.121 301.74 mo
129.994 301.74 li
@
182.956 463.792 mo
185.397 462.999 li
185.397 460.432 li
186.906 462.508 li
189.347 461.715 li
187.838 463.792 li
189.347 465.868 li
186.906 465.075 li
185.397 467.151 li
185.397 464.585 li
cp
171.237 431.054 mo
173.678 430.261 li
173.678 427.694 li
175.187 429.771 li
177.628 428.977 li
176.119 431.054 li
177.628 433.13 li
175.187 432.337 li
173.678 434.414 li
173.678 431.847 li
cp
157.52 398.316 mo
159.961 397.523 li
159.961 394.956 li
161.469 397.033 li
163.91 396.24 li
162.402 398.316 li
163.91 400.393 li
161.469 399.599 li
159.961 401.676 li
159.961 399.109 li
cp
144.875 365.578 mo
147.316 364.785 li
147.316 362.219 li
148.824 364.295 li
151.265 363.502 li
149.757 365.578 li
151.265 367.655 li
148.824 366.862 li
147.316 368.938 li
147.316 366.371 li
cp
132.95 332.841 mo
135.391 332.048 li
135.391 329.481 li
136.899 331.557 li
139.34 330.764 li
137.832 332.841 li
139.34 334.917 li
136.899 334.124 li
135.391 336.2 li
135.391 333.634 li
cp
124.164 301.74 mo
126.605 300.947 li
126.605 298.38 li
128.113 300.456 li
130.554 299.663 li
129.046 301.74 li
130.554 303.816 li
128.113 303.023 li
126.605 305.099 li
126.605 302.533 li
cp
0 0 0 rgb
f
185.42 463.792 mo
183.432 463.792 li
0.999 0.999 0.999 rgb
@
187.557 463.792 mo
189.546 463.792 li
@
173.702 431.054 mo
173.069 431.054 li
@
175.838 431.054 mo
176.471 431.054 li
@
159.984 398.316 mo
159.655 398.316 li
@
162.121 398.316 mo
162.45 398.316 li
@
147.339 365.578 mo
146.941 365.578 li
@
149.476 365.578 mo
149.874 365.578 li
@
135.414 332.841 mo
134.711 332.841 li
@
137.551 332.841 mo
138.254 332.841 li
@
126.628 301.74 mo
125.398 301.74 li
@
128.765 301.74 mo
129.994 301.74 li
@
184.209 463.792 mo
185.784 463.28 li
185.784 461.624 li
186.758 462.964 li
188.332 462.452 li
187.359 463.792 li
188.332 465.131 li
186.758 464.62 li
185.784 465.959 li
185.784 464.303 li
cp
172.491 431.054 mo
174.066 430.542 li
174.066 428.886 li
175.039 430.226 li
176.614 429.714 li
175.641 431.054 li
176.614 432.394 li
175.039 431.882 li
174.066 433.221 li
174.066 431.566 li
cp
158.773 398.316 mo
160.348 397.804 li
160.348 396.149 li
161.321 397.488 li
162.896 396.977 li
161.923 398.316 li
162.896 399.656 li
161.321 399.144 li
160.348 400.484 li
160.348 398.828 li
cp
146.128 365.578 mo
147.703 365.067 li
147.703 363.411 li
148.676 364.75 li
150.251 364.239 li
149.278 365.578 li
150.251 366.918 li
148.676 366.406 li
147.703 367.746 li
147.703 366.09 li
cp
134.203 332.841 mo
135.778 332.329 li
135.778 330.673 li
136.751 332.013 li
138.326 331.501 li
137.353 332.841 li
138.326 334.18 li
136.751 333.669 li
135.778 335.008 li
135.778 333.352 li
cp
125.417 301.74 mo
126.992 301.228 li
126.992 299.572 li
127.965 300.912 li
129.54 300.4 li
128.567 301.74 li
129.54 303.079 li
127.965 302.568 li
126.992 303.907 li
126.992 302.251 li
cp
f
185.42 463.792 mo
183.432 463.792 li
0 0 0 rgb
@
187.557 463.792 mo
189.546 463.792 li
@
173.702 431.054 mo
173.069 431.054 li
@
175.838 431.054 mo
176.471 431.054 li
@
159.984 398.316 mo
159.655 398.316 li
@
162.121 398.316 mo
162.45 398.316 li
@
147.339 365.578 mo
146.941 365.578 li
@
149.476 365.578 mo
149.874 365.578 li
@
135.414 332.841 mo
134.711 332.841 li
@
137.551 332.841 mo
138.254 332.841 li
@
126.628 301.74 mo
125.398 301.74 li
@
128.765 301.74 mo
129.994 301.74 li
@
184.209 463.792 mo
185.784 463.28 li
185.784 461.624 li
186.758 462.964 li
188.332 462.452 li
187.359 463.792 li
188.332 465.131 li
186.758 464.62 li
185.784 465.959 li
185.784 464.303 li
cp
172.491 431.054 mo
174.066 430.542 li
174.066 428.886 li
175.039 430.226 li
176.614 429.714 li
175.641 431.054 li
176.614 432.394 li
175.039 431.882 li
174.066 433.221 li
174.066 431.566 li
cp
158.773 398.316 mo
160.348 397.804 li
160.348 396.149 li
161.321 397.488 li
162.896 396.977 li
161.923 398.316 li
162.896 399.656 li
161.321 399.144 li
160.348 400.484 li
160.348 398.828 li
cp
146.128 365.578 mo
147.703 365.067 li
147.703 363.411 li
148.676 364.75 li
150.251 364.239 li
149.278 365.578 li
150.251 366.918 li
148.676 366.406 li
147.703 367.746 li
147.703 366.09 li
cp
134.203 332.841 mo
135.778 332.329 li
135.778 330.673 li
136.751 332.013 li
138.326 331.501 li
137.353 332.841 li
138.326 334.18 li
136.751 333.669 li
135.778 335.008 li
135.778 333.352 li
cp
125.417 301.74 mo
126.992 301.228 li
126.992 299.572 li
127.965 300.912 li
129.54 300.4 li
128.567 301.74 li
129.54 303.079 li
127.965 302.568 li
126.992 303.907 li
126.992 302.251 li
cp
0 0.8 0 rgb
f
176.682 433.018 mo
170.099 433.018 li
0.999 0.999 0.999 rgb
@
182.38 433.018 mo
188.963 433.018 li
@
186.281 398.316 mo
183.72 398.316 li
@
191.979 398.316 mo
194.539 398.316 li
@
171.692 365.742 mo
170.304 365.742 li
@
177.39 365.742 mo
178.779 365.742 li
@
166.266 332.841 mo
165.157 332.841 li
@
171.964 332.841 mo
173.074 332.841 li
@
143.211 301.74 mo
141.927 301.74 li
@
148.909 301.74 mo
150.192 301.74 li
@
182.608 433.018 mo
176.454 429.941 li
176.454 436.095 li
cp
192.207 398.316 mo
186.053 395.239 li
186.053 401.393 li
cp
177.618 365.742 mo
171.464 362.665 li
171.464 368.819 li
cp
172.192 332.841 mo
166.038 329.764 li
166.038 335.917 li
cp
149.136 301.74 mo
142.983 298.663 li
142.983 304.817 li
cp
0 0 0 rgb
f
177.394 433.018 mo
170.099 433.018 li
0.999 0.999 0.999 rgb
@
181.668 433.018 mo
188.963 433.018 li
@
186.993 398.316 mo
183.72 398.316 li
@
191.267 398.316 mo
194.539 398.316 li
@
172.404 365.742 mo
170.304 365.742 li
@
176.678 365.742 mo
178.779 365.742 li
@
166.979 332.841 mo
165.157 332.841 li
@
171.252 332.841 mo
173.074 332.841 li
@
143.923 301.74 mo
141.927 301.74 li
@
148.196 301.74 mo
150.192 301.74 li
@
181.81 433.018 mo
177.252 430.739 li
177.252 435.297 li
cp
191.409 398.316 mo
186.851 396.037 li
186.851 400.595 li
cp
176.82 365.742 mo
172.262 363.463 li
172.262 368.021 li
cp
171.394 332.841 mo
166.836 330.561 li
166.836 335.12 li
cp
148.339 301.74 mo
143.781 299.461 li
143.781 304.019 li
cp
f
177.394 433.018 mo
170.099 433.018 li
0 0 0 rgb
@
181.668 433.018 mo
188.963 433.018 li
@
186.993 398.316 mo
183.72 398.316 li
@
191.267 398.316 mo
194.539 398.316 li
@
172.404 365.742 mo
170.304 365.742 li
@
176.678 365.742 mo
178.779 365.742 li
@
166.979 332.841 mo
165.157 332.841 li
@
171.252 332.841 mo
173.074 332.841 li
@
143.923 301.74 mo
141.927 301.74 li
@
148.196 301.74 mo
150.192 301.74 li
@
181.81 433.018 mo
177.252 430.739 li
177.252 435.297 li
cp
191.409 398.316 mo
186.851 396.037 li
186.851 400.595 li
cp
176.82 365.742 mo
172.262 363.463 li
172.262 368.021 li
cp
171.394 332.841 mo
166.836 330.561 li
166.836 335.12 li
cp
148.339 301.74 mo
143.781 299.461 li
143.781 304.019 li
cp
0.8 0.8 0.8 rgb
f
159.904 386.694 mo
148.346 386.694 li
0.999 0.999 0.999 rgb
@
165.602 386.694 mo
177.16 386.694 li
@
154.103 301.085 mo
144.774 301.085 li
@
159.801 301.085 mo
169.13 301.085 li
@
162.753 389.771 mo
158.651 389.771 158.651 383.617 162.753 383.617 cv
166.855 383.617 166.855 389.771 162.753 389.771 cv
cp
156.952 304.162 mo
152.85 304.162 152.85 298.008 156.952 298.008 cv
161.055 298.008 161.055 304.162 156.952 304.162 cv
cp
0 0 0 rgb
f
160.616 386.694 mo
148.346 386.694 li
0.999 0.999 0.999 rgb
@
164.89 386.694 mo
177.16 386.694 li
@
154.816 301.085 mo
144.774 301.085 li
@
159.089 301.085 mo
169.13 301.085 li
@
162.753 388.973 mo
159.714 388.973 159.714 384.415 162.753 384.415 cv
165.792 384.415 165.792 388.973 162.753 388.973 cv
cp
156.952 303.364 mo
153.914 303.364 153.914 298.806 156.952 298.806 cv
159.991 298.806 159.991 303.364 156.952 303.364 cv
cp
f
160.616 386.694 mo
148.346 386.694 li
0 0 0 rgb
@
164.89 386.694 mo
177.16 386.694 li
@
154.816 301.085 mo
144.774 301.085 li
@
159.089 301.085 mo
169.13 301.085 li
@
162.753 388.973 mo
159.714 388.973 159.714 384.415 162.753 384.415 cv
165.792 384.415 165.792 388.973 162.753 388.973 cv
cp
156.952 303.364 mo
153.914 303.364 153.914 298.806 156.952 298.806 cv
159.991 298.806 159.991 303.364 156.952 303.364 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
191.615 511.448 mo
191.752 509.498 li
191.966 507.547 li
192.253 505.597 li
192.608 503.646 li
193.023 501.696 li
193.491 499.745 li
194.004 497.795 li
194.552 495.844 li
195.127 493.894 li
195.719 491.943 li
196.321 489.993 li
196.924 488.042 li
197.52 486.092 li
198.102 484.141 li
198.663 482.191 li
199.199 480.24 li
199.704 478.29 li
200.174 476.339 li
200.606 474.389 li
200.997 472.438 li
201.344 470.487 li
201.646 468.537 li
201.902 466.586 li
202.112 464.636 li
202.275 462.685 li
202.391 460.735 li
202.461 458.784 li
202.485 456.834 li
202.465 454.883 li
202.401 452.933 li
202.294 450.982 li
202.147 449.032 li
201.959 447.081 li
201.733 445.131 li
201.471 443.18 li
201.172 441.23 li
200.84 439.279 li
200.475 437.329 li
200.079 435.378 li
199.654 433.428 li
199.2 431.477 li
198.72 429.527 li
198.214 427.576 li
197.683 425.626 li
197.13 423.675 li
196.555 421.725 li
195.959 419.774 li
195.344 417.824 li
194.711 415.873 li
@
194.711 415.873 mo
194.06 413.923 li
193.392 411.972 li
192.709 410.022 li
192.011 408.071 li
191.299 406.12 li
190.575 404.17 li
189.838 402.219 li
189.089 400.269 li
188.33 398.318 li
187.561 396.368 li
186.782 394.417 li
185.993 392.467 li
185.197 390.516 li
184.392 388.566 li
183.581 386.615 li
182.762 384.665 li
181.936 382.714 li
181.105 380.764 li
180.268 378.813 li
179.426 376.863 li
178.578 374.912 li
177.727 372.962 li
176.87 371.011 li
176.01 369.061 li
175.147 367.11 li
174.279 365.16 li
173.409 363.209 li
172.536 361.259 li
171.66 359.308 li
170.782 357.358 li
169.901 355.407 li
169.018 353.457 li
168.134 351.506 li
167.248 349.556 li
166.36 347.605 li
165.471 345.654 li
164.58 343.704 li
163.689 341.753 li
162.796 339.803 li
161.903 337.852 li
161.009 335.902 li
160.114 333.951 li
159.219 332.001 li
158.323 330.05 li
157.427 328.1 li
156.531 326.149 li
155.634 324.199 li
154.738 322.248 li
153.841 320.298 li
@
153.841 320.298 mo
152.945 318.347 li
@
153.918 320.466 mo
153.753 320.106 li
153.587 319.745 li
153.422 319.385 li
153.256 319.025 li
153.091 318.665 li
152.925 318.305 li
152.76 317.945 li
152.594 317.585 li
152.429 317.225 li
152.263 316.865 li
152.098 316.504 li
151.932 316.144 li
151.767 315.784 li
151.601 315.424 li
151.436 315.064 li
151.27 314.704 li
151.105 314.344 li
150.939 313.984 li
150.774 313.624 li
150.608 313.263 li
150.443 312.903 li
150.277 312.543 li
150.112 312.183 li
149.947 311.823 li
149.781 311.463 li
149.616 311.103 li
149.45 310.743 li
149.285 310.383 li
149.12 310.022 li
148.954 309.662 li
148.789 309.302 li
148.624 308.942 li
148.458 308.582 li
148.293 308.222 li
148.128 307.862 li
147.963 307.502 li
147.797 307.141 li
147.632 306.781 li
147.467 306.421 li
147.302 306.061 li
147.136 305.701 li
146.971 305.341 li
146.806 304.981 li
146.641 304.621 li
146.476 304.261 li
146.311 303.9 li
146.146 303.54 li
145.981 303.18 li
145.815 302.82 li
@
145.815 302.82 mo
145.65 302.46 li
145.485 302.1 li
145.32 301.74 li
145.155 301.38 li
144.99 301.02 li
144.825 300.659 li
144.66 300.299 li
144.495 299.939 li
144.331 299.579 li
144.166 299.219 li
144.001 298.859 li
143.836 298.499 li
143.671 298.139 li
143.506 297.778 li
143.341 297.418 li
143.177 297.058 li
143.012 296.698 li
142.847 296.338 li
142.682 295.978 li
142.518 295.618 li
142.353 295.258 li
142.188 294.898 li
142.024 294.537 li
141.859 294.177 li
141.695 293.817 li
141.53 293.457 li
141.365 293.097 li
141.201 292.737 li
141.036 292.377 li
140.872 292.017 li
140.707 291.656 li
140.543 291.296 li
140.379 290.936 li
140.214 290.576 li
140.05 290.216 li
139.885 289.856 li
139.721 289.496 li
139.557 289.136 li
139.392 288.776 li
139.228 288.415 li
139.064 288.055 li
138.9 287.695 li
138.736 287.335 li
138.571 286.975 li
138.407 286.615 li
138.243 286.255 li
138.079 285.895 li
137.915 285.535 li
137.751 285.174 li
@
137.751 285.174 mo
137.587 284.814 li
@
[] 0 dsh
191.629 511.448 mo
191.801 509.498 li
192.07 507.547 li
192.43 505.597 li
192.876 503.646 li
193.398 501.696 li
193.989 499.745 li
194.637 497.795 li
195.333 495.844 li
196.067 493.894 li
196.826 491.943 li
197.601 489.993 li
198.383 488.042 li
199.161 486.092 li
199.928 484.141 li
200.675 482.191 li
201.397 480.24 li
202.086 478.29 li
202.738 476.339 li
203.35 474.389 li
203.916 472.438 li
204.435 470.487 li
204.904 468.537 li
205.323 466.586 li
205.69 464.636 li
206.005 462.685 li
206.267 460.735 li
206.478 458.784 li
206.637 456.834 li
206.746 454.883 li
206.806 452.933 li
206.818 450.982 li
206.783 449.032 li
206.703 447.081 li
206.579 445.131 li
206.413 443.18 li
206.207 441.23 li
205.962 439.279 li
205.68 437.329 li
205.363 435.378 li
205.011 433.428 li
204.627 431.477 li
204.213 429.527 li
203.768 427.576 li
203.296 425.626 li
202.797 423.675 li
202.274 421.725 li
201.726 419.774 li
201.155 417.824 li
200.563 415.873 li
0.8 0.8 0.8 rgb
@
200.563 415.873 mo
199.951 413.923 li
199.319 411.972 li
198.669 410.022 li
198.002 408.071 li
197.319 406.12 li
196.62 404.17 li
195.907 402.219 li
195.18 400.269 li
194.44 398.318 li
193.688 396.368 li
192.924 394.417 li
192.15 392.467 li
191.365 390.516 li
190.571 388.566 li
189.768 386.615 li
188.956 384.665 li
188.137 382.714 li
187.31 380.764 li
186.476 378.813 li
185.636 376.863 li
184.789 374.912 li
183.937 372.962 li
183.079 371.011 li
182.217 369.061 li
181.349 367.11 li
180.478 365.16 li
179.602 363.209 li
178.723 361.259 li
177.84 359.308 li
176.953 357.358 li
176.064 355.407 li
175.172 353.457 li
174.278 351.506 li
173.381 349.556 li
172.482 347.605 li
171.581 345.654 li
170.678 343.704 li
169.774 341.753 li
168.868 339.803 li
167.96 337.852 li
167.052 335.902 li
166.143 333.951 li
165.232 332.001 li
164.321 330.05 li
163.409 328.1 li
162.497 326.149 li
161.584 324.199 li
160.67 322.248 li
159.756 320.298 li
@
159.756 320.298 mo
158.842 318.347 li
@
159.835 320.466 mo
159.666 320.106 li
159.498 319.745 li
159.329 319.385 li
159.16 319.025 li
158.991 318.665 li
158.823 318.305 li
158.654 317.945 li
158.485 317.585 li
158.316 317.225 li
158.148 316.865 li
157.979 316.504 li
157.81 316.144 li
157.641 315.784 li
157.473 315.424 li
157.304 315.064 li
157.135 314.704 li
156.966 314.344 li
156.797 313.984 li
156.629 313.624 li
156.46 313.263 li
156.291 312.903 li
156.122 312.543 li
155.954 312.183 li
155.785 311.823 li
155.616 311.463 li
155.447 311.103 li
155.278 310.743 li
155.11 310.383 li
154.941 310.022 li
154.772 309.662 li
154.603 309.302 li
154.435 308.942 li
154.266 308.582 li
154.097 308.222 li
153.929 307.862 li
153.76 307.502 li
153.591 307.141 li
153.422 306.781 li
153.254 306.421 li
153.085 306.061 li
152.916 305.701 li
152.748 305.341 li
152.579 304.981 li
152.41 304.621 li
152.242 304.261 li
152.073 303.9 li
151.905 303.54 li
151.736 303.18 li
151.567 302.82 li
@
151.567 302.82 mo
151.399 302.46 li
151.23 302.1 li
151.062 301.74 li
150.893 301.38 li
150.725 301.02 li
150.556 300.659 li
150.388 300.299 li
150.219 299.939 li
150.051 299.579 li
149.882 299.219 li
149.714 298.859 li
149.545 298.499 li
149.377 298.139 li
149.209 297.778 li
149.04 297.418 li
148.872 297.058 li
148.703 296.698 li
148.535 296.338 li
148.367 295.978 li
148.198 295.618 li
148.03 295.258 li
147.862 294.898 li
147.694 294.537 li
147.525 294.177 li
147.357 293.817 li
147.189 293.457 li
147.021 293.097 li
146.853 292.737 li
146.685 292.377 li
146.516 292.017 li
146.348 291.656 li
146.18 291.296 li
146.012 290.936 li
145.844 290.576 li
145.676 290.216 li
145.508 289.856 li
145.34 289.496 li
145.172 289.136 li
145.004 288.776 li
144.836 288.415 li
144.668 288.055 li
144.501 287.695 li
144.333 287.335 li
144.165 286.975 li
143.997 286.615 li
143.829 286.255 li
143.662 285.895 li
143.494 285.535 li
143.326 285.174 li
@
143.326 285.174 mo
143.158 284.814 li
@
191.534 511.448 mo
191.483 509.498 li
191.403 507.547 li
191.293 505.597 li
191.154 503.646 li
190.987 501.696 li
190.793 499.745 li
190.571 497.795 li
190.324 495.844 li
190.051 493.894 li
189.753 491.943 li
189.432 489.993 li
189.088 488.042 li
188.722 486.092 li
188.335 484.141 li
187.927 482.191 li
187.5 480.24 li
187.055 478.29 li
186.591 476.339 li
186.11 474.389 li
185.613 472.438 li
185.1 470.487 li
184.572 468.537 li
184.029 466.586 li
183.473 464.636 li
182.903 462.685 li
182.321 460.735 li
181.726 458.784 li
181.12 456.834 li
180.504 454.883 li
179.876 452.933 li
179.239 450.982 li
178.592 449.032 li
177.936 447.081 li
177.272 445.131 li
176.6 443.18 li
175.919 441.23 li
175.232 439.279 li
174.538 437.329 li
173.837 435.378 li
173.13 433.428 li
172.417 431.477 li
171.699 429.527 li
170.975 427.576 li
170.247 425.626 li
169.514 423.675 li
168.777 421.725 li
168.036 419.774 li
167.291 417.824 li
166.543 415.873 li
0 0.8 0 rgb
@
166.543 415.873 mo
165.791 413.923 li
165.036 411.972 li
164.279 410.022 li
163.519 408.071 li
162.756 406.12 li
161.991 404.17 li
161.224 402.219 li
160.455 400.269 li
159.684 398.318 li
158.912 396.368 li
158.138 394.417 li
157.362 392.467 li
156.586 390.516 li
155.808 388.566 li
155.029 386.615 li
154.248 384.665 li
153.468 382.714 li
152.686 380.764 li
151.903 378.813 li
151.12 376.863 li
150.336 374.912 li
149.552 372.962 li
148.767 371.011 li
147.982 369.061 li
147.197 367.11 li
146.411 365.16 li
145.625 363.209 li
144.839 361.259 li
144.053 359.308 li
143.266 357.358 li
142.48 355.407 li
141.693 353.457 li
140.907 351.506 li
140.12 349.556 li
139.333 347.605 li
138.547 345.654 li
137.761 343.704 li
136.974 341.753 li
136.188 339.803 li
135.402 337.852 li
134.616 335.902 li
133.831 333.951 li
133.045 332.001 li
132.26 330.05 li
131.475 328.1 li
130.69 326.149 li
129.906 324.199 li
129.121 322.248 li
128.337 320.298 li
@
128.337 320.298 mo
127.554 318.347 li
@
128.405 320.466 mo
128.26 320.106 li
128.115 319.745 li
127.971 319.385 li
127.826 319.025 li
127.681 318.665 li
127.537 318.305 li
127.392 317.945 li
127.247 317.585 li
127.103 317.225 li
126.958 316.865 li
126.813 316.504 li
126.669 316.144 li
126.524 315.784 li
126.38 315.424 li
126.235 315.064 li
126.091 314.704 li
125.946 314.344 li
125.801 313.984 li
125.657 313.624 li
125.512 313.263 li
125.368 312.903 li
125.223 312.543 li
125.079 312.183 li
124.934 311.823 li
124.79 311.463 li
124.645 311.103 li
124.501 310.743 li
124.356 310.383 li
124.212 310.022 li
124.068 309.662 li
123.923 309.302 li
123.779 308.942 li
123.634 308.582 li
123.49 308.222 li
123.346 307.862 li
123.201 307.502 li
123.057 307.141 li
122.912 306.781 li
122.768 306.421 li
122.624 306.061 li
122.48 305.701 li
122.335 305.341 li
122.191 304.981 li
122.047 304.621 li
121.902 304.261 li
121.758 303.9 li
121.614 303.54 li
121.47 303.18 li
121.325 302.82 li
@
121.325 302.82 mo
121.181 302.46 li
121.037 302.1 li
120.893 301.74 li
120.749 301.38 li
120.604 301.02 li
120.46 300.659 li
120.316 300.299 li
120.172 299.939 li
120.028 299.579 li
119.884 299.219 li
119.74 298.859 li
119.596 298.499 li
119.452 298.139 li
119.307 297.778 li
119.163 297.418 li
119.019 297.058 li
118.875 296.698 li
118.731 296.338 li
118.587 295.978 li
118.443 295.618 li
118.299 295.258 li
118.155 294.898 li
118.011 294.537 li
117.867 294.177 li
117.723 293.817 li
117.58 293.457 li
117.436 293.097 li
117.292 292.737 li
117.148 292.377 li
117.004 292.017 li
116.86 291.656 li
116.716 291.296 li
116.572 290.936 li
116.428 290.576 li
116.285 290.216 li
116.141 289.856 li
115.997 289.496 li
115.853 289.136 li
115.709 288.776 li
115.566 288.415 li
115.422 288.055 li
115.278 287.695 li
115.134 287.335 li
114.991 286.975 li
114.847 286.615 li
114.703 286.255 li
114.56 285.895 li
114.416 285.535 li
114.272 285.174 li
@
114.272 285.174 mo
114.129 284.814 li
@
191.602 511.448 mo
191.71 509.498 li
191.879 507.547 li
192.104 505.597 li
192.382 503.646 li
192.706 501.696 li
193.071 499.745 li
193.468 497.795 li
193.892 495.844 li
194.333 493.894 li
194.785 491.943 li
195.241 489.993 li
195.693 488.042 li
196.136 486.092 li
196.563 484.141 li
196.969 482.191 li
197.349 480.24 li
197.7 478.29 li
198.017 476.339 li
198.299 474.389 li
198.543 472.438 li
198.747 470.487 li
198.91 468.537 li
199.031 466.586 li
199.111 464.636 li
199.148 462.685 li
199.143 460.735 li
199.097 458.784 li
199.01 456.834 li
198.884 454.883 li
198.719 452.933 li
198.516 450.982 li
198.276 449.032 li
198.001 447.081 li
197.693 445.131 li
197.352 443.18 li
196.979 441.23 li
196.577 439.279 li
196.146 437.329 li
195.688 435.378 li
195.204 433.428 li
194.695 431.477 li
194.163 429.527 li
193.609 427.576 li
193.034 425.626 li
192.439 423.675 li
191.824 421.725 li
191.193 419.774 li
190.544 417.824 li
189.879 415.873 li
0.2 0.6 1 rgb
@
189.879 415.873 mo
189.199 413.923 li
188.505 411.972 li
187.798 410.022 li
187.078 408.071 li
186.347 406.12 li
185.604 404.17 li
184.851 402.219 li
184.089 400.269 li
183.317 398.318 li
182.536 396.368 li
181.748 394.417 li
180.952 392.467 li
180.148 390.516 li
179.339 388.566 li
178.523 386.615 li
177.701 384.665 li
176.874 382.714 li
176.042 380.764 li
175.206 378.813 li
174.365 376.863 li
173.52 374.912 li
172.672 372.962 li
171.82 371.011 li
170.965 369.061 li
170.107 367.11 li
169.246 365.16 li
168.383 363.209 li
167.518 361.259 li
166.651 359.308 li
165.782 357.358 li
164.911 355.407 li
164.038 353.457 li
163.164 351.506 li
162.289 349.556 li
161.413 347.605 li
160.536 345.654 li
159.658 343.704 li
158.78 341.753 li
157.9 339.803 li
157.021 337.852 li
156.14 335.902 li
155.26 333.951 li
154.379 332.001 li
153.498 330.05 li
152.617 328.1 li
151.736 326.149 li
150.855 324.199 li
149.974 322.248 li
149.093 320.298 li
@
149.093 320.298 mo
148.213 318.347 li
@
149.169 320.466 mo
149.007 320.106 li
148.844 319.745 li
148.681 319.385 li
148.519 319.025 li
148.356 318.665 li
148.194 318.305 li
148.031 317.945 li
147.869 317.585 li
147.706 317.225 li
147.544 316.865 li
147.381 316.504 li
147.219 316.144 li
147.056 315.784 li
146.894 315.424 li
146.731 315.064 li
146.569 314.704 li
146.406 314.344 li
146.244 313.984 li
146.081 313.624 li
145.919 313.263 li
145.757 312.903 li
145.594 312.543 li
145.432 312.183 li
145.269 311.823 li
145.107 311.463 li
144.945 311.103 li
144.783 310.743 li
144.62 310.383 li
144.458 310.022 li
144.296 309.662 li
144.133 309.302 li
143.971 308.942 li
143.809 308.582 li
143.647 308.222 li
143.485 307.862 li
143.322 307.502 li
143.16 307.141 li
142.998 306.781 li
142.836 306.421 li
142.674 306.061 li
142.512 305.701 li
142.35 305.341 li
142.188 304.981 li
142.026 304.621 li
141.864 304.261 li
141.702 303.9 li
141.54 303.54 li
141.378 303.18 li
141.216 302.82 li
@
141.216 302.82 mo
141.054 302.46 li
140.892 302.1 li
140.73 301.74 li
140.568 301.38 li
140.406 301.02 li
140.245 300.659 li
140.083 300.299 li
139.921 299.939 li
139.759 299.579 li
139.598 299.219 li
139.436 298.859 li
139.274 298.499 li
139.112 298.139 li
138.951 297.778 li
138.789 297.418 li
138.628 297.058 li
138.466 296.698 li
138.304 296.338 li
138.143 295.978 li
137.981 295.618 li
137.82 295.258 li
137.658 294.898 li
137.497 294.537 li
137.336 294.177 li
137.174 293.817 li
137.013 293.457 li
136.851 293.097 li
136.69 292.737 li
136.529 292.377 li
136.367 292.017 li
136.206 291.656 li
136.045 291.296 li
135.884 290.936 li
135.723 290.576 li
135.561 290.216 li
135.4 289.856 li
135.239 289.496 li
135.078 289.136 li
134.917 288.776 li
134.756 288.415 li
134.595 288.055 li
134.434 287.695 li
134.273 287.335 li
134.112 286.975 li
133.951 286.615 li
133.79 286.255 li
133.629 285.895 li
133.468 285.535 li
133.308 285.174 li
@
133.308 285.174 mo
133.147 284.814 li
@
[5 5 ] 0 dsh
191.479 511.448 mo
191.302 509.498 li
191.024 507.547 li
190.652 505.597 li
190.191 503.646 li
189.649 501.696 li
189.036 499.745 li
188.36 497.795 li
187.63 495.844 li
186.854 493.894 li
186.042 491.943 li
185.2 489.993 li
184.337 488.042 li
183.458 486.092 li
182.569 484.141 li
181.674 482.191 li
180.778 480.24 li
179.884 478.29 li
178.995 476.339 li
178.112 474.389 li
177.238 472.438 li
176.372 470.487 li
175.517 468.537 li
174.672 466.586 li
173.837 464.636 li
173.013 462.685 li
172.2 460.735 li
171.396 458.784 li
170.601 456.834 li
169.815 454.883 li
169.038 452.933 li
168.268 450.982 li
167.505 449.032 li
166.749 447.081 li
165.998 445.131 li
165.253 443.18 li
164.513 441.23 li
163.777 439.279 li
163.045 437.329 li
162.316 435.378 li
161.591 433.428 li
160.868 431.477 li
160.147 429.527 li
159.428 427.576 li
158.711 425.626 li
157.995 423.675 li
157.28 421.725 li
156.566 419.774 li
155.853 417.824 li
155.141 415.873 li
1 0.6 0 rgb
@
155.141 415.873 mo
154.429 413.923 li
153.717 411.972 li
153.006 410.022 li
152.294 408.071 li
151.583 406.12 li
150.871 404.17 li
150.16 402.219 li
149.448 400.269 li
148.736 398.318 li
148.023 396.368 li
147.31 394.417 li
146.597 392.467 li
145.884 390.516 li
145.17 388.566 li
144.455 386.615 li
143.74 384.665 li
143.025 382.714 li
142.309 380.764 li
141.593 378.813 li
140.876 376.863 li
140.159 374.912 li
139.441 372.962 li
138.723 371.011 li
138.004 369.061 li
137.285 367.11 li
136.565 365.16 li
135.845 363.209 li
135.124 361.259 li
134.403 359.308 li
133.682 357.358 li
132.96 355.407 li
132.238 353.457 li
131.515 351.506 li
130.792 349.556 li
130.069 347.605 li
129.345 345.654 li
128.62 343.704 li
127.896 341.753 li
127.171 339.803 li
126.446 337.852 li
125.72 335.902 li
124.994 333.951 li
124.268 332.001 li
123.541 330.05 li
122.815 328.1 li
122.087 326.149 li
121.36 324.199 li
120.632 322.248 li
119.904 320.298 li
@
119.904 320.298 mo
119.176 318.347 li
@
119.967 320.466 mo
119.833 320.106 li
119.698 319.745 li
119.564 319.385 li
119.429 319.025 li
119.295 318.665 li
119.161 318.305 li
119.026 317.945 li
118.892 317.585 li
118.757 317.225 li
118.623 316.865 li
118.488 316.504 li
118.354 316.144 li
118.219 315.784 li
118.085 315.424 li
117.95 315.064 li
117.815 314.704 li
117.681 314.344 li
117.546 313.984 li
117.412 313.624 li
117.277 313.263 li
117.143 312.903 li
117.008 312.543 li
116.873 312.183 li
116.739 311.823 li
116.604 311.463 li
116.47 311.103 li
116.335 310.743 li
116.2 310.383 li
116.066 310.022 li
115.931 309.662 li
115.796 309.302 li
115.662 308.942 li
115.527 308.582 li
115.392 308.222 li
115.258 307.862 li
115.123 307.502 li
114.988 307.141 li
114.854 306.781 li
114.719 306.421 li
114.584 306.061 li
114.45 305.701 li
114.315 305.341 li
114.18 304.981 li
114.045 304.621 li
113.911 304.261 li
113.776 303.9 li
113.641 303.54 li
113.506 303.18 li
113.372 302.82 li
@
113.372 302.82 mo
113.237 302.46 li
113.102 302.1 li
112.967 301.74 li
112.832 301.38 li
112.698 301.02 li
112.563 300.659 li
112.428 300.299 li
112.293 299.939 li
112.158 299.579 li
112.023 299.219 li
111.889 298.859 li
111.754 298.499 li
111.619 298.139 li
111.484 297.778 li
111.349 297.418 li
111.214 297.058 li
111.079 296.698 li
110.945 296.338 li
110.81 295.978 li
110.675 295.618 li
110.54 295.258 li
110.405 294.898 li
110.27 294.537 li
110.135 294.177 li
110 293.817 li
109.865 293.457 li
109.73 293.097 li
109.595 292.737 li
109.46 292.377 li
109.325 292.017 li
109.191 291.656 li
109.056 291.296 li
108.921 290.936 li
108.786 290.576 li
108.651 290.216 li
108.516 289.856 li
108.381 289.496 li
108.246 289.136 li
108.111 288.776 li
107.976 288.415 li
107.841 288.055 li
107.706 287.695 li
107.571 287.335 li
107.436 286.975 li
107.301 286.615 li
107.166 286.255 li
107.031 285.895 li
106.896 285.535 li
106.76 285.174 li
@
106.76 285.174 mo
106.625 284.814 li
@
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
1 1 1 rgb
ef
0.002 lw
[] 0 dsh
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
@
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
0.999 0.999 0.999 rgb
ef
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
@
0.75 lw
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
0 0 0 rgb
@
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
@
0.75 lw
377.474 512.424 mo
377.474 275.926 li
211.475 275.926 li
211.475 512.424 li
cp
0 0 0 rgb
@
1.5 lw
377.474 512.424 mo
377.474 275.926 li
@
373.428 481.061 mo
377.474 481.061 li
@
375.451 472.876 mo
377.474 472.876 li
@
375.451 464.692 mo
377.474 464.692 li
@
375.451 456.508 mo
377.474 456.508 li
@
373.428 448.323 mo
377.474 448.323 li
@
375.451 440.139 mo
377.474 440.139 li
@
375.451 431.954 mo
377.474 431.954 li
@
375.451 423.77 mo
377.474 423.77 li
@
373.428 415.585 mo
377.474 415.585 li
@
375.451 407.401 mo
377.474 407.401 li
@
375.451 399.216 mo
377.474 399.216 li
@
375.451 391.032 mo
377.474 391.032 li
@
373.428 382.848 mo
377.474 382.848 li
@
375.451 374.663 mo
377.474 374.663 li
@
375.451 366.479 mo
377.474 366.479 li
@
375.451 358.294 mo
377.474 358.294 li
@
373.428 350.11 mo
377.474 350.11 li
@
375.451 341.925 mo
377.474 341.925 li
@
375.451 333.741 mo
377.474 333.741 li
@
375.451 325.556 mo
377.474 325.556 li
@
373.428 317.372 mo
377.474 317.372 li
@
375.451 309.188 mo
377.474 309.188 li
@
375.451 301.003 mo
377.474 301.003 li
@
375.451 292.819 mo
377.474 292.819 li
@
373.428 284.634 mo
377.474 284.634 li
@
373.428 481.061 mo
377.474 481.061 li
@
375.451 489.245 mo
377.474 489.245 li
@
375.451 497.43 mo
377.474 497.43 li
@
375.451 505.614 mo
377.474 505.614 li
@
373.428 284.634 mo
377.474 284.634 li
@
375.451 276.45 mo
377.474 276.45 li
@
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 489.368 mo(0.2)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 456.606 mo(0.4)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 423.843 mo(0.6)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 391.081 mo(0.8)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 352.621 mo(1)shgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 325.557 mo(1.2)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 292.794 mo(1.4)[-5.94177 -2.97086 0 ]yshgrestore
211.475 512.424 mo
211.475 275.926 li
@
215.522 481.061 mo
211.475 481.061 li
@
213.499 472.876 mo
211.475 472.876 li
@
213.499 464.692 mo
211.475 464.692 li
@
213.499 456.508 mo
211.475 456.508 li
@
215.522 448.323 mo
211.475 448.323 li
@
213.499 440.139 mo
211.475 440.139 li
@
213.499 431.954 mo
211.475 431.954 li
@
213.499 423.77 mo
211.475 423.77 li
@
215.522 415.585 mo
211.475 415.585 li
@
213.499 407.401 mo
211.475 407.401 li
@
213.499 399.216 mo
211.475 399.216 li
@
213.499 391.032 mo
211.475 391.032 li
@
215.522 382.848 mo
211.475 382.848 li
@
213.499 374.663 mo
211.475 374.663 li
@
213.499 366.479 mo
211.475 366.479 li
@
213.499 358.294 mo
211.475 358.294 li
@
215.522 350.11 mo
211.475 350.11 li
@
213.499 341.925 mo
211.475 341.925 li
@
213.499 333.741 mo
211.475 333.741 li
@
213.499 325.556 mo
211.475 325.556 li
@
215.522 317.372 mo
211.475 317.372 li
@
213.499 309.188 mo
211.475 309.188 li
@
213.499 301.003 mo
211.475 301.003 li
@
213.499 292.819 mo
211.475 292.819 li
@
215.522 284.634 mo
211.475 284.634 li
@
215.522 481.061 mo
211.475 481.061 li
@
213.499 489.245 mo
211.475 489.245 li
@
213.499 497.43 mo
211.475 497.43 li
@
213.499 505.614 mo
211.475 505.614 li
@
215.522 284.634 mo
211.475 284.634 li
@
213.499 276.45 mo
211.475 276.45 li
@
377.474 512.424 mo
211.475 512.424 li
@
NLZQYP+Helvetica*1 [-13.5364 0 0 13.5364 0 0 ]msf292.521 540.648 mo(2)shgsave
377.474 567 mo
377.474 275.926 li
211.475 275.926 li
211.475 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
2 1160 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/v 89 def
end
Helvetica /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 10{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [-19.9483 0 0 19.9483 0 0 ]msf302.492 546.345 mo(v)shgrestore
360.302 503.691 mo
360.302 512.424 li
@
354.578 508.057 mo
354.578 512.424 li
@
348.854 508.057 mo
348.854 512.424 li
@
343.13 508.057 mo
343.13 512.424 li
@
337.405 503.691 mo
337.405 512.424 li
@
331.681 508.057 mo
331.681 512.424 li
@
325.957 508.057 mo
325.957 512.424 li
@
320.233 508.057 mo
320.233 512.424 li
@
314.509 503.691 mo
314.509 512.424 li
@
308.785 508.057 mo
308.785 512.424 li
@
303.061 508.057 mo
303.061 512.424 li
@
297.337 508.057 mo
297.337 512.424 li
@
291.613 503.691 mo
291.613 512.424 li
@
285.889 508.057 mo
285.889 512.424 li
@
280.165 508.057 mo
280.165 512.424 li
@
274.44 508.057 mo
274.44 512.424 li
@
268.716 503.691 mo
268.716 512.424 li
@
262.992 508.057 mo
262.992 512.424 li
@
257.268 508.057 mo
257.268 512.424 li
@
251.544 508.057 mo
251.544 512.424 li
@
245.82 503.691 mo
245.82 512.424 li
@
240.096 508.057 mo
240.096 512.424 li
@
234.372 508.057 mo
234.372 512.424 li
@
228.648 508.057 mo
228.648 512.424 li
@
222.924 503.691 mo
222.924 512.424 li
@
360.302 503.691 mo
360.302 512.424 li
@
366.026 508.057 mo
366.026 512.424 li
@
371.75 508.057 mo
371.75 512.424 li
@
222.924 503.691 mo
222.924 512.424 li
@
217.2 508.057 mo
217.2 512.424 li
@
211.475 508.057 mo
211.475 512.424 li
@
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf364.455 519.993 mo(0)sh341.664 534.95 mo(0.02)[-5.94177 -2.97089 -5.94171 0 ]ysh318.161 534.95 mo(0.04)[-5.94177 -2.97089 -5.94171 0 ]ysh295.37 534.95 mo(0.06)[-5.94177 -2.97089 -5.94171 0 ]ysh272.579 534.95 mo(0.08)[-5.94177 -2.97089 -5.94171 0 ]ysh249.788 527.115 mo(0.1)[-5.94177 -2.97089 0 ]ysh226.997 534.95 mo(0.12)[-5.94177 -2.97089 -5.94171 0 ]ysh377.474 275.926 mo
211.475 275.926 li
@
360.302 284.658 mo
360.302 275.926 li
@
354.578 280.292 mo
354.578 275.926 li
@
348.854 280.292 mo
348.854 275.926 li
@
343.13 280.292 mo
343.13 275.926 li
@
337.405 284.658 mo
337.405 275.926 li
@
331.681 280.292 mo
331.681 275.926 li
@
325.957 280.292 mo
325.957 275.926 li
@
320.233 280.292 mo
320.233 275.926 li
@
314.509 284.658 mo
314.509 275.926 li
@
308.785 280.292 mo
308.785 275.926 li
@
303.061 280.292 mo
303.061 275.926 li
@
297.337 280.292 mo
297.337 275.926 li
@
291.613 284.658 mo
291.613 275.926 li
@
285.889 280.292 mo
285.889 275.926 li
@
280.165 280.292 mo
280.165 275.926 li
@
274.44 280.292 mo
274.44 275.926 li
@
268.716 284.658 mo
268.716 275.926 li
@
262.992 280.292 mo
262.992 275.926 li
@
257.268 280.292 mo
257.268 275.926 li
@
251.544 280.292 mo
251.544 275.926 li
@
245.82 284.658 mo
245.82 275.926 li
@
240.096 280.292 mo
240.096 275.926 li
@
234.372 280.292 mo
234.372 275.926 li
@
228.648 280.292 mo
228.648 275.926 li
@
222.924 284.658 mo
222.924 275.926 li
@
360.302 284.658 mo
360.302 275.926 li
@
366.026 280.292 mo
366.026 275.926 li
@
371.75 280.292 mo
371.75 275.926 li
@
222.924 284.658 mo
222.924 275.926 li
@
217.2 280.292 mo
217.2 275.926 li
@
211.475 280.292 mo
211.475 275.926 li
@
NLZQYP+Helvetica*1 [0 -15.6737 -15.6737 0 0 0 ]msf233.407 497.914 mo(27 GeV 10%-40%)[-8.7146 -8.71457 -4.35727 -12.1942 -8.71457 -10.4542 -4.3573 -8.71457 -8.71457 -13.9338 -5.21921 -8.7146 -8.71457 0 ]ysh0.75 lw
[3 3 ] 0 dsh
360.302 513.799 mo
360.302 276.45 li
@
360.263 465.313 mo
356.16 465.313 356.16 459.16 360.263 459.16 cv
364.365 459.16 364.365 465.313 360.263 465.313 cv
cp
349.242 435.849 mo
345.139 435.849 345.139 429.696 349.242 429.696 cv
353.344 429.696 353.344 435.849 349.242 435.849 cv
cp
331.794 401.475 mo
327.691 401.475 327.691 395.321 331.794 395.321 cv
335.896 395.321 335.896 401.475 331.794 401.475 cv
cp
307.832 372.011 mo
303.73 372.011 303.73 365.857 307.832 365.857 cv
311.934 365.857 311.934 372.011 307.832 372.011 cv
cp
280.902 337.636 mo
276.8 337.636 276.8 331.483 280.902 331.483 cv
285.005 331.483 285.005 337.636 280.902 337.636 cv
cp
257.515 308.172 mo
253.413 308.172 253.413 302.019 257.515 302.019 cv
261.618 302.019 261.618 308.172 257.515 308.172 cv
cp
f
360.263 464.516 mo
357.224 464.516 357.224 459.958 360.263 459.958 cv
363.301 459.958 363.301 464.516 360.263 464.516 cv
cp
349.242 435.052 mo
346.203 435.052 346.203 430.494 349.242 430.494 cv
352.281 430.494 352.281 435.052 349.242 435.052 cv
cp
331.794 400.677 mo
328.755 400.677 328.755 396.119 331.794 396.119 cv
334.833 396.119 334.833 400.677 331.794 400.677 cv
cp
307.832 371.213 mo
304.793 371.213 304.793 366.655 307.832 366.655 cv
310.871 366.655 310.871 371.213 307.832 371.213 cv
cp
280.902 336.838 mo
277.863 336.838 277.863 332.28 280.902 332.28 cv
283.941 332.28 283.941 336.838 280.902 336.838 cv
cp
257.515 307.374 mo
254.477 307.374 254.477 302.816 257.515 302.816 cv
260.554 302.816 260.554 307.374 257.515 307.374 cv
cp
0.999 0.999 0.999 rgb
f
360.263 464.516 mo
357.224 464.516 357.224 459.958 360.263 459.958 cv
363.301 459.958 363.301 464.516 360.263 464.516 cv
cp
349.242 435.052 mo
346.203 435.052 346.203 430.494 349.242 430.494 cv
352.281 430.494 352.281 435.052 349.242 435.052 cv
cp
331.794 400.677 mo
328.755 400.677 328.755 396.119 331.794 396.119 cv
334.833 396.119 334.833 400.677 331.794 400.677 cv
cp
307.832 371.213 mo
304.793 371.213 304.793 366.655 307.832 366.655 cv
310.871 366.655 310.871 371.213 307.832 371.213 cv
cp
280.902 336.838 mo
277.863 336.838 277.863 332.28 280.902 332.28 cv
283.941 332.28 283.941 336.838 280.902 336.838 cv
cp
257.515 307.374 mo
254.477 307.374 254.477 302.816 257.515 302.816 cv
260.554 302.816 260.554 307.374 257.515 307.374 cv
cp
0.2 0.6 1 rgb
f
335.025 470.566 mo
335.025 463.729 li
328.188 467.147 li
cp
309.262 436.191 mo
309.262 429.354 li
302.425 432.773 li
cp
284.68 406.727 mo
284.68 399.89 li
277.843 403.309 li
cp
262.618 372.353 mo
262.618 365.515 li
255.781 368.934 li
cp
243.92 342.889 mo
243.92 336.051 li
237.083 339.47 li
cp
228.921 308.514 mo
228.921 301.677 li
222.084 305.095 li
cp
0 0 0 rgb
f
333.886 469.426 mo
333.886 464.868 li
329.327 467.147 li
cp
308.122 435.052 mo
308.122 430.494 li
303.564 432.773 li
cp
283.54 405.588 mo
283.54 401.03 li
278.982 403.309 li
cp
261.478 371.213 mo
261.478 366.655 li
256.92 368.934 li
cp
242.781 341.749 mo
242.781 337.191 li
238.222 339.47 li
cp
227.782 307.374 mo
227.782 302.816 li
223.223 305.095 li
cp
0.999 0.999 0.999 rgb
f
[] 0 dsh
333.886 469.426 mo
333.886 464.868 li
329.327 467.147 li
cp
308.122 435.052 mo
308.122 430.494 li
303.564 432.773 li
cp
283.54 405.588 mo
283.54 401.03 li
278.982 403.309 li
cp
261.478 371.213 mo
261.478 366.655 li
256.92 368.934 li
cp
242.781 341.749 mo
242.781 337.191 li
238.222 339.47 li
cp
227.782 307.374 mo
227.782 302.816 li
223.223 305.095 li
cp
1 0.6 0 rgb
@
340.948 463.792 mo
343.389 462.999 li
343.389 460.432 li
344.898 462.508 li
347.339 461.715 li
345.83 463.792 li
347.339 465.868 li
344.898 465.075 li
343.389 467.151 li
343.389 464.585 li
cp
320.58 431.054 mo
323.021 430.261 li
323.021 427.694 li
324.53 429.771 li
326.971 428.977 li
325.462 431.054 li
326.971 433.13 li
324.53 432.337 li
323.021 434.414 li
323.021 431.847 li
cp
298.234 398.316 mo
300.675 397.523 li
300.675 394.956 li
302.184 397.033 li
304.625 396.24 li
303.116 398.316 li
304.625 400.393 li
302.184 399.599 li
300.675 401.676 li
300.675 399.109 li
cp
275.739 365.742 mo
278.18 364.949 li
278.18 362.382 li
279.688 364.459 li
282.129 363.666 li
280.621 365.742 li
282.129 367.818 li
279.688 367.025 li
278.18 369.102 li
278.18 366.535 li
cp
255.451 332.841 mo
257.892 332.048 li
257.892 329.481 li
259.401 331.557 li
261.842 330.764 li
260.333 332.841 li
261.842 334.917 li
259.401 334.124 li
257.892 336.2 li
257.892 333.634 li
cp
240.064 301.74 mo
242.504 300.947 li
242.504 298.38 li
244.013 300.456 li
246.454 299.663 li
244.945 301.74 li
246.454 303.816 li
244.013 303.023 li
242.504 305.099 li
242.504 302.533 li
cp
0 0 0 rgb
f
343.413 463.792 mo
343.324 463.792 li
0.999 0.999 0.999 rgb
@
345.549 463.792 mo
345.638 463.792 li
@
342.202 463.792 mo
343.777 463.28 li
343.777 461.624 li
344.75 462.964 li
346.325 462.452 li
345.351 463.792 li
346.325 465.131 li
344.75 464.62 li
343.777 465.959 li
343.777 464.303 li
cp
321.834 431.054 mo
323.409 430.542 li
323.409 428.886 li
324.382 430.226 li
325.957 429.714 li
324.983 431.054 li
325.957 432.394 li
324.382 431.882 li
323.409 433.221 li
323.409 431.566 li
cp
299.488 398.316 mo
301.062 397.804 li
301.062 396.149 li
302.036 397.488 li
303.611 396.977 li
302.637 398.316 li
303.611 399.656 li
302.036 399.144 li
301.062 400.484 li
301.062 398.828 li
cp
276.992 365.742 mo
278.567 365.23 li
278.567 363.575 li
279.54 364.914 li
281.115 364.402 li
280.142 365.742 li
281.115 367.082 li
279.54 366.57 li
278.567 367.91 li
278.567 366.254 li
cp
256.705 332.841 mo
258.28 332.329 li
258.28 330.673 li
259.253 332.013 li
260.828 331.501 li
259.855 332.841 li
260.828 334.18 li
259.253 333.669 li
258.28 335.008 li
258.28 333.352 li
cp
241.317 301.74 mo
242.892 301.228 li
242.892 299.572 li
243.865 300.912 li
245.44 300.4 li
244.467 301.74 li
245.44 303.079 li
243.865 302.568 li
242.892 303.907 li
242.892 302.251 li
cp
f
343.413 463.792 mo
343.324 463.792 li
0 0 0 rgb
@
345.549 463.792 mo
345.638 463.792 li
@
342.202 463.792 mo
343.777 463.28 li
343.777 461.624 li
344.75 462.964 li
346.325 462.452 li
345.351 463.792 li
346.325 465.131 li
344.75 464.62 li
343.777 465.959 li
343.777 464.303 li
cp
321.834 431.054 mo
323.409 430.542 li
323.409 428.886 li
324.382 430.226 li
325.957 429.714 li
324.983 431.054 li
325.957 432.394 li
324.382 431.882 li
323.409 433.221 li
323.409 431.566 li
cp
299.488 398.316 mo
301.062 397.804 li
301.062 396.149 li
302.036 397.488 li
303.611 396.977 li
302.637 398.316 li
303.611 399.656 li
302.036 399.144 li
301.062 400.484 li
301.062 398.828 li
cp
276.992 365.742 mo
278.567 365.23 li
278.567 363.575 li
279.54 364.914 li
281.115 364.402 li
280.142 365.742 li
281.115 367.082 li
279.54 366.57 li
278.567 367.91 li
278.567 366.254 li
cp
256.705 332.841 mo
258.28 332.329 li
258.28 330.673 li
259.253 332.013 li
260.828 331.501 li
259.855 332.841 li
260.828 334.18 li
259.253 333.669 li
258.28 335.008 li
258.28 333.352 li
cp
241.317 301.74 mo
242.892 301.228 li
242.892 299.572 li
243.865 300.912 li
245.44 300.4 li
244.467 301.74 li
245.44 303.079 li
243.865 302.568 li
242.892 303.907 li
242.892 302.251 li
cp
0 0.8 0 rgb
f
361.29 463.792 mo
351.03 463.792 li
0.999 0.999 0.999 rgb
@
366.988 463.792 mo
377.249 463.792 li
@
347.339 431.054 mo
346.729 431.054 li
@
353.036 431.054 mo
353.647 431.054 li
@
367.216 463.792 mo
361.062 460.715 li
361.062 466.868 li
cp
353.264 431.054 mo
347.111 427.977 li
347.111 434.131 li
cp
338.31 398.316 mo
332.156 395.239 li
332.156 401.393 li
cp
315.944 365.578 mo
309.791 362.502 li
309.791 368.655 li
cp
289.58 332.841 mo
283.427 329.764 li
283.427 335.917 li
cp
266.408 301.74 mo
260.254 298.663 li
260.254 304.817 li
cp
0 0 0 rgb
f
362.003 463.792 mo
351.03 463.792 li
0.999 0.999 0.999 rgb
@
366.276 463.792 mo
377.249 463.792 li
@
348.051 431.054 mo
346.729 431.054 li
@
352.324 431.054 mo
353.647 431.054 li
@
366.418 463.792 mo
361.86 461.513 li
361.86 466.071 li
cp
352.467 431.054 mo
347.908 428.775 li
347.908 433.333 li
cp
337.512 398.316 mo
332.954 396.037 li
332.954 400.595 li
cp
315.147 365.578 mo
310.589 363.299 li
310.589 367.857 li
cp
288.783 332.841 mo
284.224 330.561 li
284.224 335.12 li
cp
265.61 301.74 mo
261.052 299.461 li
261.052 304.019 li
cp
f
362.003 463.792 mo
351.03 463.792 li
0 0 0 rgb
@
366.276 463.792 mo
377.249 463.792 li
@
348.051 431.054 mo
346.729 431.054 li
@
352.324 431.054 mo
353.647 431.054 li
@
366.418 463.792 mo
361.86 461.513 li
361.86 466.071 li
cp
352.467 431.054 mo
347.908 428.775 li
347.908 433.333 li
cp
337.512 398.316 mo
332.954 396.037 li
332.954 400.595 li
cp
315.147 365.578 mo
310.589 363.299 li
310.589 367.857 li
cp
288.783 332.841 mo
284.224 330.561 li
284.224 335.12 li
cp
265.61 301.74 mo
261.052 299.461 li
261.052 304.019 li
cp
0.8 0.8 0.8 rgb
f
334.365 407.319 mo
330.543 407.319 li
0.999 0.999 0.999 rgb
@
340.063 407.319 mo
343.885 407.319 li
@
301.736 350.192 mo
299.84 350.192 li
@
307.433 350.192 mo
309.329 350.192 li
@
257.95 288.481 mo
254.919 288.481 li
@
263.648 288.481 mo
266.679 288.481 li
@
337.214 410.396 mo
333.111 410.396 333.111 404.242 337.214 404.242 cv
341.316 404.242 341.316 410.396 337.214 410.396 cv
cp
304.584 353.268 mo
300.482 353.268 300.482 347.115 304.584 347.115 cv
308.687 347.115 308.687 353.268 304.584 353.268 cv
cp
260.799 291.558 mo
256.697 291.558 256.697 285.404 260.799 285.404 cv
264.902 285.404 264.902 291.558 260.799 291.558 cv
cp
0 0 0 rgb
f
335.077 407.319 mo
330.543 407.319 li
0.999 0.999 0.999 rgb
@
339.35 407.319 mo
343.885 407.319 li
@
302.448 350.192 mo
299.84 350.192 li
@
306.721 350.192 mo
309.329 350.192 li
@
258.663 288.481 mo
254.919 288.481 li
@
262.936 288.481 mo
266.679 288.481 li
@
337.214 409.598 mo
334.175 409.598 334.175 405.04 337.214 405.04 cv
340.253 405.04 340.253 409.598 337.214 409.598 cv
cp
304.584 352.471 mo
301.546 352.471 301.546 347.913 304.584 347.913 cv
307.623 347.913 307.623 352.471 304.584 352.471 cv
cp
260.799 290.76 mo
257.76 290.76 257.76 286.202 260.799 286.202 cv
263.838 286.202 263.838 290.76 260.799 290.76 cv
cp
f
335.077 407.319 mo
330.543 407.319 li
0 0 0 rgb
@
339.35 407.319 mo
343.885 407.319 li
@
302.448 350.192 mo
299.84 350.192 li
@
306.721 350.192 mo
309.329 350.192 li
@
258.663 288.481 mo
254.919 288.481 li
@
262.936 288.481 mo
266.679 288.481 li
@
337.214 409.598 mo
334.175 409.598 334.175 405.04 337.214 405.04 cv
340.253 405.04 340.253 409.598 337.214 409.598 cv
cp
304.584 352.471 mo
301.546 352.471 301.546 347.913 304.584 347.913 cv
307.623 347.913 307.623 352.471 304.584 352.471 cv
cp
260.799 290.76 mo
257.76 290.76 257.76 286.202 260.799 286.202 cv
263.838 286.202 263.838 290.76 260.799 290.76 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
360.314 511.448 mo
360.342 509.498 li
360.387 507.547 li
360.446 505.597 li
360.518 503.646 li
360.601 501.696 li
360.693 499.745 li
360.791 497.795 li
360.893 495.844 li
360.995 493.894 li
361.095 491.943 li
361.19 489.993 li
361.276 488.042 li
361.35 486.092 li
361.41 484.141 li
361.452 482.191 li
361.473 480.24 li
361.472 478.29 li
361.445 476.339 li
361.391 474.389 li
361.308 472.438 li
361.193 470.487 li
361.045 468.537 li
360.863 466.586 li
360.646 464.636 li
360.393 462.685 li
360.103 460.735 li
359.776 458.784 li
359.411 456.834 li
359.009 454.883 li
358.569 452.933 li
358.091 450.982 li
357.575 449.032 li
357.023 447.081 li
356.434 445.131 li
355.809 443.18 li
355.148 441.23 li
354.453 439.279 li
353.723 437.329 li
352.961 435.378 li
352.165 433.428 li
351.339 431.477 li
350.481 429.527 li
349.594 427.576 li
348.677 425.626 li
347.733 423.675 li
346.761 421.725 li
345.763 419.774 li
344.74 417.824 li
343.692 415.873 li
@
343.692 415.873 mo
342.62 413.923 li
341.526 411.972 li
340.41 410.022 li
339.272 408.071 li
338.115 406.12 li
336.938 404.17 li
335.742 402.219 li
334.529 400.269 li
333.298 398.318 li
332.051 396.368 li
330.788 394.417 li
329.509 392.467 li
328.217 390.516 li
326.91 388.566 li
325.591 386.615 li
324.258 384.665 li
322.914 382.714 li
321.558 380.764 li
320.191 378.813 li
318.814 376.863 li
317.427 374.912 li
316.03 372.962 li
314.624 371.011 li
313.21 369.061 li
311.787 367.11 li
310.357 365.16 li
308.919 363.209 li
307.474 361.259 li
306.022 359.308 li
304.564 357.358 li
303.1 355.407 li
301.631 353.457 li
300.156 351.506 li
298.676 349.556 li
297.191 347.605 li
295.702 345.654 li
294.208 343.704 li
292.71 341.753 li
291.209 339.803 li
289.704 337.852 li
288.195 335.902 li
286.684 333.951 li
285.169 332.001 li
283.652 330.05 li
282.132 328.1 li
280.61 326.149 li
279.085 324.199 li
277.559 322.248 li
276.03 320.298 li
@
276.03 320.298 mo
274.5 318.347 li
@
276.162 320.466 mo
275.88 320.106 li
275.597 319.745 li
275.315 319.385 li
275.032 319.025 li
274.75 318.665 li
274.467 318.305 li
274.184 317.945 li
273.901 317.585 li
273.619 317.225 li
273.336 316.865 li
273.053 316.504 li
272.77 316.144 li
272.487 315.784 li
272.204 315.424 li
271.921 315.064 li
271.637 314.704 li
271.354 314.344 li
271.071 313.984 li
270.788 313.624 li
270.504 313.263 li
270.221 312.903 li
269.938 312.543 li
269.654 312.183 li
269.37 311.823 li
269.087 311.463 li
268.803 311.103 li
268.52 310.743 li
268.236 310.383 li
267.952 310.022 li
267.669 309.662 li
267.385 309.302 li
267.101 308.942 li
266.817 308.582 li
266.533 308.222 li
266.249 307.862 li
265.965 307.502 li
265.681 307.141 li
265.397 306.781 li
265.113 306.421 li
264.829 306.061 li
264.545 305.701 li
264.261 305.341 li
263.977 304.981 li
263.693 304.621 li
263.408 304.261 li
263.124 303.9 li
262.84 303.54 li
262.556 303.18 li
262.271 302.82 li
@
262.271 302.82 mo
261.987 302.46 li
261.703 302.1 li
261.418 301.74 li
261.134 301.38 li
260.849 301.02 li
260.565 300.659 li
260.28 300.299 li
259.996 299.939 li
259.711 299.579 li
259.427 299.219 li
259.142 298.859 li
258.858 298.499 li
258.573 298.139 li
258.289 297.778 li
258.004 297.418 li
257.719 297.058 li
257.435 296.698 li
257.15 296.338 li
256.865 295.978 li
256.581 295.618 li
256.296 295.258 li
256.011 294.898 li
255.727 294.537 li
255.442 294.177 li
255.157 293.817 li
254.872 293.457 li
254.588 293.097 li
254.303 292.737 li
254.018 292.377 li
253.733 292.017 li
253.449 291.656 li
253.164 291.296 li
252.879 290.936 li
252.594 290.576 li
252.309 290.216 li
252.025 289.856 li
251.74 289.496 li
251.455 289.136 li
251.17 288.776 li
250.885 288.415 li
250.601 288.055 li
250.316 287.695 li
250.031 287.335 li
249.746 286.975 li
249.461 286.615 li
249.176 286.255 li
248.892 285.895 li
248.607 285.535 li
248.322 285.174 li
@
248.322 285.174 mo
248.037 284.814 li
@
[] 0 dsh
360.325 511.448 mo
360.378 509.498 li
360.462 507.547 li
360.575 505.597 li
360.715 503.646 li
360.878 501.696 li
361.064 499.745 li
361.267 497.795 li
361.484 495.844 li
361.713 493.894 li
361.948 491.943 li
362.185 489.993 li
362.421 488.042 li
362.652 486.092 li
362.873 484.141 li
363.082 482.191 li
363.273 480.24 li
363.443 478.29 li
363.591 476.339 li
363.711 474.389 li
363.803 472.438 li
363.863 470.487 li
363.889 468.537 li
363.879 466.586 li
363.833 464.636 li
363.747 462.685 li
363.623 460.735 li
363.457 458.784 li
363.251 456.834 li
363.003 454.883 li
362.714 452.933 li
362.382 450.982 li
362.009 449.032 li
361.595 447.081 li
361.139 445.131 li
360.644 443.18 li
360.108 441.23 li
359.532 439.279 li
358.919 437.329 li
358.267 435.378 li
357.579 433.428 li
356.854 431.477 li
356.095 429.527 li
355.301 427.576 li
354.474 425.626 li
353.616 423.675 li
352.725 421.725 li
351.805 419.774 li
350.856 417.824 li
349.878 415.873 li
0.8 0.8 0.8 rgb
@
349.878 415.873 mo
348.873 413.923 li
347.842 411.972 li
346.785 410.022 li
345.704 408.071 li
344.6 406.12 li
343.473 404.17 li
342.325 402.219 li
341.155 400.269 li
339.966 398.318 li
338.757 396.368 li
337.53 394.417 li
336.286 392.467 li
335.024 390.516 li
333.746 388.566 li
332.453 386.615 li
331.145 384.665 li
329.823 382.714 li
328.487 380.764 li
327.139 378.813 li
325.777 376.863 li
324.405 374.912 li
323.021 372.962 li
321.626 371.011 li
320.221 369.061 li
318.806 367.11 li
317.382 365.16 li
315.949 363.209 li
314.508 361.259 li
313.058 359.308 li
311.601 357.358 li
310.137 355.407 li
308.666 353.457 li
307.189 351.506 li
305.705 349.556 li
304.216 347.605 li
302.721 345.654 li
301.221 343.704 li
299.716 341.753 li
298.206 339.803 li
296.692 337.852 li
295.173 335.902 li
293.651 333.951 li
292.125 332.001 li
290.596 330.05 li
289.063 328.1 li
287.527 326.149 li
285.989 324.199 li
284.448 322.248 li
282.904 320.298 li
@
282.904 320.298 mo
281.358 318.347 li
@
283.037 320.466 mo
282.752 320.106 li
282.467 319.745 li
282.182 319.385 li
281.896 319.025 li
281.611 318.665 li
281.325 318.305 li
281.039 317.945 li
280.754 317.585 li
280.468 317.225 li
280.182 316.865 li
279.896 316.504 li
279.61 316.144 li
279.324 315.784 li
279.038 315.424 li
278.752 315.064 li
278.465 314.704 li
278.179 314.344 li
277.893 313.984 li
277.606 313.624 li
277.32 313.263 li
277.033 312.903 li
276.747 312.543 li
276.46 312.183 li
276.173 311.823 li
275.886 311.463 li
275.6 311.103 li
275.313 310.743 li
275.026 310.383 li
274.739 310.022 li
274.452 309.662 li
274.165 309.302 li
273.877 308.942 li
273.59 308.582 li
273.303 308.222 li
273.016 307.862 li
272.728 307.502 li
272.441 307.141 li
272.154 306.781 li
271.866 306.421 li
271.579 306.061 li
271.291 305.701 li
271.003 305.341 li
270.716 304.981 li
270.428 304.621 li
270.14 304.261 li
269.853 303.9 li
269.565 303.54 li
269.277 303.18 li
268.989 302.82 li
@
268.989 302.82 mo
268.701 302.46 li
268.413 302.1 li
268.125 301.74 li
267.837 301.38 li
267.549 301.02 li
267.261 300.659 li
266.973 300.299 li
266.685 299.939 li
266.397 299.579 li
266.109 299.219 li
265.821 298.859 li
265.532 298.499 li
265.244 298.139 li
264.956 297.778 li
264.668 297.418 li
264.379 297.058 li
264.091 296.698 li
263.803 296.338 li
263.514 295.978 li
263.226 295.618 li
262.937 295.258 li
262.649 294.898 li
262.36 294.537 li
262.072 294.177 li
261.783 293.817 li
261.495 293.457 li
261.206 293.097 li
260.918 292.737 li
260.629 292.377 li
260.34 292.017 li
260.052 291.656 li
259.763 291.296 li
259.475 290.936 li
259.186 290.576 li
258.897 290.216 li
258.609 289.856 li
258.32 289.496 li
258.031 289.136 li
257.742 288.776 li
257.454 288.415 li
257.165 288.055 li
256.876 287.695 li
256.587 287.335 li
256.299 286.975 li
256.01 286.615 li
255.721 286.255 li
255.432 285.895 li
255.144 285.535 li
254.855 285.174 li
@
254.855 285.174 mo
254.566 284.814 li
@
360.255 511.448 mo
360.145 509.498 li
359.972 507.547 li
359.735 505.597 li
359.438 503.646 li
359.08 501.696 li
358.664 499.745 li
358.192 497.795 li
357.667 495.844 li
357.09 493.894 li
356.464 491.943 li
355.792 489.993 li
355.076 488.042 li
354.319 486.092 li
353.524 484.141 li
352.692 482.191 li
351.827 480.24 li
350.931 478.29 li
350.007 476.339 li
349.055 474.389 li
348.078 472.438 li
347.079 470.487 li
346.058 468.537 li
345.017 466.586 li
343.959 464.636 li
342.883 462.685 li
341.792 460.735 li
340.686 458.784 li
339.566 456.834 li
338.433 454.883 li
337.289 452.933 li
336.133 450.982 li
334.967 449.032 li
333.79 447.081 li
332.604 445.131 li
331.409 443.18 li
330.205 441.23 li
328.993 439.279 li
327.773 437.329 li
326.545 435.378 li
325.31 433.428 li
324.068 431.477 li
322.819 429.527 li
321.563 427.576 li
320.301 425.626 li
319.033 423.675 li
317.758 421.725 li
316.478 419.774 li
315.192 417.824 li
313.9 415.873 li
0 0.8 0 rgb
@
313.9 415.873 mo
312.603 413.923 li
311.301 411.972 li
309.994 410.022 li
308.682 408.071 li
307.365 406.12 li
306.044 404.17 li
304.718 402.219 li
303.387 400.269 li
302.053 398.318 li
300.714 396.368 li
299.372 394.417 li
298.025 392.467 li
296.675 390.516 li
295.322 388.566 li
293.964 386.615 li
292.604 384.665 li
291.24 382.714 li
289.874 380.764 li
288.504 378.813 li
287.132 376.863 li
285.756 374.912 li
284.378 372.962 li
282.998 371.011 li
281.615 369.061 li
280.23 367.11 li
278.842 365.16 li
277.453 363.209 li
276.061 361.259 li
274.668 359.308 li
273.272 357.358 li
271.875 355.407 li
270.476 353.457 li
269.075 351.506 li
267.673 349.556 li
266.27 347.605 li
264.865 345.654 li
263.458 343.704 li
262.051 341.753 li
260.642 339.803 li
259.232 337.852 li
257.821 335.902 li
256.41 333.951 li
254.997 332.001 li
253.583 330.05 li
252.169 328.1 li
250.754 326.149 li
249.338 324.199 li
247.921 322.248 li
246.504 320.298 li
@
246.504 320.298 mo
245.086 318.347 li
@
246.626 320.466 mo
246.364 320.106 li
246.103 319.745 li
245.841 319.385 li
245.579 319.025 li
245.317 318.665 li
245.056 318.305 li
244.794 317.945 li
244.532 317.585 li
244.27 317.225 li
244.008 316.865 li
243.746 316.504 li
243.485 316.144 li
243.223 315.784 li
242.961 315.424 li
242.699 315.064 li
242.437 314.704 li
242.175 314.344 li
241.913 313.984 li
241.651 313.624 li
241.389 313.263 li
241.127 312.903 li
240.865 312.543 li
240.603 312.183 li
240.341 311.823 li
240.079 311.463 li
239.817 311.103 li
239.555 310.743 li
239.293 310.383 li
239.031 310.022 li
238.768 309.662 li
238.506 309.302 li
238.244 308.942 li
237.982 308.582 li
237.72 308.222 li
237.458 307.862 li
237.196 307.502 li
236.933 307.141 li
236.671 306.781 li
236.409 306.421 li
236.147 306.061 li
235.885 305.701 li
235.622 305.341 li
235.36 304.981 li
235.098 304.621 li
234.836 304.261 li
234.574 303.9 li
234.311 303.54 li
234.049 303.18 li
233.787 302.82 li
@
233.787 302.82 mo
233.525 302.46 li
233.262 302.1 li
233 301.74 li
232.738 301.38 li
232.475 301.02 li
232.213 300.659 li
231.951 300.299 li
231.689 299.939 li
231.426 299.579 li
231.164 299.219 li
230.902 298.859 li
230.639 298.499 li
230.377 298.139 li
230.115 297.778 li
229.852 297.418 li
229.59 297.058 li
229.328 296.698 li
229.065 296.338 li
228.803 295.978 li
228.541 295.618 li
228.278 295.258 li
228.016 294.898 li
227.754 294.537 li
227.491 294.177 li
227.229 293.817 li
226.967 293.457 li
226.704 293.097 li
226.442 292.737 li
226.18 292.377 li
225.918 292.017 li
225.655 291.656 li
225.393 291.296 li
225.131 290.936 li
224.868 290.576 li
224.606 290.216 li
224.344 289.856 li
224.081 289.496 li
223.819 289.136 li
223.557 288.776 li
223.294 288.415 li
223.032 288.055 li
222.77 287.695 li
222.507 287.335 li
222.245 286.975 li
221.983 286.615 li
221.721 286.255 li
221.458 285.895 li
221.196 285.535 li
220.934 285.174 li
@
220.934 285.174 mo
220.671 284.814 li
@
360.305 511.448 mo
360.312 509.498 li
360.323 507.547 li
360.336 505.597 li
360.351 503.646 li
360.365 501.696 li
360.378 499.745 li
360.388 497.795 li
360.392 495.844 li
360.388 493.894 li
360.374 491.943 li
360.348 489.993 li
360.307 488.042 li
360.25 486.092 li
360.173 484.141 li
360.075 482.191 li
359.955 480.24 li
359.809 478.29 li
359.636 476.339 li
359.436 474.389 li
359.206 472.438 li
358.945 470.487 li
358.652 468.537 li
358.327 466.586 li
357.968 464.636 li
357.576 462.685 li
357.149 460.735 li
356.688 458.784 li
356.192 456.834 li
355.662 454.883 li
355.098 452.933 li
354.5 450.982 li
353.868 449.032 li
353.203 447.081 li
352.505 445.131 li
351.775 443.18 li
351.013 441.23 li
350.221 439.279 li
349.398 437.329 li
348.546 435.378 li
347.665 433.428 li
346.756 431.477 li
345.821 429.527 li
344.859 427.576 li
343.872 425.626 li
342.86 423.675 li
341.824 421.725 li
340.765 419.774 li
339.684 417.824 li
338.582 415.873 li
0.2 0.6 1 rgb
@
338.582 415.873 mo
337.459 413.923 li
336.317 411.972 li
335.155 410.022 li
333.975 408.071 li
332.778 406.12 li
331.563 404.17 li
330.333 402.219 li
329.087 400.269 li
327.826 398.318 li
326.551 396.368 li
325.262 394.417 li
323.96 392.467 li
322.646 390.516 li
321.32 388.566 li
319.982 386.615 li
318.634 384.665 li
317.275 382.714 li
315.907 380.764 li
314.529 378.813 li
313.142 376.863 li
311.746 374.912 li
310.343 372.962 li
308.932 371.011 li
307.513 369.061 li
306.087 367.11 li
304.655 365.16 li
303.217 363.209 li
301.772 361.259 li
300.322 359.308 li
298.867 357.358 li
297.407 355.407 li
295.941 353.457 li
294.472 351.506 li
292.998 349.556 li
291.52 347.605 li
290.038 345.654 li
288.552 343.704 li
287.064 341.753 li
285.572 339.803 li
284.077 337.852 li
282.579 335.902 li
281.079 333.951 li
279.577 332.001 li
278.072 330.05 li
276.565 328.1 li
275.056 326.149 li
273.545 324.199 li
272.033 322.248 li
270.519 320.298 li
@
270.519 320.298 mo
269.004 318.347 li
@
270.65 320.466 mo
270.37 320.106 li
270.09 319.745 li
269.811 319.385 li
269.531 319.025 li
269.251 318.665 li
268.971 318.305 li
268.691 317.945 li
268.411 317.585 li
268.131 317.225 li
267.851 316.865 li
267.571 316.504 li
267.291 316.144 li
267.011 315.784 li
266.731 315.424 li
266.451 315.064 li
266.171 314.704 li
265.89 314.344 li
265.61 313.984 li
265.33 313.624 li
265.049 313.263 li
264.769 312.903 li
264.488 312.543 li
264.208 312.183 li
263.927 311.823 li
263.647 311.463 li
263.366 311.103 li
263.086 310.743 li
262.805 310.383 li
262.524 310.022 li
262.244 309.662 li
261.963 309.302 li
261.682 308.942 li
261.401 308.582 li
261.121 308.222 li
260.84 307.862 li
260.559 307.502 li
260.278 307.141 li
259.997 306.781 li
259.716 306.421 li
259.435 306.061 li
259.154 305.701 li
258.873 305.341 li
258.592 304.981 li
258.311 304.621 li
258.03 304.261 li
257.749 303.9 li
257.468 303.54 li
257.187 303.18 li
256.906 302.82 li
@
256.906 302.82 mo
256.625 302.46 li
256.344 302.1 li
256.063 301.74 li
255.782 301.38 li
255.5 301.02 li
255.219 300.659 li
254.938 300.299 li
254.657 299.939 li
254.376 299.579 li
254.094 299.219 li
253.813 298.859 li
253.532 298.499 li
253.251 298.139 li
252.969 297.778 li
252.688 297.418 li
252.407 297.058 li
252.126 296.698 li
251.844 296.338 li
251.563 295.978 li
251.282 295.618 li
251 295.258 li
250.719 294.898 li
250.438 294.537 li
250.156 294.177 li
249.875 293.817 li
249.594 293.457 li
249.312 293.097 li
249.031 292.737 li
248.75 292.377 li
248.468 292.017 li
248.187 291.656 li
247.906 291.296 li
247.624 290.936 li
247.343 290.576 li
247.062 290.216 li
246.78 289.856 li
246.499 289.496 li
246.217 289.136 li
245.936 288.776 li
245.655 288.415 li
245.373 288.055 li
245.092 287.695 li
244.811 287.335 li
244.529 286.975 li
244.248 286.615 li
243.967 286.255 li
243.685 285.895 li
243.404 285.535 li
243.123 285.174 li
@
243.123 285.174 mo
242.842 284.814 li
@
[5 5 ] 0 dsh
360.215 511.448 mo
360.011 509.498 li
359.691 507.547 li
359.258 505.597 li
358.718 503.646 li
358.075 501.696 li
357.336 499.745 li
356.508 497.795 li
355.599 495.844 li
354.616 493.894 li
353.567 491.943 li
352.458 489.993 li
351.297 488.042 li
350.09 486.092 li
348.845 484.141 li
347.566 482.191 li
346.259 480.24 li
344.93 478.29 li
343.582 476.339 li
342.22 474.389 li
340.848 472.438 li
339.467 470.487 li
338.082 468.537 li
336.694 466.586 li
335.306 464.636 li
333.918 462.685 li
332.533 460.735 li
331.151 458.784 li
329.772 456.834 li
328.399 454.883 li
327.03 452.933 li
325.667 450.982 li
324.309 449.032 li
322.957 447.081 li
321.61 445.131 li
320.268 443.18 li
318.931 441.23 li
317.599 439.279 li
316.271 437.329 li
314.947 435.378 li
313.627 433.428 li
312.31 431.477 li
310.996 429.527 li
309.685 427.576 li
308.376 425.626 li
307.07 423.675 li
305.765 421.725 li
304.461 419.774 li
303.158 417.824 li
301.856 415.873 li
1 0.6 0 rgb
@
301.856 415.873 mo
300.555 413.923 li
299.254 411.972 li
297.953 410.022 li
296.652 408.071 li
295.351 406.12 li
294.049 404.17 li
292.746 402.219 li
291.442 400.269 li
290.138 398.318 li
288.833 396.368 li
287.526 394.417 li
286.218 392.467 li
284.909 390.516 li
283.598 388.566 li
282.286 386.615 li
280.973 384.665 li
279.657 382.714 li
278.341 380.764 li
277.022 378.813 li
275.702 376.863 li
274.381 374.912 li
273.058 372.962 li
271.733 371.011 li
270.407 369.061 li
269.079 367.11 li
267.749 365.16 li
266.418 363.209 li
265.085 361.259 li
263.751 359.308 li
262.415 357.358 li
261.077 355.407 li
259.739 353.457 li
258.398 351.506 li
257.057 349.556 li
255.714 347.605 li
254.369 345.654 li
253.024 343.704 li
251.677 341.753 li
250.329 339.803 li
248.979 337.852 li
247.629 335.902 li
246.277 333.951 li
244.925 332.001 li
243.571 330.05 li
242.216 328.1 li
240.86 326.149 li
239.504 324.199 li
238.146 322.248 li
236.788 320.298 li
@
236.788 320.298 mo
235.429 318.347 li
@
236.905 320.466 mo
236.654 320.106 li
236.403 319.745 li
236.152 319.385 li
235.901 319.025 li
235.65 318.665 li
235.399 318.305 li
235.148 317.945 li
234.897 317.585 li
234.646 317.225 li
234.395 316.865 li
234.144 316.504 li
233.892 316.144 li
233.641 315.784 li
233.39 315.424 li
233.139 315.064 li
232.888 314.704 li
232.636 314.344 li
232.385 313.984 li
232.134 313.624 li
231.882 313.263 li
231.631 312.903 li
231.379 312.543 li
231.128 312.183 li
230.876 311.823 li
230.625 311.463 li
230.373 311.103 li
230.122 310.743 li
229.87 310.383 li
229.619 310.022 li
229.367 309.662 li
229.116 309.302 li
228.864 308.942 li
228.612 308.582 li
228.361 308.222 li
228.109 307.862 li
227.857 307.502 li
227.605 307.141 li
227.354 306.781 li
227.102 306.421 li
226.85 306.061 li
226.598 305.701 li
226.346 305.341 li
226.094 304.981 li
225.843 304.621 li
225.591 304.261 li
225.339 303.9 li
225.087 303.54 li
224.835 303.18 li
224.583 302.82 li
@
224.583 302.82 mo
224.331 302.46 li
224.079 302.1 li
223.827 301.74 li
223.575 301.38 li
223.323 301.02 li
223.071 300.659 li
222.819 300.299 li
222.566 299.939 li
222.314 299.579 li
222.062 299.219 li
221.81 298.859 li
221.558 298.499 li
221.306 298.139 li
221.053 297.778 li
220.801 297.418 li
220.549 297.058 li
220.297 296.698 li
220.044 296.338 li
219.792 295.978 li
219.54 295.618 li
219.288 295.258 li
219.035 294.898 li
218.783 294.537 li
218.53 294.177 li
218.278 293.817 li
218.026 293.457 li
217.773 293.097 li
217.521 292.737 li
217.269 292.377 li
217.016 292.017 li
216.764 291.656 li
216.511 291.296 li
216.259 290.936 li
216.006 290.576 li
215.754 290.216 li
215.501 289.856 li
215.249 289.496 li
214.996 289.136 li
214.744 288.776 li
214.491 288.415 li
214.239 288.055 li
213.986 287.695 li
213.734 287.335 li
213.481 286.975 li
213.228 286.615 li
212.976 286.255 li
212.723 285.895 li
212.471 285.535 li
212.218 285.174 li
@
212.218 285.174 mo
211.965 284.814 li
@
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
1 1 1 rgb
ef
0.002 lw
[] 0 dsh
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
@
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
0.999 0.999 0.999 rgb
ef
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
@
0.75 lw
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
0 0 0 rgb
@
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
@
0.75 lw
541.971 512.424 mo
541.971 275.926 li
377.474 275.926 li
377.474 512.424 li
cp
0 0 0 rgb
@
1.5 lw
541.971 512.424 mo
541.971 275.926 li
@
537.254 481.061 mo
541.971 481.061 li
@
539.612 472.876 mo
541.971 472.876 li
@
539.612 464.692 mo
541.971 464.692 li
@
539.612 456.508 mo
541.971 456.508 li
@
537.254 448.323 mo
541.971 448.323 li
@
539.612 440.139 mo
541.971 440.139 li
@
539.612 431.954 mo
541.971 431.954 li
@
539.612 423.77 mo
541.971 423.77 li
@
537.254 415.585 mo
541.971 415.585 li
@
539.612 407.401 mo
541.971 407.401 li
@
539.612 399.216 mo
541.971 399.216 li
@
539.612 391.032 mo
541.971 391.032 li
@
537.254 382.848 mo
541.971 382.848 li
@
539.612 374.663 mo
541.971 374.663 li
@
539.612 366.479 mo
541.971 366.479 li
@
539.612 358.294 mo
541.971 358.294 li
@
537.254 350.11 mo
541.971 350.11 li
@
539.612 341.925 mo
541.971 341.925 li
@
539.612 333.741 mo
541.971 333.741 li
@
539.612 325.556 mo
541.971 325.556 li
@
537.254 317.372 mo
541.971 317.372 li
@
539.612 309.188 mo
541.971 309.188 li
@
539.612 301.003 mo
541.971 301.003 li
@
539.612 292.819 mo
541.971 292.819 li
@
537.254 284.634 mo
541.971 284.634 li
@
537.254 481.061 mo
541.971 481.061 li
@
539.612 489.245 mo
541.971 489.245 li
@
539.612 497.43 mo
541.971 497.43 li
@
539.612 505.614 mo
541.971 505.614 li
@
537.254 284.634 mo
541.971 284.634 li
@
539.612 276.45 mo
541.971 276.45 li
@
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf553.194 490.792 mo(0.2)[-7.14688 -3.57346 0 ]ysh553.194 458.03 mo(0.4)[-7.14688 -3.57346 0 ]ysh553.194 425.268 mo(0.6)[-7.14688 -3.57346 0 ]ysh553.194 392.505 mo(0.8)[-7.14688 -3.57346 0 ]ysh553.194 353.333 mo(1)sh553.194 326.981 mo(1.2)[-7.14688 -3.57346 0 ]yshgsave
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf553.194 294.219 mo(1.4)[-7.14688 -3.57346 0 ]yshgrestore
377.474 512.424 mo
377.474 275.926 li
@
382.191 481.061 mo
377.474 481.061 li
@
379.833 472.876 mo
377.474 472.876 li
@
379.833 464.692 mo
377.474 464.692 li
@
379.833 456.508 mo
377.474 456.508 li
@
382.191 448.323 mo
377.474 448.323 li
@
379.833 440.139 mo
377.474 440.139 li
@
379.833 431.954 mo
377.474 431.954 li
@
379.833 423.77 mo
377.474 423.77 li
@
382.191 415.585 mo
377.474 415.585 li
@
379.833 407.401 mo
377.474 407.401 li
@
379.833 399.216 mo
377.474 399.216 li
@
379.833 391.032 mo
377.474 391.032 li
@
382.191 382.848 mo
377.474 382.848 li
@
379.833 374.663 mo
377.474 374.663 li
@
379.833 366.479 mo
377.474 366.479 li
@
379.833 358.294 mo
377.474 358.294 li
@
382.191 350.11 mo
377.474 350.11 li
@
379.833 341.925 mo
377.474 341.925 li
@
379.833 333.741 mo
377.474 333.741 li
@
379.833 325.556 mo
377.474 325.556 li
@
382.191 317.372 mo
377.474 317.372 li
@
379.833 309.188 mo
377.474 309.188 li
@
379.833 301.003 mo
377.474 301.003 li
@
379.833 292.819 mo
377.474 292.819 li
@
382.191 284.634 mo
377.474 284.634 li
@
382.191 481.061 mo
377.474 481.061 li
@
379.833 489.245 mo
377.474 489.245 li
@
379.833 497.43 mo
377.474 497.43 li
@
379.833 505.614 mo
377.474 505.614 li
@
382.191 284.634 mo
377.474 284.634 li
@
379.833 276.45 mo
377.474 276.45 li
@
541.971 512.424 mo
377.474 512.424 li
@
532.832 505.001 mo
532.832 512.424 li
@
528.263 508.712 mo
528.263 512.424 li
@
523.694 508.712 mo
523.694 512.424 li
@
519.124 508.712 mo
519.124 512.424 li
@
514.555 505.001 mo
514.555 512.424 li
@
509.986 508.712 mo
509.986 512.424 li
@
505.416 508.712 mo
505.416 512.424 li
@
500.847 508.712 mo
500.847 512.424 li
@
496.277 505.001 mo
496.277 512.424 li
@
491.708 508.712 mo
491.708 512.424 li
@
487.139 508.712 mo
487.139 512.424 li
@
482.569 508.712 mo
482.569 512.424 li
@
478 505.001 mo
478 512.424 li
@
473.431 508.712 mo
473.431 512.424 li
@
468.861 508.712 mo
468.861 512.424 li
@
464.292 508.712 mo
464.292 512.424 li
@
459.723 505.001 mo
459.723 512.424 li
@
455.153 508.712 mo
455.153 512.424 li
@
450.584 508.712 mo
450.584 512.424 li
@
446.014 508.712 mo
446.014 512.424 li
@
441.445 505.001 mo
441.445 512.424 li
@
436.876 508.712 mo
436.876 512.424 li
@
432.306 508.712 mo
432.306 512.424 li
@
427.737 508.712 mo
427.737 512.424 li
@
423.168 505.001 mo
423.168 512.424 li
@
418.598 508.712 mo
418.598 512.424 li
@
414.029 508.712 mo
414.029 512.424 li
@
409.46 508.712 mo
409.46 512.424 li
@
404.89 505.001 mo
404.89 512.424 li
@
400.321 508.712 mo
400.321 512.424 li
@
395.751 508.712 mo
395.751 512.424 li
@
391.182 508.712 mo
391.182 512.424 li
@
386.613 505.001 mo
386.613 512.424 li
@
532.832 505.001 mo
532.832 512.424 li
@
537.402 508.712 mo
537.402 512.424 li
@
541.971 508.712 mo
541.971 512.424 li
@
386.613 505.001 mo
386.613 512.424 li
@
382.043 508.712 mo
382.043 512.424 li
@
377.474 508.712 mo
377.474 512.424 li
@
NLZQYP+Helvetica*1 [0 -10.7118 -10.7118 0 0 0 ]msf536.813 519.993 mo(0)sh518.295 534.95 mo(0.02)[-5.95581 -2.97784 -5.95575 0 ]ysh500.49 534.95 mo(0.04)[-5.95581 -2.97784 -5.95575 0 ]ysh481.972 534.95 mo(0.06)[-5.95581 -2.97784 -5.95575 0 ]ysh463.454 534.95 mo(0.08)[-5.95581 -2.97784 -5.95575 0 ]ysh445.649 527.115 mo(0.1)[-5.95581 -2.97784 0 ]ysh427.131 534.95 mo(0.12)[-5.95581 -2.97784 -5.95575 0 ]ysh408.613 534.95 mo(0.14)[-5.95581 -2.97784 -5.95575 0 ]yshgsave
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.7118 -10.7118 0 0 0 ]msf390.808 534.95 mo(0.16)[-5.95581 -2.97784 -5.95575 0 ]yshgrestore
541.971 275.926 mo
377.474 275.926 li
@
532.832 283.348 mo
532.832 275.926 li
@
528.263 279.637 mo
528.263 275.926 li
@
523.694 279.637 mo
523.694 275.926 li
@
519.124 279.637 mo
519.124 275.926 li
@
514.555 283.348 mo
514.555 275.926 li
@
509.986 279.637 mo
509.986 275.926 li
@
505.416 279.637 mo
505.416 275.926 li
@
500.847 279.637 mo
500.847 275.926 li
@
496.277 283.348 mo
496.277 275.926 li
@
491.708 279.637 mo
491.708 275.926 li
@
487.139 279.637 mo
487.139 275.926 li
@
482.569 279.637 mo
482.569 275.926 li
@
478 283.348 mo
478 275.926 li
@
473.431 279.637 mo
473.431 275.926 li
@
468.861 279.637 mo
468.861 275.926 li
@
464.292 279.637 mo
464.292 275.926 li
@
459.723 283.348 mo
459.723 275.926 li
@
455.153 279.637 mo
455.153 275.926 li
@
450.584 279.637 mo
450.584 275.926 li
@
446.014 279.637 mo
446.014 275.926 li
@
441.445 283.348 mo
441.445 275.926 li
@
436.876 279.637 mo
436.876 275.926 li
@
432.306 279.637 mo
432.306 275.926 li
@
427.737 279.637 mo
427.737 275.926 li
@
423.168 283.348 mo
423.168 275.926 li
@
418.598 279.637 mo
418.598 275.926 li
@
414.029 279.637 mo
414.029 275.926 li
@
409.46 279.637 mo
409.46 275.926 li
@
404.89 283.348 mo
404.89 275.926 li
@
400.321 279.637 mo
400.321 275.926 li
@
395.751 279.637 mo
395.751 275.926 li
@
391.182 279.637 mo
391.182 275.926 li
@
386.613 283.348 mo
386.613 275.926 li
@
532.832 283.348 mo
532.832 275.926 li
@
537.402 279.637 mo
537.402 275.926 li
@
541.971 279.637 mo
541.971 275.926 li
@
386.613 283.348 mo
386.613 275.926 li
@
382.043 279.637 mo
382.043 275.926 li
@
377.474 279.637 mo
377.474 275.926 li
@
gsave
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -16.4247 -16.4247 0 0 0 ]msf399.354 497.914 mo(27 GeV 40%-80%)[-9.13214 -9.13214 -4.56604 -12.7784 -9.13211 -10.9551 -4.56607 -9.13214 -9.13211 -14.6014 -5.4693 -9.13214 -9.13211 0 ]yshgrestore
gsave
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 10764 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/T 55 def
end
Helvetica /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 8{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -10.7118 -10.7118 0 0 0 ]msf572.424 292.082 mo(T)shgrestore
gsave
571 567 mo
571 275.926 li
377.474 275.926 li
377.474 567 li
cp
clp
NLZQYP+Helvetica*1 [0 -16.4247 -16.4247 0 0 0 ]msf563.166 301.341 mo(p)shgrestore
0.75 lw
[3 3 ] 0 dsh
532.832 513.799 mo
532.832 276.45 li
@
[] 0 dsh
523.926 462.237 mo
522.915 462.237 li
0.999 0.999 0.999 rgb
@
529.624 462.237 mo
530.634 462.237 li
@
526.775 465.313 mo
522.672 465.313 522.672 459.16 526.775 459.16 cv
530.877 459.16 530.877 465.313 526.775 465.313 cv
cp
511.129 435.849 mo
507.027 435.849 507.027 429.696 511.129 429.696 cv
515.231 429.696 515.231 435.849 511.129 435.849 cv
cp
491.329 401.475 mo
487.227 401.475 487.227 395.321 491.329 395.321 cv
495.431 395.321 495.431 401.475 491.329 401.475 cv
cp
464.15 372.011 mo
460.048 372.011 460.048 365.857 464.15 365.857 cv
468.252 365.857 468.252 372.011 464.15 372.011 cv
cp
430.379 337.636 mo
426.277 337.636 426.277 331.483 430.379 331.483 cv
434.482 331.483 434.482 337.636 430.379 337.636 cv
cp
407.581 308.172 mo
403.479 308.172 403.479 302.019 407.581 302.019 cv
411.684 302.019 411.684 308.172 407.581 308.172 cv
cp
0 0 0 rgb
f
524.638 462.237 mo
522.915 462.237 li
0.999 0.999 0.999 rgb
@
528.911 462.237 mo
530.634 462.237 li
@
405.445 305.095 mo
404.874 305.095 li
@
409.718 305.095 mo
410.289 305.095 li
@
526.775 464.516 mo
523.736 464.516 523.736 459.958 526.775 459.958 cv
529.813 459.958 529.813 464.516 526.775 464.516 cv
cp
511.129 435.052 mo
508.09 435.052 508.09 430.494 511.129 430.494 cv
514.168 430.494 514.168 435.052 511.129 435.052 cv
cp
491.329 400.677 mo
488.29 400.677 488.29 396.119 491.329 396.119 cv
494.368 396.119 494.368 400.677 491.329 400.677 cv
cp
464.15 371.213 mo
461.111 371.213 461.111 366.655 464.15 366.655 cv
467.189 366.655 467.189 371.213 464.15 371.213 cv
cp
430.379 336.838 mo
427.34 336.838 427.34 332.28 430.379 332.28 cv
433.418 332.28 433.418 336.838 430.379 336.838 cv
cp
407.581 307.374 mo
404.543 307.374 404.543 302.816 407.581 302.816 cv
410.62 302.816 410.62 307.374 407.581 307.374 cv
cp
f
524.638 462.237 mo
522.915 462.237 li
0 0 0 rgb
@
528.911 462.237 mo
530.634 462.237 li
@
405.445 305.095 mo
404.874 305.095 li
@
409.718 305.095 mo
410.289 305.095 li
@
526.775 464.516 mo
523.736 464.516 523.736 459.958 526.775 459.958 cv
529.813 459.958 529.813 464.516 526.775 464.516 cv
cp
511.129 435.052 mo
508.09 435.052 508.09 430.494 511.129 430.494 cv
514.168 430.494 514.168 435.052 511.129 435.052 cv
cp
491.329 400.677 mo
488.29 400.677 488.29 396.119 491.329 396.119 cv
494.368 396.119 494.368 400.677 491.329 400.677 cv
cp
464.15 371.213 mo
461.111 371.213 461.111 366.655 464.15 366.655 cv
467.189 366.655 467.189 371.213 464.15 371.213 cv
cp
430.379 336.838 mo
427.34 336.838 427.34 332.28 430.379 332.28 cv
433.418 332.28 433.418 336.838 430.379 336.838 cv
cp
407.581 307.374 mo
404.543 307.374 404.543 302.816 407.581 302.816 cv
410.62 302.816 410.62 307.374 407.581 307.374 cv
cp
0.2 0.6 1 rgb
f
510.586 470.566 mo
510.586 463.729 li
503.749 467.147 li
cp
483.601 436.191 mo
483.601 429.354 li
476.764 432.773 li
cp
456.897 406.727 mo
456.897 399.89 li
450.06 403.309 li
cp
432.16 372.353 mo
432.16 365.515 li
425.323 368.934 li
cp
413.262 342.889 mo
413.262 336.051 li
406.425 339.47 li
cp
397.353 308.514 mo
397.353 301.677 li
390.516 305.095 li
cp
0 0 0 rgb
f
509.446 469.426 mo
509.446 464.868 li
504.888 467.147 li
cp
482.461 435.052 mo
482.461 430.494 li
477.903 432.773 li
cp
455.758 405.588 mo
455.758 401.03 li
451.199 403.309 li
cp
431.021 371.213 mo
431.021 366.655 li
426.462 368.934 li
cp
412.123 341.749 mo
412.123 337.191 li
407.565 339.47 li
cp
396.213 307.374 mo
396.213 302.816 li
391.655 305.095 li
cp
0.999 0.999 0.999 rgb
f
509.446 469.426 mo
509.446 464.868 li
504.888 467.147 li
cp
482.461 435.052 mo
482.461 430.494 li
477.903 432.773 li
cp
455.758 405.588 mo
455.758 401.03 li
451.199 403.309 li
cp
431.021 371.213 mo
431.021 366.655 li
426.462 368.934 li
cp
412.123 341.749 mo
412.123 337.191 li
407.565 339.47 li
cp
396.213 307.374 mo
396.213 302.816 li
391.655 305.095 li
cp
1 0.6 0 rgb
@
511.524 463.792 mo
510.229 463.792 li
0.999 0.999 0.999 rgb
@
514.373 463.792 mo
515.668 463.792 li
@
495.716 431.054 mo
495.344 431.054 li
@
498.564 431.054 mo
498.936 431.054 li
@
467.815 398.316 mo
467.605 398.316 li
@
470.663 398.316 mo
470.873 398.316 li
@
446.9 365.578 mo
446.509 365.578 li
@
449.749 365.578 mo
450.14 365.578 li
@
427.707 332.841 mo
426.878 332.841 li
@
430.556 332.841 mo
431.384 332.841 li
@
412.37 301.74 mo
410.835 301.74 li
@
415.219 301.74 mo
416.753 301.74 li
@
509.416 463.792 mo
511.857 462.999 li
511.857 460.432 li
513.366 462.508 li
515.807 461.715 li
514.298 463.792 li
515.807 465.868 li
513.366 465.075 li
511.857 467.151 li
511.857 464.585 li
cp
493.607 431.054 mo
496.048 430.261 li
496.048 427.694 li
497.557 429.771 li
499.998 428.977 li
498.489 431.054 li
499.998 433.13 li
497.557 432.337 li
496.048 434.414 li
496.048 431.847 li
cp
465.706 398.316 mo
468.147 397.523 li
468.147 394.956 li
469.656 397.033 li
472.097 396.24 li
470.588 398.316 li
472.097 400.393 li
469.656 399.599 li
468.147 401.676 li
468.147 399.109 li
cp
444.792 365.578 mo
447.233 364.785 li
447.233 362.219 li
448.741 364.295 li
451.182 363.502 li
449.674 365.578 li
451.182 367.655 li
448.741 366.862 li
447.233 368.938 li
447.233 366.371 li
cp
425.599 332.841 mo
428.039 332.048 li
428.039 329.481 li
429.548 331.557 li
431.989 330.764 li
430.48 332.841 li
431.989 334.917 li
429.548 334.124 li
428.039 336.2 li
428.039 333.634 li
cp
410.262 301.74 mo
412.703 300.947 li
412.703 298.38 li
414.211 300.456 li
416.652 299.663 li
415.143 301.74 li
416.652 303.816 li
414.211 303.023 li
412.703 305.099 li
412.703 302.533 li
cp
0 0 0 rgb
f
511.88 463.792 mo
510.229 463.792 li
0.999 0.999 0.999 rgb
@
514.017 463.792 mo
515.668 463.792 li
@
496.072 431.054 mo
495.344 431.054 li
@
498.208 431.054 mo
498.936 431.054 li
@
468.171 398.316 mo
467.605 398.316 li
@
470.307 398.316 mo
470.873 398.316 li
@
447.256 365.578 mo
446.509 365.578 li
@
449.393 365.578 mo
450.14 365.578 li
@
428.063 332.841 mo
426.878 332.841 li
@
430.199 332.841 mo
431.384 332.841 li
@
412.726 301.74 mo
410.835 301.74 li
@
414.863 301.74 mo
416.753 301.74 li
@
510.67 463.792 mo
512.244 463.28 li
512.244 461.624 li
513.218 462.964 li
514.793 462.452 li
513.819 463.792 li
514.793 465.131 li
513.218 464.62 li
512.244 465.959 li
512.244 464.303 li
cp
494.861 431.054 mo
496.436 430.542 li
496.436 428.886 li
497.409 430.226 li
498.984 429.714 li
498.011 431.054 li
498.984 432.394 li
497.409 431.882 li
496.436 433.221 li
496.436 431.566 li
cp
466.96 398.316 mo
468.535 397.804 li
468.535 396.149 li
469.508 397.488 li
471.083 396.977 li
470.11 398.316 li
471.083 399.656 li
469.508 399.144 li
468.535 400.484 li
468.535 398.828 li
cp
446.045 365.578 mo
447.62 365.067 li
447.62 363.411 li
448.594 364.75 li
450.168 364.239 li
449.195 365.578 li
450.168 366.918 li
448.594 366.406 li
447.62 367.746 li
447.62 366.09 li
cp
426.852 332.841 mo
428.427 332.329 li
428.427 330.673 li
429.4 332.013 li
430.975 331.501 li
430.002 332.841 li
430.975 334.18 li
429.4 333.669 li
428.427 335.008 li
428.427 333.352 li
cp
411.515 301.74 mo
413.09 301.228 li
413.09 299.572 li
414.063 300.912 li
415.638 300.4 li
414.665 301.74 li
415.638 303.079 li
414.063 302.568 li
413.09 303.907 li
413.09 302.251 li
cp
f
511.88 463.792 mo
510.229 463.792 li
0 0 0 rgb
@
514.017 463.792 mo
515.668 463.792 li
@
496.072 431.054 mo
495.344 431.054 li
@
498.208 431.054 mo
498.936 431.054 li
@
468.171 398.316 mo
467.605 398.316 li
@
470.307 398.316 mo
470.873 398.316 li
@
447.256 365.578 mo
446.509 365.578 li
@
449.393 365.578 mo
450.14 365.578 li
@
428.063 332.841 mo
426.878 332.841 li
@
430.199 332.841 mo
431.384 332.841 li
@
412.726 301.74 mo
410.835 301.74 li
@
414.863 301.74 mo
416.753 301.74 li
@
510.67 463.792 mo
512.244 463.28 li
512.244 461.624 li
513.218 462.964 li
514.793 462.452 li
513.819 463.792 li
514.793 465.131 li
513.218 464.62 li
512.244 465.959 li
512.244 464.303 li
cp
494.861 431.054 mo
496.436 430.542 li
496.436 428.886 li
497.409 430.226 li
498.984 429.714 li
498.011 431.054 li
498.984 432.394 li
497.409 431.882 li
496.436 433.221 li
496.436 431.566 li
cp
466.96 398.316 mo
468.535 397.804 li
468.535 396.149 li
469.508 397.488 li
471.083 396.977 li
470.11 398.316 li
471.083 399.656 li
469.508 399.144 li
468.535 400.484 li
468.535 398.828 li
cp
446.045 365.578 mo
447.62 365.067 li
447.62 363.411 li
448.594 364.75 li
450.168 364.239 li
449.195 365.578 li
450.168 366.918 li
448.594 366.406 li
447.62 367.746 li
447.62 366.09 li
cp
426.852 332.841 mo
428.427 332.329 li
428.427 330.673 li
429.4 332.013 li
430.975 331.501 li
430.002 332.841 li
430.975 334.18 li
429.4 333.669 li
428.427 335.008 li
428.427 333.352 li
cp
411.515 301.74 mo
413.09 301.228 li
413.09 299.572 li
414.063 300.912 li
415.638 300.4 li
414.665 301.74 li
415.638 303.079 li
414.063 302.568 li
413.09 303.907 li
413.09 302.251 li
cp
0 0.8 0 rgb
f
449.521 463.792 mo
427.591 463.792 li
0.999 0.999 0.999 rgb
@
455.219 463.792 mo
477.15 463.792 li
@
506.512 431.054 mo
502.234 431.054 li
@
512.21 431.054 mo
516.488 431.054 li
@
489.485 398.316 mo
487.673 398.316 li
@
495.183 398.316 mo
496.994 398.316 li
@
468.862 365.578 mo
467.544 365.578 li
@
474.56 365.578 mo
475.878 365.578 li
@
444.825 333.004 mo
443.335 333.004 li
@
450.523 333.004 mo
452.013 333.004 li
@
403.618 301.74 mo
401.459 301.74 li
@
409.316 301.74 mo
411.475 301.74 li
@
455.447 463.792 mo
449.294 460.715 li
449.294 466.868 li
cp
512.438 431.054 mo
506.284 427.977 li
506.284 434.131 li
cp
495.411 398.316 mo
489.257 395.239 li
489.257 401.393 li
cp
474.788 365.578 mo
468.634 362.502 li
468.634 368.655 li
cp
450.751 333.004 mo
444.598 329.927 li
444.598 336.081 li
cp
409.544 301.74 mo
403.39 298.663 li
403.39 304.817 li
cp
0 0 0 rgb
f
450.234 463.792 mo
427.591 463.792 li
0.999 0.999 0.999 rgb
@
454.507 463.792 mo
477.15 463.792 li
@
507.225 431.054 mo
502.234 431.054 li
@
511.498 431.054 mo
516.488 431.054 li
@
490.197 398.316 mo
487.673 398.316 li
@
494.47 398.316 mo
496.994 398.316 li
@
469.574 365.578 mo
467.544 365.578 li
@
473.847 365.578 mo
475.878 365.578 li
@
445.538 333.004 mo
443.335 333.004 li
@
449.811 333.004 mo
452.013 333.004 li
@
404.33 301.74 mo
401.459 301.74 li
@
408.604 301.74 mo
411.475 301.74 li
@
454.649 463.792 mo
450.091 461.513 li
450.091 466.071 li
cp
511.64 431.054 mo
507.082 428.775 li
507.082 433.333 li
cp
494.613 398.316 mo
490.055 396.037 li
490.055 400.595 li
cp
473.99 365.578 mo
469.432 363.299 li
469.432 367.857 li
cp
449.953 333.004 mo
445.395 330.725 li
445.395 335.283 li
cp
408.746 301.74 mo
404.188 299.461 li
404.188 304.019 li
cp
f
450.234 463.792 mo
427.591 463.792 li
0 0 0 rgb
@
454.507 463.792 mo
477.15 463.792 li
@
507.225 431.054 mo
502.234 431.054 li
@
511.498 431.054 mo
516.488 431.054 li
@
490.197 398.316 mo
487.673 398.316 li
@
494.47 398.316 mo
496.994 398.316 li
@
469.574 365.578 mo
467.544 365.578 li
@
473.847 365.578 mo
475.878 365.578 li
@
445.538 333.004 mo
443.335 333.004 li
@
449.811 333.004 mo
452.013 333.004 li
@
404.33 301.74 mo
401.459 301.74 li
@
408.604 301.74 mo
411.475 301.74 li
@
454.649 463.792 mo
450.091 461.513 li
450.091 466.071 li
cp
511.64 431.054 mo
507.082 428.775 li
507.082 433.333 li
cp
494.613 398.316 mo
490.055 396.037 li
490.055 400.595 li
cp
473.99 365.578 mo
469.432 363.299 li
469.432 367.857 li
cp
449.953 333.004 mo
445.395 330.725 li
445.395 335.283 li
cp
408.746 301.74 mo
404.188 299.461 li
404.188 304.019 li
cp
0.8 0.8 0.8 rgb
f
487.88 389.641 mo
483.478 389.641 li
0.999 0.999 0.999 rgb
@
493.577 389.641 mo
497.979 389.641 li
@
440.022 310.579 mo
435.01 310.579 li
@
445.72 310.579 mo
450.733 310.579 li
@
490.729 392.717 mo
486.626 392.717 486.626 386.564 490.729 386.564 cv
494.831 386.564 494.831 392.717 490.729 392.717 cv
cp
442.871 313.656 mo
438.769 313.656 438.769 307.502 442.871 307.502 cv
446.974 307.502 446.974 313.656 442.871 313.656 cv
cp
0 0 0 rgb
f
488.592 389.641 mo
483.478 389.641 li
0.999 0.999 0.999 rgb
@
492.865 389.641 mo
497.979 389.641 li
@
440.735 310.579 mo
435.01 310.579 li
@
445.008 310.579 mo
450.733 310.579 li
@
490.729 391.92 mo
487.69 391.92 487.69 387.362 490.729 387.362 cv
493.767 387.362 493.767 391.92 490.729 391.92 cv
cp
442.871 312.858 mo
439.832 312.858 439.832 308.3 442.871 308.3 cv
445.91 308.3 445.91 312.858 442.871 312.858 cv
cp
f
488.592 389.641 mo
483.478 389.641 li
0 0 0 rgb
@
492.865 389.641 mo
497.979 389.641 li
@
440.735 310.579 mo
435.01 310.579 li
@
445.008 310.579 mo
450.733 310.579 li
@
490.729 391.92 mo
487.69 391.92 487.69 387.362 490.729 387.362 cv
493.767 387.362 493.767 391.92 490.729 391.92 cv
cp
442.871 312.858 mo
439.832 312.858 439.832 308.3 442.871 308.3 cv
445.91 308.3 445.91 312.858 442.871 312.858 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
532.811 511.448 mo
532.761 509.498 li
532.683 507.547 li
532.575 505.597 li
532.438 503.646 li
532.273 501.696 li
532.078 499.745 li
531.855 497.795 li
531.604 495.844 li
531.324 493.894 li
531.017 491.943 li
530.682 489.993 li
530.319 488.042 li
529.929 486.092 li
529.511 484.141 li
529.067 482.191 li
528.597 480.24 li
528.1 478.29 li
527.578 476.339 li
527.03 474.389 li
526.457 472.438 li
525.859 470.487 li
525.236 468.537 li
524.59 466.586 li
523.92 464.636 li
523.226 462.685 li
522.509 460.735 li
521.77 458.784 li
521.008 456.834 li
520.225 454.883 li
519.42 452.933 li
518.594 450.982 li
517.747 449.032 li
516.88 447.081 li
515.993 445.131 li
515.086 443.18 li
514.161 441.23 li
513.216 439.279 li
512.253 437.329 li
511.272 435.378 li
510.274 433.428 li
509.258 431.477 li
508.225 429.527 li
507.176 427.576 li
506.111 425.626 li
505.03 423.675 li
503.934 421.725 li
502.822 419.774 li
501.696 417.824 li
500.556 415.873 li
@
500.556 415.873 mo
499.402 413.923 li
498.234 411.972 li
497.053 410.022 li
495.859 408.071 li
494.653 406.12 li
493.435 404.17 li
492.204 402.219 li
490.962 400.269 li
489.709 398.318 li
488.445 396.368 li
487.17 394.417 li
485.885 392.467 li
484.59 390.516 li
483.285 388.566 li
481.971 386.615 li
480.647 384.665 li
479.315 382.714 li
477.975 380.764 li
476.625 378.813 li
475.268 376.863 li
473.904 374.912 li
472.531 372.962 li
471.151 371.011 li
469.765 369.061 li
468.371 367.11 li
466.971 365.16 li
465.564 363.209 li
464.152 361.259 li
462.733 359.308 li
461.309 357.358 li
459.879 355.407 li
458.445 353.457 li
457.004 351.506 li
455.56 349.556 li
454.11 347.605 li
452.656 345.654 li
451.197 343.704 li
449.735 341.753 li
448.268 339.803 li
446.798 337.852 li
445.324 335.902 li
443.846 333.951 li
442.366 332.001 li
440.882 330.05 li
439.395 328.1 li
437.905 326.149 li
436.412 324.199 li
434.917 322.248 li
433.419 320.298 li
@
433.419 320.298 mo
431.919 318.347 li
@
433.548 320.466 mo
433.271 320.106 li
432.994 319.745 li
432.717 319.385 li
432.44 319.025 li
432.163 318.665 li
431.886 318.305 li
431.609 317.945 li
431.332 317.585 li
431.054 317.225 li
430.777 316.865 li
430.499 316.504 li
430.222 316.144 li
429.944 315.784 li
429.666 315.424 li
429.389 315.064 li
429.111 314.704 li
428.833 314.344 li
428.555 313.984 li
428.277 313.624 li
427.999 313.263 li
427.721 312.903 li
427.442 312.543 li
427.164 312.183 li
426.886 311.823 li
426.607 311.463 li
426.329 311.103 li
426.05 310.743 li
425.771 310.383 li
425.493 310.022 li
425.214 309.662 li
424.935 309.302 li
424.656 308.942 li
424.377 308.582 li
424.098 308.222 li
423.819 307.862 li
423.54 307.502 li
423.261 307.141 li
422.982 306.781 li
422.703 306.421 li
422.423 306.061 li
422.144 305.701 li
421.865 305.341 li
421.585 304.981 li
421.306 304.621 li
421.026 304.261 li
420.747 303.9 li
420.467 303.54 li
420.187 303.18 li
419.907 302.82 li
@
419.907 302.82 mo
419.628 302.46 li
419.348 302.1 li
419.068 301.74 li
418.788 301.38 li
418.508 301.02 li
418.228 300.659 li
417.948 300.299 li
417.668 299.939 li
417.388 299.579 li
417.108 299.219 li
416.828 298.859 li
416.547 298.499 li
416.267 298.139 li
415.987 297.778 li
415.706 297.418 li
415.426 297.058 li
415.146 296.698 li
414.865 296.338 li
414.585 295.978 li
414.304 295.618 li
414.024 295.258 li
413.743 294.898 li
413.462 294.537 li
413.182 294.177 li
412.901 293.817 li
412.62 293.457 li
412.34 293.097 li
412.059 292.737 li
411.778 292.377 li
411.497 292.017 li
411.216 291.656 li
410.935 291.296 li
410.655 290.936 li
410.374 290.576 li
410.093 290.216 li
409.812 289.856 li
409.531 289.496 li
409.25 289.136 li
408.969 288.776 li
408.687 288.415 li
408.406 288.055 li
408.125 287.695 li
407.844 287.335 li
407.563 286.975 li
407.282 286.615 li
407.001 286.255 li
406.719 285.895 li
406.438 285.535 li
406.157 285.174 li
@
406.157 285.174 mo
405.876 284.814 li
@
[] 0 dsh
532.815 511.448 mo
532.776 509.498 li
532.713 507.547 li
532.626 505.597 li
532.516 503.646 li
532.383 501.696 li
532.227 499.745 li
532.047 497.795 li
531.843 495.844 li
531.616 493.894 li
531.365 491.943 li
531.091 489.993 li
530.793 488.042 li
530.471 486.092 li
530.125 484.141 li
529.756 482.191 li
529.363 480.24 li
528.946 478.29 li
528.505 476.339 li
528.041 474.389 li
527.553 472.438 li
527.041 470.487 li
526.506 468.537 li
525.948 466.586 li
525.366 464.636 li
524.761 462.685 li
524.133 460.735 li
523.482 458.784 li
522.808 456.834 li
522.112 454.883 li
521.394 452.933 li
520.654 450.982 li
519.892 449.032 li
519.108 447.081 li
518.303 445.131 li
517.477 443.18 li
516.63 441.23 li
515.763 439.279 li
514.876 437.329 li
513.969 435.378 li
513.043 433.428 li
512.097 431.477 li
511.133 429.527 li
510.15 427.576 li
509.15 425.626 li
508.131 423.675 li
507.096 421.725 li
506.043 419.774 li
504.973 417.824 li
503.888 415.873 li
0.8 0.8 0.8 rgb
@
503.888 415.873 mo
502.786 413.923 li
501.669 411.972 li
500.537 410.022 li
499.39 408.071 li
498.229 406.12 li
497.054 404.17 li
495.865 402.219 li
494.662 400.269 li
493.447 398.318 li
492.218 396.368 li
490.978 394.417 li
489.726 392.467 li
488.462 390.516 li
487.186 388.566 li
485.9 386.615 li
484.603 384.665 li
483.296 382.714 li
481.979 380.764 li
480.652 378.813 li
479.316 376.863 li
477.97 374.912 li
476.616 372.962 li
475.253 371.011 li
473.882 369.061 li
472.503 367.11 li
471.116 365.16 li
469.722 363.209 li
468.321 361.259 li
466.913 359.308 li
465.498 357.358 li
464.076 355.407 li
462.649 353.457 li
461.215 351.506 li
459.776 349.556 li
458.331 347.605 li
456.88 345.654 li
455.425 343.704 li
453.965 341.753 li
452.5 339.803 li
451.03 337.852 li
449.556 335.902 li
448.078 333.951 li
446.596 332.001 li
445.11 330.05 li
443.621 328.1 li
442.128 326.149 li
440.632 324.199 li
439.132 322.248 li
437.63 320.298 li
@
437.63 320.298 mo
436.125 318.347 li
@
437.76 320.466 mo
437.482 320.106 li
437.204 319.745 li
436.926 319.385 li
436.648 319.025 li
436.37 318.665 li
436.092 318.305 li
435.814 317.945 li
435.536 317.585 li
435.257 317.225 li
434.979 316.865 li
434.7 316.504 li
434.422 316.144 li
434.143 315.784 li
433.864 315.424 li
433.585 315.064 li
433.306 314.704 li
433.027 314.344 li
432.748 313.984 li
432.469 313.624 li
432.189 313.263 li
431.91 312.903 li
431.631 312.543 li
431.351 312.183 li
431.071 311.823 li
430.792 311.463 li
430.512 311.103 li
430.232 310.743 li
429.952 310.383 li
429.672 310.022 li
429.392 309.662 li
429.112 309.302 li
428.832 308.942 li
428.551 308.582 li
428.271 308.222 li
427.991 307.862 li
427.71 307.502 li
427.429 307.141 li
427.149 306.781 li
426.868 306.421 li
426.587 306.061 li
426.307 305.701 li
426.026 305.341 li
425.745 304.981 li
425.464 304.621 li
425.183 304.261 li
424.902 303.9 li
424.62 303.54 li
424.339 303.18 li
424.058 302.82 li
@
424.058 302.82 mo
423.776 302.46 li
423.495 302.1 li
423.214 301.74 li
422.932 301.38 li
422.65 301.02 li
422.369 300.659 li
422.087 300.299 li
421.805 299.939 li
421.524 299.579 li
421.242 299.219 li
420.96 298.859 li
420.678 298.499 li
420.396 298.139 li
420.114 297.778 li
419.832 297.418 li
419.55 297.058 li
419.267 296.698 li
418.985 296.338 li
418.703 295.978 li
418.421 295.618 li
418.138 295.258 li
417.856 294.898 li
417.573 294.537 li
417.291 294.177 li
417.008 293.817 li
416.726 293.457 li
416.443 293.097 li
416.161 292.737 li
415.878 292.377 li
415.595 292.017 li
415.312 291.656 li
415.03 291.296 li
414.747 290.936 li
414.464 290.576 li
414.181 290.216 li
413.898 289.856 li
413.615 289.496 li
413.332 289.136 li
413.049 288.776 li
412.766 288.415 li
412.483 288.055 li
412.2 287.695 li
411.917 287.335 li
411.634 286.975 li
411.35 286.615 li
411.067 286.255 li
410.784 285.895 li
410.501 285.535 li
410.217 285.174 li
@
410.217 285.174 mo
409.934 284.814 li
@
532.788 511.448 mo
532.684 509.498 li
532.519 507.547 li
532.294 505.597 li
532.01 503.646 li
531.667 501.696 li
531.268 499.745 li
530.813 497.795 li
530.303 495.844 li
529.741 493.894 li
529.129 491.943 li
528.467 489.993 li
527.759 488.042 li
527.006 486.092 li
526.21 484.141 li
525.373 482.191 li
524.498 480.24 li
523.587 478.29 li
522.641 476.339 li
521.663 474.389 li
520.654 472.438 li
519.617 470.487 li
518.554 468.537 li
517.466 466.586 li
516.355 464.636 li
515.223 462.685 li
514.072 460.735 li
512.901 458.784 li
511.715 456.834 li
510.512 454.883 li
509.296 452.933 li
508.066 450.982 li
506.824 449.032 li
505.57 447.081 li
504.307 445.131 li
503.034 443.18 li
501.752 441.23 li
500.462 439.279 li
499.165 437.329 li
497.861 435.378 li
496.55 433.428 li
495.234 431.477 li
493.912 429.527 li
492.585 427.576 li
491.253 425.626 li
489.917 423.675 li
488.576 421.725 li
487.231 419.774 li
485.882 417.824 li
484.53 415.873 li
0 0.8 0 rgb
@
484.53 415.873 mo
483.174 413.923 li
481.815 411.972 li
480.453 410.022 li
479.088 408.071 li
477.719 406.12 li
476.348 404.17 li
474.974 402.219 li
473.597 400.269 li
472.218 398.318 li
470.836 396.368 li
469.451 394.417 li
468.064 392.467 li
466.674 390.516 li
465.282 388.566 li
463.888 386.615 li
462.491 384.665 li
461.092 382.714 li
459.691 380.764 li
458.287 378.813 li
456.881 376.863 li
455.474 374.912 li
454.064 372.962 li
452.652 371.011 li
451.238 369.061 li
449.822 367.11 li
448.404 365.16 li
446.984 363.209 li
445.562 361.259 li
444.139 359.308 li
442.714 357.358 li
441.287 355.407 li
439.858 353.457 li
438.428 351.506 li
436.996 349.556 li
435.563 347.605 li
434.128 345.654 li
432.692 343.704 li
431.254 341.753 li
429.815 339.803 li
428.375 337.852 li
426.933 335.902 li
425.491 333.951 li
424.047 332.001 li
422.602 330.05 li
421.156 328.1 li
419.709 326.149 li
418.261 324.199 li
416.812 322.248 li
415.362 320.298 li
@
415.362 320.298 mo
413.912 318.347 li
@
415.487 320.466 mo
415.219 320.106 li
414.951 319.745 li
414.684 319.385 li
414.416 319.025 li
414.148 318.665 li
413.88 318.305 li
413.612 317.945 li
413.344 317.585 li
413.076 317.225 li
412.808 316.865 li
412.54 316.504 li
412.272 316.144 li
412.004 315.784 li
411.736 315.424 li
411.468 315.064 li
411.2 314.704 li
410.932 314.344 li
410.664 313.984 li
410.396 313.624 li
410.127 313.263 li
409.859 312.903 li
409.591 312.543 li
409.323 312.183 li
409.054 311.823 li
408.786 311.463 li
408.518 311.103 li
408.249 310.743 li
407.981 310.383 li
407.713 310.022 li
407.444 309.662 li
407.176 309.302 li
406.907 308.942 li
406.639 308.582 li
406.37 308.222 li
406.102 307.862 li
405.833 307.502 li
405.565 307.141 li
405.296 306.781 li
405.028 306.421 li
404.759 306.061 li
404.49 305.701 li
404.222 305.341 li
403.953 304.981 li
403.685 304.621 li
403.416 304.261 li
403.147 303.9 li
402.879 303.54 li
402.61 303.18 li
402.341 302.82 li
@
402.341 302.82 mo
402.072 302.46 li
401.804 302.1 li
401.535 301.74 li
401.266 301.38 li
400.997 301.02 li
400.729 300.659 li
400.46 300.299 li
400.191 299.939 li
399.922 299.579 li
399.653 299.219 li
399.384 298.859 li
399.116 298.499 li
398.847 298.139 li
398.578 297.778 li
398.309 297.418 li
398.04 297.058 li
397.771 296.698 li
397.502 296.338 li
397.233 295.978 li
396.964 295.618 li
396.696 295.258 li
396.427 294.898 li
396.158 294.537 li
395.889 294.177 li
395.62 293.817 li
395.351 293.457 li
395.082 293.097 li
394.813 292.737 li
394.544 292.377 li
394.275 292.017 li
394.006 291.656 li
393.737 291.296 li
393.468 290.936 li
393.199 290.576 li
392.93 290.216 li
392.661 289.856 li
392.392 289.496 li
392.123 289.136 li
391.854 288.776 li
391.585 288.415 li
391.316 288.055 li
391.047 287.695 li
390.778 287.335 li
390.509 286.975 li
390.24 286.615 li
389.971 286.255 li
389.702 285.895 li
389.433 285.535 li
389.164 285.174 li
@
389.164 285.174 mo
388.895 284.814 li
@
532.808 511.448 mo
532.749 509.498 li
532.657 507.547 li
532.531 505.597 li
532.372 503.646 li
532.179 501.696 li
531.952 499.745 li
531.693 497.795 li
531.402 495.844 li
531.078 493.894 li
530.723 491.943 li
530.336 489.993 li
529.918 488.042 li
529.471 486.092 li
528.993 484.141 li
528.486 482.191 li
527.951 480.24 li
527.387 478.29 li
526.796 476.339 li
526.178 474.389 li
525.534 472.438 li
524.864 470.487 li
524.169 468.537 li
523.449 466.586 li
522.705 464.636 li
521.937 462.685 li
521.147 460.735 li
520.334 458.784 li
519.5 456.834 li
518.644 454.883 li
517.768 452.933 li
516.871 450.982 li
515.955 449.032 li
515.019 447.081 li
514.065 445.131 li
513.092 443.18 li
512.102 441.23 li
511.095 439.279 li
510.07 437.329 li
509.029 435.378 li
507.972 433.428 li
506.9 431.477 li
505.812 429.527 li
504.71 427.576 li
503.593 425.626 li
502.462 423.675 li
501.317 421.725 li
500.16 419.774 li
498.989 417.824 li
497.805 415.873 li
0.2 0.6 1 rgb
@
497.805 415.873 mo
496.61 413.923 li
495.402 411.972 li
494.183 410.022 li
492.953 408.071 li
491.712 406.12 li
490.46 404.17 li
489.197 402.219 li
487.925 400.269 li
486.643 398.318 li
485.352 396.368 li
484.051 394.417 li
482.741 392.467 li
481.423 390.516 li
480.096 388.566 li
478.761 386.615 li
477.418 384.665 li
476.068 382.714 li
474.71 380.764 li
473.345 378.813 li
471.973 376.863 li
470.595 374.912 li
469.21 372.962 li
467.818 371.011 li
466.421 369.061 li
465.018 367.11 li
463.609 365.16 li
462.194 363.209 li
460.774 361.259 li
459.35 359.308 li
457.92 357.358 li
456.486 355.407 li
455.047 353.457 li
453.604 351.506 li
452.156 349.556 li
450.705 347.605 li
449.249 345.654 li
447.79 343.704 li
446.328 341.753 li
444.862 339.803 li
443.392 337.852 li
441.92 335.902 li
440.445 333.951 li
438.967 332.001 li
437.486 330.05 li
436.002 328.1 li
434.516 326.149 li
433.028 324.199 li
431.538 322.248 li
430.045 320.298 li
@
430.045 320.298 mo
428.55 318.347 li
@
430.174 320.466 mo
429.898 320.106 li
429.622 319.745 li
429.346 319.385 li
429.07 319.025 li
428.794 318.665 li
428.518 318.305 li
428.242 317.945 li
427.966 317.585 li
427.689 317.225 li
427.413 316.865 li
427.137 316.504 li
426.86 316.144 li
426.584 315.784 li
426.307 315.424 li
426.031 315.064 li
425.754 314.704 li
425.477 314.344 li
425.2 313.984 li
424.923 313.624 li
424.647 313.263 li
424.37 312.903 li
424.093 312.543 li
423.816 312.183 li
423.538 311.823 li
423.261 311.463 li
422.984 311.103 li
422.707 310.743 li
422.429 310.383 li
422.152 310.022 li
421.875 309.662 li
421.597 309.302 li
421.32 308.942 li
421.042 308.582 li
420.764 308.222 li
420.487 307.862 li
420.209 307.502 li
419.931 307.141 li
419.654 306.781 li
419.376 306.421 li
419.098 306.061 li
418.82 305.701 li
418.542 305.341 li
418.264 304.981 li
417.986 304.621 li
417.708 304.261 li
417.43 303.9 li
417.152 303.54 li
416.873 303.18 li
416.595 302.82 li
@
416.595 302.82 mo
416.317 302.46 li
416.039 302.1 li
415.76 301.74 li
415.482 301.38 li
415.203 301.02 li
414.925 300.659 li
414.647 300.299 li
414.368 299.939 li
414.089 299.579 li
413.811 299.219 li
413.532 298.859 li
413.254 298.499 li
412.975 298.139 li
412.696 297.778 li
412.418 297.418 li
412.139 297.058 li
411.86 296.698 li
411.581 296.338 li
411.302 295.978 li
411.024 295.618 li
410.745 295.258 li
410.466 294.898 li
410.187 294.537 li
409.908 294.177 li
409.629 293.817 li
409.35 293.457 li
409.071 293.097 li
408.792 292.737 li
408.513 292.377 li
408.234 292.017 li
407.954 291.656 li
407.675 291.296 li
407.396 290.936 li
407.117 290.576 li
406.838 290.216 li
406.559 289.856 li
406.279 289.496 li
406 289.136 li
405.721 288.776 li
405.442 288.415 li
405.162 288.055 li
404.883 287.695 li
404.604 287.335 li
404.324 286.975 li
404.045 286.615 li
403.766 286.255 li
403.486 285.895 li
403.207 285.535 li
402.927 285.174 li
@
402.927 285.174 mo
402.648 284.814 li
@
[5 5 ] 0 dsh
532.772 511.448 mo
532.631 509.498 li
532.409 507.547 li
532.106 505.597 li
531.725 503.646 li
531.269 501.696 li
530.739 499.745 li
530.139 497.795 li
529.472 495.844 li
528.742 493.894 li
527.951 491.943 li
527.103 489.993 li
526.203 488.042 li
525.252 486.092 li
524.255 484.141 li
523.216 482.191 li
522.137 480.24 li
521.021 478.29 li
519.873 476.339 li
518.694 474.389 li
517.487 472.438 li
516.256 470.487 li
515.002 468.537 li
513.729 466.586 li
512.438 464.636 li
511.13 462.685 li
509.809 460.735 li
508.476 458.784 li
507.132 456.834 li
505.78 454.883 li
504.419 452.933 li
503.051 450.982 li
501.678 449.032 li
500.301 447.081 li
498.919 445.131 li
497.535 443.18 li
496.148 441.23 li
494.759 439.279 li
493.368 437.329 li
491.977 435.378 li
490.585 433.428 li
489.192 431.477 li
487.799 429.527 li
486.407 427.576 li
485.014 425.626 li
483.622 423.675 li
482.23 421.725 li
480.839 419.774 li
479.448 417.824 li
478.057 415.873 li
1 0.6 0 rgb
@
478.057 415.873 mo
476.667 413.923 li
475.277 411.972 li
473.888 410.022 li
472.498 408.071 li
471.109 406.12 li
469.721 404.17 li
468.332 402.219 li
466.944 400.269 li
465.555 398.318 li
464.166 396.368 li
462.777 394.417 li
461.388 392.467 li
459.998 390.516 li
458.608 388.566 li
457.218 386.615 li
455.827 384.665 li
454.436 382.714 li
453.043 380.764 li
451.65 378.813 li
450.257 376.863 li
448.862 374.912 li
447.467 372.962 li
446.071 371.011 li
444.674 369.061 li
443.276 367.11 li
441.877 365.16 li
440.477 363.209 li
439.076 361.259 li
437.674 359.308 li
436.271 357.358 li
434.867 355.407 li
433.462 353.457 li
432.056 351.506 li
430.649 349.556 li
429.241 347.605 li
427.832 345.654 li
426.422 343.704 li
425.01 341.753 li
423.598 339.803 li
422.185 337.852 li
420.772 335.902 li
419.357 333.951 li
417.941 332.001 li
416.524 330.05 li
415.107 328.1 li
413.689 326.149 li
412.27 324.199 li
410.85 322.248 li
409.43 320.298 li
@
409.43 320.298 mo
408.008 318.347 li
@
409.552 320.466 mo
409.29 320.106 li
409.027 319.745 li
408.765 319.385 li
408.502 319.025 li
408.24 318.665 li
407.978 318.305 li
407.715 317.945 li
407.453 317.585 li
407.19 317.225 li
406.928 316.865 li
406.665 316.504 li
406.403 316.144 li
406.14 315.784 li
405.877 315.424 li
405.615 315.064 li
405.352 314.704 li
405.089 314.344 li
404.827 313.984 li
404.564 313.624 li
404.301 313.263 li
404.038 312.903 li
403.776 312.543 li
403.513 312.183 li
403.25 311.823 li
402.987 311.463 li
402.724 311.103 li
402.462 310.743 li
402.199 310.383 li
401.936 310.022 li
401.673 309.662 li
401.41 309.302 li
401.147 308.942 li
400.884 308.582 li
400.621 308.222 li
400.358 307.862 li
400.095 307.502 li
399.832 307.141 li
399.569 306.781 li
399.306 306.421 li
399.043 306.061 li
398.78 305.701 li
398.517 305.341 li
398.253 304.981 li
397.99 304.621 li
397.727 304.261 li
397.464 303.9 li
397.201 303.54 li
396.938 303.18 li
396.674 302.82 li
@
396.674 302.82 mo
396.411 302.46 li
396.148 302.1 li
395.885 301.74 li
395.621 301.38 li
395.358 301.02 li
395.095 300.659 li
394.831 300.299 li
394.568 299.939 li
394.305 299.579 li
394.041 299.219 li
393.778 298.859 li
393.515 298.499 li
393.251 298.139 li
392.988 297.778 li
392.725 297.418 li
392.461 297.058 li
392.198 296.698 li
391.934 296.338 li
391.671 295.978 li
391.408 295.618 li
391.144 295.258 li
390.881 294.898 li
390.617 294.537 li
390.354 294.177 li
390.09 293.817 li
389.827 293.457 li
389.563 293.097 li
389.3 292.737 li
389.036 292.377 li
388.773 292.017 li
388.509 291.656 li
388.246 291.296 li
387.982 290.936 li
387.719 290.576 li
387.455 290.216 li
387.192 289.856 li
386.928 289.496 li
386.664 289.136 li
386.401 288.776 li
386.137 288.415 li
385.874 288.055 li
385.61 287.695 li
385.347 287.335 li
385.083 286.975 li
384.819 286.615 li
384.556 286.255 li
384.292 285.895 li
384.029 285.535 li
383.765 285.174 li
@
383.765 285.174 mo
383.501 284.814 li
@
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
1 1 1 rgb
ef
0.002 lw
[] 0 dsh
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
@
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
0.999 0.999 0.999 rgb
ef
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
@
0.75 lw
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
0 0 0 rgb
@
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
@
0.75 lw
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
0 0 0 rgb
@
1.5 lw
211.475 275.926 mo
211.475 38.002 li
@
206.496 244.374 mo
211.475 244.374 li
@
208.986 236.14 mo
211.475 236.14 li
@
208.986 227.906 mo
211.475 227.906 li
@
208.986 219.673 mo
211.475 219.673 li
@
206.496 211.439 mo
211.475 211.439 li
@
208.986 203.205 mo
211.475 203.205 li
@
208.986 194.971 mo
211.475 194.971 li
@
208.986 186.737 mo
211.475 186.737 li
@
206.496 178.503 mo
211.475 178.503 li
@
208.986 170.27 mo
211.475 170.27 li
@
208.986 162.036 mo
211.475 162.036 li
@
208.986 153.802 mo
211.475 153.802 li
@
206.496 145.568 mo
211.475 145.568 li
@
208.986 137.334 mo
211.475 137.334 li
@
208.986 129.101 mo
211.475 129.101 li
@
208.986 120.867 mo
211.475 120.867 li
@
206.496 112.633 mo
211.475 112.633 li
@
208.986 104.399 mo
211.475 104.399 li
@
208.986 96.165 mo
211.475 96.165 li
@
208.986 87.931 mo
211.475 87.931 li
@
206.496 79.698 mo
211.475 79.698 li
@
208.986 71.464 mo
211.475 71.464 li
@
208.986 63.23 mo
211.475 63.23 li
@
208.986 54.996 mo
211.475 54.996 li
@
206.496 46.762 mo
211.475 46.762 li
@
206.496 244.374 mo
211.475 244.374 li
@
208.986 252.608 mo
211.475 252.608 li
@
208.986 260.842 mo
211.475 260.842 li
@
208.986 269.075 mo
211.475 269.075 li
@
206.496 46.762 mo
211.475 46.762 li
@
208.986 38.529 mo
211.475 38.529 li
@
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 252.91 mo(0.2)[-5.94176 -2.97087 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 219.435 mo(0.4)[-5.94176 -2.97087 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 186.673 mo(0.6)[-5.94176 -2.97087 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 153.911 mo(0.8)[-5.94176 -2.97087 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 115.451 mo(1)shgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 87.674 mo(1.2)[-5.94175 -2.97087 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf221.299 54.912 mo(1.4)[-5.94175 -2.97087 0 ]yshgrestore
45.477 275.926 mo
45.477 38.002 li
@
50.457 244.374 mo
45.477 244.374 li
@
47.967 236.14 mo
45.477 236.14 li
@
47.967 227.906 mo
45.477 227.906 li
@
47.967 219.673 mo
45.477 219.673 li
@
50.457 211.439 mo
45.477 211.439 li
@
47.967 203.205 mo
45.477 203.205 li
@
47.967 194.971 mo
45.477 194.971 li
@
47.967 186.737 mo
45.477 186.737 li
@
50.457 178.503 mo
45.477 178.503 li
@
47.967 170.27 mo
45.477 170.27 li
@
47.967 162.036 mo
45.477 162.036 li
@
47.967 153.802 mo
45.477 153.802 li
@
50.457 145.568 mo
45.477 145.568 li
@
47.967 137.334 mo
45.477 137.334 li
@
47.967 129.101 mo
45.477 129.101 li
@
47.967 120.867 mo
45.477 120.867 li
@
50.457 112.633 mo
45.477 112.633 li
@
47.967 104.399 mo
45.477 104.399 li
@
47.967 96.165 mo
45.477 96.165 li
@
47.967 87.931 mo
45.477 87.931 li
@
50.457 79.698 mo
45.477 79.698 li
@
47.967 71.464 mo
45.477 71.464 li
@
47.967 63.23 mo
45.477 63.23 li
@
47.967 54.996 mo
45.477 54.996 li
@
50.457 46.762 mo
45.477 46.762 li
@
50.457 244.374 mo
45.477 244.374 li
@
47.967 252.608 mo
45.477 252.608 li
@
47.967 260.842 mo
45.477 260.842 li
@
47.967 269.075 mo
45.477 269.075 li
@
50.457 46.762 mo
45.477 46.762 li
@
47.967 38.529 mo
45.477 38.529 li
@
211.475 275.926 mo
45.477 275.926 li
@
191.556 268.788 mo
191.556 275.926 li
@
184.916 272.357 mo
184.916 275.926 li
@
178.276 272.357 mo
178.276 275.926 li
@
171.636 272.357 mo
171.636 275.926 li
@
164.996 268.788 mo
164.996 275.926 li
@
158.356 272.357 mo
158.356 275.926 li
@
151.716 272.357 mo
151.716 275.926 li
@
145.076 272.357 mo
145.076 275.926 li
@
138.436 268.788 mo
138.436 275.926 li
@
131.796 272.357 mo
131.796 275.926 li
@
125.156 272.357 mo
125.156 275.926 li
@
118.516 272.357 mo
118.516 275.926 li
@
111.876 268.788 mo
111.876 275.926 li
@
105.236 272.357 mo
105.236 275.926 li
@
98.596 272.357 mo
98.596 275.926 li
@
91.957 272.357 mo
91.957 275.926 li
@
85.317 268.788 mo
85.317 275.926 li
@
78.677 272.357 mo
78.677 275.926 li
@
72.037 272.357 mo
72.037 275.926 li
@
65.397 272.357 mo
65.397 275.926 li
@
58.757 268.788 mo
58.757 275.926 li
@
191.556 268.788 mo
191.556 275.926 li
@
198.196 272.357 mo
198.196 275.926 li
@
204.836 272.357 mo
204.836 275.926 li
@
211.475 272.357 mo
211.475 275.926 li
@
58.757 268.788 mo
58.757 275.926 li
@
52.117 272.357 mo
52.117 275.926 li
@
45.477 272.357 mo
45.477 275.926 li
@
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf195.659 282.823 mo(0)shgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf168.594 297.78 mo(0.02)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf142.242 297.78 mo(0.04)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf115.89 297.78 mo(0.06)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf89.538 297.78 mo(0.08)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf62.473 289.945 mo(0.1)[-5.94177 -2.97086 0 ]yshgrestore
211.475 38.002 mo
45.477 38.002 li
@
191.556 45.139 mo
191.556 38.002 li
@
184.916 41.57 mo
184.916 38.002 li
@
178.276 41.57 mo
178.276 38.002 li
@
171.636 41.57 mo
171.636 38.002 li
@
164.996 45.139 mo
164.996 38.002 li
@
158.356 41.57 mo
158.356 38.002 li
@
151.716 41.57 mo
151.716 38.002 li
@
145.076 41.57 mo
145.076 38.002 li
@
138.436 45.139 mo
138.436 38.002 li
@
131.796 41.57 mo
131.796 38.002 li
@
125.156 41.57 mo
125.156 38.002 li
@
118.516 41.57 mo
118.516 38.002 li
@
111.876 45.139 mo
111.876 38.002 li
@
105.236 41.57 mo
105.236 38.002 li
@
98.596 41.57 mo
98.596 38.002 li
@
91.957 41.57 mo
91.957 38.002 li
@
85.317 45.139 mo
85.317 38.002 li
@
78.677 41.57 mo
78.677 38.002 li
@
72.037 41.57 mo
72.037 38.002 li
@
65.397 41.57 mo
65.397 38.002 li
@
58.757 45.139 mo
58.757 38.002 li
@
191.556 45.139 mo
191.556 38.002 li
@
198.196 41.57 mo
198.196 38.002 li
@
204.836 41.57 mo
204.836 38.002 li
@
211.475 41.57 mo
211.475 38.002 li
@
58.757 45.139 mo
58.757 38.002 li
@
52.117 41.57 mo
52.117 38.002 li
@
45.477 41.57 mo
45.477 38.002 li
@
gsave
211.475 275.926 mo
211.475 38.002 li
45.476 38.002 li
45.476 275.926 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 3932 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/five 24 def
end
Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 8{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -15.6737 -15.6737 0 0 0 ]msf64.61 261.457 mo(11.5 GeV 10%-40%)[-8.71458 -8.71457 -4.35728 -8.71457 -4.3573 -12.1941 -8.71457 -10.4542 -4.3573 -8.71457 -8.71457 -13.9338 -5.21922 -8.71457 -8.71457 0 ]yshgrestore
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 9536 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/P 51 def
end
Helvetica /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 4{/.notdef}rp /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf80.991 245.075 mo(Particles)[-8.07828 -6.73399 -4.03304 -3.367 -2.68857 -6.05576 -2.68857 -6.73398 0 ]ysh96.657 265.542 mo
96.657 256.141 li
87.256 260.842 li
cp
f
95.09 263.975 mo
95.09 257.708 li
88.823 260.842 li
cp
0.999 0.999 0.999 rgb
f
0.75 lw
95.09 263.975 mo
95.09 257.708 li
88.823 260.842 li
cp
1 0.8 0 rgb
@
0 0 0 rgb
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 2456 14 <0001005c0000046f0415000b0037401c037a050220080b7a0a0a0d17171a
067a040920030a7a00190c3f52182b4e10f44df43cfd3cf44e456544e600
3f4df43cfd3cf431301335211133112115211123115c01b4ab01b4fe4cab
01b6a801b7fe49a8fe4a01b60000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/plus 14 def
end
Helvetica /Encoding get
dup 43 /plus put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 4{/.notdef}rp /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf89.538 238.665 mo(+)shNLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf94.523 245.075 mo(p)sh105.236 265.072 mo
99.596 265.072 99.596 256.611 105.236 256.611 cv
110.877 256.611 110.877 265.072 105.236 265.072 cv
cp
f
105.236 263.975 mo
101.058 263.975 101.058 257.708 105.236 257.708 cv
109.415 257.708 109.415 263.975 105.236 263.975 cv
cp
0.999 0.999 0.999 rgb
f
105.236 263.975 mo
101.058 263.975 101.058 257.708 105.236 257.708 cv
109.415 257.708 109.415 263.975 105.236 263.975 cv
cp
0.2 0.4 1 rgb
f
0 0 0 rgb
NLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf100.933 238.665 mo(+)shNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf105.919 245.075 mo(p)sh122.747 260.842 mo
114.286 256.611 li
114.286 265.072 li
cp
f
121.65 260.842 mo
115.383 257.708 li
115.383 263.975 li
cp
0.999 0.999 0.999 rgb
f
121.65 260.842 mo
115.383 257.708 li
115.383 263.975 li
cp
0.6 0.6 0.6 rgb
f
0 0 0 rgb
NLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf122.3 245.075 mo(L)sh126.939 260.842 mo
130.295 259.751 li
130.295 256.222 li
132.37 259.077 li
135.726 257.987 li
133.651 260.842 li
135.726 263.697 li
132.37 262.606 li
130.295 265.461 li
130.295 261.932 li
cp
f
128.662 260.842 mo
130.828 260.138 li
130.828 257.861 li
132.166 259.703 li
134.331 259 li
132.993 260.842 li
134.331 262.684 li
132.166 261.98 li
130.828 263.822 li
130.828 261.545 li
cp
0.999 0.999 0.999 rgb
f
128.662 260.842 mo
130.828 260.138 li
130.828 257.861 li
132.166 259.703 li
134.331 259 li
132.993 260.842 li
134.331 262.684 li
132.166 261.98 li
130.828 263.822 li
130.828 261.545 li
cp
0 0.6 0 rgb
f
0 0 0 rgb
NLZQYP+Helvetica*1 [0 -8.54928 -8.54928 0 0 0 ]msf137.257 236.529 mo(s)sh127.998 236.529 mo(0)shNLZQYP+Helvetica*1 [0 -12.1115 -12.1115 0 0 0 ]msf133.695 245.075 mo(K)sh145.076 265.072 mo
139.435 265.072 139.435 256.611 145.076 256.611 cv
150.717 256.611 150.717 265.072 145.076 265.072 cv
cp
f
145.076 263.975 mo
140.898 263.975 140.898 257.708 145.076 257.708 cv
149.254 257.708 149.254 263.975 145.076 263.975 cv
cp
0.999 0.999 0.999 rgb
f
145.076 263.975 mo
140.898 263.975 140.898 257.708 145.076 257.708 cv
149.254 257.708 149.254 263.975 145.076 263.975 cv
cp
1 0 0 rgb
f
0 0 0 rgb
NLZQYQ+Symbol*1 [0 -12.1115 -12.1115 0 0 0 ]msf145.803 245.075 mo(f)sh[3 3 ] 0 dsh
191.556 275.926 mo
191.556 38.529 li
@
175.557 228.513 mo
171.455 228.513 171.455 222.359 175.557 222.359 cv
179.66 222.359 179.66 228.513 175.557 228.513 cv
cp
164.704 198.871 mo
160.601 198.871 160.601 192.718 164.704 192.718 cv
168.806 192.718 168.806 198.871 164.704 198.871 cv
cp
140.03 164.289 mo
135.928 164.289 135.928 158.136 140.03 158.136 cv
144.133 158.136 144.133 164.289 140.03 164.289 cv
cp
112.522 134.648 mo
108.42 134.648 108.42 128.494 112.522 128.494 cv
116.624 128.494 116.624 134.648 112.522 134.648 cv
cp
81.647 100.065 mo
77.544 100.065 77.544 93.912 81.647 93.912 cv
85.749 93.912 85.749 100.065 81.647 100.065 cv
cp
55.165 70.424 mo
51.063 70.424 51.063 64.27 55.165 64.27 cv
59.267 64.27 59.267 70.424 55.165 70.424 cv
cp
f
[] 0 dsh
173.42 225.436 mo
173.289 225.436 li
0.999 0.999 0.999 rgb
@
177.694 225.436 mo
177.826 225.436 li
@
175.557 227.715 mo
172.518 227.715 172.518 223.157 175.557 223.157 cv
178.596 223.157 178.596 227.715 175.557 227.715 cv
cp
164.704 198.074 mo
161.665 198.074 161.665 193.515 164.704 193.515 cv
167.743 193.515 167.743 198.074 164.704 198.074 cv
cp
140.03 163.492 mo
136.991 163.492 136.991 158.933 140.03 158.933 cv
143.069 158.933 143.069 163.492 140.03 163.492 cv
cp
112.522 133.85 mo
109.483 133.85 109.483 129.292 112.522 129.292 cv
115.561 129.292 115.561 133.85 112.522 133.85 cv
cp
81.647 99.268 mo
78.608 99.268 78.608 94.71 81.647 94.71 cv
84.685 94.71 84.685 99.268 81.647 99.268 cv
cp
55.165 69.626 mo
52.126 69.626 52.126 65.068 55.165 65.068 cv
58.204 65.068 58.204 69.626 55.165 69.626 cv
cp
f
173.42 225.436 mo
173.289 225.436 li
0 0 0 rgb
@
177.694 225.436 mo
177.826 225.436 li
@
175.557 227.715 mo
172.518 227.715 172.518 223.157 175.557 223.157 cv
178.596 223.157 178.596 227.715 175.557 227.715 cv
cp
164.704 198.074 mo
161.665 198.074 161.665 193.515 164.704 193.515 cv
167.743 193.515 167.743 198.074 164.704 198.074 cv
cp
140.03 163.492 mo
136.991 163.492 136.991 158.933 140.03 158.933 cv
143.069 158.933 143.069 163.492 140.03 163.492 cv
cp
112.522 133.85 mo
109.483 133.85 109.483 129.292 112.522 129.292 cv
115.561 129.292 115.561 133.85 112.522 133.85 cv
cp
81.647 99.268 mo
78.608 99.268 78.608 94.71 81.647 94.71 cv
84.685 94.71 84.685 99.268 81.647 99.268 cv
cp
55.165 69.626 mo
52.126 69.626 52.126 65.068 55.165 65.068 cv
58.204 65.068 58.204 69.626 55.165 69.626 cv
cp
0.2 0.6 1 rgb
f
163.824 233.795 mo
163.824 226.958 li
156.986 230.377 li
cp
136.647 199.213 mo
136.647 192.376 li
129.809 195.794 li
cp
112.422 169.571 mo
112.422 162.734 li
105.585 166.153 li
cp
90.756 134.989 mo
90.756 128.152 li
83.919 131.571 li
cp
73.053 105.348 mo
73.053 98.51 li
66.216 101.929 li
cp
58.107 70.766 mo
58.107 63.928 li
51.27 67.347 li
cp
0 0 0 rgb
f
162.684 232.656 mo
162.684 228.097 li
158.126 230.377 li
cp
135.507 198.074 mo
135.507 193.515 li
130.949 195.794 li
cp
111.283 168.432 mo
111.283 163.874 li
106.724 166.153 li
cp
89.617 133.85 mo
89.617 129.292 li
85.058 131.571 li
cp
71.914 104.208 mo
71.914 99.65 li
67.356 101.929 li
cp
56.968 69.626 mo
56.968 65.068 li
52.41 67.347 li
cp
0.999 0.999 0.999 rgb
f
162.684 232.656 mo
162.684 228.097 li
158.126 230.377 li
cp
135.507 198.074 mo
135.507 193.515 li
130.949 195.794 li
cp
111.283 168.432 mo
111.283 163.874 li
106.724 166.153 li
cp
89.617 133.85 mo
89.617 129.292 li
85.058 131.571 li
cp
71.914 104.208 mo
71.914 99.65 li
67.356 101.929 li
cp
56.968 69.626 mo
56.968 65.068 li
52.41 67.347 li
cp
1 0.6 0 rgb
@
168.211 227.001 mo
165.294 227.001 li
0.999 0.999 0.999 rgb
@
171.059 227.001 mo
173.976 227.001 li
@
149.006 194.065 mo
147.727 194.065 li
@
151.855 194.065 mo
153.134 194.065 li
@
120.938 161.13 mo
119.974 161.13 li
@
123.787 161.13 mo
124.752 161.13 li
@
104.118 128.36 mo
102.906 128.36 li
@
106.967 128.36 mo
108.18 128.36 li
@
81.695 95.26 mo
79.826 95.26 li
@
84.544 95.26 mo
86.413 95.26 li
@
67.443 63.971 mo
64.451 63.971 li
@
70.292 63.971 mo
73.284 63.971 li
@
166.102 227.001 mo
168.543 226.208 li
168.543 223.641 li
170.052 225.717 li
172.493 224.924 li
170.984 227.001 li
172.493 229.077 li
170.052 228.284 li
168.543 230.36 li
168.543 227.794 li
cp
146.898 194.065 mo
149.339 193.272 li
149.339 190.706 li
150.847 192.782 li
153.288 191.989 li
151.78 194.065 li
153.288 196.142 li
150.847 195.349 li
149.339 197.425 li
149.339 194.858 li
cp
118.83 161.13 mo
121.271 160.337 li
121.271 157.77 li
122.78 159.847 li
125.221 159.054 li
123.712 161.13 li
125.221 163.207 li
122.78 162.413 li
121.271 164.49 li
121.271 161.923 li
cp
102.01 128.36 mo
104.451 127.566 li
104.451 125 li
105.96 127.076 li
108.401 126.283 li
106.892 128.36 li
108.401 130.436 li
105.96 129.643 li
104.451 131.719 li
104.451 129.153 li
cp
79.587 95.26 mo
82.028 94.466 li
82.028 91.9 li
83.537 93.976 li
85.978 93.183 li
84.469 95.26 li
85.978 97.336 li
83.537 96.543 li
82.028 98.619 li
82.028 96.053 li
cp
65.335 63.971 mo
67.776 63.178 li
67.776 60.611 li
69.285 62.688 li
71.726 61.895 li
70.217 63.971 li
71.726 66.047 li
69.285 65.254 li
67.776 67.331 li
67.776 64.764 li
cp
0 0 0 rgb
f
168.567 227.001 mo
165.294 227.001 li
0.999 0.999 0.999 rgb
@
170.703 227.001 mo
173.976 227.001 li
@
149.362 194.065 mo
147.727 194.065 li
@
151.499 194.065 mo
153.134 194.065 li
@
121.294 161.13 mo
119.974 161.13 li
@
123.431 161.13 mo
124.752 161.13 li
@
104.474 128.36 mo
102.906 128.36 li
@
106.611 128.36 mo
108.18 128.36 li
@
82.051 95.26 mo
79.826 95.26 li
@
84.188 95.26 mo
86.413 95.26 li
@
67.799 63.971 mo
64.451 63.971 li
@
69.936 63.971 mo
73.284 63.971 li
@
167.356 227.001 mo
168.931 226.489 li
168.931 224.833 li
169.904 226.173 li
171.479 225.661 li
170.506 227.001 li
171.479 228.34 li
169.904 227.829 li
168.931 229.168 li
168.931 227.512 li
cp
148.151 194.065 mo
149.726 193.554 li
149.726 191.898 li
150.699 193.237 li
152.274 192.726 li
151.301 194.065 li
152.274 195.405 li
150.699 194.893 li
149.726 196.233 li
149.726 194.577 li
cp
120.083 161.13 mo
121.658 160.618 li
121.658 158.963 li
122.632 160.302 li
124.206 159.79 li
123.233 161.13 li
124.206 162.47 li
122.632 161.958 li
121.658 163.298 li
121.658 161.642 li
cp
103.264 128.36 mo
104.838 127.848 li
104.838 126.192 li
105.812 127.532 li
107.387 127.02 li
106.413 128.36 li
107.387 129.699 li
105.812 129.187 li
104.838 130.527 li
104.838 128.871 li
cp
80.84 95.26 mo
82.415 94.748 li
82.415 93.092 li
83.389 94.432 li
84.963 93.92 li
83.99 95.26 li
84.963 96.599 li
83.389 96.088 li
82.415 97.427 li
82.415 95.771 li
cp
66.589 63.971 mo
68.163 63.459 li
68.163 61.804 li
69.137 63.143 li
70.712 62.631 li
69.738 63.971 li
70.712 65.311 li
69.137 64.799 li
68.163 66.139 li
68.163 64.483 li
cp
f
168.567 227.001 mo
165.294 227.001 li
0 0 0 rgb
@
170.703 227.001 mo
173.976 227.001 li
@
149.362 194.065 mo
147.727 194.065 li
@
151.499 194.065 mo
153.134 194.065 li
@
121.294 161.13 mo
119.974 161.13 li
@
123.431 161.13 mo
124.752 161.13 li
@
104.474 128.36 mo
102.906 128.36 li
@
106.611 128.36 mo
108.18 128.36 li
@
82.051 95.26 mo
79.826 95.26 li
@
84.188 95.26 mo
86.413 95.26 li
@
67.799 63.971 mo
64.451 63.971 li
@
69.936 63.971 mo
73.284 63.971 li
@
167.356 227.001 mo
168.931 226.489 li
168.931 224.833 li
169.904 226.173 li
171.479 225.661 li
170.506 227.001 li
171.479 228.34 li
169.904 227.829 li
168.931 229.168 li
168.931 227.512 li
cp
148.151 194.065 mo
149.726 193.554 li
149.726 191.898 li
150.699 193.237 li
152.274 192.726 li
151.301 194.065 li
152.274 195.405 li
150.699 194.893 li
149.726 196.233 li
149.726 194.577 li
cp
120.083 161.13 mo
121.658 160.618 li
121.658 158.963 li
122.632 160.302 li
124.206 159.79 li
123.233 161.13 li
124.206 162.47 li
122.632 161.958 li
121.658 163.298 li
121.658 161.642 li
cp
103.264 128.36 mo
104.838 127.848 li
104.838 126.192 li
105.812 127.532 li
107.387 127.02 li
106.413 128.36 li
107.387 129.699 li
105.812 129.187 li
104.838 130.527 li
104.838 128.871 li
cp
80.84 95.26 mo
82.415 94.748 li
82.415 93.092 li
83.389 94.432 li
84.963 93.92 li
83.99 95.26 li
84.963 96.599 li
83.389 96.088 li
82.415 97.427 li
82.415 95.771 li
cp
66.589 63.971 mo
68.163 63.459 li
68.163 61.804 li
69.137 63.143 li
70.712 62.631 li
69.738 63.971 li
70.712 65.311 li
69.137 64.799 li
68.163 66.139 li
68.163 64.483 li
cp
0 0.8 0 rgb
f
162.575 196.042 mo
159.885 196.042 li
0.999 0.999 0.999 rgb
@
168.272 196.042 mo
170.962 196.042 li
@
144.589 161.13 mo
144.018 161.13 li
@
150.287 161.13 mo
150.858 161.13 li
@
115.443 128.195 mo
115.396 128.195 li
@
121.141 128.195 mo
121.188 128.195 li
@
91.487 95.26 mo
91.439 95.26 li
@
97.185 95.26 mo
97.234 95.26 li
@
65.995 63.971 mo
65.612 63.971 li
@
71.692 63.971 mo
72.075 63.971 li
@
168.5 196.042 mo
162.347 192.965 li
162.347 199.118 li
cp
150.515 161.13 mo
144.361 158.053 li
144.361 164.207 li
cp
121.369 128.195 mo
115.215 125.118 li
115.215 131.272 li
cp
97.413 95.26 mo
91.259 92.183 li
91.259 98.336 li
cp
71.92 63.971 mo
65.767 60.894 li
65.767 67.048 li
cp
0 0 0 rgb
f
163.287 196.042 mo
159.885 196.042 li
0.999 0.999 0.999 rgb
@
167.56 196.042 mo
170.962 196.042 li
@
145.302 161.13 mo
144.018 161.13 li
@
149.575 161.13 mo
150.858 161.13 li
@
116.155 128.195 mo
115.396 128.195 li
@
120.428 128.195 mo
121.188 128.195 li
@
92.199 95.26 mo
91.439 95.26 li
@
96.473 95.26 mo
97.234 95.26 li
@
66.707 63.971 mo
65.612 63.971 li
@
70.98 63.971 mo
72.075 63.971 li
@
167.703 196.042 mo
163.144 193.762 li
163.144 198.321 li
cp
149.717 161.13 mo
145.159 158.851 li
145.159 163.409 li
cp
120.571 128.195 mo
116.013 125.916 li
116.013 130.474 li
cp
96.615 95.26 mo
92.057 92.98 li
92.057 97.539 li
cp
71.123 63.971 mo
66.564 61.692 li
66.564 66.25 li
cp
f
163.287 196.042 mo
159.885 196.042 li
0 0 0 rgb
@
167.56 196.042 mo
170.962 196.042 li
@
145.302 161.13 mo
144.018 161.13 li
@
149.575 161.13 mo
150.858 161.13 li
@
116.155 128.195 mo
115.396 128.195 li
@
120.428 128.195 mo
121.188 128.195 li
@
92.199 95.26 mo
91.439 95.26 li
@
96.473 95.26 mo
97.234 95.26 li
@
66.707 63.971 mo
65.612 63.971 li
@
70.98 63.971 mo
72.075 63.971 li
@
167.703 196.042 mo
163.144 193.762 li
163.144 198.321 li
cp
149.717 161.13 mo
145.159 158.851 li
145.159 163.409 li
cp
120.571 128.195 mo
116.013 125.916 li
116.013 130.474 li
cp
96.615 95.26 mo
92.057 92.98 li
92.057 97.539 li
cp
71.123 63.971 mo
66.564 61.692 li
66.564 66.25 li
cp
0.8 0.8 0.8 rgb
f
141.186 150.426 mo
128.005 150.426 li
0.999 0.999 0.999 rgb
@
146.884 150.426 mo
160.064 150.426 li
@
87.598 74.346 mo
73.456 74.346 li
@
93.296 74.346 mo
107.438 74.346 li
@
144.035 153.503 mo
139.932 153.503 139.932 147.349 144.035 147.349 cv
148.137 147.349 148.137 153.503 144.035 153.503 cv
cp
90.447 77.422 mo
86.345 77.422 86.345 71.269 90.447 71.269 cv
94.549 71.269 94.549 77.422 90.447 77.422 cv
cp
0 0 0 rgb
f
141.898 150.426 mo
128.005 150.426 li
0.999 0.999 0.999 rgb
@
146.171 150.426 mo
160.064 150.426 li
@
88.31 74.346 mo
73.456 74.346 li
@
92.584 74.346 mo
107.438 74.346 li
@
144.035 152.705 mo
140.996 152.705 140.996 148.147 144.035 148.147 cv
147.074 148.147 147.074 152.705 144.035 152.705 cv
cp
90.447 76.625 mo
87.408 76.625 87.408 72.067 90.447 72.067 cv
93.486 72.067 93.486 76.625 90.447 76.625 cv
cp
f
141.898 150.426 mo
128.005 150.426 li
0 0 0 rgb
@
146.171 150.426 mo
160.064 150.426 li
@
88.31 74.346 mo
73.456 74.346 li
@
92.584 74.346 mo
107.438 74.346 li
@
144.035 152.705 mo
140.996 152.705 140.996 148.147 144.035 148.147 cv
147.074 148.147 147.074 152.705 144.035 152.705 cv
cp
90.447 76.625 mo
87.408 76.625 87.408 72.067 90.447 72.067 cv
93.486 72.067 93.486 76.625 90.447 76.625 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
191.528 274.945 mo
191.464 272.983 li
191.363 271.02 li
191.224 269.058 li
191.048 267.096 li
190.835 265.133 li
190.586 263.171 li
190.3 261.209 li
189.978 259.247 li
189.621 257.284 li
189.229 255.322 li
188.802 253.36 li
188.342 251.397 li
187.847 249.435 li
187.32 247.473 li
186.76 245.511 li
186.169 243.548 li
185.547 241.586 li
184.893 239.624 li
184.21 237.661 li
183.498 235.699 li
182.757 233.737 li
181.988 231.775 li
181.192 229.812 li
180.369 227.85 li
179.521 225.888 li
178.646 223.925 li
177.747 221.963 li
176.824 220.001 li
175.877 218.039 li
174.907 216.076 li
173.914 214.114 li
172.9 212.152 li
171.865 210.19 li
170.808 208.227 li
169.732 206.265 li
168.635 204.303 li
167.52 202.34 li
166.385 200.378 li
165.232 198.416 li
164.062 196.454 li
162.874 194.491 li
161.669 192.529 li
160.448 190.567 li
159.21 188.604 li
157.957 186.642 li
156.688 184.68 li
155.405 182.718 li
154.107 180.755 li
152.794 178.793 li
@
152.794 178.793 mo
151.468 176.831 li
150.128 174.868 li
148.775 172.906 li
147.409 170.944 li
146.031 168.982 li
144.64 167.019 li
143.238 165.057 li
141.823 163.095 li
140.398 161.132 li
138.961 159.17 li
137.514 157.208 li
136.056 155.246 li
134.587 153.283 li
133.109 151.321 li
131.621 149.359 li
130.123 147.396 li
128.616 145.434 li
127.1 143.472 li
125.576 141.51 li
124.042 139.547 li
122.501 137.585 li
120.951 135.623 li
119.393 133.66 li
117.828 131.698 li
116.255 129.736 li
114.675 127.774 li
113.088 125.811 li
111.493 123.849 li
109.893 121.887 li
108.285 119.924 li
106.672 117.962 li
105.052 116 li
103.426 114.038 li
101.794 112.075 li
100.157 110.113 li
98.514 108.151 li
96.866 106.188 li
95.213 104.226 li
93.555 102.264 li
91.892 100.302 li
90.224 98.339 li
88.552 96.377 li
86.875 94.415 li
85.194 92.453 li
83.51 90.49 li
81.821 88.528 li
80.128 86.566 li
78.431 84.603 li
76.731 82.641 li
@
76.731 82.641 mo
75.027 80.679 li
@
76.878 82.81 mo
76.563 82.448 li
76.249 82.085 li
75.935 81.723 li
75.62 81.361 li
75.305 80.999 li
74.991 80.636 li
74.676 80.274 li
74.361 79.912 li
74.045 79.549 li
73.73 79.187 li
73.415 78.825 li
73.099 78.463 li
72.784 78.1 li
72.468 77.738 li
72.152 77.376 li
71.836 77.013 li
71.52 76.651 li
71.204 76.289 li
70.888 75.927 li
70.572 75.564 li
70.255 75.202 li
69.939 74.84 li
69.622 74.477 li
69.305 74.115 li
68.989 73.753 li
68.672 73.391 li
68.355 73.028 li
68.037 72.666 li
67.72 72.304 li
67.403 71.941 li
67.085 71.579 li
66.768 71.217 li
66.45 70.855 li
66.133 70.492 li
65.815 70.13 li
65.497 69.768 li
65.179 69.405 li
64.861 69.043 li
64.543 68.681 li
64.224 68.319 li
63.906 67.956 li
63.588 67.594 li
63.269 67.232 li
62.95 66.869 li
62.632 66.507 li
62.313 66.145 li
61.994 65.783 li
61.675 65.42 li
61.356 65.058 li
@
61.356 65.058 mo
61.037 64.696 li
60.718 64.333 li
60.398 63.971 li
60.079 63.609 li
59.759 63.246 li
59.44 62.884 li
59.12 62.522 li
58.801 62.16 li
58.481 61.797 li
58.161 61.435 li
57.841 61.073 li
57.521 60.71 li
57.201 60.348 li
56.881 59.986 li
56.56 59.624 li
56.24 59.261 li
55.92 58.899 li
55.599 58.537 li
55.279 58.174 li
54.958 57.812 li
54.637 57.45 li
54.316 57.088 li
53.996 56.725 li
53.675 56.363 li
53.354 56.001 li
53.033 55.638 li
52.712 55.276 li
52.39 54.914 li
52.069 54.552 li
51.748 54.189 li
51.426 53.827 li
51.105 53.465 li
50.784 53.102 li
50.462 52.74 li
50.14 52.378 li
49.819 52.016 li
49.497 51.653 li
49.175 51.291 li
48.853 50.929 li
48.531 50.566 li
48.209 50.204 li
47.887 49.842 li
47.565 49.48 li
47.243 49.117 li
46.92 48.755 li
46.598 48.393 li
46.276 48.03 li
45.953 47.668 li
45.631 47.306 li
@
[] 0 dsh
191.532 274.945 mo
191.476 272.983 li
191.388 271.02 li
191.267 269.058 li
191.113 267.096 li
190.927 265.133 li
190.709 263.171 li
190.46 261.209 li
190.178 259.247 li
189.865 257.284 li
189.52 255.322 li
189.145 253.36 li
188.739 251.397 li
188.303 249.435 li
187.837 247.473 li
187.341 245.511 li
186.816 243.548 li
186.262 241.586 li
185.679 239.624 li
185.069 237.661 li
184.431 235.699 li
183.765 233.737 li
183.073 231.775 li
182.355 229.812 li
181.61 227.85 li
180.84 225.888 li
180.045 223.925 li
179.225 221.963 li
178.381 220.001 li
177.514 218.039 li
176.623 216.076 li
175.709 214.114 li
174.772 212.152 li
173.814 210.19 li
172.834 208.227 li
171.832 206.265 li
170.81 204.303 li
169.768 202.34 li
168.705 200.378 li
167.623 198.416 li
166.521 196.454 li
165.401 194.491 li
164.262 192.529 li
163.106 190.567 li
161.931 188.604 li
160.739 186.642 li
159.53 184.68 li
158.305 182.718 li
157.063 180.755 li
155.806 178.793 li
0.8 0.8 0.8 rgb
@
155.806 178.793 mo
154.533 176.831 li
153.245 174.868 li
151.941 172.906 li
150.624 170.944 li
149.292 168.982 li
147.946 167.019 li
146.587 165.057 li
145.214 163.095 li
143.829 161.132 li
142.43 159.17 li
141.02 157.208 li
139.597 155.246 li
138.163 153.283 li
136.717 151.321 li
135.26 149.359 li
133.792 147.396 li
132.314 145.434 li
130.825 143.472 li
129.326 141.51 li
127.817 139.547 li
126.298 137.585 li
124.77 135.623 li
123.233 133.66 li
121.687 131.698 li
120.133 129.736 li
118.57 127.774 li
116.999 125.811 li
115.42 123.849 li
113.833 121.887 li
112.239 119.924 li
110.638 117.962 li
109.029 116 li
107.414 114.038 li
105.792 112.075 li
104.163 110.113 li
102.528 108.151 li
100.887 106.188 li
99.24 104.226 li
97.588 102.264 li
95.929 100.302 li
94.266 98.339 li
92.597 96.377 li
90.923 94.415 li
89.244 92.453 li
87.561 90.49 li
85.873 88.528 li
84.18 86.566 li
82.484 84.603 li
80.783 82.641 li
@
80.783 82.641 mo
79.078 80.679 li
@
80.93 82.81 mo
80.615 82.448 li
80.301 82.085 li
79.986 81.723 li
79.671 81.361 li
79.356 80.999 li
79.041 80.636 li
78.726 80.274 li
78.411 79.912 li
78.095 79.549 li
77.78 79.187 li
77.464 78.825 li
77.148 78.463 li
76.832 78.1 li
76.516 77.738 li
76.2 77.376 li
75.883 77.013 li
75.567 76.651 li
75.25 76.289 li
74.934 75.927 li
74.617 75.564 li
74.3 75.202 li
73.983 74.84 li
73.666 74.477 li
73.348 74.115 li
73.031 73.753 li
72.714 73.391 li
72.396 73.028 li
72.078 72.666 li
71.76 72.304 li
71.442 71.941 li
71.124 71.579 li
70.806 71.217 li
70.488 70.855 li
70.169 70.492 li
69.851 70.13 li
69.532 69.768 li
69.213 69.405 li
68.895 69.043 li
68.576 68.681 li
68.257 68.319 li
67.937 67.956 li
67.618 67.594 li
67.299 67.232 li
66.979 66.869 li
66.66 66.507 li
66.34 66.145 li
66.02 65.783 li
65.701 65.42 li
65.381 65.058 li
@
65.381 65.058 mo
65.061 64.696 li
64.74 64.333 li
64.42 63.971 li
64.1 63.609 li
63.779 63.246 li
63.459 62.884 li
63.138 62.522 li
62.817 62.16 li
62.497 61.797 li
62.176 61.435 li
61.855 61.073 li
61.534 60.71 li
61.213 60.348 li
60.891 59.986 li
60.57 59.624 li
60.249 59.261 li
59.927 58.899 li
59.605 58.537 li
59.284 58.174 li
58.962 57.812 li
58.64 57.45 li
58.318 57.088 li
57.996 56.725 li
57.674 56.363 li
57.352 56.001 li
57.03 55.638 li
56.707 55.276 li
56.385 54.914 li
56.063 54.552 li
55.74 54.189 li
55.417 53.827 li
55.095 53.465 li
54.772 53.102 li
54.449 52.74 li
54.126 52.378 li
53.803 52.016 li
53.48 51.653 li
53.157 51.291 li
52.834 50.929 li
52.51 50.566 li
52.187 50.204 li
51.863 49.842 li
51.54 49.48 li
51.216 49.117 li
50.893 48.755 li
50.569 48.393 li
50.245 48.03 li
49.921 47.668 li
49.598 47.306 li
@
49.598 47.306 mo
49.274 46.944 li
@
191.509 274.945 mo
191.4 272.983 li
191.228 271.02 li
190.992 269.058 li
190.694 267.096 li
190.335 265.133 li
189.915 263.171 li
189.437 261.209 li
188.9 259.247 li
188.307 257.284 li
187.66 255.322 li
186.959 253.36 li
186.208 251.397 li
185.407 249.435 li
184.558 247.473 li
183.665 245.511 li
182.727 243.548 li
181.749 241.586 li
180.731 239.624 li
179.676 237.661 li
178.585 235.699 li
177.461 233.737 li
176.305 231.775 li
175.12 229.812 li
173.907 227.85 li
172.667 225.888 li
171.403 223.925 li
170.117 221.963 li
168.808 220.001 li
167.48 218.039 li
166.134 216.076 li
164.77 214.114 li
163.39 212.152 li
161.995 210.19 li
160.586 208.227 li
159.164 206.265 li
157.731 204.303 li
156.286 202.34 li
154.831 200.378 li
153.366 198.416 li
151.892 196.454 li
150.411 194.491 li
148.921 192.529 li
147.424 190.567 li
145.92 188.604 li
144.41 186.642 li
142.894 184.68 li
141.373 182.718 li
139.846 180.755 li
138.314 178.793 li
0 0.8 0 rgb
@
138.314 178.793 mo
136.777 176.831 li
135.236 174.868 li
133.69 172.906 li
132.141 170.944 li
130.587 168.982 li
129.029 167.019 li
127.468 165.057 li
125.903 163.095 li
124.334 161.132 li
122.763 159.17 li
121.187 157.208 li
119.609 155.246 li
118.027 153.283 li
116.442 151.321 li
114.854 149.359 li
113.264 147.396 li
111.67 145.434 li
110.073 143.472 li
108.473 141.51 li
106.87 139.547 li
105.265 137.585 li
103.657 135.623 li
102.046 133.66 li
100.432 131.698 li
98.816 129.736 li
97.197 127.774 li
95.575 125.811 li
93.951 123.849 li
92.324 121.887 li
90.695 119.924 li
89.063 117.962 li
87.429 116 li
85.792 114.038 li
84.153 112.075 li
82.512 110.113 li
80.868 108.151 li
79.222 106.188 li
77.573 104.226 li
75.923 102.264 li
74.27 100.302 li
72.615 98.339 li
70.959 96.377 li
69.3 94.415 li
67.639 92.453 li
65.976 90.49 li
64.311 88.528 li
62.644 86.566 li
60.976 84.603 li
59.305 82.641 li
@
59.305 82.641 mo
57.633 80.679 li
@
59.449 82.81 mo
59.141 82.448 li
58.832 82.085 li
58.523 81.723 li
58.215 81.361 li
57.906 80.999 li
57.597 80.636 li
57.288 80.274 li
56.979 79.912 li
56.67 79.549 li
56.361 79.187 li
56.052 78.825 li
55.743 78.463 li
55.434 78.1 li
55.124 77.738 li
54.815 77.376 li
54.506 77.013 li
54.196 76.651 li
53.887 76.289 li
53.577 75.927 li
53.267 75.564 li
52.958 75.202 li
52.648 74.84 li
52.338 74.477 li
52.028 74.115 li
51.718 73.753 li
51.409 73.391 li
51.099 73.028 li
50.788 72.666 li
50.478 72.304 li
50.168 71.941 li
49.858 71.579 li
49.548 71.217 li
49.237 70.855 li
48.927 70.492 li
48.617 70.13 li
48.306 69.768 li
47.996 69.405 li
47.685 69.043 li
47.375 68.681 li
47.064 68.319 li
46.753 67.956 li
46.442 67.594 li
46.132 67.232 li
45.821 66.869 li
45.51 66.507 li
45.477 66.145 li
@
191.525 274.945 mo
191.454 272.983 li
191.342 271.02 li
191.188 269.058 li
190.993 267.096 li
190.757 265.133 li
190.481 263.171 li
190.165 261.209 li
189.81 259.247 li
189.416 257.284 li
188.984 255.322 li
188.513 253.36 li
188.007 251.397 li
187.463 249.435 li
186.885 247.473 li
186.272 245.511 li
185.625 243.548 li
184.945 241.586 li
184.232 239.624 li
183.489 237.661 li
182.714 235.699 li
181.91 233.737 li
181.078 231.775 li
180.217 229.812 li
179.329 227.85 li
178.414 225.888 li
177.474 223.925 li
176.509 221.963 li
175.52 220.001 li
174.507 218.039 li
173.472 216.076 li
172.415 214.114 li
171.337 212.152 li
170.238 210.19 li
169.119 208.227 li
167.981 206.265 li
166.824 204.303 li
165.649 202.34 li
164.456 200.378 li
163.246 198.416 li
162.019 196.454 li
160.777 194.491 li
159.518 192.529 li
158.245 190.567 li
156.957 188.604 li
155.654 186.642 li
154.338 184.68 li
153.008 182.718 li
151.665 180.755 li
150.309 178.793 li
0.2 0.6 1 rgb
@
150.309 178.793 mo
148.94 176.831 li
147.56 174.868 li
146.168 172.906 li
144.764 170.944 li
143.349 168.982 li
141.923 167.019 li
140.487 165.057 li
139.04 163.095 li
137.584 161.132 li
136.117 159.17 li
134.641 157.208 li
133.156 155.246 li
131.662 153.283 li
130.159 151.321 li
128.647 149.359 li
127.128 147.396 li
125.599 145.434 li
124.063 143.472 li
122.52 141.51 li
120.969 139.547 li
119.41 137.585 li
117.844 135.623 li
116.272 133.66 li
114.692 131.698 li
113.106 129.736 li
111.514 127.774 li
109.916 125.811 li
108.311 123.849 li
106.7 121.887 li
105.084 119.924 li
103.462 117.962 li
101.835 116 li
100.203 114.038 li
98.565 112.075 li
96.923 110.113 li
95.275 108.151 li
93.623 106.188 li
91.967 104.226 li
90.306 102.264 li
88.64 100.302 li
86.971 98.339 li
85.298 96.377 li
83.62 94.415 li
81.939 92.453 li
80.255 90.49 li
78.566 88.528 li
76.875 86.566 li
75.18 84.603 li
73.482 82.641 li
@
73.482 82.641 mo
71.781 80.679 li
@
73.628 82.81 mo
73.314 82.448 li
73 82.085 li
72.686 81.723 li
72.372 81.361 li
72.058 80.999 li
71.744 80.636 li
71.429 80.274 li
71.115 79.912 li
70.8 79.549 li
70.485 79.187 li
70.171 78.825 li
69.856 78.463 li
69.541 78.1 li
69.226 77.738 li
68.91 77.376 li
68.595 77.013 li
68.28 76.651 li
67.964 76.289 li
67.649 75.927 li
67.333 75.564 li
67.017 75.202 li
66.701 74.84 li
66.385 74.477 li
66.069 74.115 li
65.753 73.753 li
65.437 73.391 li
65.121 73.028 li
64.804 72.666 li
64.488 72.304 li
64.171 71.941 li
63.854 71.579 li
63.538 71.217 li
63.221 70.855 li
62.904 70.492 li
62.587 70.13 li
62.27 69.768 li
61.953 69.405 li
61.635 69.043 li
61.318 68.681 li
61.001 68.319 li
60.683 67.956 li
60.366 67.594 li
60.048 67.232 li
59.73 66.869 li
59.413 66.507 li
59.095 66.145 li
58.777 65.783 li
58.459 65.42 li
58.141 65.058 li
@
58.141 65.058 mo
57.822 64.696 li
57.504 64.333 li
57.186 63.971 li
56.867 63.609 li
56.549 63.246 li
56.23 62.884 li
55.912 62.522 li
55.593 62.16 li
55.274 61.797 li
54.956 61.435 li
54.637 61.073 li
54.318 60.71 li
53.999 60.348 li
53.68 59.986 li
53.36 59.624 li
53.041 59.261 li
52.722 58.899 li
52.402 58.537 li
52.083 58.174 li
51.763 57.812 li
51.444 57.45 li
51.124 57.088 li
50.805 56.725 li
50.485 56.363 li
50.165 56.001 li
49.845 55.638 li
49.525 55.276 li
49.205 54.914 li
48.885 54.552 li
48.565 54.189 li
48.245 53.827 li
47.925 53.465 li
47.604 53.102 li
47.284 52.74 li
46.964 52.378 li
46.643 52.016 li
46.323 51.653 li
46.002 51.291 li
45.681 50.929 li
45.477 50.566 li
@
[5 5 ] 0 dsh
191.496 274.945 mo
191.357 272.983 li
191.137 271.02 li
190.838 269.058 li
190.461 267.096 li
190.008 265.133 li
189.481 263.171 li
188.883 261.209 li
188.216 259.247 li
187.483 257.284 li
186.687 255.322 li
185.831 253.36 li
184.917 251.397 li
183.95 249.435 li
182.932 247.473 li
181.866 245.511 li
180.754 243.548 li
179.6 241.586 li
178.408 239.624 li
177.178 237.661 li
175.914 235.699 li
174.62 233.737 li
173.296 231.775 li
171.945 229.812 li
170.57 227.85 li
169.173 225.888 li
167.755 223.925 li
166.319 221.963 li
164.866 220.001 li
163.398 218.039 li
161.917 216.076 li
160.423 214.114 li
158.918 212.152 li
157.403 210.19 li
155.879 208.227 li
154.348 206.265 li
152.81 204.303 li
151.266 202.34 li
149.717 200.378 li
148.162 198.416 li
146.604 196.454 li
145.042 194.491 li
143.477 192.529 li
141.909 190.567 li
140.339 188.604 li
138.767 186.642 li
137.192 184.68 li
135.617 182.718 li
134.039 180.755 li
132.461 178.793 li
1 0.6 0 rgb
@
132.461 178.793 mo
130.881 176.831 li
129.3 174.868 li
127.717 172.906 li
126.134 170.944 li
124.55 168.982 li
122.965 167.019 li
121.38 165.057 li
119.793 163.095 li
118.205 161.132 li
116.616 159.17 li
115.027 157.208 li
113.436 155.246 li
111.844 153.283 li
110.251 151.321 li
108.657 149.359 li
107.062 147.396 li
105.465 145.434 li
103.868 143.472 li
102.269 141.51 li
100.668 139.547 li
99.066 137.585 li
97.463 135.623 li
95.858 133.66 li
94.252 131.698 li
92.644 129.736 li
91.035 127.774 li
89.424 125.811 li
87.812 123.849 li
86.197 121.887 li
84.581 119.924 li
82.964 117.962 li
81.345 116 li
79.724 114.038 li
78.101 112.075 li
76.477 110.113 li
74.851 108.151 li
73.223 106.188 li
71.593 104.226 li
69.962 102.264 li
68.329 100.302 li
66.695 98.339 li
65.058 96.377 li
63.42 94.415 li
61.781 92.453 li
60.14 90.49 li
58.497 88.528 li
56.852 86.566 li
55.206 84.603 li
53.559 82.641 li
@
53.559 82.641 mo
51.91 80.679 li
@
53.701 82.81 mo
53.396 82.448 li
53.092 82.085 li
52.788 81.723 li
52.483 81.361 li
52.179 80.999 li
51.874 80.636 li
51.569 80.274 li
51.265 79.912 li
50.96 79.549 li
50.655 79.187 li
50.35 78.825 li
50.045 78.463 li
49.74 78.1 li
49.435 77.738 li
49.13 77.376 li
48.825 77.013 li
48.52 76.651 li
48.215 76.289 li
47.91 75.927 li
47.604 75.564 li
47.299 75.202 li
46.994 74.84 li
46.688 74.477 li
46.383 74.115 li
46.077 73.753 li
45.772 73.391 li
45.477 73.028 li
@
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
1 1 1 rgb
ef
0.002 lw
[] 0 dsh
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
@
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
0.999 0.999 0.999 rgb
ef
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
@
0.75 lw
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
0 0 0 rgb
@
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
@
0.75 lw
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
0 0 0 rgb
@
1.5 lw
377.474 275.926 mo
377.474 38.002 li
@
372.494 244.374 mo
377.474 244.374 li
@
374.984 236.14 mo
377.474 236.14 li
@
374.984 227.906 mo
377.474 227.906 li
@
374.984 219.673 mo
377.474 219.673 li
@
372.494 211.439 mo
377.474 211.439 li
@
374.984 203.205 mo
377.474 203.205 li
@
374.984 194.971 mo
377.474 194.971 li
@
374.984 186.737 mo
377.474 186.737 li
@
372.494 178.503 mo
377.474 178.503 li
@
374.984 170.27 mo
377.474 170.27 li
@
374.984 162.036 mo
377.474 162.036 li
@
374.984 153.802 mo
377.474 153.802 li
@
372.494 145.568 mo
377.474 145.568 li
@
374.984 137.334 mo
377.474 137.334 li
@
374.984 129.101 mo
377.474 129.101 li
@
374.984 120.867 mo
377.474 120.867 li
@
372.494 112.633 mo
377.474 112.633 li
@
374.984 104.399 mo
377.474 104.399 li
@
374.984 96.165 mo
377.474 96.165 li
@
374.984 87.931 mo
377.474 87.931 li
@
372.494 79.698 mo
377.474 79.698 li
@
374.984 71.464 mo
377.474 71.464 li
@
374.984 63.23 mo
377.474 63.23 li
@
374.984 54.996 mo
377.474 54.996 li
@
372.494 46.762 mo
377.474 46.762 li
@
372.494 244.374 mo
377.474 244.374 li
@
374.984 252.608 mo
377.474 252.608 li
@
374.984 260.842 mo
377.474 260.842 li
@
374.984 269.075 mo
377.474 269.075 li
@
372.494 46.762 mo
377.474 46.762 li
@
374.984 38.529 mo
377.474 38.529 li
@
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 252.91 mo(0.2)[-5.94176 -2.97087 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 219.435 mo(0.4)[-5.94176 -2.97087 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 186.673 mo(0.6)[-5.94176 -2.97087 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 153.911 mo(0.8)[-5.94176 -2.97087 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 115.451 mo(1)shgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 87.674 mo(1.2)[-5.94175 -2.97087 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf387.247 54.912 mo(1.4)[-5.94175 -2.97087 0 ]yshgrestore
211.475 275.926 mo
211.475 38.002 li
@
216.455 244.374 mo
211.475 244.374 li
@
213.965 236.14 mo
211.475 236.14 li
@
213.965 227.906 mo
211.475 227.906 li
@
213.965 219.673 mo
211.475 219.673 li
@
216.455 211.439 mo
211.475 211.439 li
@
213.965 203.205 mo
211.475 203.205 li
@
213.965 194.971 mo
211.475 194.971 li
@
213.965 186.737 mo
211.475 186.737 li
@
216.455 178.503 mo
211.475 178.503 li
@
213.965 170.27 mo
211.475 170.27 li
@
213.965 162.036 mo
211.475 162.036 li
@
213.965 153.802 mo
211.475 153.802 li
@
216.455 145.568 mo
211.475 145.568 li
@
213.965 137.334 mo
211.475 137.334 li
@
213.965 129.101 mo
211.475 129.101 li
@
213.965 120.867 mo
211.475 120.867 li
@
216.455 112.633 mo
211.475 112.633 li
@
213.965 104.399 mo
211.475 104.399 li
@
213.965 96.165 mo
211.475 96.165 li
@
213.965 87.931 mo
211.475 87.931 li
@
216.455 79.698 mo
211.475 79.698 li
@
213.965 71.464 mo
211.475 71.464 li
@
213.965 63.23 mo
211.475 63.23 li
@
213.965 54.996 mo
211.475 54.996 li
@
216.455 46.762 mo
211.475 46.762 li
@
216.455 244.374 mo
211.475 244.374 li
@
213.965 252.608 mo
211.475 252.608 li
@
213.965 260.842 mo
211.475 260.842 li
@
213.965 269.075 mo
211.475 269.075 li
@
216.455 46.762 mo
211.475 46.762 li
@
213.965 38.529 mo
211.475 38.529 li
@
377.474 275.926 mo
211.475 275.926 li
@
360.302 268.788 mo
360.302 275.926 li
@
354.578 272.357 mo
354.578 275.926 li
@
348.854 272.357 mo
348.854 275.926 li
@
343.13 272.357 mo
343.13 275.926 li
@
337.405 268.788 mo
337.405 275.926 li
@
331.681 272.357 mo
331.681 275.926 li
@
325.957 272.357 mo
325.957 275.926 li
@
320.233 272.357 mo
320.233 275.926 li
@
314.509 268.788 mo
314.509 275.926 li
@
308.785 272.357 mo
308.785 275.926 li
@
303.061 272.357 mo
303.061 275.926 li
@
297.337 272.357 mo
297.337 275.926 li
@
291.613 268.788 mo
291.613 275.926 li
@
285.889 272.357 mo
285.889 275.926 li
@
280.165 272.357 mo
280.165 275.926 li
@
274.44 272.357 mo
274.44 275.926 li
@
268.716 268.788 mo
268.716 275.926 li
@
262.992 272.357 mo
262.992 275.926 li
@
257.268 272.357 mo
257.268 275.926 li
@
251.544 272.357 mo
251.544 275.926 li
@
245.82 268.788 mo
245.82 275.926 li
@
240.096 272.357 mo
240.096 275.926 li
@
234.372 272.357 mo
234.372 275.926 li
@
228.648 272.357 mo
228.648 275.926 li
@
222.924 268.788 mo
222.924 275.926 li
@
360.302 268.788 mo
360.302 275.926 li
@
366.026 272.357 mo
366.026 275.926 li
@
371.75 272.357 mo
371.75 275.926 li
@
222.924 268.788 mo
222.924 275.926 li
@
217.2 272.357 mo
217.2 275.926 li
@
211.475 272.357 mo
211.475 275.926 li
@
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf364.455 282.823 mo(0)shgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf341.664 297.78 mo(0.02)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf318.161 297.78 mo(0.04)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf295.37 297.78 mo(0.06)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf272.579 297.78 mo(0.08)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf249.788 289.945 mo(0.1)[-5.94177 -2.97086 0 ]yshgrestore
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -10.6866 -10.6866 0 0 0 ]msf226.997 297.78 mo(0.12)[-5.94177 -2.97086 -5.94174 0 ]yshgrestore
377.474 38.002 mo
211.475 38.002 li
@
360.302 45.139 mo
360.302 38.002 li
@
354.578 41.57 mo
354.578 38.002 li
@
348.854 41.57 mo
348.854 38.002 li
@
343.13 41.57 mo
343.13 38.002 li
@
337.405 45.139 mo
337.405 38.002 li
@
331.681 41.57 mo
331.681 38.002 li
@
325.957 41.57 mo
325.957 38.002 li
@
320.233 41.57 mo
320.233 38.002 li
@
314.509 45.139 mo
314.509 38.002 li
@
308.785 41.57 mo
308.785 38.002 li
@
303.061 41.57 mo
303.061 38.002 li
@
297.337 41.57 mo
297.337 38.002 li
@
291.613 45.139 mo
291.613 38.002 li
@
285.889 41.57 mo
285.889 38.002 li
@
280.165 41.57 mo
280.165 38.002 li
@
274.44 41.57 mo
274.44 38.002 li
@
268.716 45.139 mo
268.716 38.002 li
@
262.992 41.57 mo
262.992 38.002 li
@
257.268 41.57 mo
257.268 38.002 li
@
251.544 41.57 mo
251.544 38.002 li
@
245.82 45.139 mo
245.82 38.002 li
@
240.096 41.57 mo
240.096 38.002 li
@
234.372 41.57 mo
234.372 38.002 li
@
228.648 41.57 mo
228.648 38.002 li
@
222.924 45.139 mo
222.924 38.002 li
@
360.302 45.139 mo
360.302 38.002 li
@
366.026 41.57 mo
366.026 38.002 li
@
371.75 41.57 mo
371.75 38.002 li
@
222.924 45.139 mo
222.924 38.002 li
@
217.2 41.57 mo
217.2 38.002 li
@
211.475 41.57 mo
211.475 38.002 li
@
gsave
377.474 275.926 mo
377.474 38.002 li
211.475 38.002 li
211.475 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -15.6737 -15.6737 0 0 0 ]msf233.407 261.457 mo(27 GeV 10%-40%)[-8.71458 -8.71457 -4.35728 -12.1941 -8.71457 -10.4542 -4.35728 -8.71457 -8.71458 -13.9338 -5.21922 -8.71458 -8.71457 0 ]yshgrestore
0.75 lw
[3 3 ] 0 dsh
360.302 275.926 mo
360.302 38.529 li
@
352.009 228.513 mo
347.907 228.513 347.907 222.359 352.009 222.359 cv
356.112 222.359 356.112 228.513 352.009 228.513 cv
cp
340.153 198.871 mo
336.051 198.871 336.051 192.718 340.153 192.718 cv
344.256 192.718 344.256 198.871 340.153 198.871 cv
cp
318.545 164.289 mo
314.443 164.289 314.443 158.136 318.545 158.136 cv
322.647 158.136 322.647 164.289 318.545 164.289 cv
cp
292.179 134.648 mo
288.076 134.648 288.076 128.494 292.179 128.494 cv
296.281 128.494 296.281 134.648 292.179 134.648 cv
cp
263.53 100.065 mo
259.428 100.065 259.428 93.912 263.53 93.912 cv
267.633 93.912 267.633 100.065 263.53 100.065 cv
cp
236.697 70.424 mo
232.594 70.424 232.594 64.27 236.697 64.27 cv
240.799 64.27 240.799 70.424 236.697 70.424 cv
cp
f
352.009 227.715 mo
348.971 227.715 348.971 223.157 352.009 223.157 cv
355.048 223.157 355.048 227.715 352.009 227.715 cv
cp
340.153 198.074 mo
337.115 198.074 337.115 193.515 340.153 193.515 cv
343.192 193.515 343.192 198.074 340.153 198.074 cv
cp
318.545 163.492 mo
315.506 163.492 315.506 158.933 318.545 158.933 cv
321.584 158.933 321.584 163.492 318.545 163.492 cv
cp
292.179 133.85 mo
289.14 133.85 289.14 129.292 292.179 129.292 cv
295.217 129.292 295.217 133.85 292.179 133.85 cv
cp
263.53 99.268 mo
260.492 99.268 260.492 94.71 263.53 94.71 cv
266.569 94.71 266.569 99.268 263.53 99.268 cv
cp
236.697 69.626 mo
233.658 69.626 233.658 65.068 236.697 65.068 cv
239.736 65.068 239.736 69.626 236.697 69.626 cv
cp
0.999 0.999 0.999 rgb
f
352.009 227.715 mo
348.971 227.715 348.971 223.157 352.009 223.157 cv
355.048 223.157 355.048 227.715 352.009 227.715 cv
cp
340.153 198.074 mo
337.115 198.074 337.115 193.515 340.153 193.515 cv
343.192 193.515 343.192 198.074 340.153 198.074 cv
cp
318.545 163.492 mo
315.506 163.492 315.506 158.933 318.545 158.933 cv
321.584 158.933 321.584 163.492 318.545 163.492 cv
cp
292.179 133.85 mo
289.14 133.85 289.14 129.292 292.179 129.292 cv
295.217 129.292 295.217 133.85 292.179 133.85 cv
cp
263.53 99.268 mo
260.492 99.268 260.492 94.71 263.53 94.71 cv
266.569 94.71 266.569 99.268 263.53 99.268 cv
cp
236.697 69.626 mo
233.658 69.626 233.658 65.068 236.697 65.068 cv
239.736 65.068 239.736 69.626 236.697 69.626 cv
cp
0.2 0.6 1 rgb
f
336.805 233.795 mo
336.805 226.958 li
329.967 230.377 li
cp
310.593 199.213 mo
310.593 192.376 li
303.756 195.794 li
cp
285.626 169.571 mo
285.626 162.734 li
278.789 166.153 li
cp
263.9 134.989 mo
263.9 128.152 li
257.063 131.571 li
cp
245.314 105.348 mo
245.314 98.51 li
238.477 101.929 li
cp
230.352 70.766 mo
230.352 63.928 li
223.514 67.347 li
cp
0 0 0 rgb
f
335.665 232.656 mo
335.665 228.097 li
331.107 230.377 li
cp
309.453 198.074 mo
309.453 193.515 li
304.895 195.794 li
cp
284.487 168.432 mo
284.487 163.874 li
279.928 166.153 li
cp
262.761 133.85 mo
262.761 129.292 li
258.202 131.571 li
cp
244.174 104.208 mo
244.174 99.65 li
239.616 101.929 li
cp
229.212 69.626 mo
229.212 65.068 li
224.654 67.347 li
cp
0.999 0.999 0.999 rgb
f
[] 0 dsh
335.665 232.656 mo
335.665 228.097 li
331.107 230.377 li
cp
309.453 198.074 mo
309.453 193.515 li
304.895 195.794 li
cp
284.487 168.432 mo
284.487 163.874 li
279.928 166.153 li
cp
262.761 133.85 mo
262.761 129.292 li
258.202 131.571 li
cp
244.174 104.208 mo
244.174 99.65 li
239.616 101.929 li
cp
229.212 69.626 mo
229.212 65.068 li
224.654 67.347 li
cp
1 0.6 0 rgb
@
340.948 227.001 mo
343.389 226.208 li
343.389 223.641 li
344.898 225.717 li
347.339 224.924 li
345.83 227.001 li
347.339 229.077 li
344.898 228.284 li
343.389 230.36 li
343.389 227.794 li
cp
320.58 194.065 mo
323.021 193.272 li
323.021 190.706 li
324.53 192.782 li
326.971 191.989 li
325.462 194.065 li
326.971 196.142 li
324.53 195.349 li
323.021 197.425 li
323.021 194.858 li
cp
298.234 161.13 mo
300.675 160.337 li
300.675 157.77 li
302.184 159.847 li
304.625 159.054 li
303.116 161.13 li
304.625 163.207 li
302.184 162.413 li
300.675 164.49 li
300.675 161.923 li
cp
275.739 128.36 mo
278.18 127.566 li
278.18 125 li
279.688 127.076 li
282.129 126.283 li
280.621 128.36 li
282.129 130.436 li
279.688 129.643 li
278.18 131.719 li
278.18 129.153 li
cp
255.451 95.26 mo
257.892 94.466 li
257.892 91.9 li
259.401 93.976 li
261.842 93.183 li
260.333 95.26 li
261.842 97.336 li
259.401 96.543 li
257.892 98.619 li
257.892 96.053 li
cp
240.064 63.971 mo
242.504 63.178 li
242.504 60.611 li
244.013 62.688 li
246.454 61.895 li
244.945 63.971 li
246.454 66.047 li
244.013 65.254 li
242.504 67.331 li
242.504 64.764 li
cp
0 0 0 rgb
f
343.413 227.001 mo
343.324 227.001 li
0.999 0.999 0.999 rgb
@
345.549 227.001 mo
345.638 227.001 li
@
342.202 227.001 mo
343.777 226.489 li
343.777 224.833 li
344.75 226.173 li
346.325 225.661 li
345.351 227.001 li
346.325 228.34 li
344.75 227.829 li
343.777 229.168 li
343.777 227.512 li
cp
321.834 194.065 mo
323.409 193.554 li
323.409 191.898 li
324.382 193.237 li
325.957 192.726 li
324.983 194.065 li
325.957 195.405 li
324.382 194.893 li
323.409 196.233 li
323.409 194.577 li
cp
299.488 161.13 mo
301.062 160.618 li
301.062 158.963 li
302.036 160.302 li
303.611 159.79 li
302.637 161.13 li
303.611 162.47 li
302.036 161.958 li
301.062 163.298 li
301.062 161.642 li
cp
276.992 128.36 mo
278.567 127.848 li
278.567 126.192 li
279.54 127.532 li
281.115 127.02 li
280.142 128.36 li
281.115 129.699 li
279.54 129.187 li
278.567 130.527 li
278.567 128.871 li
cp
256.705 95.26 mo
258.28 94.748 li
258.28 93.092 li
259.253 94.432 li
260.828 93.92 li
259.855 95.26 li
260.828 96.599 li
259.253 96.088 li
258.28 97.427 li
258.28 95.771 li
cp
241.317 63.971 mo
242.892 63.459 li
242.892 61.804 li
243.865 63.143 li
245.44 62.631 li
244.467 63.971 li
245.44 65.311 li
243.865 64.799 li
242.892 66.139 li
242.892 64.483 li
cp
f
343.413 227.001 mo
343.324 227.001 li
0 0 0 rgb
@
345.549 227.001 mo
345.638 227.001 li
@
342.202 227.001 mo
343.777 226.489 li
343.777 224.833 li
344.75 226.173 li
346.325 225.661 li
345.351 227.001 li
346.325 228.34 li
344.75 227.829 li
343.777 229.168 li
343.777 227.512 li
cp
321.834 194.065 mo
323.409 193.554 li
323.409 191.898 li
324.382 193.237 li
325.957 192.726 li
324.983 194.065 li
325.957 195.405 li
324.382 194.893 li
323.409 196.233 li
323.409 194.577 li
cp
299.488 161.13 mo
301.062 160.618 li
301.062 158.963 li
302.036 160.302 li
303.611 159.79 li
302.637 161.13 li
303.611 162.47 li
302.036 161.958 li
301.062 163.298 li
301.062 161.642 li
cp
276.992 128.36 mo
278.567 127.848 li
278.567 126.192 li
279.54 127.532 li
281.115 127.02 li
280.142 128.36 li
281.115 129.699 li
279.54 129.187 li
278.567 130.527 li
278.567 128.871 li
cp
256.705 95.26 mo
258.28 94.748 li
258.28 93.092 li
259.253 94.432 li
260.828 93.92 li
259.855 95.26 li
260.828 96.599 li
259.253 96.088 li
258.28 97.427 li
258.28 95.771 li
cp
241.317 63.971 mo
242.892 63.459 li
242.892 61.804 li
243.865 63.143 li
245.44 62.631 li
244.467 63.971 li
245.44 65.311 li
243.865 64.799 li
242.892 66.139 li
242.892 64.483 li
cp
0 0.8 0 rgb
f
346.351 227.001 mo
341.465 227.001 li
0.999 0.999 0.999 rgb
@
352.049 227.001 mo
356.935 227.001 li
@
352.277 227.001 mo
346.124 223.924 li
346.124 230.077 li
cp
343.778 194.065 mo
337.624 190.989 li
337.624 197.142 li
cp
327.102 161.13 mo
320.949 158.053 li
320.949 164.207 li
cp
303.858 128.36 mo
297.704 125.283 li
297.704 131.436 li
cp
276.266 95.26 mo
270.112 92.183 li
270.112 98.336 li
cp
252.38 63.971 mo
246.226 60.894 li
246.226 67.048 li
cp
0 0 0 rgb
f
347.064 227.001 mo
341.465 227.001 li
0.999 0.999 0.999 rgb
@
351.337 227.001 mo
356.935 227.001 li
@
351.479 227.001 mo
346.921 224.722 li
346.921 229.28 li
cp
342.98 194.065 mo
338.422 191.786 li
338.422 196.344 li
cp
326.305 161.13 mo
321.746 158.851 li
321.746 163.409 li
cp
303.06 128.36 mo
298.502 126.08 li
298.502 130.639 li
cp
275.468 95.26 mo
270.91 92.98 li
270.91 97.539 li
cp
251.582 63.971 mo
247.024 61.692 li
247.024 66.25 li
cp
f
347.064 227.001 mo
341.465 227.001 li
0 0 0 rgb
@
351.337 227.001 mo
356.935 227.001 li
@
351.479 227.001 mo
346.921 224.722 li
346.921 229.28 li
cp
342.98 194.065 mo
338.422 191.786 li
338.422 196.344 li
cp
326.305 161.13 mo
321.746 158.851 li
321.746 163.409 li
cp
303.06 128.36 mo
298.502 126.08 li
298.502 130.639 li
cp
275.468 95.26 mo
270.91 92.98 li
270.91 97.539 li
cp
251.582 63.971 mo
247.024 61.692 li
247.024 66.25 li
cp
0.8 0.8 0.8 rgb
f
334.365 170.187 mo
330.543 170.187 li
0.999 0.999 0.999 rgb
@
340.063 170.187 mo
343.885 170.187 li
@
301.736 112.715 mo
299.84 112.715 li
@
307.433 112.715 mo
309.329 112.715 li
@
257.95 50.632 mo
254.919 50.632 li
@
263.648 50.632 mo
266.679 50.632 li
@
337.214 173.264 mo
333.111 173.264 333.111 167.111 337.214 167.111 cv
341.316 167.111 341.316 173.264 337.214 173.264 cv
cp
304.584 115.792 mo
300.482 115.792 300.482 109.638 304.584 109.638 cv
308.687 109.638 308.687 115.792 304.584 115.792 cv
cp
260.799 53.709 mo
256.697 53.709 256.697 47.555 260.799 47.555 cv
264.902 47.555 264.902 53.709 260.799 53.709 cv
cp
0 0 0 rgb
f
335.077 170.187 mo
330.543 170.187 li
0.999 0.999 0.999 rgb
@
339.35 170.187 mo
343.885 170.187 li
@
302.448 112.715 mo
299.84 112.715 li
@
306.721 112.715 mo
309.329 112.715 li
@
258.663 50.632 mo
254.919 50.632 li
@
262.936 50.632 mo
266.679 50.632 li
@
337.214 172.466 mo
334.175 172.466 334.175 167.908 337.214 167.908 cv
340.253 167.908 340.253 172.466 337.214 172.466 cv
cp
304.584 114.994 mo
301.546 114.994 301.546 110.436 304.584 110.436 cv
307.623 110.436 307.623 114.994 304.584 114.994 cv
cp
260.799 52.911 mo
257.76 52.911 257.76 48.353 260.799 48.353 cv
263.838 48.353 263.838 52.911 260.799 52.911 cv
cp
f
335.077 170.187 mo
330.543 170.187 li
0 0 0 rgb
@
339.35 170.187 mo
343.885 170.187 li
@
302.448 112.715 mo
299.84 112.715 li
@
306.721 112.715 mo
309.329 112.715 li
@
258.663 50.632 mo
254.919 50.632 li
@
262.936 50.632 mo
266.679 50.632 li
@
337.214 172.466 mo
334.175 172.466 334.175 167.908 337.214 167.908 cv
340.253 167.908 340.253 172.466 337.214 172.466 cv
cp
304.584 114.994 mo
301.546 114.994 301.546 110.436 304.584 110.436 cv
307.623 110.436 307.623 114.994 304.584 114.994 cv
cp
260.799 52.911 mo
257.76 52.911 257.76 48.353 260.799 48.353 cv
263.838 48.353 263.838 52.911 260.799 52.911 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
360.282 274.945 mo
360.234 272.983 li
360.159 271.02 li
360.056 269.058 li
359.925 267.096 li
359.767 265.133 li
359.581 263.171 li
359.367 261.209 li
359.127 259.247 li
358.859 257.284 li
358.564 255.322 li
358.242 253.36 li
357.893 251.397 li
357.518 249.435 li
357.116 247.473 li
356.689 245.511 li
356.235 243.548 li
355.756 241.586 li
355.251 239.624 li
354.721 237.661 li
354.167 235.699 li
353.587 233.737 li
352.983 231.775 li
352.356 229.812 li
351.704 227.85 li
351.029 225.888 li
350.331 223.925 li
349.611 221.963 li
348.867 220.001 li
348.102 218.039 li
347.315 216.076 li
346.507 214.114 li
345.678 212.152 li
344.828 210.19 li
343.958 208.227 li
343.068 206.265 li
342.158 204.303 li
341.23 202.34 li
340.282 200.378 li
339.316 198.416 li
338.332 196.454 li
337.331 194.491 li
336.312 192.529 li
335.277 190.567 li
334.225 188.604 li
333.156 186.642 li
332.073 184.68 li
330.973 182.718 li
329.859 180.755 li
328.73 178.793 li
@
328.73 178.793 mo
327.587 176.831 li
326.43 174.868 li
325.259 172.906 li
324.075 170.944 li
322.878 168.982 li
321.669 167.019 li
320.448 165.057 li
319.214 163.095 li
317.969 161.132 li
316.713 159.17 li
315.446 157.208 li
314.169 155.246 li
312.881 153.283 li
311.583 151.321 li
310.276 149.359 li
308.959 147.396 li
307.633 145.434 li
306.298 143.472 li
304.955 141.51 li
303.604 139.547 li
302.244 137.585 li
300.877 135.623 li
299.502 133.66 li
298.12 131.698 li
296.73 129.736 li
295.335 127.774 li
293.932 125.811 li
292.523 123.849 li
291.108 121.887 li
289.687 119.924 li
288.261 117.962 li
286.829 116 li
285.391 114.038 li
283.949 112.075 li
282.501 110.113 li
281.049 108.151 li
279.593 106.188 li
278.132 104.226 li
276.666 102.264 li
275.197 100.302 li
273.724 98.339 li
272.246 96.377 li
270.766 94.415 li
269.282 92.453 li
267.794 90.49 li
266.304 88.528 li
264.81 86.566 li
263.314 84.603 li
261.815 82.641 li
@
261.815 82.641 mo
260.313 80.679 li
@
261.944 82.81 mo
261.667 82.448 li
261.39 82.085 li
261.112 81.723 li
260.835 81.361 li
260.558 80.999 li
260.28 80.636 li
260.003 80.274 li
259.725 79.912 li
259.447 79.549 li
259.169 79.187 li
258.891 78.825 li
258.613 78.463 li
258.335 78.1 li
258.057 77.738 li
257.779 77.376 li
257.501 77.013 li
257.222 76.651 li
256.944 76.289 li
256.665 75.927 li
256.386 75.564 li
256.108 75.202 li
255.829 74.84 li
255.55 74.477 li
255.271 74.115 li
254.992 73.753 li
254.713 73.391 li
254.434 73.028 li
254.155 72.666 li
253.875 72.304 li
253.596 71.941 li
253.317 71.579 li
253.037 71.217 li
252.758 70.855 li
252.478 70.492 li
252.198 70.13 li
251.918 69.768 li
251.639 69.405 li
251.359 69.043 li
251.079 68.681 li
250.799 68.319 li
250.519 67.956 li
250.238 67.594 li
249.958 67.232 li
249.678 66.869 li
249.398 66.507 li
249.117 66.145 li
248.837 65.783 li
248.556 65.42 li
248.276 65.058 li
@
248.276 65.058 mo
247.995 64.696 li
247.714 64.333 li
247.434 63.971 li
247.153 63.609 li
246.872 63.246 li
246.591 62.884 li
246.31 62.522 li
246.029 62.16 li
245.748 61.797 li
245.467 61.435 li
245.186 61.073 li
244.904 60.71 li
244.623 60.348 li
244.342 59.986 li
244.061 59.624 li
243.779 59.261 li
243.498 58.899 li
243.216 58.537 li
242.935 58.174 li
242.653 57.812 li
242.371 57.45 li
242.09 57.088 li
241.808 56.725 li
241.526 56.363 li
241.244 56.001 li
240.962 55.638 li
240.68 55.276 li
240.398 54.914 li
240.116 54.552 li
239.834 54.189 li
239.552 53.827 li
239.27 53.465 li
238.988 53.102 li
238.706 52.74 li
238.423 52.378 li
238.141 52.016 li
237.859 51.653 li
237.576 51.291 li
237.294 50.929 li
237.012 50.566 li
236.729 50.204 li
236.447 49.842 li
236.164 49.48 li
235.882 49.117 li
235.599 48.755 li
235.316 48.393 li
235.034 48.03 li
234.751 47.668 li
234.468 47.306 li
@
234.468 47.306 mo
234.185 46.944 li
@
[] 0 dsh
360.286 274.945 mo
360.249 272.983 li
360.191 271.02 li
360.111 269.058 li
360.01 267.096 li
359.886 265.133 li
359.741 263.171 li
359.573 261.209 li
359.384 259.247 li
359.172 257.284 li
358.938 255.322 li
358.682 253.36 li
358.402 251.397 li
358.1 249.435 li
357.775 247.473 li
357.427 245.511 li
357.056 243.548 li
356.662 241.586 li
356.244 239.624 li
355.803 237.661 li
355.338 235.699 li
354.85 233.737 li
354.339 231.775 li
353.804 229.812 li
353.246 227.85 li
352.664 225.888 li
352.06 223.925 li
351.432 221.963 li
350.781 220.001 li
350.107 218.039 li
349.411 216.076 li
348.692 214.114 li
347.951 212.152 li
347.188 210.19 li
346.403 208.227 li
345.596 206.265 li
344.769 204.303 li
343.92 202.34 li
343.051 200.378 li
342.161 198.416 li
341.252 196.454 li
340.323 194.491 li
339.374 192.529 li
338.407 190.567 li
337.421 188.604 li
336.417 186.642 li
335.395 184.68 li
334.355 182.718 li
333.299 180.755 li
332.225 178.793 li
0.8 0.8 0.8 rgb
@
332.225 178.793 mo
331.136 176.831 li
330.03 174.868 li
328.909 172.906 li
327.773 170.944 li
326.622 168.982 li
325.456 167.019 li
324.277 165.057 li
323.083 163.095 li
321.877 161.132 li
320.657 159.17 li
319.425 157.208 li
318.18 155.246 li
316.924 153.283 li
315.656 151.321 li
314.377 149.359 li
313.086 147.396 li
311.786 145.434 li
310.475 143.472 li
309.154 141.51 li
307.823 139.547 li
306.483 137.585 li
305.134 135.623 li
303.776 133.66 li
302.41 131.698 li
301.036 129.736 li
299.653 127.774 li
298.263 125.811 li
296.866 123.849 li
295.461 121.887 li
294.05 119.924 li
292.631 117.962 li
291.207 116 li
289.776 114.038 li
288.339 112.075 li
286.897 110.113 li
285.449 108.151 li
283.995 106.188 li
282.537 104.226 li
281.073 102.264 li
279.605 100.302 li
278.132 98.339 li
276.654 96.377 li
275.173 94.415 li
273.687 92.453 li
272.198 90.49 li
270.705 88.528 li
269.208 86.566 li
267.708 84.603 li
266.204 82.641 li
@
266.204 82.641 mo
264.698 80.679 li
@
266.334 82.81 mo
266.056 82.448 li
265.778 82.085 li
265.5 81.723 li
265.222 81.361 li
264.944 80.999 li
264.665 80.636 li
264.387 80.274 li
264.108 79.912 li
263.829 79.549 li
263.551 79.187 li
263.272 78.825 li
262.993 78.463 li
262.714 78.1 li
262.434 77.738 li
262.155 77.376 li
261.876 77.013 li
261.596 76.651 li
261.317 76.289 li
261.037 75.927 li
260.757 75.564 li
260.477 75.202 li
260.197 74.84 li
259.917 74.477 li
259.637 74.115 li
259.357 73.753 li
259.077 73.391 li
258.797 73.028 li
258.516 72.666 li
258.236 72.304 li
257.955 71.941 li
257.674 71.579 li
257.393 71.217 li
257.113 70.855 li
256.832 70.492 li
256.551 70.13 li
256.27 69.768 li
255.988 69.405 li
255.707 69.043 li
255.426 68.681 li
255.144 68.319 li
254.863 67.956 li
254.581 67.594 li
254.3 67.232 li
254.018 66.869 li
253.736 66.507 li
253.454 66.145 li
253.173 65.783 li
252.891 65.42 li
252.608 65.058 li
@
252.608 65.058 mo
252.326 64.696 li
252.044 64.333 li
251.762 63.971 li
251.48 63.609 li
251.197 63.246 li
250.915 62.884 li
250.632 62.522 li
250.35 62.16 li
250.067 61.797 li
249.784 61.435 li
249.501 61.073 li
249.219 60.71 li
248.936 60.348 li
248.653 59.986 li
248.37 59.624 li
248.087 59.261 li
247.804 58.899 li
247.52 58.537 li
247.237 58.174 li
246.954 57.812 li
246.67 57.45 li
246.387 57.088 li
246.104 56.725 li
245.82 56.363 li
245.536 56.001 li
245.253 55.638 li
244.969 55.276 li
244.685 54.914 li
244.402 54.552 li
244.118 54.189 li
243.834 53.827 li
243.55 53.465 li
243.266 53.102 li
242.982 52.74 li
242.698 52.378 li
242.414 52.016 li
242.13 51.653 li
241.845 51.291 li
241.561 50.929 li
241.277 50.566 li
240.992 50.204 li
240.708 49.842 li
240.423 49.48 li
240.139 49.117 li
239.854 48.755 li
239.57 48.393 li
239.285 48.03 li
239.001 47.668 li
238.716 47.306 li
@
238.716 47.306 mo
238.431 46.944 li
@
360.257 274.945 mo
360.151 272.983 li
359.983 271.02 li
359.754 269.058 li
359.465 267.096 li
359.117 265.133 li
358.712 263.171 li
358.249 261.209 li
357.732 259.247 li
357.162 257.284 li
356.541 255.322 li
355.871 253.36 li
355.154 251.397 li
354.392 249.435 li
353.587 247.473 li
352.742 245.511 li
351.858 243.548 li
350.938 241.586 li
349.985 239.624 li
348.999 237.661 li
347.984 235.699 li
346.941 233.737 li
345.872 231.775 li
344.78 229.812 li
343.665 227.85 li
342.529 225.888 li
341.374 223.925 li
340.202 221.963 li
339.014 220.001 li
337.811 218.039 li
336.595 216.076 li
335.366 214.114 li
334.125 212.152 li
332.874 210.19 li
331.613 208.227 li
330.343 206.265 li
329.065 204.303 li
327.78 202.34 li
326.487 200.378 li
325.188 198.416 li
323.883 196.454 li
322.572 194.491 li
321.256 192.529 li
319.936 190.567 li
318.61 188.604 li
317.281 186.642 li
315.947 184.68 li
314.609 182.718 li
313.268 180.755 li
311.923 178.793 li
0 0.8 0 rgb
@
311.923 178.793 mo
310.575 176.831 li
309.223 174.868 li
307.868 172.906 li
306.511 170.944 li
305.15 168.982 li
303.786 167.019 li
302.419 165.057 li
301.05 163.095 li
299.677 161.132 li
298.303 159.17 li
296.925 157.208 li
295.545 155.246 li
294.162 153.283 li
292.776 151.321 li
291.388 149.359 li
289.998 147.396 li
288.605 145.434 li
287.21 143.472 li
285.812 141.51 li
284.412 139.547 li
283.01 137.585 li
281.605 135.623 li
280.198 133.66 li
278.789 131.698 li
277.377 129.736 li
275.964 127.774 li
274.548 125.811 li
273.13 123.849 li
271.711 121.887 li
270.289 119.924 li
268.865 117.962 li
267.439 116 li
266.012 114.038 li
264.582 112.075 li
263.151 110.113 li
261.718 108.151 li
260.283 106.188 li
258.847 104.226 li
257.409 102.264 li
255.969 100.302 li
254.528 98.339 li
253.085 96.377 li
251.641 94.415 li
250.195 92.453 li
248.748 90.49 li
247.3 88.528 li
245.85 86.566 li
244.399 84.603 li
242.947 82.641 li
@
242.947 82.641 mo
241.494 80.679 li
@
243.072 82.81 mo
242.804 82.448 li
242.536 82.085 li
242.268 81.723 li
241.999 81.361 li
241.731 80.999 li
241.463 80.636 li
241.194 80.274 li
240.926 79.912 li
240.657 79.549 li
240.389 79.187 li
240.12 78.825 li
239.852 78.463 li
239.583 78.1 li
239.314 77.738 li
239.045 77.376 li
238.777 77.013 li
238.508 76.651 li
238.239 76.289 li
237.97 75.927 li
237.701 75.564 li
237.432 75.202 li
237.163 74.84 li
236.894 74.477 li
236.625 74.115 li
236.356 73.753 li
236.087 73.391 li
235.818 73.028 li
235.549 72.666 li
235.28 72.304 li
235.01 71.941 li
234.741 71.579 li
234.472 71.217 li
234.203 70.855 li
233.933 70.492 li
233.664 70.13 li
233.394 69.768 li
233.125 69.405 li
232.855 69.043 li
232.586 68.681 li
232.316 68.319 li
232.047 67.956 li
231.777 67.594 li
231.508 67.232 li
231.238 66.869 li
230.968 66.507 li
230.699 66.145 li
230.429 65.783 li
230.159 65.42 li
229.889 65.058 li
@
229.889 65.058 mo
229.619 64.696 li
229.35 64.333 li
229.08 63.971 li
228.81 63.609 li
228.54 63.246 li
228.27 62.884 li
228 62.522 li
227.73 62.16 li
227.46 61.797 li
227.19 61.435 li
226.92 61.073 li
226.65 60.71 li
226.38 60.348 li
226.109 59.986 li
225.839 59.624 li
225.569 59.261 li
225.299 58.899 li
225.029 58.537 li
224.758 58.174 li
224.488 57.812 li
224.218 57.45 li
223.947 57.088 li
223.677 56.725 li
223.407 56.363 li
223.136 56.001 li
222.866 55.638 li
222.595 55.276 li
222.325 54.914 li
222.055 54.552 li
221.784 54.189 li
221.514 53.827 li
221.243 53.465 li
220.973 53.102 li
220.702 52.74 li
220.431 52.378 li
220.161 52.016 li
219.89 51.653 li
219.619 51.291 li
219.349 50.929 li
219.078 50.566 li
218.807 50.204 li
218.537 49.842 li
218.266 49.48 li
217.995 49.117 li
217.725 48.755 li
217.454 48.393 li
217.183 48.03 li
216.912 47.668 li
216.641 47.306 li
@
216.641 47.306 mo
216.37 46.944 li
@
360.278 274.945 mo
360.221 272.983 li
360.132 271.02 li
360.009 269.058 li
359.854 267.096 li
359.666 265.133 li
359.445 263.171 li
359.193 261.209 li
358.909 259.247 li
358.594 257.284 li
358.247 255.322 li
357.871 253.36 li
357.463 251.397 li
357.027 249.435 li
356.561 247.473 li
356.066 245.511 li
355.543 243.548 li
354.993 241.586 li
354.415 239.624 li
353.811 237.661 li
353.181 235.699 li
352.525 233.737 li
351.845 231.775 li
351.139 229.812 li
350.41 227.85 li
349.658 225.888 li
348.883 223.925 li
348.085 221.963 li
347.266 220.001 li
346.425 218.039 li
345.563 216.076 li
344.681 214.114 li
343.78 212.152 li
342.859 210.19 li
341.919 208.227 li
340.96 206.265 li
339.984 204.303 li
338.99 202.34 li
337.979 200.378 li
336.952 198.416 li
335.908 196.454 li
334.848 194.491 li
333.773 192.529 li
332.682 190.567 li
331.577 188.604 li
330.458 186.642 li
329.325 184.68 li
328.178 182.718 li
327.018 180.755 li
325.845 178.793 li
0.2 0.6 1 rgb
@
325.845 178.793 mo
324.66 176.831 li
323.462 174.868 li
322.253 172.906 li
321.032 170.944 li
319.799 168.982 li
318.556 167.019 li
317.303 165.057 li
316.039 163.095 li
314.765 161.132 li
313.481 159.17 li
312.188 157.208 li
310.885 155.246 li
309.574 153.283 li
308.254 151.321 li
306.926 149.359 li
305.589 147.396 li
304.245 145.434 li
302.893 143.472 li
301.534 141.51 li
300.167 139.547 li
298.794 137.585 li
297.414 135.623 li
296.027 133.66 li
294.634 131.698 li
293.235 129.736 li
291.83 127.774 li
290.42 125.811 li
289.004 123.849 li
287.583 121.887 li
286.156 119.924 li
284.725 117.962 li
283.289 116 li
281.848 114.038 li
280.403 112.075 li
278.953 110.113 li
277.5 108.151 li
276.042 106.188 li
274.581 104.226 li
273.116 102.264 li
271.648 100.302 li
270.176 98.339 li
268.701 96.377 li
267.222 94.415 li
265.741 92.453 li
264.257 90.49 li
262.77 88.528 li
261.281 86.566 li
259.789 84.603 li
258.295 82.641 li
@
258.295 82.641 mo
256.798 80.679 li
@
258.424 82.81 mo
258.148 82.448 li
257.871 82.085 li
257.595 81.723 li
257.319 81.361 li
257.042 80.999 li
256.766 80.636 li
256.489 80.274 li
256.213 79.912 li
255.936 79.549 li
255.659 79.187 li
255.382 78.825 li
255.105 78.463 li
254.828 78.1 li
254.551 77.738 li
254.274 77.376 li
253.997 77.013 li
253.72 76.651 li
253.442 76.289 li
253.165 75.927 li
252.888 75.564 li
252.61 75.202 li
252.332 74.84 li
252.055 74.477 li
251.777 74.115 li
251.499 73.753 li
251.221 73.391 li
250.943 73.028 li
250.665 72.666 li
250.387 72.304 li
250.109 71.941 li
249.831 71.579 li
249.553 71.217 li
249.275 70.855 li
248.996 70.492 li
248.718 70.13 li
248.439 69.768 li
248.161 69.405 li
247.882 69.043 li
247.604 68.681 li
247.325 68.319 li
247.046 67.956 li
246.768 67.594 li
246.489 67.232 li
246.21 66.869 li
245.931 66.507 li
245.652 66.145 li
245.373 65.783 li
245.094 65.42 li
244.815 65.058 li
@
244.815 65.058 mo
244.536 64.696 li
244.256 64.333 li
243.977 63.971 li
243.698 63.609 li
243.418 63.246 li
243.139 62.884 li
242.859 62.522 li
242.58 62.16 li
242.3 61.797 li
242.021 61.435 li
241.741 61.073 li
241.461 60.71 li
241.182 60.348 li
240.902 59.986 li
240.622 59.624 li
240.342 59.261 li
240.062 58.899 li
239.782 58.537 li
239.502 58.174 li
239.222 57.812 li
238.942 57.45 li
238.662 57.088 li
238.382 56.725 li
238.102 56.363 li
237.822 56.001 li
237.541 55.638 li
237.261 55.276 li
236.981 54.914 li
236.701 54.552 li
236.42 54.189 li
236.14 53.827 li
235.859 53.465 li
235.579 53.102 li
235.298 52.74 li
235.018 52.378 li
234.737 52.016 li
234.456 51.653 li
234.176 51.291 li
233.895 50.929 li
233.614 50.566 li
233.334 50.204 li
233.053 49.842 li
232.772 49.48 li
232.491 49.117 li
232.21 48.755 li
231.929 48.393 li
231.648 48.03 li
231.368 47.668 li
231.087 47.306 li
@
231.087 47.306 mo
230.806 46.944 li
@
[5 5 ] 0 dsh
360.24 274.945 mo
360.094 272.983 li
359.865 271.02 li
359.553 269.058 li
359.161 267.096 li
358.692 265.133 li
358.147 263.171 li
357.53 261.209 li
356.845 259.247 li
356.096 257.284 li
355.285 255.322 li
354.417 253.36 li
353.495 251.397 li
352.523 249.435 li
351.505 247.473 li
350.445 245.511 li
349.345 243.548 li
348.209 241.586 li
347.041 239.624 li
345.844 237.661 li
344.62 235.699 li
343.372 233.737 li
342.103 231.775 li
340.815 229.812 li
339.511 227.85 li
338.192 225.888 li
336.86 223.925 li
335.517 221.963 li
334.166 220.001 li
332.806 218.039 li
331.439 216.076 li
330.067 214.114 li
328.691 212.152 li
327.311 210.19 li
325.928 208.227 li
324.543 206.265 li
323.157 204.303 li
321.769 202.34 li
320.381 200.378 li
318.993 198.416 li
317.604 196.454 li
316.216 194.491 li
314.828 192.529 li
313.441 190.567 li
312.054 188.604 li
310.668 186.642 li
309.283 184.68 li
307.898 182.718 li
306.514 180.755 li
305.131 178.793 li
1 0.6 0 rgb
@
305.131 178.793 mo
303.749 176.831 li
302.367 174.868 li
300.985 172.906 li
299.604 170.944 li
298.223 168.982 li
296.843 167.019 li
295.462 165.057 li
294.082 163.095 li
292.701 161.132 li
291.321 159.17 li
289.94 157.208 li
288.558 155.246 li
287.176 153.283 li
285.794 151.321 li
284.411 149.359 li
283.028 147.396 li
281.643 145.434 li
280.258 143.472 li
278.872 141.51 li
277.485 139.547 li
276.097 137.585 li
274.708 135.623 li
273.317 133.66 li
271.926 131.698 li
270.533 129.736 li
269.14 127.774 li
267.745 125.811 li
266.348 123.849 li
264.951 121.887 li
263.552 119.924 li
262.152 117.962 li
260.751 116 li
259.348 114.038 li
257.944 112.075 li
256.538 110.113 li
255.132 108.151 li
253.724 106.188 li
252.314 104.226 li
250.904 102.264 li
249.492 100.302 li
248.079 98.339 li
246.664 96.377 li
245.249 94.415 li
243.832 92.453 li
242.414 90.49 li
240.995 88.528 li
239.575 86.566 li
238.153 84.603 li
236.731 82.641 li
@
236.731 82.641 mo
235.307 80.679 li
@
236.853 82.81 mo
236.59 82.448 li
236.328 82.085 li
236.065 81.723 li
235.802 81.361 li
235.539 80.999 li
235.276 80.636 li
235.013 80.274 li
234.75 79.912 li
234.487 79.549 li
234.224 79.187 li
233.961 78.825 li
233.698 78.463 li
233.435 78.1 li
233.172 77.738 li
232.908 77.376 li
232.645 77.013 li
232.382 76.651 li
232.118 76.289 li
231.855 75.927 li
231.592 75.564 li
231.328 75.202 li
231.065 74.84 li
230.801 74.477 li
230.538 74.115 li
230.274 73.753 li
230.011 73.391 li
229.747 73.028 li
229.483 72.666 li
229.22 72.304 li
228.956 71.941 li
228.692 71.579 li
228.428 71.217 li
228.165 70.855 li
227.901 70.492 li
227.637 70.13 li
227.373 69.768 li
227.109 69.405 li
226.845 69.043 li
226.581 68.681 li
226.317 68.319 li
226.053 67.956 li
225.789 67.594 li
225.525 67.232 li
225.261 66.869 li
224.996 66.507 li
224.732 66.145 li
224.468 65.783 li
224.204 65.42 li
223.939 65.058 li
@
223.939 65.058 mo
223.675 64.696 li
223.411 64.333 li
223.146 63.971 li
222.882 63.609 li
222.618 63.246 li
222.353 62.884 li
222.089 62.522 li
221.824 62.16 li
221.56 61.797 li
221.295 61.435 li
221.031 61.073 li
220.766 60.71 li
220.501 60.348 li
220.237 59.986 li
219.972 59.624 li
219.707 59.261 li
219.443 58.899 li
219.178 58.537 li
218.913 58.174 li
218.648 57.812 li
218.383 57.45 li
218.119 57.088 li
217.854 56.725 li
217.589 56.363 li
217.324 56.001 li
217.059 55.638 li
216.794 55.276 li
216.529 54.914 li
216.264 54.552 li
215.999 54.189 li
215.734 53.827 li
215.469 53.465 li
215.204 53.102 li
214.939 52.74 li
214.673 52.378 li
214.408 52.016 li
214.143 51.653 li
213.878 51.291 li
213.613 50.929 li
213.347 50.566 li
213.082 50.204 li
212.817 49.842 li
212.552 49.48 li
212.286 49.117 li
212.021 48.755 li
211.756 48.393 li
211.475 48.03 li
211.475 47.668 li
@
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
1 1 1 rgb
ef
0.002 lw
[] 0 dsh
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
@
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
0.999 0.999 0.999 rgb
ef
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
@
0.75 lw
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
0 0 0 rgb
@
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
0.999 0.999 0.999 rgb
ef
0.002 lw
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
@
0.75 lw
541.971 275.926 mo
541.971 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
0 0 0 rgb
@
1.5 lw
541.971 275.926 mo
541.971 38.002 li
@
536.165 244.374 mo
541.971 244.374 li
@
539.068 236.14 mo
541.971 236.14 li
@
539.068 227.906 mo
541.971 227.906 li
@
539.068 219.673 mo
541.971 219.673 li
@
536.165 211.439 mo
541.971 211.439 li
@
539.068 203.205 mo
541.971 203.205 li
@
539.068 194.971 mo
541.971 194.971 li
@
539.068 186.737 mo
541.971 186.737 li
@
536.165 178.503 mo
541.971 178.503 li
@
539.068 170.27 mo
541.971 170.27 li
@
539.068 162.036 mo
541.971 162.036 li
@
539.068 153.802 mo
541.971 153.802 li
@
536.165 145.568 mo
541.971 145.568 li
@
539.068 137.334 mo
541.971 137.334 li
@
539.068 129.101 mo
541.971 129.101 li
@
539.068 120.867 mo
541.971 120.867 li
@
536.165 112.633 mo
541.971 112.633 li
@
539.068 104.399 mo
541.971 104.399 li
@
539.068 96.165 mo
541.971 96.165 li
@
539.068 87.931 mo
541.971 87.931 li
@
536.165 79.698 mo
541.971 79.698 li
@
539.068 71.464 mo
541.971 71.464 li
@
539.068 63.23 mo
541.971 63.23 li
@
539.068 54.996 mo
541.971 54.996 li
@
536.165 46.762 mo
541.971 46.762 li
@
536.165 244.374 mo
541.971 244.374 li
@
539.068 252.608 mo
541.971 252.608 li
@
539.068 260.842 mo
541.971 260.842 li
@
539.068 269.075 mo
541.971 269.075 li
@
536.165 46.762 mo
541.971 46.762 li
@
539.068 38.529 mo
541.971 38.529 li
@
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf553.194 254.334 mo(0.2)[-7.14688 -3.57344 0 ]ysh553.194 220.86 mo(0.4)[-7.14688 -3.57344 0 ]ysh553.194 188.098 mo(0.6)[-7.14688 -3.57344 0 ]ysh553.194 155.335 mo(0.8)[-7.14688 -3.57344 0 ]ysh553.194 116.163 mo(1)sh553.194 89.099 mo(1.2)[-7.14688 -3.57344 0 ]yshgsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf553.194 56.336 mo(1.4)[-7.14688 -3.57344 0 ]yshgrestore
377.474 275.926 mo
377.474 38.002 li
@
383.28 244.374 mo
377.474 244.374 li
@
380.377 236.14 mo
377.474 236.14 li
@
380.377 227.906 mo
377.474 227.906 li
@
380.377 219.673 mo
377.474 219.673 li
@
383.28 211.439 mo
377.474 211.439 li
@
380.377 203.205 mo
377.474 203.205 li
@
380.377 194.971 mo
377.474 194.971 li
@
380.377 186.737 mo
377.474 186.737 li
@
383.28 178.503 mo
377.474 178.503 li
@
380.377 170.27 mo
377.474 170.27 li
@
380.377 162.036 mo
377.474 162.036 li
@
380.377 153.802 mo
377.474 153.802 li
@
383.28 145.568 mo
377.474 145.568 li
@
380.377 137.334 mo
377.474 137.334 li
@
380.377 129.101 mo
377.474 129.101 li
@
380.377 120.867 mo
377.474 120.867 li
@
383.28 112.633 mo
377.474 112.633 li
@
380.377 104.399 mo
377.474 104.399 li
@
380.377 96.165 mo
377.474 96.165 li
@
380.377 87.931 mo
377.474 87.931 li
@
383.28 79.698 mo
377.474 79.698 li
@
380.377 71.464 mo
377.474 71.464 li
@
380.377 63.23 mo
377.474 63.23 li
@
380.377 54.996 mo
377.474 54.996 li
@
383.28 46.762 mo
377.474 46.762 li
@
383.28 244.374 mo
377.474 244.374 li
@
380.377 252.608 mo
377.474 252.608 li
@
380.377 260.842 mo
377.474 260.842 li
@
380.377 269.075 mo
377.474 269.075 li
@
383.28 46.762 mo
377.474 46.762 li
@
380.377 38.529 mo
377.474 38.529 li
@
541.971 275.926 mo
377.474 275.926 li
@
532.832 269.859 mo
532.832 275.926 li
@
528.263 272.892 mo
528.263 275.926 li
@
523.694 272.892 mo
523.694 275.926 li
@
519.124 272.892 mo
519.124 275.926 li
@
514.555 269.859 mo
514.555 275.926 li
@
509.986 272.892 mo
509.986 275.926 li
@
505.416 272.892 mo
505.416 275.926 li
@
500.847 272.892 mo
500.847 275.926 li
@
496.277 269.859 mo
496.277 275.926 li
@
491.708 272.892 mo
491.708 275.926 li
@
487.139 272.892 mo
487.139 275.926 li
@
482.569 272.892 mo
482.569 275.926 li
@
478 269.859 mo
478 275.926 li
@
473.431 272.892 mo
473.431 275.926 li
@
468.861 272.892 mo
468.861 275.926 li
@
464.292 272.892 mo
464.292 275.926 li
@
459.723 269.859 mo
459.723 275.926 li
@
455.153 272.892 mo
455.153 275.926 li
@
450.584 272.892 mo
450.584 275.926 li
@
446.014 272.892 mo
446.014 275.926 li
@
441.445 269.859 mo
441.445 275.926 li
@
436.876 272.892 mo
436.876 275.926 li
@
432.306 272.892 mo
432.306 275.926 li
@
427.737 272.892 mo
427.737 275.926 li
@
423.168 269.859 mo
423.168 275.926 li
@
418.598 272.892 mo
418.598 275.926 li
@
414.029 272.892 mo
414.029 275.926 li
@
409.46 272.892 mo
409.46 275.926 li
@
404.89 269.859 mo
404.89 275.926 li
@
400.321 272.892 mo
400.321 275.926 li
@
395.751 272.892 mo
395.751 275.926 li
@
391.182 272.892 mo
391.182 275.926 li
@
386.613 269.859 mo
386.613 275.926 li
@
532.832 269.859 mo
532.832 275.926 li
@
537.402 272.892 mo
537.402 275.926 li
@
541.971 272.892 mo
541.971 275.926 li
@
386.613 269.859 mo
386.613 275.926 li
@
382.043 272.892 mo
382.043 275.926 li
@
377.474 272.892 mo
377.474 275.926 li
@
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf537.525 284.248 mo(0)shgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf519.008 302.053 mo(0.02)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf501.202 302.053 mo(0.04)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf482.684 302.053 mo(0.06)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf464.167 302.053 mo(0.08)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf446.361 292.794 mo(0.1)[-7.14688 -3.57346 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf427.843 302.053 mo(0.12)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf409.326 302.053 mo(0.14)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -12.8541 -12.8541 0 0 0 ]msf391.52 302.053 mo(0.16)[-7.14688 -3.57346 -7.14688 0 ]yshgrestore
541.971 38.002 mo
377.474 38.002 li
@
532.832 44.069 mo
532.832 38.002 li
@
528.263 41.035 mo
528.263 38.002 li
@
523.694 41.035 mo
523.694 38.002 li
@
519.124 41.035 mo
519.124 38.002 li
@
514.555 44.069 mo
514.555 38.002 li
@
509.986 41.035 mo
509.986 38.002 li
@
505.416 41.035 mo
505.416 38.002 li
@
500.847 41.035 mo
500.847 38.002 li
@
496.277 44.069 mo
496.277 38.002 li
@
491.708 41.035 mo
491.708 38.002 li
@
487.139 41.035 mo
487.139 38.002 li
@
482.569 41.035 mo
482.569 38.002 li
@
478 44.069 mo
478 38.002 li
@
473.431 41.035 mo
473.431 38.002 li
@
468.861 41.035 mo
468.861 38.002 li
@
464.292 41.035 mo
464.292 38.002 li
@
459.723 44.069 mo
459.723 38.002 li
@
455.153 41.035 mo
455.153 38.002 li
@
450.584 41.035 mo
450.584 38.002 li
@
446.014 41.035 mo
446.014 38.002 li
@
441.445 44.069 mo
441.445 38.002 li
@
436.876 41.035 mo
436.876 38.002 li
@
432.306 41.035 mo
432.306 38.002 li
@
427.737 41.035 mo
427.737 38.002 li
@
423.168 44.069 mo
423.168 38.002 li
@
418.598 41.035 mo
418.598 38.002 li
@
414.029 41.035 mo
414.029 38.002 li
@
409.46 41.035 mo
409.46 38.002 li
@
404.89 44.069 mo
404.89 38.002 li
@
400.321 41.035 mo
400.321 38.002 li
@
395.751 41.035 mo
395.751 38.002 li
@
391.182 41.035 mo
391.182 38.002 li
@
386.613 44.069 mo
386.613 38.002 li
@
532.832 44.069 mo
532.832 38.002 li
@
537.402 41.035 mo
537.402 38.002 li
@
541.971 41.035 mo
541.971 38.002 li
@
386.613 44.069 mo
386.613 38.002 li
@
382.043 41.035 mo
382.043 38.002 li
@
377.474 41.035 mo
377.474 38.002 li
@
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
NLZQYP+Helvetica*1 [0 -16.4247 -16.4247 0 0 0 ]msf399.354 261.457 mo(62.4 GeV 10%-40%)[-9.13214 -9.13213 -4.56606 -9.13214 -4.56606 -12.7784 -9.13214 -10.9551 -4.56607 -9.13213 -9.13213 -14.6014 -5.46931 -9.13213 -9.13213 0 ]yshgrestore
gsave
571 275.926 mo
571 38.002 li
377.474 38.002 li
377.474 275.926 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Helvetica gcheck setglobal} if
1 1940 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>Helvetica AddT42Char 
1 2084 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>Helvetica AddT42Char 
1 2784 18 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/slash 18 def
end
Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/NLZQYP+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /slash /zero /one /two /.notdef /four /five /six /seven /eight 8{/.notdef}rp /A 5{/.notdef}rp /G 3{/.notdef}rp /K 4{/.notdef}rp /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]NLZQYP+Helvetica nfNLZQYP+Helvetica*1 [0 -16.4247 -16.4247 0 0 0 ]msf568.863 277.838 mo(\(GeV/c\))[-5.46933 -12.7784 -9.13211 -10.9551 -4.56607 -8.21236 0 ]yshgrestore
0.75 lw
[3 3 ] 0 dsh
532.832 275.926 mo
532.832 38.529 li
@
526.577 228.513 mo
522.475 228.513 522.475 222.359 526.577 222.359 cv
530.68 222.359 530.68 228.513 526.577 228.513 cv
cp
519.018 198.871 mo
514.916 198.871 514.916 192.718 519.018 192.718 cv
523.12 192.718 523.12 198.871 519.018 198.871 cv
cp
503.102 164.289 mo
498.999 164.289 498.999 158.136 503.102 158.136 cv
507.204 158.136 507.204 164.289 503.102 164.289 cv
cp
481.769 134.648 mo
477.667 134.648 477.667 128.494 481.769 128.494 cv
485.871 128.494 485.871 134.648 481.769 134.648 cv
cp
457.991 100.065 mo
453.888 100.065 453.888 93.912 457.991 93.912 cv
462.093 93.912 462.093 100.065 457.991 100.065 cv
cp
435.161 70.424 mo
431.058 70.424 431.058 64.27 435.161 64.27 cv
439.263 64.27 439.263 70.424 435.161 70.424 cv
cp
f
526.577 227.715 mo
523.539 227.715 523.539 223.157 526.577 223.157 cv
529.616 223.157 529.616 227.715 526.577 227.715 cv
cp
519.018 198.074 mo
515.979 198.074 515.979 193.515 519.018 193.515 cv
522.057 193.515 522.057 198.074 519.018 198.074 cv
cp
503.102 163.492 mo
500.063 163.492 500.063 158.933 503.102 158.933 cv
506.141 158.933 506.141 163.492 503.102 163.492 cv
cp
481.769 133.85 mo
478.73 133.85 478.73 129.292 481.769 129.292 cv
484.808 129.292 484.808 133.85 481.769 133.85 cv
cp
457.991 99.268 mo
454.952 99.268 454.952 94.71 457.991 94.71 cv
461.029 94.71 461.029 99.268 457.991 99.268 cv
cp
435.161 69.626 mo
432.122 69.626 432.122 65.068 435.161 65.068 cv
438.2 65.068 438.2 69.626 435.161 69.626 cv
cp
0.999 0.999 0.999 rgb
f
526.577 227.715 mo
523.539 227.715 523.539 223.157 526.577 223.157 cv
529.616 223.157 529.616 227.715 526.577 227.715 cv
cp
519.018 198.074 mo
515.979 198.074 515.979 193.515 519.018 193.515 cv
522.057 193.515 522.057 198.074 519.018 198.074 cv
cp
503.102 163.492 mo
500.063 163.492 500.063 158.933 503.102 158.933 cv
506.141 158.933 506.141 163.492 503.102 163.492 cv
cp
481.769 133.85 mo
478.73 133.85 478.73 129.292 481.769 129.292 cv
484.808 129.292 484.808 133.85 481.769 133.85 cv
cp
457.991 99.268 mo
454.952 99.268 454.952 94.71 457.991 94.71 cv
461.029 94.71 461.029 99.268 457.991 99.268 cv
cp
435.161 69.626 mo
432.122 69.626 432.122 65.068 435.161 65.068 cv
438.2 65.068 438.2 69.626 435.161 69.626 cv
cp
0.2 0.6 1 rgb
f
513.718 233.795 mo
513.718 226.958 li
506.88 230.377 li
cp
491.633 199.213 mo
491.633 192.376 li
484.795 195.794 li
cp
470.041 169.571 mo
470.041 162.734 li
463.204 166.153 li
cp
450.947 134.989 mo
450.947 128.152 li
444.11 131.571 li
cp
434.629 105.348 mo
434.629 98.51 li
427.792 101.929 li
cp
421.262 70.766 mo
421.262 63.928 li
414.425 67.347 li
cp
0 0 0 rgb
f
512.578 232.656 mo
512.578 228.097 li
508.02 230.377 li
cp
490.493 198.074 mo
490.493 193.515 li
485.935 195.794 li
cp
468.902 168.432 mo
468.902 163.874 li
464.343 166.153 li
cp
449.808 133.85 mo
449.808 129.292 li
445.25 131.571 li
cp
433.49 104.208 mo
433.49 99.65 li
428.932 101.929 li
cp
420.122 69.626 mo
420.122 65.068 li
415.564 67.347 li
cp
0.999 0.999 0.999 rgb
f
[] 0 dsh
512.578 232.656 mo
512.578 228.097 li
508.02 230.377 li
cp
490.493 198.074 mo
490.493 193.515 li
485.935 195.794 li
cp
468.902 168.432 mo
468.902 163.874 li
464.343 166.153 li
cp
449.808 133.85 mo
449.808 129.292 li
445.25 131.571 li
cp
433.49 104.208 mo
433.49 99.65 li
428.932 101.929 li
cp
420.122 69.626 mo
420.122 65.068 li
415.564 67.347 li
cp
1 0.6 0 rgb
@
515.636 227.001 mo
518.078 226.208 li
518.078 223.641 li
519.586 225.717 li
522.027 224.924 li
520.518 227.001 li
522.027 229.077 li
519.586 228.284 li
518.078 230.36 li
518.078 227.794 li
cp
499.555 194.065 mo
501.995 193.272 li
501.995 190.706 li
503.504 192.782 li
505.945 191.989 li
504.436 194.065 li
505.945 196.142 li
503.504 195.349 li
501.995 197.425 li
501.995 194.858 li
cp
479.582 161.13 mo
482.023 160.337 li
482.023 157.77 li
483.531 159.847 li
485.972 159.054 li
484.464 161.13 li
485.972 163.207 li
483.531 162.413 li
482.023 164.49 li
482.023 161.923 li
cp
461.047 128.195 mo
463.488 127.402 li
463.488 124.835 li
464.997 126.912 li
467.438 126.118 li
465.929 128.195 li
467.438 130.271 li
464.997 129.478 li
463.488 131.555 li
463.488 128.988 li
cp
443.811 95.26 mo
446.252 94.466 li
446.252 91.9 li
447.761 93.976 li
450.202 93.183 li
448.693 95.26 li
450.202 97.336 li
447.761 96.543 li
446.252 98.619 li
446.252 96.053 li
cp
429.085 63.971 mo
431.526 63.178 li
431.526 60.611 li
433.034 62.688 li
435.475 61.895 li
433.967 63.971 li
435.475 66.047 li
433.034 65.254 li
431.526 67.331 li
431.526 64.764 li
cp
0 0 0 rgb
f
516.89 227.001 mo
518.465 226.489 li
518.465 224.833 li
519.438 226.173 li
521.013 225.661 li
520.04 227.001 li
521.013 228.34 li
519.438 227.829 li
518.465 229.168 li
518.465 227.512 li
cp
500.808 194.065 mo
502.383 193.554 li
502.383 191.898 li
503.356 193.237 li
504.931 192.726 li
503.958 194.065 li
504.931 195.405 li
503.356 194.893 li
502.383 196.233 li
502.383 194.577 li
cp
480.835 161.13 mo
482.41 160.618 li
482.41 158.963 li
483.383 160.302 li
484.958 159.79 li
483.985 161.13 li
484.958 162.47 li
483.383 161.958 li
482.41 163.298 li
482.41 161.642 li
cp
462.301 128.195 mo
463.875 127.683 li
463.875 126.027 li
464.849 127.367 li
466.423 126.855 li
465.45 128.195 li
466.423 129.534 li
464.849 129.023 li
463.875 130.362 li
463.875 128.707 li
cp
445.065 95.26 mo
446.64 94.748 li
446.64 93.092 li
447.613 94.432 li
449.188 93.92 li
448.214 95.26 li
449.188 96.599 li
447.613 96.088 li
446.64 97.427 li
446.64 95.771 li
cp
430.338 63.971 mo
431.913 63.459 li
431.913 61.804 li
432.886 63.143 li
434.461 62.631 li
433.488 63.971 li
434.461 65.311 li
432.886 64.799 li
431.913 66.139 li
431.913 64.483 li
cp
0.999 0.999 0.999 rgb
f
516.89 227.001 mo
518.465 226.489 li
518.465 224.833 li
519.438 226.173 li
521.013 225.661 li
520.04 227.001 li
521.013 228.34 li
519.438 227.829 li
518.465 229.168 li
518.465 227.512 li
cp
500.808 194.065 mo
502.383 193.554 li
502.383 191.898 li
503.356 193.237 li
504.931 192.726 li
503.958 194.065 li
504.931 195.405 li
503.356 194.893 li
502.383 196.233 li
502.383 194.577 li
cp
480.835 161.13 mo
482.41 160.618 li
482.41 158.963 li
483.383 160.302 li
484.958 159.79 li
483.985 161.13 li
484.958 162.47 li
483.383 161.958 li
482.41 163.298 li
482.41 161.642 li
cp
462.301 128.195 mo
463.875 127.683 li
463.875 126.027 li
464.849 127.367 li
466.423 126.855 li
465.45 128.195 li
466.423 129.534 li
464.849 129.023 li
463.875 130.362 li
463.875 128.707 li
cp
445.065 95.26 mo
446.64 94.748 li
446.64 93.092 li
447.613 94.432 li
449.188 93.92 li
448.214 95.26 li
449.188 96.599 li
447.613 96.088 li
446.64 97.427 li
446.64 95.771 li
cp
430.338 63.971 mo
431.913 63.459 li
431.913 61.804 li
432.886 63.143 li
434.461 62.631 li
433.488 63.971 li
434.461 65.311 li
432.886 64.799 li
431.913 66.139 li
431.913 64.483 li
cp
0 0.8 0 rgb
f
524.449 227.001 mo
520.735 227.001 li
0.999 0.999 0.999 rgb
@
530.146 227.001 mo
533.86 227.001 li
@
530.374 227.001 mo
524.221 223.924 li
524.221 230.077 li
cp
523.06 194.065 mo
516.906 190.989 li
516.906 197.142 li
cp
509.422 161.13 mo
503.268 158.053 li
503.268 164.207 li
cp
490.053 128.195 mo
483.899 125.118 li
483.899 131.272 li
cp
470.404 95.26 mo
464.25 92.183 li
464.25 98.336 li
cp
447.58 63.971 mo
441.427 60.894 li
441.427 67.048 li
cp
0 0 0 rgb
f
525.161 227.001 mo
520.735 227.001 li
0.999 0.999 0.999 rgb
@
529.434 227.001 mo
533.86 227.001 li
@
529.577 227.001 mo
525.018 224.722 li
525.018 229.28 li
cp
522.262 194.065 mo
517.704 191.786 li
517.704 196.344 li
cp
508.624 161.13 mo
504.066 158.851 li
504.066 163.409 li
cp
489.255 128.195 mo
484.697 125.916 li
484.697 130.474 li
cp
469.606 95.26 mo
465.048 92.98 li
465.048 97.539 li
cp
446.783 63.971 mo
442.224 61.692 li
442.224 66.25 li
cp
f
525.161 227.001 mo
520.735 227.001 li
0 0 0 rgb
@
529.434 227.001 mo
533.86 227.001 li
@
529.577 227.001 mo
525.018 224.722 li
525.018 229.28 li
cp
522.262 194.065 mo
517.704 191.786 li
517.704 196.344 li
cp
508.624 161.13 mo
504.066 158.851 li
504.066 163.409 li
cp
489.255 128.195 mo
484.697 125.916 li
484.697 130.474 li
cp
469.606 95.26 mo
465.048 92.98 li
465.048 97.539 li
cp
446.783 63.971 mo
442.224 61.692 li
442.224 66.25 li
cp
0.8 0.8 0.8 rgb
f
496.586 196.206 mo
489.469 196.206 li
0.999 0.999 0.999 rgb
@
502.284 196.206 mo
509.401 196.206 li
@
511.404 161.13 mo
508.702 161.13 li
@
517.102 161.13 mo
519.804 161.13 li
@
485.473 128.195 mo
483.528 128.195 li
@
491.171 128.195 mo
493.116 128.195 li
@
466.85 95.26 mo
464.974 95.26 li
@
472.548 95.26 mo
474.425 95.26 li
@
449.291 63.971 mo
446.908 63.971 li
@
454.989 63.971 mo
457.372 63.971 li
@
499.435 199.283 mo
495.333 199.283 495.333 193.129 499.435 193.129 cv
503.538 193.129 503.538 199.283 499.435 199.283 cv
cp
514.253 164.207 mo
510.151 164.207 510.151 158.053 514.253 158.053 cv
518.355 158.053 518.355 164.207 514.253 164.207 cv
cp
488.322 131.272 mo
484.22 131.272 484.22 125.118 488.322 125.118 cv
492.424 125.118 492.424 131.272 488.322 131.272 cv
cp
469.699 98.336 mo
465.597 98.336 465.597 92.183 469.699 92.183 cv
473.802 92.183 473.802 98.336 469.699 98.336 cv
cp
452.14 67.048 mo
448.037 67.048 448.037 60.894 452.14 60.894 cv
456.242 60.894 456.242 67.048 452.14 67.048 cv
cp
0 0 0 rgb
f
497.299 196.206 mo
489.469 196.206 li
0.999 0.999 0.999 rgb
@
501.572 196.206 mo
509.401 196.206 li
@
512.116 161.13 mo
508.702 161.13 li
@
516.39 161.13 mo
519.804 161.13 li
@
486.185 128.195 mo
483.528 128.195 li
@
490.459 128.195 mo
493.116 128.195 li
@
467.563 95.26 mo
464.974 95.26 li
@
471.836 95.26 mo
474.425 95.26 li
@
450.003 63.971 mo
446.908 63.971 li
@
454.276 63.971 mo
457.372 63.971 li
@
499.435 198.485 mo
496.396 198.485 496.396 193.927 499.435 193.927 cv
502.474 193.927 502.474 198.485 499.435 198.485 cv
cp
514.253 163.409 mo
511.214 163.409 511.214 158.851 514.253 158.851 cv
517.292 158.851 517.292 163.409 514.253 163.409 cv
cp
488.322 130.474 mo
485.283 130.474 485.283 125.916 488.322 125.916 cv
491.361 125.916 491.361 130.474 488.322 130.474 cv
cp
469.699 97.539 mo
466.66 97.539 466.66 92.98 469.699 92.98 cv
472.738 92.98 472.738 97.539 469.699 97.539 cv
cp
452.14 66.25 mo
449.101 66.25 449.101 61.692 452.14 61.692 cv
455.179 61.692 455.179 66.25 452.14 66.25 cv
cp
f
497.299 196.206 mo
489.469 196.206 li
0 0 0 rgb
@
501.572 196.206 mo
509.401 196.206 li
@
512.116 161.13 mo
508.702 161.13 li
@
516.39 161.13 mo
519.804 161.13 li
@
486.185 128.195 mo
483.528 128.195 li
@
490.459 128.195 mo
493.116 128.195 li
@
467.563 95.26 mo
464.974 95.26 li
@
471.836 95.26 mo
474.425 95.26 li
@
450.003 63.971 mo
446.908 63.971 li
@
454.276 63.971 mo
457.372 63.971 li
@
499.435 198.485 mo
496.396 198.485 496.396 193.927 499.435 193.927 cv
502.474 193.927 502.474 198.485 499.435 198.485 cv
cp
514.253 163.409 mo
511.214 163.409 511.214 158.851 514.253 158.851 cv
517.292 158.851 517.292 163.409 514.253 163.409 cv
cp
488.322 130.474 mo
485.283 130.474 485.283 125.916 488.322 125.916 cv
491.361 125.916 491.361 130.474 488.322 130.474 cv
cp
469.699 97.539 mo
466.66 97.539 466.66 92.98 469.699 92.98 cv
472.738 92.98 472.738 97.539 469.699 97.539 cv
cp
452.14 66.25 mo
449.101 66.25 449.101 61.692 452.14 61.692 cv
455.179 61.692 455.179 66.25 452.14 66.25 cv
cp
1 0 0 rgb
f
1.5 lw
[5 5 ] 0 dsh
532.826 274.945 mo
532.81 272.983 li
532.785 271.02 li
532.75 269.058 li
532.705 267.096 li
532.649 265.133 li
532.583 263.171 li
532.505 261.209 li
532.415 259.247 li
532.312 257.284 li
532.195 255.322 li
532.065 253.36 li
531.919 251.397 li
531.757 249.435 li
531.579 247.473 li
531.383 245.511 li
531.169 243.548 li
530.937 241.586 li
530.685 239.624 li
530.413 237.661 li
530.12 235.699 li
529.807 233.737 li
529.472 231.775 li
529.115 229.812 li
528.735 227.85 li
528.333 225.888 li
527.909 223.925 li
527.461 221.963 li
526.99 220.001 li
526.497 218.039 li
525.979 216.076 li
525.439 214.114 li
524.876 212.152 li
524.29 210.19 li
523.681 208.227 li
523.05 206.265 li
522.396 204.303 li
521.72 202.34 li
521.023 200.378 li
520.304 198.416 li
519.564 196.454 li
518.803 194.491 li
518.022 192.529 li
517.221 190.567 li
516.401 188.604 li
515.561 186.642 li
514.703 184.68 li
513.827 182.718 li
512.933 180.755 li
512.021 178.793 li
@
512.021 178.793 mo
511.093 176.831 li
510.148 174.868 li
509.188 172.906 li
508.212 170.944 li
507.22 168.982 li
506.214 167.019 li
505.194 165.057 li
504.16 163.095 li
503.113 161.132 li
502.053 159.17 li
500.98 157.208 li
499.896 155.246 li
498.799 153.283 li
497.691 151.321 li
496.572 149.359 li
495.443 147.396 li
494.304 145.434 li
493.154 143.472 li
491.995 141.51 li
490.827 139.547 li
489.651 137.585 li
488.465 135.623 li
487.272 133.66 li
486.07 131.698 li
484.861 129.736 li
483.645 127.774 li
482.422 125.811 li
481.192 123.849 li
479.955 121.887 li
478.712 119.924 li
477.464 117.962 li
476.209 116 li
474.949 114.038 li
473.684 112.075 li
472.414 110.113 li
471.139 108.151 li
469.859 106.188 li
468.575 104.226 li
467.287 102.264 li
465.994 100.302 li
464.698 98.339 li
463.398 96.377 li
462.095 94.415 li
460.788 92.453 li
459.478 90.49 li
458.165 88.528 li
456.849 86.566 li
455.531 84.603 li
454.209 82.641 li
@
454.209 82.641 mo
452.886 80.679 li
@
454.323 82.81 mo
454.079 82.448 li
453.835 82.085 li
453.59 81.723 li
453.346 81.361 li
453.101 80.999 li
452.857 80.636 li
452.612 80.274 li
452.367 79.912 li
452.123 79.549 li
451.878 79.187 li
451.633 78.825 li
451.388 78.463 li
451.143 78.1 li
450.897 77.738 li
450.652 77.376 li
450.407 77.013 li
450.161 76.651 li
449.916 76.289 li
449.67 75.927 li
449.425 75.564 li
449.179 75.202 li
448.933 74.84 li
448.688 74.477 li
448.442 74.115 li
448.196 73.753 li
447.95 73.391 li
447.704 73.028 li
447.457 72.666 li
447.211 72.304 li
446.965 71.941 li
446.719 71.579 li
446.472 71.217 li
446.226 70.855 li
445.979 70.492 li
445.733 70.13 li
445.486 69.768 li
445.239 69.405 li
444.993 69.043 li
444.746 68.681 li
444.499 68.319 li
444.252 67.956 li
444.005 67.594 li
443.758 67.232 li
443.511 66.869 li
443.264 66.507 li
443.017 66.145 li
442.769 65.783 li
442.522 65.42 li
442.275 65.058 li
@
442.275 65.058 mo
442.027 64.696 li
441.78 64.333 li
441.532 63.971 li
441.285 63.609 li
441.037 63.246 li
440.79 62.884 li
440.542 62.522 li
440.294 62.16 li
440.047 61.797 li
439.799 61.435 li
439.551 61.073 li
439.303 60.71 li
439.055 60.348 li
438.807 59.986 li
438.559 59.624 li
438.311 59.261 li
438.063 58.899 li
437.815 58.537 li
437.567 58.174 li
437.319 57.812 li
437.07 57.45 li
436.822 57.088 li
436.574 56.725 li
436.325 56.363 li
436.077 56.001 li
435.829 55.638 li
435.58 55.276 li
435.332 54.914 li
435.083 54.552 li
434.835 54.189 li
434.586 53.827 li
434.337 53.465 li
434.089 53.102 li
433.84 52.74 li
433.591 52.378 li
433.343 52.016 li
433.094 51.653 li
432.845 51.291 li
432.596 50.929 li
432.347 50.566 li
432.099 50.204 li
431.85 49.842 li
431.601 49.48 li
431.352 49.117 li
431.103 48.755 li
430.854 48.393 li
430.605 48.03 li
430.356 47.668 li
430.107 47.306 li
@
430.107 47.306 mo
429.858 46.944 li
@
[] 0 dsh
532.831 274.945 mo
532.829 272.983 li
532.824 271.02 li
532.818 269.058 li
532.809 267.096 li
532.796 265.133 li
532.78 263.171 li
532.758 261.209 li
532.73 259.247 li
532.696 257.284 li
532.653 255.322 li
532.601 253.36 li
532.538 251.397 li
532.464 249.435 li
532.377 247.473 li
532.276 245.511 li
532.159 243.548 li
532.027 241.586 li
531.877 239.624 li
531.708 237.661 li
531.521 235.699 li
531.313 233.737 li
531.083 231.775 li
530.833 229.812 li
530.559 227.85 li
530.263 225.888 li
529.943 223.925 li
529.599 221.963 li
529.231 220.001 li
528.839 218.039 li
528.421 216.076 li
527.979 214.114 li
527.512 212.152 li
527.02 210.19 li
526.503 208.227 li
525.961 206.265 li
525.394 204.303 li
524.804 202.34 li
524.189 200.378 li
523.55 198.416 li
522.888 196.454 li
522.202 194.491 li
521.494 192.529 li
520.763 190.567 li
520.01 188.604 li
519.236 186.642 li
518.44 184.68 li
517.624 182.718 li
516.788 180.755 li
515.932 178.793 li
0.8 0.8 0.8 rgb
@
515.932 178.793 mo
515.057 176.831 li
514.163 174.868 li
513.251 172.906 li
512.321 170.944 li
511.374 168.982 li
510.411 167.019 li
509.431 165.057 li
508.435 163.095 li
507.424 161.132 li
506.398 159.17 li
505.357 157.208 li
504.303 155.246 li
503.235 153.283 li
502.154 151.321 li
501.061 149.359 li
499.955 147.396 li
498.838 145.434 li
497.71 143.472 li
496.57 141.51 li
495.42 139.547 li
494.259 137.585 li
493.089 135.623 li
491.909 133.66 li
490.721 131.698 li
489.523 129.736 li
488.317 127.774 li
487.103 125.811 li
485.881 123.849 li
484.652 121.887 li
483.415 119.924 li
482.171 117.962 li
480.921 116 li
479.664 114.038 li
478.401 112.075 li
477.133 110.113 li
475.859 108.151 li
474.579 106.188 li
473.294 104.226 li
472.004 102.264 li
470.71 100.302 li
469.411 98.339 li
468.107 96.377 li
466.8 94.415 li
465.488 92.453 li
464.173 90.49 li
462.854 88.528 li
461.532 86.566 li
460.207 84.603 li
458.878 82.641 li
@
458.878 82.641 mo
457.547 80.679 li
@
458.993 82.81 mo
458.747 82.448 li
458.502 82.085 li
458.256 81.723 li
458.01 81.361 li
457.764 80.999 li
457.518 80.636 li
457.272 80.274 li
457.026 79.912 li
456.78 79.549 li
456.533 79.187 li
456.287 78.825 li
456.04 78.463 li
455.793 78.1 li
455.547 77.738 li
455.3 77.376 li
455.053 77.013 li
454.806 76.651 li
454.559 76.289 li
454.311 75.927 li
454.064 75.564 li
453.817 75.202 li
453.569 74.84 li
453.322 74.477 li
453.074 74.115 li
452.827 73.753 li
452.579 73.391 li
452.331 73.028 li
452.083 72.666 li
451.835 72.304 li
451.587 71.941 li
451.339 71.579 li
451.091 71.217 li
450.842 70.855 li
450.594 70.492 li
450.346 70.13 li
450.097 69.768 li
449.849 69.405 li
449.6 69.043 li
449.351 68.681 li
449.103 68.319 li
448.854 67.956 li
448.605 67.594 li
448.356 67.232 li
448.107 66.869 li
447.858 66.507 li
447.609 66.145 li
447.359 65.783 li
447.11 65.42 li
446.861 65.058 li
@
446.861 65.058 mo
446.611 64.696 li
446.362 64.333 li
446.112 63.971 li
445.863 63.609 li
445.613 63.246 li
445.364 62.884 li
445.114 62.522 li
444.864 62.16 li
444.614 61.797 li
444.364 61.435 li
444.114 61.073 li
443.864 60.71 li
443.614 60.348 li
443.364 59.986 li
443.114 59.624 li
442.864 59.261 li
442.614 58.899 li
442.363 58.537 li
442.113 58.174 li
441.863 57.812 li
441.612 57.45 li
441.362 57.088 li
441.111 56.725 li
440.861 56.363 li
440.61 56.001 li
440.359 55.638 li
440.109 55.276 li
439.858 54.914 li
439.607 54.552 li
439.356 54.189 li
439.105 53.827 li
438.854 53.465 li
438.603 53.102 li
438.352 52.74 li
438.101 52.378 li
437.85 52.016 li
437.599 51.653 li
437.348 51.291 li
437.097 50.929 li
436.846 50.566 li
436.595 50.204 li
436.343 49.842 li
436.092 49.48 li
435.841 49.117 li
435.589 48.755 li
435.338 48.393 li
435.086 48.03 li
434.835 47.668 li
434.583 47.306 li
@
434.583 47.306 mo
434.332 46.944 li
@
532.795 274.945 mo
532.706 272.983 li
532.567 271.02 li
532.376 269.058 li
532.136 267.096 li
531.847 265.133 li
531.51 263.171 li
531.126 261.209 li
530.698 259.247 li
530.226 257.284 li
529.713 255.322 li
529.16 253.36 li
528.569 251.397 li
527.942 249.435 li
527.281 247.473 li
526.588 245.511 li
525.864 243.548 li
525.112 241.586 li
524.333 239.624 li
523.528 237.661 li
522.701 235.699 li
521.852 233.737 li
520.982 231.775 li
520.094 229.812 li
519.188 227.85 li
518.265 225.888 li
517.328 223.925 li
516.377 221.963 li
515.412 220.001 li
514.435 218.039 li
513.447 216.076 li
512.449 214.114 li
511.44 212.152 li
510.422 210.19 li
509.395 208.227 li
508.361 206.265 li
507.318 204.303 li
506.268 202.34 li
505.211 200.378 li
504.147 198.416 li
503.076 196.454 li
502 194.491 li
500.918 192.529 li
499.83 190.567 li
498.736 188.604 li
497.637 186.642 li
496.533 184.68 li
495.424 182.718 li
494.31 180.755 li
493.191 178.793 li
0 0.8 0 rgb
@
493.191 178.793 mo
492.067 176.831 li
490.939 174.868 li
489.806 172.906 li
488.669 170.944 li
487.527 168.982 li
486.382 167.019 li
485.231 165.057 li
484.077 163.095 li
482.919 161.132 li
481.757 159.17 li
480.592 157.208 li
479.422 155.246 li
478.249 153.283 li
477.072 151.321 li
475.891 149.359 li
474.707 147.396 li
473.52 145.434 li
472.329 143.472 li
471.135 141.51 li
469.938 139.547 li
468.738 137.585 li
467.535 135.623 li
466.328 133.66 li
465.119 131.698 li
463.907 129.736 li
462.693 127.774 li
461.475 125.811 li
460.255 123.849 li
459.033 121.887 li
457.808 119.924 li
456.581 117.962 li
455.351 116 li
454.119 114.038 li
452.885 112.075 li
451.649 110.113 li
450.411 108.151 li
449.171 106.188 li
447.929 104.226 li
446.685 102.264 li
445.439 100.302 li
444.192 98.339 li
442.943 96.377 li
441.693 94.415 li
440.441 92.453 li
439.187 90.49 li
437.932 88.528 li
436.676 86.566 li
435.419 84.603 li
434.16 82.641 li
@
434.16 82.641 mo
432.9 80.679 li
@
434.269 82.81 mo
434.036 82.448 li
433.803 82.085 li
433.571 81.723 li
433.338 81.361 li
433.106 80.999 li
432.873 80.636 li
432.64 80.274 li
432.407 79.912 li
432.175 79.549 li
431.942 79.187 li
431.709 78.825 li
431.476 78.463 li
431.243 78.1 li
431.01 77.738 li
430.777 77.376 li
430.544 77.013 li
430.311 76.651 li
430.078 76.289 li
429.845 75.927 li
429.611 75.564 li
429.378 75.202 li
429.145 74.84 li
428.912 74.477 li
428.678 74.115 li
428.445 73.753 li
428.212 73.391 li
427.978 73.028 li
427.745 72.666 li
427.511 72.304 li
427.278 71.941 li
427.044 71.579 li
426.811 71.217 li
426.577 70.855 li
426.343 70.492 li
426.11 70.13 li
425.876 69.768 li
425.642 69.405 li
425.409 69.043 li
425.175 68.681 li
424.941 68.319 li
424.707 67.956 li
424.473 67.594 li
424.239 67.232 li
424.006 66.869 li
423.772 66.507 li
423.538 66.145 li
423.304 65.783 li
423.07 65.42 li
422.836 65.058 li
@
422.836 65.058 mo
422.602 64.696 li
422.367 64.333 li
422.133 63.971 li
421.899 63.609 li
421.665 63.246 li
421.431 62.884 li
421.197 62.522 li
420.963 62.16 li
420.728 61.797 li
420.494 61.435 li
420.26 61.073 li
420.025 60.71 li
419.791 60.348 li
419.557 59.986 li
419.322 59.624 li
419.088 59.261 li
418.854 58.899 li
418.619 58.537 li
418.385 58.174 li
418.15 57.812 li
417.916 57.45 li
417.681 57.088 li
417.447 56.725 li
417.212 56.363 li
416.978 56.001 li
416.743 55.638 li
416.508 55.276 li
416.274 54.914 li
416.039 54.552 li
415.805 54.189 li
415.57 53.827 li
415.335 53.465 li
415.101 53.102 li
414.866 52.74 li
414.631 52.378 li
414.396 52.016 li
414.162 51.653 li
413.927 51.291 li
413.692 50.929 li
413.457 50.566 li
413.222 50.204 li
412.988 49.842 li
412.753 49.48 li
412.518 49.117 li
412.283 48.755 li
412.048 48.393 li
411.813 48.03 li
411.578 47.668 li
411.344 47.306 li
@
411.344 47.306 mo
411.109 46.944 li
@
532.821 274.945 mo
532.794 272.983 li
532.751 271.02 li
532.692 269.058 li
532.617 267.096 li
532.525 265.133 li
532.417 263.171 li
532.291 261.209 li
532.148 259.247 li
531.988 257.284 li
531.809 255.322 li
531.611 253.36 li
531.395 251.397 li
531.16 249.435 li
530.904 247.473 li
530.629 245.511 li
530.333 243.548 li
530.017 241.586 li
529.68 239.624 li
529.321 237.661 li
528.941 235.699 li
528.539 233.737 li
528.116 231.775 li
527.67 229.812 li
527.203 227.85 li
526.713 225.888 li
526.201 223.925 li
525.668 221.963 li
525.112 220.001 li
524.535 218.039 li
523.935 216.076 li
523.315 214.114 li
522.673 212.152 li
522.009 210.19 li
521.326 208.227 li
520.621 206.265 li
519.896 204.303 li
519.151 202.34 li
518.387 200.378 li
517.603 198.416 li
516.801 196.454 li
515.979 194.491 li
515.14 192.529 li
514.283 190.567 li
513.409 188.604 li
512.518 186.642 li
511.61 184.68 li
510.686 182.718 li
509.746 180.755 li
508.792 178.793 li
0.2 0.6 1 rgb
@
508.792 178.793 mo
507.822 176.831 li
506.837 174.868 li
505.839 172.906 li
504.827 170.944 li
503.802 168.982 li
502.764 167.019 li
501.713 165.057 li
500.651 163.095 li
499.576 161.132 li
498.491 159.17 li
497.394 157.208 li
496.287 155.246 li
495.169 153.283 li
494.042 151.321 li
492.905 149.359 li
491.758 147.396 li
490.603 145.434 li
489.439 143.472 li
488.267 141.51 li
487.087 139.547 li
485.899 137.585 li
484.704 135.623 li
483.502 133.66 li
482.292 131.698 li
481.076 129.736 li
479.854 127.774 li
478.626 125.811 li
477.391 123.849 li
476.151 121.887 li
474.906 119.924 li
473.655 117.962 li
472.4 116 li
471.139 114.038 li
469.874 112.075 li
468.605 110.113 li
467.331 108.151 li
466.054 106.188 li
464.772 104.226 li
463.487 102.264 li
462.198 100.302 li
460.906 98.339 li
459.611 96.377 li
458.313 94.415 li
457.011 92.453 li
455.707 90.49 li
454.401 88.528 li
453.092 86.566 li
451.78 84.603 li
450.467 82.641 li
@
450.467 82.641 mo
449.151 80.679 li
@
450.58 82.81 mo
450.337 82.448 li
450.094 82.085 li
449.851 81.723 li
449.608 81.361 li
449.365 80.999 li
449.122 80.636 li
448.879 80.274 li
448.636 79.912 li
448.392 79.549 li
448.149 79.187 li
447.906 78.825 li
447.662 78.463 li
447.419 78.1 li
447.175 77.738 li
446.931 77.376 li
446.688 77.013 li
446.444 76.651 li
446.2 76.289 li
445.956 75.927 li
445.712 75.564 li
445.468 75.202 li
445.224 74.84 li
444.98 74.477 li
444.735 74.115 li
444.491 73.753 li
444.247 73.391 li
444.002 73.028 li
443.758 72.666 li
443.513 72.304 li
443.269 71.941 li
443.024 71.579 li
442.779 71.217 li
442.535 70.855 li
442.29 70.492 li
442.045 70.13 li
441.8 69.768 li
441.555 69.405 li
441.31 69.043 li
441.065 68.681 li
440.82 68.319 li
440.575 67.956 li
440.33 67.594 li
440.085 67.232 li
439.84 66.869 li
439.594 66.507 li
439.349 66.145 li
439.104 65.783 li
438.858 65.42 li
438.613 65.058 li
@
438.613 65.058 mo
438.367 64.696 li
438.122 64.333 li
437.876 63.971 li
437.63 63.609 li
437.385 63.246 li
437.139 62.884 li
436.893 62.522 li
436.648 62.16 li
436.402 61.797 li
436.156 61.435 li
435.91 61.073 li
435.664 60.71 li
435.418 60.348 li
435.172 59.986 li
434.926 59.624 li
434.68 59.261 li
434.434 58.899 li
434.188 58.537 li
433.942 58.174 li
433.695 57.812 li
433.449 57.45 li
433.203 57.088 li
432.957 56.725 li
432.71 56.363 li
432.464 56.001 li
432.218 55.638 li
431.971 55.276 li
431.725 54.914 li
431.478 54.552 li
431.232 54.189 li
430.985 53.827 li
430.739 53.465 li
430.492 53.102 li
430.246 52.74 li
429.999 52.378 li
429.752 52.016 li
429.506 51.653 li
429.259 51.291 li
429.012 50.929 li
428.766 50.566 li
428.519 50.204 li
428.272 49.842 li
428.025 49.48 li
427.779 49.117 li
427.532 48.755 li
427.285 48.393 li
427.038 48.03 li
426.791 47.668 li
426.544 47.306 li
@
426.544 47.306 mo
426.297 46.944 li
@
[5 5 ] 0 dsh
532.774 274.945 mo
532.636 272.983 li
532.42 271.02 li
532.126 269.058 li
531.757 267.096 li
531.317 265.133 li
530.808 263.171 li
530.234 261.209 li
529.599 259.247 li
528.907 257.284 li
528.162 255.322 li
527.368 253.36 li
526.53 251.397 li
525.65 249.435 li
524.733 247.473 li
523.783 245.511 li
522.803 243.548 li
521.797 241.586 li
520.767 239.624 li
519.716 237.661 li
518.647 235.699 li
517.563 233.737 li
516.465 231.775 li
515.356 229.812 li
514.237 227.85 li
513.111 225.888 li
511.978 223.925 li
510.84 221.963 li
509.698 220.001 li
508.552 218.039 li
507.405 216.076 li
506.256 214.114 li
505.105 212.152 li
503.954 210.19 li
502.803 208.227 li
501.652 206.265 li
500.501 204.303 li
499.35 202.34 li
498.2 200.378 li
497.051 198.416 li
495.902 196.454 li
494.753 194.491 li
493.606 192.529 li
492.458 190.567 li
491.311 188.604 li
490.164 186.642 li
489.017 184.68 li
487.87 182.718 li
486.723 180.755 li
485.576 178.793 li
1 0.6 0 rgb
@
485.576 178.793 mo
484.429 176.831 li
483.28 174.868 li
482.132 172.906 li
480.982 170.944 li
479.831 168.982 li
478.68 167.019 li
477.527 165.057 li
476.373 163.095 li
475.218 161.132 li
474.061 159.17 li
472.903 157.208 li
471.743 155.246 li
470.582 153.283 li
469.419 151.321 li
468.254 149.359 li
467.087 147.396 li
465.919 145.434 li
464.748 143.472 li
463.576 141.51 li
462.402 139.547 li
461.226 137.585 li
460.048 135.623 li
458.868 133.66 li
457.686 131.698 li
456.503 129.736 li
455.317 127.774 li
454.129 125.811 li
452.94 123.849 li
451.748 121.887 li
450.555 119.924 li
449.36 117.962 li
448.163 116 li
446.964 114.038 li
445.763 112.075 li
444.561 110.113 li
443.357 108.151 li
442.151 106.188 li
440.943 104.226 li
439.734 102.264 li
438.524 100.302 li
437.312 98.339 li
436.098 96.377 li
434.883 94.415 li
433.666 92.453 li
432.448 90.49 li
431.229 88.528 li
430.008 86.566 li
428.786 84.603 li
427.563 82.641 li
@
427.563 82.641 mo
426.339 80.679 li
@
427.669 82.81 mo
427.443 82.448 li
427.217 82.085 li
426.991 81.723 li
426.765 81.361 li
426.539 80.999 li
426.312 80.636 li
426.086 80.274 li
425.86 79.912 li
425.634 79.549 li
425.408 79.187 li
425.181 78.825 li
424.955 78.463 li
424.728 78.1 li
424.502 77.738 li
424.276 77.376 li
424.049 77.013 li
423.823 76.651 li
423.596 76.289 li
423.369 75.927 li
423.143 75.564 li
422.916 75.202 li
422.689 74.84 li
422.463 74.477 li
422.236 74.115 li
422.009 73.753 li
421.782 73.391 li
421.555 73.028 li
421.328 72.666 li
421.101 72.304 li
420.874 71.941 li
420.647 71.579 li
420.42 71.217 li
420.193 70.855 li
419.966 70.492 li
419.739 70.13 li
419.512 69.768 li
419.284 69.405 li
419.057 69.043 li
418.83 68.681 li
418.602 68.319 li
418.375 67.956 li
418.148 67.594 li
417.92 67.232 li
417.693 66.869 li
417.465 66.507 li
417.238 66.145 li
417.01 65.783 li
416.783 65.42 li
416.555 65.058 li
@
416.555 65.058 mo
416.328 64.696 li
416.1 64.333 li
415.872 63.971 li
415.645 63.609 li
415.417 63.246 li
415.189 62.884 li
414.961 62.522 li
414.734 62.16 li
414.506 61.797 li
414.278 61.435 li
414.05 61.073 li
413.822 60.71 li
413.594 60.348 li
413.366 59.986 li
413.138 59.624 li
412.91 59.261 li
412.682 58.899 li
412.454 58.537 li
412.226 58.174 li
411.998 57.812 li
411.77 57.45 li
411.542 57.088 li
411.314 56.725 li
411.085 56.363 li
410.857 56.001 li
410.629 55.638 li
410.401 55.276 li
410.172 54.914 li
409.944 54.552 li
409.716 54.189 li
409.487 53.827 li
409.259 53.465 li
409.031 53.102 li
408.802 52.74 li
408.574 52.378 li
408.345 52.016 li
408.117 51.653 li
407.888 51.291 li
407.66 50.929 li
407.431 50.566 li
407.203 50.204 li
406.974 49.842 li
406.746 49.48 li
406.517 49.117 li
406.288 48.755 li
406.06 48.393 li
405.831 48.03 li
405.602 47.668 li
405.374 47.306 li
@
405.374 47.306 mo
405.145 46.944 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/NLZQYP+Helvetica*1 uf/NLZQYP+Helvetica uf/Helvetica uf/NLZQYQ+Symbol*1 uf/NLZQYQ+Symbol uf/Symbol ufreset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
