%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Fig5.pdf
%%Creator: (Adobe Acrobat 20.6.0)
%%For: yezhenyu
%%CreationDate: 3/17/20, 11:50 AM
%%BoundingBox: -1 0 550 559
%%HiResBoundingBox: 0 0 549.1982 558.1150
%%CropBox: 0 0 549.1982 558.1150
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 776 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2020-03-04T14:34:07Z"
   xmp:CreatorTool="ROOT Version 6.16/00"
   xmp:ModifyDate="2020-03-04T14:34:07Z"
   pdf:Keywords="ROOT"
   pdf:Producer="macOS Version 10.14.6 (Build 18G3020) Quartz PDFContext"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Fig5.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -558.115 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-3.05176e-05 0 mo
-3.05176e-05 558.115 li
549.198 558.115 li
549.198 0 li
cp
clp
1.04102 590.226 mo
567.97 590.226 li
567.97 -12.7292 li
1.04102 -12.7292 li
cp
false sop
0 0 0 0 cmyk
ef
.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
1.04102 590.226 mo
567.97 590.226 li
567.97 -12.7292 li
1.04102 -12.7292 li
cp
@
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
ef
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
@
199.92 198.305 mo
369.545 198.305 li
369.545 8.37384 li
199.92 8.37384 li
cp
ef
199.92 198.305 mo
369.545 198.305 li
369.545 8.37384 li
199.92 8.37384 li
cp
@
.75 lw
199.92 198.305 mo
369.545 198.305 li
369.545 8.37384 li
199.92 8.37384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
199.92 198.305 mo
203.004 198.305 li
206.088 198.305 li
209.172 198.305 li
212.256 198.305 li
215.34 198.305 li
218.424 198.305 li
221.508 198.305 li
224.592 198.305 li
227.677 198.305 li
230.761 198.305 li
233.845 198.305 li
236.929 198.305 li
240.013 198.305 li
243.097 198.305 li
246.181 198.305 li
249.265 198.305 li
252.349 198.305 li
255.433 198.305 li
258.518 198.305 li
261.602 198.305 li
264.686 198.305 li
267.77 198.305 li
270.854 198.305 li
273.938 198.305 li
277.022 198.305 li
280.106 198.305 li
283.19 198.305 li
286.274 198.305 li
289.358 198.305 li
292.443 198.305 li
295.527 198.305 li
298.611 198.305 li
301.695 198.305 li
304.779 198.305 li
307.863 198.305 li
310.947 198.305 li
314.031 198.305 li
317.115 198.305 li
320.199 198.305 li
323.284 198.305 li
326.368 198.305 li
329.452 198.305 li
332.536 198.305 li
335.62 198.305 li
338.704 198.305 li
341.788 198.305 li
344.872 198.305 li
347.956 198.305 li
351.04 198.305 li
354.124 198.305 li
357.209 198.305 li
360.293 198.305 li
363.377 198.305 li
366.461 198.305 li
369.545 198.305 li
1 .978058 .0451667 .0556954 cmyk
@
199.92 198.305 mo
369.545 198.305 li
.75021 .679683 .670222 .90164 cmyk
@
235.387 193.241 mo
235.387 198.305 li
@
243.097 195.773 mo
243.097 198.305 li
@
250.807 195.773 mo
250.807 198.305 li
@
258.518 195.773 mo
258.518 198.305 li
@
266.228 195.773 mo
266.228 198.305 li
@
273.938 193.241 mo
273.938 198.305 li
@
281.648 195.773 mo
281.648 198.305 li
@
289.358 195.773 mo
289.358 198.305 li
@
297.069 195.773 mo
297.069 198.305 li
@
304.779 195.773 mo
304.779 198.305 li
@
312.489 193.241 mo
312.489 198.305 li
@
320.199 195.773 mo
320.199 198.305 li
@
327.91 195.773 mo
327.91 198.305 li
@
335.62 195.773 mo
335.62 198.305 li
@
343.33 195.773 mo
343.33 198.305 li
@
351.04 193.241 mo
351.04 198.305 li
@
235.387 193.241 mo
235.387 198.305 li
@
227.677 195.773 mo
227.677 198.305 li
@
219.966 195.773 mo
219.966 198.305 li
@
212.256 195.773 mo
212.256 198.305 li
@
204.546 195.773 mo
204.546 198.305 li
@
351.04 193.241 mo
351.04 198.305 li
@
358.751 195.773 mo
358.751 198.305 li
@
366.461 195.773 mo
366.461 198.305 li
@
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /JAAAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796600000000000013400000129c
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000586c6f63610000000000000efc
0000002e6d6178700000000000000f2c000000206e616d65000000000000
0f4c00000024707265700000000000000f70000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
000000004e8abc9e5f0f3cf500110800000000005f4d8f0000000000d7c5
a882f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000160512
004202390000023900af0239000004730040047300c40473004004730031
04730034047300420473004d05c7005a05c700a506aa009705c7009c05c7
00b40473005204730038047300480473003d01c7ffda0239001700000036
00360056007a00e8010e019a02460294032803be044e04b0053c0592061c
06e60752081c08c408fe094e000000010000001600920009006b00070002
00100010005d000007e80a1d000400010000000100120001000000000006
001000004f554c5354432b48656c7665746963610000b800532bb800492b
b8003f2bb800352bb8002b2b4118008001a6009001a600a001a600030069
018b0079018b0089018b0099018b00040089018b0099018b00a9018b00b9
018bb2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b4
9e1fd918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a5
0025017a00480028019ab3296c1f60410a01a9007001a9008001a9000300
8001a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe731
2d1fe531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d
671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab2
1f921db80101b21f911db80101b21f751db80201b61f6d29961f6431b801
9ab21f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b808
01400b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d93
1f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b00
25017ab349293896b8017bb348283125b8017a403648289629482725294c
1f252946272729482756c80784075b07410732072b072807260721071b07
1408120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01
abb308060805b801aeb23f1f04bb01ad003f001f01adb708040802080008
14b8ffe0b40000010014b801abb41000000100b801abb606100000010006
b801adb300000100b801ad401f0400000100041000000100100200000100
0200000001000002010802004a00b0018db806008516763f183f123e1139
46443e113946443e113946443e113946443e113946443e11394660443e11
394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a66456523
456023456560234560b08b766818b080622020b16a704565234520b00326
6062636820b003266165b070236544b06a234420b176664565234520b003
266062636820b003266165b066236544b0762344b10066455458b1664065
44b27640764523614459b36242725d456523456023456560234560b08976
6818b080622020b172424565234520b003266062636820b003266165b042
236544b072234420b1625d4565234520b003266062636820b003266165b0
5d236544b0622344b1005d455458b15d406544b262406245236144592b2b
2b2b456953427374b8019a2045694b20b02853b049515a58b020615944b8
01a620456944750000>
[4765 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>JAAAAA+Helvetica AddT42Char 
1 244 4 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>JAAAAA+Helvetica AddT42Char 
1 464 5 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>JAAAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>JAAAAA+Helvetica AddT42Char 
JAAAAA+Helvetica /CharStrings get begin
/period 2 def
/zero 4 def
/one 5 def
end
JAAAAA+Helvetica /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
pop
end
%ADOEndSubsetFont
/SXWSCV+Helvetica /JAAAAA+Helvetica findfont ct_VMDictPut/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [10.9074 0 0 -10.9074 0 0 ]msf228.571 208.639 mo(0.1)[6.0645 3.03226 0 ]xshgrestore
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 540 6 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/two 6 def
end
SXWSCV+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two 205{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [10.9074 0 0 -10.9074 0 0 ]msf266.019 208.639 mo(0.2)[6.06448 3.03226 0 ]xshgrestore
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 820 7 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/three 7 def
end
SXWSCV+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [10.9074 0 0 -10.9074 0 0 ]msf304.888 208.639 mo(0.3)[6.06448 3.03226 0 ]xshgrestore
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 1164 8 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/four 8 def
end
SXWSCV+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four 203{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [10.9074 0 0 -10.9074 0 0 ]msf343.284 208.639 mo(0.4)[6.06448 3.03226 0 ]xshgrestore
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 4152 19 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/g 19 def
end
SXWSCV+Helvetica /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four 50{/.notdef}rp /g 152{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [9.01045 0 0 -9.01045 0 0 ]msf286.402 219.542 mo(g)shgrestore
gsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 2852 15 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/R 15 def
end
SXWSCV+Helvetica /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four 29{/.notdef}rp /R 20{/.notdef}rp /g 152{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [13.2786 0 0 -13.2786 0 0 ]msf277.395 216.223 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
199.92 8.37482 mo
369.545 8.37482 li
@
235.387 13.4398 mo
235.387 8.37482 li
@
243.097 10.9069 mo
243.097 8.37482 li
@
250.807 10.9069 mo
250.807 8.37482 li
@
258.518 10.9069 mo
258.518 8.37482 li
@
266.228 10.9069 mo
266.228 8.37482 li
@
273.938 13.4398 mo
273.938 8.37482 li
@
281.648 10.9069 mo
281.648 8.37482 li
@
289.358 10.9069 mo
289.358 8.37482 li
@
297.069 10.9069 mo
297.069 8.37482 li
@
304.779 10.9069 mo
304.779 8.37482 li
@
312.489 13.4398 mo
312.489 8.37482 li
@
320.199 10.9069 mo
320.199 8.37482 li
@
327.91 10.9069 mo
327.91 8.37482 li
@
335.62 10.9069 mo
335.62 8.37482 li
@
343.33 10.9069 mo
343.33 8.37482 li
@
351.04 13.4398 mo
351.04 8.37482 li
@
235.387 13.4398 mo
235.387 8.37482 li
@
227.677 10.9069 mo
227.677 8.37482 li
@
219.966 10.9069 mo
219.966 8.37482 li
@
212.256 10.9069 mo
212.256 8.37482 li
@
204.546 10.9069 mo
204.546 8.37482 li
@
351.04 13.4398 mo
351.04 8.37482 li
@
358.751 10.9069 mo
358.751 8.37482 li
@
366.461 10.9069 mo
366.461 8.37482 li
@
199.92 198.305 mo
199.92 8.37482 li
@
205.645 171.015 mo
199.92 171.015 li
@
202.782 165.502 mo
199.92 165.502 li
@
202.782 159.988 mo
199.92 159.988 li
@
202.782 154.475 mo
199.92 154.475 li
@
202.782 148.962 mo
199.92 148.962 li
@
205.645 143.449 mo
199.92 143.449 li
@
202.782 137.936 mo
199.92 137.936 li
@
202.782 132.422 mo
199.92 132.422 li
@
202.782 126.909 mo
199.92 126.909 li
@
202.782 121.396 mo
199.92 121.396 li
@
205.645 115.883 mo
199.92 115.883 li
@
202.782 110.369 mo
199.92 110.369 li
@
202.782 104.856 mo
199.92 104.856 li
@
202.782 99.3428 mo
199.92 99.3428 li
@
202.782 93.8298 mo
199.92 93.8298 li
@
205.645 88.3168 mo
199.92 88.3168 li
@
202.782 82.8029 mo
199.92 82.8029 li
@
202.782 77.2899 mo
199.92 77.2899 li
@
202.782 71.7769 mo
199.92 71.7769 li
@
202.782 66.2639 mo
199.92 66.2639 li
@
205.645 60.7498 mo
199.92 60.7498 li
@
202.782 55.2368 mo
199.92 55.2368 li
@
202.782 49.7238 mo
199.92 49.7238 li
@
202.782 44.2108 mo
199.92 44.2108 li
@
202.782 38.6968 mo
199.92 38.6968 li
@
205.645 33.1838 mo
199.92 33.1838 li
@
205.645 171.015 mo
199.92 171.015 li
@
202.782 176.528 mo
199.92 176.528 li
@
202.782 182.041 mo
199.92 182.041 li
@
202.782 187.555 mo
199.92 187.555 li
@
202.782 193.068 mo
199.92 193.068 li
@
205.645 33.1838 mo
199.92 33.1838 li
@
202.782 27.6708 mo
199.92 27.6708 li
@
202.782 22.1578 mo
199.92 22.1578 li
@
202.782 16.6448 mo
199.92 16.6448 li
@
202.782 11.1309 mo
199.92 11.1309 li
@
grestore
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 1320 9 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>SXWSCV+Helvetica AddT42Char 
1 1616 10 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/five 9 def
/six 10 def
end
SXWSCV+Helvetica /Encoding get
dup 53 /five put
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 27{/.notdef}rp /R 20{/.notdef}rp /g 152{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [13.2786 0 0 -13.2786 0 0 ]msf193.968 175.932 mo(1)sh191.597 148.438 mo(2)sh191.597 120.471 mo(3)sh191.597 93.4518 mo(4)sh191.597 65.4848 mo(5)sh191.597 37.5178 mo(6)shSXWSCV+Helvetica*1 [0 -12.3301 -12.3301 0 0 0 ]msf181.169 50.7899 mo(g)shgsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 172 3 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>SXWSCV+Helvetica AddT42Char 
1 3532 17 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/slash 3 def
/d 17 def
end
SXWSCV+Helvetica /Encoding get
dup 47 /slash put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /slash /zero /one /two /three /four /five /six 27{/.notdef}rp /R 17{/.notdef}rp /d 2{/.notdef}rp /g 152{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [0 -18.4951 -18.4951 0 0 0 ]msf176.429 79.2308 mo(/dR)[-5.14164 -10.2833 0 ]yshgrestore
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 3748 18 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>SXWSCV+Helvetica AddT42Char 
1 4488 20 <0002ffdafe50013805bd00030011002fb800532bba0000000100562bb800
0110b80007d0b8000010b80009d000b8000e2fb800112fba000300000056
2b303101233533013e0135113311140706232226270138b4b4fea27931b4
263fb00d1d1f04edd0f93404235c04b6fb37753a620203000000>SXWSCV+Helvetica AddT42Char 
1 4604 21 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/e 18 def
/j 20 def
/t 21 def
end
SXWSCV+Helvetica /Encoding get
dup 101 /e put
dup 106 /j put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [46{/.notdef}rp /period /slash /zero /one /two /three /four /five /six 27{/.notdef}rp /R 17{/.notdef}rp /d /e /.notdef /g 2{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [0 -12.3301 -12.3301 0 0 0 ]msf182.117 92.5038 mo(jet)[-2.73729 -6.85553 0 ]yshgsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if

1 0 1 <> SXWSCV+Helvetica AddT42Char 
1 2680 14 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/space 1 def
/N 14 def
end
SXWSCV+Helvetica /Encoding get
dup 32 /space put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /five /six 23{/.notdef}rp /N 3{/.notdef}rp /R 17{/.notdef}rp /d /e /.notdef /g 2{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [0 -18.4951 -18.4951 0 0 0 ]msf176.429 119.997 mo( dN)[-5.14164 -10.2833 0 ]yshgrestore
SXWSCV+Helvetica*1 [0 -12.3301 -12.3301 0 0 0 ]msf182.117 133.27 mo(jet)[-2.73729 -6.85553 0 ]yshgsave
157.513 198.305 mo
369.544 198.305 li
369.544 -12.7291 li
157.513 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.4951 -18.4951 0 0 0 ]msf176.429 160.763 mo(1/N)[-10.2833 -5.14163 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 198.305 mo
369.545 8.37482 li
@
363.82 171.015 mo
369.545 171.015 li
@
366.683 165.502 mo
369.545 165.502 li
@
366.683 159.988 mo
369.545 159.988 li
@
366.683 154.475 mo
369.545 154.475 li
@
366.683 148.962 mo
369.545 148.962 li
@
363.82 143.449 mo
369.545 143.449 li
@
366.683 137.936 mo
369.545 137.936 li
@
366.683 132.422 mo
369.545 132.422 li
@
366.683 126.909 mo
369.545 126.909 li
@
366.683 121.396 mo
369.545 121.396 li
@
363.82 115.883 mo
369.545 115.883 li
@
366.683 110.369 mo
369.545 110.369 li
@
366.683 104.856 mo
369.545 104.856 li
@
366.683 99.3428 mo
369.545 99.3428 li
@
366.683 93.8298 mo
369.545 93.8298 li
@
363.82 88.3168 mo
369.545 88.3168 li
@
366.683 82.8029 mo
369.545 82.8029 li
@
366.683 77.2899 mo
369.545 77.2899 li
@
366.683 71.7769 mo
369.545 71.7769 li
@
366.683 66.2639 mo
369.545 66.2639 li
@
363.82 60.7498 mo
369.545 60.7498 li
@
366.683 55.2368 mo
369.545 55.2368 li
@
366.683 49.7238 mo
369.545 49.7238 li
@
366.683 44.2108 mo
369.545 44.2108 li
@
366.683 38.6968 mo
369.545 38.6968 li
@
363.82 33.1838 mo
369.545 33.1838 li
@
363.82 171.015 mo
369.545 171.015 li
@
366.683 176.528 mo
369.545 176.528 li
@
366.683 182.041 mo
369.545 182.041 li
@
366.683 187.555 mo
369.545 187.555 li
@
366.683 193.068 mo
369.545 193.068 li
@
363.82 33.1838 mo
369.545 33.1838 li
@
366.683 27.6708 mo
369.545 27.6708 li
@
366.683 22.1578 mo
369.545 22.1578 li
@
366.683 16.6448 mo
369.545 16.6448 li
@
366.683 11.1309 mo
369.545 11.1309 li
@
206.473 181.046 mo
207.325 183.666 li
210.08 183.666 li
207.851 185.286 li
208.702 187.906 li
206.473 186.286 li
204.244 187.906 li
205.096 185.286 li
202.867 183.666 li
205.622 183.666 li
cp
0 .993988 1 0 cmyk
f
225.749 173.605 mo
226.6 176.225 li
229.356 176.225 li
227.127 177.845 li
227.978 180.465 li
225.749 178.845 li
223.52 180.465 li
224.371 177.845 li
222.143 176.225 li
224.898 176.225 li
cp
f
245.025 146.356 mo
245.876 148.976 li
248.631 148.976 li
246.402 150.596 li
247.254 153.216 li
245.025 151.596 li
242.796 153.216 li
243.647 150.596 li
241.418 148.976 li
244.173 148.976 li
cp
f
264.3 113.742 mo
265.152 116.362 li
267.907 116.362 li
265.678 117.982 li
266.529 120.602 li
264.3 118.983 li
262.071 120.602 li
262.923 117.982 li
260.694 116.362 li
263.449 116.362 li
cp
f
283.576 98.3148 mo
284.427 100.935 li
287.182 100.935 li
284.953 102.555 li
285.805 105.175 li
283.576 103.556 li
281.347 105.175 li
282.198 102.555 li
279.969 100.935 li
282.724 100.935 li
cp
f
302.851 85.9888 mo
303.703 88.6088 li
306.458 88.6088 li
304.229 90.2278 li
305.08 92.8488 li
302.851 91.2288 li
300.622 92.8488 li
301.474 90.2278 li
299.245 88.6088 li
302 88.6088 li
cp
f
322.127 85.1168 mo
322.978 87.7379 li
325.733 87.7379 li
323.505 89.3568 li
324.356 91.9768 li
322.127 90.3578 li
319.898 91.9768 li
320.749 89.3568 li
318.52 87.7379 li
321.276 87.7379 li
cp
f
341.403 125.058 mo
342.254 127.678 li
345.009 127.678 li
342.78 129.298 li
343.632 131.918 li
341.403 130.299 li
339.174 131.918 li
340.025 129.298 li
337.796 127.678 li
340.551 127.678 li
cp
f
360.678 192.651 mo
361.53 195.271 li
364.285 195.271 li
362.056 196.891 li
362.907 199.511 li
360.678 197.892 li
358.449 199.511 li
359.301 196.891 li
357.072 195.271 li
359.827 195.271 li
cp
f
206.473 179.25 mo
225.749 175.187 li
245.025 145.631 li
264.3 110.207 li
283.576 99.2668 li
302.851 84.4038 li
322.127 83.1868 li
341.403 121.195 li
360.678 195.653 li
360.678 197.233 li
341.403 136.505 li
322.127 94.6309 li
302.851 95.1569 li
283.576 104.948 li
264.3 124.862 li
245.025 154.665 li
225.749 179.607 li
206.473 190.426 li
0 .241001 .107607 0 cmyk
ef
206.473 178.202 mo
207.963 182.787 li
212.785 182.787 li
208.884 185.621 li
210.374 190.207 li
206.473 187.373 li
202.573 190.207 li
204.063 185.621 li
200.162 182.787 li
204.984 182.787 li
cp
0 .993988 1 0 cmyk
f
225.749 170.761 mo
227.239 175.346 li
232.06 175.346 li
228.16 178.18 li
229.65 182.766 li
225.749 179.932 li
221.848 182.766 li
223.338 178.18 li
219.438 175.346 li
224.259 175.346 li
cp
f
245.025 143.512 mo
246.515 148.097 li
251.336 148.097 li
247.435 150.931 li
248.925 155.517 li
245.025 152.683 li
241.124 155.517 li
242.614 150.931 li
238.713 148.097 li
243.535 148.097 li
cp
f
264.3 110.898 mo
265.79 115.483 li
270.612 115.483 li
266.711 118.318 li
268.201 122.903 li
264.3 120.069 li
260.4 122.903 li
261.889 118.318 li
257.989 115.483 li
262.81 115.483 li
cp
f
283.576 95.4708 mo
285.066 100.056 li
289.887 100.056 li
285.987 102.89 li
287.476 107.476 li
283.576 104.642 li
279.675 107.476 li
281.165 102.89 li
277.264 100.056 li
282.086 100.056 li
cp
f
302.851 83.1439 mo
304.341 87.7299 li
309.163 87.7299 li
305.262 90.5638 li
306.752 95.1498 li
302.851 92.3159 li
298.951 95.1498 li
300.441 90.5638 li
296.54 87.7299 li
301.361 87.7299 li
cp
f
322.127 82.2728 mo
323.617 86.8588 li
328.438 86.8588 li
324.538 89.6928 li
326.028 94.2778 li
322.127 91.4438 li
318.226 94.2778 li
319.716 89.6928 li
315.816 86.8588 li
320.637 86.8588 li
cp
f
341.403 122.214 mo
342.893 126.799 li
347.714 126.799 li
343.813 129.633 li
345.303 134.219 li
341.403 131.385 li
337.502 134.219 li
338.992 129.633 li
335.091 126.799 li
339.913 126.799 li
cp
f
360.678 189.807 mo
362.168 194.393 li
366.99 194.393 li
363.089 197.227 li
364.579 201.812 li
360.678 198.978 li
356.777 201.812 li
358.267 197.227 li
354.367 194.393 li
359.188 194.393 li
cp
f
1.5 lw
206.473 193.463 mo
210.04 190.879 li
213.592 187.963 li
217.611 184.251 li
220.99 180.789 li
224.543 176.814 li
225.749 175.387 li
228.124 172.351 li
231.127 168.072 li
235.886 160.728 li
240.697 153.271 li
243.349 149.427 li
245.025 147.174 li
248.763 142.542 li
264.3 125.401 li
270.531 118.154 li
276.485 111.223 li
280.26 107.138 li
283.576 103.91 li
287.384 100.621 li
291.411 97.5009 li
295.811 94.4669 li
300.514 91.5978 li
302.851 90.2958 li
305.189 88.8289 li
310.367 84.9279 li
313.069 83.1188 li
315.16 82.0948 li
316.788 81.6288 li
318.499 81.5358 li
319.819 81.7908 li
321.063 82.3289 li
322.127 83.0438 li
323.614 84.3759 li
325.153 86.0848 li
326.753 88.2028 li
328.41 90.7468 li
330.107 93.7028 li
331.855 97.1008 li
333.664 100.972 li
335.547 105.358 li
337.626 110.595 li
339.642 116.032 li
341.403 121.047 li
343.238 126.562 li
345.093 132.482 li
346.954 138.771 li
348.803 145.37 li
350.643 152.288 li
352.488 159.577 li
354.32 167.169 li
356.145 175.084 li
357.905 183.056 li
359.7 191.534 li
360.678 196.304 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
206.473 194.353 mo
210.396 192.196 li
214.291 189.689 li
218.301 186.728 li
222.012 183.643 li
225.749 180.201 li
228.804 177.075 li
232.546 172.839 li
237.506 166.746 li
245.025 157.095 li
249.427 151.252 li
260.304 136.16 li
264.3 130.93 li
268.78 125.461 li
283.576 108.554 li
288.811 102.293 li
294.932 94.8878 li
298.525 90.8668 li
301.289 88.0908 li
302.851 86.6808 li
305.956 83.7908 li
310.899 79.0189 li
313.482 76.9118 li
315.345 75.7348 li
317.047 74.9938 li
318.719 74.6439 li
320.078 74.6808 li
321.453 75.0479 li
322.127 75.3598 li
324.049 76.5498 li
325.919 78.0558 li
327.736 79.8738 li
329.497 81.9908 li
331.33 84.5919 li
332.885 87.1348 li
334.516 90.1548 li
336.091 93.4299 li
337.835 97.4918 li
339.259 101.165 li
340.721 105.284 li
341.403 107.332 li
342.9 112.088 li
344.412 117.233 li
345.942 122.794 li
347.489 128.78 li
349.041 135.162 li
350.583 141.88 li
352.153 149.105 li
353.484 155.541 li
354.998 163.213 li
356.515 171.286 li
358.026 179.704 li
359.474 188.143 li
360.678 195.433 li
.75021 .679683 .670222 .90164 cmyk
@
[3 4 1 4 ] 0 dsh
206.473 188.798 mo
210.403 185.003 li
214.304 180.916 li
218.314 176.38 li
222.03 171.874 li
225.749 167.072 li
228.17 163.675 li
230.917 159.479 li
235.486 152.067 li
239.844 145.023 li
242.656 140.766 li
245.025 137.491 li
248.021 133.693 li
251.666 129.383 li
256.028 124.628 li
260.186 120.447 li
264.3 116.599 li
267.457 113.885 li
271.559 110.716 li
276.794 107.07 li
283.576 102.602 li
287.887 99.4958 li
293.255 95.4958 li
296.291 93.5278 li
298.538 92.3499 li
300.453 91.5969 li
302.399 91.1168 li
302.851 91.0529 li
306.71 90.7108 li
309.458 90.7509 li
311.815 91.0828 li
314.203 91.7878 li
316.114 92.6749 li
318.083 93.9398 li
319.672 95.2518 li
321.273 96.8668 li
322.127 97.8558 li
323.665 99.8779 li
325.298 102.344 li
327.039 105.308 li
328.884 108.784 li
330.852 112.83 li
333.039 117.666 li
335.603 123.704 li
338.531 130.938 li
341.403 138.217 li
344.371 145.987 li
346.89 152.91 li
349.499 160.404 li
352.092 168.177 li
354.961 177.157 li
357.41 185.142 li
359.99 193.872 li
360.678 196.258 li
.269902 .816403 0 0 cmyk
@
206.473 178.202 mo
207.963 182.787 li
212.785 182.787 li
208.884 185.621 li
210.374 190.207 li
206.473 187.373 li
202.573 190.207 li
204.063 185.621 li
200.162 182.787 li
204.984 182.787 li
cp
0 .993988 1 0 cmyk
f
225.749 170.761 mo
227.239 175.346 li
232.06 175.346 li
228.16 178.18 li
229.65 182.766 li
225.749 179.932 li
221.848 182.766 li
223.338 178.18 li
219.438 175.346 li
224.259 175.346 li
cp
f
245.025 143.512 mo
246.515 148.097 li
251.336 148.097 li
247.435 150.931 li
248.925 155.517 li
245.025 152.683 li
241.124 155.517 li
242.614 150.931 li
238.713 148.097 li
243.535 148.097 li
cp
f
264.3 110.898 mo
265.79 115.483 li
270.612 115.483 li
266.711 118.318 li
268.201 122.903 li
264.3 120.069 li
260.4 122.903 li
261.889 118.318 li
257.989 115.483 li
262.81 115.483 li
cp
f
283.576 95.4708 mo
285.066 100.056 li
289.887 100.056 li
285.987 102.89 li
287.476 107.476 li
283.576 104.642 li
279.675 107.476 li
281.165 102.89 li
277.264 100.056 li
282.086 100.056 li
cp
f
302.851 83.1439 mo
304.341 87.7299 li
309.163 87.7299 li
305.262 90.5638 li
306.752 95.1498 li
302.851 92.3159 li
298.951 95.1498 li
300.441 90.5638 li
296.54 87.7299 li
301.361 87.7299 li
cp
f
322.127 82.2728 mo
323.617 86.8588 li
328.438 86.8588 li
324.538 89.6928 li
326.028 94.2778 li
322.127 91.4438 li
318.226 94.2778 li
319.716 89.6928 li
315.816 86.8588 li
320.637 86.8588 li
cp
f
341.403 122.214 mo
342.893 126.799 li
347.714 126.799 li
343.813 129.633 li
345.303 134.219 li
341.403 131.385 li
337.502 134.219 li
338.992 129.633 li
335.091 126.799 li
339.913 126.799 li
cp
f
360.678 189.807 mo
362.168 194.393 li
366.99 194.393 li
363.089 197.227 li
364.579 201.812 li
360.678 198.978 li
356.777 201.812 li
358.267 197.227 li
354.367 194.393 li
359.188 194.393 li
cp
f
grestore
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000003886670
676d000000000000044400000b97676c796600000000000015a800002704
686561640000000000000fdc000000366868656100000000000010140000
0024686d74780000000000001038000000e06c6f63610000000000001118
000000726d617870000000000000118c000000206e616d65000000000000
11ac000000287072657000000000000011d4000003d36764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
002a002a002a002a002a002a402a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b2d
2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c20b0032552582359212d2c69b04061b000
8b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b011
2bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458c
b0172344b0177ae5182d2cb002254661658a46b040608b482d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005058b21a401a4523604459b0005258b219401945236044592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442db8002a2c4bb800095058b101018e59b801ff85
b800441db9000900035f5e2db8002b2c2020456944b001602db8002c2cb8
002b2a212db8002d2c2046b003254652582359208a208a49648a20462068
6164b004254620686164525823658a592f20b00053586920b000545821b0
40591b6920b000545821b0406559593a2db8002e2c2046b0042546525823
8a592046206a6164b0042546206a61645258238a592ffd2db8002f2c4b20
b0032650585158b080441bb04044591b21212045b0c05058b0c0441b2159
592db800302c2020456944b001602020457d691844b001602db800312cb8
00302a2db800322c4b20b003265358b0801bb040598a8a20b00326535823
21b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326
53582321b801408a8a1b8a235920b80003265358b0032545b80180505823
21b8018023211bb003254523212321591b2159442db800332c4b53584544
1b2121592db800342c4bb800095058b101018e59b801ff85b800441db900
0900035f5e2db800352c2020456944b001602db800362cb800352a212db8
00372c2046b003254652582359208a208a49648a204620686164b0042546
20686164525823658a592f20b00053586920b000545821b040591b6920b0
00545821b0406559593a2db800382c2046b00425465258238a592046206a
6164b0042546206a61645258238a592ffd2db800392c4b20b00326505851
58b080441bb04044591b21212045b0c05058b0c0441b2159592db8003a2c
2020456944b001602020457d691844b001602db8003b2cb8003a2a2db800
3c2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db8003d2c4b535845441b2121592db8
003e2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b8003f2c2020456944b001602db800402cb8003f2a212db800412c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db800422c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db800432c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db800442c2020456944b0
01602020457d691844b001602db800452cb800442a2db800462c4b20b003
265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db800472c4b535845441b2121592db800482c4bb800
095058b101018e59b801ff85b800441db9000900035f5e2db800492c2020
456944b001602db8004a2cb800492a212db8004b2c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db8
004c2c2046b00425465258238a592046206a6164b0042546206a61645258
238a592ffd2db8004d2c4b20b0032650585158b080441bb04044591b2121
2045b0c05058b0c0441b2159592db8004e2c2020456944b001602020457d
691844b001602db8004f2cb8004e2a2db800502c4b20b003265358b0801b
b040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db800512c4b535845441b2121592db800522c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db800532c2020456944b00160
2db800542cb800532a212db800552c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800562c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800572c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800582c2020456944b001602020457d691844b00160
2db800592cb800582a2db8005a2c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8005b2c4b535845441b2121592db800
5c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
005d2c2020456944b001602db8005e2cb8005d2a212db8005f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800602c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800612c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800622c2020456944b001
602020457d691844b001602db800632cb800622a2db800642c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800652c4b
535845441b2121592d0000010000000100000ee8931e5f0f3cf500110800
00000000a2272e8000000000d7c5a883f7dcfc270b7e0946000100090001
000000000000000100000629fe2900000c01f7dcfcdb0b7e000100000000
00000000000000000000003805c7009a0239000004ac00490239007602aa
002f023900800239ff90047300400473008e047300400473003604730036
0473003604730040047300340473003604ac001704ac004905c7003405c7
005c05c7009c055600a50639005505c7009a023900840473002d06aa0097
055600a305c700a30556005504e3002105c7009c0556002f078d001e0556
002302aa008002aa002f0473003b0473004704e3003f0473002f02aa0015
04e3008702390089023900090473008204e3008704e3004204e3007d031d
00820473004202aa001504e3007d0473001504000021023d006a00000034
0034006c00a400c200e40120018a01be023a02be0324038a040a044a04c4
050c053805c60638068e06c007420776079e07dc086208a8091809b809e8
0a2c0a7e0b5e0bce0c000c340cd80d460da00e340e9a0ee40f180f5c0ff2
1042109810f6114011c61210126412fc136013820000000100000038007a
0009006c00080002001000100066000007e80b9700040001000000010012
0001000000000006001500004a4c50554c432b48656c7665746963612d42
6f6c6400b8005c2bb800522bb800482bb8003e2bb800342bb8002a2bb108
40ba019000145df44009011f04000b1fd819eebe012e000d00e6012e000d
00b0012e400c0d000963833c1f63838348294109014b00370401001f0145
00240401001f0144b224ab1fb8013eb224231fb8013db224231fb80102b2
371d1fb80100400937241ffd37621ffc37b80801401b1ff824931ff72493
1ff6243f1ff524311fd1371d1fd037471fcd41b80801b21fcb2ab80201b2
1fca24b80401400f1fc824811fb537291fb4373b1fb227b80401b21fb141
b80401b61fa437811fa384b80401b21fa22ab80401b21fa124b8019ab21f
a024b8019ab61f9f243f1f9683b80401b21f9527b80401b21f8227b80401
b21f7084b80801b21f6fb3b80801b21f6eb3b802abb61f6d24261f6224b8
0101400b1f5d246c1f5c24391f5441b80125b21f4d27b80401b61f4c27cd
1f4b41b80401b21f4024b8019ab21f3683b80401b21f3524b80201b21f32
24b8019ab61f2c24bb1f2884b80801b21f2241b8040140131f20244c1f1d
24261f2ca0961f2c245e1f412ab801a8b748282a2448279636b801f4b21f
4d27b801f4b21f9527b801f4b21f6e27b801f4b21f6327bd01a700470029
015a00250199b348296fb3b80190b21f83b3b8019ab348283725b803e840
121fb327482784274827362748272527482755b80154402c079707640755
0733072b072907260721071e071b071408120810080e080c080a08080806
0804080208000814b8ffe0402b0000010014061000000100060400000100
0410000001001002000001000200000001000002010802004a00b8060085
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b
2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b65422b2b2b4b5279b35279eb56456523456023456560234560b08b
766818b080622020b1eb794565234520b003266062636820b003266165b0
79236544b0eb234420b152564565234520b003266062636820b003266165
b056236544b0522344b10056455458b156406544b25240524523614459b3
5045484e456523456023456560234560b089766818b080622020b1484545
65234520b003266062636820b003266165b045236544b048234420b1504e
4565234520b003266062636820b003266165b04e236544b0502344b1004e
455458b14e406544b250405045236144592b2b456953420000>
[9989 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> KAAAAA+Helvetica-Bold AddT42Char 
1 576 7 <00020040ffdc042805b4000b00170075405917012707d70f03380d370f37
1338154b0d440f44134f159815b713ba15c613ca150d1700530676007606
040606a606c80f03084017050240110d05830e0b830ea710143014027014
80149014a014b014d014f01407141947184e1076c418d45d71e44ded10ed
003fed3fed31300072715d01720012333212351026232206110012111002
212002111012210163527f7f4f4f7f7f5201e6dfdffeebfeebdfdf011501
cdfef70109fa0106fcfcfefa02edfe7afe99fe99fe7c0184016701670186
0000>KAAAAA+Helvetica-Bold AddT42Char 
1 892 9 <000100400000042105b1002100884061071401041b071c6f1203041d1901
1618660160046206671a97019502981aa6010b001910193419351c041c19
0402041e0f0a4013051ea1210c1e1c04030e07b316731f01020e630f7c1f
a7102101702180219021a021b021d021f02107212347224e1076c418d45d
71e44df4ed393910f4ed111739003ffd3feddd111739015d31305d710071
36373637363736353426232207060721363736213204151407060f010e01
07211521443f3de3c53a59665f822f1b05feeb073c720123e60110603f90
726b4f1b0279fc1f9c8191a28d3d5f715c7a61387ab972d9ffd2a17d5366
514c442dfb000000>KAAAAA+Helvetica-Bold AddT42Char 
1 2584 17 <0002004900b10484038b00030007002c4018032202072206070204900001
001a090219080965216a46182b2b4ee410f65d4d3c103c002ffddefd3130
01112111011121110484fbc5043bfbc5038bfef90107fe2dfef90107>KAAAAA+Helvetica-Bold AddT42Char 
1 3456 22 <00020055ffd905af05e8002200230085404bc808db08fa1af92104290228
2139134b1859159821c619c21df80909130a1222d41f0e2a0f0f12044123
1f0312080a41170923131213120d0322000037231b22ac0f101a2507371b
192425b8017fb321ad79182b2b4ef44ded4e10f64dcdf41139ed11121739
2f3d2f182f003fed3f3f3ced12392ffd10ed11123d2f183130015d005d01
262726232202111016333236372135211123270607062320272611103736
2120001701047b23884c5db2e5f89e9bc617feab0266cc1f59477ab2fedb
bbc3c5c501440119015519fd7803f6973c21fef3fef2fef0e2b391f6fce9
b8692b4bcbcc01620166d8d8fee3d501f2000000>KAAAAA+Helvetica-Bold AddT42Char 
1 5208 32 <0001002f0000053b05c20006007740213204042512050605320101251200
0600060305040100020302080817171a020001b80111b2030506b80111b6
041907657572182b764e10f4184dfd3939fd3939194e456544e618003f3c
3f3c3c3c123905874d2e2b7d104b5158b002c01bb002c459872e182b7d10
4b5158b003c01bb003c45931300121012101210103fb0140fe09feddfe0e
0149014005c2fa3e05c2fba10000>KAAAAA+Helvetica-Bold AddT42Char 
1 6976 40 <0003002fffdc043a045f00060021002200ab4049460887149701990a0406
0109050610051a4b05461049208601850f871f0a03160317131613174808
4c164c17491a5c165c175a1adc01db04e91de720f720104a014610880583
100402b8019540334f0e5f0e6f0e030e0e1b062422210717122c1b0b1603
02220336177b221e600c800c020c1a24021f0e951e1923249821484e182b
2b4ef44dfde44e10f65d4d1139e4ed2f111239003fedcd3f3ced12392f5d
fd313000715d01715d000607212e01233616171617160721161716333237
3637210607062322001110003b0101d06d0e01bb077b5b88da4740130b02
fd1606613b5358371e1701230b5a8cfcd0fec2011fe51403747c6a7175eb
666e61804b8da44229321b3061649f010c012e011b012e000000>KAAAAA+Helvetica-Bold AddT42Char 
1 8832 50 <00020042ffdb04250461002b002c007e404f09100626190d030904210b0b
4b0a490b472144204829d703081d22200c0a04162b04161a2c2c1207042c
280b2c2c0f150a201d164d2207152d074d251a2e0c001d4d0f2d004d2b19
2d2e8721484e182b2b4ef44dedf4ed12394e10f64dedf41139ed11393911
12392f003fed3f3cfdcd10cd11173931305e5d5e015d0116171633323635
342726252627263534363332041721262726232206151417161716171615
140623202635010163091e358f54632828feffb94c4cedd7cc010113fee3
06192f715d4f2a2affaa5554f1fcfefff501fb015c4c203932323019193d
2e45448097d9a3c837203a3a27311617382851527ba2cdd9a8030300>KAAAAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>KAAAAA+Helvetica-Bold AddT42Char 
KAAAAA+Helvetica-Bold /CharStrings get begin
/space 1 def
/zero 7 def
/two 9 def
/equal 17 def
/G 22 def
/V 32 def
/e 40 def
/s 50 def
end
KAAAAA+Helvetica-Bold /Encoding get
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 61 /equal put
dup 71 /G put
dup 86 /V put
dup 101 /e put
dup 115 /s put
pop
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold /KAAAAA+Helvetica-Bold findfont ct_VMDictPut/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /.notdef /two 10{/.notdef}rp /equal 9{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp /e 13{/.notdef}rp /s 140{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf245.636 25.1928 mo( = 200 GeV)[3.03224 6.36992 3.03226 6.06451 6.06451 6.06451 3.03226 8.48593 6.06451 0 ]xsh239.948 25.1928 mo(s)sh1.5 lw
236.155 19.0308 mo
237.577 25.6668 li
@
.75 lw
237.577 25.6668 mo
239 15.7128 li
@
239 15.7128 mo
245.636 15.7128 li
@
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 104 2 <0001004900000484043b000b003a401d0700220601010a03060a0a0d1717
1a0685040922030a8500190c6a46182b4e10f44df43cfd3cf44e456544e6
003f3f12392f3c4dfd3c313013112111211121112111211149019a010701
9afe66fef9019c0105019afe66fefbfe64019c000000>SXWSCW+Helvetica-Bold AddT42Char 
1 216 3 <00010076fea501aa012a000d003b401f00ee0a08040d710528040a0f1717
1a090a035a06700004190e0f70217f3c182b2b4ef43c4dfded39394e4565
44e64d003fedf4113939ed3130173e0137231121111406070e0123765651
06ad01342431358f1bed187065012afefe4494363a3b>SXWSCW+Helvetica-Bold AddT42Char 
1 328 4 <0001002f01b4026d02c2000300214012002203011a05df000100190405d5
217d46182b2b4ee45d10e64d002fed3130132111212f023efdc202c2fef2
>SXWSCW+Helvetica-Bold AddT42Char 
1 388 5 <00010080000001af012a0003002640130128030a0517171a017000190405
70217f3c182b2b4ef44dfd4e456544e6003f4ded31301321112180012ffe
d1012afed6000000>SXWSCW+Helvetica-Bold AddT42Char 
1 456 6 <0001ff90000002b805ef000300594030390139027700760187019702a800
b702c702d701f7010b0102025d120303000002010301000302030a011a05
03190405ba016d00210129b1f0182b2b194ee410f618003f3c3f3c4d0111
123939872e2b7d10c53130015d0133012301cbedfdc3eb05effa11000000
>SXWSCW+Helvetica-Bold AddT42Char 
1 788 8 <0001008e0000030705aa000d0032401e29053905020d01cc09040c0c0bb3
000938200c300c600cb00c040c0f470e1076c418d45de4cced003f3ff4cd
3130005d13353637363736373635331121118e8736563625130bedfedc03
e8c2060c133927412713fa5603e8>SXWSCW+Helvetica-Bold AddT42Char 
1 1404 11 <000200360000042f05a1000a000d008f40450e0c480c480d8f0cdc0c051f
0c0158077a0789079907a80705050d460d830dd60d04110d01040500030c
090d0a01080b0d0a030c0c0d0df512060607060c07040a0df70005b8014c
4009030c0d07050c03b30abb013a0001000901a9b3060f470e4e1076c418
4dd4f43ce4fd3c113939003ff43cfd3c3f393901872e2b047d10c50f0f0f
31300172715d0072710123112111213501211133211101042fa4fee9fdc2
02150140a4fe45fe950138fec80138f90370fc760272fd8e>SXWSCW+Helvetica-Bold AddT42Char 
1 1608 12 <00010036ffda042105970020005e40160e0f0fa1121212130d0ec2130940
17171d12a10f0420b80155401903401d0d113813120d0006831a0fc3006f
0e381aa720224721104e76c418d4e44de4fded10ed11393939e4003feded
3fed12392ffd39f4c401872e2b7d10c53130011e01333236353426232207
060725132115210336373633320415140021222427015211605c6a6f686e
34264322ff0066031ffdaf3442253e59b4010cfefefeffcffef60f01845d
6595716f990d18410c0321f2fec32b0e17f2e7c9fec4decc>SXWSCW+Helvetica-Bold AddT42Char 
1 2440 16 <00010017ffde04b1045e0006006340340304030204221205050603020304
02221201010003000504020301040605000201bb060403bb050b011a0800
190708aa216747182b2b4ee410e619003f184dfd3939fd39391139390111
173c123904872e2b087d10c504872e182b087d10c5313013011109011101
17049afcb70349fb66029e01c0fee9fed7fed6feea01c000>SXWSCW+Helvetica-Bold AddT42Char 
1 2672 18 <00030034000005a805c20002000a000b00dc406b6802012705280a380637
094806680a780a880488069a0395049806aa03a504a806b801b80ac801c8
0ad803d80a150107060602000809090200080a01070502140a0a25120909
02140505251206060207082a010000020a0b04030206090a0305080b0d17
171a0b0a040605b80114b2090302b80114b60a190c657572182b764e10f4
184dfd3939fd39391139194e456544e6182f003f173c4d3f3c3c1239392f
3cfd3c05872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b0
03c01bb003c4591112393912393987103c3c07103c3c3130015d005d0121
0b012101210321032101022f0176b8ab015c020afeb25ffde166febe02ba
022d02440151fa3e012ffed105c2>SXWSCW+Helvetica-Bold AddT42Char 
1 3900 25 <0001002dffdc03de05c200130032401413130f090204410f0908370b1a15
013612191415b80173b3217579182b2b4ef44ded4e10f64ded003fed3f12
392f313001151e0133323736351121111407062120021135015004436e6d
23150134416efee1fee1c4022f22ab8b4c2d6b0407fbfebc6eba012d0104
22000000>SXWSCW+Helvetica-Bold AddT42Char 
1 4432 28 <000200a30000057105c2000a002a0058402a20231b1815052713262a0101
1d002a2902271d081d2022130617220637171b57101a2c00272528192b2c
b8011eb3215256182b2b4ef44dfd3c4e10f64de4c4fdc411123911393900
3f3c3fed12392ffd39111739313001112132373635342726233616171e01
151406071e011d011417161715212627262f012e0123211121112101d001
5d68345c593264dba73a30386a7a6655080c2cfead0e060c0102026388fe
c2fed302d304c2fe74182a7c862e1afd464438885769cb2a29979b636524
391b25311e3e41898d5efdbe05c2>SXWSCW+Helvetica-Bold AddT42Char 
1 4656 29 <00020055ffda050e05ef002e002f00a3406a080f07210726190b190f1721
1726660c650d6922e52d0b29102915281a26273a15381ab915ca15dc15d2
2ceb13eb16f913fa16f92d0f0e00110b22181f25170825220e0b04182ed4
2b18d41c412f140304412b092f18962f11174f0896281a311f3611570036
2e193031b8011eb321ad56182b2b4ef44dedf4ed4e10f64dedf41139ed2f
003fed3f3ceded10ed11173901111239111239391112393130015d005d01
16171633323736353427262f012627263534002132041721262726232206
151417161f011617161514002120003501017b0e294bb66d44814040899c
e6589501200117e9014908fed8086c486b778e462d93fea75584fecbfee6
fee0feb6025101c765325b182e7d4928271e23343d66d9c60106f7eb8538
2560564f271a233d284368c5cafef50107e60428>SXWSCW+Helvetica-Bold AddT42Char 
1 4976 30 <00010021000004cb05c200070038400c01062a070204080917171a00b801
58b2022505b80158400906190809c0217572182b2b4ef44df4fdfd4e4565
44e64d003f3ffd3c3130011121112111211104cbfe47fecafe4505c2fefb
fb4304bd0105>SXWSCW+Helvetica-Bold AddT42Char 
1 6044 35 <00010080fe76027605d00007004140261f03018f0301039f001010050180
0501059f07120917171a0205ba042707190809ba217f46182b2b4ef44ded
fd3c4e456544e64d003fed71723fed7172313013211523113315218001f6
e8e8fe0a05d0d0fa47d1>SXWSCW+Helvetica-Bold AddT42Char 
1 6144 36 <0001002ffe76022505d00007004340271f03018f0301039f041010010180
0101019f07120917171a05022705ba0003190809ba217d88182b2b4ef43c
4dfdfd4e10456544e64d003fed71723fed7172313017331123352111212f
e8e801f6fe0ab905bdccf8a60000>SXWSCW+Helvetica-Bold AddT42Char 
1 6248 37 <0003003bffde0438045f000e0039003a008f404f3b0235367901890104d8
1e0126f3e62ae7230e0d05020005131a2b24232204262e262e2a0d050200
041b0b221b162c3a1f072a0a0b2c320b3a134d004d2e3a352a3e261a3c1a
4d1b2d084d35193b3cbc01190021004801ae00182b2b4ef44dedf4ed4e10
f64de41139cde5e52f003fed3f3f3cfdcd39111217391239390111121739
111217392b3130015d005d010e010f010607061514163332363727363736
35342623220706072136373621321716151114171e011715212e01270607
0623222635343736371302de1b3730405a2742513a5c9b03ad4f223d5d5a
652a1e0afeed0947710113b38b8b02031c1cfeca0d0a033b4d5c7494c19b
55a57002121115090c1017275249416c8fef0a0f1a37433332253f8f5c90
4747c5fe0c344a38280d2a213a25402d35a99bc95a311501d4000000>SXWSCW+Helvetica-Bold AddT42Char 
1 6796 39 <0002003fffde046505c00010001d004f402ce80c010706151d0210030017
241007060a1d240a0b15031a131f061f0327041a1f1a360d191e1f982148
45182b2b4ef44ded4e10f64dfdf4e4111239003fed3f3fed3f1139113912
393130005d00161711211121350e01232200351000331236353427262322
0615141633027a9a300121feeb3d9c74bffefb0101d7b77e653e527d7577
79045c574d0208fa409761580135f201170140fc72b48fc85634bd8c97b5
>SXWSCW+Helvetica-Bold AddT42Char 
1 7624 43 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>SXWSCW+Helvetica-Bold AddT42Char 
1 7728 44 <00020009fe4801af05cb00030013003bb800522bba000d000400552bb800
0d10b80000d0b8000d10b80001dcb8000ad0b8000d10b80015dc00b80010
2fb800132fba0003000000552b303101211121011e013332363511211114
062322262701affee3011dfe5a1814082a2b011d82be0d332604c40107f9
640201293b04adfb4ea59e0201000000>SXWSCW+Helvetica-Bold AddT42Char 
1 7864 45 <000100820000046d05bd000b00f040b240024605d402e502040f080a0955
0589058f088e09c505ca08d907df08dc090b080618062f032f0428052d06
370338064c0348065d0359066a0369067804880497039507a903af04aa06
a807b603b804c603c9041a4b064a07560588048308c405c808d903d904dd
07da080b050909040505060b0b040802070904050706050a02200303cb12
04040909040302040602090a0403060a070a0000061a0d010a27000b200b
300b400b040b190c0d872150e3182b2b4efc5d4dfd3c4e10ee003f3f3c3f
3c12393901111739874d2e2b047d104b51587a59c4001239011139390f87
10083c07103c313001715d00715d13211101210901210107112182011801
630161fe83018cfea8fefb76fee805bdfce6019afe5ffd6401d27bfea900
>SXWSCW+Helvetica-Bold AddT42Char 
1 8164 46 <0002008700000461045f00160017004b402d0501150125013701580b680b
060112100609241716070e040a170536170f021a19110e270f191819be21
5045182b2b4ef44dfdc44e10f64d1139ed2f003f3c3f3ced3f3939313001
5d001615112111342726232207061511211121153637363327038ad7fedc
172a7691361cfee401133731588769045cb1cdfd220297562e547b4165fd
b204409f542542030000>SXWSCW+Helvetica-Bold AddT42Char 
1 8496 48 <0002007dfe53049a045a000d0020004a40291713080a1c1a022420071a06
0a24130b190e080d180d36101a22061f1b1f1827191921229821504e182b
2b4ef44dfdf4e44e10f64ded111239003f3fed3f3fed1139113912393130
002623220706151417163332363512001110002322272627112111211536
373633037473819b3a1e653c52777d1d0109fefdcc82562f2dfee601112e
345f83029fc2934e78be4d2db8990239fee6feeffee0fed2412445fdc805
efa1472949000000>SXWSCW+Helvetica-Bold AddT42Char 
1 9100 51 <00010015ffea027805680016004ab6102c0f1f0c2c11ba01710004015c40
1607005c0601061817171a0f06f4040927009203151718b8010eb3216066
182b2bd43ce4fd3cf43c4e456544ee4d003f3cfd3ced3ffdf4e431301335
3311211133152311141633323637150706272635111598011ab1b122570d
1d0e87ca4a30036dcb0130fed0cbfdc043210101d505074d3166029f>SXWSCW+Helvetica-Bold AddT42Char 
1 9920 55 <0001006a0000017105d00003002540130300020a0517171a012202190405
cd216c3c182b2b4ef44dfd4e456544e6003f3f3130011121110171fef905
d0fa3005d0000000>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/plus 2 def
/comma 3 def
/hyphen 4 def
/period 5 def
/slash 6 def
/one 8 def
/four 11 def
/five 12 def
/less 16 def
/A 18 def
/J 25 def
/R 28 def
/S 29 def
/T 30 def
/bracketleft 35 def
/bracketright 36 def
/a 37 def
/d 39 def
/i 43 def
/j 44 def
/k 45 def
/n 46 def
/p 48 def
/t 51 def
/bar 55 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 52 /four put
dup 53 /five put
dup 60 /less put
dup 65 /A put
dup 74 /J put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /.notdef /four /five 6{/.notdef}rp /less /equal 3{/.notdef}rp /A 5{/.notdef}rp /G 2{/.notdef}rp /J 7{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i /j /k 2{/.notdef}rp /n /.notdef /p 2{/.notdef}rp /s /t 7{/.notdef}rp /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf210.084 25.1928 mo(p+p )[6.66434 6.36992 6.66434 0 ]xsh320.057 65.9588 mo(])sh%ADOBeginSubsetFont: LAAAAA+Helvetica-BoldOblique Initial
ct_T42Dict begin
-1 -0.48 1.586 1.172
 256 array 0 1 255 {1 index exch /.notdef put} for  /LAAAAA+Helvetica-BoldOblique
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000001e6670
676d00000000000000dc00000173676c796600000000000003a400000164
686561640000000000000250000000366868656100000000000002880000
0024686d747800000000000002ac000000086c6f636100000000000002b4
000000066d61787000000000000002bc000000206e616d65000000000000
02dc0000003070726570000000000000030c000000966764697200000000
0000000000000000002a00fe0098012a013300e7011a00000029fe4e000c
0442002305c2002d0000b800002c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db800012c2020456944b001602db800022cb800
012a212db800032c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800042c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800052c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800062c2020456944b001602020457d691844b001602db800072cb800
062a2db800082c4b20b003265358b0401bb000598a8a20b0032653582321
b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653
582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920
b80003265358b0032545b8018050582321b8018023211bb0032545232123
21591b2159442db800092c4b535845441b2121592d000001000000010000
f35b1dc65f0f3cf50019080000000000a2272e8000000000d7c5a887f7fe
fc270cb70967000300090001000000000000000100000629fe2900000c01
f7fefcab0cb7080001b3000000000000000000000000000205c7009a0473
00810000004600b200000001000000020079000900690007000100000000
000a000002000192000400010000000100120001000000000006001c0000
5244534852462b48656c7665746963612d426f6c644f626c697175650000
b800002b00ba0001000300022b01ba0004000300022b01bf000400250021
001a0013000c000000082bbf00050031002800200017000c000000082bbf
000600280021001a0013000c000000082b00bf0001002d0021001a001300
0c000000082bbf0002004b003d003000220015000000082bbf0003002600
21001a0013000c000000082b00ba0007000400072bb8000020457d691844
000000>
[357 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 140 1 <00010081ffda04e2045c001d006f00b800004558b8001a2f1bb9001a000b
3e59b800004558b800142f1bb9001400073e59b8001a10b900000003f4b8
001a10b900040001f4410700080004001800040028000400035db8001410
b9000c0001f441070007000c0017000c0027000c00035db8001410b9000f
0003f4303101362726232207060706171633323637210607062120023712
003332160703a40517226590532c1b190c168d646b1b0123256daefef9fe
f9b5353b0155f1cdde1a02bb3d31428f4c7e7849886c568274bb0138f901
190138b8e900>LAAAAA+Helvetica-BoldOblique AddT42Char 
1 0 0 <0002009a0000053d05c2000300070065b800082fb800042fb8000810b800
00d0b800002fb8000410b900030005f4b8000010b900070005f4b8000310
b80009dc00b800004558b800012f1bb90001000d3e59b800004558b80000
2f1bb9000000073e59b900040002f4b8000110b900050002f43031331121
11271121119a04a3b8fccd05c2fa3eb80452fbae>LAAAAA+Helvetica-BoldOblique AddT42Char 
LAAAAA+Helvetica-BoldOblique /CharStrings get begin
/c 1 def
end
LAAAAA+Helvetica-BoldOblique /Encoding get
dup 99 /c put
pop
end
%ADOEndSubsetFont
/SXWSCX+Helvetica-BoldOblique /LAAAAA+Helvetica-BoldOblique findfont ct_VMDictPut/SXWSCX+Helvetica-BoldOblique*1 [99{/.notdef}rp /c 156{/.notdef}rp]SXWSCX+Helvetica-BoldOblique nfSXWSCX+Helvetica-BoldOblique*1 [10.9074 0 0 -10.9074 0 0 ]msf313.421 65.9588 mo(c)shSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf257.012 65.9588 mo( < 20 [GeV/)[3.03223 6.36993 3.03226 6.06451 6.06451 3.03226 3.63208 8.48596 6.06451 7.2753 0 ]xshSXWSCW+Helvetica-Bold*1 [7.58774 0 0 -7.58774 0 0 ]msf241.37 72.1208 mo(T,jet)[4.63605 2.10939 2.10939 4.21878 0 ]xshSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf210.084 65.9588 mo(15 < p)[6.0645 6.06451 3.03226 6.36992 3.03226 0 ]xsh244.214 48.4198 mo( R = 0.4 Jets)[3.03224 7.87515 3.03224 6.36993 3.03226 6.06451 3.03226 6.06448 3.03226 6.06451 6.06451 3.63208 0 ]xshSXWSCW+Helvetica-Bold*1 [7.58774 0 0 -7.58774 0 0 ]msf239.474 52.2119 mo(T)shSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf210.084 48.4198 mo(anti-k)[6.0645 6.66434 3.6321 3.03226 3.63208 0 ]xsh227.623 86.3419 mo(|+R < 1.0)[3.05405 6.36992 7.87515 3.03226 6.36992 3.03226 6.06448 3.03226 0 ]xshSXWSCW+Helvetica-Bold*1 [7.58774 0 0 -7.58774 0 0 ]msf218.617 80.6528 mo(jet)[2.10939 4.21878 0 ]xsh%ADOBeginSubsetFont: NAAAAA+Symbol Initial
ct_T42Dict begin
-0.164 -0.297 1.094 0.824
 256 array 0 1 255 {1 index exch /.notdef put} for  /NAAAAA+Symbol
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000023c6670
676d00000000000002f800000200676c79660000000000000e9c000001ec
6865616400000000000004f8000000366868656100000000000005300000
0024686d747800000000000005540000000c6c6f63610000000000000560
000000086d6178700000000000000568000000206e616d65000000000000
0588000000207072657000000000000005a8000008f36764697200000000
0000000000000000ee00cd003b00870089023f005600c1005e00ec01b200
93018b002d018900ee003b00ae00b200c700b20037002d006000a603c100
fc00d300b800d3005c02cb00c100660031001902c1004e005400b2009c00
02021d027500c1009601c1000e023f02ac019e009c027f01a0005a001f00
2704c100f4005800b4036d003300a8025e006a04850200077300a2027500
100173005e0042024e0202099800f604370046055c00bc00b000a6006d03
e7025e074400f80175006800dd00e1003500370262008d0062028900be00
d301b601d701e3015202cf00c301fc01cd01480548054805660500001700
ee00c105b6001b027100b60000001b003f00040348054805480548050000
1f0029004e0029004e0066009301cb059e018b005001ee00ee0031009a00
91004e009a004805b000310098032d006d033300e9004a004a0029009803
9803330083054a00c3008f005200d3055a009c0175007d06600098039803
b603b201330098038305c70198039803980300001200e5011d0639002104
27025e068700e900b0053d02d70277008300f6028305b401df008d05a602
750012019c05830262015e0042024e024e0052058b008d051400f6042100
8d055c002d001f00f4055200ba012d021000a603aa0175006800dd00e100
c905e7020c0246066400ec05ee01f8012f062506b201f80500028300c101
35063d00fc013306be0139060e06680083006200be00857bff7f82003000
002a0029003f004e005a0077008b00870031007500bc00dd0000001dfe39
000003df00020548001e4007060504030201002c2010b002254964b04051
5820c859212d2cb002254964b040515820c859212d2c20100720b00050b0
0d7920b8ffff5058041b0559b0051cb0032508b0042523e120b00050b00d
7920b8ffff5058041b0559b0051cb0032508e12d2c4b505820b801074544
59212d2cb002254560442d2c4b5358b00225b0022545445921212d2c4544
2db800072c4bb800065058b101018e59b801ff85b800441db9000600035f
5e2db800082c2020456944b001602db800092cb800082a212db8000a2c20
46b003254652582359208a208a49648a204620686164b004254620686164
525823658a592f20b00053586920b000545821b040591b6920b000545821
b0406559593a2db8000b2c2046b00425465258238a592046206a6164b004
2546206a61645258238a592ffd2db8000c2c4b20b0032650585158b08044
1bb04044591b21212045b0c05058b0c0441b2159592db8000d2c20204569
44b001602020457d691844b001602db8000e2cb8000d2a2db8000f2c4b20
b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920
b0032653582321b800c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
102c4b535845441b2121592d000100000001000030da8a4a5f0f3cf50111
080000000000a1cd888000000000d560bffdfeaafd9c08c0069e00000006
000100000000000000010000059cfd9c00000856feaafbdc088100010000
000000000000000000000000000304cd00660464008904d3001200000022
00a000f6000100000003009a0006000000000002001000400011000007e8
08f3000100010000000100120001000000000006000d00004754534d415a
2b53796d626f6c00b800072b01ba0007010f00092b01bf01110054004900
39002900190000000f2bbf011200e600d000a2005e00450000000f2bbf01
13006100490039002900190000000f2bbf0114003c002e0024001a001000
00000f2bbf01150033002e0024001a00100000000f2b00bf010b011300d0
00a2007d00450000000f2bbf010c00b300930072005e002a0000000f2bbf
010d0091006f0056003e002a0000000f2bbf010e007e006f0056003e002a
0000000f2bbf010f005f00490039002900190000000f2bbf011000520049
0039002900190000000f2b00ba01160004000e2bb8010a20457d69184441
ff0280010500fe0003010400fe00030103007d0003010200fe0003010100
fe0003010000fe000300ff00fe000300fe00fe000300fd00fe000300fc00
fe000300fb00fe000300fa00fe000300f800fe000300f700fe000300f600
fe000300f500fe000300f400fe000300f300fe000300f200fe000300f100
fe000300f000fe000300ef00fe000300ee00fe000300ed00fe000300ec00
fe000300eb0000000300ea00fe000300e900e80064000500e900fe000300
e80064000300e700fe000300e600fe000300e500fe000300e400fe000300
e300fe000300e200fe000300e100fe000300df00fe000300de00fe000300
dc00fe000300db00fe000300da00fe000300d900fe000300d800fe000300
d700fe000300d60084001d000500d60023000300d200fe000300d2002300
0400d100fe000300d000fe000300d00023000400cf00fe000300ce00fe00
0300cc00fe000300cb00c8000300ca00fe000300c900fe000300c800fe00
0300c700fe000300c60064000300c500fe000300c400fe000300c300fe00
0300c100fe000300bf00fe000300be00fe000300bd00fe000300bc00fe00
0300bb00fe000300ba00b9004f000500ba00fe000300baffd0000400b900
4f000300b800b7000e000500b80016000300b80080000400b700b6000600
0500b7000e000300b70040000400b60006000300b50032000300b4008200
0341ff00b300a00033000500b3005c000300b30040000400b200fe000300
b10064000300b000af00ba000500b000fe000300af00ae0076000500af00
ba000300af0080000400ae00a00033000500ae0076000300ae0040000400
ab004b000300aa00fe000300a900fe000300a800fe000300a70064000300
a6003a000300a50064000300a400fe000300a3005c000300a20064000300
a100a00033000500a1003f000300a10040000400a000330003009f003a00
03009e00410003009d00d20003009c00fe0003009b004b0003009a00fe00
03009900fe00030098007d0003009700380003009600fe0003009500fe00
030094003a00030093007d00030092007d0003009100640003009000fe00
03008f00fa0003008e003a0003008d007d0003008c007d0003008b00c800
03008a00fe0003008900fe00030088002800030088fff00004008700fe00
03008600fe000300850084001d00050085003e00030084001d0003008300
8200330005008300fe00030083ffd000040082003300030081008000dc00
05008100fe0003008100c000040080007f008c0005008000dc0003008000
800004007f007e003c0005007f008c0003007f00400004007e003c000300
7d00fe0003007c00fe0003007b007a003c0005007b00fe0003007bffd000
04007a003c0003007900fe0003007800fe0003007700fe00030076006400
03007541ff00fe00030073007200450005007300fe00030073ffd0000400
72004500030071007000ba0005007100fe00030070006f00760005007000
ba0003007000800004006f006e00260005006f00760003006f0040000400
6e00260003006b00fe0003006800fe0003006700fe0003006500fe000300
6300fe0003005f00fe0003005e00fe0003005d00fe0003005c00fe000300
5b005a00640005005b00fe0003005a00640003005900fe0003005800fe00
03005700fe0003005600fe0003005500fe0003005400fe00030053007d00
03005200fe0003005000fe0003004f00fe0003004e00fe0003004d00fe00
03004c00fe0003004b00fe00030048ffe00004004700640003004600fe00
03004400230004004300fe0003004200fe0003004100fe00030040002600
03003f00fe0003003e00fe0003003d00fe0003003c00fe0003003b00fe00
03003a00fe0003003900430003003800fe0003003700fe0003003400fe00
03003300fe0003003200fe0003003100340003003000fe0003002f00fe00
03002e00fe0003002d00fe0003002c00480003002b00fe0003002a00fe00
03002900fe000300280027003a0005002800fe00030027003a0003002600
fe0003002500fe00030024000f00030023001b0003002200960003002100
fe0003002000550003001f003a0003001e00fe0003001d003a0003001c00
3a0003001b417600640003001a00640003001900480003001800fe000300
1700fe0003001600fe0003001500fe000300150010000400140011002500
05001400fe000300130012004b0005001300960003001200110025000500
12004b0003001100250003001000fe0003001000100004000f00fa000300
0e00fe0003000d00fe0003000c00fe0003000b00fe0003000a00fe000300
0900fe0003000800fe0003000700350003000600ce0003000500fe000300
0400fe0003000300fe00030002001d000300020010000400010064000300
60001b0060001d0080000d0090000d00a0000d00b0000d00c0000d000700
01014c858d01732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1d0000>
[493 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 320 2 <00010012fe4e042703ac0022004340231b2101070408100a110d04a7111e
18b000b1081215101b0907002c211015072c21092310d4c4ecd4c410ee11
123911123931002fe5f63cc6ee3211393912173930011134262322021511
231134262322061d01232e01353436333216173e01333216151103683f50
7fa6c02a2c3031290101655c6e6e0132ac849481fe4e04108d67feb8fefe
f402a05c5654521d081211757db5babdb2c7edfc5600>NAAAAA+Symbol AddT42Char 
1 0 0 <00020066fe96046605a400030007001740090400060108050204002fccdc
cc310010d4ccd4cc301311211125211121660400fc73031bfce5fe96070e
f8f2720629000000>NAAAAA+Symbol AddT42Char 
NAAAAA+Symbol /CharStrings get begin
/eta 2 def
end
NAAAAA+Symbol /Encoding get
dup 33 /eta put
pop
end
%ADOEndSubsetFont
/SXWSCY+Symbol /NAAAAA+Symbol findfont ct_VMDictPut/SXWSCY+Symbol*1 [33{/.notdef}rp /eta 222{/.notdef}rp]SXWSCY+Symbol nfSXWSCY+Symbol*1 [10.9074 0 0 -10.9074 0 0 ]msf212.454 86.3419 mo(!)shSXWSCW+Helvetica-Bold*1 [10.9074 0 0 -10.9074 0 0 ]msf210.084 86.3419 mo(|)shSXWSCW+Helvetica-Bold*1 [11.8559 0 0 -11.8559 0 0 ]msf278.817 158.867 mo(STAR data)[7.90796 7.24387 8.55997 8.55997 3.29593 7.24387 6.59189 3.94791 0 ]xsh269.095 146.824 mo
270.585 151.41 li
275.406 151.41 li
271.506 154.244 li
272.996 158.83 li
269.095 155.995 li
265.194 158.83 li
266.684 154.244 li
262.784 151.41 li
267.605 151.41 li
cp
0 .993988 1 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 5072 31 <0002009cffda053d05c2001500160033401b160c0102064111091616150a
370d1a18023715191718c0215279182b2b4ef44ded4e10f64ded12392f00
3fed3f3c3c31301321111417163332373635112111140706212027263501
9c01392438bcbb382401394988fe81fe818949025105c2fc7698467c7c46
98038afc76eb83f0f083eb038a000000>SXWSCW+Helvetica-Bold AddT42Char 
1 6576 38 <00020047ffda0434045f001d001e006e40459916a81602871c0149155812
6812780a7912b815c713c81508180206041dd204241e1a07160e0a0c10b7
0c24140b1e10360f1f00361e171d1a20083617191f208721484e182b2b4e
f44ded4e10f64d1139fdf4ed2f003feded113939393f3ceded1139393931
30015d71005d012627262322070615141716333236372106070621200235
1000333204170103100821306590351c1c338d64540901230a5486fef9fe
f9f80112f1cd010518fe1b02bb3d31428f4c7e7849886c568274bb0138f9
01190138b8e901a40000>SXWSCW+Helvetica-Bold AddT42Char 
1 8684 49 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>SXWSCW+Helvetica-Bold AddT42Char 
1 9416 53 <00020015fe470450045f0013001400d94070270a560a660a950aa40ad30a
06050a0106061c07110d2d07200d3d07310d4b075d07580b680b7707790d
0d170f360d8709880b980bb80b0614140c080d02200c0c27120b0b0a0607
021f0808271209090a0607020d0a150c0b0908060709001f022c131f100f
14071617171a0e0d0b0cb8010cb30607090ab8010c400c13920819651516
a9216066182b2b764ef44de418fc393939fc393939194e456544e618003f
3f4de4fde43f3f3c3c3c12393911123901872e2b057d104b52787ac53387
2e182b7d104b52787ac5011112392f3130015d7100715d1f011636373e01
2701211b01210102062322262701b1242a4c1a192b04fe70013deee1012f
fe8a6c7ebd262e2e0182d102020a12116c0c0472fcdc0324fbd0feca9501
03061400>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/U 31 def
/c 38 def
/r 49 def
/y 53 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 85 /U put
dup 99 /c put
dup 114 /r put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /.notdef /four /five 6{/.notdef}rp /less /equal 3{/.notdef}rp /A 5{/.notdef}rp /G 2{/.notdef}rp /J 7{/.notdef}rp /R /S /T /U /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i /j /k 2{/.notdef}rp /n /.notdef /p /.notdef /r /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [11.8559 0 0 -11.8559 0 0 ]msf278.817 183.042 mo(Sys. Uncert.)[7.90796 6.59189 6.59186 3.29596 3.29593 8.55997 7.24387 6.59186 6.59189 4.61203 3.94794 0 ]xshgsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
262.23 186.224 mo
275.96 186.224 li
275.96 169.235 li
262.23 169.235 li
0 .241001 .107607 0 cmyk
ef
262.23 169.235 mo
275.96 169.235 li
0 .993988 1 0 cmyk
@
262.23 186.224 mo
275.96 186.224 li
@
275.96 186.224 mo
275.96 169.235 li
@
262.23 186.224 mo
262.23 169.235 li
@
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
0 0 0 0 cmyk
ef
.4 lw
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
@
369.545 198.305 mo
539.624 198.305 li
539.624 8.37384 li
369.545 8.37384 li
cp
ef
369.545 198.305 mo
539.624 198.305 li
539.624 8.37384 li
369.545 8.37384 li
cp
@
.75 lw
369.545 198.305 mo
539.624 198.305 li
539.624 8.37384 li
369.545 8.37384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
369.545 198.305 mo
372.637 198.305 li
375.73 198.305 li
378.822 198.305 li
381.914 198.305 li
385.007 198.305 li
388.099 198.305 li
391.191 198.305 li
394.284 198.305 li
397.376 198.305 li
400.468 198.305 li
403.561 198.305 li
406.653 198.305 li
409.745 198.305 li
412.838 198.305 li
415.93 198.305 li
419.022 198.305 li
422.115 198.305 li
425.207 198.305 li
428.299 198.305 li
431.392 198.305 li
434.484 198.305 li
437.576 198.305 li
440.669 198.305 li
443.761 198.305 li
446.853 198.305 li
449.946 198.305 li
453.038 198.305 li
456.13 198.305 li
459.223 198.305 li
462.315 198.305 li
465.407 198.305 li
468.5 198.305 li
471.592 198.305 li
474.685 198.305 li
477.777 198.305 li
480.869 198.305 li
483.962 198.305 li
487.054 198.305 li
490.146 198.305 li
493.239 198.305 li
496.331 198.305 li
499.423 198.305 li
502.516 198.305 li
505.608 198.305 li
508.7 198.305 li
511.793 198.305 li
514.885 198.305 li
517.977 198.305 li
521.07 198.305 li
524.162 198.305 li
527.254 198.305 li
530.347 198.305 li
533.439 198.305 li
536.531 198.305 li
539.624 198.305 li
1 .978058 .0451667 .0556954 cmyk
@
369.545 198.305 mo
539.624 198.305 li
.75021 .679683 .670222 .90164 cmyk
@
405.107 191.974 mo
405.107 198.305 li
@
412.838 195.14 mo
412.838 198.305 li
@
420.569 195.14 mo
420.569 198.305 li
@
428.299 195.14 mo
428.299 198.305 li
@
436.03 195.14 mo
436.03 198.305 li
@
443.761 191.974 mo
443.761 198.305 li
@
451.492 195.14 mo
451.492 198.305 li
@
459.223 195.14 mo
459.223 198.305 li
@
466.954 195.14 mo
466.954 198.305 li
@
474.685 195.14 mo
474.685 198.305 li
@
482.415 191.974 mo
482.415 198.305 li
@
490.146 195.14 mo
490.146 198.305 li
@
497.877 195.14 mo
497.877 198.305 li
@
505.608 195.14 mo
505.608 198.305 li
@
513.339 195.14 mo
513.339 198.305 li
@
521.07 191.974 mo
521.07 198.305 li
@
405.107 191.974 mo
405.107 198.305 li
@
397.376 195.14 mo
397.376 198.305 li
@
389.645 195.14 mo
389.645 198.305 li
@
381.914 195.14 mo
381.914 198.305 li
@
374.183 195.14 mo
374.183 198.305 li
@
521.07 191.974 mo
521.07 198.305 li
@
528.8 195.14 mo
528.8 198.305 li
@
536.531 195.14 mo
536.531 198.305 li
@
grestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf398.271 208.639 mo(0.1)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf435.718 208.639 mo(0.2)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf474.588 208.639 mo(0.3)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf513.458 208.639 mo(0.4)[6.07526 3.03766 0 ]xshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [9.02653 0 0 -9.02653 0 0 ]msf456.101 219.542 mo(g)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf447.095 216.223 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 8.37482 mo
539.624 8.37482 li
@
405.107 14.7058 mo
405.107 8.37482 li
@
412.838 11.5399 mo
412.838 8.37482 li
@
420.569 11.5399 mo
420.569 8.37482 li
@
428.299 11.5399 mo
428.299 8.37482 li
@
436.03 11.5399 mo
436.03 8.37482 li
@
443.761 14.7058 mo
443.761 8.37482 li
@
451.492 11.5399 mo
451.492 8.37482 li
@
459.223 11.5399 mo
459.223 8.37482 li
@
466.954 11.5399 mo
466.954 8.37482 li
@
474.685 11.5399 mo
474.685 8.37482 li
@
482.415 14.7058 mo
482.415 8.37482 li
@
490.146 11.5399 mo
490.146 8.37482 li
@
497.877 11.5399 mo
497.877 8.37482 li
@
505.608 11.5399 mo
505.608 8.37482 li
@
513.339 11.5399 mo
513.339 8.37482 li
@
521.07 14.7058 mo
521.07 8.37482 li
@
405.107 14.7058 mo
405.107 8.37482 li
@
397.376 11.5399 mo
397.376 8.37482 li
@
389.645 11.5399 mo
389.645 8.37482 li
@
381.914 11.5399 mo
381.914 8.37482 li
@
374.183 11.5399 mo
374.183 8.37482 li
@
521.07 14.7058 mo
521.07 8.37482 li
@
528.8 11.5399 mo
528.8 8.37482 li
@
536.531 11.5399 mo
536.531 8.37482 li
@
369.545 198.305 mo
369.545 8.37482 li
@
374.137 171.015 mo
369.545 171.015 li
@
371.841 165.502 mo
369.545 165.502 li
@
371.841 159.988 mo
369.545 159.988 li
@
371.841 154.475 mo
369.545 154.475 li
@
371.841 148.962 mo
369.545 148.962 li
@
374.137 143.449 mo
369.545 143.449 li
@
371.841 137.936 mo
369.545 137.936 li
@
371.841 132.422 mo
369.545 132.422 li
@
371.841 126.909 mo
369.545 126.909 li
@
371.841 121.396 mo
369.545 121.396 li
@
374.137 115.883 mo
369.545 115.883 li
@
371.841 110.369 mo
369.545 110.369 li
@
371.841 104.856 mo
369.545 104.856 li
@
371.841 99.3428 mo
369.545 99.3428 li
@
371.841 93.8298 mo
369.545 93.8298 li
@
374.137 88.3168 mo
369.545 88.3168 li
@
371.841 82.8029 mo
369.545 82.8029 li
@
371.841 77.2899 mo
369.545 77.2899 li
@
371.841 71.7769 mo
369.545 71.7769 li
@
371.841 66.2639 mo
369.545 66.2639 li
@
374.137 60.7498 mo
369.545 60.7498 li
@
371.841 55.2368 mo
369.545 55.2368 li
@
371.841 49.7238 mo
369.545 49.7238 li
@
371.841 44.2108 mo
369.545 44.2108 li
@
371.841 38.6968 mo
369.545 38.6968 li
@
374.137 33.1838 mo
369.545 33.1838 li
@
374.137 171.015 mo
369.545 171.015 li
@
371.841 176.528 mo
369.545 176.528 li
@
371.841 182.041 mo
369.545 182.041 li
@
371.841 187.555 mo
369.545 187.555 li
@
371.841 193.068 mo
369.545 193.068 li
@
374.137 33.1838 mo
369.545 33.1838 li
@
371.841 27.6708 mo
369.545 27.6708 li
@
371.841 22.1578 mo
369.545 22.1578 li
@
371.841 16.6448 mo
369.545 16.6448 li
@
371.841 11.1309 mo
369.545 11.1309 li
@
grestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf363.667 175.932 mo(1)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 148.438 mo(2)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 120.471 mo(3)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 93.4518 mo(4)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 65.4848 mo(5)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 37.5178 mo(6)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf355.609 50.7899 mo(g)shgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 79.2308 mo(/dR)[-5.15081 -10.3016 0 ]yshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf356.557 92.5038 mo(jet)[-2.74217 -6.86777 0 ]yshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 119.997 mo( dN)[-5.15081 -10.3016 0 ]yshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf356.557 133.27 mo(jet)[-2.74217 -6.86777 0 ]yshgrestore
gsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 160.763 mo(1/N)[-10.3016 -5.15082 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
539.624 198.305 mo
539.624 8.37482 li
@
535.032 171.015 mo
539.624 171.015 li
@
537.328 165.502 mo
539.624 165.502 li
@
537.328 159.988 mo
539.624 159.988 li
@
537.328 154.475 mo
539.624 154.475 li
@
537.328 148.962 mo
539.624 148.962 li
@
535.032 143.449 mo
539.624 143.449 li
@
537.328 137.936 mo
539.624 137.936 li
@
537.328 132.422 mo
539.624 132.422 li
@
537.328 126.909 mo
539.624 126.909 li
@
537.328 121.396 mo
539.624 121.396 li
@
535.032 115.883 mo
539.624 115.883 li
@
537.328 110.369 mo
539.624 110.369 li
@
537.328 104.856 mo
539.624 104.856 li
@
537.328 99.3428 mo
539.624 99.3428 li
@
537.328 93.8298 mo
539.624 93.8298 li
@
535.032 88.3168 mo
539.624 88.3168 li
@
537.328 82.8029 mo
539.624 82.8029 li
@
537.328 77.2899 mo
539.624 77.2899 li
@
537.328 71.7769 mo
539.624 71.7769 li
@
537.328 66.2639 mo
539.624 66.2639 li
@
535.032 60.7498 mo
539.624 60.7498 li
@
537.328 55.2368 mo
539.624 55.2368 li
@
537.328 49.7238 mo
539.624 49.7238 li
@
537.328 44.2108 mo
539.624 44.2108 li
@
537.328 38.6968 mo
539.624 38.6968 li
@
535.032 33.1838 mo
539.624 33.1838 li
@
535.032 171.015 mo
539.624 171.015 li
@
537.328 176.528 mo
539.624 176.528 li
@
537.328 182.041 mo
539.624 182.041 li
@
537.328 187.555 mo
539.624 187.555 li
@
537.328 193.068 mo
539.624 193.068 li
@
535.032 33.1838 mo
539.624 33.1838 li
@
537.328 27.6708 mo
539.624 27.6708 li
@
537.328 22.1578 mo
539.624 22.1578 li
@
537.328 16.6448 mo
539.624 16.6448 li
@
537.328 11.1309 mo
539.624 11.1309 li
@
376.116 180.911 mo
376.968 183.531 li
379.723 183.531 li
377.494 185.151 li
378.345 187.771 li
376.116 186.152 li
373.887 187.771 li
374.739 185.151 li
372.51 183.531 li
375.265 183.531 li
cp
0 .993988 1 0 cmyk
f
395.443 157.035 mo
396.295 159.656 li
399.05 159.656 li
396.821 161.275 li
397.672 163.895 li
395.443 162.276 li
393.214 163.895 li
394.066 161.275 li
391.837 159.656 li
394.592 159.656 li
cp
f
414.77 120.894 mo
415.622 123.514 li
418.377 123.514 li
416.148 125.134 li
416.999 127.754 li
414.77 126.135 li
412.541 127.754 li
413.393 125.134 li
411.164 123.514 li
413.919 123.514 li
cp
f
434.098 93.2788 mo
434.949 95.8988 li
437.704 95.8988 li
435.475 97.5189 li
436.327 100.139 li
434.098 98.5198 li
431.869 100.139 li
432.72 97.5189 li
430.491 95.8988 li
433.246 95.8988 li
cp
f
453.425 95.1808 mo
454.276 97.8008 li
457.031 97.8008 li
454.802 99.4208 li
455.654 102.041 li
453.425 100.421 li
451.196 102.041 li
452.047 99.4208 li
449.818 97.8008 li
452.573 97.8008 li
cp
f
472.752 99.2048 mo
473.603 101.825 li
476.358 101.825 li
474.129 103.444 li
474.981 106.065 li
472.752 104.445 li
470.523 106.065 li
471.374 103.444 li
469.145 101.825 li
471.9 101.825 li
cp
f
492.079 111.93 mo
492.93 114.551 li
495.685 114.551 li
493.457 116.17 li
494.308 118.79 li
492.079 117.171 li
489.85 118.79 li
490.701 116.17 li
488.472 114.551 li
491.228 114.551 li
cp
f
511.406 150.296 mo
512.257 152.916 li
515.013 152.916 li
512.784 154.536 li
513.635 157.156 li
511.406 155.537 li
509.177 157.156 li
510.028 154.536 li
507.8 152.916 li
510.555 152.916 li
cp
f
530.733 193.046 mo
531.585 195.667 li
534.34 195.667 li
532.111 197.286 li
532.962 199.906 li
530.733 198.287 li
528.504 199.906 li
529.356 197.286 li
527.127 195.667 li
529.882 195.667 li
cp
f
376.116 178.723 mo
395.443 152.448 li
414.77 117.386 li
434.098 93.6478 li
453.425 96.7398 li
472.752 95.9188 li
492.079 107.461 li
511.406 150.21 li
530.733 196.034 li
530.733 197.643 li
511.406 157.966 li
492.079 123.984 li
472.752 110.074 li
453.425 101.206 li
434.098 100.494 li
414.77 131.987 li
395.443 169.207 li
376.116 190.684 li
0 .241001 .107607 0 cmyk
ef
376.116 178.067 mo
377.606 182.652 li
382.428 182.652 li
378.527 185.487 li
380.017 190.072 li
376.116 187.238 li
372.215 190.072 li
373.705 185.487 li
369.805 182.652 li
374.626 182.652 li
cp
0 .993988 1 0 cmyk
f
395.443 154.191 mo
396.933 158.777 li
401.755 158.777 li
397.854 161.611 li
399.344 166.196 li
395.443 163.362 li
391.543 166.196 li
393.033 161.611 li
389.132 158.777 li
393.953 158.777 li
cp
f
414.77 118.05 mo
416.26 122.636 li
421.082 122.636 li
417.181 125.47 li
418.671 130.055 li
414.77 127.221 li
410.87 130.055 li
412.36 125.47 li
408.459 122.636 li
413.281 122.636 li
cp
f
434.098 90.4348 mo
435.587 95.0198 li
440.409 95.0198 li
436.508 97.8538 li
437.998 102.44 li
434.098 99.6058 li
430.197 102.44 li
431.687 97.8538 li
427.786 95.0198 li
432.608 95.0198 li
cp
f
453.425 92.3369 mo
454.915 96.9218 li
459.736 96.9218 li
455.835 99.7559 li
457.325 104.342 li
453.425 101.508 li
449.524 104.342 li
451.014 99.7559 li
447.113 96.9218 li
451.935 96.9218 li
cp
f
472.752 96.3608 mo
474.242 100.946 li
479.063 100.946 li
475.163 103.78 li
476.652 108.366 li
472.752 105.532 li
468.851 108.366 li
470.341 103.78 li
466.44 100.946 li
471.262 100.946 li
cp
f
492.079 109.086 mo
493.569 113.672 li
498.39 113.672 li
494.49 116.506 li
495.98 121.091 li
492.079 118.257 li
488.178 121.091 li
489.668 116.506 li
485.768 113.672 li
490.589 113.672 li
cp
f
511.406 147.452 mo
512.896 152.037 li
517.717 152.037 li
513.817 154.872 li
515.307 159.457 li
511.406 156.623 li
507.505 159.457 li
508.995 154.872 li
505.095 152.037 li
509.916 152.037 li
cp
f
530.733 190.202 mo
532.223 194.788 li
537.045 194.788 li
533.144 197.622 li
534.634 202.207 li
530.733 199.373 li
526.833 202.207 li
528.322 197.622 li
524.422 194.788 li
529.243 194.788 li
cp
f
1.5 lw
376.116 191.214 mo
385.418 175.685 li
395.443 158.649 li
398.464 153.327 li
404.474 142.312 li
408.398 135.253 li
410.821 131.11 li
413.108 127.432 li
414.77 124.934 li
418.96 118.94 li
422.443 114.229 li
425.091 110.921 li
427.497 108.185 li
429.737 105.92 li
431.658 104.226 li
433.638 102.75 li
434.098 102.45 li
435.859 101.481 li
437.789 100.731 li
439.929 100.219 li
442.518 99.9509 li
445.965 99.9879 li
452.699 100.313 li
453.425 100.298 li
461.906 99.9468 li
465.512 99.9949 li
468.384 100.24 li
471.186 100.72 li
472.752 101.114 li
479.558 102.894 li
482.169 103.787 li
484.39 104.795 li
486.384 105.968 li
488.279 107.373 li
489.84 108.784 li
491.433 110.489 li
492.079 111.264 li
493.617 113.314 li
495.268 115.816 li
497.057 118.836 li
498.991 122.416 li
501.179 126.789 li
504.116 133.061 li
511.406 149.362 li
514.398 156.075 li
517.845 164.079 li
521.308 172.42 li
524.749 180.998 li
528.098 189.631 li
530.733 196.621 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
376.116 192.204 mo
380.311 187.439 li
384.515 182.345 li
388.627 177.054 li
392.749 171.44 li
395.443 167.605 li
398.087 163.599 li
400.877 159.067 li
405.493 151.215 li
409.998 143.608 li
412.632 139.401 li
414.77 136.209 li
420.723 127.797 li
424.92 122.22 li
427.991 118.452 li
430.532 115.594 li
433.112 112.981 li
434.098 112.068 li
436.364 110.198 li
438.93 108.441 li
453.425 101.345 li
456.405 99.5458 li
463.925 94.4888 li
466.754 92.8608 li
468.891 91.8878 li
470.807 91.2678 li
472.752 90.9349 li
477.186 90.6589 li
479.944 90.7639 li
482.249 91.1498 li
484.527 91.8918 li
486.364 92.8118 li
488.239 94.0988 li
489.756 95.4299 li
491.286 97.0679 li
492.079 98.0399 li
493.498 100.015 li
495.005 102.432 li
496.629 105.372 li
498.387 108.895 li
500.496 113.525 li
502.614 118.524 li
505.468 125.655 li
511.406 140.971 li
514.388 148.715 li
517.493 157.099 li
520.58 165.76 li
523.979 175.676 li
526.895 184.501 li
529.969 194.123 li
530.733 196.567 li
.75021 .679683 .670222 .90164 cmyk
@
[3 4 1 4 ] 0 dsh
376.116 184.96 mo
385.262 167.647 li
395.443 148.705 li
398.418 143.073 li
405.572 129.148 li
408.497 123.729 li
410.686 119.931 li
412.603 116.848 li
414.77 113.694 li
417.719 109.797 li
420.223 106.723 li
422.798 103.842 li
425.418 101.254 li
427.63 99.3798 li
429.813 97.8439 li
431.685 96.7988 li
433.627 96.0029 li
434.098 95.8558 li
435.669 95.5518 li
437.387 95.5399 li
439.291 95.8578 li
441.573 96.6049 li
450.471 101.137 li
452.974 102.224 li
453.425 102.384 li
458.013 103.737 li
464.603 105.507 li
467.478 106.492 li
469.96 107.559 li
472.752 109.088 li
476.512 111.57 li
479.804 114.025 li
482.903 116.626 li
485.965 119.513 li
488.523 122.196 li
491.158 125.245 li
492.079 126.385 li
494.537 129.638 li
497.175 133.452 li
500.051 137.94 li
503.352 143.435 li
507.979 151.578 li
511.406 157.803 li
515.271 165.023 li
519.107 172.502 li
523.121 180.658 li
526.756 188.34 li
530.733 197.066 li
.269902 .816403 0 0 cmyk
@
376.116 178.067 mo
377.606 182.652 li
382.428 182.652 li
378.527 185.487 li
380.017 190.072 li
376.116 187.238 li
372.215 190.072 li
373.705 185.487 li
369.805 182.652 li
374.626 182.652 li
cp
0 .993988 1 0 cmyk
f
395.443 154.191 mo
396.933 158.777 li
401.755 158.777 li
397.854 161.611 li
399.344 166.196 li
395.443 163.362 li
391.543 166.196 li
393.033 161.611 li
389.132 158.777 li
393.953 158.777 li
cp
f
414.77 118.05 mo
416.26 122.636 li
421.082 122.636 li
417.181 125.47 li
418.671 130.055 li
414.77 127.221 li
410.87 130.055 li
412.36 125.47 li
408.459 122.636 li
413.281 122.636 li
cp
f
434.098 90.4348 mo
435.587 95.0198 li
440.409 95.0198 li
436.508 97.8538 li
437.998 102.44 li
434.098 99.6058 li
430.197 102.44 li
431.687 97.8538 li
427.786 95.0198 li
432.608 95.0198 li
cp
f
453.425 92.3369 mo
454.915 96.9218 li
459.736 96.9218 li
455.835 99.7559 li
457.325 104.342 li
453.425 101.508 li
449.524 104.342 li
451.014 99.7559 li
447.113 96.9218 li
451.935 96.9218 li
cp
f
472.752 96.3608 mo
474.242 100.946 li
479.063 100.946 li
475.163 103.78 li
476.652 108.366 li
472.752 105.532 li
468.851 108.366 li
470.341 103.78 li
466.44 100.946 li
471.262 100.946 li
cp
f
492.079 109.086 mo
493.569 113.672 li
498.39 113.672 li
494.49 116.506 li
495.98 121.091 li
492.079 118.257 li
488.178 121.091 li
489.668 116.506 li
485.768 113.672 li
490.589 113.672 li
cp
f
511.406 147.452 mo
512.896 152.037 li
517.717 152.037 li
513.817 154.872 li
515.307 159.457 li
511.406 156.623 li
507.505 159.457 li
508.995 154.872 li
505.095 152.037 li
509.916 152.037 li
cp
f
530.733 190.202 mo
532.223 194.788 li
537.045 194.788 li
533.144 197.622 li
534.634 202.207 li
530.733 199.373 li
526.833 202.207 li
528.322 197.622 li
524.422 194.788 li
529.243 194.788 li
cp
f
grestore
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 3184 20 <0002009c0000057b05c2000900170053403277120107082707270c58126a
127b048c038a048a12980398049812ad030d022a15092a16021508063710
1a19012515191819b80120b3215256182b2b4ef44dfd4e10f64ded003f3f
ed10ed3130015d005d011121323736353426233617161716121510070229
01112101c7011cda562f8dd2bd5b9b604d3876a0feb2fd85027b04c2fc3e
d776a3e1f1fe1e33886eff0074fedaccfeed05c20000>SXWSCW+Helvetica-Bold AddT42Char 
1 7272 41 <000100150000028b05d100170081412f00150003002c0002001f004f0004
005f000400020004002c00170001000b0010005c001200090006000e000a
001900170017001a000a001f0003000d0015001600090027000e001f0013
00920010001900180019010e00210060006600182b2b4ef44df4e4fd3939
3cd4f44e456544e6003f3f3c4dfd3c3fed5df4ed393130001617152e0106
151415331523112111233533353437363302322c2618712bbbbbfee49f9c
3b3eed05d10303e803033520203cc9fc91036fc946af4262>SXWSCW+Helvetica-Bold AddT42Char 
1 8324 47 <00030042ffda049c0465000b00170018004d4028170301080c880c881003
170d180f660d0305241814070b240e0b1818080236171a1a08361119191a
b80176b321484e182b2b4ef44ded4e10f64ded11392f003fed3f3ced3130
017200727124363534262322061514163324002120003534002120001501
02eb86867d7d87877d022efeecfee7fee7feec0114011901190114fdd3c9
b2a4a4b1b1a4a4b266feab0155f0ec015afea6ec0240>SXWSCW+Helvetica-Bold AddT42Char 
1 9248 52 <0002007dffe80455045f0019001a004c402e0a161a162a16381656076507
061a070a0006160e0d0a0524140b1a0d0a271a180b1a1c013618191b1cbe
215045182b2b4ef44ded4e10f612394dfdd42f003fed3f39393f3c3f3130
015d0111141716333237363511211121350e01070e012322272635112501
a116277292361c0121feeb042016437d54f2542f01ec0442fd6f5d2f5376
40690251fbbe9a0532133c2cae60bb02911d>SXWSCW+Helvetica-Bold AddT42Char 
1 9720 54 <00020021000003ce045f0009000a0092406008034803c903033704380984
048b09d504db09060704260429093604390945045504830994049b09a404
ab09b404bb09c304d609e409119604990902090304042712080809030900
a001060804a0070a0a070a0a04090103051a0c0108190b0cb80172b32160
66182b2b4ef44dc44e10f64dc4113939392f003f3ffdc43ffd3cc401872e
2b877dc4313001725d71005d1335211501211521350103470374fdd7023c
fc53022f4f035ae8edfd95eade027c0105000000>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/D 20 def
/f 41 def
/o 47 def
/u 52 def
/z 54 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 68 /D put
dup 102 /f put
dup 111 /o put
dup 117 /u put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /.notdef /four /five 6{/.notdef}rp /less /equal 3{/.notdef}rp /A 2{/.notdef}rp /D 2{/.notdef}rp /G 2{/.notdef}rp /J 7{/.notdef}rp /R /S /T /U /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z /.notdef /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf502.081 82.0748 mo( = 0)[3.03763 6.38126 3.03766 0 ]xsh%ADOBeginSubsetFont: NAAAAA+Symbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCY+Symbol gcheck setglobal} if
1 68 1 <00010089fe4e040405830035005f4036201d132c1017230b0935000d0313
17039b32179b0d091d9b2621b13273365b046b046a2c0310092c35000520
1a192906192f202c223610dcecd4e4d4e4111739315d0010e4e4d4ecd4c4
ec10ee10c41112393911393912393911123930251e013332363534262706
070623222635343633321716173e01353426232206151123111012333216
151406071e011514062322262701a00e6a44697a7574070d4c271d1f2022
1b52120a4241705f7164b4ddcba3ca8d86bbbee3aa6f930ba4394abba1a2
ca2502062122201f1c1e07041c7c628095b1d2fa8904b80131014caa8b62
982d2ec895bdf36553000000>SXWSCY+Symbol AddT42Char 
SXWSCY+Symbol /CharStrings get begin
/beta 1 def
end
SXWSCY+Symbol /Encoding get
dup 34 /beta put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCY+Symbol*1 [33{/.notdef}rp /eta /beta 221{/.notdef}rp]SXWSCY+Symbol nfSXWSCY+Symbol*1 [10.9268 0 0 -10.9268 0 0 ]msf496.393 82.0748 mo(")shSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf461.315 82.0748 mo( = 0.1, )[3.03763 6.38126 3.03766 6.07529 3.03766 6.07529 3.03766 0 ]xshSXWSCW+Helvetica-Bold*1 [7.60128 0 0 -7.60128 0 0 ]msf449.939 88.2379 mo(cut)[4.22629 4.64432 0 ]xshSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf394.952 82.0748 mo(SoftDrop z)[7.28824 6.67621 3.63852 3.63855 7.88916 4.25061 6.67618 6.67621 3.03763 0 ]xshgsave
369.545 198.305 mo
539.624 198.305 li
539.624 -12.7291 li
369.545 -12.7291 li
cp
clp
0 .993988 1 0 cmyk
%ADOBeginSubsetFont: OAAAAA+Helvetica-Oblique Initial
ct_T42Dict begin
-0.93 -0.48 1.57 1.137
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+Helvetica-Oblique
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000038c6670
676d000000000000044800000a1d676c796600000000000013ac00000380
686561640000000000000e6800000036686865610000000000000ea00000
0024686d74780000000000000ec4000000146c6f63610000000000000ed8
0000000c6d6178700000000000000ee4000000206e616d65000000000000
0f040000002c707265700000000000000f300000047c6764697200000000
0000000000000000c0051000bd05280080051a002f041f000000d9ff0000
daff0000d9ff55fee6ffc70510006dfef1ff3b030000b9000000b900fe02
3c3fc0008d009b00af000600a800c00028005e009800c9006a01b9005c01
b400d6001e012e0080000400b8004c00cc00ff01d1ff6600a400af007400
c2009500b1000c0028006d0015004c008e0025017aff0c0040004c006200
8400a2ff240038008600bd0039005e008e00ed00a9ffb3ff400052005500
aa00ab00c200cb002301b1021304aeffe4ff0800510074008400aa00d100
4cffafff12002c004200500051008400be002501da0368ff18003b009800
9c009f00a100c100ec008201b40168ff76ffd0ffe1ff020018001c005300
53007d00b401e101af0386049cffeafffeff1f0028002a00520060009300
a300aa00af00af00c000000145016b0174019301950140028202b4028504
1705fdfe060029004700470048006f008800b400b900c400f200f900ef01
180210037403c50335fff3ff0b004b004c00520055006500760076008700
87008e00ab00bb0006013001430150017d0194019501d3012a0255025802
77027802e6024e035c037903d3037304b2048c0598050b06f5febbffc7ff
d5ff17001d005b0072007e009c00c200d000f400fa00030106011c012501
3b0142015e015e0180019b01b902a101b9015002c001d001aa02df01e301
ef01fb0105020c0215022b0274029302ab02c202ce02690395039903df03
f5033e040205a105e5052506db0762fe89fecefe3bffe1fff8ff03000800
2100390042004e005f0061006f00700034007f008e00ad00ad00af00bd00
c400c500c900c900c900e3001c01ed00f800f900000112011a0132014d01
4d014e014f01660169019e01ba01ba01be01e301ef01f601000200020902
110217021c02530262026d028002d50280021b032a034a035a03af03af03
c803d603fb03fb03050413041504470449048c006d049a049a04a604a804
b204cf0439053e054e055605800589058c056303d105d6057e068e06b206
ef06f00628074c076f078c07b400c900c000c10000000000000000000000
000004002401af0032006e0063004401620196004301a10161018a007400
64008801ef01700128005dff7e0347033002aa00be007b0062009a007d00
89005c03a100d8ffaa03d70093006c0000008000a70042041d0097051d00
820030002a002a002a002a00002a0093007600ac011500ac00b800c500d1
0000002bfe55001a042f002105be002740292a292827262524232221201f
1e1d1c1b1a191817161514131211100d0c0b0a090807060504030201002c
4523466020b02660b004262348482d2c452346236120b02661b004262348
482d2c45234660b0206120b04660b004262348482d2c4523462361b02060
20b02661b02061b004262348482d2c45234660b0406120b06660b0042623
48482d2c4523462361b0406020b02661b04061b004262348482d2c011020
3c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51
582320b04d44235920b09051582320b00d44235921212d2c202045186844
20b001602045b04676688a4560442d2c01b9400000000a2d2c00b9000040
000b2d2c2045b00043617d6818b0004360442d2c45b01a234445b0192344
2d2c2045b00325456164b050515845441b2121592d2c20b0032552582359
212d2c69b04061b0008b0c6423648bb8400062600c642364615c58b00361
59b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d
2c45b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040
608b482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0
0185592d2c20b0032545b019236a4445b01a23444565234520b00325606a
20b009234223688a6a606120b0005258b21a401a4523614459b0005058b2
19401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b2118
7e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c456920b00943b002
2660b00325b005254961b0805358b21940194523616844b21a401a452360
6a44b209191a45652345604259b00943608a103a2d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2c764520b003254523616818236860442d2c7645b003254523616823
18456860442d2c7645b0032545616823452361442d2c4569b014b0324b50
5821b0205961442db8002b2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a
212db8002e2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db8002f2c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800302c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00312c2020456944b001602020457d691844b001602db800322cb800312a
2db800332c4b20b003265358b0801bb040598a8a20b0032653582321b0c0
8a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326535823
21b801408a8a1b8a235920b80003265358b0032545b8018050582321b801
8023211bb003254523212321591b2159442db800342c4b535845441b2121
592db800352c4bb800095058b101018e59b801ff85b800441db900090003
5f5e2db800362c2020456944b001602db800372cb800362a212db800382c
2046b003254652582359208a208a49648a204620686164b0042546206861
64525823658a592f20b00053586920b000545821b040591b6920b0005458
21b0406559593a2db800392c2046b00425465258238a592046206a6164b0
042546206a61645258238a592ffd2db8003a2c4b20b0032650585158b080
441bb04044591b21212045b0c05058b0c0441b2159592db8003b2c202045
6944b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b
20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a2359
20b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a
1b8a235920b80003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db8003e2c4b535845441b2121592db8003f2c
4bb800095058b101018e59b801ff85b800441db9000900035f5e2db80040
2c2020456944b001602db800412cb800402a212db800422c2046b0032546
52582359208a208a49648a204620686164b004254620686164525823658a
592f20b00053586920b000545821b040591b6920b000545821b040655959
3a2db800432c2046b00425465258238a592046206a6164b0042546206a61
645258238a592ffd2db800442c4b20b0032650585158b080441bb0404459
1b21212045b0c05058b0c0441b2159592db800452c2020456944b0016020
20457d691844b001602db800462cb800452a2db800472c4b20b003265358
b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003265358
2321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8
0003265358b0032545b8018050582321b8018023211bb003254523212321
591b2159442db800482c4b535845441b2121592db800492c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944
b001602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db8004d2c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db8004f2c2020456944b001602020457d691844
b001602db800502cb8004f2a2db800512c4b20b003265358b0801bb04059
8a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a
8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b0
032545b8018050582321b8018023211bb003254523212321591b2159442d
b800522c4b535845441b2121592db800532c4bb800095058b101018e59b8
01ff85b800441db9000900035f5e2db800542c2020456944b001602db800
552cb800542a212db800562c2046b003254652582359208a208a49648a20
4620686164b004254620686164525823658a592f20b00053586920b00054
5821b040591b6920b000545821b0406559593a2db800572c2046b0042546
5258238a592046206a6164b0042546206a61645258238a592ffd2db80058
2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c044
1b2159592db800592c2020456944b001602020457d691844b001602db800
5a2cb800592a2db8005b2c4b20b003265358b0401bb000598a8a20b00326
53582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920
b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b
8a235920b80003265358b0032545b8018050582321b8018023211bb00325
4523212321591b2159442db8005c2c4b535845441b2121592d0000000001
00000000000025088ea25f0f3cf500110800000000005f4d8f0000000000
d7c5a885f88afc270c92091b000200090001000000000000000100000629
fe2900000c01f88afc350c92080001b30000000000000000000000000005
051200420556001e05c700b40556009204e3013400000048008600f6018c
01c00001000000050096000900000000000200100010005d000007e80a1d
00000000000000010012000100000000000600180000454d5a49514e2b48
656c7665746963612d4f626c697175650000b800532b01ba000501b90055
2b01bf01ba004200320027001d00100000005b2bbf01bb003e0032002700
1d00100000005b2bbf01bc003a00320027001d00100000005b2bbf01bd00
3600320027001600100000005b2b00bf01b6004d003f0037002800180000
005b2bbf01b70060004f0037002800180000005b2bbf01b8004200320027
001d00100000005b2bbf01b900290022001a001600100000005b2b00ba01
be0004005a2bb801b520457d691844b800492bb8003f2bb800352bb8002b
2b4118008001a6009001a600a001a600030069018b0079018b0089018b00
99018b00040089018b0099018b00a9018b00b9018bb2040840ba0179001a
014a400b041f5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00
e10119b20d0009410a01a0019f0064001f01a50025017a00480028019ab3
296c1f60410a01a9007001a9008001a90003008001a9000101a9b21e321f
be012c00250401001f0126001e0401b61fe7312d1fe531b80201b21fc227
b80401b21fc11eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401
b21faa29b80401b61fa91d6c1f931eb8019ab21f921db80101b21f911db8
0101b21f751db80201b61f6d29961f6431b8019ab21f4c96b802abb21f39
1db80156400b1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd
1f241db802abb21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d
4527bb01aa019b002a019bb2254a1fba019b0025017ab349293896b8017b
b348283125b8017a403648289629482725294c1f252946272729482756c8
0784075b07410732072b072807260721071b071408120810080e080c080a
08080807b801acb23f1f06bb01ab003f001f01abb308060805b801aeb23f
1f04bb01ad003f001f01adb70804080208000814b8ffe0b40000010014b8
01abb41000000100b801abb606100000010006b801adb300000100b801ad
401f04000001000410000001001002000001000200000001000002010802
004a00b0018db806008516763f183f123e113946443e113946443e113946
443e113946443e113946443e11394660443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0
964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74
752b2b2b65422b2b4b5279b376706a66456523456023456560234560b08b
766818b080622020b16a704565234520b003266062636820b003266165b0
70236544b06a234420b176664565234520b003266062636820b003266165
b066236544b0762344b10066455458b166406544b27640764523614459b3
6242725d456523456023456560234560b089766818b080622020b1724245
65234520b003266062636820b003266165b042236544b072234420b1625d
4565234520b003266062636820b003266165b05d236544b0622344b1005d
455458b15d406544b262406245236144592b2b2b2b456953427374b8019a
2045694b20b02853b049515a58b020615944b801a6204569447500>
[897 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 144 1 <0002001e0000053d05bd0002000a0044b800532b00b801b54558b800032f
1bb9000301c43e59b801b54558b800052f1bb9000501be3e59b801b54558
b800092f1bb9000901be3e59bb000001b8000700572b3031010309013313
2303210323040d55fe89013ee1ddda38fdbbfccc025a0289fd770363fa43
01b8fe48>OAAAAA+Helvetica-Oblique AddT42Char 
1 268 2 <000200b40000065905bd000900270058b800532b00b801b54558b8000a2f
1bb9000a01c43e59b801b54558b8001b2f1bb9001b01be3e59b801b54558
b800262f1bb9002601be3e59bb000001b8002400572bb8000a10b9000701
b8f4ba00120024000011123930310132363736272623210b012132171607
0e01071e010f0106171617072326343f013627262321032303f08cbb1f21
663766fe1a6a3802a8a862bb351c916d4f3e16230f03032a07f4060f2817
59347afe3b85c7031c70929d391efe0a02a1315efd84a833237280c55429
461421133c56f590311bfd8a0000>OAAAAA+Helvetica-Oblique AddT42Char 
1 492 3 <00010092ffd505db05e2002f008fb800532b00b801b54558b800142f1bb9
001401c43e59b801b54558b8002b2f1bb9002b01be3e59b9000401b8f441
0b000700040017000400270004003700040047000400055d410500560004
0066000400025db8001410b9001701b9f4b8001410b9001c01b8f4410500
59001c0069001c00025d410b0008001c0018001c0028001c0038001c0048
001c00055d30310106171633323736373627262f01262726373624333204
0723362726232206070617161f0116171607060423202726370182132344
fa7063bf221a41419abeb94678272a0148fbe7011334bb0a2343dab0b915
174f34c6c48e44772a34fe70ebfeee7d7d3501da7d4e92203ea078333225
2d2c355cb7c6fedff5763f7394626c3220302f223b67c4f4d28c8bee0000
>OAAAAA+Helvetica-Oblique AddT42Char 
1 792 4 <000101340000060105bd0007003bb800532b00b801b54558b800002f1bb9
000001c43e59b801b54558b800032f1bb9000301be3e59b8000010b90001
01b8f4b80005d0b80006d030310107210123012137060125fe11feedca01
13fe112505bdaffaf2050eaf0000>OAAAAA+Helvetica-Oblique AddT42Char 
1 0 0 <00020042000004d005bd000300070069b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b9000301bbf4b8000010b9000701bbf4
b8000310b80009dc00b801b54558b800012f1bb9000101c43e59b801b545
58b800002f1bb9000001be3e59b9000401b8f4b8000110b9000501b8f430
31331121112711211142048eb8fce205bdfa43b8044dfbb3>OAAAAA+Helvetica-Oblique AddT42Char 
OAAAAA+Helvetica-Oblique /CharStrings get begin
/A 1 def
/R 2 def
/S 3 def
/T 4 def
end
OAAAAA+Helvetica-Oblique /Encoding get
dup 65 /A put
dup 82 /R put
dup 83 /S put
dup 84 /T put
pop
end
%ADOEndSubsetFont
/SXWSCZ+Helvetica-Oblique /OAAAAA+Helvetica-Oblique findfont ct_VMDictPut/SXWSCZ+Helvetica-Oblique*1 [65{/.notdef}rp /A 16{/.notdef}rp /R /S /T 171{/.notdef}rp]SXWSCZ+Helvetica-Oblique nfSXWSCZ+Helvetica-Oblique*1 [16.1527 0 0 -16.1527 0 0 ]msf479.802 33.2509 mo(STAR)[10.774 9.86917 10.774 0 ]xshgrestore
SXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf504.925 65.9588 mo(])shSXWSCX+Helvetica-BoldOblique*1 [10.9268 0 0 -10.9268 0 0 ]msf498.289 65.9588 mo(c)shSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf441.881 65.9588 mo( < 25 [GeV/)[3.03763 6.38126 3.03766 6.07529 6.07529 3.03766 3.63855 8.50104 6.07532 7.28824 0 ]xshSXWSCW+Helvetica-Bold*1 [7.60128 0 0 -7.60128 0 0 ]msf426.238 72.1208 mo(T,jet)[4.64432 2.11316 2.11313 4.22632 0 ]xshSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf394.952 65.9588 mo(20 < p)[6.07529 6.07529 3.03766 6.38126 3.03763 0 ]xshgsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
0 0 0 0 cmyk
ef
.4 lw
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
@
199.92 252.571 mo
369.545 252.571 li
369.545 198.305 li
199.92 198.305 li
cp
ef
199.92 252.571 mo
369.545 252.571 li
369.545 198.305 li
199.92 198.305 li
cp
@
.75 lw
199.92 252.571 mo
369.545 252.571 li
369.545 198.305 li
199.92 198.305 li
cp
.75021 .679683 .670222 .90164 cmyk
@
199.92 252.571 mo
203.004 252.571 li
206.088 252.571 li
209.172 252.571 li
212.256 252.571 li
215.34 252.571 li
218.424 252.571 li
221.508 252.571 li
224.592 252.571 li
227.677 252.571 li
230.761 252.571 li
233.845 252.571 li
236.929 252.571 li
240.013 252.571 li
243.097 252.571 li
246.181 252.571 li
249.265 252.571 li
252.349 252.571 li
255.433 252.571 li
258.518 252.571 li
261.602 252.571 li
264.686 252.571 li
267.77 252.571 li
270.854 252.571 li
273.938 252.571 li
277.022 252.571 li
280.106 252.571 li
283.19 252.571 li
286.274 252.571 li
289.358 252.571 li
292.443 252.571 li
295.527 252.571 li
298.611 252.571 li
301.695 252.571 li
304.779 252.571 li
307.863 252.571 li
310.947 252.571 li
314.031 252.571 li
317.115 252.571 li
320.199 252.571 li
323.284 252.571 li
326.368 252.571 li
329.452 252.571 li
332.536 252.571 li
335.62 252.571 li
338.704 252.571 li
341.788 252.571 li
344.872 252.571 li
347.956 252.571 li
351.04 252.571 li
354.124 252.571 li
357.209 252.571 li
360.293 252.571 li
363.377 252.571 li
366.461 252.571 li
369.545 252.571 li
1 .978058 .0451667 .0556954 cmyk
@
199.92 252.571 mo
369.545 252.571 li
.75021 .679683 .670222 .90164 cmyk
@
235.387 250.401 mo
235.387 252.571 li
@
243.097 251.486 mo
243.097 252.571 li
@
250.807 251.486 mo
250.807 252.571 li
@
258.518 251.486 mo
258.518 252.571 li
@
266.228 251.486 mo
266.228 252.571 li
@
273.938 250.401 mo
273.938 252.571 li
@
281.648 251.486 mo
281.648 252.571 li
@
289.358 251.486 mo
289.358 252.571 li
@
297.069 251.486 mo
297.069 252.571 li
@
304.779 251.486 mo
304.779 252.571 li
@
312.489 250.401 mo
312.489 252.571 li
@
320.199 251.486 mo
320.199 252.571 li
@
327.91 251.486 mo
327.91 252.571 li
@
335.62 251.486 mo
335.62 252.571 li
@
343.33 251.486 mo
343.33 252.571 li
@
351.04 250.401 mo
351.04 252.571 li
@
235.387 250.401 mo
235.387 252.571 li
@
227.677 251.486 mo
227.677 252.571 li
@
219.966 251.486 mo
219.966 252.571 li
@
212.256 251.486 mo
212.256 252.571 li
@
204.546 251.486 mo
204.546 252.571 li
@
351.04 250.401 mo
351.04 252.571 li
@
358.751 251.486 mo
358.751 252.571 li
@
366.461 251.486 mo
366.461 252.571 li
@
grestore
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf227.149 264.1 mo(0.1)[7.41063 3.70532 0 ]xsh264.597 264.1 mo(0.2)[7.41061 3.70532 0 ]xsh303.466 264.1 mo(0.3)[7.41061 3.70532 0 ]xshgsave
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
clp
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf341.862 264.1 mo(0.4)[7.41061 3.70532 0 ]xshgrestore
gsave
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
clp
SXWSCV+Helvetica*1 [10.4724 0 0 -10.4724 0 0 ]msf364.141 280.69 mo(g)shgrestore
gsave
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
clp
SXWSCV+Helvetica*1 [15.7086 0 0 -15.7086 0 0 ]msf353.239 277.372 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
199.92 198.305 mo
369.545 198.305 li
@
235.387 200.476 mo
235.387 198.305 li
@
243.097 199.391 mo
243.097 198.305 li
@
250.807 199.391 mo
250.807 198.305 li
@
258.518 199.391 mo
258.518 198.305 li
@
266.228 199.391 mo
266.228 198.305 li
@
273.938 200.476 mo
273.938 198.305 li
@
281.648 199.391 mo
281.648 198.305 li
@
289.358 199.391 mo
289.358 198.305 li
@
297.069 199.391 mo
297.069 198.305 li
@
304.779 199.391 mo
304.779 198.305 li
@
312.489 200.476 mo
312.489 198.305 li
@
320.199 199.391 mo
320.199 198.305 li
@
327.91 199.391 mo
327.91 198.305 li
@
335.62 199.391 mo
335.62 198.305 li
@
343.33 199.391 mo
343.33 198.305 li
@
351.04 200.476 mo
351.04 198.305 li
@
235.387 200.476 mo
235.387 198.305 li
@
227.677 199.391 mo
227.677 198.305 li
@
219.966 199.391 mo
219.966 198.305 li
@
212.256 199.391 mo
212.256 198.305 li
@
204.546 199.391 mo
204.546 198.305 li
@
351.04 200.476 mo
351.04 198.305 li
@
358.751 199.391 mo
358.751 198.305 li
@
366.461 199.391 mo
366.461 198.305 li
@
199.92 252.571 mo
199.92 198.305 li
@
203.736 252.21 mo
199.92 252.21 li
@
201.828 248.592 mo
199.92 248.592 li
@
201.828 244.974 mo
199.92 244.974 li
@
201.828 241.356 mo
199.92 241.356 li
@
201.828 237.739 mo
199.92 237.739 li
@
203.736 234.121 mo
199.92 234.121 li
@
201.828 230.503 mo
199.92 230.503 li
@
201.828 226.885 mo
199.92 226.885 li
@
201.828 223.268 mo
199.92 223.268 li
@
201.828 219.65 mo
199.92 219.65 li
@
203.736 216.032 mo
199.92 216.032 li
@
203.736 252.21 mo
199.92 252.21 li
@
203.736 216.032 mo
199.92 216.032 li
@
201.828 212.415 mo
199.92 212.415 li
@
201.828 208.797 mo
199.92 208.797 li
@
201.828 205.179 mo
199.92 205.179 li
@
201.828 201.561 mo
199.92 201.561 li
@
grestore
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf183.539 256.041 mo(0.5)[6.0873 3.04366 0 ]xsh194.442 238.028 mo(1)sh183.539 220.016 mo(1.5)[6.0873 3.04366 0 ]xshgsave
157.513 288.749 mo
369.544 288.749 li
369.544 198.306 li
157.513 198.306 li
cp
clp
%ADOBeginSubsetFont: JAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCV+Helvetica gcheck setglobal} if
1 1916 11 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>SXWSCV+Helvetica AddT42Char 
1 2204 12 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>SXWSCV+Helvetica AddT42Char 
1 2400 13 <000100970000061705bd001300cb405944014b03020601090316011903d7
010513011c03140b1b0c57015803d401db03d40bdb0c0a040a040d450286
02045102970202290a280d380a380d4702570276020725640d0a02031203
01020b0c120306081517171a040405b8019b400d0a1f030b06fd0c0102fd
0d1f12b8019bb6130019147670182b4e10f43c4dfde419f43939f4393918
e4fd3c4e10456544e6003f173c3f3c1217394b5279b10d0cb801aab40201
020a0bb801aab202020387054d2e7afd047dc487052e7afd047dc4313000
5d727101725d71132109012111231134363501230115141615112397011d
01a601a3011abd04fe5dc5fe5a05be05bdfb2604dafa4303632dd077fb29
04d72d36dd34fc9d0000>SXWSCV+Helvetica AddT42Char 
1 3128 16 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>SXWSCV+Helvetica AddT42Char 
SXWSCV+Helvetica /CharStrings get begin
/C 11 def
/D 12 def
/M 13 def
/a 16 def
end
SXWSCV+Helvetica /Encoding get
dup 67 /C put
dup 68 /D put
dup 77 /M put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCV+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /five /six 12{/.notdef}rp /C /D 8{/.notdef}rp /M /N 3{/.notdef}rp /R 14{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 2{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]SXWSCV+Helvetica nfSXWSCV+Helvetica*1 [0 -14.2805 -14.2805 0 0 0 ]msf177.377 253.197 mo(MC/Data)[-11.8956 -10.3105 -3.96997 -10.3105 -7.93996 -3.96999 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 252.571 mo
369.545 198.305 li
@
365.728 252.21 mo
369.545 252.21 li
@
367.637 248.592 mo
369.545 248.592 li
@
367.637 244.974 mo
369.545 244.974 li
@
367.637 241.356 mo
369.545 241.356 li
@
367.637 237.739 mo
369.545 237.739 li
@
365.728 234.121 mo
369.545 234.121 li
@
367.637 230.503 mo
369.545 230.503 li
@
367.637 226.885 mo
369.545 226.885 li
@
367.637 223.268 mo
369.545 223.268 li
@
367.637 219.65 mo
369.545 219.65 li
@
365.728 216.032 mo
369.545 216.032 li
@
365.728 252.21 mo
369.545 252.21 li
@
365.728 216.032 mo
369.545 216.032 li
@
367.637 212.415 mo
369.545 212.415 li
@
367.637 208.797 mo
369.545 208.797 li
@
367.637 205.179 mo
369.545 205.179 li
@
367.637 201.561 mo
369.545 201.561 li
@
206.473 234.102 mo
206.478 234.115 li
206.491 234.115 li
206.48 234.123 li
206.485 234.136 li
206.473 234.128 li
206.462 234.136 li
206.467 234.123 li
206.455 234.115 li
206.469 234.115 li
cp
0 .993988 1 0 cmyk
f
225.749 234.102 mo
225.753 234.115 li
225.767 234.115 li
225.756 234.123 li
225.76 234.136 li
225.749 234.128 li
225.738 234.136 li
225.742 234.123 li
225.731 234.115 li
225.745 234.115 li
cp
f
245.025 234.102 mo
245.029 234.115 li
245.043 234.115 li
245.032 234.123 li
245.036 234.136 li
245.025 234.128 li
245.013 234.136 li
245.018 234.123 li
245.007 234.115 li
245.02 234.115 li
cp
f
264.3 234.102 mo
264.304 234.115 li
264.318 234.115 li
264.307 234.123 li
264.311 234.136 li
264.3 234.128 li
264.289 234.136 li
264.293 234.123 li
264.282 234.115 li
264.296 234.115 li
cp
f
283.576 234.102 mo
283.58 234.115 li
283.594 234.115 li
283.583 234.123 li
283.587 234.136 li
283.576 234.128 li
283.565 234.136 li
283.569 234.123 li
283.558 234.115 li
283.572 234.115 li
cp
f
302.851 234.102 mo
302.856 234.115 li
302.869 234.115 li
302.858 234.123 li
302.863 234.136 li
302.851 234.128 li
302.84 234.136 li
302.844 234.123 li
302.833 234.115 li
302.847 234.115 li
cp
f
322.127 234.102 mo
322.131 234.115 li
322.145 234.115 li
322.134 234.123 li
322.138 234.136 li
322.127 234.128 li
322.116 234.136 li
322.12 234.123 li
322.109 234.115 li
322.123 234.115 li
cp
f
341.403 234.102 mo
341.407 234.115 li
341.421 234.115 li
341.409 234.123 li
341.414 234.136 li
341.403 234.128 li
341.391 234.136 li
341.396 234.123 li
341.385 234.115 li
341.398 234.115 li
cp
f
360.678 234.102 mo
360.682 234.115 li
360.696 234.115 li
360.685 234.123 li
360.689 234.136 li
360.678 234.128 li
360.667 234.136 li
360.671 234.123 li
360.66 234.115 li
360.674 234.115 li
cp
f
206.473 213.319 mo
225.749 228.784 li
245.025 229.35 li
264.3 229.495 li
283.576 232.615 li
302.851 231.593 li
322.127 231.452 li
341.403 228.504 li
360.678 215.217 li
360.678 252.571 li
341.403 239.738 li
322.127 236.79 li
302.851 236.649 li
283.576 235.627 li
264.3 238.747 li
245.025 238.892 li
225.749 239.458 li
206.473 252.571 li
0 .241001 .107607 0 cmyk
ef
1.5 lw
[3 3 ] 0 dsh
196.836 234.121 mo
366.461 234.121 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
225.749 232.626 mo
225.749 230.689 li
.883665 .769161 0 0 cmyk
@
225.749 230.689 mo
225.749 228.752 li
@
224.801 232.626 mo
226.697 232.626 li
@
224.801 228.752 mo
226.697 228.752 li
@
.75 lw
224.749 230.689 mo
225.749 230.689 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
245.025 233.005 mo
245.025 231.899 li
.883665 .769161 0 0 cmyk
@
245.025 231.899 mo
245.025 230.794 li
@
244.077 233.005 mo
245.973 233.005 li
@
244.077 230.794 mo
245.973 230.794 li
@
.75 lw
244.025 231.899 mo
245.025 231.899 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
264.3 238.421 mo
264.3 237.633 li
.883665 .769161 0 0 cmyk
@
264.3 237.633 mo
264.3 236.845 li
@
263.352 238.421 mo
265.248 238.421 li
@
263.352 236.845 mo
265.248 236.845 li
@
.75 lw
263.3 237.633 mo
264.3 237.633 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
283.576 235.585 mo
283.576 234.797 li
.883665 .769161 0 0 cmyk
@
283.576 234.797 mo
283.576 234.008 li
@
282.628 235.585 mo
284.524 235.585 li
@
282.628 234.008 mo
284.524 234.008 li
@
.75 lw
282.576 234.797 mo
283.576 234.797 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
302.851 235.067 mo
302.851 234.292 li
.883665 .769161 0 0 cmyk
@
302.851 234.292 mo
302.851 233.518 li
@
301.903 235.067 mo
303.799 235.067 li
@
301.903 233.518 mo
303.799 233.518 li
@
.75 lw
301.851 234.292 mo
302.851 234.292 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
322.127 233.038 mo
322.127 232.186 li
.883665 .769161 0 0 cmyk
@
322.127 232.186 mo
322.127 231.334 li
@
321.179 233.038 mo
323.075 233.038 li
@
321.179 231.334 mo
323.075 231.334 li
@
.75 lw
321.127 232.186 mo
322.127 232.186 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
341.403 231.125 mo
341.403 230.072 li
.883665 .769161 0 0 cmyk
@
341.403 230.072 mo
341.403 229.02 li
@
340.455 231.125 mo
342.351 231.125 li
@
340.455 229.02 mo
342.351 229.02 li
@
.75 lw
340.403 230.072 mo
341.403 230.072 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
360.678 236.961 mo
360.678 231.76 li
.883665 .769161 0 0 cmyk
@
360.678 231.76 mo
360.678 226.559 li
@
359.73 236.961 mo
361.626 236.961 li
@
359.73 226.559 mo
361.626 226.559 li
@
.75 lw
359.678 231.76 mo
360.678 231.76 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
199.92 252.571 mo
216.111 252.571 li
216.111 230.689 li
235.387 230.689 li
235.387 231.899 li
254.662 231.899 li
254.662 237.633 li
273.938 237.633 li
273.938 234.797 li
293.214 234.797 li
293.214 234.292 li
312.489 234.292 li
312.489 232.186 li
331.765 232.186 li
331.765 230.072 li
351.04 230.072 li
351.04 231.76 li
369.545 231.76 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
225.749 240.12 mo
225.749 238.909 li
.75021 .679683 .670222 .90164 cmyk
@
225.749 238.909 mo
225.749 237.698 li
@
224.801 240.12 mo
226.697 240.12 li
@
224.801 237.698 mo
226.697 237.698 li
@
.75 lw
[] 0 dsh
224.749 238.909 mo
225.749 238.909 li
@
1.5 lw
[1 2 ] 0 dsh
245.025 239.982 mo
245.025 239.31 li
@
245.025 239.31 mo
245.025 238.639 li
@
244.077 239.982 mo
245.973 239.982 li
@
244.077 238.639 mo
245.973 238.639 li
@
.75 lw
[] 0 dsh
244.025 239.31 mo
245.025 239.31 li
@
1.5 lw
[1 2 ] 0 dsh
264.3 240.578 mo
264.3 240.101 li
@
264.3 240.101 mo
264.3 239.623 li
@
263.352 240.578 mo
265.248 240.578 li
@
263.352 239.623 mo
265.248 239.623 li
@
.75 lw
[] 0 dsh
263.3 240.101 mo
264.3 240.101 li
@
1.5 lw
[1 2 ] 0 dsh
283.576 237.061 mo
283.576 236.539 li
@
283.576 236.539 mo
283.576 236.016 li
@
282.628 237.061 mo
284.524 237.061 li
@
282.628 236.016 mo
284.524 236.016 li
@
.75 lw
[] 0 dsh
282.576 236.539 mo
283.576 236.539 li
@
1.5 lw
[1 2 ] 0 dsh
302.851 233.589 mo
302.851 233.09 li
@
302.851 233.09 mo
302.851 232.591 li
@
301.903 233.589 mo
303.799 233.589 li
@
301.903 232.591 mo
303.799 232.591 li
@
.75 lw
[] 0 dsh
301.851 233.09 mo
302.851 233.09 li
@
1.5 lw
[1 2 ] 0 dsh
322.127 230.288 mo
322.127 229.651 li
@
322.127 229.651 mo
322.127 229.014 li
@
321.179 230.288 mo
323.075 230.288 li
@
321.179 229.014 mo
323.075 229.014 li
@
.75 lw
[] 0 dsh
321.127 229.651 mo
322.127 229.651 li
@
1.5 lw
[1 2 ] 0 dsh
341.403 223.899 mo
341.403 222.957 li
@
341.403 222.957 mo
341.403 222.015 li
@
340.455 223.899 mo
342.351 223.899 li
@
340.455 222.015 mo
342.351 222.015 li
@
.75 lw
[] 0 dsh
340.403 222.957 mo
341.403 222.957 li
@
1.5 lw
[1 2 ] 0 dsh
360.678 219.63 mo
360.678 217.028 li
@
360.678 217.028 mo
360.678 214.427 li
@
359.73 219.63 mo
361.626 219.63 li
@
359.73 214.427 mo
361.626 214.427 li
@
.75 lw
[] 0 dsh
359.678 217.028 mo
360.678 217.028 li
@
1.5 lw
[1 2 ] 0 dsh
199.92 252.571 mo
216.111 252.571 li
216.111 238.909 li
235.387 238.909 li
235.387 239.31 li
254.662 239.31 li
254.662 240.101 li
273.938 240.101 li
273.938 236.539 li
293.214 236.539 li
293.214 233.09 li
312.489 233.09 li
312.489 229.651 li
331.765 229.651 li
331.765 222.957 li
351.04 222.957 li
351.04 217.028 li
369.545 217.028 li
@
[3 4 1 4 ] 0 dsh
206.473 245.959 mo
206.473 244.545 li
.269902 .816403 0 0 cmyk
@
206.473 244.545 mo
206.473 243.131 li
@
205.525 245.959 mo
207.421 245.959 li
@
205.525 243.131 mo
207.421 243.131 li
@
.75 lw
[] 0 dsh
205.473 244.545 mo
206.473 244.545 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
225.749 217.955 mo
225.749 216.489 li
.269902 .816403 0 0 cmyk
@
225.749 216.489 mo
225.749 215.023 li
@
224.801 217.955 mo
226.697 217.955 li
@
224.801 215.023 mo
226.697 215.023 li
@
.75 lw
[] 0 dsh
224.749 216.489 mo
225.749 216.489 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
245.025 225.509 mo
245.025 224.667 li
.269902 .816403 0 0 cmyk
@
245.025 224.667 mo
245.025 223.825 li
@
244.077 225.509 mo
245.973 225.509 li
@
244.077 223.825 mo
245.973 223.825 li
@
.75 lw
[] 0 dsh
244.025 224.667 mo
245.025 224.667 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
264.3 234.228 mo
264.3 233.704 li
.269902 .816403 0 0 cmyk
@
264.3 233.704 mo
264.3 233.179 li
@
263.352 234.228 mo
265.248 234.228 li
@
263.352 233.179 mo
265.248 233.179 li
@
.75 lw
[] 0 dsh
263.3 233.704 mo
264.3 233.704 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
283.576 234.792 mo
283.576 234.306 li
.269902 .816403 0 0 cmyk
@
283.576 234.306 mo
283.576 233.821 li
@
282.628 234.792 mo
284.524 234.792 li
@
282.628 233.821 mo
284.524 233.821 li
@
.75 lw
[] 0 dsh
282.576 234.306 mo
283.576 234.306 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
302.851 235.029 mo
302.851 234.544 li
.269902 .816403 0 0 cmyk
@
302.851 234.544 mo
302.851 234.059 li
@
301.903 235.029 mo
303.799 235.029 li
@
301.903 234.059 mo
303.799 234.059 li
@
.75 lw
[] 0 dsh
301.851 234.544 mo
302.851 234.544 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
322.127 237.549 mo
322.127 237.072 li
.269902 .816403 0 0 cmyk
@
322.127 237.072 mo
322.127 236.595 li
@
321.179 237.549 mo
323.075 237.549 li
@
321.179 236.595 mo
323.075 236.595 li
@
.75 lw
[] 0 dsh
321.127 237.072 mo
322.127 237.072 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
341.403 239.528 mo
341.403 238.98 li
.269902 .816403 0 0 cmyk
@
341.403 238.98 mo
341.403 238.433 li
@
340.455 239.528 mo
342.351 239.528 li
@
340.455 238.433 mo
342.351 238.433 li
@
.75 lw
[] 0 dsh
340.403 238.98 mo
341.403 238.98 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
360.678 234.879 mo
360.678 230.982 li
.269902 .816403 0 0 cmyk
@
360.678 230.982 mo
360.678 227.084 li
@
359.73 234.879 mo
361.626 234.879 li
@
359.73 227.084 mo
361.626 227.084 li
@
.75 lw
[] 0 dsh
359.678 230.982 mo
360.678 230.982 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
199.92 244.545 mo
216.111 244.545 li
216.111 216.489 li
235.387 216.489 li
235.387 224.667 li
254.662 224.667 li
254.662 233.704 li
273.938 233.704 li
273.938 234.306 li
293.214 234.306 li
293.214 234.544 li
312.489 234.544 li
312.489 237.072 li
331.765 237.072 li
331.765 238.98 li
351.04 238.98 li
351.04 230.982 li
369.545 230.982 li
.269902 .816403 0 0 cmyk
@
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
0 0 0 0 cmyk
ef
.4 lw
[] 0 dsh
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
@
369.545 252.571 mo
539.624 252.571 li
539.624 198.305 li
369.545 198.305 li
cp
ef
369.545 252.571 mo
539.624 252.571 li
539.624 198.305 li
369.545 198.305 li
cp
@
.75 lw
369.545 252.571 mo
539.624 252.571 li
539.624 198.305 li
369.545 198.305 li
cp
.75021 .679683 .670222 .90164 cmyk
@
369.545 252.571 mo
372.637 252.571 li
375.73 252.571 li
378.822 252.571 li
381.914 252.571 li
385.007 252.571 li
388.099 252.571 li
391.191 252.571 li
394.284 252.571 li
397.376 252.571 li
400.468 252.571 li
403.561 252.571 li
406.653 252.571 li
409.745 252.571 li
412.838 252.571 li
415.93 252.571 li
419.022 252.571 li
422.115 252.571 li
425.207 252.571 li
428.299 252.571 li
431.392 252.571 li
434.484 252.571 li
437.576 252.571 li
440.669 252.571 li
443.761 252.571 li
446.853 252.571 li
449.946 252.571 li
453.038 252.571 li
456.13 252.571 li
459.223 252.571 li
462.315 252.571 li
465.407 252.571 li
468.5 252.571 li
471.592 252.571 li
474.685 252.571 li
477.777 252.571 li
480.869 252.571 li
483.962 252.571 li
487.054 252.571 li
490.146 252.571 li
493.239 252.571 li
496.331 252.571 li
499.423 252.571 li
502.516 252.571 li
505.608 252.571 li
508.7 252.571 li
511.793 252.571 li
514.885 252.571 li
517.977 252.571 li
521.07 252.571 li
524.162 252.571 li
527.254 252.571 li
530.347 252.571 li
533.439 252.571 li
536.531 252.571 li
539.624 252.571 li
1 .978058 .0451667 .0556954 cmyk
@
369.545 252.571 mo
539.624 252.571 li
.75021 .679683 .670222 .90164 cmyk
@
405.107 249.858 mo
405.107 252.571 li
@
412.838 251.215 mo
412.838 252.571 li
@
420.569 251.215 mo
420.569 252.571 li
@
428.299 251.215 mo
428.299 252.571 li
@
436.03 251.215 mo
436.03 252.571 li
@
443.761 249.858 mo
443.761 252.571 li
@
451.492 251.215 mo
451.492 252.571 li
@
459.223 251.215 mo
459.223 252.571 li
@
466.954 251.215 mo
466.954 252.571 li
@
474.685 251.215 mo
474.685 252.571 li
@
482.415 249.858 mo
482.415 252.571 li
@
490.146 251.215 mo
490.146 252.571 li
@
497.877 251.215 mo
497.877 252.571 li
@
505.608 251.215 mo
505.608 252.571 li
@
513.339 251.215 mo
513.339 252.571 li
@
521.07 249.858 mo
521.07 252.571 li
@
405.107 249.858 mo
405.107 252.571 li
@
397.376 251.215 mo
397.376 252.571 li
@
389.645 251.215 mo
389.645 252.571 li
@
381.914 251.215 mo
381.914 252.571 li
@
374.183 251.215 mo
374.183 252.571 li
@
521.07 249.858 mo
521.07 252.571 li
@
528.8 251.215 mo
528.8 252.571 li
@
536.531 251.215 mo
536.531 252.571 li
@
grestore
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf396.849 264.1 mo(0.1)[7.41061 3.70532 0 ]xsh434.296 264.1 mo(0.2)[7.41061 3.70532 0 ]xsh473.166 264.1 mo(0.3)[7.41061 3.70532 0 ]xshgsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf512.036 264.1 mo(0.4)[7.41058 3.70532 0 ]xshgrestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [10.4724 0 0 -10.4724 0 0 ]msf534.315 280.69 mo(g)shgrestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [15.7086 0 0 -15.7086 0 0 ]msf523.412 277.372 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 198.305 mo
539.624 198.305 li
@
405.107 201.019 mo
405.107 198.305 li
@
412.838 199.662 mo
412.838 198.305 li
@
420.569 199.662 mo
420.569 198.305 li
@
428.299 199.662 mo
428.299 198.305 li
@
436.03 199.662 mo
436.03 198.305 li
@
443.761 201.019 mo
443.761 198.305 li
@
451.492 199.662 mo
451.492 198.305 li
@
459.223 199.662 mo
459.223 198.305 li
@
466.954 199.662 mo
466.954 198.305 li
@
474.685 199.662 mo
474.685 198.305 li
@
482.415 201.019 mo
482.415 198.305 li
@
490.146 199.662 mo
490.146 198.305 li
@
497.877 199.662 mo
497.877 198.305 li
@
505.608 199.662 mo
505.608 198.305 li
@
513.339 199.662 mo
513.339 198.305 li
@
521.07 201.019 mo
521.07 198.305 li
@
405.107 201.019 mo
405.107 198.305 li
@
397.376 199.662 mo
397.376 198.305 li
@
389.645 199.662 mo
389.645 198.305 li
@
381.914 199.662 mo
381.914 198.305 li
@
374.183 199.662 mo
374.183 198.305 li
@
521.07 201.019 mo
521.07 198.305 li
@
528.8 199.662 mo
528.8 198.305 li
@
536.531 199.662 mo
536.531 198.305 li
@
369.545 252.571 mo
369.545 198.305 li
@
372.606 252.21 mo
369.545 252.21 li
@
371.076 248.592 mo
369.545 248.592 li
@
371.076 244.974 mo
369.545 244.974 li
@
371.076 241.356 mo
369.545 241.356 li
@
371.076 237.739 mo
369.545 237.739 li
@
372.606 234.121 mo
369.545 234.121 li
@
371.076 230.503 mo
369.545 230.503 li
@
371.076 226.885 mo
369.545 226.885 li
@
371.076 223.268 mo
369.545 223.268 li
@
371.076 219.65 mo
369.545 219.65 li
@
372.606 216.032 mo
369.545 216.032 li
@
372.606 252.21 mo
369.545 252.21 li
@
372.606 216.032 mo
369.545 216.032 li
@
371.076 212.415 mo
369.545 212.415 li
@
371.076 208.797 mo
369.545 208.797 li
@
371.076 205.179 mo
369.545 205.179 li
@
371.076 201.561 mo
369.545 201.561 li
@
grestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf353.239 256.041 mo(0.5)[6.08728 3.04367 0 ]xshgrestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf364.141 238.028 mo(1)shgrestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf353.239 220.016 mo(1.5)[6.08728 3.04367 0 ]xshgrestore
gsave
369.545 288.749 mo
539.624 288.749 li
539.624 198.306 li
369.545 198.306 li
cp
clp
SXWSCV+Helvetica*1 [0 -14.2805 -14.2805 0 0 0 ]msf352.291 253.197 mo(MC/Data)[-11.8956 -10.3105 -3.96997 -10.3105 -7.93996 -3.96999 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
539.624 252.571 mo
539.624 198.305 li
@
536.562 252.21 mo
539.624 252.21 li
@
538.093 248.592 mo
539.624 248.592 li
@
538.093 244.974 mo
539.624 244.974 li
@
538.093 241.356 mo
539.624 241.356 li
@
538.093 237.739 mo
539.624 237.739 li
@
536.562 234.121 mo
539.624 234.121 li
@
538.093 230.503 mo
539.624 230.503 li
@
538.093 226.885 mo
539.624 226.885 li
@
538.093 223.268 mo
539.624 223.268 li
@
538.093 219.65 mo
539.624 219.65 li
@
536.562 216.032 mo
539.624 216.032 li
@
536.562 252.21 mo
539.624 252.21 li
@
536.562 216.032 mo
539.624 216.032 li
@
538.093 212.415 mo
539.624 212.415 li
@
538.093 208.797 mo
539.624 208.797 li
@
538.093 205.179 mo
539.624 205.179 li
@
538.093 201.561 mo
539.624 201.561 li
@
376.116 234.102 mo
376.12 234.115 li
376.134 234.115 li
376.123 234.123 li
376.127 234.136 li
376.116 234.128 li
376.105 234.136 li
376.109 234.123 li
376.098 234.115 li
376.112 234.115 li
cp
0 .993988 1 0 cmyk
f
395.443 234.102 mo
395.448 234.115 li
395.461 234.115 li
395.45 234.123 li
395.454 234.136 li
395.443 234.128 li
395.432 234.136 li
395.436 234.123 li
395.425 234.115 li
395.439 234.115 li
cp
f
414.77 234.102 mo
414.775 234.115 li
414.788 234.115 li
414.777 234.123 li
414.782 234.136 li
414.77 234.128 li
414.759 234.136 li
414.764 234.123 li
414.752 234.115 li
414.766 234.115 li
cp
f
434.098 234.102 mo
434.102 234.115 li
434.116 234.115 li
434.104 234.123 li
434.109 234.136 li
434.098 234.128 li
434.086 234.136 li
434.091 234.123 li
434.08 234.115 li
434.093 234.115 li
cp
f
453.425 234.102 mo
453.429 234.115 li
453.443 234.115 li
453.432 234.123 li
453.436 234.136 li
453.425 234.128 li
453.414 234.136 li
453.418 234.123 li
453.407 234.115 li
453.42 234.115 li
cp
f
472.752 234.102 mo
472.756 234.115 li
472.77 234.115 li
472.759 234.123 li
472.763 234.136 li
472.752 234.128 li
472.741 234.136 li
472.745 234.123 li
472.734 234.115 li
472.748 234.115 li
cp
f
492.079 234.102 mo
492.083 234.115 li
492.097 234.115 li
492.086 234.123 li
492.09 234.136 li
492.079 234.128 li
492.068 234.136 li
492.072 234.123 li
492.061 234.115 li
492.075 234.115 li
cp
f
511.406 234.102 mo
511.41 234.115 li
511.424 234.115 li
511.413 234.123 li
511.417 234.136 li
511.406 234.128 li
511.395 234.136 li
511.399 234.123 li
511.388 234.115 li
511.402 234.115 li
cp
f
530.733 234.102 mo
530.737 234.115 li
530.751 234.115 li
530.74 234.123 li
530.744 234.136 li
530.733 234.128 li
530.722 234.136 li
530.726 234.123 li
530.715 234.115 li
530.729 234.115 li
cp
f
376.116 212.073 mo
395.443 222.766 li
414.77 229.066 li
434.098 232.395 li
453.425 232.974 li
472.752 230.333 li
492.079 229.02 li
511.406 229.662 li
530.733 210.508 li
530.733 252.571 li
511.406 238.58 li
492.079 239.222 li
472.752 237.909 li
453.425 235.268 li
434.098 235.846 li
414.77 239.176 li
395.443 245.476 li
376.116 252.571 li
0 .241001 .107607 0 cmyk
ef
1.5 lw
[3 3 ] 0 dsh
369.545 234.121 mo
536.531 234.121 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
376.116 252.571 mo
376.116 251.094 li
.883665 .769161 0 0 cmyk
@
376.116 251.094 mo
376.116 249.479 li
@
375.168 252.571 mo
377.064 252.571 li
@
375.168 249.479 mo
377.064 249.479 li
@
.75 lw
375.116 251.094 mo
376.116 251.094 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
395.443 233.741 mo
395.443 232.033 li
.883665 .769161 0 0 cmyk
@
395.443 232.033 mo
395.443 230.326 li
@
394.495 233.741 mo
396.391 233.741 li
@
394.495 230.326 mo
396.391 230.326 li
@
.75 lw
394.443 232.033 mo
395.443 232.033 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
414.77 235.386 mo
414.77 234.242 li
.883665 .769161 0 0 cmyk
@
414.77 234.242 mo
414.77 233.098 li
@
413.822 235.386 mo
415.718 235.386 li
@
413.822 233.098 mo
415.718 233.098 li
@
.75 lw
413.77 234.242 mo
414.77 234.242 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
434.098 236.98 mo
434.098 236.038 li
.883665 .769161 0 0 cmyk
@
434.098 236.038 mo
434.098 235.096 li
@
433.15 236.98 mo
435.046 236.98 li
@
433.15 235.096 mo
435.046 235.096 li
@
.75 lw
433.098 236.038 mo
434.098 236.038 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
453.425 235.594 mo
453.425 234.602 li
.883665 .769161 0 0 cmyk
@
453.425 234.602 mo
453.425 233.61 li
@
452.477 235.594 mo
454.373 235.594 li
@
452.477 233.61 mo
454.373 233.61 li
@
.75 lw
452.425 234.602 mo
453.425 234.602 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
472.752 234.386 mo
472.752 233.408 li
.883665 .769161 0 0 cmyk
@
472.752 233.408 mo
472.752 232.431 li
@
471.804 234.386 mo
473.7 234.386 li
@
471.804 232.431 mo
473.7 232.431 li
@
.75 lw
471.752 233.408 mo
472.752 233.408 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
492.079 233.381 mo
492.079 232.174 li
.883665 .769161 0 0 cmyk
@
492.079 232.174 mo
492.079 230.968 li
@
491.131 233.381 mo
493.027 233.381 li
@
491.131 230.968 mo
493.027 230.968 li
@
.75 lw
491.079 232.174 mo
492.079 232.174 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
511.406 231.964 mo
511.406 230.278 li
.883665 .769161 0 0 cmyk
@
511.406 230.278 mo
511.406 228.592 li
@
510.458 231.964 mo
512.354 231.964 li
@
510.458 228.592 mo
512.354 228.592 li
@
.75 lw
510.406 230.278 mo
511.406 230.278 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
530.733 242.469 mo
530.733 229.613 li
.883665 .769161 0 0 cmyk
@
530.733 229.613 mo
530.733 216.756 li
@
529.785 242.469 mo
531.681 242.469 li
@
529.785 216.756 mo
531.681 216.756 li
@
.75 lw
529.733 229.613 mo
530.733 229.613 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
369.545 251.094 mo
385.78 251.094 li
385.78 232.033 li
405.107 232.033 li
405.107 234.242 li
424.434 234.242 li
424.434 236.038 li
443.761 236.038 li
443.761 234.602 li
463.088 234.602 li
463.088 233.408 li
482.415 233.408 li
482.415 232.174 li
501.743 232.174 li
501.743 230.278 li
521.07 230.278 li
521.07 229.613 li
539.624 229.613 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
395.443 241.251 mo
395.443 240.615 li
.75021 .679683 .670222 .90164 cmyk
@
395.443 240.615 mo
395.443 239.979 li
@
394.495 241.251 mo
396.391 241.251 li
@
394.495 239.979 mo
396.391 239.979 li
@
.75 lw
[] 0 dsh
394.443 240.615 mo
395.443 240.615 li
@
1.5 lw
[1 2 ] 0 dsh
414.77 240.23 mo
414.77 239.762 li
@
414.77 239.762 mo
414.77 239.295 li
@
413.822 240.23 mo
415.718 240.23 li
@
413.822 239.295 mo
415.718 239.295 li
@
.75 lw
[] 0 dsh
413.77 239.762 mo
414.77 239.762 li
@
1.5 lw
[1 2 ] 0 dsh
434.098 239.833 mo
434.098 239.466 li
@
434.098 239.466 mo
434.098 239.099 li
@
433.15 239.833 mo
435.046 239.833 li
@
433.15 239.099 mo
435.046 239.099 li
@
.75 lw
[] 0 dsh
433.098 239.466 mo
434.098 239.466 li
@
1.5 lw
[1 2 ] 0 dsh
453.425 235.403 mo
453.425 234.983 li
@
453.425 234.983 mo
453.425 234.562 li
@
452.477 235.403 mo
454.373 235.403 li
@
452.477 234.562 mo
454.373 234.562 li
@
.75 lw
[] 0 dsh
452.425 234.983 mo
453.425 234.983 li
@
1.5 lw
[1 2 ] 0 dsh
472.752 230.027 mo
472.752 229.556 li
@
472.752 229.556 mo
472.752 229.084 li
@
471.804 230.027 mo
473.7 230.027 li
@
471.804 229.084 mo
473.7 229.084 li
@
.75 lw
[] 0 dsh
471.752 229.556 mo
472.752 229.556 li
@
1.5 lw
[1 2 ] 0 dsh
492.079 226.975 mo
492.079 226.4 li
@
492.079 226.4 mo
492.079 225.826 li
@
491.131 226.975 mo
493.027 226.975 li
@
491.131 225.826 mo
493.027 225.826 li
@
.75 lw
[] 0 dsh
491.079 226.4 mo
492.079 226.4 li
@
1.5 lw
[1 2 ] 0 dsh
511.406 224.301 mo
511.406 223.455 li
@
511.406 223.455 mo
511.406 222.61 li
@
510.458 224.301 mo
512.354 224.301 li
@
510.458 222.61 mo
512.354 222.61 li
@
.75 lw
[] 0 dsh
510.406 223.455 mo
511.406 223.455 li
@
1.5 lw
[1 2 ] 0 dsh
530.733 231.878 mo
530.733 228.474 li
@
530.733 228.474 mo
530.733 225.07 li
@
529.785 231.878 mo
531.681 231.878 li
@
529.785 225.07 mo
531.681 225.07 li
@
.75 lw
[] 0 dsh
529.733 228.474 mo
530.733 228.474 li
@
1.5 lw
[1 2 ] 0 dsh
369.545 252.571 mo
385.78 252.571 li
385.78 240.615 li
405.107 240.615 li
405.107 239.762 li
424.434 239.762 li
424.434 239.466 li
443.761 239.466 li
443.761 234.983 li
463.088 234.983 li
463.088 229.556 li
482.415 229.556 li
482.415 226.4 li
501.743 226.4 li
501.743 223.455 li
521.07 223.455 li
521.07 228.474 li
539.624 228.474 li
@
[3 4 1 4 ] 0 dsh
376.116 236.752 mo
376.116 234.79 li
.269902 .816403 0 0 cmyk
@
376.116 234.79 mo
376.116 232.827 li
@
375.168 236.752 mo
377.064 236.752 li
@
375.168 232.827 mo
377.064 232.827 li
@
.75 lw
[] 0 dsh
375.116 234.79 mo
376.116 234.79 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
395.443 223.672 mo
395.443 222.504 li
.269902 .816403 0 0 cmyk
@
395.443 222.504 mo
395.443 221.336 li
@
394.495 223.672 mo
396.391 223.672 li
@
394.495 221.336 mo
396.391 221.336 li
@
.75 lw
[] 0 dsh
394.443 222.504 mo
395.443 222.504 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
414.77 229.626 mo
414.77 228.739 li
.269902 .816403 0 0 cmyk
@
414.77 228.739 mo
414.77 227.853 li
@
413.822 229.626 mo
415.718 229.626 li
@
413.822 227.853 mo
415.718 227.853 li
@
.75 lw
[] 0 dsh
413.77 228.739 mo
414.77 228.739 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
434.098 234.532 mo
434.098 233.688 li
.269902 .816403 0 0 cmyk
@
434.098 233.688 mo
434.098 232.845 li
@
433.15 234.532 mo
435.046 234.532 li
@
433.15 232.845 mo
435.046 232.845 li
@
.75 lw
[] 0 dsh
433.098 233.688 mo
434.098 233.688 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
453.425 236.175 mo
453.425 235.36 li
.269902 .816403 0 0 cmyk
@
453.425 235.36 mo
453.425 234.545 li
@
452.477 236.175 mo
454.373 236.175 li
@
452.477 234.545 mo
454.373 234.545 li
@
.75 lw
[] 0 dsh
452.425 235.36 mo
453.425 235.36 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
472.752 237.057 mo
472.752 236.426 li
.269902 .816403 0 0 cmyk
@
472.752 236.426 mo
472.752 235.796 li
@
471.804 237.057 mo
473.7 237.057 li
@
471.804 235.796 mo
473.7 235.796 li
@
.75 lw
[] 0 dsh
471.752 236.426 mo
472.752 236.426 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
492.079 239.432 mo
492.079 238.776 li
.269902 .816403 0 0 cmyk
@
492.079 238.776 mo
492.079 238.12 li
@
491.131 239.432 mo
493.027 239.432 li
@
491.131 238.12 mo
493.027 238.12 li
@
.75 lw
[] 0 dsh
491.079 238.776 mo
492.079 238.776 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
511.406 238.142 mo
511.406 237.141 li
.269902 .816403 0 0 cmyk
@
511.406 237.141 mo
511.406 236.14 li
@
510.458 238.142 mo
512.354 238.142 li
@
510.458 236.14 mo
512.354 236.14 li
@
.75 lw
[] 0 dsh
510.406 237.141 mo
511.406 237.141 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
530.733 243.285 mo
530.733 238.842 li
.269902 .816403 0 0 cmyk
@
530.733 238.842 mo
530.733 234.399 li
@
529.785 243.285 mo
531.681 243.285 li
@
529.785 234.399 mo
531.681 234.399 li
@
.75 lw
[] 0 dsh
529.733 238.842 mo
530.733 238.842 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
369.545 234.79 mo
385.78 234.79 li
385.78 222.504 li
405.107 222.504 li
405.107 228.739 li
424.434 228.739 li
424.434 233.688 li
443.761 233.688 li
443.761 235.36 li
463.088 235.36 li
463.088 236.426 li
482.415 236.426 li
482.415 238.776 li
501.743 238.776 li
501.743 237.141 li
521.07 237.141 li
521.07 238.842 li
539.624 238.842 li
.269902 .816403 0 0 cmyk
@
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
0 0 0 0 cmyk
ef
.4 lw
[] 0 dsh
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
@
40.726 469.635 mo
199.466 469.635 li
199.466 290.557 li
40.726 290.557 li
cp
ef
40.726 469.635 mo
199.466 469.635 li
199.466 290.557 li
40.726 290.557 li
cp
@
.75 lw
40.726 469.635 mo
199.466 469.635 li
199.466 290.557 li
40.726 290.557 li
cp
.75021 .679683 .670222 .90164 cmyk
@
40.726 469.635 mo
43.6122 469.635 li
46.4984 469.635 li
49.3846 469.635 li
52.2708 469.635 li
55.157 469.635 li
58.0431 469.635 li
60.9293 469.635 li
63.8155 469.635 li
66.7017 469.635 li
69.5879 469.635 li
72.4741 469.635 li
75.3603 469.635 li
78.2464 469.635 li
81.1326 469.635 li
84.0188 469.635 li
86.905 469.635 li
89.7912 469.635 li
92.6774 469.635 li
95.5635 469.635 li
98.4497 469.635 li
101.336 469.635 li
104.222 469.635 li
107.108 469.635 li
109.994 469.635 li
112.881 469.635 li
115.767 469.635 li
118.653 469.635 li
121.539 469.635 li
124.425 469.635 li
127.312 469.635 li
130.198 469.635 li
133.084 469.635 li
135.97 469.635 li
138.856 469.635 li
141.743 469.635 li
144.629 469.635 li
147.515 469.635 li
150.401 469.635 li
153.287 469.635 li
156.173 469.635 li
159.06 469.635 li
161.946 469.635 li
164.832 469.635 li
167.718 469.635 li
170.604 469.635 li
173.491 469.635 li
176.377 469.635 li
179.263 469.635 li
182.149 469.635 li
185.035 469.635 li
187.921 469.635 li
190.808 469.635 li
193.694 469.635 li
196.58 469.635 li
199.466 469.635 li
1 .978058 .0451667 .0556954 cmyk
@
40.726 469.635 mo
199.466 469.635 li
.75021 .679683 .670222 .90164 cmyk
@
73.9172 465.294 mo
73.9172 469.635 li
@
81.1326 467.464 mo
81.1326 469.635 li
@
88.3481 467.464 mo
88.3481 469.635 li
@
95.5635 467.464 mo
95.5635 469.635 li
@
102.779 467.464 mo
102.779 469.635 li
@
109.994 465.294 mo
109.994 469.635 li
@
117.21 467.464 mo
117.21 469.635 li
@
124.425 467.464 mo
124.425 469.635 li
@
131.641 467.464 mo
131.641 469.635 li
@
138.856 467.464 mo
138.856 469.635 li
@
146.072 465.294 mo
146.072 469.635 li
@
153.287 467.464 mo
153.287 469.635 li
@
160.503 467.464 mo
160.503 469.635 li
@
167.718 467.464 mo
167.718 469.635 li
@
174.934 467.464 mo
174.934 469.635 li
@
182.149 465.294 mo
182.149 469.635 li
@
73.9172 465.294 mo
73.9172 469.635 li
@
66.7017 467.464 mo
66.7017 469.635 li
@
59.4862 467.464 mo
59.4862 469.635 li
@
52.2708 467.464 mo
52.2708 469.635 li
@
45.0553 467.464 mo
45.0553 469.635 li
@
182.149 465.294 mo
182.149 469.635 li
@
189.365 467.464 mo
189.365 469.635 li
@
196.58 467.464 mo
196.58 469.635 li
@
grestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9197 0 0 -10.9197 0 0 ]msf66.9299 479.779 mo(0.1)[6.07135 3.03568 0 ]xshgrestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9197 0 0 -10.9197 0 0 ]msf102.007 479.779 mo(0.2)[6.07135 3.03568 0 ]xshgrestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9197 0 0 -10.9197 0 0 ]msf138.033 479.779 mo(0.3)[6.07135 3.03568 0 ]xshgrestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9197 0 0 -10.9197 0 0 ]msf174.533 479.779 mo(0.4)[6.07135 3.03568 0 ]xshgrestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [9.02058 0 0 -9.02058 0 0 ]msf121.916 488.786 mo(g)shgrestore
gsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.2935 0 0 -13.2935 0 0 ]msf112.91 485.467 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
40.726 290.558 mo
199.466 290.558 li
@
73.9172 294.899 mo
73.9172 290.558 li
@
81.1326 292.728 mo
81.1326 290.558 li
@
88.3481 292.728 mo
88.3481 290.558 li
@
95.5635 292.728 mo
95.5635 290.558 li
@
102.779 292.728 mo
102.779 290.558 li
@
109.994 294.899 mo
109.994 290.558 li
@
117.21 292.728 mo
117.21 290.558 li
@
124.425 292.728 mo
124.425 290.558 li
@
131.641 292.728 mo
131.641 290.558 li
@
138.856 292.728 mo
138.856 290.558 li
@
146.072 294.899 mo
146.072 290.558 li
@
153.287 292.728 mo
153.287 290.558 li
@
160.503 292.728 mo
160.503 290.558 li
@
167.718 292.728 mo
167.718 290.558 li
@
174.934 292.728 mo
174.934 290.558 li
@
182.149 294.899 mo
182.149 290.558 li
@
73.9172 294.899 mo
73.9172 290.558 li
@
66.7017 292.728 mo
66.7017 290.558 li
@
59.4862 292.728 mo
59.4862 290.558 li
@
52.2708 292.728 mo
52.2708 290.558 li
@
45.0553 292.728 mo
45.0553 290.558 li
@
182.149 294.899 mo
182.149 290.558 li
@
189.365 292.728 mo
189.365 290.558 li
@
196.58 292.728 mo
196.58 290.558 li
@
40.726 469.635 mo
40.726 290.558 li
@
46.6193 443.904 mo
40.726 443.904 li
@
43.6727 438.706 mo
40.726 438.706 li
@
43.6727 433.508 mo
40.726 433.508 li
@
43.6727 428.309 mo
40.726 428.309 li
@
43.6727 423.111 mo
40.726 423.111 li
@
46.6193 417.913 mo
40.726 417.913 li
@
43.6727 412.715 mo
40.726 412.715 li
@
43.6727 407.517 mo
40.726 407.517 li
@
43.6727 402.319 mo
40.726 402.319 li
@
43.6727 397.12 mo
40.726 397.12 li
@
46.6193 391.922 mo
40.726 391.922 li
@
43.6727 386.724 mo
40.726 386.724 li
@
43.6727 381.526 mo
40.726 381.526 li
@
43.6727 376.328 mo
40.726 376.328 li
@
43.6727 371.129 mo
40.726 371.129 li
@
46.6193 365.931 mo
40.726 365.931 li
@
43.6727 360.733 mo
40.726 360.733 li
@
43.6727 355.535 mo
40.726 355.535 li
@
43.6727 350.337 mo
40.726 350.337 li
@
43.6727 345.138 mo
40.726 345.138 li
@
46.6193 339.94 mo
40.726 339.94 li
@
43.6727 334.742 mo
40.726 334.742 li
@
43.6727 329.544 mo
40.726 329.544 li
@
43.6727 324.346 mo
40.726 324.346 li
@
43.6727 319.148 mo
40.726 319.148 li
@
46.6193 313.949 mo
40.726 313.949 li
@
46.6193 443.904 mo
40.726 443.904 li
@
43.6727 449.102 mo
40.726 449.102 li
@
43.6727 454.3 mo
40.726 454.3 li
@
43.6727 459.499 mo
40.726 459.499 li
@
43.6727 464.697 mo
40.726 464.697 li
@
46.6193 313.949 mo
40.726 313.949 li
@
43.6727 308.751 mo
40.726 308.751 li
@
43.6727 303.553 mo
40.726 303.553 li
@
43.6727 298.355 mo
40.726 298.355 li
@
43.6727 293.157 mo
40.726 293.157 li
@
grestore
SXWSCV+Helvetica*1 [13.2935 0 0 -13.2935 0 0 ]msf34.6965 448.968 mo(1)sh32.3264 422.897 mo(2)sh32.3264 396.351 mo(3)sh32.3264 370.754 mo(4)sh32.3264 344.209 mo(5)sh32.3264 318.612 mo(6)shSXWSCV+Helvetica*1 [0 -12.344 -12.344 0 0 0 ]msf23.32 327.618 mo(g)shgsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5159 -18.5159 0 0 0 ]msf18.5798 356.06 mo(/dR)[-5.14743 -10.2948 0 ]yshgrestore
SXWSCV+Helvetica*1 [0 -12.344 -12.344 0 0 0 ]msf24.268 369.332 mo(jet)[-2.74039 -6.86325 0 ]yshgsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5159 -18.5159 0 0 0 ]msf18.5798 396.825 mo( dN)[-5.14743 -10.2948 0 ]yshgrestore
SXWSCV+Helvetica*1 [0 -12.344 -12.344 0 0 0 ]msf24.268 410.098 mo(jet)[-2.74039 -6.86325 0 ]yshgsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5159 -18.5159 0 0 0 ]msf18.5798 437.591 mo(1/N)[-10.2949 -5.1474 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
199.466 469.635 mo
199.466 290.558 li
@
193.573 443.904 mo
199.466 443.904 li
@
196.52 438.706 mo
199.466 438.706 li
@
196.52 433.508 mo
199.466 433.508 li
@
196.52 428.309 mo
199.466 428.309 li
@
196.52 423.111 mo
199.466 423.111 li
@
193.573 417.913 mo
199.466 417.913 li
@
196.52 412.715 mo
199.466 412.715 li
@
196.52 407.517 mo
199.466 407.517 li
@
196.52 402.319 mo
199.466 402.319 li
@
196.52 397.12 mo
199.466 397.12 li
@
193.573 391.922 mo
199.466 391.922 li
@
196.52 386.724 mo
199.466 386.724 li
@
196.52 381.526 mo
199.466 381.526 li
@
196.52 376.328 mo
199.466 376.328 li
@
196.52 371.129 mo
199.466 371.129 li
@
193.573 365.931 mo
199.466 365.931 li
@
196.52 360.733 mo
199.466 360.733 li
@
196.52 355.535 mo
199.466 355.535 li
@
196.52 350.337 mo
199.466 350.337 li
@
196.52 345.138 mo
199.466 345.138 li
@
193.573 339.94 mo
199.466 339.94 li
@
196.52 334.742 mo
199.466 334.742 li
@
196.52 329.544 mo
199.466 329.544 li
@
196.52 324.346 mo
199.466 324.346 li
@
196.52 319.148 mo
199.466 319.148 li
@
193.573 313.949 mo
199.466 313.949 li
@
193.573 443.904 mo
199.466 443.904 li
@
196.52 449.102 mo
199.466 449.102 li
@
196.52 454.3 mo
199.466 454.3 li
@
196.52 459.499 mo
199.466 459.499 li
@
196.52 464.697 mo
199.466 464.697 li
@
193.573 313.949 mo
199.466 313.949 li
@
196.52 308.751 mo
199.466 308.751 li
@
196.52 303.553 mo
199.466 303.553 li
@
196.52 298.355 mo
199.466 298.355 li
@
196.52 293.157 mo
199.466 293.157 li
@
46.8592 445.982 mo
47.7106 448.603 li
50.4657 448.603 li
48.2368 450.222 li
49.0881 452.843 li
46.8592 451.223 li
44.6302 452.843 li
45.4816 450.222 li
43.2527 448.603 li
46.0078 448.603 li
cp
0 .993988 1 0 cmyk
f
64.8978 414.577 mo
65.7492 417.197 li
68.5043 417.197 li
66.2754 418.816 li
67.1268 421.437 li
64.8978 419.817 li
62.6689 421.437 li
63.5203 418.816 li
61.2913 417.197 li
64.0465 417.197 li
cp
f
82.9365 375.365 mo
83.7879 377.985 li
86.543 377.985 li
84.3141 379.605 li
85.1655 382.225 li
82.9365 380.606 li
80.7075 382.225 li
81.5589 379.605 li
79.33 377.985 li
82.0851 377.985 li
cp
f
100.975 355.587 mo
101.827 358.207 li
104.582 358.207 li
102.353 359.827 li
103.204 362.447 li
100.975 360.828 li
98.7462 362.447 li
99.5976 359.827 li
97.3686 358.207 li
100.124 358.207 li
cp
f
119.014 377.742 mo
119.865 380.362 li
122.62 380.362 li
120.391 381.981 li
121.243 384.602 li
119.014 382.982 li
116.785 384.602 li
117.636 381.981 li
115.407 380.362 li
118.162 380.362 li
cp
f
137.052 394.057 mo
137.904 396.677 li
140.659 396.677 li
138.43 398.296 li
139.281 400.917 li
137.052 399.297 li
134.823 400.917 li
135.675 398.296 li
133.446 396.677 li
136.201 396.677 li
cp
f
155.091 411.543 mo
155.942 414.163 li
158.698 414.163 li
156.469 415.783 li
157.32 418.403 li
155.091 416.783 li
152.862 418.403 li
153.714 415.783 li
151.485 414.163 li
154.24 414.163 li
cp
f
173.13 435.956 mo
173.981 438.576 li
176.736 438.576 li
174.507 440.196 li
175.359 442.816 li
173.13 441.197 li
170.901 442.816 li
171.752 440.196 li
169.523 438.576 li
172.278 438.576 li
cp
f
191.168 464.392 mo
192.02 467.012 li
194.775 467.012 li
192.546 468.632 li
193.397 471.252 li
191.168 469.632 li
188.939 471.252 li
189.791 468.632 li
187.562 467.012 li
190.317 467.012 li
cp
f
46.8592 442.007 mo
64.8978 410.714 li
82.9365 371.727 li
100.975 354.409 li
119.014 376.265 li
137.052 389.402 li
155.091 409.369 li
173.13 436.167 li
191.168 467.256 li
191.168 469.112 li
173.13 443.329 li
155.091 421.301 li
137.052 406.295 li
119.014 386.803 li
100.975 364.349 li
82.9365 386.588 li
64.8978 426.024 li
46.8592 457.542 li
0 .241001 .107607 0 cmyk
ef
46.8592 443.138 mo
48.3491 447.724 li
53.1706 447.724 li
49.2699 450.558 li
50.7599 455.144 li
46.8592 452.309 li
42.9585 455.144 li
44.4484 450.558 li
40.5478 447.724 li
45.3693 447.724 li
cp
0 .993988 1 0 cmyk
f
64.8978 411.732 mo
66.3877 416.318 li
71.2092 416.318 li
67.3086 419.152 li
68.7985 423.738 li
64.8978 420.904 li
60.9972 423.738 li
62.4871 419.152 li
58.5865 416.318 li
63.4079 416.318 li
cp
f
82.9365 372.521 mo
84.4264 377.107 li
89.2479 377.107 li
85.3473 379.941 li
86.8372 384.526 li
82.9365 381.692 li
79.0358 384.526 li
80.5257 379.941 li
76.6251 377.107 li
81.4466 377.107 li
cp
f
100.975 352.743 mo
102.465 357.328 li
107.287 357.328 li
103.386 360.162 li
104.876 364.748 li
100.975 361.914 li
97.0745 364.748 li
98.5644 360.162 li
94.6638 357.328 li
99.4852 357.328 li
cp
f
119.014 374.897 mo
120.504 379.483 li
125.325 379.483 li
121.425 382.317 li
122.914 386.903 li
119.014 384.069 li
115.113 386.903 li
116.603 382.317 li
112.702 379.483 li
117.524 379.483 li
cp
f
137.052 391.212 mo
138.542 395.798 li
143.364 395.798 li
139.463 398.632 li
140.953 403.218 li
137.052 400.384 li
133.152 403.218 li
134.642 398.632 li
130.741 395.798 li
135.563 395.798 li
cp
f
155.091 408.699 mo
156.581 413.284 li
161.402 413.284 li
157.502 416.118 li
158.992 420.704 li
155.091 417.87 li
151.19 420.704 li
152.68 416.118 li
148.78 413.284 li
153.601 413.284 li
cp
f
173.13 433.112 mo
174.62 437.697 li
179.441 437.697 li
175.541 440.532 li
177.03 445.117 li
173.13 442.283 li
169.229 445.117 li
170.719 440.532 li
166.818 437.697 li
171.64 437.697 li
cp
f
191.168 461.548 mo
192.658 466.133 li
197.48 466.133 li
193.579 468.967 li
195.069 473.553 li
191.168 470.719 li
187.268 473.553 li
188.758 468.967 li
184.857 466.133 li
189.678 466.133 li
cp
f
1.5 lw
46.8592 458.353 mo
49.6353 450.578 li
52.8325 441.913 li
56.0552 433.492 li
59.2691 425.407 li
62.3971 417.835 li
64.8978 411.992 li
71.8612 395.834 li
74.2159 390.636 li
76.2552 386.407 li
78.0935 382.884 li
79.7635 379.971 li
81.2326 377.671 li
82.9365 375.351 li
84.732 373.273 li
86.5762 371.45 li
88.4493 369.912 li
90.3734 368.647 li
92.327 367.678 li
94.3261 366.999 li
96.579 366.599 li
98.5915 366.551 li
100.975 366.854 li
102.37 367.296 li
119.014 382.816 li
121.558 384.529 li
125.214 386.564 li
131.331 389.697 li
134.284 391.481 li
136.596 393.161 li
137.052 393.53 li
140.398 396.445 li
143.859 399.779 li
147.741 403.876 li
151.351 408.004 li
155.091 412.577 li
157.98 416.359 li
161.575 421.404 li
166.167 428.244 li
173.13 439.041 li
179.18 448.659 li
184.409 457.27 li
189.927 466.661 li
191.168 468.817 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
46.8592 461.26 mo
52.8238 449.962 li
57.8382 440.182 li
63.1106 429.62 li
64.8978 425.975 li
66.7498 422.02 li
69.2256 416.348 li
74.6703 403.418 li
76.7177 398.792 li
78.6831 394.666 li
80.1556 391.846 li
81.4512 389.6 li
82.9365 387.339 li
84.5664 385.197 li
86.2872 383.226 li
88.0903 381.454 li
90.0766 379.818 li
91.7838 378.648 li
93.9515 377.442 li
96.5531 376.343 li
99.3569 375.5 li
100.975 375.136 li
102.624 374.948 li
104.616 375.064 li
106.782 375.53 li
109.192 376.345 li
117.467 379.633 li
119.014 380.023 li
121.855 380.444 li
126.638 380.724 li
130.801 380.997 li
133.567 381.434 li
135.73 382.019 li
137.052 382.514 li
142.578 384.806 li
145.465 386.251 li
147.609 387.582 li
149.543 389.042 li
151.389 390.719 li
152.91 392.346 li
154.462 394.264 li
155.091 395.122 li
156.409 397.114 li
157.835 399.56 li
159.4 402.546 li
161.207 406.314 li
173.13 433.482 li
179.062 445.344 li
184.017 454.967 li
189.218 464.789 li
191.168 468.399 li
.75021 .679683 .670222 .90164 cmyk
@
[3 4 1 4 ] 0 dsh
46.8592 452.853 mo
48.7369 446.088 li
50.6311 439.571 li
52.799 432.489 li
54.6466 426.768 li
56.562 421.139 li
58.4736 415.826 li
60.6063 410.257 li
62.4282 405.795 li
64.3543 401.374 li
64.8978 400.181 li
66.7226 396.368 li
68.5981 392.753 li
70.5036 389.385 li
72.412 386.306 li
74.4177 383.372 li
76.4732 380.672 li
78.7172 378.059 li
80.8101 375.921 li
82.9365 374.027 li
85.1547 372.339 li
87.5734 370.847 li
89.628 369.882 li
91.6772 369.211 li
93.659 368.853 li
95.6139 368.791 li
97.524 369.023 li
99.316 369.515 li
100.975 370.214 li
102.375 371.086 li
103.771 372.282 li
105.352 373.964 li
119.014 391.946 li
121.154 393.654 li
123.749 395.359 li
126.722 396.95 li
132.411 399.493 li
135.953 401.154 li
137.052 401.736 li
139.836 403.109 li
146.905 406.119 li
149.54 407.492 li
151.539 408.769 li
153.35 410.163 li
155.091 411.761 li
157.07 413.894 li
159.206 416.515 li
161.577 419.747 li
164.335 423.832 li
173.13 437.838 li
177.651 445.122 li
182.346 453.004 li
186.64 460.499 li
191.168 468.697 li
.269902 .816403 0 0 cmyk
@
46.8592 443.138 mo
48.3491 447.724 li
53.1706 447.724 li
49.2699 450.558 li
50.7599 455.144 li
46.8592 452.309 li
42.9585 455.144 li
44.4484 450.558 li
40.5478 447.724 li
45.3693 447.724 li
cp
0 .993988 1 0 cmyk
f
64.8978 411.732 mo
66.3877 416.318 li
71.2092 416.318 li
67.3086 419.152 li
68.7985 423.738 li
64.8978 420.904 li
60.9972 423.738 li
62.4871 419.152 li
58.5865 416.318 li
63.4079 416.318 li
cp
f
82.9365 372.521 mo
84.4264 377.107 li
89.2479 377.107 li
85.3473 379.941 li
86.8372 384.526 li
82.9365 381.692 li
79.0358 384.526 li
80.5257 379.941 li
76.6251 377.107 li
81.4466 377.107 li
cp
f
100.975 352.743 mo
102.465 357.328 li
107.287 357.328 li
103.386 360.162 li
104.876 364.748 li
100.975 361.914 li
97.0745 364.748 li
98.5644 360.162 li
94.6638 357.328 li
99.4852 357.328 li
cp
f
119.014 374.897 mo
120.504 379.483 li
125.325 379.483 li
121.425 382.317 li
122.914 386.903 li
119.014 384.069 li
115.113 386.903 li
116.603 382.317 li
112.702 379.483 li
117.524 379.483 li
cp
f
137.052 391.212 mo
138.542 395.798 li
143.364 395.798 li
139.463 398.632 li
140.953 403.218 li
137.052 400.384 li
133.152 403.218 li
134.642 398.632 li
130.741 395.798 li
135.563 395.798 li
cp
f
155.091 408.699 mo
156.581 413.284 li
161.402 413.284 li
157.502 416.118 li
158.992 420.704 li
155.091 417.87 li
151.19 420.704 li
152.68 416.118 li
148.78 413.284 li
153.601 413.284 li
cp
f
173.13 433.112 mo
174.62 437.697 li
179.441 437.697 li
175.541 440.532 li
177.03 445.117 li
173.13 442.283 li
169.229 445.117 li
170.719 440.532 li
166.818 437.697 li
171.64 437.697 li
cp
f
191.168 461.548 mo
192.658 466.133 li
197.48 466.133 li
193.579 468.967 li
195.069 473.553 li
191.168 470.719 li
187.268 473.553 li
188.758 468.967 li
184.857 466.133 li
189.678 466.133 li
cp
f
grestore
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 1140 10 <00010036ffdc042105b100300076b609200198220130b80108403c2c171e
25250bf66f0cdf0c020c0c2c13401e0504402c0d252507106f210783290c
8c1663177c006329a71030303002a030b030d030f03004303247314e1076
c418d45d71e44dedf4fde610edd4ed12392f003fed3fed12392f5dfd393d
2f1810cd10ed3130005d0171011417163332363534272623353637363534
262322061721363736373e01333216151407060732171615140223202726
27014e1c3489547d74428e8b375f6158655f02fef60421234b389a70d0ff
4c303427496dfffafecc783f0701bd573969736c8f301bcc02192a805368
806b6c6155483336d7b5805837144365afb8fee9c96bad00>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/three 10 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /three /four /five 6{/.notdef}rp /less /equal 3{/.notdef}rp /A 2{/.notdef}rp /D 2{/.notdef}rp /G 2{/.notdef}rp /J 7{/.notdef}rp /R /S /T /U /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z /.notdef /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [10.9197 0 0 -10.9197 0 0 ]msf166.474 460.344 mo(])shSXWSCX+Helvetica-BoldOblique*1 [10.9197 0 0 -10.9197 0 0 ]msf159.838 460.344 mo(c)shSXWSCW+Helvetica-Bold*1 [10.9197 0 0 -10.9197 0 0 ]msf103.43 460.344 mo( < 30 [GeV/)[3.03568 6.3771 3.03568 6.07135 6.07135 3.03568 3.63617 8.49553 6.07135 7.28352 0 ]xshgsave
1.04102 469.635 mo
199.466 469.635 li
199.466 288.749 li
1.04102 288.749 li
cp
clp
SXWSCW+Helvetica-Bold*1 [7.59628 0 0 -7.59628 0 0 ]msf87.7868 466.507 mo(T,jet)[4.64127 2.11176 2.11177 4.22353 0 ]xshgrestore
SXWSCW+Helvetica-Bold*1 [10.9197 0 0 -10.9197 0 0 ]msf56.5015 460.344 mo(25 < p)[6.07135 6.07135 3.03568 6.3771 3.03568 0 ]xshgsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
0 0 0 0 cmyk
ef
.4 lw
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
@
199.466 469.635 mo
369.545 469.635 li
369.545 290.557 li
199.466 290.557 li
cp
ef
199.466 469.635 mo
369.545 469.635 li
369.545 290.557 li
199.466 290.557 li
cp
@
.75 lw
199.466 469.635 mo
369.545 469.635 li
369.545 290.557 li
199.466 290.557 li
cp
.75021 .679683 .670222 .90164 cmyk
@
199.466 469.635 mo
202.559 469.635 li
205.651 469.635 li
208.743 469.635 li
211.836 469.635 li
214.928 469.635 li
218.02 469.635 li
221.113 469.635 li
224.205 469.635 li
227.297 469.635 li
230.39 469.635 li
233.482 469.635 li
236.574 469.635 li
239.667 469.635 li
242.759 469.635 li
245.851 469.635 li
248.944 469.635 li
252.036 469.635 li
255.128 469.635 li
258.221 469.635 li
261.313 469.635 li
264.405 469.635 li
267.498 469.635 li
270.59 469.635 li
273.682 469.635 li
276.775 469.635 li
279.867 469.635 li
282.959 469.635 li
286.052 469.635 li
289.144 469.635 li
292.236 469.635 li
295.329 469.635 li
298.421 469.635 li
301.513 469.635 li
304.606 469.635 li
307.698 469.635 li
310.79 469.635 li
313.883 469.635 li
316.975 469.635 li
320.067 469.635 li
323.16 469.635 li
326.252 469.635 li
329.344 469.635 li
332.437 469.635 li
335.529 469.635 li
338.622 469.635 li
341.714 469.635 li
344.806 469.635 li
347.899 469.635 li
350.991 469.635 li
354.083 469.635 li
357.176 469.635 li
360.268 469.635 li
363.36 469.635 li
366.453 469.635 li
369.545 469.635 li
1 .978058 .0451667 .0556954 cmyk
@
199.466 469.635 mo
369.545 469.635 li
.75021 .679683 .670222 .90164 cmyk
@
235.028 464.208 mo
235.028 469.635 li
@
242.759 466.922 mo
242.759 469.635 li
@
250.49 466.922 mo
250.49 469.635 li
@
258.221 466.922 mo
258.221 469.635 li
@
265.952 466.922 mo
265.952 469.635 li
@
273.682 464.208 mo
273.682 469.635 li
@
281.413 466.922 mo
281.413 469.635 li
@
289.144 466.922 mo
289.144 469.635 li
@
296.875 466.922 mo
296.875 469.635 li
@
304.606 466.922 mo
304.606 469.635 li
@
312.337 464.208 mo
312.337 469.635 li
@
320.067 466.922 mo
320.067 469.635 li
@
327.798 466.922 mo
327.798 469.635 li
@
335.529 466.922 mo
335.529 469.635 li
@
343.26 466.922 mo
343.26 469.635 li
@
350.991 464.208 mo
350.991 469.635 li
@
235.028 464.208 mo
235.028 469.635 li
@
227.297 466.922 mo
227.297 469.635 li
@
219.566 466.922 mo
219.566 469.635 li
@
211.836 466.922 mo
211.836 469.635 li
@
204.105 466.922 mo
204.105 469.635 li
@
350.991 464.208 mo
350.991 469.635 li
@
358.722 466.922 mo
358.722 469.635 li
@
366.453 466.922 mo
366.453 469.635 li
@
grestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf228.097 479.779 mo(0.1)[6.07529 3.03766 0 ]xshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf266.019 479.779 mo(0.2)[6.07529 3.03766 0 ]xshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf304.414 479.779 mo(0.3)[6.07529 3.03766 0 ]xshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf343.284 479.779 mo(0.4)[6.07529 3.03766 0 ]xshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [9.02653 0 0 -9.02653 0 0 ]msf286.402 488.786 mo(g)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf277.395 485.467 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
199.466 290.558 mo
369.545 290.558 li
@
235.028 295.984 mo
235.028 290.558 li
@
242.759 293.271 mo
242.759 290.558 li
@
250.49 293.271 mo
250.49 290.558 li
@
258.221 293.271 mo
258.221 290.558 li
@
265.952 293.271 mo
265.952 290.558 li
@
273.682 295.984 mo
273.682 290.558 li
@
281.413 293.271 mo
281.413 290.558 li
@
289.144 293.271 mo
289.144 290.558 li
@
296.875 293.271 mo
296.875 290.558 li
@
304.606 293.271 mo
304.606 290.558 li
@
312.337 295.984 mo
312.337 290.558 li
@
320.067 293.271 mo
320.067 290.558 li
@
327.798 293.271 mo
327.798 290.558 li
@
335.529 293.271 mo
335.529 290.558 li
@
343.26 293.271 mo
343.26 290.558 li
@
350.991 295.984 mo
350.991 290.558 li
@
235.028 295.984 mo
235.028 290.558 li
@
227.297 293.271 mo
227.297 290.558 li
@
219.566 293.271 mo
219.566 290.558 li
@
211.836 293.271 mo
211.836 290.558 li
@
204.105 293.271 mo
204.105 290.558 li
@
350.991 295.984 mo
350.991 290.558 li
@
358.722 293.271 mo
358.722 290.558 li
@
366.453 293.271 mo
366.453 290.558 li
@
199.466 469.635 mo
199.466 290.558 li
@
204.518 443.904 mo
199.466 443.904 li
@
201.992 438.706 mo
199.466 438.706 li
@
201.992 433.508 mo
199.466 433.508 li
@
201.992 428.309 mo
199.466 428.309 li
@
201.992 423.111 mo
199.466 423.111 li
@
204.518 417.913 mo
199.466 417.913 li
@
201.992 412.715 mo
199.466 412.715 li
@
201.992 407.517 mo
199.466 407.517 li
@
201.992 402.319 mo
199.466 402.319 li
@
201.992 397.12 mo
199.466 397.12 li
@
204.518 391.922 mo
199.466 391.922 li
@
201.992 386.724 mo
199.466 386.724 li
@
201.992 381.526 mo
199.466 381.526 li
@
201.992 376.328 mo
199.466 376.328 li
@
201.992 371.129 mo
199.466 371.129 li
@
204.518 365.931 mo
199.466 365.931 li
@
201.992 360.733 mo
199.466 360.733 li
@
201.992 355.535 mo
199.466 355.535 li
@
201.992 350.337 mo
199.466 350.337 li
@
201.992 345.138 mo
199.466 345.138 li
@
204.518 339.94 mo
199.466 339.94 li
@
201.992 334.742 mo
199.466 334.742 li
@
201.992 329.544 mo
199.466 329.544 li
@
201.992 324.346 mo
199.466 324.346 li
@
201.992 319.148 mo
199.466 319.148 li
@
204.518 313.949 mo
199.466 313.949 li
@
204.518 443.904 mo
199.466 443.904 li
@
201.992 449.102 mo
199.466 449.102 li
@
201.992 454.3 mo
199.466 454.3 li
@
201.992 459.499 mo
199.466 459.499 li
@
201.992 464.697 mo
199.466 464.697 li
@
204.518 313.949 mo
199.466 313.949 li
@
201.992 308.751 mo
199.466 308.751 li
@
201.992 303.553 mo
199.466 303.553 li
@
201.992 298.355 mo
199.466 298.355 li
@
201.992 293.157 mo
199.466 293.157 li
@
grestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf193.494 448.968 mo(1)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf191.123 422.897 mo(2)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf191.123 396.351 mo(3)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf191.123 370.754 mo(4)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf191.123 344.209 mo(5)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf191.123 318.612 mo(6)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf185.909 327.618 mo(g)shgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf181.169 356.06 mo(/dR)[-5.15082 -10.3016 0 ]yshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf186.857 369.332 mo(jet)[-2.74219 -6.86777 0 ]yshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf181.169 396.825 mo( dN)[-5.15082 -10.3016 0 ]yshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf186.857 410.098 mo(jet)[-2.74219 -6.86777 0 ]yshgrestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf181.169 437.591 mo(1/N)[-10.3016 -5.15082 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 469.635 mo
369.545 290.558 li
@
364.494 443.904 mo
369.545 443.904 li
@
367.019 438.706 mo
369.545 438.706 li
@
367.019 433.508 mo
369.545 433.508 li
@
367.019 428.309 mo
369.545 428.309 li
@
367.019 423.111 mo
369.545 423.111 li
@
364.494 417.913 mo
369.545 417.913 li
@
367.019 412.715 mo
369.545 412.715 li
@
367.019 407.517 mo
369.545 407.517 li
@
367.019 402.319 mo
369.545 402.319 li
@
367.019 397.12 mo
369.545 397.12 li
@
364.494 391.922 mo
369.545 391.922 li
@
367.019 386.724 mo
369.545 386.724 li
@
367.019 381.526 mo
369.545 381.526 li
@
367.019 376.328 mo
369.545 376.328 li
@
367.019 371.129 mo
369.545 371.129 li
@
364.494 365.931 mo
369.545 365.931 li
@
367.019 360.733 mo
369.545 360.733 li
@
367.019 355.535 mo
369.545 355.535 li
@
367.019 350.337 mo
369.545 350.337 li
@
367.019 345.138 mo
369.545 345.138 li
@
364.494 339.94 mo
369.545 339.94 li
@
367.019 334.742 mo
369.545 334.742 li
@
367.019 329.544 mo
369.545 329.544 li
@
367.019 324.346 mo
369.545 324.346 li
@
367.019 319.148 mo
369.545 319.148 li
@
364.494 313.949 mo
369.545 313.949 li
@
364.494 443.904 mo
369.545 443.904 li
@
367.019 449.102 mo
369.545 449.102 li
@
367.019 454.3 mo
369.545 454.3 li
@
367.019 459.499 mo
369.545 459.499 li
@
367.019 464.697 mo
369.545 464.697 li
@
364.494 313.949 mo
369.545 313.949 li
@
367.019 308.751 mo
369.545 308.751 li
@
367.019 303.553 mo
369.545 303.553 li
@
367.019 298.355 mo
369.545 298.355 li
@
367.019 293.157 mo
369.545 293.157 li
@
206.037 441.112 mo
206.889 443.732 li
209.644 443.732 li
207.415 445.352 li
208.266 447.972 li
206.037 446.352 li
203.808 447.972 li
204.66 445.352 li
202.431 443.732 li
205.186 443.732 li
cp
0 .993988 1 0 cmyk
f
225.365 386.685 mo
226.216 389.305 li
228.971 389.305 li
226.742 390.925 li
227.594 393.545 li
225.365 391.925 li
223.136 393.545 li
223.987 390.925 li
221.758 389.305 li
224.513 389.305 li
cp
f
244.692 353.458 mo
245.543 356.078 li
248.298 356.078 li
246.069 357.698 li
246.921 360.318 li
244.692 358.699 li
242.463 360.318 li
243.314 357.698 li
241.085 356.078 li
243.84 356.078 li
cp
f
264.019 361.62 mo
264.87 364.24 li
267.625 364.24 li
265.396 365.86 li
266.248 368.48 li
264.019 366.86 li
261.79 368.48 li
262.641 365.86 li
260.412 364.24 li
263.167 364.24 li
cp
f
283.346 385.847 mo
284.197 388.468 li
286.952 388.468 li
284.724 390.087 li
285.575 392.707 li
283.346 391.088 li
281.117 392.707 li
281.968 390.087 li
279.739 388.468 li
282.495 388.468 li
cp
f
302.673 407.145 mo
303.524 409.765 li
306.28 409.765 li
304.051 411.384 li
304.902 414.005 li
302.673 412.385 li
300.444 414.005 li
301.295 411.384 li
299.067 409.765 li
301.822 409.765 li
cp
f
322 427.144 mo
322.852 429.764 li
325.607 429.764 li
323.378 431.384 li
324.229 434.004 li
322 432.385 li
319.771 434.004 li
320.623 431.384 li
318.394 429.764 li
321.149 429.764 li
cp
f
341.327 446.742 mo
342.179 449.362 li
344.934 449.362 li
342.705 450.982 li
343.556 453.602 li
341.327 451.983 li
339.098 453.602 li
339.95 450.982 li
337.721 449.362 li
340.476 449.362 li
cp
f
360.654 465.354 mo
361.506 467.974 li
364.261 467.974 li
362.032 469.594 li
362.883 472.214 li
360.654 470.595 li
358.425 472.214 li
359.277 469.594 li
357.048 467.974 li
359.803 467.974 li
cp
f
206.037 441.116 mo
225.365 380.922 li
244.692 350.9 li
264.019 361.769 li
283.346 383.854 li
302.673 407.406 li
322 427.572 li
341.327 447.121 li
360.654 468.391 li
360.654 469.635 li
341.327 453.948 li
322 434.3 li
302.673 414.468 li
283.346 395.425 li
264.019 369.055 li
244.692 363.6 li
225.365 400.031 li
206.037 448.692 li
0 .241001 .107607 0 cmyk
ef
206.037 438.268 mo
207.527 442.853 li
212.349 442.853 li
208.448 445.687 li
209.938 450.273 li
206.037 447.439 li
202.137 450.273 li
203.627 445.687 li
199.726 442.853 li
204.548 442.853 li
cp
0 .993988 1 0 cmyk
f
225.365 383.841 mo
226.854 388.426 li
231.676 388.426 li
227.775 391.26 li
229.265 395.846 li
225.365 393.012 li
221.464 395.846 li
222.954 391.26 li
219.053 388.426 li
223.875 388.426 li
cp
f
244.692 350.614 mo
246.182 355.199 li
251.003 355.199 li
247.102 358.034 li
248.592 362.619 li
244.692 359.785 li
240.791 362.619 li
242.281 358.034 li
238.38 355.199 li
243.202 355.199 li
cp
f
264.019 358.776 mo
265.509 363.361 li
270.33 363.361 li
266.43 366.195 li
267.919 370.781 li
264.019 367.947 li
260.118 370.781 li
261.608 366.195 li
257.707 363.361 li
262.529 363.361 li
cp
f
283.346 383.003 mo
284.836 387.589 li
289.657 387.589 li
285.757 390.423 li
287.247 395.008 li
283.346 392.174 li
279.445 395.008 li
280.935 390.423 li
277.035 387.589 li
281.856 387.589 li
cp
f
302.673 404.3 mo
304.163 408.886 li
308.984 408.886 li
305.084 411.72 li
306.574 416.306 li
302.673 413.472 li
298.772 416.306 li
300.262 411.72 li
296.362 408.886 li
301.183 408.886 li
cp
f
322 424.3 mo
323.49 428.885 li
328.312 428.885 li
324.411 431.719 li
325.901 436.305 li
322 433.471 li
318.1 436.305 li
319.589 431.719 li
315.689 428.885 li
320.51 428.885 li
cp
f
341.327 443.898 mo
342.817 448.484 li
347.639 448.484 li
343.738 451.318 li
345.228 455.903 li
341.327 453.069 li
337.427 455.903 li
338.917 451.318 li
335.016 448.484 li
339.837 448.484 li
cp
f
360.654 462.51 mo
362.144 467.095 li
366.966 467.095 li
363.065 469.93 li
364.555 474.515 li
360.654 471.681 li
356.754 474.515 li
358.244 469.93 li
354.343 467.095 li
359.165 467.095 li
cp
f
1.5 lw
206.037 450.689 mo
207.678 442.817 li
209.35 435.151 li
211.049 427.727 li
212.761 420.615 li
214.674 413.104 li
216.305 407.054 li
218.044 400.965 li
219.778 395.256 li
221.659 389.474 li
223.309 384.75 li
225.052 380.109 li
225.365 379.313 li
227.224 374.793 li
229.054 370.687 li
230.853 367.003 li
232.61 363.754 li
234.454 360.736 li
236.023 358.496 li
237.687 356.463 li
239.306 354.837 li
241.08 353.467 li
242.556 352.669 li
244.09 352.178 li
244.692 352.082 li
245.847 352.135 li
247.056 352.558 li
264.019 374.874 li
267.316 377.936 li
271.33 381.214 li
280.453 388.166 li
283.346 390.608 li
289.71 396.449 li
298.286 404.791 li
302.673 409.19 li
312.47 419.195 li
318.015 425.127 li
322 429.603 li
341.327 453.645 li
345.838 458.038 li
349.802 461.518 li
353.75 464.632 li
357.592 467.324 li
360.654 469.232 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
206.037 455.681 mo
208.416 447.862 li
210.997 439.736 li
213.197 433.101 li
215.608 426.139 li
218.009 419.523 li
220.536 412.903 li
222.822 407.211 li
225.365 401.213 li
229.772 391.263 li
232.043 386.38 li
233.973 382.454 li
235.984 378.639 li
237.775 375.53 li
239.483 372.86 li
241.208 370.494 li
242.641 368.808 li
244.117 367.358 li
244.692 366.878 li
246.049 365.951 li
247.485 365.275 li
249.033 364.862 li
250.712 364.743 li
252.53 364.943 li
254.563 365.499 li
257.294 366.651 li
264.019 370.224 li
283.346 386.268 li
285.955 387.899 li
289.676 389.796 li
296.038 392.732 li
299.133 394.423 li
301.47 395.972 li
302.673 396.89 li
305.667 399.425 li
309.52 403.064 li
313.071 406.76 li
316.786 410.942 li
320.823 415.814 li
322 417.292 li
324.546 420.688 li
327.745 425.349 li
333.89 434.885 li
337.891 440.993 li
340.643 444.923 li
341.327 445.849 li
345.948 451.868 li
350.924 458.004 li
355.303 463.105 li
359.916 468.178 li
360.654 468.962 li
.75021 .679683 .670222 .90164 cmyk
@
[3 4 1 4 ] 0 dsh
206.037 443.647 mo
207.415 436.665 li
208.813 429.901 li
210.239 423.339 li
211.693 416.985 li
213.17 410.878 li
214.656 405.079 li
216.281 399.137 li
217.667 394.386 li
219.18 389.535 li
220.689 385.044 li
222.286 380.659 li
223.723 377.038 li
225.365 373.275 li
226.67 370.596 li
228.016 368.152 li
229.419 365.929 li
230.891 363.934 li
232.43 362.19 li
234.021 360.731 li
235.666 359.561 li
237.41 358.666 li
239.259 358.067 li
241.3 357.777 li
243.446 357.837 li
244.692 358.019 li
245.991 358.424 li
247.371 359.189 li
248.867 360.362 li
264.019 380.509 li
267.067 384.205 li
276.429 396.012 li
278.87 398.753 li
280.997 400.888 li
283.346 402.893 li
285.252 404.171 li
287.422 405.253 li
289.914 406.13 li
294.057 407.124 li
298.026 408.095 li
300.569 409.018 li
302.673 410.097 li
305.728 412.073 li
309.413 414.816 li
313.722 418.408 li
320.428 424.513 li
322 425.986 li
326.466 430.358 li
331.805 435.955 li
341.327 446.39 li
349.601 455.627 li
358.333 465.702 li
360.654 468.438 li
.269902 .816403 0 0 cmyk
@
206.037 438.268 mo
207.527 442.853 li
212.349 442.853 li
208.448 445.687 li
209.938 450.273 li
206.037 447.439 li
202.137 450.273 li
203.627 445.687 li
199.726 442.853 li
204.548 442.853 li
cp
0 .993988 1 0 cmyk
f
225.365 383.841 mo
226.854 388.426 li
231.676 388.426 li
227.775 391.26 li
229.265 395.846 li
225.365 393.012 li
221.464 395.846 li
222.954 391.26 li
219.053 388.426 li
223.875 388.426 li
cp
f
244.692 350.614 mo
246.182 355.199 li
251.003 355.199 li
247.102 358.034 li
248.592 362.619 li
244.692 359.785 li
240.791 362.619 li
242.281 358.034 li
238.38 355.199 li
243.202 355.199 li
cp
f
264.019 358.776 mo
265.509 363.361 li
270.33 363.361 li
266.43 366.195 li
267.919 370.781 li
264.019 367.947 li
260.118 370.781 li
261.608 366.195 li
257.707 363.361 li
262.529 363.361 li
cp
f
283.346 383.003 mo
284.836 387.589 li
289.657 387.589 li
285.757 390.423 li
287.247 395.008 li
283.346 392.174 li
279.445 395.008 li
280.935 390.423 li
277.035 387.589 li
281.856 387.589 li
cp
f
302.673 404.3 mo
304.163 408.886 li
308.984 408.886 li
305.084 411.72 li
306.574 416.306 li
302.673 413.472 li
298.772 416.306 li
300.262 411.72 li
296.362 408.886 li
301.183 408.886 li
cp
f
322 424.3 mo
323.49 428.885 li
328.312 428.885 li
324.411 431.719 li
325.901 436.305 li
322 433.471 li
318.1 436.305 li
319.589 431.719 li
315.689 428.885 li
320.51 428.885 li
cp
f
341.327 443.898 mo
342.817 448.484 li
347.639 448.484 li
343.738 451.318 li
345.228 455.903 li
341.327 453.069 li
337.427 455.903 li
338.917 451.318 li
335.016 448.484 li
339.837 448.484 li
cp
f
360.654 462.51 mo
362.144 467.095 li
366.966 467.095 li
363.065 469.93 li
364.555 474.515 li
360.654 471.681 li
356.754 474.515 li
358.244 469.93 li
354.343 467.095 li
359.165 467.095 li
cp
f
grestore
gsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 2196 15 <00030036ffda042505b1000b0023002f00624016681f011a0e0e08262620
2c4014050240200d1a176329b8015fb605831d0e11632fb8015f40160b83
1da81023302302a023b023d023f02304233147304e1076c418d45d71e44d
fdf4ed3910fdf4ed39003fed3fed12392fcd392ec4313001015d00163332
36353426232206152436372e01353436333216151406071e011514002322
0235001633323635342623220615015e6f62626f71606071fed86f6b693f
eed9d9ee3f696b6cfef1f3f3fa01426156575f5f575661013a76766b6f73
736f67c63246a3479edfdf9e47a33c3cc67ab7feff0101b7023364644f56
61615600>SXWSCW+Helvetica-Bold AddT42Char 
1 3716 23 <0001009a0000053d05c2000b0035401c0a2a03030502020b080805082507
1a0d020b2500190c0dc0215279182b2b4ef44dfd3c4e10f64dfd3c003f3c
3f3c392ffd31303311211121112111211121119a013102400132fecefdc0
05c2fdce0232fa3e0292fd6e0000>SXWSCW+Helvetica-Bold AddT42Char 
1 3820 24 <00020084000001b605df00030004003040110402020108040617171a0400
2501190506ba014b00210135b179182b2b4ef44dfd394e456544e62f003f
3f3c3130290111212701b6fece01329905c21d00>SXWSCW+Helvetica-Bold AddT42Char 
1 4024 26 <000100970000062805c2001200c040900900070808090511160819092900
27082b0924112a12370735083c0938126a00651179007511890086119a00
9611a800a611c700f708f8091c05080a09160818090407121a071a0a1712
220023112f123d073f0a3f127a12b909b612c7120e0f070f0a020a0f1211
090800050e070203120a07030e1100020e0803081417171a020403270212
0f0d0e270f19135279182b4e10f44dfd3c1910dcdc18fd3c104e456544e6
003f3c3c3f3c121739011112391217391139313000715d01715d01211121
113436350121011416151121112101046d01bbfee102fee9fed5feeb02fe
e101c0010c05c2fa3e03e52b9b2afb2b04d52a9b2bfc1b05c2fb7900>SXWSCW+Helvetica-Bold AddT42Char 
1 4292 27 <000200a30000050b05c200080013003e401c97019706020c2a04040e032a
0f020e080837131a15030d250e191415b8011db3215256182b2b4ef44dfd
3c4e10f64ded003f3fed12392fed3130015d002623211121323635000423
211121112132041503da796dfee1011f6d790131fef8f5fec7fece0282de
0108046062fe4e6a73fefdd8fdee05c2e4ef0000>SXWSCW+Helvetica-Bold AddT42Char 
1 5820 34 <000200230000054205c20008000900a7404cb900b60702290229054a024a
055a025a0566089408a902a905b408c508e308fa080e0b08010518060625
120707080218010125120008000502080406070901040002040808090b17
171a0001b8015eb5090802250705b8015e400906190a0b99217572182b2b
4ef44df439fd3939f4394e456544e64d2f3d2f18003f3f173c1239393901
872e2b047d104b51587a59c51805872e2b047d104b51587a59c531300071
5d015d0121011121110121010303e5015dfe13feccfe02016b01320d05c2
fc68fdd6022a0398fd7e02820000>SXWSCW+Helvetica-Bold AddT42Char 
1 7476 42 <000100870000045e05bd0017003f402505022702580e680e04141712000c
24170710070a0836051a1913102711191819be215045182b2b4ef44dfd3c
4e10f64ded003f3c3fed3f11393130015d0016171e011511211134272623
22061511211121113e01330343a5352d14fedd1e276d7175fee4011c3ea3
5a045e46483d8192fd80029758364c978cfdb205bdfdf75f4b000000>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/eight 15 def
/H 23 def
/I 24 def
/M 26 def
/P 27 def
/Y 34 def
/h 42 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 56 /eight put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 89 /Y put
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /three /four /five 2{/.notdef}rp /eight 3{/.notdef}rp /less /equal 3{/.notdef}rp /A 2{/.notdef}rp /D 2{/.notdef}rp /G /H /I /J 2{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S /T /U /V 2{/.notdef}rp /Y /.notdef /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z /.notdef /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [12.8272 0 0 -12.8272 0 0 ]msf252.272 326.67 mo(PYTHIA 8 Monash)[8.55582 8.55585 7.83731 9.26126 3.56595 9.26123 3.56598 7.1319 3.56598 10.685 7.83731 7.83731 7.13193 7.13193 0 ]xshgrestore
1.5 lw
[1 2 ] 0 dsh
229.124 323.569 mo
248.47 323.569 li
@
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 2068 14 <00010034000004380597000e003e402416021503f70503000ca10d04070c
0b00068307c60d7300a8100c300c02d00c010c10470f4e1076c418d45d71
e44df4f4ed1139003f3ffd393130015d0106020706021521121312372113
21043840e44d3d62fed80df39d6afd2d04040004b83ffebdac87fe7a7d01
8601a50105670100>SXWSCW+Helvetica-Bold AddT42Char 
1 2956 19 <0002005cffd7057b05ef001e001f00744029570a94079408035b02591b58
1d660477018905a914b204b70ac604c70bda02db14dd18df1bf8181017b8
010b40231a08081a0c411f030312411a091f16371708371f1e071a210f37
1e1920219921ad56182b2b4ef44ded4e10f64d1139edd4ed2f003fed3f3c
ed12392f10ed3130015d005d123736212017161721262726232202151416
33323736372106002120272611015ccfb401160174ac5f07fecc1e2f54a5
a8c2cd9ea2552f1f013128feb7fefffec2b6b602900457d1b6f4898a6a36
60fef1f8f8f76a3972f1fed2cccd0165031a>SXWSCW+Helvetica-Bold AddT42Char 
1 3356 21 <000100a50000050205c2000b002fb800482bba00060009004b2bb8000610
b80001d000ba00070008004b2bba000b0000004b2bba00030004004b2b30
3101211121112111211121112104defcf402ccfd340330fba3043904bdfe
c7ff00fe85fef705c200>SXWSCW+Helvetica-Bold AddT42Char 
1 5372 33 <0001001e0000076f05c20012016a40f20a040505090c06104a044505480c
880487058a0c880d870f8610d904d705db0cd6101116001a041405190d17
0f05010202000304040206070705080909070d080e180e0209030a040505
0606080b06110712170a170b180c79037904760576067611ba03ba04b405
b506c903c904c605c606d903d904d605d606e903e904e605e6061f58035a
045505570657116903690466056606680b66110b090c0610190c1610b50b
bb11e50be511f70af50bf3110b0b0a02190a251209070911120219122512
0000020e070203110405090a1205000211100c0b0808090b030a05060c03
0e070001110312030410030e021417171a0abe01b8000701010002010100
0e01b8b612191365e572182b764e10f4184dfde4e4fd194e456544e64d11
1217391217391112173912173918003f3c3c3c3f173c12173905872e2b7d
4b52787a10c487102b7d4b52787a10c43130015d7171005dc487100ec487
100ec487100ec487100ec43130017271011317371321131737132101210b
0321010165c32a2ba60145af2d2dc50139fe61fedab23434b2fee2fe5e05
c2fcb4ebe60351fcb4ebe20355fa3e035e011dfee3fca205c2000000>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/seven 14 def
/C 19 def
/E 21 def
/W 33 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 55 /seven put
dup 67 /C put
dup 69 /E put
dup 87 /W put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /.notdef /seven /eight 3{/.notdef}rp /less /equal 3{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /H /I /J 2{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S /T /U /V /W /.notdef /Y /.notdef /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z /.notdef /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [12.8272 0 0 -12.8272 0 0 ]msf252.272 342.313 mo(HERWIG 7 EE4C)[9.26123 8.55585 9.26123 12.1089 3.56595 9.97955 3.56598 7.1319 3.56598 8.55585 8.55582 7.13193 0 ]xsh[3 4 1 4 ] 0 dsh
229.124 338.945 mo
248.47 338.945 li
.269902 .816403 0 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
SXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf326.219 460.344 mo(])shSXWSCX+Helvetica-BoldOblique*1 [10.9268 0 0 -10.9268 0 0 ]msf319.583 460.344 mo(c)shSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf263.175 460.344 mo( < 40 [GeV/)[3.03763 6.38126 3.03766 6.07529 6.07529 3.03766 3.63855 8.50104 6.07532 7.28824 0 ]xshgsave
199.466 469.635 mo
369.545 469.635 li
369.545 288.749 li
199.466 288.749 li
cp
clp
SXWSCW+Helvetica-Bold*1 [7.60128 0 0 -7.60128 0 0 ]msf247.532 466.507 mo(T,jet)[4.64432 2.11316 2.11313 4.22632 0 ]xshgrestore
SXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf216.247 460.344 mo(30 < p)[6.07529 6.0753 3.03764 6.38126 3.03764 0 ]xshgsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
0 0 0 0 cmyk
ef
.4 lw
[] 0 dsh
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
@
369.545 469.635 mo
539.624 469.635 li
539.624 290.557 li
369.545 290.557 li
cp
ef
369.545 469.635 mo
539.624 469.635 li
539.624 290.557 li
369.545 290.557 li
cp
@
.75 lw
369.545 469.635 mo
539.624 469.635 li
539.624 290.557 li
369.545 290.557 li
cp
.75021 .679683 .670222 .90164 cmyk
@
369.545 469.635 mo
372.637 469.635 li
375.73 469.635 li
378.822 469.635 li
381.914 469.635 li
385.007 469.635 li
388.099 469.635 li
391.191 469.635 li
394.284 469.635 li
397.376 469.635 li
400.468 469.635 li
403.561 469.635 li
406.653 469.635 li
409.745 469.635 li
412.838 469.635 li
415.93 469.635 li
419.022 469.635 li
422.115 469.635 li
425.207 469.635 li
428.299 469.635 li
431.392 469.635 li
434.484 469.635 li
437.576 469.635 li
440.669 469.635 li
443.761 469.635 li
446.853 469.635 li
449.946 469.635 li
453.038 469.635 li
456.13 469.635 li
459.223 469.635 li
462.315 469.635 li
465.407 469.635 li
468.5 469.635 li
471.592 469.635 li
474.685 469.635 li
477.777 469.635 li
480.869 469.635 li
483.962 469.635 li
487.054 469.635 li
490.146 469.635 li
493.239 469.635 li
496.331 469.635 li
499.423 469.635 li
502.516 469.635 li
505.608 469.635 li
508.7 469.635 li
511.793 469.635 li
514.885 469.635 li
517.977 469.635 li
521.07 469.635 li
524.162 469.635 li
527.254 469.635 li
530.347 469.635 li
533.439 469.635 li
536.531 469.635 li
539.624 469.635 li
1 .978058 .0451667 .0556954 cmyk
@
369.545 469.635 mo
539.624 469.635 li
.75021 .679683 .670222 .90164 cmyk
@
405.107 464.208 mo
405.107 469.635 li
@
412.838 466.922 mo
412.838 469.635 li
@
420.569 466.922 mo
420.569 469.635 li
@
428.299 466.922 mo
428.299 469.635 li
@
436.03 466.922 mo
436.03 469.635 li
@
443.761 464.208 mo
443.761 469.635 li
@
451.492 466.922 mo
451.492 469.635 li
@
459.223 466.922 mo
459.223 469.635 li
@
466.954 466.922 mo
466.954 469.635 li
@
474.685 466.922 mo
474.685 469.635 li
@
482.415 464.208 mo
482.415 469.635 li
@
490.146 466.922 mo
490.146 469.635 li
@
497.877 466.922 mo
497.877 469.635 li
@
505.608 466.922 mo
505.608 469.635 li
@
513.339 466.922 mo
513.339 469.635 li
@
521.07 464.208 mo
521.07 469.635 li
@
405.107 464.208 mo
405.107 469.635 li
@
397.376 466.922 mo
397.376 469.635 li
@
389.645 466.922 mo
389.645 469.635 li
@
381.914 466.922 mo
381.914 469.635 li
@
374.183 466.922 mo
374.183 469.635 li
@
521.07 464.208 mo
521.07 469.635 li
@
528.8 466.922 mo
528.8 469.635 li
@
536.531 466.922 mo
536.531 469.635 li
@
grestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf398.271 479.779 mo(0.1)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf435.718 479.779 mo(0.2)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf474.588 479.779 mo(0.3)[6.07529 3.03766 0 ]xshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [10.9268 0 0 -10.9268 0 0 ]msf513.458 479.779 mo(0.4)[6.07526 3.03766 0 ]xshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [9.02653 0 0 -9.02653 0 0 ]msf456.101 488.786 mo(g)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf447.095 485.467 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
.75 lw
[] 0 dsh
369.545 290.558 mo
539.624 290.558 li
@
405.107 295.984 mo
405.107 290.558 li
@
412.838 293.271 mo
412.838 290.558 li
@
420.569 293.271 mo
420.569 290.558 li
@
428.299 293.271 mo
428.299 290.558 li
@
436.03 293.271 mo
436.03 290.558 li
@
443.761 295.984 mo
443.761 290.558 li
@
451.492 293.271 mo
451.492 290.558 li
@
459.223 293.271 mo
459.223 290.558 li
@
466.954 293.271 mo
466.954 290.558 li
@
474.685 293.271 mo
474.685 290.558 li
@
482.415 295.984 mo
482.415 290.558 li
@
490.146 293.271 mo
490.146 290.558 li
@
497.877 293.271 mo
497.877 290.558 li
@
505.608 293.271 mo
505.608 290.558 li
@
513.339 293.271 mo
513.339 290.558 li
@
521.07 295.984 mo
521.07 290.558 li
@
405.107 295.984 mo
405.107 290.558 li
@
397.376 293.271 mo
397.376 290.558 li
@
389.645 293.271 mo
389.645 290.558 li
@
381.914 293.271 mo
381.914 290.558 li
@
374.183 293.271 mo
374.183 290.558 li
@
521.07 295.984 mo
521.07 290.558 li
@
528.8 293.271 mo
528.8 290.558 li
@
536.531 293.271 mo
536.531 290.558 li
@
369.545 469.635 mo
369.545 290.558 li
@
374.596 443.904 mo
369.545 443.904 li
@
372.071 438.706 mo
369.545 438.706 li
@
372.071 433.508 mo
369.545 433.508 li
@
372.071 428.309 mo
369.545 428.309 li
@
372.071 423.111 mo
369.545 423.111 li
@
374.596 417.913 mo
369.545 417.913 li
@
372.071 412.715 mo
369.545 412.715 li
@
372.071 407.517 mo
369.545 407.517 li
@
372.071 402.319 mo
369.545 402.319 li
@
372.071 397.12 mo
369.545 397.12 li
@
374.596 391.922 mo
369.545 391.922 li
@
372.071 386.724 mo
369.545 386.724 li
@
372.071 381.526 mo
369.545 381.526 li
@
372.071 376.328 mo
369.545 376.328 li
@
372.071 371.129 mo
369.545 371.129 li
@
374.596 365.931 mo
369.545 365.931 li
@
372.071 360.733 mo
369.545 360.733 li
@
372.071 355.535 mo
369.545 355.535 li
@
372.071 350.337 mo
369.545 350.337 li
@
372.071 345.138 mo
369.545 345.138 li
@
374.596 339.94 mo
369.545 339.94 li
@
372.071 334.742 mo
369.545 334.742 li
@
372.071 329.544 mo
369.545 329.544 li
@
372.071 324.346 mo
369.545 324.346 li
@
372.071 319.148 mo
369.545 319.148 li
@
374.596 313.949 mo
369.545 313.949 li
@
374.596 443.904 mo
369.545 443.904 li
@
372.071 449.102 mo
369.545 449.102 li
@
372.071 454.3 mo
369.545 454.3 li
@
372.071 459.499 mo
369.545 459.499 li
@
372.071 464.697 mo
369.545 464.697 li
@
374.596 313.949 mo
369.545 313.949 li
@
372.071 308.751 mo
369.545 308.751 li
@
372.071 303.553 mo
369.545 303.553 li
@
372.071 298.355 mo
369.545 298.355 li
@
372.071 293.157 mo
369.545 293.157 li
@
grestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf363.667 448.968 mo(1)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 422.897 mo(2)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 396.351 mo(3)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 370.754 mo(4)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 344.209 mo(5)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [13.3022 0 0 -13.3022 0 0 ]msf361.297 318.612 mo(6)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf355.609 327.618 mo(g)shgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 356.06 mo(/dR)[-5.15082 -10.3016 0 ]yshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf356.557 369.332 mo(jet)[-2.74219 -6.86777 0 ]yshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 396.825 mo( dN)[-5.15082 -10.3016 0 ]yshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -12.3521 -12.3521 0 0 0 ]msf356.557 410.098 mo(jet)[-2.74219 -6.86777 0 ]yshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCV+Helvetica*1 [0 -18.5281 -18.5281 0 0 0 ]msf350.869 437.591 mo(1/N)[-10.3016 -5.15082 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
.75 lw
[] 0 dsh
539.624 469.635 mo
539.624 290.558 li
@
534.572 443.904 mo
539.624 443.904 li
@
537.098 438.706 mo
539.624 438.706 li
@
537.098 433.508 mo
539.624 433.508 li
@
537.098 428.309 mo
539.624 428.309 li
@
537.098 423.111 mo
539.624 423.111 li
@
534.572 417.913 mo
539.624 417.913 li
@
537.098 412.715 mo
539.624 412.715 li
@
537.098 407.517 mo
539.624 407.517 li
@
537.098 402.319 mo
539.624 402.319 li
@
537.098 397.12 mo
539.624 397.12 li
@
534.572 391.922 mo
539.624 391.922 li
@
537.098 386.724 mo
539.624 386.724 li
@
537.098 381.526 mo
539.624 381.526 li
@
537.098 376.328 mo
539.624 376.328 li
@
537.098 371.129 mo
539.624 371.129 li
@
534.572 365.931 mo
539.624 365.931 li
@
537.098 360.733 mo
539.624 360.733 li
@
537.098 355.535 mo
539.624 355.535 li
@
537.098 350.337 mo
539.624 350.337 li
@
537.098 345.138 mo
539.624 345.138 li
@
534.572 339.94 mo
539.624 339.94 li
@
537.098 334.742 mo
539.624 334.742 li
@
537.098 329.544 mo
539.624 329.544 li
@
537.098 324.346 mo
539.624 324.346 li
@
537.098 319.148 mo
539.624 319.148 li
@
534.572 313.949 mo
539.624 313.949 li
@
534.572 443.904 mo
539.624 443.904 li
@
537.098 449.102 mo
539.624 449.102 li
@
537.098 454.3 mo
539.624 454.3 li
@
537.098 459.499 mo
539.624 459.499 li
@
537.098 464.697 mo
539.624 464.697 li
@
534.572 313.949 mo
539.624 313.949 li
@
537.098 308.751 mo
539.624 308.751 li
@
537.098 303.553 mo
539.624 303.553 li
@
537.098 298.355 mo
539.624 298.355 li
@
537.098 293.157 mo
539.624 293.157 li
@
376.116 427.036 mo
376.968 429.656 li
379.723 429.656 li
377.494 431.275 li
378.345 433.896 li
376.116 432.276 li
373.887 433.896 li
374.739 431.275 li
372.51 429.656 li
375.265 429.656 li
cp
0 .993988 1 0 cmyk
f
395.443 322.01 mo
396.295 324.63 li
399.05 324.63 li
396.821 326.25 li
397.672 328.87 li
395.443 327.25 li
393.214 328.87 li
394.066 326.25 li
391.837 324.63 li
394.592 324.63 li
cp
f
414.77 363.257 mo
415.622 365.878 li
418.377 365.878 li
416.148 367.497 li
416.999 370.117 li
414.77 368.498 li
412.541 370.117 li
413.393 367.497 li
411.164 365.878 li
413.919 365.878 li
cp
f
434.098 369.189 mo
434.949 371.809 li
437.704 371.809 li
435.475 373.429 li
436.327 376.049 li
434.098 374.43 li
431.869 376.049 li
432.72 373.429 li
430.491 371.809 li
433.246 371.809 li
cp
f
453.425 402.651 mo
454.276 405.272 li
457.031 405.272 li
454.802 406.891 li
455.654 409.512 li
453.425 407.892 li
451.196 409.512 li
452.047 406.891 li
449.818 405.272 li
452.573 405.272 li
cp
f
472.752 423.062 mo
473.603 425.682 li
476.358 425.682 li
474.129 427.301 li
474.981 429.922 li
472.752 428.302 li
470.523 429.922 li
471.374 427.301 li
469.145 425.682 li
471.9 425.682 li
cp
f
492.079 447.036 mo
492.93 449.656 li
495.685 449.656 li
493.457 451.275 li
494.308 453.896 li
492.079 452.276 li
489.85 453.896 li
490.701 451.275 li
488.472 449.656 li
491.228 449.656 li
cp
f
511.406 454.923 mo
512.257 457.543 li
515.013 457.543 li
512.784 459.163 li
513.635 461.783 li
511.406 460.164 li
509.177 461.783 li
510.028 459.163 li
507.8 457.543 li
510.555 457.543 li
cp
f
376.116 422.125 mo
395.443 305.98 li
414.77 357.92 li
434.098 359.403 li
453.425 397.928 li
472.752 419.183 li
492.079 442.63 li
511.406 452.825 li
530.733 469.096 li
530.733 469.635 li
511.406 464.605 li
492.079 459.026 li
472.752 434.525 li
453.425 414.959 li
434.098 386.56 li
414.77 376.179 li
395.443 345.624 li
376.116 439.531 li
0 .241001 .107607 0 cmyk
ef
376.116 424.192 mo
377.606 428.777 li
382.428 428.777 li
378.527 431.611 li
380.017 436.197 li
376.116 433.363 li
372.215 436.197 li
373.705 431.611 li
369.805 428.777 li
374.626 428.777 li
cp
0 .993988 1 0 cmyk
f
395.443 337.877 mo
395.443 332.438 li
@
395.443 319.166 mo
395.443 313.727 li
@
395.443 319.166 mo
396.933 323.751 li
401.755 323.751 li
397.854 326.585 li
399.344 331.171 li
395.443 328.337 li
391.543 331.171 li
393.033 326.585 li
389.132 323.751 li
393.953 323.751 li
cp
f
414.77 375.441 mo
414.77 373.686 li
@
414.77 360.413 mo
414.77 358.658 li
@
414.77 360.413 mo
416.26 364.999 li
421.082 364.999 li
417.181 367.833 li
418.671 372.418 li
414.77 369.584 li
410.87 372.418 li
412.36 367.833 li
408.459 364.999 li
413.281 364.999 li
cp
f
434.098 384.673 mo
434.098 379.618 li
@
434.098 366.345 mo
434.098 361.29 li
@
434.098 366.345 mo
435.587 370.931 li
440.409 370.931 li
436.508 373.765 li
437.998 378.35 li
434.098 375.516 li
430.197 378.35 li
431.687 373.765 li
427.786 370.931 li
432.608 370.931 li
cp
f
453.425 415.882 mo
453.425 413.08 li
@
453.425 399.807 mo
453.425 397.005 li
@
453.425 399.807 mo
454.915 404.393 li
459.736 404.393 li
455.835 407.227 li
457.325 411.812 li
453.425 408.978 li
449.524 411.812 li
451.014 407.227 li
447.113 404.393 li
451.935 404.393 li
cp
f
472.752 433.966 mo
472.752 433.49 li
@
472.752 420.217 mo
472.752 419.741 li
@
472.752 420.217 mo
474.242 424.803 li
479.063 424.803 li
475.163 427.637 li
476.652 432.223 li
472.752 429.389 li
468.851 432.223 li
470.341 427.637 li
466.44 424.803 li
471.262 424.803 li
cp
f
492.079 444.191 mo
493.569 448.777 li
498.39 448.777 li
494.49 451.611 li
495.98 456.197 li
492.079 453.363 li
488.178 456.197 li
489.668 451.611 li
485.768 448.777 li
490.589 448.777 li
cp
f
511.406 452.079 mo
512.896 456.664 li
517.717 456.664 li
513.817 459.498 li
515.307 464.084 li
511.406 461.25 li
507.505 464.084 li
508.995 459.498 li
505.095 456.664 li
509.916 456.664 li
cp
f
1.5 lw
376.116 427.225 mo
377.163 418.257 li
378.202 409.797 li
379.239 401.785 li
380.281 394.164 li
381.333 386.886 li
382.401 379.915 li
383.491 373.233 li
384.604 366.845 li
385.739 360.786 li
386.884 355.117 li
388.179 349.245 li
389.285 344.674 li
390.45 340.296 li
391.612 336.369 li
392.891 332.556 li
393.997 329.683 li
395.166 327.069 li
395.443 326.513 li
396.441 324.83 li
397.426 323.681 li
398.409 323.003 li
399.408 322.756 li
400.445 322.93 li
401.547 323.548 li
402.747 324.668 li
404.068 326.363 li
405.667 328.938 li
407.608 332.621 li
413.946 345.579 li
414.77 347.025 li
416.375 349.95 li
418.191 353.738 li
420.437 358.969 li
423.992 367.989 li
428.335 379.153 li
430.326 383.927 li
431.997 387.617 li
433.669 390.928 li
434.098 391.704 li
436.525 395.786 li
439.145 399.73 li
441.976 403.529 li
445.193 407.37 li
449.414 411.841 li
453.425 415.729 li
455.975 417.906 li
459.189 420.115 li
464.098 422.859 li
468.97 425.599 li
471.889 427.604 li
472.752 428.284 li
475.832 431.054 li
480.082 435.463 li
486.945 442.772 li
489.685 445.335 li
492.079 447.239 li
494.816 448.966 li
498.394 450.674 li
503.522 452.566 li
508.329 454.417 li
511.406 455.971 li
517.837 459.95 li
523.319 463.765 li
529.102 468.213 li
530.733 469.546 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
376.116 439.991 mo
377.312 432.103 li
378.514 424.536 li
379.729 417.247 li
380.966 410.201 li
382.228 403.385 li
383.515 396.813 li
384.823 390.53 li
386.138 384.6 li
387.549 378.672 li
388.753 373.953 li
390.095 369.07 li
391.432 364.588 li
392.822 360.335 li
394.1 356.783 li
395.443 353.42 li
396.567 350.953 li
397.705 348.82 li
398.875 346.986 li
400.097 345.432 li
401.393 344.158 li
402.775 343.185 li
404.242 342.544 li
405.877 342.249 li
407.581 342.346 li
409.526 342.869 li
412.149 344.094 li
414.77 345.677 li
416.068 346.693 li
417.452 348.156 li
434.098 378.371 li
443.17 392.524 li
446.615 397.566 li
449.404 401.369 li
452.171 404.818 li
453.425 406.257 li
455.857 408.765 li
458.782 411.334 li
462.486 414.112 li
470.066 419.35 li
472.752 421.444 li
482.249 429.575 li
492.079 438.362 li
506.674 452.379 li
510.541 455.764 li
511.406 456.467 li
516.535 460.378 li
521.667 463.917 li
526.623 466.979 li
530.733 469.254 li
.75021 .679683 .670222 .90164 cmyk
@
[3 4 1 4 ] 0 dsh
376.116 411.769 mo
377.298 405.363 li
378.484 399.289 li
379.679 393.508 li
380.892 387.993 li
382.127 382.729 li
383.388 377.726 li
384.669 373.011 li
385.96 368.635 li
387.4 364.193 li
388.629 360.765 li
389.939 357.473 li
391.245 354.562 li
392.659 351.825 li
393.898 349.778 li
395.207 347.975 li
395.443 347.687 li
396.493 346.644 li
397.543 345.989 li
398.613 345.692 li
399.726 345.742 li
400.914 346.162 li
402.208 346.999 li
403.638 348.316 li
414.77 364.154 li
416.684 366.747 li
418.896 370.163 li
421.787 375.112 li
430.224 390.257 li
432.279 393.564 li
434.098 396.203 li
438.348 401.856 li
441.815 406.152 li
444.885 409.622 li
447.745 412.498 li
450.132 414.587 li
452.576 416.391 li
453.425 416.931 li
455.262 417.856 li
457.347 418.5 li
459.865 418.845 li
464.04 418.837 li
468.045 418.814 li
470.571 419.127 li
472.752 419.769 li
476.313 421.356 li
480.076 423.413 li
484.35 426.175 li
488.581 429.303 li
492.079 432.146 li
495.05 434.864 li
498.932 438.909 li
509.37 450.373 li
511.406 452.359 li
517.778 458.071 li
523.118 462.496 li
528.73 466.79 li
530.733 468.233 li
.269902 .816403 0 0 cmyk
@
376.116 424.192 mo
377.606 428.777 li
382.428 428.777 li
378.527 431.611 li
380.017 436.197 li
376.116 433.363 li
372.215 436.197 li
373.705 431.611 li
369.805 428.777 li
374.626 428.777 li
cp
0 .993988 1 0 cmyk
f
.75 lw
[] 0 dsh
395.443 337.877 mo
395.443 332.438 li
@
395.443 319.166 mo
395.443 313.727 li
@
395.443 319.166 mo
396.933 323.751 li
401.755 323.751 li
397.854 326.585 li
399.344 331.171 li
395.443 328.337 li
391.543 331.171 li
393.033 326.585 li
389.132 323.751 li
393.953 323.751 li
cp
f
414.77 375.441 mo
414.77 373.686 li
@
414.77 360.413 mo
414.77 358.658 li
@
414.77 360.413 mo
416.26 364.999 li
421.082 364.999 li
417.181 367.833 li
418.671 372.418 li
414.77 369.584 li
410.87 372.418 li
412.36 367.833 li
408.459 364.999 li
413.281 364.999 li
cp
f
434.098 384.673 mo
434.098 379.618 li
@
434.098 366.345 mo
434.098 361.29 li
@
434.098 366.345 mo
435.587 370.931 li
440.409 370.931 li
436.508 373.765 li
437.998 378.35 li
434.098 375.516 li
430.197 378.35 li
431.687 373.765 li
427.786 370.931 li
432.608 370.931 li
cp
f
453.425 415.882 mo
453.425 413.08 li
@
453.425 399.807 mo
453.425 397.005 li
@
453.425 399.807 mo
454.915 404.393 li
459.736 404.393 li
455.835 407.227 li
457.325 411.812 li
453.425 408.978 li
449.524 411.812 li
451.014 407.227 li
447.113 404.393 li
451.935 404.393 li
cp
f
472.752 433.966 mo
472.752 433.49 li
@
472.752 420.217 mo
472.752 419.741 li
@
472.752 420.217 mo
474.242 424.803 li
479.063 424.803 li
475.163 427.637 li
476.652 432.223 li
472.752 429.389 li
468.851 432.223 li
470.341 427.637 li
466.44 424.803 li
471.262 424.803 li
cp
f
492.079 444.191 mo
493.569 448.777 li
498.39 448.777 li
494.49 451.611 li
495.98 456.197 li
492.079 453.363 li
488.178 456.197 li
489.668 451.611 li
485.768 448.777 li
490.589 448.777 li
cp
f
511.406 452.079 mo
512.896 456.664 li
517.717 456.664 li
513.817 459.498 li
515.307 464.084 li
511.406 461.25 li
507.505 464.084 li
508.995 459.498 li
505.095 456.664 li
509.916 456.664 li
cp
f
grestore
%ADOBeginSubsetFont: KAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SXWSCW+Helvetica-Bold gcheck setglobal} if
1 1812 13 <00020040ffda042a05b8000c002c007540494c0d4c2c5c0d5c2c04372657
13022c110a0215084018181e27114029052002401e0d0a0c0d6f2c7c056f
1b15e40c6f1ba71022302202702280229022a022b022d022f02207222e47
2d4e1076c4184dd45d714ee44dfde510edf4ed1139003fed393fed391239
2fed39113910cd3130015d005d0016333236353426232207061501342726
23220706073e013332121514022320272611343736373e0133321617015e
7e615f6d7c5a49385401911b2e5d8b3b200c358c5ac1f7f2fffeee82650e
19483ec98ccaf00f0156948f727f872c41910272232a449c56a83f3afefa
cccbfecae5b3011ba668b97b6980cfac>SXWSCW+Helvetica-Bold AddT42Char 
SXWSCW+Helvetica-Bold /CharStrings get begin
/six 13 def
end
SXWSCW+Helvetica-Bold /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/SXWSCW+Helvetica-Bold*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 3{/.notdef}rp /less /equal 3{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /H /I /J 2{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S /T /U /V /W /.notdef /Y /.notdef /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z /.notdef /bar 131{/.notdef}rp]SXWSCW+Helvetica-Bold nfSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf487.861 458.448 mo(])shSXWSCX+Helvetica-BoldOblique*1 [10.9268 0 0 -10.9268 0 0 ]msf481.224 458.448 mo(c)shSXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf424.816 458.448 mo( < 60 [GeV/)[3.03763 6.38126 3.03766 6.07529 6.07529 3.03766 3.63855 8.50104 6.07532 7.28824 0 ]xshgsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCW+Helvetica-Bold*1 [7.60128 0 0 -7.60128 0 0 ]msf409.173 464.61 mo(T,jet)[4.64432 2.11316 2.11313 4.22632 0 ]xshgrestore
gsave
369.545 469.635 mo
539.624 469.635 li
539.624 288.749 li
369.545 288.749 li
cp
clp
SXWSCW+Helvetica-Bold*1 [10.9268 0 0 -10.9268 0 0 ]msf377.888 458.448 mo(40 < p)[6.07529 6.07529 3.03766 6.38126 3.03763 0 ]xshgrestore
SXWSCW+Helvetica-Bold*1 [12.8272 0 0 -12.8272 0 0 ]msf458.471 328.566 mo(PYTHIA 6)[8.55582 8.55585 7.83731 9.26126 3.56595 9.26123 3.56598 0 ]xshgsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
[] 0 dsh
440.765 324.926 mo
455.647 324.926 li
.883665 .769161 0 0 cmyk
@
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
0 0 0 0 cmyk
ef
.4 lw
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
@
40.726 523.901 mo
199.466 523.901 li
199.466 469.635 li
40.726 469.635 li
cp
ef
40.726 523.901 mo
199.466 523.901 li
199.466 469.635 li
40.726 469.635 li
cp
@
.75 lw
40.726 523.901 mo
199.466 523.901 li
199.466 469.635 li
40.726 469.635 li
cp
.75021 .679683 .670222 .90164 cmyk
@
40.726 523.901 mo
43.6122 523.901 li
46.4984 523.901 li
49.3846 523.901 li
52.2708 523.901 li
55.157 523.901 li
58.0431 523.901 li
60.9293 523.901 li
63.8155 523.901 li
66.7017 523.901 li
69.5879 523.901 li
72.4741 523.901 li
75.3603 523.901 li
78.2464 523.901 li
81.1326 523.901 li
84.0188 523.901 li
86.905 523.901 li
89.7912 523.901 li
92.6774 523.901 li
95.5635 523.901 li
98.4497 523.901 li
101.336 523.901 li
104.222 523.901 li
107.108 523.901 li
109.994 523.901 li
112.881 523.901 li
115.767 523.901 li
118.653 523.901 li
121.539 523.901 li
124.425 523.901 li
127.312 523.901 li
130.198 523.901 li
133.084 523.901 li
135.97 523.901 li
138.856 523.901 li
141.743 523.901 li
144.629 523.901 li
147.515 523.901 li
150.401 523.901 li
153.287 523.901 li
156.173 523.901 li
159.06 523.901 li
161.946 523.901 li
164.832 523.901 li
167.718 523.901 li
170.604 523.901 li
173.491 523.901 li
176.377 523.901 li
179.263 523.901 li
182.149 523.901 li
185.035 523.901 li
187.921 523.901 li
190.808 523.901 li
193.694 523.901 li
196.58 523.901 li
199.466 523.901 li
1 .978058 .0451667 .0556954 cmyk
@
40.726 523.901 mo
199.466 523.901 li
.75021 .679683 .670222 .90164 cmyk
@
73.9172 521.73 mo
73.9172 523.901 li
@
81.1326 522.815 mo
81.1326 523.901 li
@
88.3481 522.815 mo
88.3481 523.901 li
@
95.5635 522.815 mo
95.5635 523.901 li
@
102.779 522.815 mo
102.779 523.901 li
@
109.994 521.73 mo
109.994 523.901 li
@
117.21 522.815 mo
117.21 523.901 li
@
124.425 522.815 mo
124.425 523.901 li
@
131.641 522.815 mo
131.641 523.901 li
@
138.856 522.815 mo
138.856 523.901 li
@
146.072 521.73 mo
146.072 523.901 li
@
153.287 522.815 mo
153.287 523.901 li
@
160.503 522.815 mo
160.503 523.901 li
@
167.718 522.815 mo
167.718 523.901 li
@
174.934 522.815 mo
174.934 523.901 li
@
182.149 521.73 mo
182.149 523.901 li
@
73.9172 521.73 mo
73.9172 523.901 li
@
66.7017 522.815 mo
66.7017 523.901 li
@
59.4862 522.815 mo
59.4862 523.901 li
@
52.2708 522.815 mo
52.2708 523.901 li
@
45.0553 522.815 mo
45.0553 523.901 li
@
182.149 521.73 mo
182.149 523.901 li
@
189.365 522.815 mo
189.365 523.901 li
@
196.58 522.815 mo
196.58 523.901 li
@
grestore
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf65.5079 535.713 mo(0.1)[7.41064 3.70532 0 ]xsh100.585 535.713 mo(0.2)[7.41064 3.70532 0 ]xsh136.611 535.713 mo(0.3)[7.41063 3.70532 0 ]xshgsave
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
clp
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf173.111 535.713 mo(0.4)[7.41063 3.70532 0 ]xshgrestore
gsave
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.4724 0 0 -10.4724 0 0 ]msf193.968 552.304 mo(g)shgrestore
gsave
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
clp
SXWSCV+Helvetica*1 [15.7086 0 0 -15.7086 0 0 ]msf183.065 548.986 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
.75 lw
[] 0 dsh
40.726 469.635 mo
199.466 469.635 li
@
73.9172 471.806 mo
73.9172 469.635 li
@
81.1326 470.72 mo
81.1326 469.635 li
@
88.3481 470.72 mo
88.3481 469.635 li
@
95.5635 470.72 mo
95.5635 469.635 li
@
102.779 470.72 mo
102.779 469.635 li
@
109.994 471.806 mo
109.994 469.635 li
@
117.21 470.72 mo
117.21 469.635 li
@
124.425 470.72 mo
124.425 469.635 li
@
131.641 470.72 mo
131.641 469.635 li
@
138.856 470.72 mo
138.856 469.635 li
@
146.072 471.806 mo
146.072 469.635 li
@
153.287 470.72 mo
153.287 469.635 li
@
160.503 470.72 mo
160.503 469.635 li
@
167.718 470.72 mo
167.718 469.635 li
@
174.934 470.72 mo
174.934 469.635 li
@
182.149 471.806 mo
182.149 469.635 li
@
73.9172 471.806 mo
73.9172 469.635 li
@
66.7017 470.72 mo
66.7017 469.635 li
@
59.4862 470.72 mo
59.4862 469.635 li
@
52.2708 470.72 mo
52.2708 469.635 li
@
45.0553 470.72 mo
45.0553 469.635 li
@
182.149 471.806 mo
182.149 469.635 li
@
189.365 470.72 mo
189.365 469.635 li
@
196.58 470.72 mo
196.58 469.635 li
@
40.726 523.901 mo
40.726 469.635 li
@
44.2977 523.539 mo
40.726 523.539 li
@
42.5119 519.921 mo
40.726 519.921 li
@
42.5119 516.304 mo
40.726 516.304 li
@
42.5119 512.686 mo
40.726 512.686 li
@
42.5119 509.068 mo
40.726 509.068 li
@
44.2977 505.45 mo
40.726 505.45 li
@
42.5119 501.833 mo
40.726 501.833 li
@
42.5119 498.215 mo
40.726 498.215 li
@
42.5119 494.597 mo
40.726 494.597 li
@
42.5119 490.98 mo
40.726 490.98 li
@
44.2977 487.362 mo
40.726 487.362 li
@
44.2977 523.539 mo
40.726 523.539 li
@
44.2977 487.362 mo
40.726 487.362 li
@
42.5119 483.744 mo
40.726 483.744 li
@
42.5119 480.126 mo
40.726 480.126 li
@
42.5119 476.509 mo
40.726 476.509 li
@
42.5119 472.891 mo
40.726 472.891 li
@
grestore
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf24.268 527.655 mo(0.5)[6.08731 3.04365 0 ]xsh35.1705 509.642 mo(1)sh24.268 491.155 mo(1.5)[6.08731 3.04365 0 ]xshgsave
1.04102 560.078 mo
199.466 560.078 li
199.466 469.635 li
1.04102 469.635 li
cp
clp
SXWSCV+Helvetica*1 [0 -14.2805 -14.2805 0 0 0 ]msf20.0018 524.337 mo(MC/Data)[-11.8956 -10.3105 -3.96997 -10.3105 -7.93997 -3.96997 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
.75 lw
[] 0 dsh
199.466 523.901 mo
199.466 469.635 li
@
195.895 523.539 mo
199.466 523.539 li
@
197.68 519.921 mo
199.466 519.921 li
@
197.68 516.304 mo
199.466 516.304 li
@
197.68 512.686 mo
199.466 512.686 li
@
197.68 509.068 mo
199.466 509.068 li
@
195.895 505.45 mo
199.466 505.45 li
@
197.68 501.833 mo
199.466 501.833 li
@
197.68 498.215 mo
199.466 498.215 li
@
197.68 494.597 mo
199.466 494.597 li
@
197.68 490.98 mo
199.466 490.98 li
@
195.895 487.362 mo
199.466 487.362 li
@
195.895 523.539 mo
199.466 523.539 li
@
195.895 487.362 mo
199.466 487.362 li
@
197.68 483.744 mo
199.466 483.744 li
@
197.68 480.126 mo
199.466 480.126 li
@
197.68 476.509 mo
199.466 476.509 li
@
197.68 472.891 mo
199.466 472.891 li
@
46.8592 505.431 mo
46.8634 505.445 li
46.8772 505.445 li
46.8661 505.453 li
46.8703 505.466 li
46.8592 505.458 li
46.848 505.466 li
46.8523 505.453 li
46.8411 505.445 li
46.8549 505.445 li
cp
0 .993988 1 0 cmyk
f
64.8978 505.431 mo
64.9021 505.445 li
64.9159 505.445 li
64.9047 505.453 li
64.909 505.466 li
64.8978 505.458 li
64.8867 505.466 li
64.8909 505.453 li
64.8798 505.445 li
64.8936 505.445 li
cp
f
82.9365 505.431 mo
82.9407 505.445 li
82.9545 505.445 li
82.9434 505.453 li
82.9476 505.466 li
82.9365 505.458 li
82.9253 505.466 li
82.9296 505.453 li
82.9185 505.445 li
82.9322 505.445 li
cp
f
100.975 505.431 mo
100.979 505.445 li
100.993 505.445 li
100.982 505.453 li
100.986 505.466 li
100.975 505.458 li
100.964 505.466 li
100.968 505.453 li
100.957 505.445 li
100.971 505.445 li
cp
f
119.014 505.431 mo
119.018 505.445 li
119.032 505.445 li
119.021 505.453 li
119.025 505.466 li
119.014 505.458 li
119.003 505.466 li
119.007 505.453 li
118.996 505.445 li
119.01 505.445 li
cp
f
137.052 505.431 mo
137.057 505.445 li
137.07 505.445 li
137.059 505.453 li
137.064 505.466 li
137.052 505.458 li
137.041 505.466 li
137.046 505.453 li
137.034 505.445 li
137.048 505.445 li
cp
f
155.091 505.431 mo
155.095 505.445 li
155.109 505.445 li
155.098 505.453 li
155.102 505.466 li
155.091 505.458 li
155.08 505.466 li
155.084 505.453 li
155.073 505.445 li
155.087 505.445 li
cp
f
173.13 505.431 mo
173.134 505.445 li
173.148 505.445 li
173.137 505.453 li
173.141 505.466 li
173.13 505.458 li
173.119 505.466 li
173.123 505.453 li
173.112 505.445 li
173.126 505.445 li
cp
f
191.168 505.431 mo
191.173 505.445 li
191.186 505.445 li
191.175 505.453 li
191.18 505.466 li
191.168 505.458 li
191.157 505.466 li
191.162 505.453 li
191.15 505.445 li
191.164 505.445 li
cp
f
46.8592 485.7 mo
64.8978 497.85 li
82.9365 501.261 li
100.975 503.15 li
119.014 502.4 li
137.052 499.452 li
155.091 499.856 li
173.13 499.373 li
191.168 477.693 li
191.168 523.901 li
173.13 511.527 li
155.091 511.045 li
137.052 511.448 li
119.014 508.501 li
100.975 507.751 li
82.9365 509.64 li
64.8978 513.051 li
46.8592 523.901 li
0 .241001 .107607 0 cmyk
ef
1.5 lw
[3 3 ] 0 dsh
37.8399 505.45 mo
196.58 505.45 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
46.8592 522.974 mo
46.8592 520.875 li
.883665 .769161 0 0 cmyk
@
46.8592 520.875 mo
46.8592 518.776 li
@
45.9111 522.974 mo
47.8072 522.974 li
@
45.9111 518.776 mo
47.8072 518.776 li
@
.75 lw
45.8592 520.875 mo
46.8592 520.875 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
64.8978 502.68 mo
64.8978 500.973 li
.883665 .769161 0 0 cmyk
@
64.8978 500.973 mo
64.8978 499.267 li
@
63.9498 502.68 mo
65.8459 502.68 li
@
63.9498 499.267 mo
65.8459 499.267 li
@
.75 lw
63.8978 500.973 mo
64.8978 500.973 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
82.9365 505.143 mo
82.9365 503.933 li
.883665 .769161 0 0 cmyk
@
82.9365 503.933 mo
82.9365 502.723 li
@
81.9884 505.143 mo
83.8845 505.143 li
@
81.9884 502.723 mo
83.8845 502.723 li
@
.75 lw
81.9365 503.933 mo
82.9365 503.933 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
100.975 508.998 mo
100.975 507.897 li
.883665 .769161 0 0 cmyk
@
100.975 507.897 mo
100.975 506.797 li
@
100.027 508.998 mo
101.923 508.998 li
@
100.027 506.797 mo
101.923 506.797 li
@
.75 lw
99.9751 507.897 mo
100.975 507.897 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
119.014 507.21 mo
119.014 505.975 li
.883665 .769161 0 0 cmyk
@
119.014 505.975 mo
119.014 504.741 li
@
118.066 507.21 mo
119.962 507.21 li
@
118.066 504.741 mo
119.962 504.741 li
@
.75 lw
118.014 505.975 mo
119.014 505.975 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
137.052 504.589 mo
137.052 503.282 li
.883665 .769161 0 0 cmyk
@
137.052 503.282 mo
137.052 501.974 li
@
136.104 504.589 mo
138 504.589 li
@
136.104 501.974 mo
138 501.974 li
@
.75 lw
136.052 503.282 mo
137.052 503.282 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
155.091 505.236 mo
155.091 503.622 li
.883665 .769161 0 0 cmyk
@
155.091 503.622 mo
155.091 502.007 li
@
154.143 505.236 mo
156.039 505.236 li
@
154.143 502.007 mo
156.039 502.007 li
@
.75 lw
154.091 503.622 mo
155.091 503.622 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
173.13 506.869 mo
173.13 504.602 li
.883665 .769161 0 0 cmyk
@
173.13 504.602 mo
173.13 502.334 li
@
172.182 506.869 mo
174.078 506.869 li
@
172.182 502.334 mo
174.078 502.334 li
@
.75 lw
172.13 504.602 mo
173.13 504.602 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
191.168 523.882 mo
191.168 518.841 li
.883665 .769161 0 0 cmyk
@
191.168 518.841 mo
191.168 513.8 li
@
190.22 523.882 mo
192.116 523.882 li
@
190.22 513.8 mo
192.116 513.8 li
@
.75 lw
190.168 518.841 mo
191.168 518.841 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
40.726 520.875 mo
55.8785 520.875 li
55.8785 500.973 li
73.9172 500.973 li
73.9172 503.933 li
91.9558 503.933 li
91.9558 507.897 li
109.994 507.897 li
109.994 505.975 li
128.033 505.975 li
128.033 503.282 li
146.072 503.282 li
146.072 503.622 li
164.11 503.622 li
164.11 504.602 li
182.149 504.602 li
182.149 518.841 li
199.466 518.841 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
64.8978 511.539 mo
64.8978 510.791 li
.75021 .679683 .670222 .90164 cmyk
@
64.8978 510.791 mo
64.8978 510.043 li
@
63.9498 511.539 mo
65.8459 511.539 li
@
63.9498 510.043 mo
65.8459 510.043 li
@
.75 lw
[] 0 dsh
63.8978 510.791 mo
64.8978 510.791 li
@
1.5 lw
[1 2 ] 0 dsh
82.9365 509.372 mo
82.9365 508.712 li
@
82.9365 508.712 mo
82.9365 508.052 li
@
81.9884 509.372 mo
83.8845 509.372 li
@
81.9884 508.052 mo
83.8845 508.052 li
@
.75 lw
[] 0 dsh
81.9365 508.712 mo
82.9365 508.712 li
@
1.5 lw
[1 2 ] 0 dsh
100.975 511.108 mo
100.975 510.608 li
@
100.975 510.608 mo
100.975 510.109 li
@
100.027 511.108 mo
101.923 511.108 li
@
100.027 510.109 mo
101.923 510.109 li
@
.75 lw
[] 0 dsh
99.9751 510.608 mo
100.975 510.608 li
@
1.5 lw
[1 2 ] 0 dsh
119.014 505.534 mo
119.014 504.832 li
@
119.014 504.832 mo
119.014 504.13 li
@
118.066 505.534 mo
119.962 505.534 li
@
118.066 504.13 mo
119.962 504.13 li
@
.75 lw
[] 0 dsh
118.014 504.832 mo
119.014 504.832 li
@
1.5 lw
[1 2 ] 0 dsh
137.052 498.551 mo
137.052 497.75 li
@
137.052 497.75 mo
137.052 496.949 li
@
136.104 498.551 mo
138 498.551 li
@
136.104 496.949 mo
138 496.949 li
@
.75 lw
[] 0 dsh
136.052 497.75 mo
137.052 497.75 li
@
1.5 lw
[1 2 ] 0 dsh
155.091 493.217 mo
155.091 492.048 li
@
155.091 492.048 mo
155.091 490.879 li
@
154.143 493.217 mo
156.039 493.217 li
@
154.143 490.879 mo
156.039 490.879 li
@
.75 lw
[] 0 dsh
154.091 492.048 mo
155.091 492.048 li
@
1.5 lw
[1 2 ] 0 dsh
173.13 499.389 mo
173.13 497.931 li
@
173.13 497.931 mo
173.13 496.473 li
@
172.182 499.389 mo
174.078 499.389 li
@
172.182 496.473 mo
174.078 496.473 li
@
.75 lw
[] 0 dsh
172.13 497.931 mo
173.13 497.931 li
@
1.5 lw
[1 2 ] 0 dsh
191.168 516.534 mo
191.168 509.988 li
@
191.168 509.988 mo
191.168 503.441 li
@
190.22 516.534 mo
192.116 516.534 li
@
190.22 503.441 mo
192.116 503.441 li
@
.75 lw
[] 0 dsh
190.168 509.988 mo
191.168 509.988 li
@
1.5 lw
[1 2 ] 0 dsh
40.726 523.901 mo
55.8785 523.901 li
55.8785 510.791 li
73.9172 510.791 li
73.9172 508.712 li
91.9558 508.712 li
91.9558 510.608 li
109.994 510.608 li
109.994 504.832 li
128.033 504.832 li
128.033 497.75 li
146.072 497.75 li
146.072 492.048 li
164.11 492.048 li
164.11 497.931 li
182.149 497.931 li
182.149 509.988 li
199.466 509.988 li
@
[3 4 1 4 ] 0 dsh
46.8592 512.724 mo
46.8592 510.986 li
.269902 .816403 0 0 cmyk
@
46.8592 510.986 mo
46.8592 509.247 li
@
45.9111 512.724 mo
47.8072 512.724 li
@
45.9111 509.247 mo
47.8072 509.247 li
@
.75 lw
[] 0 dsh
45.8592 510.986 mo
46.8592 510.986 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
64.8978 494.164 mo
64.8978 492.681 li
.269902 .816403 0 0 cmyk
@
64.8978 492.681 mo
64.8978 491.198 li
@
63.9498 494.164 mo
65.8459 494.164 li
@
63.9498 491.198 mo
65.8459 491.198 li
@
.75 lw
[] 0 dsh
63.8978 492.681 mo
64.8978 492.681 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
82.9365 504.352 mo
82.9365 503.405 li
.269902 .816403 0 0 cmyk
@
82.9365 503.405 mo
82.9365 502.458 li
@
81.9884 504.352 mo
83.8845 504.352 li
@
81.9884 502.458 mo
83.8845 502.458 li
@
.75 lw
[] 0 dsh
81.9365 503.405 mo
82.9365 503.405 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
100.975 509.923 mo
100.975 508.997 li
.269902 .816403 0 0 cmyk
@
100.975 508.997 mo
100.975 508.071 li
@
100.027 509.923 mo
101.923 509.923 li
@
100.027 508.071 mo
101.923 508.071 li
@
.75 lw
[] 0 dsh
99.9751 508.997 mo
100.975 508.997 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
119.014 510.564 mo
119.014 509.714 li
.269902 .816403 0 0 cmyk
@
119.014 509.714 mo
119.014 508.864 li
@
118.066 510.564 mo
119.962 510.564 li
@
118.066 508.864 mo
119.962 508.864 li
@
.75 lw
[] 0 dsh
118.014 509.714 mo
119.014 509.714 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
137.052 508.241 mo
137.052 507.402 li
.269902 .816403 0 0 cmyk
@
137.052 507.402 mo
137.052 506.564 li
@
136.104 508.241 mo
138 508.241 li
@
136.104 506.564 mo
138 506.564 li
@
.75 lw
[] 0 dsh
136.052 507.402 mo
137.052 507.402 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
155.091 504.681 mo
155.091 503.08 li
.269902 .816403 0 0 cmyk
@
155.091 503.08 mo
155.091 501.48 li
@
154.143 504.681 mo
156.039 504.681 li
@
154.143 501.48 mo
156.039 501.48 li
@
.75 lw
[] 0 dsh
154.091 503.08 mo
155.091 503.08 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
173.13 505.561 mo
173.13 503.158 li
.269902 .816403 0 0 cmyk
@
173.13 503.158 mo
173.13 500.754 li
@
172.182 505.561 mo
174.078 505.561 li
@
172.182 500.754 mo
174.078 500.754 li
@
.75 lw
[] 0 dsh
172.13 503.158 mo
173.13 503.158 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
191.168 519.88 mo
191.168 516.303 li
.269902 .816403 0 0 cmyk
@
191.168 516.303 mo
191.168 512.726 li
@
190.22 519.88 mo
192.116 519.88 li
@
190.22 512.726 mo
192.116 512.726 li
@
.75 lw
[] 0 dsh
190.168 516.303 mo
191.168 516.303 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
40.726 510.986 mo
55.8785 510.986 li
55.8785 492.681 li
73.9172 492.681 li
73.9172 503.405 li
91.9558 503.405 li
91.9558 508.997 li
109.994 508.997 li
109.994 509.714 li
128.033 509.714 li
128.033 507.402 li
146.072 507.402 li
146.072 503.08 li
164.11 503.08 li
164.11 503.158 li
182.149 503.158 li
182.149 516.303 li
199.466 516.303 li
.269902 .816403 0 0 cmyk
@
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
0 0 0 0 cmyk
ef
.4 lw
[] 0 dsh
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
@
199.466 523.901 mo
369.545 523.901 li
369.545 469.635 li
199.466 469.635 li
cp
ef
199.466 523.901 mo
369.545 523.901 li
369.545 469.635 li
199.466 469.635 li
cp
@
.75 lw
199.466 523.901 mo
369.545 523.901 li
369.545 469.635 li
199.466 469.635 li
cp
.75021 .679683 .670222 .90164 cmyk
@
199.466 523.901 mo
202.559 523.901 li
205.651 523.901 li
208.743 523.901 li
211.836 523.901 li
214.928 523.901 li
218.02 523.901 li
221.113 523.901 li
224.205 523.901 li
227.297 523.901 li
230.39 523.901 li
233.482 523.901 li
236.574 523.901 li
239.667 523.901 li
242.759 523.901 li
245.851 523.901 li
248.944 523.901 li
252.036 523.901 li
255.128 523.901 li
258.221 523.901 li
261.313 523.901 li
264.405 523.901 li
267.498 523.901 li
270.59 523.901 li
273.682 523.901 li
276.775 523.901 li
279.867 523.901 li
282.959 523.901 li
286.052 523.901 li
289.144 523.901 li
292.236 523.901 li
295.329 523.901 li
298.421 523.901 li
301.513 523.901 li
304.606 523.901 li
307.698 523.901 li
310.79 523.901 li
313.883 523.901 li
316.975 523.901 li
320.067 523.901 li
323.16 523.901 li
326.252 523.901 li
329.344 523.901 li
332.437 523.901 li
335.529 523.901 li
338.622 523.901 li
341.714 523.901 li
344.806 523.901 li
347.899 523.901 li
350.991 523.901 li
354.083 523.901 li
357.176 523.901 li
360.268 523.901 li
363.36 523.901 li
366.453 523.901 li
369.545 523.901 li
1 .978058 .0451667 .0556954 cmyk
@
199.466 523.901 mo
369.545 523.901 li
.75021 .679683 .670222 .90164 cmyk
@
235.028 521.188 mo
235.028 523.901 li
@
242.759 522.544 mo
242.759 523.901 li
@
250.49 522.544 mo
250.49 523.901 li
@
258.221 522.544 mo
258.221 523.901 li
@
265.952 522.544 mo
265.952 523.901 li
@
273.682 521.188 mo
273.682 523.901 li
@
281.413 522.544 mo
281.413 523.901 li
@
289.144 522.544 mo
289.144 523.901 li
@
296.875 522.544 mo
296.875 523.901 li
@
304.606 522.544 mo
304.606 523.901 li
@
312.337 521.188 mo
312.337 523.901 li
@
320.067 522.544 mo
320.067 523.901 li
@
327.798 522.544 mo
327.798 523.901 li
@
335.529 522.544 mo
335.529 523.901 li
@
343.26 522.544 mo
343.26 523.901 li
@
350.991 521.188 mo
350.991 523.901 li
@
235.028 521.188 mo
235.028 523.901 li
@
227.297 522.544 mo
227.297 523.901 li
@
219.566 522.544 mo
219.566 523.901 li
@
211.836 522.544 mo
211.836 523.901 li
@
204.105 522.544 mo
204.105 523.901 li
@
350.991 521.188 mo
350.991 523.901 li
@
358.722 522.544 mo
358.722 523.901 li
@
366.453 522.544 mo
366.453 523.901 li
@
grestore
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf226.675 535.713 mo(0.1)[7.41063 3.70532 0 ]xsh264.597 535.713 mo(0.2)[7.41061 3.70532 0 ]xshSXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf302.992 535.713 mo(0.3)[7.41061 3.70532 0 ]xshgsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf341.862 535.713 mo(0.4)[7.41061 3.70532 0 ]xshgrestore
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.4724 0 0 -10.4724 0 0 ]msf364.141 552.304 mo(g)shgrestore
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [15.7086 0 0 -15.7086 0 0 ]msf353.239 548.986 mo(R)shgrestore
.75 lw
[] 0 dsh
199.466 469.635 mo
369.545 469.635 li
@
235.028 472.348 mo
235.028 469.635 li
@
242.759 470.992 mo
242.759 469.635 li
@
250.49 470.992 mo
250.49 469.635 li
@
258.221 470.992 mo
258.221 469.635 li
@
265.952 470.992 mo
265.952 469.635 li
@
273.682 472.348 mo
273.682 469.635 li
@
281.413 470.992 mo
281.413 469.635 li
@
289.144 470.992 mo
289.144 469.635 li
@
296.875 470.992 mo
296.875 469.635 li
@
304.606 470.992 mo
304.606 469.635 li
@
312.337 472.348 mo
312.337 469.635 li
@
320.067 470.992 mo
320.067 469.635 li
@
327.798 470.992 mo
327.798 469.635 li
@
335.529 470.992 mo
335.529 469.635 li
@
343.26 470.992 mo
343.26 469.635 li
@
350.991 472.348 mo
350.991 469.635 li
@
235.028 472.348 mo
235.028 469.635 li
@
227.297 470.992 mo
227.297 469.635 li
@
219.566 470.992 mo
219.566 469.635 li
@
211.836 470.992 mo
211.836 469.635 li
@
204.105 470.992 mo
204.105 469.635 li
@
350.991 472.348 mo
350.991 469.635 li
@
358.722 470.992 mo
358.722 469.635 li
@
366.453 470.992 mo
366.453 469.635 li
@
199.466 523.901 mo
199.466 469.635 li
@
202.528 523.539 mo
199.466 523.539 li
@
200.997 519.921 mo
199.466 519.921 li
@
200.997 516.304 mo
199.466 516.304 li
@
200.997 512.686 mo
199.466 512.686 li
@
200.997 509.068 mo
199.466 509.068 li
@
202.528 505.45 mo
199.466 505.45 li
@
200.997 501.833 mo
199.466 501.833 li
@
200.997 498.215 mo
199.466 498.215 li
@
200.997 494.597 mo
199.466 494.597 li
@
200.997 490.98 mo
199.466 490.98 li
@
202.528 487.362 mo
199.466 487.362 li
@
202.528 523.539 mo
199.466 523.539 li
@
202.528 487.362 mo
199.466 487.362 li
@
200.997 483.744 mo
199.466 483.744 li
@
200.997 480.126 mo
199.466 480.126 li
@
200.997 476.509 mo
199.466 476.509 li
@
200.997 472.891 mo
199.466 472.891 li
@
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf183.065 527.655 mo(0.5)[6.0873 3.04366 0 ]xshgrestore
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf193.968 509.642 mo(1)shgrestore
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf183.065 491.155 mo(1.5)[6.0873 3.04366 0 ]xshgrestore
gsave
199.466 560.078 mo
369.545 560.078 li
369.545 469.635 li
199.466 469.635 li
cp
clp
SXWSCV+Helvetica*1 [0 -14.2805 -14.2805 0 0 0 ]msf182.117 524.337 mo(MC/Data)[-11.8956 -10.3105 -3.96997 -10.3105 -7.93997 -3.96997 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 523.901 mo
369.545 469.635 li
@
366.484 523.539 mo
369.545 523.539 li
@
368.014 519.921 mo
369.545 519.921 li
@
368.014 516.304 mo
369.545 516.304 li
@
368.014 512.686 mo
369.545 512.686 li
@
368.014 509.068 mo
369.545 509.068 li
@
366.484 505.45 mo
369.545 505.45 li
@
368.014 501.833 mo
369.545 501.833 li
@
368.014 498.215 mo
369.545 498.215 li
@
368.014 494.597 mo
369.545 494.597 li
@
368.014 490.98 mo
369.545 490.98 li
@
366.484 487.362 mo
369.545 487.362 li
@
366.484 523.539 mo
369.545 523.539 li
@
366.484 487.362 mo
369.545 487.362 li
@
368.014 483.744 mo
369.545 483.744 li
@
368.014 480.126 mo
369.545 480.126 li
@
368.014 476.509 mo
369.545 476.509 li
@
368.014 472.891 mo
369.545 472.891 li
@
206.037 505.431 mo
206.042 505.445 li
206.055 505.445 li
206.044 505.453 li
206.049 505.466 li
206.037 505.458 li
206.026 505.466 li
206.031 505.453 li
206.019 505.445 li
206.033 505.445 li
cp
0 .993988 1 0 cmyk
f
225.365 505.431 mo
225.369 505.445 li
225.383 505.445 li
225.371 505.453 li
225.376 505.466 li
225.365 505.458 li
225.353 505.466 li
225.358 505.453 li
225.347 505.445 li
225.36 505.445 li
cp
f
244.692 505.431 mo
244.696 505.445 li
244.71 505.445 li
244.699 505.453 li
244.703 505.466 li
244.692 505.458 li
244.681 505.466 li
244.685 505.453 li
244.674 505.445 li
244.687 505.445 li
cp
f
264.019 505.431 mo
264.023 505.445 li
264.037 505.445 li
264.026 505.453 li
264.03 505.466 li
264.019 505.458 li
264.008 505.466 li
264.012 505.453 li
264.001 505.445 li
264.015 505.445 li
cp
f
283.346 505.431 mo
283.35 505.445 li
283.364 505.445 li
283.353 505.453 li
283.357 505.466 li
283.346 505.458 li
283.335 505.466 li
283.339 505.453 li
283.328 505.445 li
283.342 505.445 li
cp
f
302.673 505.431 mo
302.677 505.445 li
302.691 505.445 li
302.68 505.453 li
302.684 505.466 li
302.673 505.458 li
302.662 505.466 li
302.666 505.453 li
302.655 505.445 li
302.669 505.445 li
cp
f
322 505.431 mo
322.004 505.445 li
322.018 505.445 li
322.007 505.453 li
322.011 505.466 li
322 505.458 li
321.989 505.466 li
321.993 505.453 li
321.982 505.445 li
321.996 505.445 li
cp
f
341.327 505.431 mo
341.332 505.445 li
341.345 505.445 li
341.334 505.453 li
341.338 505.466 li
341.327 505.458 li
341.316 505.466 li
341.32 505.453 li
341.309 505.445 li
341.323 505.445 li
cp
f
360.654 505.431 mo
360.659 505.445 li
360.673 505.445 li
360.661 505.453 li
360.666 505.466 li
360.654 505.458 li
360.643 505.466 li
360.648 505.453 li
360.636 505.445 li
360.65 505.445 li
cp
f
206.037 497.696 mo
225.365 499.295 li
244.692 502.566 li
264.019 503.667 li
283.346 501.762 li
302.673 502.386 li
322 501.032 li
341.327 496.43 li
360.654 469.635 li
360.654 523.901 li
341.327 514.471 li
322 509.868 li
302.673 508.514 li
283.346 509.138 li
264.019 507.234 li
244.692 508.335 li
225.365 511.606 li
206.037 513.205 li
0 .241001 .107607 0 cmyk
ef
1.5 lw
[3 3 ] 0 dsh
199.466 505.45 mo
366.453 505.45 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
206.037 515.989 mo
206.037 513.824 li
.883665 .769161 0 0 cmyk
@
206.037 513.824 mo
206.037 511.659 li
@
205.089 515.989 mo
206.985 515.989 li
@
205.089 511.659 mo
206.985 511.659 li
@
.75 lw
205.037 513.824 mo
206.037 513.824 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
225.365 502.598 mo
225.365 500.365 li
.883665 .769161 0 0 cmyk
@
225.365 500.365 mo
225.365 498.132 li
@
224.417 502.598 mo
226.313 502.598 li
@
224.417 498.132 mo
226.313 498.132 li
@
.75 lw
224.365 500.365 mo
225.365 500.365 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
244.692 505.314 mo
244.692 503.791 li
.883665 .769161 0 0 cmyk
@
244.692 503.791 mo
244.692 502.267 li
@
243.744 505.314 mo
245.64 505.314 li
@
243.744 502.267 mo
245.64 502.267 li
@
.75 lw
243.692 503.791 mo
244.692 503.791 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
264.019 509.965 mo
264.019 508.726 li
.883665 .769161 0 0 cmyk
@
264.019 508.726 mo
264.019 507.488 li
@
263.071 509.965 mo
264.967 509.965 li
@
263.071 507.488 mo
264.967 507.488 li
@
.75 lw
263.019 508.726 mo
264.019 508.726 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
283.346 507.799 mo
283.346 505.887 li
.883665 .769161 0 0 cmyk
@
283.346 505.887 mo
283.346 503.975 li
@
282.398 507.799 mo
284.294 507.799 li
@
282.398 503.975 mo
284.294 503.975 li
@
.75 lw
282.346 505.887 mo
283.346 505.887 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
302.673 506.14 mo
302.673 504.379 li
.883665 .769161 0 0 cmyk
@
302.673 504.379 mo
302.673 502.617 li
@
301.725 506.14 mo
303.621 506.14 li
@
301.725 502.617 mo
303.621 502.617 li
@
.75 lw
301.673 504.379 mo
302.673 504.379 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
322 506.135 mo
322 504.213 li
.883665 .769161 0 0 cmyk
@
322 504.213 mo
322 502.29 li
@
321.052 506.135 mo
322.948 506.135 li
@
321.052 502.29 mo
322.948 502.29 li
@
.75 lw
321 504.213 mo
322 504.213 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
341.327 513.792 mo
341.327 511.264 li
.883665 .769161 0 0 cmyk
@
341.327 511.264 mo
341.327 508.736 li
@
340.379 513.792 mo
342.275 513.792 li
@
340.379 508.736 mo
342.275 508.736 li
@
.75 lw
340.327 511.264 mo
341.327 511.264 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
360.654 517.436 mo
360.654 509.583 li
.883665 .769161 0 0 cmyk
@
360.654 509.583 mo
360.654 501.73 li
@
359.706 517.436 mo
361.602 517.436 li
@
359.706 501.73 mo
361.602 501.73 li
@
.75 lw
359.654 509.583 mo
360.654 509.583 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
199.466 513.824 mo
215.701 513.824 li
215.701 500.365 li
235.028 500.365 li
235.028 503.791 li
254.355 503.791 li
254.355 508.726 li
273.682 508.726 li
273.682 505.887 li
293.01 505.887 li
293.01 504.379 li
312.337 504.379 li
312.337 504.213 li
331.664 504.213 li
331.664 511.264 li
350.991 511.264 li
350.991 509.583 li
369.545 509.583 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
206.037 522.121 mo
206.037 521.052 li
.75021 .679683 .670222 .90164 cmyk
@
206.037 521.052 mo
206.037 519.983 li
@
205.089 522.121 mo
206.985 522.121 li
@
205.089 519.983 mo
206.985 519.983 li
@
.75 lw
[] 0 dsh
205.037 521.052 mo
206.037 521.052 li
@
1.5 lw
[1 2 ] 0 dsh
225.365 511.386 mo
225.365 510.341 li
@
225.365 510.341 mo
225.365 509.296 li
@
224.417 511.386 mo
226.313 511.386 li
@
224.417 509.296 mo
226.313 509.296 li
@
.75 lw
[] 0 dsh
224.365 510.341 mo
225.365 510.341 li
@
1.5 lw
[1 2 ] 0 dsh
244.692 509.319 mo
244.692 508.543 li
@
244.692 508.543 mo
244.692 507.766 li
@
243.744 509.319 mo
245.64 509.319 li
@
243.744 507.766 mo
245.64 507.766 li
@
.75 lw
[] 0 dsh
243.692 508.543 mo
244.692 508.543 li
@
1.5 lw
[1 2 ] 0 dsh
264.019 508.01 mo
264.019 507.117 li
@
264.019 507.117 mo
264.019 506.223 li
@
263.071 508.01 mo
264.967 508.01 li
@
263.071 506.223 mo
264.967 506.223 li
@
.75 lw
[] 0 dsh
263.019 507.117 mo
264.019 507.117 li
@
1.5 lw
[1 2 ] 0 dsh
283.346 505.013 mo
283.346 503.931 li
@
283.346 503.931 mo
283.346 502.848 li
@
282.398 505.013 mo
284.294 505.013 li
@
282.398 502.848 mo
284.294 502.848 li
@
.75 lw
[] 0 dsh
282.346 503.931 mo
283.346 503.931 li
@
1.5 lw
[1 2 ] 0 dsh
302.673 498.268 mo
302.673 496.831 li
@
302.673 496.831 mo
302.673 495.395 li
@
301.725 498.268 mo
303.621 498.268 li
@
301.725 495.395 mo
303.621 495.395 li
@
.75 lw
[] 0 dsh
301.673 496.831 mo
302.673 496.831 li
@
1.5 lw
[1 2 ] 0 dsh
322 494.452 mo
322 492.78 li
@
322 492.78 mo
322 491.108 li
@
321.052 494.452 mo
322.948 494.452 li
@
321.052 491.108 mo
322.948 491.108 li
@
.75 lw
[] 0 dsh
321 492.78 mo
322 492.78 li
@
1.5 lw
[1 2 ] 0 dsh
341.327 499.32 mo
341.327 496.695 li
@
341.327 496.695 mo
341.327 494.07 li
@
340.379 499.32 mo
342.275 499.32 li
@
340.379 494.07 mo
342.275 494.07 li
@
.75 lw
[] 0 dsh
340.327 496.695 mo
341.327 496.695 li
@
1.5 lw
[1 2 ] 0 dsh
360.654 499.575 mo
360.654 496.552 li
@
360.654 496.552 mo
360.654 493.528 li
@
359.706 499.575 mo
361.602 499.575 li
@
359.706 493.528 mo
361.602 493.528 li
@
.75 lw
[] 0 dsh
359.654 496.552 mo
360.654 496.552 li
@
1.5 lw
[1 2 ] 0 dsh
199.466 521.052 mo
215.701 521.052 li
215.701 510.341 li
235.028 510.341 li
235.028 508.543 li
254.355 508.543 li
254.355 507.117 li
273.682 507.117 li
273.682 503.931 li
293.01 503.931 li
293.01 496.831 li
312.337 496.831 li
312.337 492.78 li
331.664 492.78 li
331.664 496.695 li
350.991 496.695 li
350.991 496.552 li
369.545 496.552 li
@
[3 4 1 4 ] 0 dsh
206.037 506.23 mo
206.037 503.631 li
.269902 .816403 0 0 cmyk
@
206.037 503.631 mo
206.037 501.032 li
@
205.089 506.23 mo
206.985 506.23 li
@
205.089 501.032 mo
206.985 501.032 li
@
.75 lw
[] 0 dsh
205.037 503.631 mo
206.037 503.631 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
225.365 499.411 mo
225.365 497.614 li
.269902 .816403 0 0 cmyk
@
225.365 497.614 mo
225.365 495.817 li
@
224.417 499.411 mo
226.313 499.411 li
@
224.417 495.817 mo
226.313 495.817 li
@
.75 lw
[] 0 dsh
224.365 497.614 mo
225.365 497.614 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
244.692 506.957 mo
244.692 505.697 li
.269902 .816403 0 0 cmyk
@
244.692 505.697 mo
244.692 504.438 li
@
243.744 506.957 mo
245.64 506.957 li
@
243.744 504.438 mo
245.64 504.438 li
@
.75 lw
[] 0 dsh
243.692 505.697 mo
244.692 505.697 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
264.019 511.789 mo
264.019 510.678 li
.269902 .816403 0 0 cmyk
@
264.019 510.678 mo
264.019 509.566 li
@
263.071 511.789 mo
264.967 511.789 li
@
263.071 509.566 mo
264.967 509.566 li
@
.75 lw
[] 0 dsh
263.019 510.678 mo
264.019 510.678 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
283.346 512.712 mo
283.346 511.425 li
.269902 .816403 0 0 cmyk
@
283.346 511.425 mo
283.346 510.138 li
@
282.398 512.712 mo
284.294 512.712 li
@
282.398 510.138 mo
284.294 510.138 li
@
.75 lw
[] 0 dsh
282.346 511.425 mo
283.346 511.425 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
302.673 506.66 mo
302.673 504.935 li
.269902 .816403 0 0 cmyk
@
302.673 504.935 mo
302.673 503.211 li
@
301.725 506.66 mo
303.621 506.66 li
@
301.725 503.211 mo
303.621 503.211 li
@
.75 lw
[] 0 dsh
301.673 504.935 mo
302.673 504.935 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
322 502.955 mo
322 500.854 li
.269902 .816403 0 0 cmyk
@
322 500.854 mo
322 498.754 li
@
321.052 502.955 mo
322.948 502.955 li
@
321.052 498.754 mo
322.948 498.754 li
@
.75 lw
[] 0 dsh
321 500.854 mo
322 500.854 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
341.327 501.207 mo
341.327 497.706 li
.269902 .816403 0 0 cmyk
@
341.327 497.706 mo
341.327 494.206 li
@
340.379 501.207 mo
342.275 501.207 li
@
340.379 494.206 mo
342.275 494.206 li
@
.75 lw
[] 0 dsh
340.327 497.706 mo
341.327 497.706 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
360.654 480.81 mo
360.654 471.216 li
.269902 .816403 0 0 cmyk
@
360.654 471.216 mo
360.654 469.635 li
@
359.706 480.81 mo
361.602 480.81 li
@
359.706 469.635 mo
361.602 469.635 li
@
.75 lw
[] 0 dsh
359.654 471.216 mo
360.654 471.216 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
199.466 503.631 mo
215.701 503.631 li
215.701 497.614 li
235.028 497.614 li
235.028 505.697 li
254.355 505.697 li
254.355 510.678 li
273.682 510.678 li
273.682 511.425 li
293.01 511.425 li
293.01 504.935 li
312.337 504.935 li
312.337 500.854 li
331.664 500.854 li
331.664 497.706 li
350.991 497.706 li
350.991 471.216 li
369.545 471.216 li
.269902 .816403 0 0 cmyk
@
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
0 0 0 0 cmyk
ef
.4 lw
[] 0 dsh
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
@
369.545 523.901 mo
539.624 523.901 li
539.624 469.635 li
369.545 469.635 li
cp
ef
369.545 523.901 mo
539.624 523.901 li
539.624 469.635 li
369.545 469.635 li
cp
@
.75 lw
369.545 523.901 mo
539.624 523.901 li
539.624 469.635 li
369.545 469.635 li
cp
.75021 .679683 .670222 .90164 cmyk
@
369.545 523.901 mo
372.637 523.901 li
375.73 523.901 li
378.822 523.901 li
381.914 523.901 li
385.007 523.901 li
388.099 523.901 li
391.191 523.901 li
394.284 523.901 li
397.376 523.901 li
400.468 523.901 li
403.561 523.901 li
406.653 523.901 li
409.745 523.901 li
412.838 523.901 li
415.93 523.901 li
419.022 523.901 li
422.115 523.901 li
425.207 523.901 li
428.299 523.901 li
431.392 523.901 li
434.484 523.901 li
437.576 523.901 li
440.669 523.901 li
443.761 523.901 li
446.853 523.901 li
449.946 523.901 li
453.038 523.901 li
456.13 523.901 li
459.223 523.901 li
462.315 523.901 li
465.407 523.901 li
468.5 523.901 li
471.592 523.901 li
474.685 523.901 li
477.777 523.901 li
480.869 523.901 li
483.962 523.901 li
487.054 523.901 li
490.146 523.901 li
493.239 523.901 li
496.331 523.901 li
499.423 523.901 li
502.516 523.901 li
505.608 523.901 li
508.7 523.901 li
511.793 523.901 li
514.885 523.901 li
517.977 523.901 li
521.07 523.901 li
524.162 523.901 li
527.254 523.901 li
530.347 523.901 li
533.439 523.901 li
536.531 523.901 li
539.624 523.901 li
1 .978058 .0451667 .0556954 cmyk
@
369.545 523.901 mo
539.624 523.901 li
.75021 .679683 .670222 .90164 cmyk
@
405.107 521.188 mo
405.107 523.901 li
@
412.838 522.544 mo
412.838 523.901 li
@
420.569 522.544 mo
420.569 523.901 li
@
428.299 522.544 mo
428.299 523.901 li
@
436.03 522.544 mo
436.03 523.901 li
@
443.761 521.188 mo
443.761 523.901 li
@
451.492 522.544 mo
451.492 523.901 li
@
459.223 522.544 mo
459.223 523.901 li
@
466.954 522.544 mo
466.954 523.901 li
@
474.685 522.544 mo
474.685 523.901 li
@
482.415 521.188 mo
482.415 523.901 li
@
490.146 522.544 mo
490.146 523.901 li
@
497.877 522.544 mo
497.877 523.901 li
@
505.608 522.544 mo
505.608 523.901 li
@
513.339 522.544 mo
513.339 523.901 li
@
521.07 521.188 mo
521.07 523.901 li
@
405.107 521.188 mo
405.107 523.901 li
@
397.376 522.544 mo
397.376 523.901 li
@
389.645 522.544 mo
389.645 523.901 li
@
381.914 522.544 mo
381.914 523.901 li
@
374.183 522.544 mo
374.183 523.901 li
@
521.07 521.188 mo
521.07 523.901 li
@
528.8 522.544 mo
528.8 523.901 li
@
536.531 522.544 mo
536.531 523.901 li
@
grestore
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf396.849 535.713 mo(0.1)[7.41061 3.70532 0 ]xsh434.296 535.713 mo(0.2)[7.41061 3.70532 0 ]xsh473.166 535.713 mo(0.3)[7.41061 3.70532 0 ]xshgsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [13.3285 0 0 -13.3285 0 0 ]msf512.036 535.713 mo(0.4)[7.41058 3.70532 0 ]xshgrestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.4724 0 0 -10.4724 0 0 ]msf534.315 552.304 mo(g)shgrestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [15.7086 0 0 -15.7086 0 0 ]msf523.412 548.986 mo(R)shgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
369.545 469.635 mo
539.624 469.635 li
@
405.107 472.348 mo
405.107 469.635 li
@
412.838 470.992 mo
412.838 469.635 li
@
420.569 470.992 mo
420.569 469.635 li
@
428.299 470.992 mo
428.299 469.635 li
@
436.03 470.992 mo
436.03 469.635 li
@
443.761 472.348 mo
443.761 469.635 li
@
451.492 470.992 mo
451.492 469.635 li
@
459.223 470.992 mo
459.223 469.635 li
@
466.954 470.992 mo
466.954 469.635 li
@
474.685 470.992 mo
474.685 469.635 li
@
482.415 472.348 mo
482.415 469.635 li
@
490.146 470.992 mo
490.146 469.635 li
@
497.877 470.992 mo
497.877 469.635 li
@
505.608 470.992 mo
505.608 469.635 li
@
513.339 470.992 mo
513.339 469.635 li
@
521.07 472.348 mo
521.07 469.635 li
@
405.107 472.348 mo
405.107 469.635 li
@
397.376 470.992 mo
397.376 469.635 li
@
389.645 470.992 mo
389.645 469.635 li
@
381.914 470.992 mo
381.914 469.635 li
@
374.183 470.992 mo
374.183 469.635 li
@
521.07 472.348 mo
521.07 469.635 li
@
528.8 470.992 mo
528.8 469.635 li
@
536.531 470.992 mo
536.531 469.635 li
@
369.545 523.901 mo
369.545 469.635 li
@
372.606 523.539 mo
369.545 523.539 li
@
371.076 519.921 mo
369.545 519.921 li
@
371.076 516.304 mo
369.545 516.304 li
@
371.076 512.686 mo
369.545 512.686 li
@
371.076 509.068 mo
369.545 509.068 li
@
372.606 505.45 mo
369.545 505.45 li
@
371.076 501.833 mo
369.545 501.833 li
@
371.076 498.215 mo
369.545 498.215 li
@
371.076 494.597 mo
369.545 494.597 li
@
371.076 490.98 mo
369.545 490.98 li
@
372.606 487.362 mo
369.545 487.362 li
@
372.606 523.539 mo
369.545 523.539 li
@
372.606 487.362 mo
369.545 487.362 li
@
371.076 483.744 mo
369.545 483.744 li
@
371.076 480.126 mo
369.545 480.126 li
@
371.076 476.509 mo
369.545 476.509 li
@
371.076 472.891 mo
369.545 472.891 li
@
grestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf353.239 527.655 mo(0.5)[6.08728 3.04367 0 ]xshgrestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf364.141 509.642 mo(1)shgrestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [10.9484 0 0 -10.9484 0 0 ]msf353.239 491.155 mo(1.5)[6.08728 3.04367 0 ]xshgrestore
gsave
369.545 560.078 mo
539.624 560.078 li
539.624 469.635 li
369.545 469.635 li
cp
clp
SXWSCV+Helvetica*1 [0 -14.2805 -14.2805 0 0 0 ]msf352.291 524.337 mo(MC/Data)[-11.8956 -10.3105 -3.96997 -10.3105 -7.93997 -3.96997 0 ]yshgrestore
gsave
-18.959 618.226 mo
576.041 618.226 li
576.041 -223.774 li
-18.959 -223.774 li
cp
clp
539.624 523.901 mo
539.624 469.635 li
@
536.562 523.539 mo
539.624 523.539 li
@
538.093 519.921 mo
539.624 519.921 li
@
538.093 516.304 mo
539.624 516.304 li
@
538.093 512.686 mo
539.624 512.686 li
@
538.093 509.068 mo
539.624 509.068 li
@
536.562 505.45 mo
539.624 505.45 li
@
538.093 501.833 mo
539.624 501.833 li
@
538.093 498.215 mo
539.624 498.215 li
@
538.093 494.597 mo
539.624 494.597 li
@
538.093 490.98 mo
539.624 490.98 li
@
536.562 487.362 mo
539.624 487.362 li
@
536.562 523.539 mo
539.624 523.539 li
@
536.562 487.362 mo
539.624 487.362 li
@
538.093 483.744 mo
539.624 483.744 li
@
538.093 480.126 mo
539.624 480.126 li
@
538.093 476.509 mo
539.624 476.509 li
@
538.093 472.891 mo
539.624 472.891 li
@
376.116 505.431 mo
376.12 505.445 li
376.134 505.445 li
376.123 505.453 li
376.127 505.466 li
376.116 505.458 li
376.105 505.466 li
376.109 505.453 li
376.098 505.445 li
376.112 505.445 li
cp
0 .993988 1 0 cmyk
f
395.443 505.431 mo
395.448 505.445 li
395.461 505.445 li
395.45 505.453 li
395.454 505.466 li
395.443 505.458 li
395.432 505.466 li
395.436 505.453 li
395.425 505.445 li
395.439 505.445 li
cp
f
414.77 505.431 mo
414.775 505.445 li
414.788 505.445 li
414.777 505.453 li
414.782 505.466 li
414.77 505.458 li
414.759 505.466 li
414.764 505.453 li
414.752 505.445 li
414.766 505.445 li
cp
f
434.098 505.431 mo
434.102 505.445 li
434.116 505.445 li
434.104 505.453 li
434.109 505.466 li
434.098 505.458 li
434.086 505.466 li
434.091 505.453 li
434.08 505.445 li
434.093 505.445 li
cp
f
453.425 505.431 mo
453.429 505.445 li
453.443 505.445 li
453.432 505.453 li
453.436 505.466 li
453.425 505.458 li
453.414 505.466 li
453.418 505.453 li
453.407 505.445 li
453.42 505.445 li
cp
f
472.752 505.431 mo
472.756 505.445 li
472.77 505.445 li
472.759 505.453 li
472.763 505.466 li
472.752 505.458 li
472.741 505.466 li
472.745 505.453 li
472.734 505.445 li
472.748 505.445 li
cp
f
492.079 505.431 mo
492.083 505.445 li
492.097 505.445 li
492.086 505.453 li
492.09 505.466 li
492.079 505.458 li
492.068 505.466 li
492.072 505.453 li
492.061 505.445 li
492.075 505.445 li
cp
f
511.406 505.431 mo
511.41 505.445 li
511.424 505.445 li
511.413 505.453 li
511.417 505.466 li
511.406 505.458 li
511.395 505.466 li
511.399 505.453 li
511.388 505.445 li
511.402 505.445 li
cp
f
530.733 505.431 mo
530.737 505.445 li
530.751 505.445 li
530.74 505.453 li
530.744 505.466 li
530.733 505.458 li
530.722 505.466 li
530.726 505.453 li
530.715 505.445 li
530.729 505.445 li
cp
f
376.116 494.053 mo
395.443 498.412 li
414.77 500.909 li
434.098 498.282 li
453.425 498.584 li
472.752 496.332 li
492.079 483.453 li
511.406 478.496 li
530.733 469.635 li
530.733 523.901 li
511.406 523.901 li
492.079 523.901 li
472.752 514.569 li
453.425 512.317 li
434.098 512.619 li
414.77 509.992 li
395.443 512.489 li
376.116 516.848 li
0 .241001 .107607 0 cmyk
ef
1.5 lw
[3 3 ] 0 dsh
369.545 505.45 mo
536.531 505.45 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
376.116 507.665 mo
376.116 502.114 li
.883665 .769161 0 0 cmyk
@
376.116 502.114 mo
376.116 496.563 li
@
375.168 507.665 mo
377.064 507.665 li
@
375.168 496.563 mo
377.064 496.563 li
@
.75 lw
375.116 502.114 mo
376.116 502.114 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
395.443 508.981 mo
395.443 505.629 li
.883665 .769161 0 0 cmyk
@
395.443 505.629 mo
395.443 502.277 li
@
394.495 508.981 mo
396.391 508.981 li
@
394.495 502.277 mo
396.391 502.277 li
@
.75 lw
394.443 505.629 mo
395.443 505.629 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
414.77 502.361 mo
414.77 498.406 li
.883665 .769161 0 0 cmyk
@
414.77 498.406 mo
414.77 494.452 li
@
413.822 502.361 mo
415.718 502.361 li
@
413.822 494.452 mo
415.718 494.452 li
@
.75 lw
413.77 498.406 mo
414.77 498.406 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
434.098 516.349 mo
434.098 512.44 li
.883665 .769161 0 0 cmyk
@
434.098 512.44 mo
434.098 508.53 li
@
433.15 516.349 mo
435.046 516.349 li
@
433.15 508.53 mo
435.046 508.53 li
@
.75 lw
433.098 512.44 mo
434.098 512.44 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
453.425 515.806 mo
453.425 510.745 li
.883665 .769161 0 0 cmyk
@
453.425 510.745 mo
453.425 505.683 li
@
452.477 515.806 mo
454.373 515.806 li
@
452.477 505.683 mo
454.373 505.683 li
@
.75 lw
452.425 510.745 mo
453.425 510.745 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
472.752 513.107 mo
472.752 506.653 li
.883665 .769161 0 0 cmyk
@
472.752 506.653 mo
472.752 500.198 li
@
471.804 513.107 mo
473.7 513.107 li
@
471.804 500.198 mo
473.7 500.198 li
@
.75 lw
471.752 506.653 mo
472.752 506.653 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
492.079 509.401 mo
492.079 498.641 li
.883665 .769161 0 0 cmyk
@
492.079 498.641 mo
492.079 487.882 li
@
491.131 509.401 mo
493.027 509.401 li
@
491.131 487.882 mo
493.027 487.882 li
@
.75 lw
491.079 498.641 mo
492.079 498.641 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
511.406 512.284 mo
511.406 496.57 li
.883665 .769161 0 0 cmyk
@
511.406 496.57 mo
511.406 480.856 li
@
510.458 512.284 mo
512.354 512.284 li
@
510.458 480.856 mo
512.354 480.856 li
@
.75 lw
510.406 496.57 mo
511.406 496.57 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
369.545 502.114 mo
385.78 502.114 li
385.78 505.629 li
405.107 505.629 li
405.107 498.406 li
424.434 498.406 li
424.434 512.44 li
443.761 512.44 li
443.761 510.745 li
463.088 510.745 li
463.088 506.653 li
482.415 506.653 li
482.415 498.641 li
501.743 498.641 li
501.743 496.57 li
521.07 496.57 li
521.07 469.635 li
.883665 .769161 0 0 cmyk
@
[1 2 ] 0 dsh
376.116 517.19 mo
376.116 513.936 li
.75021 .679683 .670222 .90164 cmyk
@
376.116 513.936 mo
376.116 510.683 li
@
375.168 517.19 mo
377.064 517.19 li
@
375.168 510.683 mo
377.064 510.683 li
@
.75 lw
[] 0 dsh
375.116 513.936 mo
376.116 513.936 li
@
1.5 lw
[1 2 ] 0 dsh
395.443 514.839 mo
395.443 512.384 li
@
395.443 512.384 mo
395.443 509.93 li
@
394.495 514.839 mo
396.391 514.839 li
@
394.495 509.93 mo
396.391 509.93 li
@
.75 lw
[] 0 dsh
394.443 512.384 mo
395.443 512.384 li
@
1.5 lw
[1 2 ] 0 dsh
414.77 501.504 mo
414.77 497.932 li
@
414.77 497.932 mo
414.77 494.36 li
@
413.822 501.504 mo
415.718 501.504 li
@
413.822 494.36 mo
415.718 494.36 li
@
.75 lw
[] 0 dsh
413.77 497.932 mo
414.77 497.932 li
@
1.5 lw
[1 2 ] 0 dsh
434.098 511.591 mo
434.098 507.462 li
@
434.098 507.462 mo
434.098 503.334 li
@
433.15 511.591 mo
435.046 511.591 li
@
433.15 503.334 mo
435.046 503.334 li
@
.75 lw
[] 0 dsh
433.098 507.462 mo
434.098 507.462 li
@
1.5 lw
[1 2 ] 0 dsh
453.425 510.749 mo
453.425 505.344 li
@
453.425 505.344 mo
453.425 499.939 li
@
452.477 510.749 mo
454.373 510.749 li
@
452.477 499.939 mo
454.373 499.939 li
@
.75 lw
[] 0 dsh
452.425 505.344 mo
453.425 505.344 li
@
1.5 lw
[1 2 ] 0 dsh
472.752 507.642 mo
472.752 500.904 li
@
472.752 500.904 mo
472.752 494.165 li
@
471.804 507.642 mo
473.7 507.642 li
@
471.804 494.165 mo
473.7 494.165 li
@
.75 lw
[] 0 dsh
471.752 500.904 mo
472.752 500.904 li
@
1.5 lw
[1 2 ] 0 dsh
492.079 495.631 mo
492.079 481.799 li
@
492.079 481.799 mo
492.079 469.635 li
@
491.131 495.631 mo
493.027 495.631 li
@
491.131 469.635 mo
493.027 469.635 li
@
.75 lw
[] 0 dsh
491.079 481.799 mo
492.079 481.799 li
@
1.5 lw
[1 2 ] 0 dsh
511.406 511.947 mo
511.406 498.176 li
@
511.406 498.176 mo
511.406 484.406 li
@
510.458 511.947 mo
512.354 511.947 li
@
510.458 484.406 mo
512.354 484.406 li
@
.75 lw
[] 0 dsh
510.406 498.176 mo
511.406 498.176 li
@
1.5 lw
[1 2 ] 0 dsh
369.545 513.936 mo
385.78 513.936 li
385.78 512.384 li
405.107 512.384 li
405.107 497.932 li
424.434 497.932 li
424.434 507.462 li
443.761 507.462 li
443.761 505.344 li
463.088 505.344 li
463.088 500.904 li
482.415 500.904 li
482.415 481.799 li
501.743 481.799 li
501.743 498.176 li
521.07 498.176 li
521.07 469.635 li
@
[3 4 1 4 ] 0 dsh
376.116 494.776 mo
376.116 487.802 li
.269902 .816403 0 0 cmyk
@
376.116 487.802 mo
376.116 480.827 li
@
375.168 494.776 mo
377.064 494.776 li
@
375.168 480.827 mo
377.064 480.827 li
@
.75 lw
[] 0 dsh
375.116 487.802 mo
376.116 487.802 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
395.443 513.797 mo
395.443 510.945 li
.269902 .816403 0 0 cmyk
@
395.443 510.945 mo
395.443 508.094 li
@
394.495 513.797 mo
396.391 513.797 li
@
394.495 508.094 mo
396.391 508.094 li
@
.75 lw
[] 0 dsh
394.443 510.945 mo
395.443 510.945 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
414.77 507.844 mo
414.77 504.432 li
.269902 .816403 0 0 cmyk
@
414.77 504.432 mo
414.77 501.02 li
@
413.822 507.844 mo
415.718 507.844 li
@
413.822 501.02 mo
415.718 501.02 li
@
.75 lw
[] 0 dsh
413.77 504.432 mo
414.77 504.432 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
434.098 517.94 mo
434.098 514.119 li
.269902 .816403 0 0 cmyk
@
434.098 514.119 mo
434.098 510.298 li
@
433.15 517.94 mo
435.046 517.94 li
@
433.15 510.298 mo
435.046 510.298 li
@
.75 lw
[] 0 dsh
433.098 514.119 mo
434.098 514.119 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
453.425 516.377 mo
453.425 511.43 li
.269902 .816403 0 0 cmyk
@
453.425 511.43 mo
453.425 506.482 li
@
452.477 516.377 mo
454.373 516.377 li
@
452.477 506.482 mo
454.373 506.482 li
@
.75 lw
[] 0 dsh
452.425 511.43 mo
453.425 511.43 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
472.752 507.568 mo
472.752 499.496 li
.269902 .816403 0 0 cmyk
@
472.752 499.496 mo
472.752 491.423 li
@
471.804 507.568 mo
473.7 507.568 li
@
471.804 491.423 mo
473.7 491.423 li
@
.75 lw
[] 0 dsh
471.752 499.496 mo
472.752 499.496 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
492.079 487.737 mo
492.079 470.005 li
.269902 .816403 0 0 cmyk
@
492.079 470.005 mo
492.079 469.635 li
@
491.131 487.737 mo
493.027 487.737 li
@
491.131 469.635 mo
493.027 469.635 li
@
.75 lw
[] 0 dsh
491.079 470.005 mo
492.079 470.005 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
511.406 503.39 mo
511.406 484.882 li
.269902 .816403 0 0 cmyk
@
511.406 484.882 mo
511.406 469.635 li
@
510.458 503.39 mo
512.354 503.39 li
@
510.458 469.635 mo
512.354 469.635 li
@
.75 lw
[] 0 dsh
510.406 484.882 mo
511.406 484.882 li
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
[3 4 1 4 ] 0 dsh
369.545 487.802 mo
385.78 487.802 li
385.78 510.945 li
405.107 510.945 li
405.107 504.432 li
424.434 504.432 li
424.434 514.119 li
443.761 514.119 li
443.761 511.43 li
463.088 511.43 li
463.088 499.496 li
482.415 499.496 li
482.415 470.005 li
501.743 470.005 li
501.743 484.882 li
521.07 484.882 li
521.07 469.635 li
.269902 .816403 0 0 cmyk
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/SXWSCW+Helvetica-Bold*1 uf/SXWSCW+Helvetica-Bold uf/KAAAAA+Helvetica-Bold uf/SXWSCY+Symbol*1 uf/SXWSCY+Symbol uf/NAAAAA+Symbol uf/SXWSCX+Helvetica-BoldOblique*1 uf/SXWSCX+Helvetica-BoldOblique uf/LAAAAA+Helvetica-BoldOblique uf/SXWSCZ+Helvetica-Oblique*1 uf/SXWSCZ+Helvetica-Oblique uf/OAAAAA+Helvetica-Oblique uf/SXWSCV+Helvetica*1 uf/SXWSCV+Helvetica uf/JAAAAA+Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
