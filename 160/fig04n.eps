%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fig05.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Gary Westfall
%%CreationDate: 3/1/10
%%BoundingBox: 0 0 520 345
%%HiResBoundingBox: 0 0 519.4111 344.8936
%%CropBox: 0 0 519.4111 344.8936
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11626 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FF52FFFF7D7DFD7AFF525252FF7D277DFD79FF52A852FFFF52%A8FD407D52FD277D52A8FD067DFD09FF7D277DA8FD0452FD1AA87D2752A8%F852F852A8A827FD19A8F852A87D2752272727A87D52FD18A8275227A87D%272752272752FF52A8FD09FFA8FFA8FFA8FF52FD0DFFA8FD0CFFA8FD067D%27A8FF7DFD19FF7D7DA8A8527D7D7D527DFF52FD18FF7D52A852A87D527D%7D5252A8A8A8FD0EFFA852FD0CFF525252A87DA87DA87DFD05FFA8527DFF%52A8A87D52FF52FD19FF7D7DA8FF7D7D7DFF527DA852FD18FFA8A852A87D%527D7DA8A852A87DA8FD0FFF52FD0CFF52527DFD04522752FD0EFFA87DA8%FD23FF52FFFFFFC3C3FD1FFF7DA8FD0EFFA859FFBCBCFD09FF7DFFA87D52%A87D7D52FD0FFF52FFC3CAB5C3FD1EFFA852FFCAC3BCB5FD1FFF7DA8FD08%FFA827A8FF7D52A876CABCC3B5C3FD1EFFA87DFFBCB5BCC3FD1FFF52FFBC%B5FFFFB5C3FD1DFF7DA8FD08FF527D52FFA852596FB5FFFFBCC3FD1FFF68%B5CAFFFFFFB5CAFD1CFFA852FFFFCAFFFFC3C3FD1DFF7DFD09FF7D7D7DFF%7D7DFF52FD05FFFCC3FD1CFFA876C3FD04FFBCC3FD1DFF52C3FD06FFB5CA%FD1BFF7DA8FD08FF7D527DA8527D7D52A8FD04FFC3CAFD1DFF2EAE83A8FD%04FFBCCAFD1AFFA86F8CA783FD04FFB5C3FD1BFF7DA8FD0FFF2D83A8AEAE%FFFFFFBCFD1BFFA85883A883AEA8AFA7B5C3FD1BFF52CAA8AE83A883AFFF%FFC3FD1AFF7DA8FD0EFFA852A8A8838383FFCAB5CAFD1BFF52FFFFFF7D83%58A8CBFFCAFD19FFA852AFFFFFA883838384A7FCC3FD19FF7DA8FD0FFF52%FFFFFFA8AE83A884C9FCFD19FFA87DFD06FFAE8AA1FCCAFD19FF52FD07FF%83AE7CA8C3FD18FF7DA8FD09FFA8A8FFFFFFA852FD05FFA883837C99A8FD%19FF52FD07FF598375CAC4FD17FFA852FD08FFA88A7CFCA1FD17FF7DA8FD%08FF7D27A8FF7D52FF52FD09FF83A799FD17FFA87DFD08FFAE8A9AFCA8FD%17FF52FD0BFFA7A875FD16FF7DA8FD08FF52A852FFA852A852FD0AFFC3B5%838384AEFD14FF52FD0AFFCF7D9A6EA884FD13FFA852A8FD0BFFA1FC7D83%A8FD13FF7DFD09FF7D527DFFFF52FF52FD0CFFBC8C8383AEAEFD11FFA87D%FD0CFFBCBC83AE84AEFD12FF52FD0EFFC38C8383FD12FF7DA8FD08FFA87D%FD05A852FD0CFFC3C3A1A85F8483A8FD0FFFA852FD0EFFBCB5AE838383FD%0FFFA852FD0EFFC3BCA8A87D83A8AEFD0EFF7DA8FD0FFF52FD0EFFB5B6CA%CAAEA8A8AEFD0DFFA87DFD0EFFC3C3BCC384AE83A8A8FD0DFF52FD10FFBD%B5FFAE8383AEAEFD0CFF7DA8FD0EFFA852A8FD0DFFCACAFCC3FFFF83A87D%AEA8FD0BFF52FD10FFBCBCFFCAAFA883A8AEFD0AFFA852A8FD0FFFC3C3BC%C3AFFF588383FD0BFF7DA8FD0FFF52FD10FFCACAB5C3FFAFAE8383A8FD09%FFA87DFD12FFFCBCC3FFFFAE5EAE83FD09FF52FD12FFBCBCC3C3FFA88483%83AEFD08FF7DA8FD0CFF7D7DA87DFD12FFBCC3B4C3BCFF84845FAE84FFA8%FD05FF52FD12FFCAC3FCBCC3CACA84838384A8FD05FFA852FD14FFB5BCB5%C3A7AE83AE5FAFAEFD05FF7DA8FD0CFF52527D7DFD14FFC3C3B5C3BCC3C3%A1A17CA8A8FFFFFFA87DFD15FFCAB0C3B5CABCC9A0A1A7AEA8FFFFFF52FD%16FFC3C3B5BCBCA1A0A1A083AECFFFFF7DA8FD0CFF52A852537FFD04A879%7EA37EA37EA37EA3787978A379A3797F4F9C6A9469948D8D938C9393708C%4CA37EA87FA37EA94F7F4F7F55A37E79547978797879784F7871708E8D8D%8D948C93689A8C4C7F7F4FA37E797879787F784F78797879547978794E7F%4F7948726A9B8D948C93689393B544FD0DFF7D52A8234F544E4E7F4F7824%7924784E794E7878797855787954797F797E7F7EA39BA2A1A29AA193234F%4F2A55544F4E7F7E79787F544F78A3787E4EA34E7E7EA9557F79A378A2A2%C4A19BA199224F7EA34E79787E787E4E7E7E7E4E7E787F5479787F78A9A2%A37EA9A8A37EA3A1A29AA19A76A8FD0CFFA8FFA8527D7E537E7DA87D7D7D%7E7D7D7D7E7DA77D837DA77DA77D52525258A8277D527D2E7D7D7D27A27D%7E7DA87D7D7DA87DA783A87DA77DA87DA87DA87DA8527D527DA8A8585252%5259A87D527DA87DA87DA87DA87DA87DA87DA77DA87DA77DA87DA77DA87D%582DA87DFD055259A852A8FD0FFF52FD17FFFD047DA87D527D525252FFFF%7DFD17FFA8277D7DFF7D27527D2752A8FF52FD18FF52277D7DA852527D52%277DFFA8A8FD0EFFA852FD16FFA852527D7D7D5252527D7D2752FF52FD17%FF7D27527D7D7D27527DA82752A87DFD17FFA82727527D7D7D277D7D7D27%A87DA8FD0FFF52FFFFFFCAFD13FF7DA8A8FFFFA8A8A8FFFFA8A8A87DFD17%FFFD04A8FFFFFFA8FFFFFFA8FF52FD19FFA8A8FFFFA8FF7DFFFFFD04A8FF%FFA8A8527DA8FD07FFA852A8FFFFFCBCFD11FF7D7DFFFFA8FD09FF52FFFF%FFCACAFD1EFFA852A8FD23FF7DA8FFFFFF7DA8A8A8FFFF7DFFFFA87DFF52%FFFFFFCAFFC3CAFD0DFFC3C37D7D7DFD0452A8FD05FFA87DFFFFFFB5B5BC%C3FD1DFF52FFFFFFBCBCCAFD1EFF7DA8FFFFFFA8527DA8FF52527DFF7D52%527DFFBCBCFFFFFCC3FD0DFFB5C3597D27272752F87DFD06FF52FFFFFFCA%CAB5CAFD1CFFA852FFFFFFC3BCB5BCFD1DFF7DFD04FFA87D527DFF52A852%FFFF7DA852FFC3C3FD04FFBCFD0EFFA87DFF7DA87DA8A8FD05FFA87DAEC3%BCFFFFFFCAB5C3FD1BFF52FFCAFFFFFFC3CAB5C3FD1BFF7DA8FFFFFFA852%7DA8FF525252FF277DA82D5FAFAEFFFFFFCAFCC3FD0BFFA9FF7DA852A8FF%FFA8FF7DA8FD04FF2D839393AEFFFFFFB5CACAFD19FFA82E5E9A8CFD04FF%C3C3FD1BFF7DA8FFFFFF52527DFFFFFF7DFFA8A87DA84BC3838383AEFD04%FFCAFD0AFF4F7F5227FD07527DFFFFFFA87CCAAE84A883FFFFFFCAFCCAFD%19FF52AFA7A183A8A8FFFFFFB5CAFD19FF7DA8FFFFA8FFA87DA8FD07FFAF%68FCFFA8FD0483AFC3FCCAFD09FF7FCB7D52527D5252527D52A8FFFFFFAF%68B5FFFFA8A858A8A8FFC3FD19FFA876BCFFAFAE838383FFCAB5C3FD19FF%7DA8FFFFFF7DA87DA8FD08FF52FD05FFA8AE5FA8A0CABDFD0BFFA8FD05FF%A8A8FD04FFA876C3FD04FFAEA88383AFC3B5CAFD17FF6FB5FD04FFAEAE7D%A884A7FCCAFD17FF7DA8FFFFA87D2752FD08FFA852FD08FFA88376B5FD08%FF83A8FD04527DA82727527D7D7D52FF52FD07FFA8A858A193FFAFFD15FF%A852AFFD06FFA8A8847D99A1CACAFD15FF7DA8FFFF7D527D7DFFFFA852FF%FFA87DFF52FD0AFFAE83C9C3FD06FF83837D52527D277D5252522727527D%A87DFD0AFFA88AA0BCFD16FF52FD0BFF83A1FCCAAFFD14FF7DA8FFFFFD04%52A8FF527D52FF7D27A87DFD0CFF9AFC83AEFD04FFAEFF7D7D7DA87D7D7D%A8FD057DFF52FD0BFFAFC393A883FD13FFA852FD0CFFA87D7C99CAFD13FF%7DFD04FF7DA8A8FFFF52A852FFFF52FF52FD0DFFCAA099AEAEFD11FFA87D%FD0EFF92B584AEFD12FF52FD0DFFAFCAB0A883FD12FF7DA8FD08FF7D277D%A8A852A852FD0EFFB5BC838483A8FD0FFFA852FD0EFFCAC3A1768383AEAE%FD0DFFA852A8FD0FFFA09A83AEFD10FF7DA8FD09FFA8FFA8FFFFFF52FD10%FFB5BCAE84A8AEFD0DFFA87DFD10FFB5BCAEAE83AEFD0EFF52FD10FFC3B5%A77D8383FD0EFF7DA8FD0EFFA852FD10FFBCC3B5C383A883AEA8FD0BFF52%FD11FFCAB5BCAFA883A8FD0BFFA87DFD12FFFCBC84A858A8A8FD0BFF7DA8%FD0FFF52FD12FFB5C3CAA8AE8383A8FD09FFA87DA8FD11FFBCC3B5CAA8AE%58FD0BFF52FD12FFCACABCBCFFA883A8AEFD09FF7DA8FD0EFFA852FD14FF%FCC3C3FFA88459AEA8FD07FF52FD14FFB5BCB5A7A8838383A8FD06FFA852%A8FD13FFBCC3B5C3A7A85FAE84FD07FF7DA8FD0CFF7D52A87CFD15FFC9B5%BCBCA8CA838384FD05FFAF7DFD16FFC2C3B5CAA0A883AEAEFD05FF52FD16%FFC2C3B5BCC2A7A183A8AFFD04FFA8A8FD0CFF527D5253A3A9A3CBA9A9A8%FFA9A3A9CBA9A9A9CBA9CBA3CBA9A97EC494BC8DBC93997576A1C3A2A128%79A9CBA9FF7FA9A9A979FFA9CBA9A37FA9A3A9A9A3A9A9A29B9AB593B593%9A76A1A1CA9A52A9A379A97F7F7FA3A2A9A979A2A9A9A3A9A9A9CBA3A97F%A96B9B8DBD8CBC927C75A1A1C36FFD0CFFA87D7D7D297979794F7F797F4F%A34F794F7F4F795579797978FD057978737196949B8DBC8C9A8C4D7F794F%797979784F797378737979797F79794F7F4F7F4F7F4F7F4F9C719594B694%B593FC2279787F7879557F4F7F4F7F557F4F7F4F794F794F794E79797978%797E72779594B693948D6FAFFD0CFF7D7DA8527DA87D7E7DA8774E7DA877%7E7D7E777E7D7D7DA27D7D7DA87DFD067EA27DA17D7627A87D7D537E7D7D%53A87D7D537E777D7DA87D7E7DA87D7E7D7E7DA87D7E7EA87D7E7DA2524C%7DA87D7D7DA87DA87D7E7DA87D7D7DA87D7E537E7D7D7DA8A8A87DA87D84%7EA87DA27DA852A8FD0FFF52FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8%CFA8FFA8CF7DA87DA8A8A77D7D7DA884A8A87DA8CFA8FFA8CFA8FFA8CFA8%FFA8CFA8FFA8CFA8FFA8CFA8A87D7D7DFF7D7D7DA87DA8A8AF52CFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D7D7DA8FF7DA87DA87D%A8AF7DA8FD0EFFA87DFD16FFA827527D7DA827527D522752FFFF52FD17FF%5252527DA8A8277D522752FFA87DFD18FF525252A8A852277D27277DFF7D%A8FD0FFF52FD17FF5252527D7D52527D7DA8277DA87DFD17FF5227527D7D%7DA87D7D7D5252FF52FD18FF7D7D7D527D522752A87D277DA8A8FD0EFFA8%52A8FD15FFFD05A8FF7DA87DFFA8A87DFF52FD17FFA8A87DA8FFFD04A8FF%A8A8A852A8FD17FFA8FF7DFFFD05A8FF7DFF7DA8FD0FFF52FD23FFA87DFD%24FF52FD24FF7DA8FD08FF7D52A8FF52527D7DFD05FFCACAFD1DFF52FD23%FFA852FD24FF7DFD09FF7D7D7DFFFF527D77FFFFFFB5C3FCC3FD1CFFA87D%FFFFFFBCC3CACAFD1DFF52FD24FF7DA8FD08FF527D52FF7D7DA82D83FFFF%BCC3CAC3B5C3FD1BFF2DA8AFFFB5BCFCC3C3CAFD1AFFA82E58FFAFFFCAC3%BCFD1DFF7DA8FD08FFA827A8A8527DA82D8AB5BCAEFFFFFFB5CABCFD19FF%A85883A09AFFFFFFCAB5C3FD1BFF6FB59A9AB5B5BCC3C3CAFD1BFF7DA8FD%0EFFA876A1A1768383A8A8FFC3FCCAFD19FF6FC3B5B5598383AEFFCAFCCA%FD18FFA876BCBCB5A77CAEA8B5BCB5C3FD19FF7DA8FD0FFF68B5FFFFAEFF%83A8A8FFFFFFCAFD17FFAF6FB5FFFFAEA883A8AFA8CACAC3FD18FF52FFFF%FFAFFF8384A1CFC3CACAFD18FF7DA8FD0EFFA852A8FD05FFA88383AF9AFC%FD18FF52FD05FFA8FF58A8AFC3FCFD17FFA852A8FD05FFA88383FFCAFCC3%FD17FF7DA8FD09FFA8FD05FF52FD09FF5FA7A0CAC3FD15FFA87DFD08FFA8%83A8AECACAFD16FF52FD07FFAEFF83A8A0CABCFD16FF7DA8FD08FF7D277D%FF7D52A87DFD0AFFA88A9AFCAFFD15FF52FD09FFA8AE5F9AFCFD15FFA852%FD09FFAE8383A0B5A8FD15FF7DFD09FF52A852FFA852FF52FD0CFFAE7D9A%99FD13FFA87DFD0CFFA77C7CA1FD14FF52FD0CFFAE5FA08CFD14FF7DA8FD%08FF525252FFA852A852A8FD0BFFAFFFB5BB58A8AEFD11FF52FD0DFFAFB5%92A17CFFAEFD0FFFA852A8FD0BFFAFAEA8C3C3BCA8AFFD10FF7DA8FD09FF%52FFA8FF7DFF52FD10FFB59A8AA8FD0FFFA87DFD10FFB5B583AEA8FD0FFF%52FD10FFC292A783FD10FF7DA8FD0EFFA852FD10FFC3CA93A15FA8A8FD0D%FF52FD11FFCAB5998383AEFD0CFFA87DFD10FFAFFFB5BB838358AEFD0CFF%7DA8FD0FFF52FD12FFB5C3A8A78383AEFD0AFFA87DFD12FFBCC39AA75FAE%83FD0BFF52FD12FFCACAA1A7AEA8AEFD0BFF7DA8FD0EFFA852A8FD13FFFC%C3A1A85FA883FD09FF52FD13FFCAB59AC2A78383A8FD08FFA852A8FD13FF%FCBDBDC3588483FFA8FD07FF7DA8FD0FFF52FD14FFCAC3B5C3C9A7A784AE%AFFD05FFA87DFD15FFCAFCC3BCAE83AE83FD07FF52FD16FFB5BCB59A9983%8AAEFD06FF84A8FD0CFF52527D77FD16FFCFC3B4BCFCA1768383AEAEFFFF%FF52FD09FFA9FD0DFFC3B5BCB5A09A7CA7A8FFFFFFA852A9FFFFFFA9FD13%FFC3CAB5C393A17CAEA8FFFFFF7DFD0CFFA87D7D7C2979A8A9A2A979A37F%A979A97FA3797954A37F79787F7F7F7EA39C7294938D9A689A93A1934D79%79557979A37E79794F7EA37F7F797FA9A979A379A355A379A26B948DB593%939ABC9A99224F7EA9794F79A379A37FA34F7F4FA379794FA9A37978A37F%A97F4F9B8E948D6F93939A946FA8FD0CFF527D52537E4F4E4F4E79544F78%79544F547978A34E7878A34E784E794E7E4F79549B77BC7694769228A378%7E547F4E784EA37E7E247F4E7878794E5578797879787954795479777894%9B939A684C7E784EA27E795455784F547F787854557E7E4E797E7E4E7824%787EA2557E4E9B9A9A76BC45AFFD0CFFA852A8277D5377537D7D7D52FD07%7D527D7D7D27FD0F7D5227587D7C7D7D7D527D7D7D527D7D7D7C7D527D7D%52517D7CFD087D84FD047D26527D7D7C7D7CFD057D7C7D7C7D7D52587D52%527C7D7D7D527D7D7D587D7D7D5952277DFFA8A8FD0CFF52527DFD0EFF27%7DFF7D5252FD0EFF7D277DFD0EFF7D52FFA82752A8FD0DFF7D5252FD0EFF%A827FFA85252A8FD0CFF5252A8A82752FD0BFFA87DA87DFD0EFF7D7DFF7D%A852FD0EFF52A852FD0FFF52FF7DA87DA8FD0DFF7D7D7DA8FD0EFF52FFA8%7DA87DFD0CFFA852FF7DA852FD0CFF52527DFD0EFF7D7DFF525252FD0EFF%7D277DFD0EFFA852A8A82752A8FD0DFF7D5252FD0FFF27FFA85227A8FD0C%FF277DA87D2752FD0DFF7DFD0FFFA8FFA8FF7DFD10FFA8A8FD0FFFA8FFA8%A8A8FD0FFF7DFD13FFA8A8FD0DFFA87DA8FFA8A8FDC3FFA87DA8A87DFD7B%FFA8527D277DFD7BFF52527D527DFD7CFFA8A852FDFCFFFD3CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-01-20T11:37:04-05:00</xmp:CreateDate>
         <xmp:MetadataDate>2010-01-20T11:37:05-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-01-20T11:37:05-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q87/OHU1sY/L66hql&#xA;xovlq4vZk1vU7SeS0dFWyne2VriJkeNXuFTow5NRe9CqxDzZ5peT8p9CbV/Mcmkec10rm0H1+bTF&#xA;OoGyjl/0uS3Rm+sKkglitZGQSsaUI3VVneifmHe3qPaWnlnWtSn0+K0S/uqadbr69xZw3fArcXkD&#xA;c1S4XmAtFbbFUz/xZr3/AFJes/8AI7R/+8hirv8AFmvf9SXrP/I7R/8AvIYq7/Fmvf8AUl6z/wAj&#xA;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&#xA;FXYq7FXYq7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:F87F117407206811B005DCFDD4A218DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811B005DCFDD4A218DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:F87F117407206811B005DCFDD4A218DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B005DCFDD4A218DC</stEvt:instanceID>
                  <stEvt:when>2010-01-20T11:37:05-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -344.894 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 344.894 li
519.411 344.894 li
519.411 0 li
cp
clp
[1 0 0 1 0 0 ]ct
53.5635 108.623 mo
54.5635 107.623 li
54.5635 11.873 li
203.563 11.873 li
204.563 10.873 li
53.5635 10.873 li
53.5635 108.623 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
ef
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
53.5635 108.623 mo
204.563 108.623 li
53.5635 108.623 mo
53.5635 10.873 li
204.563 10.873 li
204.563 108.623 li
53.5635 108.623 li
cp
0 0 0 rgb
@
204.563 105.873 mo
204.563 108.623 li
200.813 107.123 mo
200.813 108.623 li
196.813 107.123 mo
196.813 108.623 li
193.063 107.123 mo
193.063 108.623 li
189.313 105.873 mo
189.313 108.623 li
185.563 107.123 mo
185.563 108.623 li
181.813 107.123 mo
181.813 108.623 li
178.063 107.123 mo
178.063 108.623 li
174.313 105.873 mo
174.313 108.623 li
170.563 107.123 mo
170.563 108.623 li
166.813 107.123 mo
166.813 108.623 li
163.063 107.123 mo
163.063 108.623 li
159.063 105.873 mo
159.063 108.623 li
155.313 107.123 mo
155.313 108.623 li
151.563 107.123 mo
151.563 108.623 li
147.813 107.123 mo
147.813 108.623 li
144.063 105.873 mo
144.063 108.623 li
140.313 107.123 mo
140.313 108.623 li
136.563 107.123 mo
136.563 108.623 li
132.813 107.123 mo
132.813 108.623 li
129.063 105.873 mo
129.063 108.623 li
125.063 107.123 mo
125.063 108.623 li
121.313 107.123 mo
121.313 108.623 li
117.563 107.123 mo
117.563 108.623 li
113.813 105.873 mo
113.813 108.623 li
110.063 107.123 mo
110.063 108.623 li
106.313 107.123 mo
106.313 108.623 li
102.563 107.123 mo
102.563 108.623 li
98.8135 105.873 mo
98.8135 108.623 li
95.0635 107.123 mo
95.0635 108.623 li
91.3135 107.123 mo
91.3135 108.623 li
87.3135 107.123 mo
87.3135 108.623 li
83.5635 105.873 mo
83.5635 108.623 li
79.8135 107.123 mo
79.8135 108.623 li
76.0635 107.123 mo
76.0635 108.623 li
72.3135 107.123 mo
72.3135 108.623 li
68.5635 105.873 mo
68.5635 108.623 li
64.8135 107.123 mo
64.8135 108.623 li
61.0635 107.123 mo
61.0635 108.623 li
57.3135 107.123 mo
57.3135 108.623 li
53.5635 105.873 mo
53.5635 108.623 li
@
53.5635 108.623 mo
53.5635 10.873 li
@
58.0635 10.873 mo
53.5635 10.873 li
55.8135 105.623 mo
53.5635 105.623 li
58.0635 102.623 mo
53.5635 102.623 li
58.0635 10.873 mo
53.5635 10.873 li
55.8135 13.873 mo
53.5635 13.873 li
55.8135 17.123 mo
53.5635 17.123 li
55.8135 20.123 mo
53.5635 20.123 li
55.8135 23.123 mo
53.5635 23.123 li
58.0635 26.123 mo
53.5635 26.123 li
55.8135 29.123 mo
53.5635 29.123 li
55.8135 32.373 mo
53.5635 32.373 li
55.8135 35.373 mo
53.5635 35.373 li
55.8135 38.373 mo
53.5635 38.373 li
58.0635 41.373 mo
53.5635 41.373 li
55.8135 44.623 mo
53.5635 44.623 li
55.8135 47.623 mo
53.5635 47.623 li
55.8135 50.623 mo
53.5635 50.623 li
55.8135 53.623 mo
53.5635 53.623 li
58.0635 56.623 mo
53.5635 56.623 li
55.8135 59.873 mo
53.5635 59.873 li
55.8135 62.873 mo
53.5635 62.873 li
55.8135 65.873 mo
53.5635 65.873 li
55.8135 68.873 mo
53.5635 68.873 li
58.0635 72.123 mo
53.5635 72.123 li
55.8135 75.123 mo
53.5635 75.123 li
55.8135 78.123 mo
53.5635 78.123 li
55.8135 81.123 mo
53.5635 81.123 li
55.8135 84.123 mo
53.5635 84.123 li
58.0635 87.373 mo
53.5635 87.373 li
55.8135 90.373 mo
53.5635 90.373 li
55.8135 93.373 mo
53.5635 93.373 li
55.8135 96.373 mo
53.5635 96.373 li
55.8135 99.623 mo
53.5635 99.623 li
58.0635 102.623 mo
53.5635 102.623 li
@
203.883 102.543 mo
203.883 100.887 202.54 99.543 200.883 99.543 cv
199.228 99.543 197.883 100.887 197.883 102.543 cv
197.883 104.199 199.228 105.543 200.883 105.543 cv
202.54 105.543 203.883 104.199 203.883 102.543 cv
1 0 0 rgb
ef
195.963 102.303 mo
195.963 100.647 194.62 99.3032 192.963 99.3032 cv
191.308 99.3032 189.963 100.647 189.963 102.303 cv
189.963 103.959 191.308 105.303 192.963 105.303 cv
194.62 105.303 195.963 103.959 195.963 102.303 cv
ef
188.523 101.823 mo
188.523 100.167 187.18 98.8232 185.523 98.8232 cv
183.868 98.8232 182.523 100.167 182.523 101.823 cv
182.523 103.479 183.868 104.823 185.523 104.823 cv
187.18 104.823 188.523 103.479 188.523 101.823 cv
ef
181.083 101.583 mo
181.083 99.9268 179.739 98.583 178.083 98.583 cv
176.427 98.583 175.083 99.9268 175.083 101.583 cv
175.083 103.239 176.427 104.583 178.083 104.583 cv
179.739 104.583 181.083 103.239 181.083 101.583 cv
ef
173.644 100.623 mo
173.644 98.9668 172.299 97.623 170.644 97.623 cv
168.987 97.623 167.644 98.9668 167.644 100.623 cv
167.644 102.279 168.987 103.623 170.644 103.623 cv
172.299 103.623 173.644 102.279 173.644 100.623 cv
ef
165.963 99.9028 mo
165.963 98.2471 164.62 96.9028 162.963 96.9028 cv
161.308 96.9028 159.963 98.2471 159.963 99.9028 cv
159.963 101.559 161.308 102.903 162.963 102.903 cv
164.62 102.903 165.963 101.559 165.963 99.9028 cv
ef
158.284 98.9429 mo
158.284 97.2871 156.939 95.9429 155.284 95.9429 cv
153.627 95.9429 152.284 97.2871 152.284 98.9429 cv
152.284 100.599 153.627 101.943 155.284 101.943 cv
156.939 101.943 158.284 100.599 158.284 98.9429 cv
ef
150.843 96.063 mo
150.843 94.4072 149.5 93.063 147.843 93.063 cv
146.188 93.063 144.843 94.4072 144.843 96.063 cv
144.843 97.7192 146.188 99.063 147.843 99.063 cv
149.5 99.063 150.843 97.7192 150.843 96.063 cv
ef
143.403 94.623 mo
143.403 92.9668 142.06 91.623 140.403 91.623 cv
138.748 91.623 137.403 92.9668 137.403 94.623 cv
137.403 96.2788 138.748 97.623 140.403 97.623 cv
142.06 97.623 143.403 96.2788 143.403 94.623 cv
ef
135.724 90.543 mo
135.724 88.8872 134.379 87.543 132.724 87.543 cv
131.067 87.543 129.724 88.8872 129.724 90.543 cv
129.724 92.1992 131.067 93.543 132.724 93.543 cv
134.379 93.543 135.724 92.1992 135.724 90.543 cv
ef
128.043 85.2632 mo
128.043 83.6069 126.7 82.2632 125.043 82.2632 cv
123.388 82.2632 122.043 83.6069 122.043 85.2632 cv
122.043 86.9189 123.388 88.2632 125.043 88.2632 cv
126.7 88.2632 128.043 86.9189 128.043 85.2632 cv
ef
120.604 81.1831 mo
120.604 79.5269 119.259 78.1831 117.604 78.1831 cv
115.947 78.1831 114.604 79.5269 114.604 81.1831 cv
114.604 82.8389 115.947 84.1831 117.604 84.1831 cv
119.259 84.1831 120.604 82.8389 120.604 81.1831 cv
ef
113.164 74.7031 mo
113.164 73.0469 111.819 71.7031 110.164 71.7031 cv
108.507 71.7031 107.164 73.0469 107.164 74.7031 cv
107.164 76.3589 108.507 77.7031 110.164 77.7031 cv
111.819 77.7031 113.164 76.3589 113.164 74.7031 cv
ef
105.483 67.9829 mo
105.483 66.3271 104.14 64.9829 102.483 64.9829 cv
100.828 64.9829 99.4834 66.3271 99.4834 67.9829 cv
99.4834 69.6392 100.828 70.9829 102.483 70.9829 cv
104.14 70.9829 105.483 69.6392 105.483 67.9829 cv
ef
98.0435 58.623 mo
98.0435 56.9668 96.6997 55.623 95.0435 55.623 cv
93.3877 55.623 92.0435 56.9668 92.0435 58.623 cv
92.0435 60.2793 93.3877 61.623 95.0435 61.623 cv
96.6997 61.623 98.0435 60.2793 98.0435 58.623 cv
ef
90.3633 52.1431 mo
90.3633 50.4873 89.0195 49.1431 87.3633 49.1431 cv
85.7075 49.1431 84.3633 50.4873 84.3633 52.1431 cv
84.3633 53.7988 85.7075 55.1431 87.3633 55.1431 cv
89.0195 55.1431 90.3633 53.7988 90.3633 52.1431 cv
ef
82.9233 42.7832 mo
82.9233 41.127 81.5796 39.7832 79.9233 39.7832 cv
78.2676 39.7832 76.9233 41.127 76.9233 42.7832 cv
76.9233 44.439 78.2676 45.7832 79.9233 45.7832 cv
81.5796 45.7832 82.9233 44.439 82.9233 42.7832 cv
ef
75.2437 35.583 mo
75.2437 33.9268 73.8994 32.583 72.2437 32.583 cv
70.5874 32.583 69.2437 33.9268 69.2437 35.583 cv
69.2437 37.2393 70.5874 38.583 72.2437 38.583 cv
73.8994 38.583 75.2437 37.2393 75.2437 35.583 cv
ef
67.8037 31.623 mo
67.8037 29.9668 66.4595 28.623 64.8037 28.623 cv
63.1475 28.623 61.8037 29.9668 61.8037 31.623 cv
61.8037 33.2793 63.1475 34.623 64.8037 34.623 cv
66.4595 34.623 67.8037 33.2793 67.8037 31.623 cv
ef
60.3633 37.0229 mo
60.3633 35.3672 59.0195 34.0229 57.3633 34.0229 cv
55.7075 34.0229 54.3633 35.3672 54.3633 37.0229 cv
54.3633 38.6792 55.7075 40.0229 57.3633 40.0229 cv
59.0195 40.0229 60.3633 38.6792 60.3633 37.0229 cv
ef
202.313 102.373 mo
203.813 102.623 li
@
53.5635 102.623 mo
204.563 102.623 li
0 0 0 rgb
@
200.813 100.373 mo
198.563 100.373 li
198.563 104.873 li
203.063 104.873 li
203.063 100.373 li
200.813 100.373 li
cp
0 0 1 rgb
ef
193.063 100.123 mo
190.813 100.123 li
190.813 104.623 li
195.313 104.623 li
195.313 100.123 li
193.063 100.123 li
cp
ef
185.563 99.873 mo
183.313 99.873 li
183.313 104.373 li
187.813 104.373 li
187.813 99.873 li
185.563 99.873 li
cp
ef
178.063 100.123 mo
175.813 100.123 li
175.813 104.623 li
180.313 104.623 li
180.313 100.123 li
178.063 100.123 li
cp
ef
170.563 100.123 mo
168.313 100.123 li
168.313 104.623 li
172.813 104.623 li
172.813 100.123 li
170.563 100.123 li
cp
ef
163.063 100.873 mo
160.813 100.873 li
160.813 105.373 li
165.313 105.373 li
165.313 100.873 li
163.063 100.873 li
cp
ef
155.313 101.373 mo
153.063 101.373 li
153.063 105.873 li
157.563 105.873 li
157.563 101.373 li
155.313 101.373 li
cp
ef
147.813 100.873 mo
145.563 100.873 li
145.563 105.373 li
150.063 105.373 li
150.063 100.873 li
147.813 100.873 li
cp
ef
140.313 101.123 mo
138.063 101.123 li
138.063 105.623 li
142.563 105.623 li
142.563 101.123 li
140.313 101.123 li
cp
ef
132.813 101.123 mo
130.563 101.123 li
130.563 105.623 li
135.063 105.623 li
135.063 101.123 li
132.813 101.123 li
cp
ef
125.063 101.373 mo
122.813 101.373 li
122.813 105.873 li
127.313 105.873 li
127.313 101.373 li
125.063 101.373 li
cp
ef
117.563 100.623 mo
115.313 100.623 li
115.313 105.123 li
119.813 105.123 li
119.813 100.623 li
117.563 100.623 li
cp
ef
110.063 102.373 mo
107.813 102.373 li
107.813 106.873 li
112.313 106.873 li
112.313 102.373 li
110.063 102.373 li
cp
ef
102.563 101.873 mo
100.313 101.873 li
100.313 106.373 li
104.813 106.373 li
104.813 101.873 li
102.563 101.873 li
cp
ef
95.0635 102.373 mo
92.8135 102.373 li
92.8135 106.873 li
97.3135 106.873 li
97.3135 102.373 li
95.0635 102.373 li
cp
ef
87.3135 102.373 mo
85.0635 102.373 li
85.0635 106.873 li
89.5635 106.873 li
89.5635 102.373 li
87.3135 102.373 li
cp
ef
79.8135 101.373 mo
77.5635 101.373 li
77.5635 105.873 li
82.0635 105.873 li
82.0635 101.373 li
79.8135 101.373 li
cp
ef
72.3135 104.373 mo
70.0635 104.373 li
70.0635 108.873 li
74.5635 108.873 li
74.5635 104.373 li
72.3135 104.373 li
cp
ef
64.8135 104.373 mo
62.5635 104.373 li
62.5635 108.873 li
67.0635 108.873 li
67.0635 104.373 li
64.8135 104.373 li
cp
ef
57.3135 102.373 mo
55.0635 102.373 li
55.0635 106.873 li
59.5635 106.873 li
59.5635 102.373 li
57.3135 102.373 li
cp
ef
60.3633 49.2632 mo
60.3633 47.6069 59.0195 46.2632 57.3633 46.2632 cv
55.7075 46.2632 54.3633 47.6069 54.3633 49.2632 cv
54.3633 50.9189 55.7075 52.2632 57.3633 52.2632 cv
59.0195 52.2632 60.3633 50.9189 60.3633 49.2632 cv
67.8037 52.3828 mo
67.8037 50.7271 66.4595 49.3828 64.8037 49.3828 cv
63.1475 49.3828 61.8037 50.7271 61.8037 52.3828 cv
61.8037 54.0391 63.1475 55.3828 64.8037 55.3828 cv
66.4595 55.3828 67.8037 54.0391 67.8037 52.3828 cv
75.2437 54.063 mo
75.2437 52.4072 73.8994 51.063 72.2437 51.063 cv
70.5874 51.063 69.2437 52.4072 69.2437 54.063 cv
69.2437 55.7188 70.5874 57.063 72.2437 57.063 cv
73.8994 57.063 75.2437 55.7188 75.2437 54.063 cv
82.9233 58.623 mo
82.9233 56.9668 81.5796 55.623 79.9233 55.623 cv
78.2676 55.623 76.9233 56.9668 76.9233 58.623 cv
76.9233 60.2793 78.2676 61.623 79.9233 61.623 cv
81.5796 61.623 82.9233 60.2793 82.9233 58.623 cv
90.3633 59.8232 mo
90.3633 58.167 89.0195 56.8232 87.3633 56.8232 cv
85.7075 56.8232 84.3633 58.167 84.3633 59.8232 cv
84.3633 61.479 85.7075 62.8232 87.3633 62.8232 cv
89.0195 62.8232 90.3633 61.479 90.3633 59.8232 cv
98.0435 63.4229 mo
98.0435 61.7671 96.6997 60.4229 95.0435 60.4229 cv
93.3877 60.4229 92.0435 61.7671 92.0435 63.4229 cv
92.0435 65.0791 93.3877 66.4229 95.0435 66.4229 cv
96.6997 66.4229 98.0435 65.0791 98.0435 63.4229 cv
105.483 66.7832 mo
105.483 65.127 104.14 63.7832 102.483 63.7832 cv
100.828 63.7832 99.4834 65.127 99.4834 66.7832 cv
99.4834 68.439 100.828 69.7832 102.483 69.7832 cv
104.14 69.7832 105.483 68.439 105.483 66.7832 cv
113.164 71.583 mo
113.164 69.9272 111.819 68.583 110.164 68.583 cv
108.507 68.583 107.164 69.9272 107.164 71.583 cv
107.164 73.2393 108.507 74.583 110.164 74.583 cv
111.819 74.583 113.164 73.2393 113.164 71.583 cv
120.604 72.543 mo
120.604 70.8872 119.259 69.543 117.604 69.543 cv
115.947 69.543 114.604 70.8872 114.604 72.543 cv
114.604 74.1992 115.947 75.543 117.604 75.543 cv
119.259 75.543 120.604 74.1992 120.604 72.543 cv
128.043 76.8633 mo
128.043 75.207 126.7 73.8633 125.043 73.8633 cv
123.388 73.8633 122.043 75.207 122.043 76.8633 cv
122.043 78.519 123.388 79.8633 125.043 79.8633 cv
126.7 79.8633 128.043 78.519 128.043 76.8633 cv
135.724 79.0229 mo
135.724 77.3672 134.379 76.0229 132.724 76.0229 cv
131.067 76.0229 129.724 77.3672 129.724 79.0229 cv
129.724 80.6792 131.067 82.0229 132.724 82.0229 cv
134.379 82.0229 135.724 80.6792 135.724 79.0229 cv
143.403 83.3428 mo
143.403 81.687 142.06 80.3428 140.403 80.3428 cv
138.748 80.3428 137.403 81.687 137.403 83.3428 cv
137.403 84.999 138.748 86.3428 140.403 86.3428 cv
142.06 86.3428 143.403 84.999 143.403 83.3428 cv
150.843 86.7031 mo
150.843 85.0469 149.5 83.7031 147.843 83.7031 cv
146.188 83.7031 144.843 85.0469 144.843 86.7031 cv
144.843 88.3589 146.188 89.7031 147.843 89.7031 cv
149.5 89.7031 150.843 88.3589 150.843 86.7031 cv
158.284 90.063 mo
158.284 88.4072 156.939 87.063 155.284 87.063 cv
153.627 87.063 152.284 88.4072 152.284 90.063 cv
152.284 91.7192 153.627 93.063 155.284 93.063 cv
156.939 93.063 158.284 91.7192 158.284 90.063 cv
165.963 92.9429 mo
165.963 91.2871 164.62 89.9429 162.963 89.9429 cv
161.308 89.9429 159.963 91.2871 159.963 92.9429 cv
159.963 94.5991 161.308 95.9429 162.963 95.9429 cv
164.62 95.9429 165.963 94.5991 165.963 92.9429 cv
173.644 95.583 mo
173.644 93.9268 172.299 92.583 170.644 92.583 cv
168.987 92.583 167.644 93.9268 167.644 95.583 cv
167.644 97.2393 168.987 98.583 170.644 98.583 cv
172.299 98.583 173.644 97.2393 173.644 95.583 cv
181.083 97.623 mo
181.083 95.9668 179.739 94.623 178.083 94.623 cv
176.427 94.623 175.083 95.9668 175.083 97.623 cv
175.083 99.2788 176.427 100.623 178.083 100.623 cv
179.739 100.623 181.083 99.2788 181.083 97.623 cv
188.523 100.623 mo
188.523 98.9668 187.18 97.623 185.523 97.623 cv
183.868 97.623 182.523 98.9668 182.523 100.623 cv
182.523 102.279 183.868 103.623 185.523 103.623 cv
187.18 103.623 188.523 102.279 188.523 100.623 cv
195.963 102.063 mo
195.963 100.407 194.62 99.063 192.963 99.063 cv
191.308 99.063 189.963 100.407 189.963 102.063 cv
189.963 103.719 191.308 105.063 192.963 105.063 cv
194.62 105.063 195.963 103.719 195.963 102.063 cv
203.883 102.543 mo
203.883 100.887 202.54 99.543 200.883 99.543 cv
199.228 99.543 197.883 100.887 197.883 102.543 cv
197.883 104.199 199.228 105.543 200.883 105.543 cv
202.54 105.543 203.883 104.199 203.883 102.543 cv
0 .4 0 rgb
@
203.883 102.543 mo
203.883 100.887 202.54 99.543 200.883 99.543 cv
199.228 99.543 197.883 100.887 197.883 102.543 cv
197.883 104.199 199.228 105.543 200.883 105.543 cv
202.54 105.543 203.883 104.199 203.883 102.543 cv
1 0 0 rgb
ef
195.963 102.303 mo
195.963 100.647 194.62 99.3032 192.963 99.3032 cv
191.308 99.3032 189.963 100.647 189.963 102.303 cv
189.963 103.959 191.308 105.303 192.963 105.303 cv
194.62 105.303 195.963 103.959 195.963 102.303 cv
ef
188.523 101.823 mo
188.523 100.167 187.18 98.8232 185.523 98.8232 cv
183.868 98.8232 182.523 100.167 182.523 101.823 cv
182.523 103.479 183.868 104.823 185.523 104.823 cv
187.18 104.823 188.523 103.479 188.523 101.823 cv
ef
181.083 101.583 mo
181.083 99.9268 179.739 98.583 178.083 98.583 cv
176.427 98.583 175.083 99.9268 175.083 101.583 cv
175.083 103.239 176.427 104.583 178.083 104.583 cv
179.739 104.583 181.083 103.239 181.083 101.583 cv
ef
173.644 100.623 mo
173.644 98.9668 172.299 97.623 170.644 97.623 cv
168.987 97.623 167.644 98.9668 167.644 100.623 cv
167.644 102.279 168.987 103.623 170.644 103.623 cv
172.299 103.623 173.644 102.279 173.644 100.623 cv
ef
165.963 99.9028 mo
165.963 98.2471 164.62 96.9028 162.963 96.9028 cv
161.308 96.9028 159.963 98.2471 159.963 99.9028 cv
159.963 101.559 161.308 102.903 162.963 102.903 cv
164.62 102.903 165.963 101.559 165.963 99.9028 cv
ef
158.284 98.9429 mo
158.284 97.2871 156.939 95.9429 155.284 95.9429 cv
153.627 95.9429 152.284 97.2871 152.284 98.9429 cv
152.284 100.599 153.627 101.943 155.284 101.943 cv
156.939 101.943 158.284 100.599 158.284 98.9429 cv
ef
150.843 96.063 mo
150.843 94.4072 149.5 93.063 147.843 93.063 cv
146.188 93.063 144.843 94.4072 144.843 96.063 cv
144.843 97.7192 146.188 99.063 147.843 99.063 cv
149.5 99.063 150.843 97.7192 150.843 96.063 cv
ef
143.403 94.623 mo
143.403 92.9668 142.06 91.623 140.403 91.623 cv
138.748 91.623 137.403 92.9668 137.403 94.623 cv
137.403 96.2788 138.748 97.623 140.403 97.623 cv
142.06 97.623 143.403 96.2788 143.403 94.623 cv
ef
135.724 90.543 mo
135.724 88.8872 134.379 87.543 132.724 87.543 cv
131.067 87.543 129.724 88.8872 129.724 90.543 cv
129.724 92.1992 131.067 93.543 132.724 93.543 cv
134.379 93.543 135.724 92.1992 135.724 90.543 cv
ef
128.043 85.2632 mo
128.043 83.6069 126.7 82.2632 125.043 82.2632 cv
123.388 82.2632 122.043 83.6069 122.043 85.2632 cv
122.043 86.9189 123.388 88.2632 125.043 88.2632 cv
126.7 88.2632 128.043 86.9189 128.043 85.2632 cv
ef
120.604 81.1831 mo
120.604 79.5269 119.259 78.1831 117.604 78.1831 cv
115.947 78.1831 114.604 79.5269 114.604 81.1831 cv
114.604 82.8389 115.947 84.1831 117.604 84.1831 cv
119.259 84.1831 120.604 82.8389 120.604 81.1831 cv
ef
113.164 74.7031 mo
113.164 73.0469 111.819 71.7031 110.164 71.7031 cv
108.507 71.7031 107.164 73.0469 107.164 74.7031 cv
107.164 76.3589 108.507 77.7031 110.164 77.7031 cv
111.819 77.7031 113.164 76.3589 113.164 74.7031 cv
ef
105.483 67.9829 mo
105.483 66.3271 104.14 64.9829 102.483 64.9829 cv
100.828 64.9829 99.4834 66.3271 99.4834 67.9829 cv
99.4834 69.6392 100.828 70.9829 102.483 70.9829 cv
104.14 70.9829 105.483 69.6392 105.483 67.9829 cv
ef
98.0435 58.623 mo
98.0435 56.9668 96.6997 55.623 95.0435 55.623 cv
93.3877 55.623 92.0435 56.9668 92.0435 58.623 cv
92.0435 60.2793 93.3877 61.623 95.0435 61.623 cv
96.6997 61.623 98.0435 60.2793 98.0435 58.623 cv
ef
90.3633 52.1431 mo
90.3633 50.4873 89.0195 49.1431 87.3633 49.1431 cv
85.7075 49.1431 84.3633 50.4873 84.3633 52.1431 cv
84.3633 53.7988 85.7075 55.1431 87.3633 55.1431 cv
89.0195 55.1431 90.3633 53.7988 90.3633 52.1431 cv
ef
82.9233 42.7832 mo
82.9233 41.127 81.5796 39.7832 79.9233 39.7832 cv
78.2676 39.7832 76.9233 41.127 76.9233 42.7832 cv
76.9233 44.439 78.2676 45.7832 79.9233 45.7832 cv
81.5796 45.7832 82.9233 44.439 82.9233 42.7832 cv
ef
75.2437 35.583 mo
75.2437 33.9268 73.8994 32.583 72.2437 32.583 cv
70.5874 32.583 69.2437 33.9268 69.2437 35.583 cv
69.2437 37.2393 70.5874 38.583 72.2437 38.583 cv
73.8994 38.583 75.2437 37.2393 75.2437 35.583 cv
ef
67.8037 31.623 mo
67.8037 29.9668 66.4595 28.623 64.8037 28.623 cv
63.1475 28.623 61.8037 29.9668 61.8037 31.623 cv
61.8037 33.2793 63.1475 34.623 64.8037 34.623 cv
66.4595 34.623 67.8037 33.2793 67.8037 31.623 cv
ef
60.3633 37.0229 mo
60.3633 35.3672 59.0195 34.0229 57.3633 34.0229 cv
55.7075 34.0229 54.3633 35.3672 54.3633 37.0229 cv
54.3633 38.6792 55.7075 40.0229 57.3633 40.0229 cv
59.0195 40.0229 60.3633 38.6792 60.3633 37.0229 cv
ef
202.313 102.373 mo
203.813 102.623 li
@
203.864 108.55 mo
204.864 107.55 li
204.864 11.8003 li
353.864 11.8003 li
354.864 10.8003 li
203.864 10.8003 li
203.864 108.55 li
1 1 1 rgb
ef
203.864 108.55 mo
354.864 108.55 li
203.864 108.55 mo
203.864 10.8003 li
354.864 10.8003 li
354.864 108.55 li
203.864 108.55 li
cp
0 0 0 rgb
@
354.864 105.8 mo
354.864 108.55 li
351.114 107.05 mo
351.114 108.55 li
347.364 107.05 mo
347.364 108.55 li
343.364 107.05 mo
343.364 108.55 li
339.614 105.8 mo
339.614 108.55 li
335.864 107.05 mo
335.864 108.55 li
332.114 107.05 mo
332.114 108.55 li
328.364 107.05 mo
328.364 108.55 li
324.614 105.8 mo
324.614 108.55 li
320.864 107.05 mo
320.864 108.55 li
317.114 107.05 mo
317.114 108.55 li
313.364 107.05 mo
313.364 108.55 li
309.614 105.8 mo
309.614 108.55 li
305.614 107.05 mo
305.614 108.55 li
301.864 107.05 mo
301.864 108.55 li
298.114 107.05 mo
298.114 108.55 li
294.364 105.8 mo
294.364 108.55 li
290.614 107.05 mo
290.614 108.55 li
286.864 107.05 mo
286.864 108.55 li
283.114 107.05 mo
283.114 108.55 li
279.364 105.8 mo
279.364 108.55 li
275.614 107.05 mo
275.614 108.55 li
271.864 107.05 mo
271.864 108.55 li
267.864 107.05 mo
267.864 108.55 li
264.114 105.8 mo
264.114 108.55 li
260.364 107.05 mo
260.364 108.55 li
256.614 107.05 mo
256.614 108.55 li
252.864 107.05 mo
252.864 108.55 li
249.114 105.8 mo
249.114 108.55 li
245.364 107.05 mo
245.364 108.55 li
241.614 107.05 mo
241.614 108.55 li
237.864 107.05 mo
237.864 108.55 li
233.864 105.8 mo
233.864 108.55 li
230.114 107.05 mo
230.114 108.55 li
226.364 107.05 mo
226.364 108.55 li
222.614 107.05 mo
222.614 108.55 li
218.864 105.8 mo
218.864 108.55 li
215.114 107.05 mo
215.114 108.55 li
211.364 107.05 mo
211.364 108.55 li
207.614 107.05 mo
207.614 108.55 li
203.864 105.8 mo
203.864 108.55 li
@
203.864 108.55 mo
203.864 10.8003 li
@
208.364 10.8003 mo
203.864 10.8003 li
206.114 105.55 mo
203.864 105.55 li
208.364 102.55 mo
203.864 102.55 li
208.364 10.8003 mo
203.864 10.8003 li
206.114 13.8003 mo
203.864 13.8003 li
206.114 17.0503 mo
203.864 17.0503 li
206.114 20.0503 mo
203.864 20.0503 li
206.114 23.0503 mo
203.864 23.0503 li
208.364 26.0503 mo
203.864 26.0503 li
206.114 29.0503 mo
203.864 29.0503 li
206.114 32.3003 mo
203.864 32.3003 li
206.114 35.3003 mo
203.864 35.3003 li
206.114 38.3003 mo
203.864 38.3003 li
208.364 41.3003 mo
203.864 41.3003 li
206.114 44.5503 mo
203.864 44.5503 li
206.114 47.5503 mo
203.864 47.5503 li
206.114 50.5503 mo
203.864 50.5503 li
206.114 53.5503 mo
203.864 53.5503 li
208.364 56.5503 mo
203.864 56.5503 li
206.114 59.8003 mo
203.864 59.8003 li
206.114 62.8003 mo
203.864 62.8003 li
206.114 65.8003 mo
203.864 65.8003 li
206.114 68.8003 mo
203.864 68.8003 li
208.364 72.0503 mo
203.864 72.0503 li
206.114 75.0503 mo
203.864 75.0503 li
206.114 78.0503 mo
203.864 78.0503 li
206.114 81.0503 mo
203.864 81.0503 li
206.114 84.0503 mo
203.864 84.0503 li
208.364 87.3003 mo
203.864 87.3003 li
206.114 90.3003 mo
203.864 90.3003 li
206.114 93.3003 mo
203.864 93.3003 li
206.114 96.3003 mo
203.864 96.3003 li
206.114 99.5503 mo
203.864 99.5503 li
208.364 102.55 mo
203.864 102.55 li
@
354.074 102.47 mo
354.074 100.814 352.73 99.4702 351.074 99.4702 cv
349.418 99.4702 348.074 100.814 348.074 102.47 cv
348.074 104.126 349.418 105.47 351.074 105.47 cv
352.73 105.47 354.074 104.126 354.074 102.47 cv
1 0 0 rgb
ef
346.395 102.47 mo
346.395 100.814 345.05 99.4702 343.395 99.4702 cv
341.738 99.4702 340.395 100.814 340.395 102.47 cv
340.395 104.126 341.738 105.47 343.395 105.47 cv
345.05 105.47 346.395 104.126 346.395 102.47 cv
ef
338.954 101.99 mo
338.954 100.334 337.61 98.9902 335.954 98.9902 cv
334.298 98.9902 332.954 100.334 332.954 101.99 cv
332.954 103.646 334.298 104.99 335.954 104.99 cv
337.61 104.99 338.954 103.646 338.954 101.99 cv
ef
331.274 101.27 mo
331.274 99.6143 329.931 98.27 328.274 98.27 cv
326.618 98.27 325.274 99.6143 325.274 101.27 cv
325.274 102.926 326.618 104.27 328.274 104.27 cv
329.931 104.27 331.274 102.926 331.274 101.27 cv
ef
323.834 100.55 mo
323.834 98.894 322.49 97.5503 320.834 97.5503 cv
319.179 97.5503 317.834 98.894 317.834 100.55 cv
317.834 102.206 319.179 103.55 320.834 103.55 cv
322.49 103.55 323.834 102.206 323.834 100.55 cv
ef
316.395 99.5903 mo
316.395 97.9341 315.05 96.5903 313.395 96.5903 cv
311.738 96.5903 310.395 97.9341 310.395 99.5903 cv
310.395 101.246 311.738 102.59 313.395 102.59 cv
315.05 102.59 316.395 101.246 316.395 99.5903 cv
ef
308.714 97.9102 mo
308.714 96.2544 307.37 94.9102 305.714 94.9102 cv
304.059 94.9102 302.714 96.2544 302.714 97.9102 cv
302.714 99.5664 304.059 100.91 305.714 100.91 cv
307.37 100.91 308.714 99.5664 308.714 97.9102 cv
ef
301.034 95.7505 mo
301.034 94.0942 299.69 92.7505 298.034 92.7505 cv
296.378 92.7505 295.034 94.0942 295.034 95.7505 cv
295.034 97.4063 296.378 98.7505 298.034 98.7505 cv
299.69 98.7505 301.034 97.4063 301.034 95.7505 cv
ef
293.595 92.6304 mo
293.595 90.9741 292.25 89.6304 290.595 89.6304 cv
288.938 89.6304 287.595 90.9741 287.595 92.6304 cv
287.595 94.2861 288.938 95.6304 290.595 95.6304 cv
292.25 95.6304 293.595 94.2861 293.595 92.6304 cv
ef
286.154 89.7505 mo
286.154 88.0942 284.811 86.7505 283.154 86.7505 cv
281.498 86.7505 280.154 88.0942 280.154 89.7505 cv
280.154 91.4063 281.498 92.7505 283.154 92.7505 cv
284.811 92.7505 286.154 91.4063 286.154 89.7505 cv
ef
278.714 83.5103 mo
278.714 81.8545 277.37 80.5103 275.714 80.5103 cv
274.058 80.5103 272.714 81.8545 272.714 83.5103 cv
272.714 85.1665 274.058 86.5103 275.714 86.5103 cv
277.37 86.5103 278.714 85.1665 278.714 83.5103 cv
ef
270.794 78.9502 mo
270.794 77.2944 269.45 75.9502 267.794 75.9502 cv
266.138 75.9502 264.794 77.2944 264.794 78.9502 cv
264.794 80.6064 266.138 81.9502 267.794 81.9502 cv
269.45 81.9502 270.794 80.6064 270.794 78.9502 cv
ef
263.354 71.7505 mo
263.354 70.0942 262.01 68.7505 260.354 68.7505 cv
258.698 68.7505 257.354 70.0942 257.354 71.7505 cv
257.354 73.4063 258.698 74.7505 260.354 74.7505 cv
262.01 74.7505 263.354 73.4063 263.354 71.7505 cv
ef
255.914 65.27 mo
255.914 63.6143 254.57 62.27 252.914 62.27 cv
251.258 62.27 249.914 63.6143 249.914 65.27 cv
249.914 66.9263 251.258 68.27 252.914 68.27 cv
254.57 68.27 255.914 66.9263 255.914 65.27 cv
ef
248.474 58.0703 mo
248.474 56.4146 247.13 55.0703 245.474 55.0703 cv
243.818 55.0703 242.474 56.4146 242.474 58.0703 cv
242.474 59.7261 243.818 61.0703 245.474 61.0703 cv
247.13 61.0703 248.474 59.7261 248.474 58.0703 cv
ef
240.794 48.7104 mo
240.794 47.0542 239.45 45.7104 237.794 45.7104 cv
236.138 45.7104 234.794 47.0542 234.794 48.7104 cv
234.794 50.3662 236.138 51.7104 237.794 51.7104 cv
239.45 51.7104 240.794 50.3662 240.794 48.7104 cv
ef
233.114 39.5903 mo
233.114 37.9341 231.771 36.5903 230.114 36.5903 cv
228.458 36.5903 227.114 37.9341 227.114 39.5903 cv
227.114 41.2461 228.458 42.5903 230.114 42.5903 cv
231.771 42.5903 233.114 41.2461 233.114 39.5903 cv
ef
225.674 31.5503 mo
225.674 29.894 224.33 28.5503 222.674 28.5503 cv
221.018 28.5503 219.674 29.894 219.674 31.5503 cv
219.674 33.2065 221.018 34.5503 222.674 34.5503 cv
224.33 34.5503 225.674 33.2065 225.674 31.5503 cv
ef
217.994 33.1104 mo
217.994 31.4541 216.65 30.1104 214.994 30.1104 cv
213.338 30.1104 211.994 31.4541 211.994 33.1104 cv
211.994 34.7661 213.338 36.1104 214.994 36.1104 cv
216.65 36.1104 217.994 34.7661 217.994 33.1104 cv
ef
210.554 38.3901 mo
210.554 36.7344 209.21 35.3901 207.554 35.3901 cv
205.898 35.3901 204.554 36.7344 204.554 38.3901 cv
204.554 40.0464 205.898 41.3901 207.554 41.3901 cv
209.21 41.3901 210.554 40.0464 210.554 38.3901 cv
ef
352.864 102.3 mo
354.114 102.3 li
@
203.864 102.55 mo
354.864 102.55 li
0 0 0 rgb
@
351.114 100.3 mo
348.864 100.3 li
348.864 104.8 li
353.364 104.8 li
353.364 100.3 li
351.114 100.3 li
cp
0 0 1 rgb
ef
343.364 100.05 mo
341.114 100.05 li
341.114 104.55 li
345.614 104.55 li
345.614 100.05 li
343.364 100.05 li
cp
ef
335.864 100.05 mo
333.614 100.05 li
333.614 104.55 li
338.114 104.55 li
338.114 100.05 li
335.864 100.05 li
cp
ef
328.364 99.8003 mo
326.114 99.8003 li
326.114 104.3 li
330.614 104.3 li
330.614 99.8003 li
328.364 99.8003 li
cp
ef
320.864 100.3 mo
318.614 100.3 li
318.614 104.8 li
323.114 104.8 li
323.114 100.3 li
320.864 100.3 li
cp
ef
313.364 100.55 mo
311.114 100.55 li
311.114 105.05 li
315.614 105.05 li
315.614 100.55 li
313.364 100.55 li
cp
ef
305.614 101.3 mo
303.364 101.3 li
303.364 105.8 li
307.864 105.8 li
307.864 101.3 li
305.614 101.3 li
cp
ef
298.114 99.8003 mo
295.864 99.8003 li
295.864 104.3 li
300.364 104.3 li
300.364 99.8003 li
298.114 99.8003 li
cp
ef
290.614 100.8 mo
288.364 100.8 li
288.364 105.3 li
292.864 105.3 li
292.864 100.8 li
290.614 100.8 li
cp
ef
283.114 100.55 mo
280.864 100.55 li
280.864 105.05 li
285.364 105.05 li
285.364 100.55 li
283.114 100.55 li
cp
ef
275.614 100.3 mo
273.364 100.3 li
273.364 104.8 li
277.864 104.8 li
277.864 100.3 li
275.614 100.3 li
cp
ef
267.864 100.05 mo
265.614 100.05 li
265.614 104.55 li
270.114 104.55 li
270.114 100.05 li
267.864 100.05 li
cp
ef
260.364 101.8 mo
258.114 101.8 li
258.114 106.3 li
262.614 106.3 li
262.614 101.8 li
260.364 101.8 li
cp
ef
252.864 100.8 mo
250.614 100.8 li
250.614 105.3 li
255.114 105.3 li
255.114 100.8 li
252.864 100.8 li
cp
ef
245.364 100.3 mo
243.114 100.3 li
243.114 104.8 li
247.614 104.8 li
247.614 100.3 li
245.364 100.3 li
cp
ef
237.864 100.05 mo
235.614 100.05 li
235.614 104.55 li
240.114 104.55 li
240.114 100.05 li
237.864 100.05 li
cp
ef
230.114 102.3 mo
227.864 102.3 li
227.864 106.8 li
232.364 106.8 li
232.364 102.3 li
230.114 102.3 li
cp
ef
222.614 101.55 mo
220.364 101.55 li
220.364 106.05 li
224.864 106.05 li
224.864 101.55 li
222.614 101.55 li
cp
ef
215.114 103.3 mo
212.864 103.3 li
212.864 107.8 li
217.364 107.8 li
217.364 103.3 li
215.114 103.3 li
cp
ef
207.614 102.3 mo
205.364 102.3 li
205.364 106.8 li
209.864 106.8 li
209.864 102.3 li
207.614 102.3 li
cp
ef
210.554 48.4702 mo
210.554 46.8145 209.21 45.4702 207.554 45.4702 cv
205.898 45.4702 204.554 46.8145 204.554 48.4702 cv
204.554 50.1265 205.898 51.4702 207.554 51.4702 cv
209.21 51.4702 210.554 50.1265 210.554 48.4702 cv
217.994 47.5103 mo
217.994 45.854 216.65 44.5103 214.994 44.5103 cv
213.338 44.5103 211.994 45.854 211.994 47.5103 cv
211.994 49.1665 213.338 50.5103 214.994 50.5103 cv
216.65 50.5103 217.994 49.1665 217.994 47.5103 cv
225.674 52.5503 mo
225.674 50.894 224.33 49.5503 222.674 49.5503 cv
221.018 49.5503 219.674 50.894 219.674 52.5503 cv
219.674 54.2065 221.018 55.5503 222.674 55.5503 cv
224.33 55.5503 225.674 54.2065 225.674 52.5503 cv
233.114 53.27 mo
233.114 51.6143 231.771 50.27 230.114 50.27 cv
228.458 50.27 227.114 51.6143 227.114 53.27 cv
227.114 54.9263 228.458 56.27 230.114 56.27 cv
231.771 56.27 233.114 54.9263 233.114 53.27 cv
240.794 59.9902 mo
240.794 58.3345 239.45 56.9902 237.794 56.9902 cv
236.138 56.9902 234.794 58.3345 234.794 59.9902 cv
234.794 61.646 236.138 62.9902 237.794 62.9902 cv
239.45 62.9902 240.794 61.646 240.794 59.9902 cv
248.474 63.5903 mo
248.474 61.9341 247.13 60.5903 245.474 60.5903 cv
243.818 60.5903 242.474 61.9341 242.474 63.5903 cv
242.474 65.2461 243.818 66.5903 245.474 66.5903 cv
247.13 66.5903 248.474 65.2461 248.474 63.5903 cv
255.914 66.9502 mo
255.914 65.2944 254.57 63.9502 252.914 63.9502 cv
251.258 63.9502 249.914 65.2944 249.914 66.9502 cv
249.914 68.6064 251.258 69.9502 252.914 69.9502 cv
254.57 69.9502 255.914 68.6064 255.914 66.9502 cv
263.354 69.8301 mo
263.354 68.1743 262.01 66.8301 260.354 66.8301 cv
258.698 66.8301 257.354 68.1743 257.354 69.8301 cv
257.354 71.4863 258.698 72.8301 260.354 72.8301 cv
262.01 72.8301 263.354 71.4863 263.354 69.8301 cv
270.794 71.7505 mo
270.794 70.0942 269.45 68.7505 267.794 68.7505 cv
266.138 68.7505 264.794 70.0942 264.794 71.7505 cv
264.794 73.4063 266.138 74.7505 267.794 74.7505 cv
269.45 74.7505 270.794 73.4063 270.794 71.7505 cv
278.714 75.5903 mo
278.714 73.9341 277.37 72.5903 275.714 72.5903 cv
274.058 72.5903 272.714 73.9341 272.714 75.5903 cv
272.714 77.2461 274.058 78.5903 275.714 78.5903 cv
277.37 78.5903 278.714 77.2461 278.714 75.5903 cv
286.154 78.9502 mo
286.154 77.2944 284.811 75.9502 283.154 75.9502 cv
281.498 75.9502 280.154 77.2944 280.154 78.9502 cv
280.154 80.6064 281.498 81.9502 283.154 81.9502 cv
284.811 81.9502 286.154 80.6064 286.154 78.9502 cv
293.595 81.5903 mo
293.595 79.9341 292.25 78.5903 290.595 78.5903 cv
288.938 78.5903 287.595 79.9341 287.595 81.5903 cv
287.595 83.2461 288.938 84.5903 290.595 84.5903 cv
292.25 84.5903 293.595 83.2461 293.595 81.5903 cv
301.034 84.2305 mo
301.034 82.5742 299.69 81.2305 298.034 81.2305 cv
296.378 81.2305 295.034 82.5742 295.034 84.2305 cv
295.034 85.8862 296.378 87.2305 298.034 87.2305 cv
299.69 87.2305 301.034 85.8862 301.034 84.2305 cv
308.714 88.7905 mo
308.714 87.1343 307.37 85.7905 305.714 85.7905 cv
304.059 85.7905 302.714 87.1343 302.714 88.7905 cv
302.714 90.4463 304.059 91.7905 305.714 91.7905 cv
307.37 91.7905 308.714 90.4463 308.714 88.7905 cv
316.395 91.9102 mo
316.395 90.2544 315.05 88.9102 313.395 88.9102 cv
311.738 88.9102 310.395 90.2544 310.395 91.9102 cv
310.395 93.5664 311.738 94.9102 313.395 94.9102 cv
315.05 94.9102 316.395 93.5664 316.395 91.9102 cv
323.834 94.7905 mo
323.834 93.1343 322.49 91.7905 320.834 91.7905 cv
319.179 91.7905 317.834 93.1343 317.834 94.7905 cv
317.834 96.4463 319.179 97.7905 320.834 97.7905 cv
322.49 97.7905 323.834 96.4463 323.834 94.7905 cv
331.274 97.5503 mo
331.274 95.894 329.931 94.5503 328.274 94.5503 cv
326.618 94.5503 325.274 95.894 325.274 97.5503 cv
325.274 99.2061 326.618 100.55 328.274 100.55 cv
329.931 100.55 331.274 99.2061 331.274 97.5503 cv
338.954 100.55 mo
338.954 98.894 337.61 97.5503 335.954 97.5503 cv
334.298 97.5503 332.954 98.894 332.954 100.55 cv
332.954 102.206 334.298 103.55 335.954 103.55 cv
337.61 103.55 338.954 102.206 338.954 100.55 cv
346.395 101.99 mo
346.395 100.334 345.05 98.9902 343.395 98.9902 cv
341.738 98.9902 340.395 100.334 340.395 101.99 cv
340.395 103.646 341.738 104.99 343.395 104.99 cv
345.05 104.99 346.395 103.646 346.395 101.99 cv
354.074 102.47 mo
354.074 100.814 352.73 99.4702 351.074 99.4702 cv
349.418 99.4702 348.074 100.814 348.074 102.47 cv
348.074 104.126 349.418 105.47 351.074 105.47 cv
352.73 105.47 354.074 104.126 354.074 102.47 cv
0 .4 0 rgb
@
354.074 102.47 mo
354.074 100.814 352.73 99.4702 351.074 99.4702 cv
349.418 99.4702 348.074 100.814 348.074 102.47 cv
348.074 104.126 349.418 105.47 351.074 105.47 cv
352.73 105.47 354.074 104.126 354.074 102.47 cv
1 0 0 rgb
ef
346.395 102.47 mo
346.395 100.814 345.05 99.4702 343.395 99.4702 cv
341.738 99.4702 340.395 100.814 340.395 102.47 cv
340.395 104.126 341.738 105.47 343.395 105.47 cv
345.05 105.47 346.395 104.126 346.395 102.47 cv
ef
338.954 101.99 mo
338.954 100.334 337.61 98.9902 335.954 98.9902 cv
334.298 98.9902 332.954 100.334 332.954 101.99 cv
332.954 103.646 334.298 104.99 335.954 104.99 cv
337.61 104.99 338.954 103.646 338.954 101.99 cv
ef
331.274 101.27 mo
331.274 99.6143 329.931 98.27 328.274 98.27 cv
326.618 98.27 325.274 99.6143 325.274 101.27 cv
325.274 102.926 326.618 104.27 328.274 104.27 cv
329.931 104.27 331.274 102.926 331.274 101.27 cv
ef
323.834 100.55 mo
323.834 98.894 322.49 97.5503 320.834 97.5503 cv
319.179 97.5503 317.834 98.894 317.834 100.55 cv
317.834 102.206 319.179 103.55 320.834 103.55 cv
322.49 103.55 323.834 102.206 323.834 100.55 cv
ef
316.395 99.5903 mo
316.395 97.9341 315.05 96.5903 313.395 96.5903 cv
311.738 96.5903 310.395 97.9341 310.395 99.5903 cv
310.395 101.246 311.738 102.59 313.395 102.59 cv
315.05 102.59 316.395 101.246 316.395 99.5903 cv
ef
308.714 97.9102 mo
308.714 96.2544 307.37 94.9102 305.714 94.9102 cv
304.059 94.9102 302.714 96.2544 302.714 97.9102 cv
302.714 99.5664 304.059 100.91 305.714 100.91 cv
307.37 100.91 308.714 99.5664 308.714 97.9102 cv
ef
301.034 95.7505 mo
301.034 94.0942 299.69 92.7505 298.034 92.7505 cv
296.378 92.7505 295.034 94.0942 295.034 95.7505 cv
295.034 97.4063 296.378 98.7505 298.034 98.7505 cv
299.69 98.7505 301.034 97.4063 301.034 95.7505 cv
ef
293.595 92.6304 mo
293.595 90.9741 292.25 89.6304 290.595 89.6304 cv
288.938 89.6304 287.595 90.9741 287.595 92.6304 cv
287.595 94.2861 288.938 95.6304 290.595 95.6304 cv
292.25 95.6304 293.595 94.2861 293.595 92.6304 cv
ef
286.154 89.7505 mo
286.154 88.0942 284.811 86.7505 283.154 86.7505 cv
281.498 86.7505 280.154 88.0942 280.154 89.7505 cv
280.154 91.4063 281.498 92.7505 283.154 92.7505 cv
284.811 92.7505 286.154 91.4063 286.154 89.7505 cv
ef
278.714 83.5103 mo
278.714 81.8545 277.37 80.5103 275.714 80.5103 cv
274.058 80.5103 272.714 81.8545 272.714 83.5103 cv
272.714 85.1665 274.058 86.5103 275.714 86.5103 cv
277.37 86.5103 278.714 85.1665 278.714 83.5103 cv
ef
270.794 78.9502 mo
270.794 77.2944 269.45 75.9502 267.794 75.9502 cv
266.138 75.9502 264.794 77.2944 264.794 78.9502 cv
264.794 80.6064 266.138 81.9502 267.794 81.9502 cv
269.45 81.9502 270.794 80.6064 270.794 78.9502 cv
ef
263.354 71.7505 mo
263.354 70.0942 262.01 68.7505 260.354 68.7505 cv
258.698 68.7505 257.354 70.0942 257.354 71.7505 cv
257.354 73.4063 258.698 74.7505 260.354 74.7505 cv
262.01 74.7505 263.354 73.4063 263.354 71.7505 cv
ef
255.914 65.27 mo
255.914 63.6143 254.57 62.27 252.914 62.27 cv
251.258 62.27 249.914 63.6143 249.914 65.27 cv
249.914 66.9263 251.258 68.27 252.914 68.27 cv
254.57 68.27 255.914 66.9263 255.914 65.27 cv
ef
248.474 58.0703 mo
248.474 56.4146 247.13 55.0703 245.474 55.0703 cv
243.818 55.0703 242.474 56.4146 242.474 58.0703 cv
242.474 59.7261 243.818 61.0703 245.474 61.0703 cv
247.13 61.0703 248.474 59.7261 248.474 58.0703 cv
ef
240.794 48.7104 mo
240.794 47.0542 239.45 45.7104 237.794 45.7104 cv
236.138 45.7104 234.794 47.0542 234.794 48.7104 cv
234.794 50.3662 236.138 51.7104 237.794 51.7104 cv
239.45 51.7104 240.794 50.3662 240.794 48.7104 cv
ef
233.114 39.5903 mo
233.114 37.9341 231.771 36.5903 230.114 36.5903 cv
228.458 36.5903 227.114 37.9341 227.114 39.5903 cv
227.114 41.2461 228.458 42.5903 230.114 42.5903 cv
231.771 42.5903 233.114 41.2461 233.114 39.5903 cv
ef
225.674 31.5503 mo
225.674 29.894 224.33 28.5503 222.674 28.5503 cv
221.018 28.5503 219.674 29.894 219.674 31.5503 cv
219.674 33.2065 221.018 34.5503 222.674 34.5503 cv
224.33 34.5503 225.674 33.2065 225.674 31.5503 cv
ef
217.994 33.1104 mo
217.994 31.4541 216.65 30.1104 214.994 30.1104 cv
213.338 30.1104 211.994 31.4541 211.994 33.1104 cv
211.994 34.7661 213.338 36.1104 214.994 36.1104 cv
216.65 36.1104 217.994 34.7661 217.994 33.1104 cv
ef
210.554 38.3901 mo
210.554 36.7344 209.21 35.3901 207.554 35.3901 cv
205.898 35.3901 204.554 36.7344 204.554 38.3901 cv
204.554 40.0464 205.898 41.3901 207.554 41.3901 cv
209.21 41.3901 210.554 40.0464 210.554 38.3901 cv
ef
352.864 102.3 mo
354.114 102.3 li
@
354.567 108.179 mo
355.567 107.179 li
355.567 11.4287 li
505.067 11.4287 li
506.067 10.4287 li
354.567 10.4287 li
354.567 108.179 li
1 1 1 rgb
ef
354.567 108.179 mo
506.067 108.179 li
354.567 108.179 mo
354.567 10.4287 li
506.067 10.4287 li
506.067 108.179 li
354.567 108.179 li
cp
0 0 0 rgb
@
506.067 105.429 mo
506.067 108.179 li
502.317 106.679 mo
502.317 108.179 li
498.567 106.679 mo
498.567 108.179 li
494.817 106.679 mo
494.817 108.179 li
490.817 105.429 mo
490.817 108.179 li
487.067 106.679 mo
487.067 108.179 li
483.317 106.679 mo
483.317 108.179 li
479.567 106.679 mo
479.567 108.179 li
475.817 105.429 mo
475.817 108.179 li
472.067 106.679 mo
472.067 108.179 li
468.067 106.679 mo
468.067 108.179 li
464.317 106.679 mo
464.317 108.179 li
460.567 105.429 mo
460.567 108.179 li
456.817 106.679 mo
456.817 108.179 li
453.067 106.679 mo
453.067 108.179 li
449.317 106.679 mo
449.317 108.179 li
445.567 105.429 mo
445.567 108.179 li
441.567 106.679 mo
441.567 108.179 li
437.817 106.679 mo
437.817 108.179 li
434.067 106.679 mo
434.067 108.179 li
430.317 105.429 mo
430.317 108.179 li
426.567 106.679 mo
426.567 108.179 li
422.817 106.679 mo
422.817 108.179 li
419.067 106.679 mo
419.067 108.179 li
415.067 105.429 mo
415.067 108.179 li
411.317 106.679 mo
411.317 108.179 li
407.567 106.679 mo
407.567 108.179 li
403.817 106.679 mo
403.817 108.179 li
400.067 105.429 mo
400.067 108.179 li
396.317 106.679 mo
396.317 108.179 li
392.567 106.679 mo
392.567 108.179 li
388.567 106.679 mo
388.567 108.179 li
384.817 105.429 mo
384.817 108.179 li
381.067 106.679 mo
381.067 108.179 li
377.317 106.679 mo
377.317 108.179 li
373.567 106.679 mo
373.567 108.179 li
369.817 105.429 mo
369.817 108.179 li
365.817 106.679 mo
365.817 108.179 li
362.067 106.679 mo
362.067 108.179 li
358.317 106.679 mo
358.317 108.179 li
354.567 105.429 mo
354.567 108.179 li
@
354.567 108.179 mo
354.567 10.4287 li
@
359.067 10.4287 mo
354.567 10.4287 li
356.817 105.179 mo
354.567 105.179 li
359.067 102.179 mo
354.567 102.179 li
359.067 10.4287 mo
354.567 10.4287 li
356.817 13.4287 mo
354.567 13.4287 li
356.817 16.6787 mo
354.567 16.6787 li
356.817 19.6787 mo
354.567 19.6787 li
356.817 22.6787 mo
354.567 22.6787 li
359.067 25.6787 mo
354.567 25.6787 li
356.817 28.6787 mo
354.567 28.6787 li
356.817 31.9287 mo
354.567 31.9287 li
356.817 34.9287 mo
354.567 34.9287 li
356.817 37.9287 mo
354.567 37.9287 li
359.067 40.9287 mo
354.567 40.9287 li
356.817 44.1787 mo
354.567 44.1787 li
356.817 47.1787 mo
354.567 47.1787 li
356.817 50.1787 mo
354.567 50.1787 li
356.817 53.1787 mo
354.567 53.1787 li
359.067 56.1787 mo
354.567 56.1787 li
356.817 59.4287 mo
354.567 59.4287 li
356.817 62.4287 mo
354.567 62.4287 li
356.817 65.4287 mo
354.567 65.4287 li
356.817 68.4287 mo
354.567 68.4287 li
359.067 71.6787 mo
354.567 71.6787 li
356.817 74.6787 mo
354.567 74.6787 li
356.817 77.6787 mo
354.567 77.6787 li
356.817 80.6787 mo
354.567 80.6787 li
356.817 83.6787 mo
354.567 83.6787 li
359.067 86.9287 mo
354.567 86.9287 li
356.817 89.9287 mo
354.567 89.9287 li
356.817 92.9287 mo
354.567 92.9287 li
356.817 95.9287 mo
354.567 95.9287 li
356.817 99.1787 mo
354.567 99.1787 li
359.067 102.179 mo
354.567 102.179 li
@
505.388 102.099 mo
505.388 100.443 504.043 99.0986 502.388 99.0986 cv
500.731 99.0986 499.388 100.443 499.388 102.099 cv
499.388 103.755 500.731 105.099 502.388 105.099 cv
504.043 105.099 505.388 103.755 505.388 102.099 cv
1 0 0 rgb
ef
497.707 102.099 mo
497.707 100.443 496.363 99.0986 494.707 99.0986 cv
493.052 99.0986 491.707 100.443 491.707 102.099 cv
491.707 103.755 493.052 105.099 494.707 105.099 cv
496.363 105.099 497.707 103.755 497.707 102.099 cv
ef
490.027 101.859 mo
490.027 100.203 488.684 98.8589 487.027 98.8589 cv
485.371 98.8589 484.027 100.203 484.027 101.859 cv
484.027 103.515 485.371 104.859 487.027 104.859 cv
488.684 104.859 490.027 103.515 490.027 101.859 cv
ef
482.587 101.139 mo
482.587 99.4824 481.243 98.1387 479.587 98.1387 cv
477.932 98.1387 476.587 99.4824 476.587 101.139 cv
476.587 102.795 477.932 104.139 479.587 104.139 cv
481.243 104.139 482.587 102.795 482.587 101.139 cv
ef
475.147 100.179 mo
475.147 98.5225 473.804 97.1787 472.147 97.1787 cv
470.491 97.1787 469.147 98.5225 469.147 100.179 cv
469.147 101.834 470.491 103.179 472.147 103.179 cv
473.804 103.179 475.147 101.834 475.147 100.179 cv
ef
467.228 98.7388 mo
467.228 97.0825 465.884 95.7388 464.228 95.7388 cv
462.571 95.7388 461.228 97.0825 461.228 98.7388 cv
461.228 100.395 462.571 101.739 464.228 101.739 cv
465.884 101.739 467.228 100.395 467.228 98.7388 cv
ef
459.787 97.1787 mo
459.787 95.5225 458.443 94.1787 456.787 94.1787 cv
455.132 94.1787 453.787 95.5225 453.787 97.1787 cv
453.787 98.8345 455.132 100.179 456.787 100.179 cv
458.443 100.179 459.787 98.8345 459.787 97.1787 cv
ef
452.348 94.6587 mo
452.348 93.0029 451.003 91.6587 449.348 91.6587 cv
447.691 91.6587 446.348 93.0029 446.348 94.6587 cv
446.348 96.3145 447.691 97.6587 449.348 97.6587 cv
451.003 97.6587 452.348 96.3145 452.348 94.6587 cv
ef
444.667 91.5386 mo
444.667 89.8828 443.323 88.5386 441.667 88.5386 cv
440.012 88.5386 438.667 89.8828 438.667 91.5386 cv
438.667 93.1948 440.012 94.5386 441.667 94.5386 cv
443.323 94.5386 444.667 93.1948 444.667 91.5386 cv
ef
436.987 87.6987 mo
436.987 86.0425 435.644 84.6987 433.987 84.6987 cv
432.331 84.6987 430.987 86.0425 430.987 87.6987 cv
430.987 89.3545 432.331 90.6987 433.987 90.6987 cv
435.644 90.6987 436.987 89.3545 436.987 87.6987 cv
ef
429.548 82.1787 mo
429.548 80.5225 428.203 79.1787 426.548 79.1787 cv
424.892 79.1787 423.548 80.5225 423.548 82.1787 cv
423.548 83.8345 424.892 85.1787 426.548 85.1787 cv
428.203 85.1787 429.548 83.8345 429.548 82.1787 cv
ef
422.107 74.7388 mo
422.107 73.0825 420.764 71.7388 419.107 71.7388 cv
417.451 71.7388 416.107 73.0825 416.107 74.7388 cv
416.107 76.3945 417.451 77.7388 419.107 77.7388 cv
420.764 77.7388 422.107 76.3945 422.107 74.7388 cv
ef
414.428 68.7388 mo
414.428 67.0825 413.083 65.7388 411.428 65.7388 cv
409.771 65.7388 408.428 67.0825 408.428 68.7388 cv
408.428 70.3945 409.771 71.7388 411.428 71.7388 cv
413.083 71.7388 414.428 70.3945 414.428 68.7388 cv
ef
406.747 61.1787 mo
406.747 59.5225 405.403 58.1787 403.747 58.1787 cv
402.092 58.1787 400.747 59.5225 400.747 61.1787 cv
400.747 62.835 402.092 64.1787 403.747 64.1787 cv
405.403 64.1787 406.747 62.835 406.747 61.1787 cv
ef
399.308 53.3789 mo
399.308 51.7227 397.964 50.3789 396.308 50.3789 cv
394.651 50.3789 393.308 51.7227 393.308 53.3789 cv
393.308 55.0347 394.651 56.3789 396.308 56.3789 cv
397.964 56.3789 399.308 55.0347 399.308 53.3789 cv
ef
391.627 43.7788 mo
391.627 42.1226 390.283 40.7788 388.627 40.7788 cv
386.972 40.7788 385.627 42.1226 385.627 43.7788 cv
385.627 45.4346 386.972 46.7788 388.627 46.7788 cv
390.283 46.7788 391.627 45.4346 391.627 43.7788 cv
ef
383.947 35.3789 mo
383.947 33.7227 382.604 32.3789 380.947 32.3789 cv
379.291 32.3789 377.947 33.7227 377.947 35.3789 cv
377.947 37.0347 379.291 38.3789 380.947 38.3789 cv
382.604 38.3789 383.947 37.0347 383.947 35.3789 cv
ef
376.508 28.8984 mo
376.508 27.2427 375.163 25.8984 373.508 25.8984 cv
371.852 25.8984 370.508 27.2427 370.508 28.8984 cv
370.508 30.5547 371.852 31.8984 373.508 31.8984 cv
375.163 31.8984 376.508 30.5547 376.508 28.8984 cv
ef
368.827 33.2188 mo
368.827 31.5625 367.483 30.2188 365.827 30.2188 cv
364.171 30.2188 362.827 31.5625 362.827 33.2188 cv
362.827 34.8745 364.171 36.2188 365.827 36.2188 cv
367.483 36.2188 368.827 34.8745 368.827 33.2188 cv
ef
361.388 45.4585 mo
361.388 43.8027 360.043 42.4585 358.388 42.4585 cv
356.731 42.4585 355.388 43.8027 355.388 45.4585 cv
355.388 47.1147 356.731 48.4585 358.388 48.4585 cv
360.043 48.4585 361.388 47.1147 361.388 45.4585 cv
ef
504.067 101.929 mo
505.317 101.929 li
@
354.567 102.179 mo
506.067 102.179 li
0 0 0 rgb
@
502.317 99.9287 mo
500.067 99.9287 li
500.067 104.429 li
504.567 104.429 li
504.567 99.9287 li
502.317 99.9287 li
cp
0 0 1 rgb
ef
494.817 99.9287 mo
492.567 99.9287 li
492.567 104.429 li
497.067 104.429 li
497.067 99.9287 li
494.817 99.9287 li
cp
ef
487.067 99.9287 mo
484.817 99.9287 li
484.817 104.429 li
489.317 104.429 li
489.317 99.9287 li
487.067 99.9287 li
cp
ef
479.567 100.429 mo
477.317 100.429 li
477.317 104.929 li
481.817 104.929 li
481.817 100.429 li
479.567 100.429 li
cp
ef
472.067 99.9287 mo
469.817 99.9287 li
469.817 104.429 li
474.317 104.429 li
474.317 99.9287 li
472.067 99.9287 li
cp
ef
464.317 99.6787 mo
462.067 99.6787 li
462.067 104.179 li
466.567 104.179 li
466.567 99.6787 li
464.317 99.6787 li
cp
ef
456.817 99.6787 mo
454.567 99.6787 li
454.567 104.179 li
459.067 104.179 li
459.067 99.6787 li
456.817 99.6787 li
cp
ef
449.317 99.4287 mo
447.067 99.4287 li
447.067 103.929 li
451.567 103.929 li
451.567 99.4287 li
449.317 99.4287 li
cp
ef
441.567 100.179 mo
439.317 100.179 li
439.317 104.679 li
443.817 104.679 li
443.817 100.179 li
441.567 100.179 li
cp
ef
434.067 100.679 mo
431.817 100.679 li
431.817 105.179 li
436.317 105.179 li
436.317 100.679 li
434.067 100.679 li
cp
ef
426.567 100.179 mo
424.317 100.179 li
424.317 104.679 li
428.817 104.679 li
428.817 100.179 li
426.567 100.179 li
cp
ef
419.067 100.179 mo
416.817 100.179 li
416.817 104.679 li
421.317 104.679 li
421.317 100.179 li
419.067 100.179 li
cp
ef
411.317 100.929 mo
409.067 100.929 li
409.067 105.429 li
413.567 105.429 li
413.567 100.929 li
411.317 100.929 li
cp
ef
403.817 99.6787 mo
401.567 99.6787 li
401.567 104.179 li
406.067 104.179 li
406.067 99.6787 li
403.817 99.6787 li
cp
ef
396.317 101.179 mo
394.067 101.179 li
394.067 105.679 li
398.567 105.679 li
398.567 101.179 li
396.317 101.179 li
cp
ef
388.567 100.179 mo
386.317 100.179 li
386.317 104.679 li
390.817 104.679 li
390.817 100.179 li
388.567 100.179 li
cp
ef
381.067 100.179 mo
378.817 100.179 li
378.817 104.679 li
383.317 104.679 li
383.317 100.179 li
381.067 100.179 li
cp
ef
373.567 101.679 mo
371.317 101.679 li
371.317 106.179 li
375.817 106.179 li
375.817 101.679 li
373.567 101.679 li
cp
ef
365.817 99.9287 mo
363.567 99.9287 li
363.567 104.429 li
368.067 104.429 li
368.067 99.9287 li
365.817 99.9287 li
cp
ef
358.317 101.929 mo
356.067 101.929 li
356.067 106.429 li
360.567 106.429 li
360.567 101.929 li
358.317 101.929 li
cp
ef
361.388 45.9385 mo
361.388 44.2827 360.043 42.9385 358.388 42.9385 cv
356.731 42.9385 355.388 44.2827 355.388 45.9385 cv
355.388 47.5947 356.731 48.9385 358.388 48.9385 cv
360.043 48.9385 361.388 47.5947 361.388 45.9385 cv
368.827 47.3789 mo
368.827 45.7227 367.483 44.3789 365.827 44.3789 cv
364.171 44.3789 362.827 45.7227 362.827 47.3789 cv
362.827 49.0347 364.171 50.3789 365.827 50.3789 cv
367.483 50.3789 368.827 49.0347 368.827 47.3789 cv
376.508 51.6987 mo
376.508 50.043 375.163 48.6987 373.508 48.6987 cv
371.852 48.6987 370.508 50.043 370.508 51.6987 cv
370.508 53.3545 371.852 54.6987 373.508 54.6987 cv
375.163 54.6987 376.508 53.3545 376.508 51.6987 cv
383.947 52.4189 mo
383.947 50.7627 382.604 49.4189 380.947 49.4189 cv
379.291 49.4189 377.947 50.7627 377.947 52.4189 cv
377.947 54.0747 379.291 55.4189 380.947 55.4189 cv
382.604 55.4189 383.947 54.0747 383.947 52.4189 cv
391.627 55.7788 mo
391.627 54.1226 390.283 52.7788 388.627 52.7788 cv
386.972 52.7788 385.627 54.1226 385.627 55.7788 cv
385.627 57.4346 386.972 58.7788 388.627 58.7788 cv
390.283 58.7788 391.627 57.4346 391.627 55.7788 cv
399.308 59.6187 mo
399.308 57.9629 397.964 56.6187 396.308 56.6187 cv
394.651 56.6187 393.308 57.9629 393.308 59.6187 cv
393.308 61.2744 394.651 62.6187 396.308 62.6187 cv
397.964 62.6187 399.308 61.2744 399.308 59.6187 cv
406.747 62.0186 mo
406.747 60.3628 405.403 59.0186 403.747 59.0186 cv
402.092 59.0186 400.747 60.3628 400.747 62.0186 cv
400.747 63.6748 402.092 65.0186 403.747 65.0186 cv
405.403 65.0186 406.747 63.6748 406.747 62.0186 cv
414.428 66.5786 mo
414.428 64.9229 413.083 63.5786 411.428 63.5786 cv
409.771 63.5786 408.428 64.9229 408.428 66.5786 cv
408.428 68.2349 409.771 69.5786 411.428 69.5786 cv
413.083 69.5786 414.428 68.2349 414.428 66.5786 cv
422.107 70.4189 mo
422.107 68.7627 420.764 67.4189 419.107 67.4189 cv
417.451 67.4189 416.107 68.7627 416.107 70.4189 cv
416.107 72.0747 417.451 73.4189 419.107 73.4189 cv
420.764 73.4189 422.107 72.0747 422.107 70.4189 cv
429.548 74.2588 mo
429.548 72.6025 428.203 71.2588 426.548 71.2588 cv
424.892 71.2588 423.548 72.6025 423.548 74.2588 cv
423.548 75.9146 424.892 77.2588 426.548 77.2588 cv
428.203 77.2588 429.548 75.9146 429.548 74.2588 cv
436.987 77.8589 mo
436.987 76.2026 435.644 74.8589 433.987 74.8589 cv
432.331 74.8589 430.987 76.2026 430.987 77.8589 cv
430.987 79.5146 432.331 80.8589 433.987 80.8589 cv
435.644 80.8589 436.987 79.5146 436.987 77.8589 cv
444.667 80.4985 mo
444.667 78.8428 443.323 77.4985 441.667 77.4985 cv
440.012 77.4985 438.667 78.8428 438.667 80.4985 cv
438.667 82.1548 440.012 83.4985 441.667 83.4985 cv
443.323 83.4985 444.667 82.1548 444.667 80.4985 cv
452.348 84.5786 mo
452.348 82.9229 451.003 81.5786 449.348 81.5786 cv
447.691 81.5786 446.348 82.9229 446.348 84.5786 cv
446.348 86.2349 447.691 87.5786 449.348 87.5786 cv
451.003 87.5786 452.348 86.2349 452.348 84.5786 cv
459.787 88.1787 mo
459.787 86.5225 458.443 85.1787 456.787 85.1787 cv
455.132 85.1787 453.787 86.5225 453.787 88.1787 cv
453.787 89.8345 455.132 91.1787 456.787 91.1787 cv
458.443 91.1787 459.787 89.8345 459.787 88.1787 cv
467.228 90.8188 mo
467.228 89.1626 465.884 87.8188 464.228 87.8188 cv
462.571 87.8188 461.228 89.1626 461.228 90.8188 cv
461.228 92.4746 462.571 93.8188 464.228 93.8188 cv
465.884 93.8188 467.228 92.4746 467.228 90.8188 cv
475.147 94.6587 mo
475.147 93.0029 473.804 91.6587 472.147 91.6587 cv
470.491 91.6587 469.147 93.0029 469.147 94.6587 cv
469.147 96.3145 470.491 97.6587 472.147 97.6587 cv
473.804 97.6587 475.147 96.3145 475.147 94.6587 cv
482.587 97.5386 mo
482.587 95.8828 481.243 94.5386 479.587 94.5386 cv
477.932 94.5386 476.587 95.8828 476.587 97.5386 cv
476.587 99.1948 477.932 100.539 479.587 100.539 cv
481.243 100.539 482.587 99.1948 482.587 97.5386 cv
490.027 99.9385 mo
490.027 98.2827 488.684 96.9385 487.027 96.9385 cv
485.371 96.9385 484.027 98.2827 484.027 99.9385 cv
484.027 101.595 485.371 102.938 487.027 102.938 cv
488.684 102.938 490.027 101.595 490.027 99.9385 cv
497.707 101.619 mo
497.707 99.9629 496.363 98.6187 494.707 98.6187 cv
493.052 98.6187 491.707 99.9629 491.707 101.619 cv
491.707 103.275 493.052 104.619 494.707 104.619 cv
496.363 104.619 497.707 103.275 497.707 101.619 cv
505.388 102.099 mo
505.388 100.443 504.043 99.0986 502.388 99.0986 cv
500.731 99.0986 499.388 100.443 499.388 102.099 cv
499.388 103.755 500.731 105.099 502.388 105.099 cv
504.043 105.099 505.388 103.755 505.388 102.099 cv
0 .4 0 rgb
@
505.388 102.099 mo
505.388 100.443 504.043 99.0986 502.388 99.0986 cv
500.731 99.0986 499.388 100.443 499.388 102.099 cv
499.388 103.755 500.731 105.099 502.388 105.099 cv
504.043 105.099 505.388 103.755 505.388 102.099 cv
1 0 0 rgb
ef
497.707 102.099 mo
497.707 100.443 496.363 99.0986 494.707 99.0986 cv
493.052 99.0986 491.707 100.443 491.707 102.099 cv
491.707 103.755 493.052 105.099 494.707 105.099 cv
496.363 105.099 497.707 103.755 497.707 102.099 cv
ef
490.027 101.859 mo
490.027 100.203 488.684 98.8589 487.027 98.8589 cv
485.371 98.8589 484.027 100.203 484.027 101.859 cv
484.027 103.515 485.371 104.859 487.027 104.859 cv
488.684 104.859 490.027 103.515 490.027 101.859 cv
ef
482.587 101.139 mo
482.587 99.4824 481.243 98.1387 479.587 98.1387 cv
477.932 98.1387 476.587 99.4824 476.587 101.139 cv
476.587 102.795 477.932 104.139 479.587 104.139 cv
481.243 104.139 482.587 102.795 482.587 101.139 cv
ef
475.147 100.179 mo
475.147 98.5225 473.804 97.1787 472.147 97.1787 cv
470.491 97.1787 469.147 98.5225 469.147 100.179 cv
469.147 101.834 470.491 103.179 472.147 103.179 cv
473.804 103.179 475.147 101.834 475.147 100.179 cv
ef
467.228 98.7388 mo
467.228 97.0825 465.884 95.7388 464.228 95.7388 cv
462.571 95.7388 461.228 97.0825 461.228 98.7388 cv
461.228 100.395 462.571 101.739 464.228 101.739 cv
465.884 101.739 467.228 100.395 467.228 98.7388 cv
ef
459.787 97.1787 mo
459.787 95.5225 458.443 94.1787 456.787 94.1787 cv
455.132 94.1787 453.787 95.5225 453.787 97.1787 cv
453.787 98.8345 455.132 100.179 456.787 100.179 cv
458.443 100.179 459.787 98.8345 459.787 97.1787 cv
ef
452.348 94.6587 mo
452.348 93.0029 451.003 91.6587 449.348 91.6587 cv
447.691 91.6587 446.348 93.0029 446.348 94.6587 cv
446.348 96.3145 447.691 97.6587 449.348 97.6587 cv
451.003 97.6587 452.348 96.3145 452.348 94.6587 cv
ef
444.667 91.5386 mo
444.667 89.8828 443.323 88.5386 441.667 88.5386 cv
440.012 88.5386 438.667 89.8828 438.667 91.5386 cv
438.667 93.1948 440.012 94.5386 441.667 94.5386 cv
443.323 94.5386 444.667 93.1948 444.667 91.5386 cv
ef
436.987 87.6987 mo
436.987 86.0425 435.644 84.6987 433.987 84.6987 cv
432.331 84.6987 430.987 86.0425 430.987 87.6987 cv
430.987 89.3545 432.331 90.6987 433.987 90.6987 cv
435.644 90.6987 436.987 89.3545 436.987 87.6987 cv
ef
429.548 82.1787 mo
429.548 80.5225 428.203 79.1787 426.548 79.1787 cv
424.892 79.1787 423.548 80.5225 423.548 82.1787 cv
423.548 83.8345 424.892 85.1787 426.548 85.1787 cv
428.203 85.1787 429.548 83.8345 429.548 82.1787 cv
ef
422.107 74.7388 mo
422.107 73.0825 420.764 71.7388 419.107 71.7388 cv
417.451 71.7388 416.107 73.0825 416.107 74.7388 cv
416.107 76.3945 417.451 77.7388 419.107 77.7388 cv
420.764 77.7388 422.107 76.3945 422.107 74.7388 cv
ef
414.428 68.7388 mo
414.428 67.0825 413.083 65.7388 411.428 65.7388 cv
409.771 65.7388 408.428 67.0825 408.428 68.7388 cv
408.428 70.3945 409.771 71.7388 411.428 71.7388 cv
413.083 71.7388 414.428 70.3945 414.428 68.7388 cv
ef
406.747 61.1787 mo
406.747 59.5225 405.403 58.1787 403.747 58.1787 cv
402.092 58.1787 400.747 59.5225 400.747 61.1787 cv
400.747 62.835 402.092 64.1787 403.747 64.1787 cv
405.403 64.1787 406.747 62.835 406.747 61.1787 cv
ef
399.308 53.3789 mo
399.308 51.7227 397.964 50.3789 396.308 50.3789 cv
394.651 50.3789 393.308 51.7227 393.308 53.3789 cv
393.308 55.0347 394.651 56.3789 396.308 56.3789 cv
397.964 56.3789 399.308 55.0347 399.308 53.3789 cv
ef
391.627 43.7788 mo
391.627 42.1226 390.283 40.7788 388.627 40.7788 cv
386.972 40.7788 385.627 42.1226 385.627 43.7788 cv
385.627 45.4346 386.972 46.7788 388.627 46.7788 cv
390.283 46.7788 391.627 45.4346 391.627 43.7788 cv
ef
383.947 35.3789 mo
383.947 33.7227 382.604 32.3789 380.947 32.3789 cv
379.291 32.3789 377.947 33.7227 377.947 35.3789 cv
377.947 37.0347 379.291 38.3789 380.947 38.3789 cv
382.604 38.3789 383.947 37.0347 383.947 35.3789 cv
ef
376.508 28.8984 mo
376.508 27.2427 375.163 25.8984 373.508 25.8984 cv
371.852 25.8984 370.508 27.2427 370.508 28.8984 cv
370.508 30.5547 371.852 31.8984 373.508 31.8984 cv
375.163 31.8984 376.508 30.5547 376.508 28.8984 cv
ef
368.827 33.2188 mo
368.827 31.5625 367.483 30.2188 365.827 30.2188 cv
364.171 30.2188 362.827 31.5625 362.827 33.2188 cv
362.827 34.8745 364.171 36.2188 365.827 36.2188 cv
367.483 36.2188 368.827 34.8745 368.827 33.2188 cv
ef
361.388 45.4585 mo
361.388 43.8027 360.043 42.4585 358.388 42.4585 cv
356.731 42.4585 355.388 43.8027 355.388 45.4585 cv
355.388 47.1147 356.731 48.4585 358.388 48.4585 cv
360.043 48.4585 361.388 47.1147 361.388 45.4585 cv
ef
504.067 101.929 mo
505.317 101.929 li
@
53.6377 206.079 mo
54.6377 205.079 li
54.6377 109.579 li
203.638 109.579 li
204.638 108.579 li
53.6377 108.579 li
53.6377 206.079 li
1 1 1 rgb
ef
53.6377 206.079 mo
204.638 206.079 li
53.6377 206.079 mo
53.6377 108.579 li
204.638 108.579 li
204.638 206.079 li
53.6377 206.079 li
cp
0 0 0 rgb
@
204.638 203.079 mo
204.638 206.079 li
200.888 204.579 mo
200.888 206.079 li
196.888 204.579 mo
196.888 206.079 li
193.138 204.579 mo
193.138 206.079 li
189.388 203.079 mo
189.388 206.079 li
185.638 204.579 mo
185.638 206.079 li
181.888 204.579 mo
181.888 206.079 li
178.138 204.579 mo
178.138 206.079 li
174.388 203.079 mo
174.388 206.079 li
170.638 204.579 mo
170.638 206.079 li
166.888 204.579 mo
166.888 206.079 li
163.138 204.579 mo
163.138 206.079 li
159.138 203.079 mo
159.138 206.079 li
155.388 204.579 mo
155.388 206.079 li
151.638 204.579 mo
151.638 206.079 li
147.888 204.579 mo
147.888 206.079 li
144.138 203.079 mo
144.138 206.079 li
140.388 204.579 mo
140.388 206.079 li
136.638 204.579 mo
136.638 206.079 li
132.888 204.579 mo
132.888 206.079 li
129.138 203.079 mo
129.138 206.079 li
125.138 204.579 mo
125.138 206.079 li
121.388 204.579 mo
121.388 206.079 li
117.638 204.579 mo
117.638 206.079 li
113.888 203.079 mo
113.888 206.079 li
110.138 204.579 mo
110.138 206.079 li
106.388 204.579 mo
106.388 206.079 li
102.638 204.579 mo
102.638 206.079 li
98.8877 203.079 mo
98.8877 206.079 li
95.1377 204.579 mo
95.1377 206.079 li
91.3877 204.579 mo
91.3877 206.079 li
87.3877 204.579 mo
87.3877 206.079 li
83.6377 203.079 mo
83.6377 206.079 li
79.8877 204.579 mo
79.8877 206.079 li
76.1377 204.579 mo
76.1377 206.079 li
72.3877 204.579 mo
72.3877 206.079 li
68.6377 203.079 mo
68.6377 206.079 li
64.8877 204.579 mo
64.8877 206.079 li
61.1377 204.579 mo
61.1377 206.079 li
57.3877 204.579 mo
57.3877 206.079 li
53.6377 203.079 mo
53.6377 206.079 li
@
53.6377 206.079 mo
53.6377 108.579 li
@
58.1377 108.579 mo
53.6377 108.579 li
55.8877 203.079 mo
53.6377 203.079 li
58.1377 199.829 mo
53.6377 199.829 li
58.1377 108.579 mo
53.6377 108.579 li
55.8877 111.579 mo
53.6377 111.579 li
55.8877 114.579 mo
53.6377 114.579 li
55.8877 117.579 mo
53.6377 117.579 li
55.8877 120.829 mo
53.6377 120.829 li
58.1377 123.829 mo
53.6377 123.829 li
55.8877 126.829 mo
53.6377 126.829 li
55.8877 129.829 mo
53.6377 129.829 li
55.8877 132.829 mo
53.6377 132.829 li
55.8877 136.079 mo
53.6377 136.079 li
58.1377 139.079 mo
53.6377 139.079 li
55.8877 142.079 mo
53.6377 142.079 li
55.8877 145.079 mo
53.6377 145.079 li
55.8877 148.079 mo
53.6377 148.079 li
55.8877 151.079 mo
53.6377 151.079 li
58.1377 154.329 mo
53.6377 154.329 li
55.8877 157.329 mo
53.6377 157.329 li
55.8877 160.329 mo
53.6377 160.329 li
55.8877 163.329 mo
53.6377 163.329 li
55.8877 166.329 mo
53.6377 166.329 li
58.1377 169.579 mo
53.6377 169.579 li
55.8877 172.579 mo
53.6377 172.579 li
55.8877 175.579 mo
53.6377 175.579 li
55.8877 178.579 mo
53.6377 178.579 li
55.8877 181.579 mo
53.6377 181.579 li
58.1377 184.829 mo
53.6377 184.829 li
55.8877 187.829 mo
53.6377 187.829 li
55.8877 190.829 mo
53.6377 190.829 li
55.8877 193.829 mo
53.6377 193.829 li
55.8877 196.829 mo
53.6377 196.829 li
58.1377 199.829 mo
53.6377 199.829 li
@
203.958 199.919 mo
203.958 198.263 202.614 196.919 200.958 196.919 cv
199.302 196.919 197.958 198.263 197.958 199.919 cv
197.958 201.575 199.302 202.919 200.958 202.919 cv
202.614 202.919 203.958 201.575 203.958 199.919 cv
1 0 0 rgb
ef
196.038 199.919 mo
196.038 198.263 194.694 196.919 193.038 196.919 cv
191.382 196.919 190.038 198.263 190.038 199.919 cv
190.038 201.575 191.382 202.919 193.038 202.919 cv
194.694 202.919 196.038 201.575 196.038 199.919 cv
ef
188.598 199.439 mo
188.598 197.783 187.254 196.439 185.598 196.439 cv
183.942 196.439 182.598 197.783 182.598 199.439 cv
182.598 201.095 183.942 202.439 185.598 202.439 cv
187.254 202.439 188.598 201.095 188.598 199.439 cv
ef
181.158 198.719 mo
181.158 197.063 179.813 195.719 178.158 195.719 cv
176.501 195.719 175.158 197.063 175.158 198.719 cv
175.158 200.375 176.501 201.719 178.158 201.719 cv
179.813 201.719 181.158 200.375 181.158 198.719 cv
ef
173.718 197.52 mo
173.718 195.863 172.374 194.52 170.718 194.52 cv
169.062 194.52 167.718 195.863 167.718 197.52 cv
167.718 199.175 169.062 200.52 170.718 200.52 cv
172.374 200.52 173.718 199.175 173.718 197.52 cv
ef
166.038 196.319 mo
166.038 194.663 164.694 193.319 163.038 193.319 cv
161.382 193.319 160.038 194.663 160.038 196.319 cv
160.038 197.976 161.382 199.319 163.038 199.319 cv
164.694 199.319 166.038 197.976 166.038 196.319 cv
ef
158.358 193.919 mo
158.358 192.263 157.014 190.919 155.358 190.919 cv
153.702 190.919 152.358 192.263 152.358 193.919 cv
152.358 195.575 153.702 196.919 155.358 196.919 cv
157.014 196.919 158.358 195.575 158.358 193.919 cv
ef
150.917 191.52 mo
150.917 189.863 149.574 188.52 147.917 188.52 cv
146.262 188.52 144.917 189.863 144.917 191.52 cv
144.917 193.175 146.262 194.52 147.917 194.52 cv
149.574 194.52 150.917 193.175 150.917 191.52 cv
ef
143.478 188.159 mo
143.478 186.503 142.134 185.159 140.478 185.159 cv
138.822 185.159 137.478 186.503 137.478 188.159 cv
137.478 189.815 138.822 191.159 140.478 191.159 cv
142.134 191.159 143.478 189.815 143.478 188.159 cv
ef
135.798 182.639 mo
135.798 180.983 134.454 179.639 132.798 179.639 cv
131.142 179.639 129.798 180.983 129.798 182.639 cv
129.798 184.295 131.142 185.639 132.798 185.639 cv
134.454 185.639 135.798 184.295 135.798 182.639 cv
ef
128.118 177.839 mo
128.118 176.183 126.774 174.839 125.118 174.839 cv
123.462 174.839 122.118 176.183 122.118 177.839 cv
122.118 179.495 123.462 180.839 125.118 180.839 cv
126.774 180.839 128.118 179.495 128.118 177.839 cv
ef
120.678 171.359 mo
120.678 169.703 119.333 168.359 117.678 168.359 cv
116.021 168.359 114.678 169.703 114.678 171.359 cv
114.678 173.015 116.021 174.359 117.678 174.359 cv
119.333 174.359 120.678 173.015 120.678 171.359 cv
ef
113.238 163.919 mo
113.238 162.263 111.894 160.919 110.238 160.919 cv
108.582 160.919 107.238 162.263 107.238 163.919 cv
107.238 165.575 108.582 166.919 110.238 166.919 cv
111.894 166.919 113.238 165.575 113.238 163.919 cv
ef
105.558 155.279 mo
105.558 153.623 104.214 152.279 102.558 152.279 cv
100.902 152.279 99.5576 153.623 99.5576 155.279 cv
99.5576 156.935 100.902 158.279 102.558 158.279 cv
104.214 158.279 105.558 156.935 105.558 155.279 cv
ef
98.1177 149.279 mo
98.1177 147.623 96.7739 146.279 95.1177 146.279 cv
93.4619 146.279 92.1177 147.623 92.1177 149.279 cv
92.1177 150.935 93.4619 152.279 95.1177 152.279 cv
96.7739 152.279 98.1177 150.935 98.1177 149.279 cv
ef
90.4375 139.679 mo
90.4375 138.023 89.0938 136.679 87.4375 136.679 cv
85.7817 136.679 84.4375 138.023 84.4375 139.679 cv
84.4375 141.335 85.7817 142.679 87.4375 142.679 cv
89.0938 142.679 90.4375 141.335 90.4375 139.679 cv
ef
82.9976 131.999 mo
82.9976 130.343 81.6538 128.999 79.9976 128.999 cv
78.3418 128.999 76.9976 130.343 76.9976 131.999 cv
76.9976 133.655 78.3418 134.999 79.9976 134.999 cv
81.6538 134.999 82.9976 133.655 82.9976 131.999 cv
ef
75.3179 125.279 mo
75.3179 123.623 73.9736 122.279 72.3179 122.279 cv
70.6616 122.279 69.3179 123.623 69.3179 125.279 cv
69.3179 126.935 70.6616 128.279 72.3179 128.279 cv
73.9736 128.279 75.3179 126.935 75.3179 125.279 cv
ef
67.8779 134.399 mo
67.8779 132.743 66.5337 131.399 64.8779 131.399 cv
63.2217 131.399 61.8779 132.743 61.8779 134.399 cv
61.8779 136.055 63.2217 137.399 64.8779 137.399 cv
66.5337 137.399 67.8779 136.055 67.8779 134.399 cv
ef
60.4375 148.079 mo
60.4375 146.423 59.0938 145.079 57.4375 145.079 cv
55.7817 145.079 54.4375 146.423 54.4375 148.079 cv
54.4375 149.735 55.7817 151.079 57.4375 151.079 cv
59.0938 151.079 60.4375 149.735 60.4375 148.079 cv
ef
202.388 199.829 mo
203.888 199.829 li
@
53.6377 199.829 mo
204.638 199.829 li
0 0 0 rgb
@
200.888 197.579 mo
198.638 197.579 li
198.638 202.079 li
203.138 202.079 li
203.138 197.579 li
200.888 197.579 li
cp
0 0 1 rgb
ef
193.138 197.579 mo
190.888 197.579 li
190.888 202.079 li
195.388 202.079 li
195.388 197.579 li
193.138 197.579 li
cp
ef
185.638 197.579 mo
183.388 197.579 li
183.388 202.079 li
187.888 202.079 li
187.888 197.579 li
185.638 197.579 li
cp
ef
178.138 197.829 mo
175.888 197.829 li
175.888 202.329 li
180.388 202.329 li
180.388 197.829 li
178.138 197.829 li
cp
ef
170.638 198.079 mo
168.388 198.079 li
168.388 202.579 li
172.888 202.579 li
172.888 198.079 li
170.638 198.079 li
cp
ef
163.138 197.579 mo
160.888 197.579 li
160.888 202.079 li
165.388 202.079 li
165.388 197.579 li
163.138 197.579 li
cp
ef
155.388 197.829 mo
153.138 197.829 li
153.138 202.329 li
157.638 202.329 li
157.638 197.829 li
155.388 197.829 li
cp
ef
147.888 197.329 mo
145.638 197.329 li
145.638 201.829 li
150.138 201.829 li
150.138 197.329 li
147.888 197.329 li
cp
ef
140.388 197.829 mo
138.138 197.829 li
138.138 202.329 li
142.638 202.329 li
142.638 197.829 li
140.388 197.829 li
cp
ef
132.888 197.579 mo
130.638 197.579 li
130.638 202.079 li
135.138 202.079 li
135.138 197.579 li
132.888 197.579 li
cp
ef
125.138 198.079 mo
122.888 198.079 li
122.888 202.579 li
127.388 202.579 li
127.388 198.079 li
125.138 198.079 li
cp
ef
117.638 197.829 mo
115.388 197.829 li
115.388 202.329 li
119.888 202.329 li
119.888 197.829 li
117.638 197.829 li
cp
ef
110.138 197.829 mo
107.888 197.829 li
107.888 202.329 li
112.388 202.329 li
112.388 197.829 li
110.138 197.829 li
cp
ef
102.638 198.079 mo
100.388 198.079 li
100.388 202.579 li
104.888 202.579 li
104.888 198.079 li
102.638 198.079 li
cp
ef
95.1377 197.079 mo
92.8877 197.079 li
92.8877 201.579 li
97.3877 201.579 li
97.3877 197.079 li
95.1377 197.079 li
cp
ef
87.3877 199.579 mo
85.1377 199.579 li
85.1377 204.079 li
89.6377 204.079 li
89.6377 199.579 li
87.3877 199.579 li
cp
ef
79.8877 197.329 mo
77.6377 197.329 li
77.6377 201.829 li
82.1377 201.829 li
82.1377 197.329 li
79.8877 197.329 li
cp
ef
72.3877 197.829 mo
70.1377 197.829 li
70.1377 202.329 li
74.6377 202.329 li
74.6377 197.829 li
72.3877 197.829 li
cp
ef
64.8877 197.329 mo
62.6377 197.329 li
62.6377 201.829 li
67.1377 201.829 li
67.1377 197.329 li
64.8877 197.329 li
cp
ef
57.3877 197.079 mo
55.1377 197.079 li
55.1377 201.579 li
59.6377 201.579 li
59.6377 197.079 li
57.3877 197.079 li
cp
ef
60.4375 141.119 mo
60.4375 139.463 59.0938 138.119 57.4375 138.119 cv
55.7817 138.119 54.4375 139.463 54.4375 141.119 cv
54.4375 142.775 55.7817 144.119 57.4375 144.119 cv
59.0938 144.119 60.4375 142.775 60.4375 141.119 cv
67.8779 144.479 mo
67.8779 142.823 66.5337 141.479 64.8779 141.479 cv
63.2217 141.479 61.8779 142.823 61.8779 144.479 cv
61.8779 146.135 63.2217 147.479 64.8779 147.479 cv
66.5337 147.479 67.8779 146.135 67.8779 144.479 cv
75.3179 146.639 mo
75.3179 144.983 73.9736 143.639 72.3179 143.639 cv
70.6616 143.639 69.3179 144.983 69.3179 146.639 cv
69.3179 148.295 70.6616 149.639 72.3179 149.639 cv
73.9736 149.639 75.3179 148.295 75.3179 146.639 cv
82.9976 149.519 mo
82.9976 147.863 81.6538 146.519 79.9976 146.519 cv
78.3418 146.519 76.9976 147.863 76.9976 149.519 cv
76.9976 151.175 78.3418 152.519 79.9976 152.519 cv
81.6538 152.519 82.9976 151.175 82.9976 149.519 cv
90.4375 152.639 mo
90.4375 150.983 89.0938 149.639 87.4375 149.639 cv
85.7817 149.639 84.4375 150.983 84.4375 152.639 cv
84.4375 154.295 85.7817 155.639 87.4375 155.639 cv
89.0938 155.639 90.4375 154.295 90.4375 152.639 cv
98.1177 155.999 mo
98.1177 154.343 96.7739 152.999 95.1177 152.999 cv
93.4619 152.999 92.1177 154.343 92.1177 155.999 cv
92.1177 157.655 93.4619 158.999 95.1177 158.999 cv
96.7739 158.999 98.1177 157.655 98.1177 155.999 cv
105.558 159.599 mo
105.558 157.943 104.214 156.599 102.558 156.599 cv
100.902 156.599 99.5576 157.943 99.5576 159.599 cv
99.5576 161.255 100.902 162.599 102.558 162.599 cv
104.214 162.599 105.558 161.255 105.558 159.599 cv
113.238 163.679 mo
113.238 162.023 111.894 160.679 110.238 160.679 cv
108.582 160.679 107.238 162.023 107.238 163.679 cv
107.238 165.335 108.582 166.679 110.238 166.679 cv
111.894 166.679 113.238 165.335 113.238 163.679 cv
120.678 167.039 mo
120.678 165.383 119.333 164.039 117.678 164.039 cv
116.021 164.039 114.678 165.383 114.678 167.039 cv
114.678 168.695 116.021 170.039 117.678 170.039 cv
119.333 170.039 120.678 168.695 120.678 167.039 cv
128.118 171.119 mo
128.118 169.463 126.774 168.119 125.118 168.119 cv
123.462 168.119 122.118 169.463 122.118 171.119 cv
122.118 172.775 123.462 174.119 125.118 174.119 cv
126.774 174.119 128.118 172.775 128.118 171.119 cv
135.798 174.479 mo
135.798 172.823 134.454 171.479 132.798 171.479 cv
131.142 171.479 129.798 172.823 129.798 174.479 cv
129.798 176.135 131.142 177.479 132.798 177.479 cv
134.454 177.479 135.798 176.135 135.798 174.479 cv
143.478 178.56 mo
143.478 176.903 142.134 175.56 140.478 175.56 cv
138.822 175.56 137.478 176.903 137.478 178.56 cv
137.478 180.215 138.822 181.56 140.478 181.56 cv
142.134 181.56 143.478 180.215 143.478 178.56 cv
150.917 181.919 mo
150.917 180.263 149.574 178.919 147.917 178.919 cv
146.262 178.919 144.917 180.263 144.917 181.919 cv
144.917 183.575 146.262 184.919 147.917 184.919 cv
149.574 184.919 150.917 183.575 150.917 181.919 cv
158.358 185.039 mo
158.358 183.383 157.014 182.039 155.358 182.039 cv
153.702 182.039 152.358 183.383 152.358 185.039 cv
152.358 186.695 153.702 188.039 155.358 188.039 cv
157.014 188.039 158.358 186.695 158.358 185.039 cv
166.038 188.639 mo
166.038 186.983 164.694 185.639 163.038 185.639 cv
161.382 185.639 160.038 186.983 160.038 188.639 cv
160.038 190.295 161.382 191.639 163.038 191.639 cv
164.694 191.639 166.038 190.295 166.038 188.639 cv
173.718 191.999 mo
173.718 190.343 172.374 188.999 170.718 188.999 cv
169.062 188.999 167.718 190.343 167.718 191.999 cv
167.718 193.655 169.062 194.999 170.718 194.999 cv
172.374 194.999 173.718 193.655 173.718 191.999 cv
181.158 195.119 mo
181.158 193.463 179.813 192.119 178.158 192.119 cv
176.501 192.119 175.158 193.463 175.158 195.119 cv
175.158 196.775 176.501 198.119 178.158 198.119 cv
179.813 198.119 181.158 196.775 181.158 195.119 cv
188.598 197.52 mo
188.598 195.863 187.254 194.52 185.598 194.52 cv
183.942 194.52 182.598 195.863 182.598 197.52 cv
182.598 199.175 183.942 200.52 185.598 200.52 cv
187.254 200.52 188.598 199.175 188.598 197.52 cv
196.038 199.439 mo
196.038 197.783 194.694 196.439 193.038 196.439 cv
191.382 196.439 190.038 197.783 190.038 199.439 cv
190.038 201.095 191.382 202.439 193.038 202.439 cv
194.694 202.439 196.038 201.095 196.038 199.439 cv
203.958 199.919 mo
203.958 198.263 202.614 196.919 200.958 196.919 cv
199.302 196.919 197.958 198.263 197.958 199.919 cv
197.958 201.575 199.302 202.919 200.958 202.919 cv
202.614 202.919 203.958 201.575 203.958 199.919 cv
0 .4 0 rgb
@
203.958 199.919 mo
203.958 198.263 202.614 196.919 200.958 196.919 cv
199.302 196.919 197.958 198.263 197.958 199.919 cv
197.958 201.575 199.302 202.919 200.958 202.919 cv
202.614 202.919 203.958 201.575 203.958 199.919 cv
1 0 0 rgb
ef
196.038 199.919 mo
196.038 198.263 194.694 196.919 193.038 196.919 cv
191.382 196.919 190.038 198.263 190.038 199.919 cv
190.038 201.575 191.382 202.919 193.038 202.919 cv
194.694 202.919 196.038 201.575 196.038 199.919 cv
ef
188.598 199.439 mo
188.598 197.783 187.254 196.439 185.598 196.439 cv
183.942 196.439 182.598 197.783 182.598 199.439 cv
182.598 201.095 183.942 202.439 185.598 202.439 cv
187.254 202.439 188.598 201.095 188.598 199.439 cv
ef
181.158 198.719 mo
181.158 197.063 179.813 195.719 178.158 195.719 cv
176.501 195.719 175.158 197.063 175.158 198.719 cv
175.158 200.375 176.501 201.719 178.158 201.719 cv
179.813 201.719 181.158 200.375 181.158 198.719 cv
ef
173.718 197.52 mo
173.718 195.863 172.374 194.52 170.718 194.52 cv
169.062 194.52 167.718 195.863 167.718 197.52 cv
167.718 199.175 169.062 200.52 170.718 200.52 cv
172.374 200.52 173.718 199.175 173.718 197.52 cv
ef
166.038 196.319 mo
166.038 194.663 164.694 193.319 163.038 193.319 cv
161.382 193.319 160.038 194.663 160.038 196.319 cv
160.038 197.976 161.382 199.319 163.038 199.319 cv
164.694 199.319 166.038 197.976 166.038 196.319 cv
ef
158.358 193.919 mo
158.358 192.263 157.014 190.919 155.358 190.919 cv
153.702 190.919 152.358 192.263 152.358 193.919 cv
152.358 195.575 153.702 196.919 155.358 196.919 cv
157.014 196.919 158.358 195.575 158.358 193.919 cv
ef
150.917 191.52 mo
150.917 189.863 149.574 188.52 147.917 188.52 cv
146.262 188.52 144.917 189.863 144.917 191.52 cv
144.917 193.175 146.262 194.52 147.917 194.52 cv
149.574 194.52 150.917 193.175 150.917 191.52 cv
ef
143.478 188.159 mo
143.478 186.503 142.134 185.159 140.478 185.159 cv
138.822 185.159 137.478 186.503 137.478 188.159 cv
137.478 189.815 138.822 191.159 140.478 191.159 cv
142.134 191.159 143.478 189.815 143.478 188.159 cv
ef
135.798 182.639 mo
135.798 180.983 134.454 179.639 132.798 179.639 cv
131.142 179.639 129.798 180.983 129.798 182.639 cv
129.798 184.295 131.142 185.639 132.798 185.639 cv
134.454 185.639 135.798 184.295 135.798 182.639 cv
ef
128.118 177.839 mo
128.118 176.183 126.774 174.839 125.118 174.839 cv
123.462 174.839 122.118 176.183 122.118 177.839 cv
122.118 179.495 123.462 180.839 125.118 180.839 cv
126.774 180.839 128.118 179.495 128.118 177.839 cv
ef
120.678 171.359 mo
120.678 169.703 119.333 168.359 117.678 168.359 cv
116.021 168.359 114.678 169.703 114.678 171.359 cv
114.678 173.015 116.021 174.359 117.678 174.359 cv
119.333 174.359 120.678 173.015 120.678 171.359 cv
ef
113.238 163.919 mo
113.238 162.263 111.894 160.919 110.238 160.919 cv
108.582 160.919 107.238 162.263 107.238 163.919 cv
107.238 165.575 108.582 166.919 110.238 166.919 cv
111.894 166.919 113.238 165.575 113.238 163.919 cv
ef
105.558 155.279 mo
105.558 153.623 104.214 152.279 102.558 152.279 cv
100.902 152.279 99.5576 153.623 99.5576 155.279 cv
99.5576 156.935 100.902 158.279 102.558 158.279 cv
104.214 158.279 105.558 156.935 105.558 155.279 cv
ef
98.1177 149.279 mo
98.1177 147.623 96.7739 146.279 95.1177 146.279 cv
93.4619 146.279 92.1177 147.623 92.1177 149.279 cv
92.1177 150.935 93.4619 152.279 95.1177 152.279 cv
96.7739 152.279 98.1177 150.935 98.1177 149.279 cv
ef
90.4375 139.679 mo
90.4375 138.023 89.0938 136.679 87.4375 136.679 cv
85.7817 136.679 84.4375 138.023 84.4375 139.679 cv
84.4375 141.335 85.7817 142.679 87.4375 142.679 cv
89.0938 142.679 90.4375 141.335 90.4375 139.679 cv
ef
82.9976 131.999 mo
82.9976 130.343 81.6538 128.999 79.9976 128.999 cv
78.3418 128.999 76.9976 130.343 76.9976 131.999 cv
76.9976 133.655 78.3418 134.999 79.9976 134.999 cv
81.6538 134.999 82.9976 133.655 82.9976 131.999 cv
ef
75.3179 125.279 mo
75.3179 123.623 73.9736 122.279 72.3179 122.279 cv
70.6616 122.279 69.3179 123.623 69.3179 125.279 cv
69.3179 126.935 70.6616 128.279 72.3179 128.279 cv
73.9736 128.279 75.3179 126.935 75.3179 125.279 cv
ef
67.8779 134.399 mo
67.8779 132.743 66.5337 131.399 64.8779 131.399 cv
63.2217 131.399 61.8779 132.743 61.8779 134.399 cv
61.8779 136.055 63.2217 137.399 64.8779 137.399 cv
66.5337 137.399 67.8779 136.055 67.8779 134.399 cv
ef
60.4375 148.079 mo
60.4375 146.423 59.0938 145.079 57.4375 145.079 cv
55.7817 145.079 54.4375 146.423 54.4375 148.079 cv
54.4375 149.735 55.7817 151.079 57.4375 151.079 cv
59.0938 151.079 60.4375 149.735 60.4375 148.079 cv
ef
202.388 199.829 mo
203.888 199.829 li
@
203.938 206.006 mo
204.938 205.006 li
204.938 109.506 li
353.938 109.506 li
354.938 108.506 li
203.938 108.506 li
203.938 206.006 li
1 1 1 rgb
ef
203.938 206.006 mo
354.938 206.006 li
203.938 206.006 mo
203.938 108.506 li
354.938 108.506 li
354.938 206.006 li
203.938 206.006 li
cp
0 0 0 rgb
@
354.938 203.006 mo
354.938 206.006 li
351.188 204.506 mo
351.188 206.006 li
347.438 204.506 mo
347.438 206.006 li
343.438 204.506 mo
343.438 206.006 li
339.688 203.006 mo
339.688 206.006 li
335.938 204.506 mo
335.938 206.006 li
332.188 204.506 mo
332.188 206.006 li
328.438 204.506 mo
328.438 206.006 li
324.688 203.006 mo
324.688 206.006 li
320.938 204.506 mo
320.938 206.006 li
317.188 204.506 mo
317.188 206.006 li
313.438 204.506 mo
313.438 206.006 li
309.688 203.006 mo
309.688 206.006 li
305.688 204.506 mo
305.688 206.006 li
301.938 204.506 mo
301.938 206.006 li
298.188 204.506 mo
298.188 206.006 li
294.438 203.006 mo
294.438 206.006 li
290.688 204.506 mo
290.688 206.006 li
286.938 204.506 mo
286.938 206.006 li
283.188 204.506 mo
283.188 206.006 li
279.438 203.006 mo
279.438 206.006 li
275.688 204.506 mo
275.688 206.006 li
271.938 204.506 mo
271.938 206.006 li
267.938 204.506 mo
267.938 206.006 li
264.188 203.006 mo
264.188 206.006 li
260.438 204.506 mo
260.438 206.006 li
256.688 204.506 mo
256.688 206.006 li
252.938 204.506 mo
252.938 206.006 li
249.188 203.006 mo
249.188 206.006 li
245.438 204.506 mo
245.438 206.006 li
241.688 204.506 mo
241.688 206.006 li
237.938 204.506 mo
237.938 206.006 li
233.938 203.006 mo
233.938 206.006 li
230.188 204.506 mo
230.188 206.006 li
226.438 204.506 mo
226.438 206.006 li
222.688 204.506 mo
222.688 206.006 li
218.938 203.006 mo
218.938 206.006 li
215.188 204.506 mo
215.188 206.006 li
211.438 204.506 mo
211.438 206.006 li
207.688 204.506 mo
207.688 206.006 li
203.938 203.006 mo
203.938 206.006 li
@
203.938 206.006 mo
203.938 108.506 li
@
208.438 108.506 mo
203.938 108.506 li
206.188 203.006 mo
203.938 203.006 li
208.438 199.756 mo
203.938 199.756 li
208.438 108.506 mo
203.938 108.506 li
206.188 111.506 mo
203.938 111.506 li
206.188 114.506 mo
203.938 114.506 li
206.188 117.506 mo
203.938 117.506 li
206.188 120.756 mo
203.938 120.756 li
208.438 123.756 mo
203.938 123.756 li
206.188 126.756 mo
203.938 126.756 li
206.188 129.756 mo
203.938 129.756 li
206.188 132.756 mo
203.938 132.756 li
206.188 136.006 mo
203.938 136.006 li
208.438 139.006 mo
203.938 139.006 li
206.188 142.006 mo
203.938 142.006 li
206.188 145.006 mo
203.938 145.006 li
206.188 148.006 mo
203.938 148.006 li
206.188 151.006 mo
203.938 151.006 li
208.438 154.256 mo
203.938 154.256 li
206.188 157.256 mo
203.938 157.256 li
206.188 160.256 mo
203.938 160.256 li
206.188 163.256 mo
203.938 163.256 li
206.188 166.256 mo
203.938 166.256 li
208.438 169.506 mo
203.938 169.506 li
206.188 172.506 mo
203.938 172.506 li
206.188 175.506 mo
203.938 175.506 li
206.188 178.506 mo
203.938 178.506 li
206.188 181.506 mo
203.938 181.506 li
208.438 184.756 mo
203.938 184.756 li
206.188 187.756 mo
203.938 187.756 li
206.188 190.756 mo
203.938 190.756 li
206.188 193.756 mo
203.938 193.756 li
206.188 196.756 mo
203.938 196.756 li
208.438 199.756 mo
203.938 199.756 li
@
354.148 199.846 mo
354.148 198.189 352.805 196.846 351.148 196.846 cv
349.492 196.846 348.148 198.189 348.148 199.846 cv
348.148 201.502 349.492 202.846 351.148 202.846 cv
352.805 202.846 354.148 201.502 354.148 199.846 cv
1 0 0 rgb
ef
346.469 199.846 mo
346.469 198.189 345.124 196.846 343.469 196.846 cv
341.813 196.846 340.469 198.189 340.469 199.846 cv
340.469 201.502 341.813 202.846 343.469 202.846 cv
345.124 202.846 346.469 201.502 346.469 199.846 cv
ef
339.028 199.605 mo
339.028 197.951 337.685 196.605 336.028 196.605 cv
334.372 196.605 333.028 197.951 333.028 199.605 cv
333.028 201.262 334.372 202.605 336.028 202.605 cv
337.685 202.605 339.028 201.262 339.028 199.605 cv
ef
331.349 198.406 mo
331.349 196.75 330.005 195.406 328.349 195.406 cv
326.692 195.406 325.349 196.75 325.349 198.406 cv
325.349 200.063 326.692 201.406 328.349 201.406 cv
330.005 201.406 331.349 200.063 331.349 198.406 cv
ef
323.908 197.207 mo
323.908 195.551 322.564 194.207 320.908 194.207 cv
319.253 194.207 317.908 195.551 317.908 197.207 cv
317.908 198.863 319.253 200.207 320.908 200.207 cv
322.564 200.207 323.908 198.863 323.908 197.207 cv
ef
316.469 195.766 mo
316.469 194.109 315.124 192.766 313.469 192.766 cv
311.813 192.766 310.469 194.109 310.469 195.766 cv
310.469 197.422 311.813 198.766 313.469 198.766 cv
315.124 198.766 316.469 197.422 316.469 195.766 cv
ef
308.788 193.605 mo
308.788 191.951 307.444 190.605 305.788 190.605 cv
304.133 190.605 302.788 191.951 302.788 193.605 cv
302.788 195.262 304.133 196.605 305.788 196.605 cv
307.444 196.605 308.788 195.262 308.788 193.605 cv
ef
301.108 189.525 mo
301.108 187.871 299.765 186.525 298.108 186.525 cv
296.452 186.525 295.108 187.871 295.108 189.525 cv
295.108 191.182 296.452 192.525 298.108 192.525 cv
299.765 192.525 301.108 191.182 301.108 189.525 cv
ef
293.669 186.406 mo
293.669 184.75 292.324 183.406 290.669 183.406 cv
289.013 183.406 287.669 184.75 287.669 186.406 cv
287.669 188.063 289.013 189.406 290.669 189.406 cv
292.324 189.406 293.669 188.063 293.669 186.406 cv
ef
286.229 182.086 mo
286.229 180.43 284.885 179.086 283.229 179.086 cv
281.572 179.086 280.229 180.43 280.229 182.086 cv
280.229 183.742 281.572 185.086 283.229 185.086 cv
284.885 185.086 286.229 183.742 286.229 182.086 cv
ef
278.789 175.846 mo
278.789 174.19 277.444 172.846 275.789 172.846 cv
274.132 172.846 272.789 174.19 272.789 175.846 cv
272.789 177.502 274.132 178.846 275.789 178.846 cv
277.444 178.846 278.789 177.502 278.789 175.846 cv
ef
270.869 169.006 mo
270.869 167.35 269.524 166.006 267.869 166.006 cv
266.212 166.006 264.869 167.35 264.869 169.006 cv
264.869 170.663 266.212 172.006 267.869 172.006 cv
269.524 172.006 270.869 170.663 270.869 169.006 cv
ef
263.429 163.006 mo
263.429 161.35 262.084 160.006 260.429 160.006 cv
258.772 160.006 257.429 161.35 257.429 163.006 cv
257.429 164.663 258.772 166.006 260.429 166.006 cv
262.084 166.006 263.429 164.663 263.429 163.006 cv
ef
255.988 154.006 mo
255.988 152.35 254.645 151.006 252.988 151.006 cv
251.333 151.006 249.988 152.35 249.988 154.006 cv
249.988 155.663 251.333 157.006 252.988 157.006 cv
254.645 157.006 255.988 155.663 255.988 154.006 cv
ef
248.548 145.606 mo
248.548 143.95 247.205 142.606 245.548 142.606 cv
243.893 142.606 242.548 143.95 242.548 145.606 cv
242.548 147.262 243.893 148.606 245.548 148.606 cv
247.205 148.606 248.548 147.262 248.548 145.606 cv
ef
240.869 138.167 mo
240.869 136.51 239.524 135.167 237.869 135.167 cv
236.212 135.167 234.869 136.51 234.869 138.167 cv
234.869 139.822 236.212 141.167 237.869 141.167 cv
239.524 141.167 240.869 139.822 240.869 138.167 cv
ef
233.188 130.966 mo
233.188 129.31 231.845 127.966 230.188 127.966 cv
228.532 127.966 227.188 129.31 227.188 130.966 cv
227.188 132.623 228.532 133.966 230.188 133.966 cv
231.845 133.966 233.188 132.623 233.188 130.966 cv
ef
225.749 128.806 mo
225.749 127.15 224.404 125.806 222.749 125.806 cv
221.092 125.806 219.749 127.15 219.749 128.806 cv
219.749 130.462 221.092 131.806 222.749 131.806 cv
224.404 131.806 225.749 130.462 225.749 128.806 cv
ef
218.068 139.126 mo
218.068 137.47 216.725 136.126 215.068 136.126 cv
213.413 136.126 212.068 137.47 212.068 139.126 cv
212.068 140.782 213.413 142.126 215.068 142.126 cv
216.725 142.126 218.068 140.782 218.068 139.126 cv
ef
210.628 149.446 mo
210.628 147.791 209.285 146.446 207.628 146.446 cv
205.973 146.446 204.628 147.791 204.628 149.446 cv
204.628 151.103 205.973 152.446 207.628 152.446 cv
209.285 152.446 210.628 151.103 210.628 149.446 cv
ef
352.938 199.756 mo
354.188 199.756 li
@
203.938 199.756 mo
354.938 199.756 li
0 0 0 rgb
@
351.188 197.506 mo
348.938 197.506 li
348.938 202.006 li
353.438 202.006 li
353.438 197.506 li
351.188 197.506 li
cp
0 0 1 rgb
ef
343.438 197.756 mo
341.188 197.756 li
341.188 202.256 li
345.688 202.256 li
345.688 197.756 li
343.438 197.756 li
cp
ef
335.938 197.506 mo
333.688 197.506 li
333.688 202.006 li
338.188 202.006 li
338.188 197.506 li
335.938 197.506 li
cp
ef
328.438 197.756 mo
326.188 197.756 li
326.188 202.256 li
330.688 202.256 li
330.688 197.756 li
328.438 197.756 li
cp
ef
320.938 197.756 mo
318.688 197.756 li
318.688 202.256 li
323.188 202.256 li
323.188 197.756 li
320.938 197.756 li
cp
ef
313.438 197.756 mo
311.188 197.756 li
311.188 202.256 li
315.688 202.256 li
315.688 197.756 li
313.438 197.756 li
cp
ef
305.688 198.006 mo
303.438 198.006 li
303.438 202.506 li
307.938 202.506 li
307.938 198.006 li
305.688 198.006 li
cp
ef
298.188 197.506 mo
295.938 197.506 li
295.938 202.006 li
300.438 202.006 li
300.438 197.506 li
298.188 197.506 li
cp
ef
290.688 197.006 mo
288.438 197.006 li
288.438 201.506 li
292.938 201.506 li
292.938 197.006 li
290.688 197.006 li
cp
ef
283.188 197.756 mo
280.938 197.756 li
280.938 202.256 li
285.438 202.256 li
285.438 197.756 li
283.188 197.756 li
cp
ef
275.688 197.256 mo
273.438 197.256 li
273.438 201.756 li
277.938 201.756 li
277.938 197.256 li
275.688 197.256 li
cp
ef
267.938 196.756 mo
265.688 196.756 li
265.688 201.256 li
270.188 201.256 li
270.188 196.756 li
267.938 196.756 li
cp
ef
260.438 198.006 mo
258.188 198.006 li
258.188 202.506 li
262.688 202.506 li
262.688 198.006 li
260.438 198.006 li
cp
ef
252.938 198.506 mo
250.688 198.506 li
250.688 203.006 li
255.188 203.006 li
255.188 198.506 li
252.938 198.506 li
cp
ef
245.438 197.006 mo
243.188 197.006 li
243.188 201.506 li
247.688 201.506 li
247.688 197.006 li
245.438 197.006 li
cp
ef
237.938 198.256 mo
235.688 198.256 li
235.688 202.756 li
240.188 202.756 li
240.188 198.256 li
237.938 198.256 li
cp
ef
230.188 197.006 mo
227.938 197.006 li
227.938 201.506 li
232.438 201.506 li
232.438 197.006 li
230.188 197.006 li
cp
ef
222.688 198.506 mo
220.438 198.506 li
220.438 203.006 li
224.938 203.006 li
224.938 198.506 li
222.688 198.506 li
cp
ef
215.188 198.006 mo
212.938 198.006 li
212.938 202.506 li
217.438 202.506 li
217.438 198.006 li
215.188 198.006 li
cp
ef
207.688 196.256 mo
205.438 196.256 li
205.438 200.756 li
209.938 200.756 li
209.938 196.256 li
207.688 196.256 li
cp
ef
210.628 140.566 mo
210.628 138.91 209.285 137.566 207.628 137.566 cv
205.973 137.566 204.628 138.91 204.628 140.566 cv
204.628 142.222 205.973 143.566 207.628 143.566 cv
209.285 143.566 210.628 142.222 210.628 140.566 cv
218.068 142.006 mo
218.068 140.35 216.725 139.006 215.068 139.006 cv
213.413 139.006 212.068 140.35 212.068 142.006 cv
212.068 143.663 213.413 145.006 215.068 145.006 cv
216.725 145.006 218.068 143.663 218.068 142.006 cv
225.749 145.846 mo
225.749 144.19 224.404 142.846 222.749 142.846 cv
221.092 142.846 219.749 144.19 219.749 145.846 cv
219.749 147.502 221.092 148.846 222.749 148.846 cv
224.404 148.846 225.749 147.502 225.749 145.846 cv
233.188 149.446 mo
233.188 147.791 231.845 146.446 230.188 146.446 cv
228.532 146.446 227.188 147.791 227.188 149.446 cv
227.188 151.103 228.532 152.446 230.188 152.446 cv
231.845 152.446 233.188 151.103 233.188 149.446 cv
240.869 153.046 mo
240.869 151.39 239.524 150.046 237.869 150.046 cv
236.212 150.046 234.869 151.39 234.869 153.046 cv
234.869 154.702 236.212 156.046 237.869 156.046 cv
239.524 156.046 240.869 154.702 240.869 153.046 cv
248.548 155.926 mo
248.548 154.271 247.205 152.926 245.548 152.926 cv
243.893 152.926 242.548 154.271 242.548 155.926 cv
242.548 157.583 243.893 158.926 245.548 158.926 cv
247.205 158.926 248.548 157.583 248.548 155.926 cv
255.988 159.526 mo
255.988 157.871 254.645 156.526 252.988 156.526 cv
251.333 156.526 249.988 157.871 249.988 159.526 cv
249.988 161.182 251.333 162.526 252.988 162.526 cv
254.645 162.526 255.988 161.182 255.988 159.526 cv
263.429 162.646 mo
263.429 160.991 262.084 159.646 260.429 159.646 cv
258.772 159.646 257.429 160.991 257.429 162.646 cv
257.429 164.302 258.772 165.646 260.429 165.646 cv
262.084 165.646 263.429 164.302 263.429 162.646 cv
270.869 167.207 mo
270.869 165.55 269.524 164.207 267.869 164.207 cv
266.212 164.207 264.869 165.55 264.869 167.207 cv
264.869 168.863 266.212 170.207 267.869 170.207 cv
269.524 170.207 270.869 168.863 270.869 167.207 cv
278.789 170.566 mo
278.789 168.911 277.444 167.566 275.789 167.566 cv
274.132 167.566 272.789 168.911 272.789 170.566 cv
272.789 172.222 274.132 173.566 275.789 173.566 cv
277.444 173.566 278.789 172.222 278.789 170.566 cv
286.229 173.686 mo
286.229 172.031 284.885 170.686 283.229 170.686 cv
281.572 170.686 280.229 172.031 280.229 173.686 cv
280.229 175.342 281.572 176.686 283.229 176.686 cv
284.885 176.686 286.229 175.342 286.229 173.686 cv
293.669 176.566 mo
293.669 174.911 292.324 173.566 290.669 173.566 cv
289.013 173.566 287.669 174.911 287.669 176.566 cv
287.669 178.222 289.013 179.566 290.669 179.566 cv
292.324 179.566 293.669 178.222 293.669 176.566 cv
301.108 181.605 mo
301.108 179.951 299.765 178.606 298.108 178.606 cv
296.452 178.606 295.108 179.951 295.108 181.605 cv
295.108 183.262 296.452 184.605 298.108 184.605 cv
299.765 184.605 301.108 183.262 301.108 181.605 cv
308.788 184.967 mo
308.788 183.311 307.444 181.967 305.788 181.967 cv
304.133 181.967 302.788 183.311 302.788 184.967 cv
302.788 186.623 304.133 187.967 305.788 187.967 cv
307.444 187.967 308.788 186.623 308.788 184.967 cv
316.469 189.047 mo
316.469 187.391 315.124 186.047 313.469 186.047 cv
311.813 186.047 310.469 187.391 310.469 189.047 cv
310.469 190.703 311.813 192.047 313.469 192.047 cv
315.124 192.047 316.469 190.703 316.469 189.047 cv
323.908 191.207 mo
323.908 189.551 322.564 188.207 320.908 188.207 cv
319.253 188.207 317.908 189.551 317.908 191.207 cv
317.908 192.863 319.253 194.207 320.908 194.207 cv
322.564 194.207 323.908 192.863 323.908 191.207 cv
331.349 194.807 mo
331.349 193.15 330.005 191.807 328.349 191.807 cv
326.692 191.807 325.349 193.15 325.349 194.807 cv
325.349 196.463 326.692 197.807 328.349 197.807 cv
330.005 197.807 331.349 196.463 331.349 194.807 cv
339.028 197.447 mo
339.028 195.791 337.685 194.447 336.028 194.447 cv
334.372 194.447 333.028 195.791 333.028 197.447 cv
333.028 199.102 334.372 200.447 336.028 200.447 cv
337.685 200.447 339.028 199.102 339.028 197.447 cv
346.469 199.605 mo
346.469 197.951 345.124 196.605 343.469 196.605 cv
341.813 196.605 340.469 197.951 340.469 199.605 cv
340.469 201.262 341.813 202.605 343.469 202.605 cv
345.124 202.605 346.469 201.262 346.469 199.605 cv
354.148 199.846 mo
354.148 198.189 352.805 196.846 351.148 196.846 cv
349.492 196.846 348.148 198.189 348.148 199.846 cv
348.148 201.502 349.492 202.846 351.148 202.846 cv
352.805 202.846 354.148 201.502 354.148 199.846 cv
0 .4 0 rgb
@
354.148 199.846 mo
354.148 198.189 352.805 196.846 351.148 196.846 cv
349.492 196.846 348.148 198.189 348.148 199.846 cv
348.148 201.502 349.492 202.846 351.148 202.846 cv
352.805 202.846 354.148 201.502 354.148 199.846 cv
1 0 0 rgb
ef
346.469 199.846 mo
346.469 198.189 345.124 196.846 343.469 196.846 cv
341.813 196.846 340.469 198.189 340.469 199.846 cv
340.469 201.502 341.813 202.846 343.469 202.846 cv
345.124 202.846 346.469 201.502 346.469 199.846 cv
ef
339.028 199.605 mo
339.028 197.951 337.685 196.605 336.028 196.605 cv
334.372 196.605 333.028 197.951 333.028 199.605 cv
333.028 201.262 334.372 202.605 336.028 202.605 cv
337.685 202.605 339.028 201.262 339.028 199.605 cv
ef
331.349 198.406 mo
331.349 196.75 330.005 195.406 328.349 195.406 cv
326.692 195.406 325.349 196.75 325.349 198.406 cv
325.349 200.063 326.692 201.406 328.349 201.406 cv
330.005 201.406 331.349 200.063 331.349 198.406 cv
ef
323.908 197.207 mo
323.908 195.551 322.564 194.207 320.908 194.207 cv
319.253 194.207 317.908 195.551 317.908 197.207 cv
317.908 198.863 319.253 200.207 320.908 200.207 cv
322.564 200.207 323.908 198.863 323.908 197.207 cv
ef
316.469 195.766 mo
316.469 194.109 315.124 192.766 313.469 192.766 cv
311.813 192.766 310.469 194.109 310.469 195.766 cv
310.469 197.422 311.813 198.766 313.469 198.766 cv
315.124 198.766 316.469 197.422 316.469 195.766 cv
ef
308.788 193.605 mo
308.788 191.951 307.444 190.605 305.788 190.605 cv
304.133 190.605 302.788 191.951 302.788 193.605 cv
302.788 195.262 304.133 196.605 305.788 196.605 cv
307.444 196.605 308.788 195.262 308.788 193.605 cv
ef
301.108 189.525 mo
301.108 187.871 299.765 186.525 298.108 186.525 cv
296.452 186.525 295.108 187.871 295.108 189.525 cv
295.108 191.182 296.452 192.525 298.108 192.525 cv
299.765 192.525 301.108 191.182 301.108 189.525 cv
ef
293.669 186.406 mo
293.669 184.75 292.324 183.406 290.669 183.406 cv
289.013 183.406 287.669 184.75 287.669 186.406 cv
287.669 188.063 289.013 189.406 290.669 189.406 cv
292.324 189.406 293.669 188.063 293.669 186.406 cv
ef
286.229 182.086 mo
286.229 180.43 284.885 179.086 283.229 179.086 cv
281.572 179.086 280.229 180.43 280.229 182.086 cv
280.229 183.742 281.572 185.086 283.229 185.086 cv
284.885 185.086 286.229 183.742 286.229 182.086 cv
ef
278.789 175.846 mo
278.789 174.19 277.444 172.846 275.789 172.846 cv
274.132 172.846 272.789 174.19 272.789 175.846 cv
272.789 177.502 274.132 178.846 275.789 178.846 cv
277.444 178.846 278.789 177.502 278.789 175.846 cv
ef
270.869 169.006 mo
270.869 167.35 269.524 166.006 267.869 166.006 cv
266.212 166.006 264.869 167.35 264.869 169.006 cv
264.869 170.663 266.212 172.006 267.869 172.006 cv
269.524 172.006 270.869 170.663 270.869 169.006 cv
ef
263.429 163.006 mo
263.429 161.35 262.084 160.006 260.429 160.006 cv
258.772 160.006 257.429 161.35 257.429 163.006 cv
257.429 164.663 258.772 166.006 260.429 166.006 cv
262.084 166.006 263.429 164.663 263.429 163.006 cv
ef
255.988 154.006 mo
255.988 152.35 254.645 151.006 252.988 151.006 cv
251.333 151.006 249.988 152.35 249.988 154.006 cv
249.988 155.663 251.333 157.006 252.988 157.006 cv
254.645 157.006 255.988 155.663 255.988 154.006 cv
ef
248.548 145.606 mo
248.548 143.95 247.205 142.606 245.548 142.606 cv
243.893 142.606 242.548 143.95 242.548 145.606 cv
242.548 147.262 243.893 148.606 245.548 148.606 cv
247.205 148.606 248.548 147.262 248.548 145.606 cv
ef
240.869 138.167 mo
240.869 136.51 239.524 135.167 237.869 135.167 cv
236.212 135.167 234.869 136.51 234.869 138.167 cv
234.869 139.822 236.212 141.167 237.869 141.167 cv
239.524 141.167 240.869 139.822 240.869 138.167 cv
ef
233.188 130.966 mo
233.188 129.31 231.845 127.966 230.188 127.966 cv
228.532 127.966 227.188 129.31 227.188 130.966 cv
227.188 132.623 228.532 133.966 230.188 133.966 cv
231.845 133.966 233.188 132.623 233.188 130.966 cv
ef
225.749 128.806 mo
225.749 127.15 224.404 125.806 222.749 125.806 cv
221.092 125.806 219.749 127.15 219.749 128.806 cv
219.749 130.462 221.092 131.806 222.749 131.806 cv
224.404 131.806 225.749 130.462 225.749 128.806 cv
ef
218.068 139.126 mo
218.068 137.47 216.725 136.126 215.068 136.126 cv
213.413 136.126 212.068 137.47 212.068 139.126 cv
212.068 140.782 213.413 142.126 215.068 142.126 cv
216.725 142.126 218.068 140.782 218.068 139.126 cv
ef
210.628 149.446 mo
210.628 147.791 209.285 146.446 207.628 146.446 cv
205.973 146.446 204.628 147.791 204.628 149.446 cv
204.628 151.103 205.973 152.446 207.628 152.446 cv
209.285 152.446 210.628 151.103 210.628 149.446 cv
ef
352.938 199.756 mo
354.188 199.756 li
@
354.642 205.635 mo
355.642 204.635 li
355.642 109.135 li
505.142 109.135 li
506.142 108.135 li
354.642 108.135 li
354.642 205.635 li
1 1 1 rgb
ef
354.642 205.635 mo
506.142 205.635 li
354.642 205.635 mo
354.642 108.135 li
506.142 108.135 li
506.142 205.635 li
354.642 205.635 li
cp
0 0 0 rgb
@
506.142 202.635 mo
506.142 205.635 li
502.392 204.135 mo
502.392 205.635 li
498.642 204.135 mo
498.642 205.635 li
494.892 204.135 mo
494.892 205.635 li
490.892 202.635 mo
490.892 205.635 li
487.142 204.135 mo
487.142 205.635 li
483.392 204.135 mo
483.392 205.635 li
479.642 204.135 mo
479.642 205.635 li
475.892 202.635 mo
475.892 205.635 li
472.142 204.135 mo
472.142 205.635 li
468.142 204.135 mo
468.142 205.635 li
464.392 204.135 mo
464.392 205.635 li
460.642 202.635 mo
460.642 205.635 li
456.892 204.135 mo
456.892 205.635 li
453.142 204.135 mo
453.142 205.635 li
449.392 204.135 mo
449.392 205.635 li
445.642 202.635 mo
445.642 205.635 li
441.642 204.135 mo
441.642 205.635 li
437.892 204.135 mo
437.892 205.635 li
434.142 204.135 mo
434.142 205.635 li
430.392 202.635 mo
430.392 205.635 li
426.642 204.135 mo
426.642 205.635 li
422.892 204.135 mo
422.892 205.635 li
419.142 204.135 mo
419.142 205.635 li
415.142 202.635 mo
415.142 205.635 li
411.392 204.135 mo
411.392 205.635 li
407.642 204.135 mo
407.642 205.635 li
403.892 204.135 mo
403.892 205.635 li
400.142 202.635 mo
400.142 205.635 li
396.392 204.135 mo
396.392 205.635 li
392.642 204.135 mo
392.642 205.635 li
388.642 204.135 mo
388.642 205.635 li
384.892 202.635 mo
384.892 205.635 li
381.142 204.135 mo
381.142 205.635 li
377.392 204.135 mo
377.392 205.635 li
373.642 204.135 mo
373.642 205.635 li
369.892 202.635 mo
369.892 205.635 li
365.892 204.135 mo
365.892 205.635 li
362.142 204.135 mo
362.142 205.635 li
358.392 204.135 mo
358.392 205.635 li
354.642 202.635 mo
354.642 205.635 li
@
354.642 205.635 mo
354.642 108.135 li
@
359.142 108.135 mo
354.642 108.135 li
356.892 202.635 mo
354.642 202.635 li
359.142 199.385 mo
354.642 199.385 li
359.142 108.135 mo
354.642 108.135 li
356.892 111.135 mo
354.642 111.135 li
356.892 114.135 mo
354.642 114.135 li
356.892 117.135 mo
354.642 117.135 li
356.892 120.385 mo
354.642 120.385 li
359.142 123.385 mo
354.642 123.385 li
356.892 126.385 mo
354.642 126.385 li
356.892 129.385 mo
354.642 129.385 li
356.892 132.385 mo
354.642 132.385 li
356.892 135.635 mo
354.642 135.635 li
359.142 138.635 mo
354.642 138.635 li
356.892 141.635 mo
354.642 141.635 li
356.892 144.635 mo
354.642 144.635 li
356.892 147.635 mo
354.642 147.635 li
356.892 150.635 mo
354.642 150.635 li
359.142 153.885 mo
354.642 153.885 li
356.892 156.885 mo
354.642 156.885 li
356.892 159.885 mo
354.642 159.885 li
356.892 162.885 mo
354.642 162.885 li
356.892 165.885 mo
354.642 165.885 li
359.142 169.135 mo
354.642 169.135 li
356.892 172.135 mo
354.642 172.135 li
356.892 175.135 mo
354.642 175.135 li
356.892 178.135 mo
354.642 178.135 li
356.892 181.134 mo
354.642 181.134 li
359.142 184.385 mo
354.642 184.385 li
356.892 187.385 mo
354.642 187.385 li
356.892 190.385 mo
354.642 190.385 li
356.892 193.385 mo
354.642 193.385 li
356.892 196.385 mo
354.642 196.385 li
359.142 199.385 mo
354.642 199.385 li
@
505.462 199.475 mo
505.462 197.818 504.117 196.475 502.462 196.475 cv
500.806 196.475 499.462 197.818 499.462 199.475 cv
499.462 201.131 500.806 202.475 502.462 202.475 cv
504.117 202.475 505.462 201.131 505.462 199.475 cv
1 0 0 rgb
ef
497.781 199.475 mo
497.781 197.818 496.438 196.475 494.781 196.475 cv
493.126 196.475 491.781 197.818 491.781 199.475 cv
491.781 201.131 493.126 202.475 494.781 202.475 cv
496.438 202.475 497.781 201.131 497.781 199.475 cv
ef
490.102 199.234 mo
490.102 197.58 488.758 196.234 487.102 196.234 cv
485.445 196.234 484.102 197.58 484.102 199.234 cv
484.102 200.891 485.445 202.234 487.102 202.234 cv
488.758 202.234 490.102 200.891 490.102 199.234 cv
ef
482.661 197.795 mo
482.661 196.139 481.317 194.795 479.661 194.795 cv
478.006 194.795 476.661 196.139 476.661 197.795 cv
476.661 199.451 478.006 200.795 479.661 200.795 cv
481.317 200.795 482.661 199.451 482.661 197.795 cv
ef
475.222 196.596 mo
475.222 194.939 473.878 193.596 472.222 193.596 cv
470.565 193.596 469.222 194.939 469.222 196.596 cv
469.222 198.252 470.565 199.596 472.222 199.596 cv
473.878 199.596 475.222 198.252 475.222 196.596 cv
ef
467.302 194.916 mo
467.302 193.26 465.958 191.916 464.302 191.916 cv
462.646 191.916 461.302 193.26 461.302 194.916 cv
461.302 196.57 462.646 197.916 464.302 197.916 cv
465.958 197.916 467.302 196.57 467.302 194.916 cv
ef
459.861 192.996 mo
459.861 191.34 458.518 189.996 456.861 189.996 cv
455.206 189.996 453.861 191.34 453.861 192.996 cv
453.861 194.65 455.206 195.996 456.861 195.996 cv
458.518 195.996 459.861 194.65 459.861 192.996 cv
ef
452.422 189.875 mo
452.422 188.219 451.077 186.875 449.422 186.875 cv
447.766 186.875 446.422 188.219 446.422 189.875 cv
446.422 191.531 447.766 192.875 449.422 192.875 cv
451.077 192.875 452.422 191.531 452.422 189.875 cv
ef
444.741 185.795 mo
444.741 184.139 443.397 182.795 441.741 182.795 cv
440.086 182.795 438.741 184.139 438.741 185.795 cv
438.741 187.451 440.086 188.795 441.741 188.795 cv
443.397 188.795 444.741 187.451 444.741 185.795 cv
ef
437.062 180.635 mo
437.062 178.979 435.718 177.635 434.062 177.635 cv
432.405 177.635 431.062 178.979 431.062 180.635 cv
431.062 182.291 432.405 183.635 434.062 183.635 cv
435.718 183.635 437.062 182.291 437.062 180.635 cv
ef
429.622 175.475 mo
429.622 173.818 428.277 172.475 426.622 172.475 cv
424.966 172.475 423.622 173.818 423.622 175.475 cv
423.622 177.131 424.966 178.475 426.622 178.475 cv
428.277 178.475 429.622 177.131 429.622 175.475 cv
ef
422.182 167.314 mo
422.182 165.659 420.838 164.314 419.182 164.314 cv
417.525 164.314 416.182 165.659 416.182 167.314 cv
416.182 168.971 417.525 170.314 419.182 170.314 cv
420.838 170.314 422.182 168.971 422.182 167.314 cv
ef
414.502 160.354 mo
414.502 158.699 413.157 157.354 411.502 157.354 cv
409.846 157.354 408.502 158.699 408.502 160.354 cv
408.502 162.011 409.846 163.354 411.502 163.354 cv
413.157 163.354 414.502 162.011 414.502 160.354 cv
ef
406.821 153.875 mo
406.821 152.219 405.478 150.875 403.821 150.875 cv
402.166 150.875 400.821 152.219 400.821 153.875 cv
400.821 155.531 402.166 156.875 403.821 156.875 cv
405.478 156.875 406.821 155.531 406.821 153.875 cv
ef
399.382 146.675 mo
399.382 145.019 398.038 143.675 396.382 143.675 cv
394.726 143.675 393.382 145.019 393.382 146.675 cv
393.382 148.331 394.726 149.675 396.382 149.675 cv
398.038 149.675 399.382 148.331 399.382 146.675 cv
ef
391.701 138.035 mo
391.701 136.379 390.357 135.035 388.701 135.035 cv
387.046 135.035 385.701 136.379 385.701 138.035 cv
385.701 139.691 387.046 141.035 388.701 141.035 cv
390.357 141.035 391.701 139.691 391.701 138.035 cv
ef
384.021 133.235 mo
384.021 131.579 382.678 130.235 381.021 130.235 cv
379.365 130.235 378.021 131.579 378.021 133.235 cv
378.021 134.891 379.365 136.235 381.021 136.235 cv
382.678 136.235 384.021 134.891 384.021 133.235 cv
ef
376.582 131.075 mo
376.582 129.419 375.237 128.075 373.582 128.075 cv
371.926 128.075 370.582 129.419 370.582 131.075 cv
370.582 132.731 371.926 134.075 373.582 134.075 cv
375.237 134.075 376.582 132.731 376.582 131.075 cv
ef
368.901 140.915 mo
368.901 139.259 367.558 137.915 365.901 137.915 cv
364.245 137.915 362.901 139.259 362.901 140.915 cv
362.901 142.571 364.245 143.915 365.901 143.915 cv
367.558 143.915 368.901 142.571 368.901 140.915 cv
ef
361.462 151.235 mo
361.462 149.579 360.117 148.235 358.462 148.235 cv
356.806 148.235 355.462 149.579 355.462 151.235 cv
355.462 152.891 356.806 154.235 358.462 154.235 cv
360.117 154.235 361.462 152.891 361.462 151.235 cv
ef
504.142 199.385 mo
505.392 199.385 li
@
354.642 199.385 mo
506.142 199.385 li
0 0 0 rgb
@
502.392 197.135 mo
500.142 197.135 li
500.142 201.635 li
504.642 201.635 li
504.642 197.135 li
502.392 197.135 li
cp
0 0 1 rgb
ef
494.892 197.135 mo
492.642 197.135 li
492.642 201.635 li
497.142 201.635 li
497.142 197.135 li
494.892 197.135 li
cp
ef
487.142 197.385 mo
484.892 197.385 li
484.892 201.885 li
489.392 201.885 li
489.392 197.385 li
487.142 197.385 li
cp
ef
479.642 197.385 mo
477.392 197.385 li
477.392 201.885 li
481.892 201.885 li
481.892 197.385 li
479.642 197.385 li
cp
ef
472.142 197.635 mo
469.892 197.635 li
469.892 202.135 li
474.392 202.135 li
474.392 197.635 li
472.142 197.635 li
cp
ef
464.392 197.135 mo
462.142 197.135 li
462.142 201.635 li
466.642 201.635 li
466.642 197.135 li
464.392 197.135 li
cp
ef
456.892 196.635 mo
454.642 196.635 li
454.642 201.135 li
459.142 201.135 li
459.142 196.635 li
456.892 196.635 li
cp
ef
449.392 197.135 mo
447.142 197.135 li
447.142 201.635 li
451.642 201.635 li
451.642 197.135 li
449.392 197.135 li
cp
ef
441.642 197.385 mo
439.392 197.385 li
439.392 201.885 li
443.892 201.885 li
443.892 197.385 li
441.642 197.385 li
cp
ef
434.142 198.135 mo
431.892 198.135 li
431.892 202.635 li
436.392 202.635 li
436.392 198.135 li
434.142 198.135 li
cp
ef
426.642 197.385 mo
424.392 197.385 li
424.392 201.885 li
428.892 201.885 li
428.892 197.385 li
426.642 197.385 li
cp
ef
419.142 197.135 mo
416.892 197.135 li
416.892 201.635 li
421.392 201.635 li
421.392 197.135 li
419.142 197.135 li
cp
ef
411.392 197.635 mo
409.142 197.635 li
409.142 202.135 li
413.642 202.135 li
413.642 197.635 li
411.392 197.635 li
cp
ef
403.892 196.635 mo
401.642 196.635 li
401.642 201.135 li
406.142 201.135 li
406.142 196.635 li
403.892 196.635 li
cp
ef
396.392 197.385 mo
394.142 197.385 li
394.142 201.885 li
398.642 201.885 li
398.642 197.385 li
396.392 197.385 li
cp
ef
388.642 197.135 mo
386.392 197.135 li
386.392 201.635 li
390.892 201.635 li
390.892 197.135 li
388.642 197.135 li
cp
ef
381.142 196.385 mo
378.892 196.385 li
378.892 200.885 li
383.392 200.885 li
383.392 196.385 li
381.142 196.385 li
cp
ef
373.642 196.885 mo
371.392 196.885 li
371.392 201.385 li
375.892 201.385 li
375.892 196.885 li
373.642 196.885 li
cp
ef
365.892 196.135 mo
363.642 196.135 li
363.642 200.635 li
368.142 200.635 li
368.142 196.135 li
365.892 196.135 li
cp
ef
358.392 197.385 mo
356.142 197.385 li
356.142 201.885 li
360.642 201.885 li
360.642 197.385 li
358.392 197.385 li
cp
ef
361.462 141.155 mo
361.462 139.499 360.117 138.155 358.462 138.155 cv
356.806 138.155 355.462 139.499 355.462 141.155 cv
355.462 142.811 356.806 144.155 358.462 144.155 cv
360.117 144.155 361.462 142.811 361.462 141.155 cv
368.901 143.795 mo
368.901 142.139 367.558 140.795 365.901 140.795 cv
364.245 140.795 362.901 142.139 362.901 143.795 cv
362.901 145.451 364.245 146.795 365.901 146.795 cv
367.558 146.795 368.901 145.451 368.901 143.795 cv
376.582 146.195 mo
376.582 144.539 375.237 143.195 373.582 143.195 cv
371.926 143.195 370.582 144.539 370.582 146.195 cv
370.582 147.851 371.926 149.195 373.582 149.195 cv
375.237 149.195 376.582 147.851 376.582 146.195 cv
384.021 148.835 mo
384.021 147.179 382.678 145.835 381.021 145.835 cv
379.365 145.835 378.021 147.179 378.021 148.835 cv
378.021 150.491 379.365 151.835 381.021 151.835 cv
382.678 151.835 384.021 150.491 384.021 148.835 cv
391.701 153.395 mo
391.701 151.739 390.357 150.395 388.701 150.395 cv
387.046 150.395 385.701 151.739 385.701 153.395 cv
385.701 155.051 387.046 156.395 388.701 156.395 cv
390.357 156.395 391.701 155.051 391.701 153.395 cv
399.382 154.595 mo
399.382 152.938 398.038 151.595 396.382 151.595 cv
394.726 151.595 393.382 152.938 393.382 154.595 cv
393.382 156.251 394.726 157.595 396.382 157.595 cv
398.038 157.595 399.382 156.251 399.382 154.595 cv
406.821 159.154 mo
406.821 157.499 405.478 156.155 403.821 156.155 cv
402.166 156.155 400.821 157.499 400.821 159.154 cv
400.821 160.811 402.166 162.154 403.821 162.154 cv
405.478 162.154 406.821 160.811 406.821 159.154 cv
414.502 163.475 mo
414.502 161.818 413.157 160.475 411.502 160.475 cv
409.846 160.475 408.502 161.818 408.502 163.475 cv
408.502 165.131 409.846 166.475 411.502 166.475 cv
413.157 166.475 414.502 165.131 414.502 163.475 cv
422.182 165.875 mo
422.182 164.219 420.838 162.875 419.182 162.875 cv
417.525 162.875 416.182 164.219 416.182 165.875 cv
416.182 167.531 417.525 168.875 419.182 168.875 cv
420.838 168.875 422.182 167.531 422.182 165.875 cv
429.622 170.675 mo
429.622 169.019 428.277 167.675 426.622 167.675 cv
424.966 167.675 423.622 169.019 423.622 170.675 cv
423.622 172.331 424.966 173.675 426.622 173.675 cv
428.277 173.675 429.622 172.331 429.622 170.675 cv
437.062 174.995 mo
437.062 173.339 435.718 171.995 434.062 171.995 cv
432.405 171.995 431.062 173.339 431.062 174.995 cv
431.062 176.65 432.405 177.995 434.062 177.995 cv
435.718 177.995 437.062 176.65 437.062 174.995 cv
444.741 177.875 mo
444.741 176.219 443.397 174.875 441.741 174.875 cv
440.086 174.875 438.741 176.219 438.741 177.875 cv
438.741 179.531 440.086 180.875 441.741 180.875 cv
443.397 180.875 444.741 179.531 444.741 177.875 cv
452.422 180.635 mo
452.422 178.979 451.077 177.635 449.422 177.635 cv
447.766 177.635 446.422 178.979 446.422 180.635 cv
446.422 182.291 447.766 183.635 449.422 183.635 cv
451.077 183.635 452.422 182.291 452.422 180.635 cv
459.861 184.836 mo
459.861 183.18 458.518 181.835 456.861 181.835 cv
455.206 181.835 453.861 183.18 453.861 184.836 cv
453.861 186.492 455.206 187.836 456.861 187.836 cv
458.518 187.836 459.861 186.492 459.861 184.836 cv
467.302 187.955 mo
467.302 186.299 465.958 184.955 464.302 184.955 cv
462.646 184.955 461.302 186.299 461.302 187.955 cv
461.302 189.611 462.646 190.955 464.302 190.955 cv
465.958 190.955 467.302 189.611 467.302 187.955 cv
475.222 191.555 mo
475.222 189.898 473.878 188.555 472.222 188.555 cv
470.565 188.555 469.222 189.898 469.222 191.555 cv
469.222 193.211 470.565 194.555 472.222 194.555 cv
473.878 194.555 475.222 193.211 475.222 191.555 cv
482.661 194.195 mo
482.661 192.539 481.317 191.195 479.661 191.195 cv
478.006 191.195 476.661 192.539 476.661 194.195 cv
476.661 195.852 478.006 197.195 479.661 197.195 cv
481.317 197.195 482.661 195.852 482.661 194.195 cv
490.102 197.076 mo
490.102 195.42 488.758 194.076 487.102 194.076 cv
485.445 194.076 484.102 195.42 484.102 197.076 cv
484.102 198.73 485.445 200.076 487.102 200.076 cv
488.758 200.076 490.102 198.73 490.102 197.076 cv
497.781 199.234 mo
497.781 197.58 496.438 196.234 494.781 196.234 cv
493.126 196.234 491.781 197.58 491.781 199.234 cv
491.781 200.891 493.126 202.234 494.781 202.234 cv
496.438 202.234 497.781 200.891 497.781 199.234 cv
505.462 199.475 mo
505.462 197.818 504.117 196.475 502.462 196.475 cv
500.806 196.475 499.462 197.818 499.462 199.475 cv
499.462 201.131 500.806 202.475 502.462 202.475 cv
504.117 202.475 505.462 201.131 505.462 199.475 cv
0 .4 0 rgb
@
505.462 199.475 mo
505.462 197.818 504.117 196.475 502.462 196.475 cv
500.806 196.475 499.462 197.818 499.462 199.475 cv
499.462 201.131 500.806 202.475 502.462 202.475 cv
504.117 202.475 505.462 201.131 505.462 199.475 cv
1 0 0 rgb
ef
497.781 199.475 mo
497.781 197.818 496.438 196.475 494.781 196.475 cv
493.126 196.475 491.781 197.818 491.781 199.475 cv
491.781 201.131 493.126 202.475 494.781 202.475 cv
496.438 202.475 497.781 201.131 497.781 199.475 cv
ef
490.102 199.234 mo
490.102 197.58 488.758 196.234 487.102 196.234 cv
485.445 196.234 484.102 197.58 484.102 199.234 cv
484.102 200.891 485.445 202.234 487.102 202.234 cv
488.758 202.234 490.102 200.891 490.102 199.234 cv
ef
482.661 197.795 mo
482.661 196.139 481.317 194.795 479.661 194.795 cv
478.006 194.795 476.661 196.139 476.661 197.795 cv
476.661 199.451 478.006 200.795 479.661 200.795 cv
481.317 200.795 482.661 199.451 482.661 197.795 cv
ef
475.222 196.596 mo
475.222 194.939 473.878 193.596 472.222 193.596 cv
470.565 193.596 469.222 194.939 469.222 196.596 cv
469.222 198.252 470.565 199.596 472.222 199.596 cv
473.878 199.596 475.222 198.252 475.222 196.596 cv
ef
467.302 194.916 mo
467.302 193.26 465.958 191.916 464.302 191.916 cv
462.646 191.916 461.302 193.26 461.302 194.916 cv
461.302 196.57 462.646 197.916 464.302 197.916 cv
465.958 197.916 467.302 196.57 467.302 194.916 cv
ef
459.861 192.996 mo
459.861 191.34 458.518 189.996 456.861 189.996 cv
455.206 189.996 453.861 191.34 453.861 192.996 cv
453.861 194.65 455.206 195.996 456.861 195.996 cv
458.518 195.996 459.861 194.65 459.861 192.996 cv
ef
452.422 189.875 mo
452.422 188.219 451.077 186.875 449.422 186.875 cv
447.766 186.875 446.422 188.219 446.422 189.875 cv
446.422 191.531 447.766 192.875 449.422 192.875 cv
451.077 192.875 452.422 191.531 452.422 189.875 cv
ef
444.741 185.795 mo
444.741 184.139 443.397 182.795 441.741 182.795 cv
440.086 182.795 438.741 184.139 438.741 185.795 cv
438.741 187.451 440.086 188.795 441.741 188.795 cv
443.397 188.795 444.741 187.451 444.741 185.795 cv
ef
437.062 180.635 mo
437.062 178.979 435.718 177.635 434.062 177.635 cv
432.405 177.635 431.062 178.979 431.062 180.635 cv
431.062 182.291 432.405 183.635 434.062 183.635 cv
435.718 183.635 437.062 182.291 437.062 180.635 cv
ef
429.622 175.475 mo
429.622 173.818 428.277 172.475 426.622 172.475 cv
424.966 172.475 423.622 173.818 423.622 175.475 cv
423.622 177.131 424.966 178.475 426.622 178.475 cv
428.277 178.475 429.622 177.131 429.622 175.475 cv
ef
422.182 167.314 mo
422.182 165.659 420.838 164.314 419.182 164.314 cv
417.525 164.314 416.182 165.659 416.182 167.314 cv
416.182 168.971 417.525 170.314 419.182 170.314 cv
420.838 170.314 422.182 168.971 422.182 167.314 cv
ef
414.502 160.354 mo
414.502 158.699 413.157 157.354 411.502 157.354 cv
409.846 157.354 408.502 158.699 408.502 160.354 cv
408.502 162.011 409.846 163.354 411.502 163.354 cv
413.157 163.354 414.502 162.011 414.502 160.354 cv
ef
406.821 153.875 mo
406.821 152.219 405.478 150.875 403.821 150.875 cv
402.166 150.875 400.821 152.219 400.821 153.875 cv
400.821 155.531 402.166 156.875 403.821 156.875 cv
405.478 156.875 406.821 155.531 406.821 153.875 cv
ef
399.382 146.675 mo
399.382 145.019 398.038 143.675 396.382 143.675 cv
394.726 143.675 393.382 145.019 393.382 146.675 cv
393.382 148.331 394.726 149.675 396.382 149.675 cv
398.038 149.675 399.382 148.331 399.382 146.675 cv
ef
391.701 138.035 mo
391.701 136.379 390.357 135.035 388.701 135.035 cv
387.046 135.035 385.701 136.379 385.701 138.035 cv
385.701 139.691 387.046 141.035 388.701 141.035 cv
390.357 141.035 391.701 139.691 391.701 138.035 cv
ef
384.021 133.235 mo
384.021 131.579 382.678 130.235 381.021 130.235 cv
379.365 130.235 378.021 131.579 378.021 133.235 cv
378.021 134.891 379.365 136.235 381.021 136.235 cv
382.678 136.235 384.021 134.891 384.021 133.235 cv
ef
376.582 131.075 mo
376.582 129.419 375.237 128.075 373.582 128.075 cv
371.926 128.075 370.582 129.419 370.582 131.075 cv
370.582 132.731 371.926 134.075 373.582 134.075 cv
375.237 134.075 376.582 132.731 376.582 131.075 cv
ef
368.901 140.915 mo
368.901 139.259 367.558 137.915 365.901 137.915 cv
364.245 137.915 362.901 139.259 362.901 140.915 cv
362.901 142.571 364.245 143.915 365.901 143.915 cv
367.558 143.915 368.901 142.571 368.901 140.915 cv
ef
361.462 151.235 mo
361.462 149.579 360.117 148.235 358.462 148.235 cv
356.806 148.235 355.462 149.579 355.462 151.235 cv
355.462 152.891 356.806 154.235 358.462 154.235 cv
360.117 154.235 361.462 152.891 361.462 151.235 cv
ef
504.142 199.385 mo
505.392 199.385 li
@
53.6377 303.63 mo
54.6377 302.63 li
54.6377 207.13 li
203.638 207.13 li
204.638 206.13 li
53.6377 206.13 li
53.6377 303.63 li
1 1 1 rgb
ef
53.6377 303.63 mo
204.638 303.63 li
53.6377 303.63 mo
53.6377 206.13 li
204.638 206.13 li
204.638 303.63 li
53.6377 303.63 li
cp
0 0 0 rgb
@
204.638 300.88 mo
204.638 303.63 li
200.888 302.13 mo
200.888 303.63 li
196.888 302.13 mo
196.888 303.63 li
193.138 302.13 mo
193.138 303.63 li
189.388 300.88 mo
189.388 303.63 li
185.638 302.13 mo
185.638 303.63 li
181.888 302.13 mo
181.888 303.63 li
178.138 302.13 mo
178.138 303.63 li
174.388 300.88 mo
174.388 303.63 li
170.638 302.13 mo
170.638 303.63 li
166.888 302.13 mo
166.888 303.63 li
163.138 302.13 mo
163.138 303.63 li
159.138 300.88 mo
159.138 303.63 li
155.388 302.13 mo
155.388 303.63 li
151.638 302.13 mo
151.638 303.63 li
147.888 302.13 mo
147.888 303.63 li
144.138 300.88 mo
144.138 303.63 li
140.388 302.13 mo
140.388 303.63 li
136.638 302.13 mo
136.638 303.63 li
132.888 302.13 mo
132.888 303.63 li
129.138 300.88 mo
129.138 303.63 li
125.138 302.13 mo
125.138 303.63 li
121.388 302.13 mo
121.388 303.63 li
117.638 302.13 mo
117.638 303.63 li
113.888 300.88 mo
113.888 303.63 li
110.138 302.13 mo
110.138 303.63 li
106.388 302.13 mo
106.388 303.63 li
102.638 302.13 mo
102.638 303.63 li
98.8877 300.88 mo
98.8877 303.63 li
95.1377 302.13 mo
95.1377 303.63 li
91.3877 302.13 mo
91.3877 303.63 li
87.3877 302.13 mo
87.3877 303.63 li
83.6377 300.88 mo
83.6377 303.63 li
79.8877 302.13 mo
79.8877 303.63 li
76.1377 302.13 mo
76.1377 303.63 li
72.3877 302.13 mo
72.3877 303.63 li
68.6377 300.88 mo
68.6377 303.63 li
64.8877 302.13 mo
64.8877 303.63 li
61.1377 302.13 mo
61.1377 303.63 li
57.3877 302.13 mo
57.3877 303.63 li
53.6377 300.88 mo
53.6377 303.63 li
@
53.6377 303.63 mo
53.6377 206.13 li
@
58.1377 206.13 mo
53.6377 206.13 li
55.8877 300.63 mo
53.6377 300.63 li
58.1377 297.63 mo
53.6377 297.63 li
58.1377 206.13 mo
53.6377 206.13 li
55.8877 209.13 mo
53.6377 209.13 li
55.8877 212.38 mo
53.6377 212.38 li
55.8877 215.38 mo
53.6377 215.38 li
55.8877 218.38 mo
53.6377 218.38 li
58.1377 221.38 mo
53.6377 221.38 li
55.8877 224.38 mo
53.6377 224.38 li
55.8877 227.63 mo
53.6377 227.63 li
55.8877 230.63 mo
53.6377 230.63 li
55.8877 233.63 mo
53.6377 233.63 li
58.1377 236.63 mo
53.6377 236.63 li
55.8877 239.63 mo
53.6377 239.63 li
55.8877 242.88 mo
53.6377 242.88 li
55.8877 245.88 mo
53.6377 245.88 li
55.8877 248.88 mo
53.6377 248.88 li
58.1377 251.88 mo
53.6377 251.88 li
55.8877 254.88 mo
53.6377 254.88 li
55.8877 257.88 mo
53.6377 257.88 li
55.8877 261.13 mo
53.6377 261.13 li
55.8877 264.13 mo
53.6377 264.13 li
58.1377 267.13 mo
53.6377 267.13 li
55.8877 270.13 mo
53.6377 270.13 li
55.8877 273.13 mo
53.6377 273.13 li
55.8877 276.38 mo
53.6377 276.38 li
55.8877 279.38 mo
53.6377 279.38 li
58.1377 282.38 mo
53.6377 282.38 li
55.8877 285.38 mo
53.6377 285.38 li
55.8877 288.38 mo
53.6377 288.38 li
55.8877 291.63 mo
53.6377 291.63 li
55.8877 294.63 mo
53.6377 294.63 li
58.1377 297.63 mo
53.6377 297.63 li
@
203.958 297.64 mo
203.958 295.983 202.614 294.64 200.958 294.64 cv
199.302 294.64 197.958 295.983 197.958 297.64 cv
197.958 299.296 199.302 300.64 200.958 300.64 cv
202.614 300.64 203.958 299.296 203.958 297.64 cv
1 0 0 rgb
ef
196.038 297.399 mo
196.038 295.744 194.694 294.399 193.038 294.399 cv
191.382 294.399 190.038 295.744 190.038 297.399 cv
190.038 299.056 191.382 300.399 193.038 300.399 cv
194.694 300.399 196.038 299.056 196.038 297.399 cv
ef
188.598 297.16 mo
188.598 295.504 187.254 294.16 185.598 294.16 cv
183.942 294.16 182.598 295.504 182.598 297.16 cv
182.598 298.815 183.942 300.16 185.598 300.16 cv
187.254 300.16 188.598 298.815 188.598 297.16 cv
ef
181.158 296.439 mo
181.158 294.784 179.813 293.439 178.158 293.439 cv
176.501 293.439 175.158 294.784 175.158 296.439 cv
175.158 298.096 176.501 299.439 178.158 299.439 cv
179.813 299.439 181.158 298.096 181.158 296.439 cv
ef
173.718 294.52 mo
173.718 292.864 172.374 291.52 170.718 291.52 cv
169.062 291.52 167.718 292.864 167.718 294.52 cv
167.718 296.176 169.062 297.52 170.718 297.52 cv
172.374 297.52 173.718 296.176 173.718 294.52 cv
ef
166.038 292.12 mo
166.038 290.464 164.694 289.12 163.038 289.12 cv
161.382 289.12 160.038 290.464 160.038 292.12 cv
160.038 293.776 161.382 295.12 163.038 295.12 cv
164.694 295.12 166.038 293.776 166.038 292.12 cv
ef
158.358 290.92 mo
158.358 289.264 157.014 287.92 155.358 287.92 cv
153.702 287.92 152.358 289.264 152.358 290.92 cv
152.358 292.576 153.702 293.92 155.358 293.92 cv
157.014 293.92 158.358 292.576 158.358 290.92 cv
ef
150.917 287.32 mo
150.917 285.664 149.574 284.32 147.917 284.32 cv
146.262 284.32 144.917 285.664 144.917 287.32 cv
144.917 288.976 146.262 290.32 147.917 290.32 cv
149.574 290.32 150.917 288.976 150.917 287.32 cv
ef
143.478 283.72 mo
143.478 282.063 142.134 280.72 140.478 280.72 cv
138.822 280.72 137.478 282.063 137.478 283.72 cv
137.478 285.376 138.822 286.72 140.478 286.72 cv
142.134 286.72 143.478 285.376 143.478 283.72 cv
ef
135.798 277.96 mo
135.798 276.304 134.454 274.96 132.798 274.96 cv
131.142 274.96 129.798 276.304 129.798 277.96 cv
129.798 279.616 131.142 280.96 132.798 280.96 cv
134.454 280.96 135.798 279.616 135.798 277.96 cv
ef
128.118 272.2 mo
128.118 270.544 126.774 269.2 125.118 269.2 cv
123.462 269.2 122.118 270.544 122.118 272.2 cv
122.118 273.855 123.462 275.2 125.118 275.2 cv
126.774 275.2 128.118 273.855 128.118 272.2 cv
ef
120.678 266.2 mo
120.678 264.544 119.333 263.2 117.678 263.2 cv
116.021 263.2 114.678 264.544 114.678 266.2 cv
114.678 267.855 116.021 269.2 117.678 269.2 cv
119.333 269.2 120.678 267.855 120.678 266.2 cv
ef
113.238 259.24 mo
113.238 257.584 111.894 256.24 110.238 256.24 cv
108.582 256.24 107.238 257.584 107.238 259.24 cv
107.238 260.896 108.582 262.24 110.238 262.24 cv
111.894 262.24 113.238 260.896 113.238 259.24 cv
ef
105.558 252.28 mo
105.558 250.624 104.214 249.28 102.558 249.28 cv
100.902 249.28 99.5576 250.624 99.5576 252.28 cv
99.5576 253.936 100.902 255.28 102.558 255.28 cv
104.214 255.28 105.558 253.936 105.558 252.28 cv
ef
98.1177 242.92 mo
98.1177 241.264 96.7739 239.92 95.1177 239.92 cv
93.4619 239.92 92.1177 241.264 92.1177 242.92 cv
92.1177 244.576 93.4619 245.92 95.1177 245.92 cv
96.7739 245.92 98.1177 244.576 98.1177 242.92 cv
ef
90.4375 237.88 mo
90.4375 236.224 89.0938 234.88 87.4375 234.88 cv
85.7817 234.88 84.4375 236.224 84.4375 237.88 cv
84.4375 239.536 85.7817 240.88 87.4375 240.88 cv
89.0938 240.88 90.4375 239.536 90.4375 237.88 cv
ef
82.9976 232.6 mo
82.9976 230.944 81.6538 229.6 79.9976 229.6 cv
78.3418 229.6 76.9976 230.944 76.9976 232.6 cv
76.9976 234.256 78.3418 235.6 79.9976 235.6 cv
81.6538 235.6 82.9976 234.256 82.9976 232.6 cv
ef
75.3179 233.8 mo
75.3179 232.144 73.9736 230.8 72.3179 230.8 cv
70.6616 230.8 69.3179 232.144 69.3179 233.8 cv
69.3179 235.456 70.6616 236.8 72.3179 236.8 cv
73.9736 236.8 75.3179 235.456 75.3179 233.8 cv
ef
67.8779 240.88 mo
67.8779 239.224 66.5337 237.88 64.8779 237.88 cv
63.2217 237.88 61.8779 239.224 61.8779 240.88 cv
61.8779 242.536 63.2217 243.88 64.8779 243.88 cv
66.5337 243.88 67.8779 242.536 67.8779 240.88 cv
ef
60.4375 247.479 mo
60.4375 245.824 59.0938 244.479 57.4375 244.479 cv
55.7817 244.479 54.4375 245.824 54.4375 247.479 cv
54.4375 249.136 55.7817 250.479 57.4375 250.479 cv
59.0938 250.479 60.4375 249.136 60.4375 247.479 cv
ef
202.388 297.38 mo
203.888 297.38 li
@
53.6377 297.63 mo
204.638 297.63 li
0 0 0 rgb
@
200.888 295.38 mo
198.638 295.38 li
198.638 299.88 li
203.138 299.88 li
203.138 295.38 li
200.888 295.38 li
cp
0 0 1 rgb
ef
193.138 295.38 mo
190.888 295.38 li
190.888 299.88 li
195.388 299.88 li
195.388 295.38 li
193.138 295.38 li
cp
ef
185.638 295.13 mo
183.388 295.13 li
183.388 299.63 li
187.888 299.63 li
187.888 295.13 li
185.638 295.13 li
cp
ef
178.138 295.38 mo
175.888 295.38 li
175.888 299.88 li
180.388 299.88 li
180.388 295.38 li
178.138 295.38 li
cp
ef
170.638 295.63 mo
168.388 295.63 li
168.388 300.13 li
172.888 300.13 li
172.888 295.63 li
170.638 295.63 li
cp
ef
163.138 295.63 mo
160.888 295.63 li
160.888 300.13 li
165.388 300.13 li
165.388 295.63 li
163.138 295.63 li
cp
ef
155.388 296.13 mo
153.138 296.13 li
153.138 300.63 li
157.638 300.63 li
157.638 296.13 li
155.388 296.13 li
cp
ef
147.888 295.38 mo
145.638 295.38 li
145.638 299.88 li
150.138 299.88 li
150.138 295.38 li
147.888 295.38 li
cp
ef
140.388 295.38 mo
138.138 295.38 li
138.138 299.88 li
142.638 299.88 li
142.638 295.38 li
140.388 295.38 li
cp
ef
132.888 295.13 mo
130.638 295.13 li
130.638 299.63 li
135.138 299.63 li
135.138 295.13 li
132.888 295.13 li
cp
ef
125.138 295.38 mo
122.888 295.38 li
122.888 299.88 li
127.388 299.88 li
127.388 295.38 li
125.138 295.38 li
cp
ef
117.638 294.63 mo
115.388 294.63 li
115.388 299.13 li
119.888 299.13 li
119.888 294.63 li
117.638 294.63 li
cp
ef
110.138 295.63 mo
107.888 295.63 li
107.888 300.13 li
112.388 300.13 li
112.388 295.63 li
110.138 295.63 li
cp
ef
102.638 296.13 mo
100.388 296.13 li
100.388 300.63 li
104.888 300.63 li
104.888 296.13 li
102.638 296.13 li
cp
ef
95.1377 295.63 mo
92.8877 295.63 li
92.8877 300.13 li
97.3877 300.13 li
97.3877 295.63 li
95.1377 295.63 li
cp
ef
87.3877 296.13 mo
85.1377 296.13 li
85.1377 300.63 li
89.6377 300.63 li
89.6377 296.13 li
87.3877 296.13 li
cp
ef
79.8877 295.38 mo
77.6377 295.38 li
77.6377 299.88 li
82.1377 299.88 li
82.1377 295.38 li
79.8877 295.38 li
cp
ef
72.3877 297.13 mo
70.1377 297.13 li
70.1377 301.63 li
74.6377 301.63 li
74.6377 297.13 li
72.3877 297.13 li
cp
ef
64.8877 296.88 mo
62.6377 296.88 li
62.6377 301.38 li
67.1377 301.38 li
67.1377 296.88 li
64.8877 296.88 li
cp
ef
57.3877 293.88 mo
55.1377 293.88 li
55.1377 298.38 li
59.6377 298.38 li
59.6377 293.88 li
57.3877 293.88 li
cp
ef
60.4375 239.32 mo
60.4375 237.664 59.0938 236.32 57.4375 236.32 cv
55.7817 236.32 54.4375 237.664 54.4375 239.32 cv
54.4375 240.976 55.7817 242.32 57.4375 242.32 cv
59.0938 242.32 60.4375 240.976 60.4375 239.32 cv
67.8779 241.96 mo
67.8779 240.304 66.5337 238.96 64.8779 238.96 cv
63.2217 238.96 61.8779 240.304 61.8779 241.96 cv
61.8779 243.616 63.2217 244.96 64.8779 244.96 cv
66.5337 244.96 67.8779 243.616 67.8779 241.96 cv
75.3179 243.88 mo
75.3179 242.224 73.9736 240.88 72.3179 240.88 cv
70.6616 240.88 69.3179 242.224 69.3179 243.88 cv
69.3179 245.536 70.6616 246.88 72.3179 246.88 cv
73.9736 246.88 75.3179 245.536 75.3179 243.88 cv
82.9976 246.52 mo
82.9976 244.864 81.6538 243.52 79.9976 243.52 cv
78.3418 243.52 76.9976 244.864 76.9976 246.52 cv
76.9976 248.176 78.3418 249.52 79.9976 249.52 cv
81.6538 249.52 82.9976 248.176 82.9976 246.52 cv
90.4375 251.08 mo
90.4375 249.424 89.0938 248.08 87.4375 248.08 cv
85.7817 248.08 84.4375 249.424 84.4375 251.08 cv
84.4375 252.736 85.7817 254.08 87.4375 254.08 cv
89.0938 254.08 90.4375 252.736 90.4375 251.08 cv
98.1177 255.16 mo
98.1177 253.504 96.7739 252.16 95.1177 252.16 cv
93.4619 252.16 92.1177 253.504 92.1177 255.16 cv
92.1177 256.815 93.4619 258.16 95.1177 258.16 cv
96.7739 258.16 98.1177 256.815 98.1177 255.16 cv
105.558 257.8 mo
105.558 256.144 104.214 254.8 102.558 254.8 cv
100.902 254.8 99.5576 256.144 99.5576 257.8 cv
99.5576 259.456 100.902 260.8 102.558 260.8 cv
104.214 260.8 105.558 259.456 105.558 257.8 cv
113.238 262.36 mo
113.238 260.704 111.894 259.36 110.238 259.36 cv
108.582 259.36 107.238 260.704 107.238 262.36 cv
107.238 264.016 108.582 265.36 110.238 265.36 cv
111.894 265.36 113.238 264.016 113.238 262.36 cv
120.678 265.479 mo
120.678 263.824 119.333 262.479 117.678 262.479 cv
116.021 262.479 114.678 263.824 114.678 265.479 cv
114.678 267.136 116.021 268.479 117.678 268.479 cv
119.333 268.479 120.678 267.136 120.678 265.479 cv
128.118 268.6 mo
128.118 266.944 126.774 265.6 125.118 265.6 cv
123.462 265.6 122.118 266.944 122.118 268.6 cv
122.118 270.256 123.462 271.6 125.118 271.6 cv
126.774 271.6 128.118 270.256 128.118 268.6 cv
135.798 272.68 mo
135.798 271.023 134.454 269.68 132.798 269.68 cv
131.142 269.68 129.798 271.023 129.798 272.68 cv
129.798 274.336 131.142 275.68 132.798 275.68 cv
134.454 275.68 135.798 274.336 135.798 272.68 cv
143.478 275.8 mo
143.478 274.144 142.134 272.8 140.478 272.8 cv
138.822 272.8 137.478 274.144 137.478 275.8 cv
137.478 277.456 138.822 278.8 140.478 278.8 cv
142.134 278.8 143.478 277.456 143.478 275.8 cv
150.917 278.92 mo
150.917 277.264 149.574 275.92 147.917 275.92 cv
146.262 275.92 144.917 277.264 144.917 278.92 cv
144.917 280.576 146.262 281.92 147.917 281.92 cv
149.574 281.92 150.917 280.576 150.917 278.92 cv
158.358 282.52 mo
158.358 280.864 157.014 279.52 155.358 279.52 cv
153.702 279.52 152.358 280.864 152.358 282.52 cv
152.358 284.176 153.702 285.52 155.358 285.52 cv
157.014 285.52 158.358 284.176 158.358 282.52 cv
166.038 286.36 mo
166.038 284.704 164.694 283.36 163.038 283.36 cv
161.382 283.36 160.038 284.704 160.038 286.36 cv
160.038 288.016 161.382 289.36 163.038 289.36 cv
164.694 289.36 166.038 288.016 166.038 286.36 cv
173.718 289.24 mo
173.718 287.584 172.374 286.24 170.718 286.24 cv
169.062 286.24 167.718 287.584 167.718 289.24 cv
167.718 290.896 169.062 292.24 170.718 292.24 cv
172.374 292.24 173.718 290.896 173.718 289.24 cv
181.158 292.6 mo
181.158 290.944 179.813 289.6 178.158 289.6 cv
176.501 289.6 175.158 290.944 175.158 292.6 cv
175.158 294.256 176.501 295.6 178.158 295.6 cv
179.813 295.6 181.158 294.256 181.158 292.6 cv
188.598 295.24 mo
188.598 293.584 187.254 292.24 185.598 292.24 cv
183.942 292.24 182.598 293.584 182.598 295.24 cv
182.598 296.896 183.942 298.24 185.598 298.24 cv
187.254 298.24 188.598 296.896 188.598 295.24 cv
196.038 297.16 mo
196.038 295.504 194.694 294.16 193.038 294.16 cv
191.382 294.16 190.038 295.504 190.038 297.16 cv
190.038 298.815 191.382 300.16 193.038 300.16 cv
194.694 300.16 196.038 298.815 196.038 297.16 cv
203.958 297.64 mo
203.958 295.983 202.614 294.64 200.958 294.64 cv
199.302 294.64 197.958 295.983 197.958 297.64 cv
197.958 299.296 199.302 300.64 200.958 300.64 cv
202.614 300.64 203.958 299.296 203.958 297.64 cv
0 .4 0 rgb
@
203.958 297.64 mo
203.958 295.983 202.614 294.64 200.958 294.64 cv
199.302 294.64 197.958 295.983 197.958 297.64 cv
197.958 299.296 199.302 300.64 200.958 300.64 cv
202.614 300.64 203.958 299.296 203.958 297.64 cv
1 0 0 rgb
ef
196.038 297.399 mo
196.038 295.744 194.694 294.399 193.038 294.399 cv
191.382 294.399 190.038 295.744 190.038 297.399 cv
190.038 299.056 191.382 300.399 193.038 300.399 cv
194.694 300.399 196.038 299.056 196.038 297.399 cv
ef
188.598 297.16 mo
188.598 295.504 187.254 294.16 185.598 294.16 cv
183.942 294.16 182.598 295.504 182.598 297.16 cv
182.598 298.815 183.942 300.16 185.598 300.16 cv
187.254 300.16 188.598 298.815 188.598 297.16 cv
ef
181.158 296.439 mo
181.158 294.784 179.813 293.439 178.158 293.439 cv
176.501 293.439 175.158 294.784 175.158 296.439 cv
175.158 298.096 176.501 299.439 178.158 299.439 cv
179.813 299.439 181.158 298.096 181.158 296.439 cv
ef
173.718 294.52 mo
173.718 292.864 172.374 291.52 170.718 291.52 cv
169.062 291.52 167.718 292.864 167.718 294.52 cv
167.718 296.176 169.062 297.52 170.718 297.52 cv
172.374 297.52 173.718 296.176 173.718 294.52 cv
ef
166.038 292.12 mo
166.038 290.464 164.694 289.12 163.038 289.12 cv
161.382 289.12 160.038 290.464 160.038 292.12 cv
160.038 293.776 161.382 295.12 163.038 295.12 cv
164.694 295.12 166.038 293.776 166.038 292.12 cv
ef
158.358 290.92 mo
158.358 289.264 157.014 287.92 155.358 287.92 cv
153.702 287.92 152.358 289.264 152.358 290.92 cv
152.358 292.576 153.702 293.92 155.358 293.92 cv
157.014 293.92 158.358 292.576 158.358 290.92 cv
ef
150.917 287.32 mo
150.917 285.664 149.574 284.32 147.917 284.32 cv
146.262 284.32 144.917 285.664 144.917 287.32 cv
144.917 288.976 146.262 290.32 147.917 290.32 cv
149.574 290.32 150.917 288.976 150.917 287.32 cv
ef
143.478 283.72 mo
143.478 282.063 142.134 280.72 140.478 280.72 cv
138.822 280.72 137.478 282.063 137.478 283.72 cv
137.478 285.376 138.822 286.72 140.478 286.72 cv
142.134 286.72 143.478 285.376 143.478 283.72 cv
ef
135.798 277.96 mo
135.798 276.304 134.454 274.96 132.798 274.96 cv
131.142 274.96 129.798 276.304 129.798 277.96 cv
129.798 279.616 131.142 280.96 132.798 280.96 cv
134.454 280.96 135.798 279.616 135.798 277.96 cv
ef
128.118 272.2 mo
128.118 270.544 126.774 269.2 125.118 269.2 cv
123.462 269.2 122.118 270.544 122.118 272.2 cv
122.118 273.855 123.462 275.2 125.118 275.2 cv
126.774 275.2 128.118 273.855 128.118 272.2 cv
ef
120.678 266.2 mo
120.678 264.544 119.333 263.2 117.678 263.2 cv
116.021 263.2 114.678 264.544 114.678 266.2 cv
114.678 267.855 116.021 269.2 117.678 269.2 cv
119.333 269.2 120.678 267.855 120.678 266.2 cv
ef
113.238 259.24 mo
113.238 257.584 111.894 256.24 110.238 256.24 cv
108.582 256.24 107.238 257.584 107.238 259.24 cv
107.238 260.896 108.582 262.24 110.238 262.24 cv
111.894 262.24 113.238 260.896 113.238 259.24 cv
ef
105.558 252.28 mo
105.558 250.624 104.214 249.28 102.558 249.28 cv
100.902 249.28 99.5576 250.624 99.5576 252.28 cv
99.5576 253.936 100.902 255.28 102.558 255.28 cv
104.214 255.28 105.558 253.936 105.558 252.28 cv
ef
98.1177 242.92 mo
98.1177 241.264 96.7739 239.92 95.1177 239.92 cv
93.4619 239.92 92.1177 241.264 92.1177 242.92 cv
92.1177 244.576 93.4619 245.92 95.1177 245.92 cv
96.7739 245.92 98.1177 244.576 98.1177 242.92 cv
ef
90.4375 237.88 mo
90.4375 236.224 89.0938 234.88 87.4375 234.88 cv
85.7817 234.88 84.4375 236.224 84.4375 237.88 cv
84.4375 239.536 85.7817 240.88 87.4375 240.88 cv
89.0938 240.88 90.4375 239.536 90.4375 237.88 cv
ef
82.9976 232.6 mo
82.9976 230.944 81.6538 229.6 79.9976 229.6 cv
78.3418 229.6 76.9976 230.944 76.9976 232.6 cv
76.9976 234.256 78.3418 235.6 79.9976 235.6 cv
81.6538 235.6 82.9976 234.256 82.9976 232.6 cv
ef
75.3179 233.8 mo
75.3179 232.144 73.9736 230.8 72.3179 230.8 cv
70.6616 230.8 69.3179 232.144 69.3179 233.8 cv
69.3179 235.456 70.6616 236.8 72.3179 236.8 cv
73.9736 236.8 75.3179 235.456 75.3179 233.8 cv
ef
67.8779 240.88 mo
67.8779 239.224 66.5337 237.88 64.8779 237.88 cv
63.2217 237.88 61.8779 239.224 61.8779 240.88 cv
61.8779 242.536 63.2217 243.88 64.8779 243.88 cv
66.5337 243.88 67.8779 242.536 67.8779 240.88 cv
ef
60.4375 247.479 mo
60.4375 245.824 59.0938 244.479 57.4375 244.479 cv
55.7817 244.479 54.4375 245.824 54.4375 247.479 cv
54.4375 249.136 55.7817 250.479 57.4375 250.479 cv
59.0938 250.479 60.4375 249.136 60.4375 247.479 cv
ef
202.388 297.38 mo
203.888 297.38 li
@
203.938 303.557 mo
204.938 302.557 li
204.938 207.057 li
353.938 207.057 li
354.938 206.057 li
203.938 206.057 li
203.938 303.557 li
1 1 1 rgb
ef
203.938 303.557 mo
354.938 303.557 li
203.938 303.557 mo
203.938 206.057 li
354.938 206.057 li
354.938 303.557 li
203.938 303.557 li
cp
0 0 0 rgb
@
354.938 300.807 mo
354.938 303.557 li
351.188 302.057 mo
351.188 303.557 li
347.438 302.057 mo
347.438 303.557 li
343.438 302.057 mo
343.438 303.557 li
339.688 300.807 mo
339.688 303.557 li
335.938 302.057 mo
335.938 303.557 li
332.188 302.057 mo
332.188 303.557 li
328.438 302.057 mo
328.438 303.557 li
324.688 300.807 mo
324.688 303.557 li
320.938 302.057 mo
320.938 303.557 li
317.188 302.057 mo
317.188 303.557 li
313.438 302.057 mo
313.438 303.557 li
309.688 300.807 mo
309.688 303.557 li
305.688 302.057 mo
305.688 303.557 li
301.938 302.057 mo
301.938 303.557 li
298.188 302.057 mo
298.188 303.557 li
294.438 300.807 mo
294.438 303.557 li
290.688 302.057 mo
290.688 303.557 li
286.938 302.057 mo
286.938 303.557 li
283.188 302.057 mo
283.188 303.557 li
279.438 300.807 mo
279.438 303.557 li
275.688 302.057 mo
275.688 303.557 li
271.938 302.057 mo
271.938 303.557 li
267.938 302.057 mo
267.938 303.557 li
264.188 300.807 mo
264.188 303.557 li
260.438 302.057 mo
260.438 303.557 li
256.688 302.057 mo
256.688 303.557 li
252.938 302.057 mo
252.938 303.557 li
249.188 300.807 mo
249.188 303.557 li
245.438 302.057 mo
245.438 303.557 li
241.688 302.057 mo
241.688 303.557 li
237.938 302.057 mo
237.938 303.557 li
233.938 300.807 mo
233.938 303.557 li
230.188 302.057 mo
230.188 303.557 li
226.438 302.057 mo
226.438 303.557 li
222.688 302.057 mo
222.688 303.557 li
218.938 300.807 mo
218.938 303.557 li
215.188 302.057 mo
215.188 303.557 li
211.438 302.057 mo
211.438 303.557 li
207.688 302.057 mo
207.688 303.557 li
203.938 300.807 mo
203.938 303.557 li
@
203.938 303.557 mo
203.938 206.057 li
@
208.438 206.057 mo
203.938 206.057 li
206.188 300.557 mo
203.938 300.557 li
208.438 297.557 mo
203.938 297.557 li
208.438 206.057 mo
203.938 206.057 li
206.188 209.057 mo
203.938 209.057 li
206.188 212.307 mo
203.938 212.307 li
206.188 215.307 mo
203.938 215.307 li
206.188 218.307 mo
203.938 218.307 li
208.438 221.307 mo
203.938 221.307 li
206.188 224.307 mo
203.938 224.307 li
206.188 227.557 mo
203.938 227.557 li
206.188 230.557 mo
203.938 230.557 li
206.188 233.557 mo
203.938 233.557 li
208.438 236.557 mo
203.938 236.557 li
206.188 239.557 mo
203.938 239.557 li
206.188 242.807 mo
203.938 242.807 li
206.188 245.807 mo
203.938 245.807 li
206.188 248.807 mo
203.938 248.807 li
208.438 251.807 mo
203.938 251.807 li
206.188 254.807 mo
203.938 254.807 li
206.188 257.807 mo
203.938 257.807 li
206.188 261.057 mo
203.938 261.057 li
206.188 264.057 mo
203.938 264.057 li
208.438 267.057 mo
203.938 267.057 li
206.188 270.057 mo
203.938 270.057 li
206.188 273.057 mo
203.938 273.057 li
206.188 276.307 mo
203.938 276.307 li
206.188 279.307 mo
203.938 279.307 li
208.438 282.307 mo
203.938 282.307 li
206.188 285.307 mo
203.938 285.307 li
206.188 288.307 mo
203.938 288.307 li
206.188 291.557 mo
203.938 291.557 li
206.188 294.557 mo
203.938 294.557 li
208.438 297.557 mo
203.938 297.557 li
@
354.148 297.566 mo
354.148 295.91 352.805 294.566 351.148 294.566 cv
349.492 294.566 348.148 295.91 348.148 297.566 cv
348.148 299.223 349.492 300.566 351.148 300.566 cv
352.805 300.566 354.148 299.223 354.148 297.566 cv
1 0 0 rgb
ef
346.469 297.566 mo
346.469 295.91 345.124 294.566 343.469 294.566 cv
341.813 294.566 340.469 295.91 340.469 297.566 cv
340.469 299.223 341.813 300.566 343.469 300.566 cv
345.124 300.566 346.469 299.223 346.469 297.566 cv
ef
339.028 297.088 mo
339.028 295.432 337.685 294.088 336.028 294.088 cv
334.372 294.088 333.028 295.432 333.028 297.088 cv
333.028 298.742 334.372 300.088 336.028 300.088 cv
337.685 300.088 339.028 298.742 339.028 297.088 cv
ef
331.349 295.887 mo
331.349 294.23 330.005 292.887 328.349 292.887 cv
326.692 292.887 325.349 294.23 325.349 295.887 cv
325.349 297.543 326.692 298.887 328.349 298.887 cv
330.005 298.887 331.349 297.543 331.349 295.887 cv
ef
323.908 294.447 mo
323.908 292.791 322.564 291.447 320.908 291.447 cv
319.253 291.447 317.908 292.791 317.908 294.447 cv
317.908 296.104 319.253 297.447 320.908 297.447 cv
322.564 297.447 323.908 296.104 323.908 294.447 cv
ef
316.469 292.287 mo
316.469 290.631 315.124 289.287 313.469 289.287 cv
311.813 289.287 310.469 290.631 310.469 292.287 cv
310.469 293.943 311.813 295.287 313.469 295.287 cv
315.124 295.287 316.469 293.943 316.469 292.287 cv
ef
308.788 290.127 mo
308.788 288.471 307.444 287.127 305.788 287.127 cv
304.133 287.127 302.788 288.471 302.788 290.127 cv
302.788 291.783 304.133 293.127 305.788 293.127 cv
307.444 293.127 308.788 291.783 308.788 290.127 cv
ef
301.108 286.527 mo
301.108 284.871 299.765 283.527 298.108 283.527 cv
296.452 283.527 295.108 284.871 295.108 286.527 cv
295.108 288.184 296.452 289.527 298.108 289.527 cv
299.765 289.527 301.108 288.184 301.108 286.527 cv
ef
293.669 282.207 mo
293.669 280.551 292.324 279.207 290.669 279.207 cv
289.013 279.207 287.669 280.551 287.669 282.207 cv
287.669 283.863 289.013 285.207 290.669 285.207 cv
292.324 285.207 293.669 283.863 293.669 282.207 cv
ef
286.229 277.406 mo
286.229 275.752 284.885 274.406 283.229 274.406 cv
281.572 274.406 280.229 275.752 280.229 277.406 cv
280.229 279.063 281.572 280.406 283.229 280.406 cv
284.885 280.406 286.229 279.063 286.229 277.406 cv
ef
278.789 271.646 mo
278.789 269.99 277.444 268.646 275.789 268.646 cv
274.132 268.646 272.789 269.99 272.789 271.646 cv
272.789 273.303 274.132 274.646 275.789 274.646 cv
277.444 274.646 278.789 273.303 278.789 271.646 cv
ef
270.869 267.326 mo
270.869 265.672 269.524 264.326 267.869 264.326 cv
266.212 264.326 264.869 265.672 264.869 267.326 cv
264.869 268.982 266.212 270.326 267.869 270.326 cv
269.524 270.326 270.869 268.982 270.869 267.326 cv
ef
263.429 259.646 mo
263.429 257.99 262.084 256.646 260.429 256.646 cv
258.772 256.646 257.429 257.99 257.429 259.646 cv
257.429 261.303 258.772 262.646 260.429 262.646 cv
262.084 262.646 263.429 261.303 263.429 259.646 cv
ef
255.988 251.008 mo
255.988 249.352 254.645 248.008 252.988 248.008 cv
251.333 248.008 249.988 249.352 249.988 251.008 cv
249.988 252.664 251.333 254.008 252.988 254.008 cv
254.645 254.008 255.988 252.664 255.988 251.008 cv
ef
248.548 244.287 mo
248.548 242.631 247.205 241.287 245.548 241.287 cv
243.893 241.287 242.548 242.631 242.548 244.287 cv
242.548 245.943 243.893 247.287 245.548 247.287 cv
247.205 247.287 248.548 245.943 248.548 244.287 cv
ef
240.869 239.008 mo
240.869 237.352 239.524 236.008 237.869 236.008 cv
236.212 236.008 234.869 237.352 234.869 239.008 cv
234.869 240.664 236.212 242.008 237.869 242.008 cv
239.524 242.008 240.869 240.664 240.869 239.008 cv
ef
233.188 235.887 mo
233.188 234.23 231.845 232.887 230.188 232.887 cv
228.532 232.887 227.188 234.23 227.188 235.887 cv
227.188 237.543 228.532 238.887 230.188 238.887 cv
231.845 238.887 233.188 237.543 233.188 235.887 cv
ef
225.749 233.967 mo
225.749 232.311 224.404 230.967 222.749 230.967 cv
221.092 230.967 219.749 232.311 219.749 233.967 cv
219.749 235.623 221.092 236.967 222.749 236.967 cv
224.404 236.967 225.749 235.623 225.749 233.967 cv
ef
218.068 242.607 mo
218.068 240.951 216.725 239.607 215.068 239.607 cv
213.413 239.607 212.068 240.951 212.068 242.607 cv
212.068 244.264 213.413 245.607 215.068 245.607 cv
216.725 245.607 218.068 244.264 218.068 242.607 cv
ef
210.628 246.207 mo
210.628 244.551 209.285 243.207 207.628 243.207 cv
205.973 243.207 204.628 244.551 204.628 246.207 cv
204.628 247.863 205.973 249.207 207.628 249.207 cv
209.285 249.207 210.628 247.863 210.628 246.207 cv
ef
352.938 297.307 mo
354.188 297.307 li
@
203.938 297.557 mo
354.938 297.557 li
0 0 0 rgb
@
351.188 295.307 mo
348.938 295.307 li
348.938 299.807 li
353.438 299.807 li
353.438 295.307 li
351.188 295.307 li
cp
0 0 1 rgb
ef
343.438 295.307 mo
341.188 295.307 li
341.188 299.807 li
345.688 299.807 li
345.688 295.307 li
343.438 295.307 li
cp
ef
335.938 295.057 mo
333.688 295.057 li
333.688 299.557 li
338.188 299.557 li
338.188 295.057 li
335.938 295.057 li
cp
ef
328.438 295.557 mo
326.188 295.557 li
326.188 300.057 li
330.688 300.057 li
330.688 295.557 li
328.438 295.557 li
cp
ef
320.938 295.307 mo
318.688 295.307 li
318.688 299.807 li
323.188 299.807 li
323.188 295.307 li
320.938 295.307 li
cp
ef
313.438 295.557 mo
311.188 295.557 li
311.188 300.057 li
315.688 300.057 li
315.688 295.557 li
313.438 295.557 li
cp
ef
305.688 295.057 mo
303.438 295.057 li
303.438 299.557 li
307.938 299.557 li
307.938 295.057 li
305.688 295.057 li
cp
ef
298.188 295.057 mo
295.938 295.057 li
295.938 299.557 li
300.438 299.557 li
300.438 295.057 li
298.188 295.057 li
cp
ef
290.688 294.807 mo
288.438 294.807 li
288.438 299.307 li
292.938 299.307 li
292.938 294.807 li
290.688 294.807 li
cp
ef
283.188 295.557 mo
280.938 295.557 li
280.938 300.057 li
285.438 300.057 li
285.438 295.557 li
283.188 295.557 li
cp
ef
275.688 296.307 mo
273.438 296.307 li
273.438 300.807 li
277.938 300.807 li
277.938 296.307 li
275.688 296.307 li
cp
ef
267.938 295.057 mo
265.688 295.057 li
265.688 299.557 li
270.188 299.557 li
270.188 295.057 li
267.938 295.057 li
cp
ef
260.438 295.307 mo
258.188 295.307 li
258.188 299.807 li
262.688 299.807 li
262.688 295.307 li
260.438 295.307 li
cp
ef
252.938 296.057 mo
250.688 296.057 li
250.688 300.557 li
255.188 300.557 li
255.188 296.057 li
252.938 296.057 li
cp
ef
245.438 294.057 mo
243.188 294.057 li
243.188 298.557 li
247.688 298.557 li
247.688 294.057 li
245.438 294.057 li
cp
ef
237.938 295.057 mo
235.688 295.057 li
235.688 299.557 li
240.188 299.557 li
240.188 295.057 li
237.938 295.057 li
cp
ef
230.188 296.057 mo
227.938 296.057 li
227.938 300.557 li
232.438 300.557 li
232.438 296.057 li
230.188 296.057 li
cp
ef
222.688 295.057 mo
220.438 295.057 li
220.438 299.557 li
224.938 299.557 li
224.938 295.057 li
222.688 295.057 li
cp
ef
215.188 294.557 mo
212.938 294.557 li
212.938 299.057 li
217.438 299.057 li
217.438 294.557 li
215.188 294.557 li
cp
ef
207.688 294.307 mo
205.438 294.307 li
205.438 298.807 li
209.938 298.807 li
209.938 294.307 li
207.688 294.307 li
cp
ef
210.628 238.287 mo
210.628 236.631 209.285 235.287 207.628 235.287 cv
205.973 235.287 204.628 236.631 204.628 238.287 cv
204.628 239.943 205.973 241.287 207.628 241.287 cv
209.285 241.287 210.628 239.943 210.628 238.287 cv
218.068 241.406 mo
218.068 239.752 216.725 238.406 215.068 238.406 cv
213.413 238.406 212.068 239.752 212.068 241.406 cv
212.068 243.063 213.413 244.406 215.068 244.406 cv
216.725 244.406 218.068 243.063 218.068 241.406 cv
225.749 244.527 mo
225.749 242.871 224.404 241.527 222.749 241.527 cv
221.092 241.527 219.749 242.871 219.749 244.527 cv
219.749 246.184 221.092 247.527 222.749 247.527 cv
224.404 247.527 225.749 246.184 225.749 244.527 cv
233.188 246.447 mo
233.188 244.791 231.845 243.447 230.188 243.447 cv
228.532 243.447 227.188 244.791 227.188 246.447 cv
227.188 248.104 228.532 249.447 230.188 249.447 cv
231.845 249.447 233.188 248.104 233.188 246.447 cv
240.869 251.727 mo
240.869 250.07 239.524 248.727 237.869 248.727 cv
236.212 248.727 234.869 250.07 234.869 251.727 cv
234.869 253.383 236.212 254.727 237.869 254.727 cv
239.524 254.727 240.869 253.383 240.869 251.727 cv
248.548 255.807 mo
248.548 254.15 247.205 252.807 245.548 252.807 cv
243.893 252.807 242.548 254.15 242.548 255.807 cv
242.548 257.463 243.893 258.807 245.548 258.807 cv
247.205 258.807 248.548 257.463 248.548 255.807 cv
255.988 259.406 mo
255.988 257.752 254.645 256.406 252.988 256.406 cv
251.333 256.406 249.988 257.752 249.988 259.406 cv
249.988 261.063 251.333 262.406 252.988 262.406 cv
254.645 262.406 255.988 261.063 255.988 259.406 cv
263.429 262.768 mo
263.429 261.111 262.084 259.768 260.429 259.768 cv
258.772 259.768 257.429 261.111 257.429 262.768 cv
257.429 264.424 258.772 265.768 260.429 265.768 cv
262.084 265.768 263.429 264.424 263.429 262.768 cv
270.869 265.168 mo
270.869 263.512 269.524 262.168 267.869 262.168 cv
266.212 262.168 264.869 263.512 264.869 265.168 cv
264.869 266.822 266.212 268.168 267.869 268.168 cv
269.524 268.168 270.869 266.822 270.869 265.168 cv
278.789 269.248 mo
278.789 267.592 277.444 266.248 275.789 266.248 cv
274.132 266.248 272.789 267.592 272.789 269.248 cv
272.789 270.902 274.132 272.248 275.789 272.248 cv
277.444 272.248 278.789 270.902 278.789 269.248 cv
286.229 272.607 mo
286.229 270.951 284.885 269.607 283.229 269.607 cv
281.572 269.607 280.229 270.951 280.229 272.607 cv
280.229 274.264 281.572 275.607 283.229 275.607 cv
284.885 275.607 286.229 274.264 286.229 272.607 cv
293.669 275.486 mo
293.669 273.832 292.324 272.486 290.669 272.486 cv
289.013 272.486 287.669 273.832 287.669 275.486 cv
287.669 277.143 289.013 278.486 290.669 278.486 cv
292.324 278.486 293.669 277.143 293.669 275.486 cv
301.108 279.566 mo
301.108 277.91 299.765 276.566 298.108 276.566 cv
296.452 276.566 295.108 277.91 295.108 279.566 cv
295.108 281.223 296.452 282.566 298.108 282.566 cv
299.765 282.566 301.108 281.223 301.108 279.566 cv
308.788 281.967 mo
308.788 280.311 307.444 278.967 305.788 278.967 cv
304.133 278.967 302.788 280.311 302.788 281.967 cv
302.788 283.623 304.133 284.967 305.788 284.967 cv
307.444 284.967 308.788 283.623 308.788 281.967 cv
316.469 286.047 mo
316.469 284.391 315.124 283.047 313.469 283.047 cv
311.813 283.047 310.469 284.391 310.469 286.047 cv
310.469 287.703 311.813 289.047 313.469 289.047 cv
315.124 289.047 316.469 287.703 316.469 286.047 cv
323.908 289.646 mo
323.908 287.99 322.564 286.646 320.908 286.646 cv
319.253 286.646 317.908 287.99 317.908 289.646 cv
317.908 291.303 319.253 292.646 320.908 292.646 cv
322.564 292.646 323.908 291.303 323.908 289.646 cv
331.349 292.527 mo
331.349 290.871 330.005 289.527 328.349 289.527 cv
326.692 289.527 325.349 290.871 325.349 292.527 cv
325.349 294.184 326.692 295.527 328.349 295.527 cv
330.005 295.527 331.349 294.184 331.349 292.527 cv
339.028 295.646 mo
339.028 293.99 337.685 292.646 336.028 292.646 cv
334.372 292.646 333.028 293.99 333.028 295.646 cv
333.028 297.303 334.372 298.646 336.028 298.646 cv
337.685 298.646 339.028 297.303 339.028 295.646 cv
346.469 297.088 mo
346.469 295.432 345.124 294.088 343.469 294.088 cv
341.813 294.088 340.469 295.432 340.469 297.088 cv
340.469 298.742 341.813 300.088 343.469 300.088 cv
345.124 300.088 346.469 298.742 346.469 297.088 cv
354.148 297.566 mo
354.148 295.91 352.805 294.566 351.148 294.566 cv
349.492 294.566 348.148 295.91 348.148 297.566 cv
348.148 299.223 349.492 300.566 351.148 300.566 cv
352.805 300.566 354.148 299.223 354.148 297.566 cv
0 .4 0 rgb
@
354.148 297.566 mo
354.148 295.91 352.805 294.566 351.148 294.566 cv
349.492 294.566 348.148 295.91 348.148 297.566 cv
348.148 299.223 349.492 300.566 351.148 300.566 cv
352.805 300.566 354.148 299.223 354.148 297.566 cv
1 0 0 rgb
ef
346.469 297.566 mo
346.469 295.91 345.124 294.566 343.469 294.566 cv
341.813 294.566 340.469 295.91 340.469 297.566 cv
340.469 299.223 341.813 300.566 343.469 300.566 cv
345.124 300.566 346.469 299.223 346.469 297.566 cv
ef
339.028 297.088 mo
339.028 295.432 337.685 294.088 336.028 294.088 cv
334.372 294.088 333.028 295.432 333.028 297.088 cv
333.028 298.742 334.372 300.088 336.028 300.088 cv
337.685 300.088 339.028 298.742 339.028 297.088 cv
ef
331.349 295.887 mo
331.349 294.23 330.005 292.887 328.349 292.887 cv
326.692 292.887 325.349 294.23 325.349 295.887 cv
325.349 297.543 326.692 298.887 328.349 298.887 cv
330.005 298.887 331.349 297.543 331.349 295.887 cv
ef
323.908 294.447 mo
323.908 292.791 322.564 291.447 320.908 291.447 cv
319.253 291.447 317.908 292.791 317.908 294.447 cv
317.908 296.104 319.253 297.447 320.908 297.447 cv
322.564 297.447 323.908 296.104 323.908 294.447 cv
ef
316.469 292.287 mo
316.469 290.631 315.124 289.287 313.469 289.287 cv
311.813 289.287 310.469 290.631 310.469 292.287 cv
310.469 293.943 311.813 295.287 313.469 295.287 cv
315.124 295.287 316.469 293.943 316.469 292.287 cv
ef
308.788 290.127 mo
308.788 288.471 307.444 287.127 305.788 287.127 cv
304.133 287.127 302.788 288.471 302.788 290.127 cv
302.788 291.783 304.133 293.127 305.788 293.127 cv
307.444 293.127 308.788 291.783 308.788 290.127 cv
ef
301.108 286.527 mo
301.108 284.871 299.765 283.527 298.108 283.527 cv
296.452 283.527 295.108 284.871 295.108 286.527 cv
295.108 288.184 296.452 289.527 298.108 289.527 cv
299.765 289.527 301.108 288.184 301.108 286.527 cv
ef
293.669 282.207 mo
293.669 280.551 292.324 279.207 290.669 279.207 cv
289.013 279.207 287.669 280.551 287.669 282.207 cv
287.669 283.863 289.013 285.207 290.669 285.207 cv
292.324 285.207 293.669 283.863 293.669 282.207 cv
ef
286.229 277.406 mo
286.229 275.752 284.885 274.406 283.229 274.406 cv
281.572 274.406 280.229 275.752 280.229 277.406 cv
280.229 279.063 281.572 280.406 283.229 280.406 cv
284.885 280.406 286.229 279.063 286.229 277.406 cv
ef
278.789 271.646 mo
278.789 269.99 277.444 268.646 275.789 268.646 cv
274.132 268.646 272.789 269.99 272.789 271.646 cv
272.789 273.303 274.132 274.646 275.789 274.646 cv
277.444 274.646 278.789 273.303 278.789 271.646 cv
ef
270.869 267.326 mo
270.869 265.672 269.524 264.326 267.869 264.326 cv
266.212 264.326 264.869 265.672 264.869 267.326 cv
264.869 268.982 266.212 270.326 267.869 270.326 cv
269.524 270.326 270.869 268.982 270.869 267.326 cv
ef
263.429 259.646 mo
263.429 257.99 262.084 256.646 260.429 256.646 cv
258.772 256.646 257.429 257.99 257.429 259.646 cv
257.429 261.303 258.772 262.646 260.429 262.646 cv
262.084 262.646 263.429 261.303 263.429 259.646 cv
ef
255.988 251.008 mo
255.988 249.352 254.645 248.008 252.988 248.008 cv
251.333 248.008 249.988 249.352 249.988 251.008 cv
249.988 252.664 251.333 254.008 252.988 254.008 cv
254.645 254.008 255.988 252.664 255.988 251.008 cv
ef
248.548 244.287 mo
248.548 242.631 247.205 241.287 245.548 241.287 cv
243.893 241.287 242.548 242.631 242.548 244.287 cv
242.548 245.943 243.893 247.287 245.548 247.287 cv
247.205 247.287 248.548 245.943 248.548 244.287 cv
ef
240.869 239.008 mo
240.869 237.352 239.524 236.008 237.869 236.008 cv
236.212 236.008 234.869 237.352 234.869 239.008 cv
234.869 240.664 236.212 242.008 237.869 242.008 cv
239.524 242.008 240.869 240.664 240.869 239.008 cv
ef
233.188 235.887 mo
233.188 234.23 231.845 232.887 230.188 232.887 cv
228.532 232.887 227.188 234.23 227.188 235.887 cv
227.188 237.543 228.532 238.887 230.188 238.887 cv
231.845 238.887 233.188 237.543 233.188 235.887 cv
ef
225.749 233.967 mo
225.749 232.311 224.404 230.967 222.749 230.967 cv
221.092 230.967 219.749 232.311 219.749 233.967 cv
219.749 235.623 221.092 236.967 222.749 236.967 cv
224.404 236.967 225.749 235.623 225.749 233.967 cv
ef
218.068 242.607 mo
218.068 240.951 216.725 239.607 215.068 239.607 cv
213.413 239.607 212.068 240.951 212.068 242.607 cv
212.068 244.264 213.413 245.607 215.068 245.607 cv
216.725 245.607 218.068 244.264 218.068 242.607 cv
ef
210.628 246.207 mo
210.628 244.551 209.285 243.207 207.628 243.207 cv
205.973 243.207 204.628 244.551 204.628 246.207 cv
204.628 247.863 205.973 249.207 207.628 249.207 cv
209.285 249.207 210.628 247.863 210.628 246.207 cv
ef
352.938 297.307 mo
354.188 297.307 li
@
354.642 303.186 mo
355.642 302.186 li
355.642 206.686 li
505.142 206.686 li
506.142 205.686 li
354.642 205.686 li
354.642 303.186 li
1 1 1 rgb
ef
354.642 303.186 mo
506.142 303.186 li
354.642 303.186 mo
354.642 205.686 li
506.142 205.686 li
506.142 303.186 li
354.642 303.186 li
cp
0 0 0 rgb
@
506.142 300.436 mo
506.142 303.186 li
502.392 301.686 mo
502.392 303.186 li
498.642 301.686 mo
498.642 303.186 li
494.892 301.686 mo
494.892 303.186 li
490.892 300.436 mo
490.892 303.186 li
487.142 301.686 mo
487.142 303.186 li
483.392 301.686 mo
483.392 303.186 li
479.642 301.686 mo
479.642 303.186 li
475.892 300.436 mo
475.892 303.186 li
472.142 301.686 mo
472.142 303.186 li
468.142 301.686 mo
468.142 303.186 li
464.392 301.686 mo
464.392 303.186 li
460.642 300.436 mo
460.642 303.186 li
456.892 301.686 mo
456.892 303.186 li
453.142 301.686 mo
453.142 303.186 li
449.392 301.686 mo
449.392 303.186 li
445.642 300.436 mo
445.642 303.186 li
441.642 301.686 mo
441.642 303.186 li
437.892 301.686 mo
437.892 303.186 li
434.142 301.686 mo
434.142 303.186 li
430.392 300.436 mo
430.392 303.186 li
426.642 301.686 mo
426.642 303.186 li
422.892 301.686 mo
422.892 303.186 li
419.142 301.686 mo
419.142 303.186 li
415.142 300.436 mo
415.142 303.186 li
411.392 301.686 mo
411.392 303.186 li
407.642 301.686 mo
407.642 303.186 li
403.892 301.686 mo
403.892 303.186 li
400.142 300.436 mo
400.142 303.186 li
396.392 301.686 mo
396.392 303.186 li
392.642 301.686 mo
392.642 303.186 li
388.642 301.686 mo
388.642 303.186 li
384.892 300.436 mo
384.892 303.186 li
381.142 301.686 mo
381.142 303.186 li
377.392 301.686 mo
377.392 303.186 li
373.642 301.686 mo
373.642 303.186 li
369.892 300.436 mo
369.892 303.186 li
365.892 301.686 mo
365.892 303.186 li
362.142 301.686 mo
362.142 303.186 li
358.392 301.686 mo
358.392 303.186 li
354.642 300.436 mo
354.642 303.186 li
@
354.642 303.186 mo
354.642 205.686 li
@
359.142 205.686 mo
354.642 205.686 li
356.892 300.186 mo
354.642 300.186 li
359.142 297.186 mo
354.642 297.186 li
359.142 205.686 mo
354.642 205.686 li
356.892 208.686 mo
354.642 208.686 li
356.892 211.936 mo
354.642 211.936 li
356.892 214.936 mo
354.642 214.936 li
356.892 217.936 mo
354.642 217.936 li
359.142 220.936 mo
354.642 220.936 li
356.892 223.936 mo
354.642 223.936 li
356.892 227.186 mo
354.642 227.186 li
356.892 230.186 mo
354.642 230.186 li
356.892 233.186 mo
354.642 233.186 li
359.142 236.186 mo
354.642 236.186 li
356.892 239.186 mo
354.642 239.186 li
356.892 242.436 mo
354.642 242.436 li
356.892 245.436 mo
354.642 245.436 li
356.892 248.436 mo
354.642 248.436 li
359.142 251.436 mo
354.642 251.436 li
356.892 254.436 mo
354.642 254.436 li
356.892 257.436 mo
354.642 257.436 li
356.892 260.686 mo
354.642 260.686 li
356.892 263.686 mo
354.642 263.686 li
359.142 266.686 mo
354.642 266.686 li
356.892 269.686 mo
354.642 269.686 li
356.892 272.686 mo
354.642 272.686 li
356.892 275.936 mo
354.642 275.936 li
356.892 278.936 mo
354.642 278.936 li
359.142 281.936 mo
354.642 281.936 li
356.892 284.936 mo
354.642 284.936 li
356.892 287.936 mo
354.642 287.936 li
356.892 291.186 mo
354.642 291.186 li
356.892 294.186 mo
354.642 294.186 li
359.142 297.186 mo
354.642 297.186 li
@
505.462 297.195 mo
505.462 295.539 504.117 294.195 502.462 294.195 cv
500.806 294.195 499.462 295.539 499.462 297.195 cv
499.462 298.852 500.806 300.195 502.462 300.195 cv
504.117 300.195 505.462 298.852 505.462 297.195 cv
1 0 0 rgb
ef
497.781 296.955 mo
497.781 295.301 496.438 293.955 494.781 293.955 cv
493.126 293.955 491.781 295.301 491.781 296.955 cv
491.781 298.611 493.126 299.955 494.781 299.955 cv
496.438 299.955 497.781 298.611 497.781 296.955 cv
ef
490.102 296.717 mo
490.102 295.061 488.758 293.717 487.102 293.717 cv
485.445 293.717 484.102 295.061 484.102 296.717 cv
484.102 298.371 485.445 299.717 487.102 299.717 cv
488.758 299.717 490.102 298.371 490.102 296.717 cv
ef
482.661 295.035 mo
482.661 293.381 481.317 292.035 479.661 292.035 cv
478.006 292.035 476.661 293.381 476.661 295.035 cv
476.661 296.691 478.006 298.035 479.661 298.035 cv
481.317 298.035 482.661 296.691 482.661 295.035 cv
ef
475.222 293.355 mo
475.222 291.699 473.878 290.355 472.222 290.355 cv
470.565 290.355 469.222 291.699 469.222 293.355 cv
469.222 295.012 470.565 296.355 472.222 296.355 cv
473.878 296.355 475.222 295.012 475.222 293.355 cv
ef
467.302 290.236 mo
467.302 288.58 465.958 287.236 464.302 287.236 cv
462.646 287.236 461.302 288.58 461.302 290.236 cv
461.302 291.893 462.646 293.236 464.302 293.236 cv
465.958 293.236 467.302 291.893 467.302 290.236 cv
ef
459.861 288.076 mo
459.861 286.42 458.518 285.076 456.861 285.076 cv
455.206 285.076 453.861 286.42 453.861 288.076 cv
453.861 289.732 455.206 291.076 456.861 291.076 cv
458.518 291.076 459.861 289.732 459.861 288.076 cv
ef
452.422 286.396 mo
452.422 284.74 451.077 283.396 449.422 283.396 cv
447.766 283.396 446.422 284.74 446.422 286.396 cv
446.422 288.053 447.766 289.396 449.422 289.396 cv
451.077 289.396 452.422 288.053 452.422 286.396 cv
ef
444.741 283.035 mo
444.741 281.381 443.397 280.035 441.741 280.035 cv
440.086 280.035 438.741 281.381 438.741 283.035 cv
438.741 284.691 440.086 286.035 441.741 286.035 cv
443.397 286.035 444.741 284.691 444.741 283.035 cv
ef
437.062 275.836 mo
437.062 274.18 435.718 272.836 434.062 272.836 cv
432.405 272.836 431.062 274.18 431.062 275.836 cv
431.062 277.492 432.405 278.836 434.062 278.836 cv
435.718 278.836 437.062 277.492 437.062 275.836 cv
ef
429.622 270.076 mo
429.622 268.42 428.277 267.076 426.622 267.076 cv
424.966 267.076 423.622 268.42 423.622 270.076 cv
423.622 271.732 424.966 273.076 426.622 273.076 cv
428.277 273.076 429.622 271.732 429.622 270.076 cv
ef
422.182 264.436 mo
422.182 262.779 420.838 261.436 419.182 261.436 cv
417.525 261.436 416.182 262.779 416.182 264.436 cv
416.182 266.092 417.525 267.436 419.182 267.436 cv
420.838 267.436 422.182 266.092 422.182 264.436 cv
ef
414.502 258.076 mo
414.502 256.42 413.157 255.076 411.502 255.076 cv
409.846 255.076 408.502 256.42 408.502 258.076 cv
408.502 259.732 409.846 261.076 411.502 261.076 cv
413.157 261.076 414.502 259.732 414.502 258.076 cv
ef
406.821 251.836 mo
406.821 250.18 405.478 248.836 403.821 248.836 cv
402.166 248.836 400.821 250.18 400.821 251.836 cv
400.821 253.492 402.166 254.836 403.821 254.836 cv
405.478 254.836 406.821 253.492 406.821 251.836 cv
ef
399.382 245.115 mo
399.382 243.461 398.038 242.115 396.382 242.115 cv
394.726 242.115 393.382 243.461 393.382 245.115 cv
393.382 246.771 394.726 248.115 396.382 248.115 cv
398.038 248.115 399.382 246.771 399.382 245.115 cv
ef
391.701 243.436 mo
391.701 241.779 390.357 240.436 388.701 240.436 cv
387.046 240.436 385.701 241.779 385.701 243.436 cv
385.701 245.092 387.046 246.436 388.701 246.436 cv
390.357 246.436 391.701 245.092 391.701 243.436 cv
ef
384.021 238.396 mo
384.021 236.74 382.678 235.396 381.021 235.396 cv
379.365 235.396 378.021 236.74 378.021 238.396 cv
378.021 240.053 379.365 241.396 381.021 241.396 cv
382.678 241.396 384.021 240.053 384.021 238.396 cv
ef
376.582 240.076 mo
376.582 238.42 375.237 237.076 373.582 237.076 cv
371.926 237.076 370.582 238.42 370.582 240.076 cv
370.582 241.732 371.926 243.076 373.582 243.076 cv
375.237 243.076 376.582 241.732 376.582 240.076 cv
ef
368.901 242.236 mo
368.901 240.58 367.558 239.236 365.901 239.236 cv
364.245 239.236 362.901 240.58 362.901 242.236 cv
362.901 243.893 364.245 245.236 365.901 245.236 cv
367.558 245.236 368.901 243.893 368.901 242.236 cv
ef
361.462 241.516 mo
361.462 239.859 360.117 238.516 358.462 238.516 cv
356.806 238.516 355.462 239.859 355.462 241.516 cv
355.462 243.172 356.806 244.516 358.462 244.516 cv
360.117 244.516 361.462 243.172 361.462 241.516 cv
ef
504.142 296.936 mo
505.392 296.936 li
@
354.642 297.186 mo
506.142 297.186 li
0 0 0 rgb
@
502.392 294.936 mo
500.142 294.936 li
500.142 299.436 li
504.642 299.436 li
504.642 294.936 li
502.392 294.936 li
cp
0 0 1 rgb
ef
494.892 294.936 mo
492.642 294.936 li
492.642 299.436 li
497.142 299.436 li
497.142 294.936 li
494.892 294.936 li
cp
ef
487.142 295.186 mo
484.892 295.186 li
484.892 299.686 li
489.392 299.686 li
489.392 295.186 li
487.142 295.186 li
cp
ef
479.642 295.436 mo
477.392 295.436 li
477.392 299.936 li
481.892 299.936 li
481.892 295.436 li
479.642 295.436 li
cp
ef
472.142 294.936 mo
469.892 294.936 li
469.892 299.436 li
474.392 299.436 li
474.392 294.936 li
472.142 294.936 li
cp
ef
464.392 294.186 mo
462.142 294.186 li
462.142 298.686 li
466.642 298.686 li
466.642 294.186 li
464.392 294.186 li
cp
ef
456.892 296.686 mo
454.642 296.686 li
454.642 301.186 li
459.142 301.186 li
459.142 296.686 li
456.892 296.686 li
cp
ef
449.392 295.436 mo
447.142 295.436 li
447.142 299.936 li
451.642 299.936 li
451.642 295.436 li
449.392 295.436 li
cp
ef
441.642 294.436 mo
439.392 294.436 li
439.392 298.936 li
443.892 298.936 li
443.892 294.436 li
441.642 294.436 li
cp
ef
434.142 295.936 mo
431.892 295.936 li
431.892 300.436 li
436.392 300.436 li
436.392 295.936 li
434.142 295.936 li
cp
ef
426.642 294.686 mo
424.392 294.686 li
424.392 299.186 li
428.892 299.186 li
428.892 294.686 li
426.642 294.686 li
cp
ef
419.142 295.436 mo
416.892 295.436 li
416.892 299.936 li
421.392 299.936 li
421.392 295.436 li
419.142 295.436 li
cp
ef
411.392 295.186 mo
409.142 295.186 li
409.142 299.686 li
413.642 299.686 li
413.642 295.186 li
411.392 295.186 li
cp
ef
403.892 294.686 mo
401.642 294.686 li
401.642 299.186 li
406.142 299.186 li
406.142 294.686 li
403.892 294.686 li
cp
ef
396.392 296.186 mo
394.142 296.186 li
394.142 300.686 li
398.642 300.686 li
398.642 296.186 li
396.392 296.186 li
cp
ef
388.642 295.436 mo
386.392 295.436 li
386.392 299.936 li
390.892 299.936 li
390.892 295.436 li
388.642 295.436 li
cp
ef
381.142 294.936 mo
378.892 294.936 li
378.892 299.436 li
383.392 299.436 li
383.392 294.936 li
381.142 294.936 li
cp
ef
373.642 293.936 mo
371.392 293.936 li
371.392 298.436 li
375.892 298.436 li
375.892 293.936 li
373.642 293.936 li
cp
ef
365.892 295.936 mo
363.642 295.936 li
363.642 300.436 li
368.142 300.436 li
368.142 295.936 li
365.892 295.936 li
cp
ef
358.392 294.186 mo
356.142 294.186 li
356.142 298.686 li
360.642 298.686 li
360.642 294.186 li
358.392 294.186 li
cp
ef
361.462 237.916 mo
361.462 236.26 360.117 234.916 358.462 234.916 cv
356.806 234.916 355.462 236.26 355.462 237.916 cv
355.462 239.572 356.806 240.916 358.462 240.916 cv
360.117 240.916 361.462 239.572 361.462 237.916 cv
368.901 241.516 mo
368.901 239.859 367.558 238.516 365.901 238.516 cv
364.245 238.516 362.901 239.859 362.901 241.516 cv
362.901 243.172 364.245 244.516 365.901 244.516 cv
367.558 244.516 368.901 243.172 368.901 241.516 cv
376.582 243.676 mo
376.582 242.02 375.237 240.676 373.582 240.676 cv
371.926 240.676 370.582 242.02 370.582 243.676 cv
370.582 245.332 371.926 246.676 373.582 246.676 cv
375.237 246.676 376.582 245.332 376.582 243.676 cv
384.021 247.275 mo
384.021 245.619 382.678 244.275 381.021 244.275 cv
379.365 244.275 378.021 245.619 378.021 247.275 cv
378.021 248.932 379.365 250.275 381.021 250.275 cv
382.678 250.275 384.021 248.932 384.021 247.275 cv
391.701 251.115 mo
391.701 249.461 390.357 248.115 388.701 248.115 cv
387.046 248.115 385.701 249.461 385.701 251.115 cv
385.701 252.771 387.046 254.115 388.701 254.115 cv
390.357 254.115 391.701 252.771 391.701 251.115 cv
399.382 256.637 mo
399.382 254.98 398.038 253.637 396.382 253.637 cv
394.726 253.637 393.382 254.98 393.382 256.637 cv
393.382 258.293 394.726 259.637 396.382 259.637 cv
398.038 259.637 399.382 258.293 399.382 256.637 cv
406.821 258.797 mo
406.821 257.141 405.478 255.797 403.821 255.797 cv
402.166 255.797 400.821 257.141 400.821 258.797 cv
400.821 260.451 402.166 261.797 403.821 261.797 cv
405.478 261.797 406.821 260.451 406.821 258.797 cv
414.502 263.596 mo
414.502 261.939 413.157 260.596 411.502 260.596 cv
409.846 260.596 408.502 261.939 408.502 263.596 cv
408.502 265.252 409.846 266.596 411.502 266.596 cv
413.157 266.596 414.502 265.252 414.502 263.596 cv
422.182 264.436 mo
422.182 262.779 420.838 261.436 419.182 261.436 cv
417.525 261.436 416.182 262.779 416.182 264.436 cv
416.182 266.092 417.525 267.436 419.182 267.436 cv
420.838 267.436 422.182 266.092 422.182 264.436 cv
429.622 271.035 mo
429.622 269.381 428.277 268.035 426.622 268.035 cv
424.966 268.035 423.622 269.381 423.622 271.035 cv
423.622 272.691 424.966 274.035 426.622 274.035 cv
428.277 274.035 429.622 272.691 429.622 271.035 cv
437.062 271.275 mo
437.062 269.619 435.718 268.275 434.062 268.275 cv
432.405 268.275 431.062 269.619 431.062 271.275 cv
431.062 272.932 432.405 274.275 434.062 274.275 cv
435.718 274.275 437.062 272.932 437.062 271.275 cv
444.741 276.076 mo
444.741 274.42 443.397 273.076 441.741 273.076 cv
440.086 273.076 438.741 274.42 438.741 276.076 cv
438.741 277.732 440.086 279.076 441.741 279.076 cv
443.397 279.076 444.741 277.732 444.741 276.076 cv
452.422 276.797 mo
452.422 275.141 451.077 273.797 449.422 273.797 cv
447.766 273.797 446.422 275.141 446.422 276.797 cv
446.422 278.451 447.766 279.797 449.422 279.797 cv
451.077 279.797 452.422 278.451 452.422 276.797 cv
459.861 283.035 mo
459.861 281.381 458.518 280.035 456.861 280.035 cv
455.206 280.035 453.861 281.381 453.861 283.035 cv
453.861 284.691 455.206 286.035 456.861 286.035 cv
458.518 286.035 459.861 284.691 459.861 283.035 cv
467.302 286.156 mo
467.302 284.5 465.958 283.156 464.302 283.156 cv
462.646 283.156 461.302 284.5 461.302 286.156 cv
461.302 287.813 462.646 289.156 464.302 289.156 cv
465.958 289.156 467.302 287.813 467.302 286.156 cv
475.222 288.797 mo
475.222 287.141 473.878 285.797 472.222 285.797 cv
470.565 285.797 469.222 287.141 469.222 288.797 cv
469.222 290.451 470.565 291.797 472.222 291.797 cv
473.878 291.797 475.222 290.451 475.222 288.797 cv
482.661 291.916 mo
482.661 290.26 481.317 288.916 479.661 288.916 cv
478.006 288.916 476.661 290.26 476.661 291.916 cv
476.661 293.572 478.006 294.916 479.661 294.916 cv
481.317 294.916 482.661 293.572 482.661 291.916 cv
490.102 294.797 mo
490.102 293.141 488.758 291.797 487.102 291.797 cv
485.445 291.797 484.102 293.141 484.102 294.797 cv
484.102 296.451 485.445 297.797 487.102 297.797 cv
488.758 297.797 490.102 296.451 490.102 294.797 cv
497.781 296.717 mo
497.781 295.061 496.438 293.717 494.781 293.717 cv
493.126 293.717 491.781 295.061 491.781 296.717 cv
491.781 298.371 493.126 299.717 494.781 299.717 cv
496.438 299.717 497.781 298.371 497.781 296.717 cv
505.462 297.195 mo
505.462 295.539 504.117 294.195 502.462 294.195 cv
500.806 294.195 499.462 295.539 499.462 297.195 cv
499.462 298.852 500.806 300.195 502.462 300.195 cv
504.117 300.195 505.462 298.852 505.462 297.195 cv
0 .4 0 rgb
@
505.462 297.195 mo
505.462 295.539 504.117 294.195 502.462 294.195 cv
500.806 294.195 499.462 295.539 499.462 297.195 cv
499.462 298.852 500.806 300.195 502.462 300.195 cv
504.117 300.195 505.462 298.852 505.462 297.195 cv
1 0 0 rgb
ef
497.781 296.955 mo
497.781 295.301 496.438 293.955 494.781 293.955 cv
493.126 293.955 491.781 295.301 491.781 296.955 cv
491.781 298.611 493.126 299.955 494.781 299.955 cv
496.438 299.955 497.781 298.611 497.781 296.955 cv
ef
490.102 296.717 mo
490.102 295.061 488.758 293.717 487.102 293.717 cv
485.445 293.717 484.102 295.061 484.102 296.717 cv
484.102 298.371 485.445 299.717 487.102 299.717 cv
488.758 299.717 490.102 298.371 490.102 296.717 cv
ef
482.661 295.035 mo
482.661 293.381 481.317 292.035 479.661 292.035 cv
478.006 292.035 476.661 293.381 476.661 295.035 cv
476.661 296.691 478.006 298.035 479.661 298.035 cv
481.317 298.035 482.661 296.691 482.661 295.035 cv
ef
475.222 293.355 mo
475.222 291.699 473.878 290.355 472.222 290.355 cv
470.565 290.355 469.222 291.699 469.222 293.355 cv
469.222 295.012 470.565 296.355 472.222 296.355 cv
473.878 296.355 475.222 295.012 475.222 293.355 cv
ef
467.302 290.236 mo
467.302 288.58 465.958 287.236 464.302 287.236 cv
462.646 287.236 461.302 288.58 461.302 290.236 cv
461.302 291.893 462.646 293.236 464.302 293.236 cv
465.958 293.236 467.302 291.893 467.302 290.236 cv
ef
459.861 288.076 mo
459.861 286.42 458.518 285.076 456.861 285.076 cv
455.206 285.076 453.861 286.42 453.861 288.076 cv
453.861 289.732 455.206 291.076 456.861 291.076 cv
458.518 291.076 459.861 289.732 459.861 288.076 cv
ef
452.422 286.396 mo
452.422 284.74 451.077 283.396 449.422 283.396 cv
447.766 283.396 446.422 284.74 446.422 286.396 cv
446.422 288.053 447.766 289.396 449.422 289.396 cv
451.077 289.396 452.422 288.053 452.422 286.396 cv
ef
444.741 283.035 mo
444.741 281.381 443.397 280.035 441.741 280.035 cv
440.086 280.035 438.741 281.381 438.741 283.035 cv
438.741 284.691 440.086 286.035 441.741 286.035 cv
443.397 286.035 444.741 284.691 444.741 283.035 cv
ef
437.062 275.836 mo
437.062 274.18 435.718 272.836 434.062 272.836 cv
432.405 272.836 431.062 274.18 431.062 275.836 cv
431.062 277.492 432.405 278.836 434.062 278.836 cv
435.718 278.836 437.062 277.492 437.062 275.836 cv
ef
429.622 270.076 mo
429.622 268.42 428.277 267.076 426.622 267.076 cv
424.966 267.076 423.622 268.42 423.622 270.076 cv
423.622 271.732 424.966 273.076 426.622 273.076 cv
428.277 273.076 429.622 271.732 429.622 270.076 cv
ef
422.182 264.436 mo
422.182 262.779 420.838 261.436 419.182 261.436 cv
417.525 261.436 416.182 262.779 416.182 264.436 cv
416.182 266.092 417.525 267.436 419.182 267.436 cv
420.838 267.436 422.182 266.092 422.182 264.436 cv
ef
414.502 258.076 mo
414.502 256.42 413.157 255.076 411.502 255.076 cv
409.846 255.076 408.502 256.42 408.502 258.076 cv
408.502 259.732 409.846 261.076 411.502 261.076 cv
413.157 261.076 414.502 259.732 414.502 258.076 cv
ef
406.821 251.836 mo
406.821 250.18 405.478 248.836 403.821 248.836 cv
402.166 248.836 400.821 250.18 400.821 251.836 cv
400.821 253.492 402.166 254.836 403.821 254.836 cv
405.478 254.836 406.821 253.492 406.821 251.836 cv
ef
399.382 245.115 mo
399.382 243.461 398.038 242.115 396.382 242.115 cv
394.726 242.115 393.382 243.461 393.382 245.115 cv
393.382 246.771 394.726 248.115 396.382 248.115 cv
398.038 248.115 399.382 246.771 399.382 245.115 cv
ef
391.701 243.436 mo
391.701 241.779 390.357 240.436 388.701 240.436 cv
387.046 240.436 385.701 241.779 385.701 243.436 cv
385.701 245.092 387.046 246.436 388.701 246.436 cv
390.357 246.436 391.701 245.092 391.701 243.436 cv
ef
384.021 238.396 mo
384.021 236.74 382.678 235.396 381.021 235.396 cv
379.365 235.396 378.021 236.74 378.021 238.396 cv
378.021 240.053 379.365 241.396 381.021 241.396 cv
382.678 241.396 384.021 240.053 384.021 238.396 cv
ef
376.582 240.076 mo
376.582 238.42 375.237 237.076 373.582 237.076 cv
371.926 237.076 370.582 238.42 370.582 240.076 cv
370.582 241.732 371.926 243.076 373.582 243.076 cv
375.237 243.076 376.582 241.732 376.582 240.076 cv
ef
368.901 242.236 mo
368.901 240.58 367.558 239.236 365.901 239.236 cv
364.245 239.236 362.901 240.58 362.901 242.236 cv
362.901 243.893 364.245 245.236 365.901 245.236 cv
367.558 245.236 368.901 243.893 368.901 242.236 cv
ef
361.462 241.516 mo
361.462 239.859 360.117 238.516 358.462 238.516 cv
356.806 238.516 355.462 239.859 355.462 241.516 cv
355.462 243.172 356.806 244.516 358.462 244.516 cv
360.117 244.516 361.462 243.172 361.462 241.516 cv
ef
504.142 296.936 mo
505.392 296.936 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 66 /B putdup 121 /y putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings10 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EWNBLA+Helvetica /Helvetica findfont ct_VMDictPut/EWNBLA+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three 14{/.notdef}rp /B 54{/.notdef}rp /y 134{/.notdef}rp]EWNBLA+Helvetica nfEWNBLA+Helvetica*1 [0 -18 -18 0 0 0 ]msf15.8403 168.452 mo(B\()[-12.0059 0 ]ysh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 68 /Deltagreek putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/Deltagreek <1C60D8A8C9B7D7E8D30894797D5AAF286B71BDFF6614E4B5AD120122FA30F5DFD5F63E0C3E5314> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EWNBLB+Symbol /Symbol findfont ct_VMDictPut/EWNBLB+Symbol*1 [68{/.notdef}rp /Deltagreek 187{/.notdef}rp]EWNBLB+Symbol nfEWNBLB+Symbol*1 [0 -18 -18 0 0 0 ]msf15.8403 150.452 mo(D)shEWNBLA+Helvetica*1 [0 -18 -18 0 0 0 ]msf15.8403 139.439 mo(y\))[-9 0 ]yshEWNBLA+Helvetica*1 [18 0 0 -18 0 0 ]msf40.5176 303.455 mo(0)sh25.5059 272.621 mo(0.1)sh25.5059 241.789 mo(0.2)sh25.5059 15.4551 mo(0.3)sh40.5176 205.455 mo(0)sh25.5059 174.623 mo(0.1)sh25.5059 143.789 mo(0.2)sh40.5176 107.789 mo(0)sh25.5059 76.9551 mo(0.1)sh25.5059 46.123 mo(0.2)shEWNBLB+Symbol*1 [18 0 0 -18 0 0 ]msf271.556 336.236 mo(D)shEWNBLA+Helvetica*1 [18 0 0 -18 0 0 ]msf282.569 336.236 mo(y)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginEWNBLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendEWNBLA+Helvetica /Encoding getdup 80 /P putdup 105 /i putdup 110 /n putdup 111 /o putdup 115 /s putpop%ADOEndSubsetFont
/EWNBLA+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three 14{/.notdef}rp /B 13{/.notdef}rp /P 24{/.notdef}rp /i 4{/.notdef}rp /n /o 3{/.notdef}rp /s 5{/.notdef}rp /y 134{/.notdef}rp]EWNBLA+Helvetica nfEWNBLA+Helvetica*1 [14 0 0 -14 0 0 ]msf106.475 29.7383 mo(Pions)shEWNBLA+Helvetica*1 [18 0 0 -18 0 0 ]msf494.389 318.739 mo(2.0)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginEWNBLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B59F85E959DC9E62959B5B049387399C5A88EDF2D5DFBD776DAFCB889B62AC98B872299D239B948311090C1C069798A7F20A8D7BE29B8C384DB55F663943C1B42044C054991C856F3C3AA085C2B4902C8215DC2701EFD5FA664B5C9C44640813B5AC440B37B70CE58EFC65A9AFC0BCC84F3CDC68795E4995966F74639212F5372957A607AD4B6B94BBB7C36A3A6EF325381FE12C0468B5DD1F216D01C174551A50AC78A5328CDA24DAC0484DFF3993D32A7CA064F169906996AA1E2F6A555998F55A1AFCE2776BEE589EC3162F968A180A5713C4537EF11B8529CE22F8373BC7632472323D1F8491B48E948870255C9E830736EE70F30EE309DFBBB8294CCC2BB5ECB81667BEB60155> |-/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendEWNBLA+Helvetica /Encoding getdup 37 /percent putdup 45 /hyphen putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putpop%ADOEndSubsetFont
/EWNBLA+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 13{/.notdef}rp /P 24{/.notdef}rp /i 4{/.notdef}rp /n /o 3{/.notdef}rp /s 5{/.notdef}rp /y 134{/.notdef}rp]EWNBLA+Helvetica nfEWNBLA+Helvetica*1 [14 0 0 -14 0 0 ]msf165.297 22.7383 mo(0-5%)sh308.511 22.7383 mo(5-10%)sh452.975 22.7383 mo(10-20%)sh149.725 120.488 mo(20-30%)sh300.725 120.488 mo(30-40%)sh452.975 120.488 mo(40-50%)sh149.725 218.238 mo(50-60%)sh300.725 218.238 mo(60-70%)sh452.975 218.238 mo(70-80%)shEWNBLA+Helvetica*1 [18 0 0 -18 0 0 ]msf418.889 318.739 mo(1.0)sh351.389 318.739 mo(0)sh116.389 318.739 mo(1.0)sh48.8892 318.739 mo(0)sh267.889 318.739 mo(1.0)sh200.389 318.739 mo(0)sh144.158 131.239 mo
144.158 129.583 142.814 128.239 141.158 128.239 cv
139.502 128.239 138.158 129.583 138.158 131.239 cv
138.158 132.895 139.502 134.238 141.158 134.238 cv
142.814 134.238 144.158 132.895 144.158 131.239 cv
1 0 0 rgb
ef
141.158 143.406 mo
138.908 143.406 li
138.908 147.906 li
143.408 147.906 li
143.408 143.406 li
141.158 143.406 li
cp
0 0 1 rgb
ef
141.158 162.6 mo
142.814 162.6 144.158 161.255 144.158 159.6 cv
0 .4 0 rgb
@
144.158 159.6 mo
144.158 157.944 142.814 156.6 141.158 156.6 cv
139.502 156.6 138.158 157.944 138.158 159.6 cv
138.158 161.255 139.502 162.6 141.158 162.6 cv
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginEWNBLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/M <1C60D8A8C9B6B41C9910B30BE12408A0CCE83CFCBF71D6A0AFED0B0C7E6B8742F00BF38074693AE67B7536DF8025FC27BB7165EE6A43D7B9497E065E42F0EE8DA1C58C8863D1E0F8290CD2A3925749EE5F186B> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/x <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-systemdict /gcheck known {setglobal} if end {end} ifendEWNBLA+Helvetica /Encoding getdup 68 /D putdup 77 /M putdup 83 /S putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 108 /l putdup 116 /t putdup 117 /u putdup 120 /x putpop%ADOEndSubsetFont
/EWNBLA+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 8{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o 3{/.notdef}rp /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]EWNBLA+Helvetica nfEWNBLA+Helvetica*1 [14 0 0 -14 0 0 ]msf146.641 136.905 mo(Data)sh146.641 150.655 mo(Mixed)sh146.641 164.405 mo(Shuffled)sh1.5 lw
506.142 303.186 mo
53.5635 303.186 li
53.5635 10.873 li
506.142 10.873 li
506.142 303.186 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/EWNBLA+Helvetica*1 uf/EWNBLA+Helvetica uf/Helvetica uf/EWNBLB+Symbol*1 uf/EWNBLB+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Gary Westfall) ()%%Title: (fig05.eps)%%CreationDate: 3/1/10 2:42 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&pO4U(%Oh7g!:N/[$%t2mPQ=)`L,*J=P26KRKS1,`3d[D^m^%D+4e6;Oo/l-lm(I)@-!?OF8[cWi5]JLF2`pt]EUZcL+(Z+7%0#@?^%.@!^).+M*e@CmbVE.s5Ptn-Z@Z9KU.B&etAWf/6iF?RS!R8c>`j@,d-^USo6Q2"YKC3,(cM:+_l[Ae9]aZ91s.e*2%fYQC%G3b,0>n_5)T0UpOWV]2SF;f9M$N"UgH_5qnY#]C#*-ODAe$6?#S9bu5>tH#pHM*,eARZ)IaE$agBrB]JTCtIF;9ke)oD!CdSWJ+Y%#5WjLr(MT(mPh`+VK<,t9$QB;'T]MLIj^k(dUWEl!?tW2IXP>JpGqDLaFD%hCT6,-:Ib"KB@),;anS>X@BVlk):N>7QLj]NNgAKl%]j\B6OU08H9\Q,[VNlA9#5!k=Z5J.TnY`Za5L1]kRDsa@:Ik7_%[c,:oI#:]([^9pVa8u\N$bsX^S/DY1<D6BQ'PZN]@,oOha-rK%R^0<bfq9d:8S@/Y@^k28.ii3/='FR[5&*_(&>DI7MLEhH1C=?EJ$o8W)NA<Ag%UDue@umV&W3??A.3!!_nmqeBA%CHT2)_A/kn%h%J:u+G86P&>6:Np?70*qZ)n:R+\eoSDSUO<\Ndj85Fdh%ZnXMg2?O6V8N:(%Rq*taF5#3M'?R?`qWcY,S@@5\MN?Yn.!ZC=U430*.%j3PO@5Y;W!TjOrul8e2Io]SjBa'\a+6+LI_09O'%F;eMm=aVfdP[>(1Hqu#l1m,T%7"U_^,.=ANdV5eJ:?/g*)Jc1u==]pX70R9]%Mfl=.XHS?&Cn8g[X_\bgi?s#l>,;k_.[@5LWIuRo'%RX`//?-G)I&+DQAZr(6Reo);L0`\>)FnsncYm"I)T:A-[`m:fI*MnZj_;7%Y?2$VKWj$HKbLgFp'G*r)tjPE&JF1=KoA13=6ql[j0.)_`(@L2nRF0;(VX?!;8h@VnNk;HO!tkoQgg9KUckX*;q`[;'K]3qN0."j%ra@DF+2/pE3eF`j[#C"^^1/b]T/+9J/$po%%q"iGp5Y.t^/E,D(OX2*fKXb[UI_57ns/3)N/A#djbisa@n,^X>fU$4D[KibcRJNX%3MhYnV3$u4U,A0"XFn2b,SPN[X_FtQ.J=9ZYniUCllY<qD2YT"#CGVA.$C^V*QgC"JP*Bq_htNDdY<ub8YNG_bR7uU.GlRsPj9#:%jVq+#N/5n@8itU%YZ'bm4Y<R]P]Af@WAN'YVnA]77.Nk0=.ATaNA$sK<c)FtI*uPt9"-#=Rf$T09nnn#Y)Ta(ASiEK,))65>2t?(%X$X"AQboRN=dC4\peJ4@/,sT//^`G>+"gjoVnLPD?QbW.^M**.O6>bOm@F5f1A#o?UYsG=ItBpY[!2@J/CO"@48naSb%:F-p.kW;%(&D3_Vgj[%8+em&*PTsAV;IPVoH!eK,tl@E=CueT9QBhH?foO@R2>?SreJ7-4S^Re^Bkc]081p'7P#o)^'qc<3`l`ndTE!\.P8b\%8Z]f:63_qWH8)K-.>+7H%*(_L(2B$$Zjt.:J,##1-+35Dr5BJf10OqIOYHr5GZXoR4/P\8Q^O$7Su/Wp*9h"?[*M93MSi5G%n]6I%'h`8E.4*Ubh^R@a@Kdng>U>)>=BG;'^Sb`SKShn4G,/1RLIqSqVmu9/633pBp7'L/rB_nDjhAn4$-jf:L\sd._j\C417(g,)WjYd%PQ2,&e9*nTHA\P.8JsnLRZ9>gNf"Dl#fRL/U2WCL$)Id3:Dk9"D@oB8:cZ[rTe/rXI=&neD=Mi(*[):b!s(OZPO"Ml\<L&s$aHV8%Bi2%46:banF\/6S-D/Fs8YHpaea]A-V1Qg(@tE[Ba9.Hu80JWPd"_bp>/a"sOl+S$(\4(JlKP-CUe$t+\Ojq:$A#5`PtV7/LNuR%%@u5^Qdpf1"n/2B[jbF$^aQ(Fq<WEuXF34ko#B4:Z%/s8"L+)OpH_=QX<cU4J%S.8PCQK&N^R56(LYS(R>1DVj#7<^oTiS-`pe,.f%Zm=a*lV(47ASu,Q4[<-`jdIqna\l.j.<*?6!Ipe:&6Q35?m$]4,N[QF^'+3EarK")"%j\iXc+[)LPPPVnlu\UQ%]k7@4;MEGdS9S%Po5-+62+Jb6?0esAZ4`i,[H-.0S(\p<[emrks^@#+tEX5MOTsuj*79#_g.J)aubkn3YJ6kJ0S&f@D<+M/'oUl_ne*ASJBQfj<Km7%PdW=_i#j$pquoa$)*i<[*EbhK'MFi,i^!m'qCM"AauM&-E[[-N:tep26J@J!WqAl!S^Oknc:3A=mp[V8B*+if=G?#GPRIm0G]"ou%rBk]YSI+piPHI;%WF?cY-qJf@B_.+e?4[TG-lk:RYr;edL=RK9)*eq[<&7BT-qBAJo6d765`,[gmimktdVm&ta$GE9\ejW=6nW&N%"<AabTaN7r1GtGkHshio?6VMM9'3Z4.!1W_5W(<""**1`MDAa0,t7G:PlUr?UJqgGM,Ycu>-Pc!7T3>i\i(ukM0;Z=V':pE(`Fe=%#_A#F"s);(8c_hJn;/,t['c)i1p.68kKn.=N(>6`H:@.6FO4$Ld#jR'Q(fL+69/Z^Q7qJ[!NDJ2g5I1tEFm9"%+O@[#`8+'^_rSA%+<jUS#1d7FQBJ?J1b-S8P^k1lg)@0qchWH[0`6Q1q$aoKnK0D2`G?tTA<UC\-SsjX3=E/?S&cq$-3N;!/<NsN?6o!mUkgUI0pTWE%Ho@6XBZ`Ofam^jgX<8c*Yqj)tB^#pR\l,iPPLd+;ge*f8Om`XaA;(8Z$GSrLSce883_2M?0pPF1$)d),QUm#';[(o!1_)'N50G5Q%G(i3):^g`%.p)d0:a%#QZ:0<HNcJ:LmF_WZ6JS(2AiHASP$4)Nr(_L'i;o:,J?fN&"lP8kT,E.^CIor]OG`N\$ar78Oe`O<ZmANI%,OYc8_?j&^B_;p3$Q2!3.V/[Rf%H=oIE,DeaNZKJP_cGDTqBE04DH/<0(@AJK`?j>96Dg6f7qh.;d(]UL^hC']g3cOo`(j),[6!O%FWB+mWN9R:)Je[<n^d0=IWMOf8g.pFLWi7"CQrU<TAlai"1=P]FUn;gQg'r0qFKt&c+ZY/Q1g9a>,7[5*2;-#`gNaSU:-9V=n)P)%-gEPmQVrRb.:,/CqDub\[;pEg'P/4\?5XK[+^>!3-OQ3m/S)"7RRMR)CjiE+[B?nQ<$Tks,S]aJeeb<?VX#hqVsM`?'e5'R-4idl%lOG:@X]T0Rh$OR*gF<t?8Pgs8Z=8BVPO2c;;.pkNVAqI6MQT@)orH`8ZIN.+j&c,TpaIC-Du,m)I#<W;pebh)Z8aJBVl/6tg;r4K%4_rSH.fa;4=nPA*Q_AiI]!UA#[j?A%eE5=E-X&-`^"Rt_pTTt)'T8t5,hp.m^S17\MIoWA/5^YCD5aqfQ/skt)%Xk![+)AgV4+ci%lV3OGrhtmC[`B3.qW;0k8%h^aieYiWV2U9U+&oOS5q\J%`D5%_,aC6%Q]Ulq6P#dI[FW^-KQ\*5igGJ&07meEUB`!IZ<a;)XRcWa%7CVRE"%GI1U>jFmFbj?2JP0f[QmPcgB_k#c6#pc++];$+E@X3YH?;-@MP[+p3-)Pb@Z&CnX`?icLeX$E(hd!:a%_j<e1JgFl$Z(/%0F2ScC3rbd76F_L]L$GRN9i8*3fcY"_m6J<0mP/RkYFh@^LbSAWTZ]Ds/G]TYOVkJ?K;3rM\%i;hPf=crZC?Pn<[6[_GV:0FFG[m%"X0q4VWs9dG=u)X:F=qb4D(+p/h6KjNNCdJ(e>lm3j&3LcnFA^&o*UkGp\]SX>[GPe2&?=0\Qd`=(GJ[F&#qTl2",p:8Jt$'1OED%]O]9R;X=BsK995\[@jQCPLQcTq?WN*T`Wpci9%+2"VbOY@`mb+PmJ15X3+BYr$fcU.Vl&>8A-&9^F]=4[(jF(:+KWZ_-Jtq*'g2_%H%fRYhP8ZQ3U1\DGU#+-qi+nsnSh#:[GNE^eQ3o#/@C[t#GV$2RMEWZSjfZDd%VD8%n5J0/=j2!7J<F>H)UI\OLCAd_iqJNl*o(O%NikT=>X\+O1jt%%A4fB5[$c$M*%1ViA6%+SE`n;a&WJ@,4KML_mZeb&d(CHZ$HTe<UWc4S)N.Lkn-84#*Z'C%pX4jD<0D[$/Fo>+%1)]kZG[@[.UCgDrG<!."N6LaJc@8KNeUXD9;2J4o\u9:'bo\-N3rrA==QcM)]Oh<c)9h)Ynh9&ErlI%m8h$0^"Xm;%U*l2e;damW%cp."4\.![!Zj#`Dg)_Kh1:.0;_cC-TCbZ='JR1tbpOghQB2O_$"lKaX_?BL$&/sONnE@ImJ^B-oJEPU-&\XlI3<T3&EdW^>&SR$.%W7)&d=TT<8%p)EhkFlNSHn+F!U";Ws:lU)k8:kK\l"lMj."T-e?<`gFD6Vp)2R_]\Uc/0?<:Cb)AP3"T"e5^O(psAB?32E'q`4kp%W;2YBkH+N`U0o7V/"iJZ).!AmeMLD\Zm^IaFiZ`TT9S5ET;]WuMJjbZRasoa#!WLMZLD(eC28p#"K`,S/>;rp=1*0>He3\KW+?t:%FjTeck>1>HWfRp"MR?--cQnAAStYeF]HIjr/#ipChSJ2LJ'mUSJQFN;>tKLQJj@paWtL,0rRs[_@n]tCXm'Q_IgQV/^6."[K?dBe%!qiR,$i3HOF\m0.:Nnqbg+K=q0!-A9;(Z1e@UT^Nqe;,P'j(]:oD4\q$<?]b."'_J<l^N[f\3KgZI;0V;]A?:nLKi>FGs'ideKWT%'u_rZW)CW1n'+_oO^[`?O&(I@Nn87WKe)'`b7Ru3BjBI/HU`j20e(ZA.k=H[G\aEM_i=rO`&t6Wg^1li7TnJ)T^au^A-4EP9h#!r%C?OV\6J<_B^BYti!qd=%FHt<u1r(cd&5/3h+iL-2mI8JN,=S@-*kJfG]UWG&Z-VMp%^8rFrA(aY;1VZ<<M`$ARed)kFH[G*[Y>Lr%5i$!B'.]oH_OU^:_8q'7Yrje!%ma93*poI+?+4J@3E/eM,4A[5IZS$t$_jr!7=><ECQlRh;0FiSh]FpRU8BW'lF:EL[YEq\;NCo3%@"iXGLV]?5ikg.[q]<bcMJl*jo-TAl[15`T!rY5NVHJ`sa<N50]->_)=S4f<$7TKGnP*4j\Z.N^o+8u\MX7l%1f1pq9,&;CX[pU5%FiP1pb%t-kN..s!gAsTY/1]X]'#arLr!=?_T'ck1p%<k<%!pd1G9ZJh.A":`WN2=7SL_[D]ISQ!VIoY!]p@b6L+Uj+\#:7<,5#8^%mn;LB&^;(Ql8;9TWAZVgp]Si#croZ`e]&Bdf$mmdJ-rRuWIo,ndnpUk=(5*c'hCfQPfbn12QK:^8p[QG#I$%M;9EJMHcAOqF]=&>%kUh4Qk?1+/d1SoOS$gS-(dD_=[$iX-`Zj5U+a[,:lV_psj;:0`-uh!WWnu1XUNKoH40\q%5p&dl-+nL,+SunZmKA0'#DbsISCgm-%gnB'03;\MuQ&t`U'ON#cp^3\]Z=L..+MC-L4/lBCngZmVI+2oQ,2(;lr'3][W3[m&ql:%V(BHZ,o$6Qr>!c9h9P+Oc7Aa6*-%Tf!%28Z/uO\9@4$RG"4D!hG6Yc0c\G"8j;,lT:JXJ3@7:uXL>OV8Vfj32%j]O_aa-f]*&CfSZ***F3Yk@GT;[dD2n$e[fHb[AbL/M$]&%+?<i[$gPG,KcmiiRZbf'$7V\*"5/g0PbZc7bZ(N`N01Y%md,aAIu(;d^'<9FaO33\6?t=8mmW?:MN%*Yn"E^:cN(Z[cPK5:f_"Zo%j2c*Dg8WFsUpWeO/"HO.mcVrf(]?N._8Pp_oF8T'8g#dN-([H]khZr\+uH".O<NNG^.D@SV`R$Z[,8,>=[?C&4fi*AR1`J[M!P`D%`.I/N#rMbfnk7<[.'\#e's`6W+tK,,VLQYD'l+>iM-^;(3/PU,P5P\>/_;SrALZ`IC_p^5.'skI@QS2$?#'"Djc_S;N80RuO!n5#%Enl8<S"cOS`g-9^e@dW60%qnI]ZSASA.4';mR`=EBY2`NePDr]8gHk)/Gga).&G3V:noXR"]f'3nT-]351<<h,`J=8I6X"G+dW'@%O\`=o3?8.I;*-27]A-%*<j0Mlj`=Uab'UNaNMjq1KW`9$?H!t`^Q]AR0=7p1;6c86o5-pmYI)&TFj3`H@(]Vn-V@>["tKQu*l=eH%8qS0+Qldj!ZS+h$m\!:teBaqd-;C@)hm4tuNW2`Y'5?7d\%@efRuXsJofj'1oSs=(N\l?NEEj>HEP0e_R[n?**j='4dtnc'T6.Y=%.=Rsio>PXu(3NfW:8#SlNR"IWmBsOR5Ol<cLUOB"i!fk"6sBHH&oB,_RS%>D%L(a`FZR)p*OSY7JG7"f[-iIq*U)bue@G`Sb*5qt%d]-6JW\6P9lSe(r[PWk#JNuea2h9fUnO+:<YnpoLJb]?:cY9j=:#a(e#WXU:MF3;.^#/bS!gcA%MZTP/j,LnEn#4_7R`$SKH;h[C%ME%Fu72P8#-;CHS(Fns5EOS.2nu4h_]@1c'e":B?PkVpj5MhluJ+h.:;r.bSAkN2%S\BcLHhDAgg;P^;Kf],aA,i)lA*d`In?7:G%qPV`CpW,jdY"kbKKa):m<d+Or4%i%i$:?E<#*Z4>RV:S,-_tXh1W5lGL\6B9([,64ZEVGhQ1t>jUu)<<i_kiM&O?U:';3Ja$Bokd%I]#Cg4+B:>+=bi>Sj06I>,+,!dE6Pf+I&%WU=)cM&TGI/WrjB.`<.g7LOa$a6ieH@Xj+2uqH-W%,[[50jD-FiK8B<^Jke]a]$CGC%N/C54KsKj.rdLpbf425:0s,O`.p_As.K-uR2/[,f><S?X>1CKQ)NQt"?#)J4]m=1Anii4M[<dI!#WegHN:t6*VYt[d2!oGOdg=79%6!sJF2sSc8G>fZq/ub'/S+3j5jo":<8@*f%R]?!!"&.Fkq;9`h-s`FoF'ST&Y#V,$2)e;F&El:]N;mKHQ#?R2--o\-(7(,B"o.;Z%\GWrD9[@ODQ'I&qjV)WA](A(dGMu1UhW_LWdS9`+VD9oq;ufWDePUGXMiZ,e328d79KMiaZdW[.JbC-V`JP0rKBBNAqPF?+-`B$+%HmTfIkXk0QhoB>-EDS;J48iu]O4T06i#eAECaNJS\s'^tA!?JJJ>rHbWSa$>>`uqG?'lmXa5="FSt^%J#<#o*aC>F:msKp;RJ4nm%'T*AjKB_m8h\u9A6?DWF!IHMeX6m[sr!&E(nd"7uZqn)DB-P=[SRKSOOP$[r,X3l6`oO2kmbYN+[0ECtesu_Cl2QmWK:rdVq?otn%s*];PF9d6IXnV-+5P\T=>j]>\H<CIoBs>#&492KZ^APr&ke45.PC>C+UVF@WX#2R7Cud70VW0?0c!\mu_&A52kjm'\=02G:J`DnM%k[3s2K4Zj[(!N%udH#ce$e2W*!/:HrcqAL`]SXVVBilO_-s&.NZ?ZS2BVNe^Vob.jQV5hmNNQ7X$as*^#o[gde8Q'(OXM60g-KY5%=i:6m=+)J/R$01ce?#VL;lKE_W\595eqnH,aO1^FEh3,^jhV`tm=W5D^A)cbNW,U>:Lt.^J,Ht9PPc#"][l=uelHN>rX8MQp*lE3%N;qiiHoZ`ghsf+0r(6pVs7qrM2rWADCJsU%$k]M<G("gA+^4AQ_YXbVeu.?GX#&`PaeAp^p)iLJ%s;OcfOK;diNP/`B@E7Oq1&cL%R(:ADl(l`4_/kB6Rgp%m_J!VaFWI*t3Z.SKT-2S*:X?tJF/MU0n&)ng1HF!P%Gt_o,t#L,O*jn-S:5EhH:]S;,)@d;Ms)ub0`RdC%1B93/BEMM:<CuSTY3UF>q$o04h`A^<Y)iRFn**e$On-PRTf<;hr%PB?#PCsChnW3/i8\Ho$F;Mi<>g;!#eC-(Z)k^>5jaL8R"c(c%-1VHEa3$XF6/uT3SbUr]l,K`>$7]CUoe**!9EN1U>t69Fo5?C)IP!RM[RbC0/n7[6k=:0OCL(m$B[$ZiT]9KB)$6MWP]/\)+D6+A%X%$"%nJ<V;2#ZI[^Enq?BP_i4&RFR)l`-Lc%HDF7mY`n'e*'9tBAs/oB2\crFMV!Y#>YO1F]IrT@1@^ohJZ3U@)$"XL<9djKo/sa%dN!F>Zq=6q"UH'8,Qo+H+4F#.=D(<LO,&@E4AKU%R"k:2gq?u=eh9]E"*MCkV)IW]_GW1A@HgLuF_q[m>7MS)JPTbe^i'dWZ[ZNT%EFC](dp<7s^[`HcUD]N+(5<?IQ;]uE=nQ9\1m>\*VQW_@\PmgMi^4D8WTaQL6%rQTBM.ssTDH'pp,U2@@fTL2)#Ou+`G)f^1q8`=%A*?+@cH]J1hkJFL!)C@(`CP]4!b*o88,AZA7A:!9UsTb(P'I%%%3"'J&=AD,g-:%Fg'mgfDo@/m+8eY:GXa'^qV!/<#15Zn!PqJ)%XFnR?OK?E$2ho-@RaaL#:OlBo!VgcHp5X7t?rQe:it07BI8,.[9c^Sc@[2L,S5ml?:!$9X6b@hoh*)NCTeE1dkB*G?<epT;%:TM1%FgW,pSSiKoR?XRHMD(1.6Uc7/qW%<7p!J"c-boMXJ*O&:,eoCWlLeTLe=hsS7fKUS%bRP>#KCjoSOMB'c5EJ@M?J"JIXQBqotYn;%)[H\M7H^H[metVd?IA6qaU-O\';#'X6&";en6JQWs/(XEqr;t%A(CUb6t>s0e+$tqqsS:*s-t(k`cYP$dF!Ink#EE$j7<=cq&^gB%s+OT:DZ/mNGW#IR:P3Yre+g[`(TWV^P<CG.^Add\\r*Kb?gE^J"@AI3r8U@Ls4b4YZ.W6B"]*pM2ui/"-XU2+,Zjp4p*u1u`\L]A%Qac;2Q\6<n?Flu_r9s>PolodaoJr:h8Pk[U'Deq!03t&ao09JW'>7Hd9LfPK4TG#f^Ac#"p"q*i-V`l#0Sbsj,J,3A)bS'!Mfe25%PK(p];R81Hl%5J9$ZXqi1n^ZHbpkV"WmMUq@%@#b?5LiW`aI;\R^4^cJ,F[J0bgtjW*OnG7@!eA5)C0e`agmIJR0@jS6n7!,#05T%,'?NqS1;XsWG?p$MV#_IZmlMD`p[T2WMkk6)$8R"p)tIl5_e6(2iVpK,0GWg1i642W#'=n@NuMj2)fPg!UHpof"CR(<jlYXCu#IZ%2HSAJk4H<\eN>XG<hG^_[$<_b>_LG-q.:9:\>F!#NBt$Hc_MH28@kn+2kG,$9a[$(YTu_EK?iD[R9X*gY$TfjRlr1fp,s'HCjH:\%*EoiSRo.hAY;dM^@NBjgE=C06H)iqCaI<M2Qt"+),Aik3;k.o7\o?*?N)eC4f)=3neJ_'o[q]9IC,8!N*de#ba.7B\\%BH/<$Xj.%.5.2d&4si,X4*=re>nWp4-O!!kZjD()4@@U<UE8"'Pe-RTRJ8u"62Wrel:2l-U+lkU$eis)iS`Nf3Q`j`>7[2YJKG[Z?Y$O+tJ6d%QGjsj<hQ[$+3)#Wf)&rQgT]N2M8;dkDSEUU6Q4;XUlD7<2DA[*c9r]Q(mhOmHE7HP)ATO&`4%%@#SX#_D[fsONHBO2/lg#bfk5^i%G$lr%#V;1.0Um1\_*_d67<kc3;\C-dld\DW[Q8[H]9-h=PuXhIeC@F`TsgP-.i!!hj)ci'\Q6YP%^W[qT>[2SiM\Wt4&,G-3/1Jd%#S4(!MT%OZ)A@>VqG:2$B$]!)B,DSU'b[bXXD52WW%P"rCG*NuV*dDWZY0khe/XI-1S1um,uRIjM&_TD0fOD5A`'lBqs1%2[>KUY%QS`_j336%X`AkpBe<-)H=k6^0AQ5QupoJ<a^$?[Ais@P=e,T6q?QO@h+LR4J%bb]qMSgWT:hb)GZt,QuZ])gpjIh5Tm>GbVJMt\O%&$7Fmj^cka?ZMg"]\K`MD67fQhN\dWY4Wd#03W)BD>\Mf:f=4=+$6_Al:a6ErQ--s9f0l];(d!I[W5S`7Z'[C,+0o7_iS!O),EJ^%?6uZf=',5CFWG)A(sFCM+WRms?Y\3#diu6#'F_XgF.FqA$Fd1"Cd%9dDSPI2bYE-(:ID.Q1u6)S)-*=F%AtQ><$td\N]MD=CcIe!%Ur(cXl_Hjg3_sG+eD,<N;e8,Z2`rMl;S1fS.qau$++'lNRhc4!Y"<?s2HGb3n"ig!\Eaf)ShIq6rPdkkaT%$:EC+YZd!5jsmKV0,%2mT2HG]qVI?l2`QP_sqWKSjpu8oa>@NqJJVKk1C;Z)`#BY/p$^+9uPWgN=D=;@e^k;"nf3+i\9WT?\!qQG16TN7BTqB/Gp9]TG!8%Kg+T\RJ6ADBq_<UNZ8Hme0gF0TUlQUnGp#jOOBgVN@89UeF>Y'_<9irG=nBZ_8sCF+:;"h=Vfn[UPh0,G^^7_QKgh`MQrq6T8fbE%^q(D+H=pV[hn)u")K$1I_'V*U0\35>[FE4=b2D0)!UY?[W<"6h0:QAKZ$\3ds'K,2h`n:D5p"SRIQ]?(If&G@r)q=".#[Aig6hn`%9L-Iq&_Q!We3=)@p(."KM/nHGVVp2$:*8Mq3^aQE+B+d'@57IO"pgqHq)]ks>5*7,J+3Xpjt:cpoN:I)gA"#*Nr*B#rm8GWCjd-$%n3?i'QA3+0p.tQMGj%<Q/0QFGa@lTi(j1SEa@[rL_#)#Hr@d#X<RW#n[AlrO!scs3hWQL.)_iW2CQj(Z$+!TDLY5R'"&hQ2f9T\e%],]$[V$6D;DB.J<6e.ncb[jH?bm6e`A$eR:,G1\0lT.1o5lrJ[;K4\sq/A#?Pocl]aF-7on`q.M8S\jC(7'J\29t/K$/oI'UK[n,%pjVU)Di")V"P.b/E6Ol/6]B?D<`a2DF)W7e2WW`&1/'!?+Qp,\DgFYO'?$o1gS?<5Nk[M@8crM_?uYE^KD8Oh7s@kihUYa9.6[DD%>$'G+]R\G'hs<>C*t3d#FH24r,u>ZtZNBH?7,(ir&o*AOd:Va.KMup4aMCaCIdl(2C[mp30u*O&;B/M.2nlXr[u@YmWeglV`R1=`%ZMUg+/GkID4POI:\+l\792-1b%YK'ckRSS=cq:U6SF`H(.5fqYS9_n4V!6OQQ2?tu&*BM2(_&[p'7,/'qm&Vc^-n]C@rG!R8$NZP%MVRZ7DO7^=:?k>;;m,1&:uQKb7m@SJN2?efL:<2q:$]Vhee2UOO0'=iBm3Q0$`jlY<`db]VYluHC0\[=l_h"i\XRIeV_,T'%]h1=%FGgVCdjoK:-rG]_j`.QelaR6440=O`4_Y^Y4O8BOllU1V!<La!-.Or=M:6ho=oiie#/h`'RnnE^"73dq7ClD-nR>".?A2SIpc+He%9A!;s9HIGT4brY'HeZ1*LWE%rlQTL`N"12A\TWJi6sPWQ[nE9<CqQ1M4fY;:EeW8crNkQNY55GP<Z"OM]NF.<1'';$ggHLhq7GFB%0UmdP\(FG!*uU(Hj&7Su$P[cbCEo\(ae[QQ\uHP:8Z>bUm-QaSZ.O5H#$&),#l+2#(s)5CLQh<'CGGW!N<m3`FY"Na-=>a1oYsi]%-TCLPhqd[H?_H1`:-L7\D=Z?qIs:S`,2ADlGP4T#ol@6ir/^VVaGj]CE&ePuMS[2Bb82;F&jJW"b,s9B^=Y#Z+*+LCf;/&X5HtE9%Hu,&eD"Y9!5M3]JE.I"hl)jnBJ59Cajl>Ln=tuKAh@s_PNBX2tU#)=9!nm$M\5?t9Y(ELRjSNh$#UHjq`Uh/@\5:nn'hctsBE.C1%j(l-OW;keR::S`PISn<?'<h#&cK7X"o6/P5For!(d8B[M.TC1f^IWjQY^>qp=.Sd9]bZ9MA%NQ6455bd]pHDBcc=).KJ7-\Zf.Mr%X$UWe:W@Uo2L\limh8ANf."])0YZo,?8*:[MI$4e7sj`-%2;FTq2P8D,b#^i\/[`22tm'qi%:J6CHgpkc])!-G/#,L%dg0<2K23Y%e+`+-54WF&p_-7iA^S/+<Z1URj/a6(kI8C;nC%ZJUp8j;5Ts-T!TnJ%3(Z;hpVjfC.=Y\bV:A5$ap/*i4`\Rc\dqJZJ%lWTap7;s%):&1eI^f-$r^K@T,oGQG'N6b&W)PlV$$au+@"WgX=@l,Jhbn7/niL8;R,&"hoMbUu+l&<s_rXqsoX@`%Df6E?T=7nTbJ;#tE)A)k%Q<UcBDrLFJfCfB*aiBlpb06c*o;V<+L@:#A#N8!#J)A#-3oB2sDQ=ReMl"u7$Okhji;)^$5f8qfrUs!?MsATe=:R2a.;oni;qZrR%T+#42iIec=0C@,83`@]uhFuLSS!1s9[VI58lM."\`5?7_!EFc?F&AD$!gTZqTZqoG&'Bk+;Fh?2aFE9i1.]G\,[;="hooSAjK*f<%Q%>TkF7;&Y&hZIWoR&^!*X_?`/<Q<IGe!Vo#$[u[J]Ze3EM:Xd4=.qeNqDs).uD*E@Arg`^Ab*bX"dJ8<1!ZH"4T$48eWMX!0aFl%"^TjgQ.fT10u)JQ]b^AjmbU&1QUfjn"75]u8i6+,[2P4pO*"Rr"b`AOAf*AKI^WL_55nY]95<bW*Bs$GQo#P<i=;&aZ][,T'LS5C%?*ToGikkSJ+&QB1lPK2nd1Rtk'OOO(0CFY5M6TQp&V@A0rtt/<^F.94Z.m#4#WH*$RfMG)X9'5>,(jr3gkt[K_KG0[)k+HX(";.,%(Y+hFEbkP#%Fbm%W"uJi4WGn#*"\XShB^$+Hg^tMr($Q=q/n@G"r^u]]e/4>k.-uWmRHe9UM1):@+!+%-VV8L'-)26r#m$/l1V%@%S[tC?Ya4L;29UAB/&ApVHYoT6Q%C7d-[ZlSPA2o8R?-k*n[J`@]<RJJZIA6J;#<4$ae`/!UQ@\i`LtAo*GC#h<fqg!^'h@59i<Jf%PsLJI&&#iYOkZV*V4XCMa8EbBWR(16oaU%onm#QtK=qW)1lKR,gD&kLPK1?fI!XG#hs(CDDf!$V=o]=dc+;^"1tXE0%DUk#.!nP?%aK60['Fk:)'VXC"2156QdjfD"+iU1=LR%LN#aSfM$pmIsg>_1k=dH%\,U%.1$IF<*BK$5c,UucpdGJJBUfR[,[PkH_-/"6aR[8:%%n46oX%s4pL-5Us+FF+!@c[qaR"F]dATPuW8V.0PfkL9.8!p*/'3"&iI"(aX&o+$Ff(fW'Ag7cA7+B5NC]W^hH^^aODqb#t(8.K+#%V89#^?A=.*J::B=b,'ir-l+cp2M0m1(/J^GIBPJ)R:R-_5V,s[U4">X:tVK-1KLqp.Zk0GT4J5,*&I=-g;s%g&4UDVPE^7bH/F,d%iDHB]qddESULbEFaub8IWrj`NVM[JZYo-::]oWk+hfN,-HsTjcapVYR"7;O(A*UjFD<NfmQPL3$1*gma$-1+\7bj^0L%:(B#eNBL%])?(prH<j`]@4JrfTpEjdVj.%"X>Pi@BF?I`K.@GS@H!@K2mkm5'%TQ[?#3Wj\l(,gi(uV9:`Qd6Da5D]1&&ASN2h$>hZeGHF"iD%:YZiW`Jb99+gg$bL(:0HGBk0SdFL:0\&E.tm^@c$db"-fWI0$g>L[kqpaum)rUNCNp,;aM$as:'Ysp9Qi]H5HRI5DcqB6?mV=F6*%1H;(P_b).o'/-4->ZBlFZGk.5=k]hpBsna[8gi)h`YdA9Hc]OV>W9>.!NmmJ[b7fCBMnA;#/ES=RRIJOZg/D.klOKaXS()l1<t^]%f*!\%-(P\[Y)-ufW=g,gY#1P=i;:7eBHBdC)]Kg>@rNC^OmSp!P9M_k2*P`Irnm8tLa0%s;b&M&dpdVB&;36*=,#h.i`4oZ6Him#%jH/ITpn[XQLtM0o:LiMHDn`BZ%6P#/SBQGUJ&L5eX#Io7m4!iQbYBXX)Bj9!"m+or3k_:`JAYhTh0p^%5@+Yif`/:28f-U,T7@'n%lRIr]N<Xcf9FcjDT@n%*2gK9D>IAHKo%R-]*"')k+UkL-^MMs,i.<K7Y%;0?ok$\qB)Nu\S:9njB;>+lZBbTEhqs^HIuQa<@kdY8%5A+DD6nV\8Fb8]$0mG5JE-lA(JL^"[Y1`+r3(t\(+$!U@o9GZ0$AB;R??\<G8q.2SOpbfI)(JdOc1l@7DcBMi=-nV60(ddXQO03H%#)'&Kg)^%D9#:IM6K[fGMrB/_T9i5o)!`6'0;O^:ZTKa4\6"[C(JmOu/<!&*\&mFYr;f3gb8fktTQaIH>1q?/%edlGGZ7@3M[UQ8%*Np@#i;$*gm[cnuJt(h>X<S9`X:ct@ek_=ESPUR<lKTGgRn0jrX4+I)^5(:RYc!=Erq!7!\A&AhjhAU>%P3(^D^+@*m5u&t3/X"t%7QV\k`b$N/Xg1`<Wq4gBbhMLGd_Zc&!AP)E2LcBDd*[.4l3P5Z$a/E\<U,N)BoFN0T>>uTr0C"f4a?c`YZGVEE\"IT_&en;];/&Z%c)dJRg^cPS:5%(d[Rl6on+=7qDYC@J7JMK#i27YNjjMN\?&YM1[J^pO"OQAcrE^s$I;DJ1T8kPa`GY%2"e`7e0fsa`MXgU&o3-Eh%$TnO]mBsfLnL^]B=C8)`J_!P6#(RB?@pF*/Q-]5(a(W@%NVuOuGBpm)[_Yl$n'?_Gj4[4Co(b[BWk;Vb^4U:.M[H?sW\hT:Mi\?Z%Y<`'BB;dC)UJG\?ncuX.jl9\1\X9sTL^@-EQYk^X-7m#]#op\M`?2NKd[M_.6.q0_O.WI7BP^q;.\N@(2(RZB2d;b/nU4p5Z.oD0%'t]mY8GOMJ$52AgSbp?gBEruO-F2sLXj,Rd"k"YIU=\EtGUM=q05igN_tW.piGN]l;))-\Ltc_08QEFC/+ILd;+&b))KYh(R$U+;%lRRh=Spe(O\^'p!)45LX5qG5Am9"MU:bNRW"a45XcS&%YmWSBs`pSP[b-(@PqB9jcgj+7U;i(pS=O<!U<iDk5f>HHUB,g/b.iN"h%MDiJYQCNA#6foNiE*,.Sh&Vkn6f,KnXZ_<ir-Jm*>kliPLGC8)#40#Fq>t10`*s-a0L&@^krnS2-suCC;jn:L&)u?`>.IZ1(mI)I%Rjep8jFtt<59<qK&<7,*h8Q$Abau6%XDj<&S/-:+6bVS5;jIq07a^Q:F`Ke+?^p6?<q[bEH'0LY-@TRA8)#u,m_:mlK<L1Ri0[AD%<-*nDIF3iUU(33+;R4'(:07fnp.)(:#^l?7R#URrf$tU<A?%+iC6(9kP470@983*4dH2Ks/7dd*Joqf:kIY\WF'KOQjb]!9d)6mh%L"sAk/nB^3G7p74`DYY]4(PEXMCuZVp6;"k7O\)MmTD3UcQ=4EqXXNjqkt!(!Yf3WN+)Q5OH/e3_HlJ>We8!W5+.^Hf?ItPGQ.Q9%1X=t@-G;&*9CgYl3aI4=XpUr]K@S;`rp=V$97$J3==killo;SDQB0nBj)X3ZXQ2a<JQn5Ta5:@p@Qu_#03@JDI/Q1$V6nDM6-ghZ%@&i&$bH76G3."?"Vji7Xj4B@0J@Kc+(i?o[b,rK.Ag+B]=>ehVgtR)c9<Ei"2LT-9"cWU*"0p@o&iUoH3t.JPq'mKS#:(uXZ=t50%D;7:6<Ns)En@3b)cK,H!Lki:#Im[:G)V,lnAX=dL'+AGMUYU:$M@RCT$auE&2uDO2OP_-tki\[L#/R3L>fT9F*-k0Fh^0j?.XHDp%MLqD<67NR6haHnPE_T^RX8PX8eHa=G=NH(sgB(_D'4D:j084u($<gp?cC\_85QnoL@bSB!Dus(gS#nPD1Y!WAFBn/8?Oa_*':?]s%I=^>e`%)D!&#Rd"*2Uf3UZ&CS3ANjP/klN6n?L=d)i(_A&`,Tp3mhpP<h7iOQS3.f=$kcb9]P7:^GA<,ELi#rnftQ?q@LTu;2?ZE%]>G/C"0]h6DV>#jHntM7]`g&V9[a':>F0;1@KSQ)(u]d;SWk?8^J2[FqO+?_ldlr)AZO6]:VVK/ZSiFHRHl*(Z130_>pYO%DQC7S%"`F3]>-io6/:]P'fTd9kCr#%<;s`@B_ACs8@,P8=WS[Ul9Z,=R^b!L,0`(o$me]>b.u*[S\/ADnIbs#tr[j[BZ6*UC$1EqIZC5e:%D2DQP$XSN.d6fpTG;aJefq;=pM=98F)K]N$>MpUW'd7WXT&A1D<",?dmn2q`DnIU^[X-<`l]<1Zrbmj"Of4HS)Nms%:5-pTYcV+B%Lr+SOWZQeo2dgf5;e]cC]n;kr>h;<u(a_T0$`&:*C^oauROAs*+QTrp:"*Bse&:JsHpBpS%)h>#"+);C-Ia4C(mjqk?]TmHB;I=g%IhslffK'q(Bp3eXEn$G5ae*0$I<YR7Qf/HI8#<EPjuRfjl\57:iiRTSRU9,TMp9M^*Y[jDQ,;tT/XW+,<LD_h^CAQ\:Hu)G[YDYA%2g'%8_Y&]$3:sF]5!;JffP_IZ<XMj[[D.+KDr.C??N=i,p<)c%H9E@<^3%g#^H32"Jp)U^]\&=B;:SIBC/T/:XN/>d;fT>_hCJ*]%ATDqo#^J#l[H8SBf(a4U/ZJt5F3S=W-HFY\/rSO6HZSuOo[&A5R2!&B*j'J^p,NjP?Dh.Tg1$QH7aZ\G-:nD.5M-B.3Ll+!.iuBZ%J\MX$rQk1>eSPMHDd8@)J\!WQ#-`;Z]Y7*kJWBh.CKFH:PfhXlE-'4[BY;Of'Y^WpoA7/(A;ORj\;)AFaG^9LIm2B$6j^2Wg\I?0%:++o>7ikHa67-`3n?tC)(G]&lK?0)Eb2C>V?3Q:e@RIXb4i6U7p*9-Z1QZ^d%Z>u3]N`,mI"V/3YC$Sn8p8R\]KLYuK#3@.>#bMm%hd/Epb8R6-^=^:<6^-=lV3)7aMJ&VZL[Q<lL!^Pm8#*7qh*2R^6(Bm+.ac:1]9p6,7!59^H&K%`S+:eOrHh^4fE:"j#gQGA2<%Q.%m-MQ9q98g(Q!ZV6)`g8`i=NI>esr<PLr<<XX3cfkO1V68dur$r="bM%n?duf]3RTh#.jdQio"NN1N_"D9N=8p.Oe(J)DFCLiGd9l%!G`uJnrtFT(%dV%9[ai"a]7UJh[uQ3Y]_IE"CF0Z$np_+[2,O"Vndb2gHE81\k_E0DEjgJOslfU+DS3j3+:MpqI&H>!5XRW<hIZS%]QuVBPfg^q.qdflbdq`rk0VA_db$bc:q'ZHc0T</Gr+3h#9Og342SLTlqP"cC.s`/s0Jo+Ii6SGQ-#5gaMD`Mpu!?EXd[eHdVJM?%db1uhkmY1e@*E'6SPB%1DL4'D5(Ek[l(nNM6`-+DaFQn\0:(ek_Y^;C5(%>D)/%sfZZ,]tCQcJ/>V^eo9;i"ql6fK6RlIpG'Z%@?%r&NK@hQ*DUYcj@5iP"RLf35-%/ZhJ0hF(^Y/b8R_*D9A<CZ560[B8LLZ$Ac7,nDUlp6h\:P63'U6VTs_<1I"+B@ZnMl1%qO.4tS<%ioANc-G#Mq/A7Y14UO^Den+C3m(QFik4=qR!4sK:#-#".kXn;u5KSbW]sVO$q\n\rafgEDT<^_.#7<XuZ*j'X=2VbB4d=QmbSeI>%pE"s_)_t</Hq"Af]h74*].iPs:F(lhVMA3p*5,"Ad:e$u;htk.:C=#QnUBUKIif=/:WY\#Y=C6A9_h8-]Fjmk]`rS<n*@PcMXF^O%^1uA>KP6.&jdWSVWoMK?GC8EY!0YDX'2R22qU#;c`Yic:a1Vq2[[?1m9/'^d?q7EE3"N5L;gC?fNl)-6%[3=<h/E(7fS-bpAWSVK%g6^4QfuoX<dR4!cPrjGQ=X&:K4KmH_Kf-#SH5P#UlB15\Jtk%>(g/)sA7(Mc>].Rhl$,:1(=eNC!X?$2Y@)eUZ!r\Lq=qa]bg)V&%dWMg_h?<LtDM8ce2=]hCCt%#.7c:R!#^/a'R)=o]>AL$idDGVIBC(0lo``PJIeg.EAYb[IgEm+PFsl)m5mjpm=YYs$j62ai3Cfkg%'2i0;g;]_JHY90/TM5o.7-Q9Vg*0760@hLo8F*%[XhYrCMDAcZ-*`U#Dl4878B8S__@Gg-Eq&udYX/]gAX$O4NjnhdO]>aYdgn>J%$6D=E=s7IqCh;K.BmO9qFuS,$8;SBDp,2[@b)!5kf2bF.PfC=dTD2^:''Wh8H>\Gd(EdD#V0:h7R_eg-ph2e&gdIr"1[MdfG7ODb%g)2$pLM!>^^A(6\iqi3_%@[-^Y#Tu>.+68]O(dbA;h:o3=&P>Tf8kC$r6NA_g4U08!JpGcB@N(@3fCB7o3N&GO?SGe>##u?,<_%#%S2R4b"D4K1?Yf*8]=(8V?]Im=G">9Mh=a4UKG:Xe[+1.MXo6qs=<bGZZ3+=,[tjLkXrYqhk&-P7!#Ebl<Y%N@Dtb?*-.;[CcQ-5c%n*e-ShLlTJ:p_lIk4R^\A<$6ZUAb$ecL4jZI@\<ZCm"ED_cmYcJ5'BX7-=I52fF]JU(A5+$fdBrd`QbjD*gk!a9lDDrg]rcV"OE&%TlJL#N2H?q8OOJgR5>^!]:l]Jmi@MXNQapXG-3c4<`6:hfcAO6Zc/H*V[-1<HTuac6lI#(gF!qr1chZYWj/suNO/s^$Y+c&<\^-p%Hl6HDdXtpR@Uehq+C8k_Up$!;M1N@6g[OXYh?bBccRQe9eea/5eZEaT.o+@cGLSVYa[gJS0k4"?DMs(J4@,Dq\?/d@4l(?(V`p_+%&Lg)/P)L$=_<9LRonUZ>0d,Ri[.?i`m,*O"M7dtF0sgh'>CAN:.L"']XfpiSj-T8RZLtT=^!G9MQQ&u%0Etus/Pt4RA#Y/cqs:5+%EK_[eL78dEoqS^aZBSLWp.,&"lVYg%F>CtBqbOk*C>db@n^^n&ikBGEh>2B%H[:(F0t&\tAR;FrE,',f$L@]fC&7e@YWpsPBmn^H%bjfmSbL4W1'<A41>\$l20q2]!.E?%3^7*oiXZon\D+aE9]2JXB?rL7a\_eBLMH[!AA(@?qHRXC7@bplS&ARs+M3)lEq=WA6pq7<K%.RfAg5CE2<j#C]#](\:Br^[pmd`9t_oQ<<3e+RqIR7Oe-a52=7'RaXl>(>K(eg%h@>q/"-Mj*fAac9j_k4NNeqfpr&Fl<8!Go'^I%5HlUXNV;54&r!Ao&5-N>ZZ<Fn'ot#NMENM_;*uSe]f08Eh(Dot:-Wd8SNqYk_kqN/Zr=KlWDei)o)2uF5?'e[+]2/7fqZf1U:n?@%]e$.c)=Qp\XmMYHZ>5Tnof`/m`34Q,hQ-mQ6W<o)M&p>E/UI7'[a;o&:E/`j%=Whr>(PV\0ZVKprG?LD+/[!0!S,oHX%52/S\<>\%fQZWr[)OcZN1mGMF`)Qp1+KmtRfiV(\A+.kombDbcHbV8ooGuOogk:?(C_frp[r2c!PV!>OYUB#I:7aB%-)eGpY?0*NdgQhc*jh6%m]<8OOWGR(*`]!B"4GE@`c$2"U94<J>pFu/ogk:S9c_[+<T.,:[(3TPTcjm6G&P^/O:l=konDrp<;L>tRXBLi8%L=])-`oTF3q&d%#nqs=GPJO4>'E5XaQ0Fab18PW88K+OL':[)\(4+ACD!J9*cIH'b\3Q,gp0dD!;RlN`;-cS)L^pt(E8NS4n-FtRd1c:CE=UYVXH_M%S[Q<t)o>kVM$n/F6#p:@HqpL[5*aLo4!on`GcT-b_i&<gnl\A03FHsf)`^*HN*P[]e)_>na6i&Qb-CecO[R@cLV`,4=Z$6V@f/kK%#Ol:l7Bg8:joT:hbNr!o>Jqut`>@"QhYqsMTR-^aW7fq&(u5o>qQ!SX];lOfS>62enq+_tDm]=OatD0bPf*BjM'F#CFdt\/]nERn%k[mP5S4Q$uQWms4U2]QU6=)')/`W=bjjg=FbN\5+9IDLFHCrueIg>=SeZF>^V>a:<j!R>fX@=m`E-HB#NM,t>7F#FhTcT>-s)o!4%`t<D4^Va74<^(p494g0a]3@PQBme.K/>fiRqlmG<Tj/&ZqW@J`ou*3ZI,(.Y^3M^<3F5N<@!'noHlaM\U3q(4<aJBc4T`%c*`\9f%M$(NM.W"3hI&MWf=>TI9FA"O7/9k6A\X6JrURRN:[n#rL=W_aViEZUMkYiG.D)j+6[^5P,P1\PQXY/;7QOVA#<@;"WHAg&l4$jd`%rdO1eX3d/np<-Xp+!X/56EsXJat]*7;5^*R__BMMCs-Lml\B3SnE&8)!e$XWe&hidlrN@$<G8a>3p\!29WJkS?5T&DepVQ@D:Xhh%!UeLiX"M*Z[cH%/[>JiIWQhW*AY]s40Ci5MI;?+_9WWRY:4,naR>.suUnbYQ`nCKPIgs8AZZP;XmFM53m[#FfAP]B22Gsre=CFrl%nrjr['VR/[X`$^i]%3qI3CL<3<m-XZi5oT\NGnF8W)[JsV:j6rf1ONera_n,Z(?L<cS](FR9A1W\=:S<ACkZi,)#aR+mNj\Nhh7b%B<B2"YkpmZd)Df-T5Jur5L#j",/*ChBK(AbFg84g#%,/%Yi^,B17)NcTT#HG!&JmAbB-XGp_@b,fQF7SQr2HfaYBP[S$S<!>Y>hh%Y5%K'-#Td#1&--L;l-c$lZf^Ref/r(ea,n1c\(qRgH]H7[:1SPBB>9/'45ub[Z@rMC%9\M`lsH`dcrLoEp(5rS)n_MNd%tYg5a%d%^?iDoA=ZG'2pu1pV#W/4G>c)cGd`;#!cBN\(S2I\b?7/Z?:](*p*S,T1D)Ao:pSUVe+>d`T2/4k1t</HrfgHDClr'D/>[u,GqpHC%S"RbU3k0sR2N3ptYaHWlL=rd#[Nt*b0`t9';?5Up6ijgpqsFdkqR8>c^Mh<fKA>#1*#`$WP$rc)3H2;>9N#Y9a`FZG0:aCBHV"SQ%e`#Q8K4[Aa>TU_Cm0GI!G5ZDHAf86,ACd8LgjrV-3S)>UAf7NAhS_7i_(Im=>5;1(L7'ElG@I0'G-M0%P(585POu2ZS'Fd(=8P.c%RDU_0H\B=)8G9u<^KYg)BC;9Yf7M2#2bn>+^r#I+l8s_ZH7+Y.rjfN*O=t!!>-f51R4]/JP@Z;MRJfi4bnti0_oO.TB8V8-,;qUN%35fU6<'fs(i$02#Bfqj.)#&PUc).ie!nigHQnQ"NNFdBZC0Ch`T"'n(cO8_$<3q5u,_B3J/dl+UC?bP7MK@[b#.eRr$UWF'Mk@O]%4tdMn`5-:5YtTqO,bN@5H4)-OiMh+1e#b9E0ub\JkeWQBT';NN_gC=%2d80S%+E\6g1Do.lCkZE]ULY85m<aQ$4Feb1&)g_]%SUI%R,*(D^uA\=99$DaR2sG]&&=QD-XR2T=dXN_ac<Z!7W"86:OesCJR`dI(RR2cMLPOBD#QHR\F!7/:i,lh#TW/qDr,X*Tgl*kist$Q%^eA2,_ckr6DrP[rCYVBnG`B`E0\b^/(RR#JK%)htqH31UL$cqB`Zm#,k,4b>UUK8ZfQ\SLZ.uKUUYQC'&X%i)gA&]W$$hTI,;B!h%+(pQkZb@P9DJ>(7%RP#\q71u:QU\<JZ.kOWZs09PN3U)ciN-GUQ,%[Sh)[&?dc<;=bE0+`E1r1nj,iX`[K.,\etI6)9bmr$ODSrd%pNOidn^>hj+4T0)RG;H`CY[`$_Z?<$aV$/5C)2>F[-F3I/6Q=$LJ+7g^iMR1/u()XGrf#5b2EMhJnal#/r#ldC18M<f$PO_31_Ze%'oHREPeaPr3US6)#o#Jiq(X8o5%:c4hNP?D5!?F:CA@Ac]G>haps@'%=hpQZ6Gr!h0Mh,3UOB=tdS1eca6"#AqRX&Er$lm)MNAU)%Ji:h&i4/U7?<4?.\a4Yn.)ZcHE0a];%0LdnR3nV6`o^V;nPFJKFMN1ajGRnWFPbR;_'u=a5<;5n@43LYmJ7?X]idCl1T](QV![Rh%3X[PUV.WF;5ag4[)pRh_G3=H+YE9M0*:%s=;D-6@Q/i12oA"'S'W-J!kaJ)tno?Wa04#-Pe8fS\QfPM-`@Me%a8)8_]/*OH;E?@&%*_rm&HiHX^_AUYI4&.FF;(4^,XBVrMJ^_%5m+9/'U2upVb^)oiPN@L#iL#sVZ=.[eFsLo8hcfH)gR&hS=PVm)X^342-B_tb'*qHY%J`1n"WbUZ_&Yf]k)d+j\T._"nhW42e1,[:7X0+lId<AM!ST>"+ZG%lZ6g't*k6n@<LX%o4N]\Uq"Z^\M)0D7.\r%K=Y[[kXNK>]`%6g't*8$`Acc_6gsWm@?Ea;/#/LX%o4:4@B,dQ)F'Qs/UV@BSfDEp0#Lki</aV/tjj1[%LEP(du@$qWB6)0BHuep&=j4qhVn_<EhK%J[`r..QF%ao1IHPbnETm$@55RF?\gGRj4)G\`Ijtgj>h5piO'T$9i=1Rsa:Nq.*gqB@!"5&;Np7j)[`q$dZqm=\q`9#QTda7LlNj%k-Y%&I1P02(Rp=.LWi9[Ar[n\h+;(AQnNNVbh8Ueng:T%Oc]mXcf^`^AY5R\r?qrV@,EH7#ohp_=Jc_US5OFmg1!Q<N$n!7,=CY3%+<Ha&bjjZr,/'9;O+LKq]jcGZ^!6"c_ZADaXTfOg,+KVb9472`=X;&1#+4od(AOtd@A=DX](tEYF`Mp/_)A1Og$,=sZ8d>sWK$bT%McP2XRSKI#[hg(ZZH[qVQ"(;T_shK0Uj4q$!g2N'ePF1KZ!Sa*6Y)4uf^m&7SFE,jBCk$_e_cuD&'QnTk\QmqXVg/&SQ8-Q%Sgi+%aZ39-*RDO%KBF[B._FrXim*h0f69e<S0O*@*5PlL(mLp@kgl(HJ@VJsaA4nf#gDC0rHoT+adJQpPO_2aC,kAH-j2Jh)$@YOB]c8B%ADd(E,%*=o:.*\Pf^0p8Ug7Q;gB#*g[7fMR)[KN!F2Rk<S(m;$*4X41kH,6-V)/k>F`@%*9eigG\A%(qj;(f.&+?+'()'3fb^'f!%EipWthANS%?PK-Q5/kc`mb9KaQ^)1>AG""S%ln[qcF[M9Za3ns4NqlEfXN@`p3$9N1YRu3DHX4k2q))r?cW+j_A;"Wj(:C]UUt95%&N*X9ZBIEU7!UfiiF-d@[,pU!BK9Mak0paj8\,<l07<=/hJnHYR<%?C,7RDiCe@)b*W8"ZdR[8F^/`C6W4=*-[\qTVdc.q2aV^.#%?r+cucgF>?Aqr!&SX5/V!IJS]";K1[e4u<daI(8gpJ+a'Ob'\"VU(taLed)iaOoj9@iF(L&K+8/j"rp-9H'@tLl="FP+T4*6jD?(%Ia[(1eQh32g63e/42+d`cK(\]Y1DCSNI-LO%o68hPB_&i3hI8Yl=c\kKli9YER-qAiTXSpB@Zs/j&dAXmY-s&+&eLgAUR]4YKlHT%_e9202Qq#_r6\I&V_3CD&G,0l;b2;-%Z$5-3r:%ulg2U)(lmk^mYu)4:+H/WF?YiKZI#TMM]j<_d:;!Uq/H0i^\@)WH1Tu7Sj0[#%I(896W-ZR@o5[0?q0Y/JY0WUM\*A@Nq6L5@abR4V)'QdrRL_o`UZRNF<Th9a@^(dZ\[gk?Bho&^B>iJ_bG+fO\u<%$W9$AAE&P>B%QMFu?8Enb=6sZE:o>NhaM4Ak4YRL\_H5>5*M4?RPZ.RjH>s>qCQ&s%MO<3=>4k@L1%PP[R*GAQZ=%4E`_+ZJ7A+)A&*6G!3AigH?%*<TaldKu.NWN"@n@OhtQfG9p11XR6`#]ibj!n5Na6,5n@j_&a^Sq`Ms3tF-f4:,kGX<&r(:!^0,h.`'lEGHQGn<H*FR(uj<)Od>G%d9h&8!]?"P['s](:cKN%_efg/PD2A2`^e7_4`/@#F9D4i4ECl1rp'?!#qlcGAg"3",PC/BKc-iiCipVp0>B$Y87gE?PA]O(8?K(f%72FBsL5])^ZN@fH:s;,Q65ca&B0Q(37U(1g%('50MbFXg^u:udmO+=EdkDSsQpSpiS*O"t4\eA2<&i]O[ARi3`DYZr@nNdsL%G!X%pgmC_]YlCg:PH.I.p&;LB=7024r$gUFlOo@H_FCu=Rph?&#LMQT1_<ZhR"JVNf=8hQHH8WG&6O31!^*<!1<YO5bH's1'2NFOJ,_p%k&Y?daRGpn$RCF#gV@fVR[1k="jHOYLs_V+#O=1'-DEUpK`0o']//Q+hAU#UcA!jrq:9VF00b;;[6f7=XB%f/Hgc;?jWCp1N1\ml%2l)X@q&iqSfc,<le*uT5/6Jj]>nS5c`$Vt,^L!e\&IJ3silUa=6aGJBJNamnFC!\Ah;b?jKW6a1Cd2!II^DakHa(aV_jgI(>GQL*%2R@J%O.$rMh>$<_X'N$#@tren@GKs!-+e"Vh:a'lCUMo?\QC$0>V'n;?]*>*eX-D-Y*rCRRZlRsK$:CBc#"WE%(gYe*j\;XLo:&A%)l2_X5k;Sc@@q!&mZd(HRC5V3Gd['PK/@W`\EKI5m5++3*U_rL5J=Bn>,g;7`\H9pO"6ld]W')nS*oX^X_Q/299^8(opCf2S7";_%Bid*\)b_a8dKt>N9UZDfFT]Zn3A!8Zn@B^P2'%n<&Q0e4%T.NFR48U-dHnD+WnB<E2mL-<b3!-l*_8'BPZMn9UW$_8Sb](Z`L3bQ%Dj%Ga/h'S7=S*q#Y>I:.A'^J!dt"]MMR^pA^;V^eZ])aE-qh>'_^0>pqaWP1*M3H&\USM[VG6k>%ReR,.psPm(KKsDJ"1.8)8eC6%2bR<pG?sb@3q[ZNQ"AFT`*l]29kT_akM\&=3O@tO\u)&CR$#`aZg!E2*m,kB<h2rteKO\2a5se8h^TJN?>VTkQ1I<)r[P8=]Usd^%-C`;'7:&PDSQ.;5D:EmjCc\UV$]W$*17QS4fq.<3l)\@]lIhboA^afDd`jmU@HhSh/(I6LbUTs`X@PYsB!p<6G*^QkZg"R2cT9Ld%9K(_Nppo99[6QX@'r^qOGeIY:=b3m%Y?X2ZDAJK4N8c=mkuP\V2oF!r@k5^!Zb*bm[FoY&\TF]1;HJrSB9c,&n]\-^ZfuRQ>Ks!c%aKJi&S'D@kNJ:R[S'ELMcM#Q(KsU$FEp5.<r_hEk<k3<i:SG%)a'?fWq$Di"B@C"GKUH('$_1i7n/tgSR2eK[FkkQ9(j&e2Qlrj"%<=GjL@A!>U3VV)RRWFF_^Y8SM*9/_']<BL0(X$Ppo_[;.ek0k.de6_TkV:,\Pp`a/d,JB[9!518+\@0qghPolaoZO2b*`@(>]65l%Bc%)L,aZPg=K+uh589<d(d+PLM:!QR3.L!812">`DP>NUF'iuYc7-;0F>qfs7'!KLI.=F*]]:qo5*(PBb<6N/S/c^ak\fX#mYolJ%/]2PT1aUtZ[(khM;auAf20X5,m-PL]f5'diGqN@]i&85&QS;OD0>l6Rj]NSaY-u%*MRjb_d'[+tl!0h=WMd'>:@dWW?m;/>qf^a-%ko>kDFF/D<M0+ZJrDhHAbV6Cg`8P^q!a@4>?_-UU[5"=MkKbM252jkY;0:K\bpU*hc+hV.T=4q-a&[1gg?MF#eQ-r6Wj^,dVpB`q%HLg%2qiFej].p>D%?B&1=q-?Xp(P;G76Y?TRt")eP8NkZamOJ\MZ?s*Yu^PlQ#dh%`?U9![lrnSgA=eL&Qm.=I:XH-%mb1VmhjKT%?+-j4Q?GBqdW"*Edhuo)ejALTeF8sN,u%uIh"D0LmJM0->:!g^n-6eB_$Y*7]Go(eaC(G3\C<[L8q,aeNWs(b4,.@=;S:@o21`)s%I*Q$LoDBZg(_\E3/u@$?H!Cm,iWNC<Ohl@!(N$@HR8eq.?^H?5)M+Nkj)2]O0%2)Q3^_nL)LB0WcLp&ZQ/$=KF5N:4XG+h,GOsXT%\*3H=hitU5I*S-!mM<JbDn[1Ylso)JNk;iP\_QpoJ&gAs#;(nf:[qHK1&']HStA*%^tq68_HNBgk3%aKYg<,3"r?@<^$1L)_O6Hk%'5JJ@k?LkDb9tjB'QgJ5mn*-Oa7Z*hcPrB7o%U95>$=UV9TU"M\#W(o;/Hs2YWT"%)WlY6PSMsMpoMr3%'4guGthbr=g1X=@7qYJ%1iR82O#BL)#.K$;\>><t?B^c31PTqdR$A%D<tZ0,f6:m-gnHfM>_+.NM,9rSoB3WL@aQ(2YS=Dhf_ErC:H>S=F'\P([N]e3LG.C0%20ck';74G:0c.=?H]DkjAsnrGH_6"Y*7n*4rn2[?g+Y>G2\t4STQ^brTAtfqjOl23`iNfKM4*sApLsL6,&R<7EUc2,Khog.P=hUt%!@t)3h&PpFjX9TgVYjC2'ni@Sbt4lOCQqH1ph?+/bM#cqH3.@sH#e#KF:[-nYkr7-&!pXM[`X@MH`uKO[bR]cPRRA,iSDM->nUK/%CF>3N)qZIqdEFhG04mnqCW:4R1?)$uap)R+6d$+kOJ3e[d=+(9rZ+J73i(nbfQ,rUMU\/bQ@/J-mV:UZ.JIaDBUbGKRXVL78U04l%DU3^j*#X18Y7A&-,p/bM/q<3?V].DNi9!LA-_#2W[]7bWdgiA<P_=8R?p[Id0f9F/r;"^*_1p,@bt,$M`Y>;IN1Sf\U.TaW\Y`PK%f2KBD9@]D:BjWZ<8ScJlA2S44F=Ir*S9E.MV]$ki]_e[9[GEVJQOniI1V5r>>6F?Wa.1`CkH`i>R+Vb%IK%R]JnI)<qtiY.>Xr5h%Z`S$R<m?+MbB)A(>ha'Sf?WEgh"H*uc$AN/Oh7'`1q3?X]P"(O,q,/VU^(IiojQ^Jq`-6HrR7Ceno/p%.2C4)BI[/T%R`=IeFlKI%H+N7k@'4QS:*`u7d\8g("\R+BVdi\-Z,)C1HAi7q`0`^CRIXB]HM`l\>jUt8\9Uij=)?]"dh<3S35BHt($tKVf3Xc&O1eOeENR4>%@kd%dD-:)8)dc0I\Y;(ip9uc&@Z9Jt0itO^JJk'p2r?uOP*'P?ZNrb*JN7MS^0\3iMrrGATA4NG5-f#Zf_dR6&%g\mj-_pN5QL&,%FXR536>$8%.k`&-25VSPA+[kSL'%R6maoU+^*sOT524%r^-o9N`7>u,mnE8A$M`c]S:e@mXPD+?)ksV2,Y@=qkJfYej*Hk^qVED.%:sIsA*C6I7T.cJYBIWmj?*CR,4FVKOGL+,f0\;g:iph9sB"thCJM+jB9E<:JLN&h[ZE*&RlQod,E6S!<T6WD^Zir@O/o5GHcK"tg%m+R0"!57Lpc9@$%(;phEl4L(8i@I6t3Im%+PNT\XDtY6QH*RF`jo@Ht@V3NA7;gVEaVC?s$d`?+Yfm-Tca*)("m@N2G+*p;/3pC!%J0')KLFb]G=G]_2Ej!`3:MPTMnlaei[e`Ym]L:_E^Q_NP_Yki8j\p).qi>(+B>9Y?b"MPHnr["$.Gm86;Hs&s54`Vos-ZOU9_VU@%E@IN:Uh]J>\1=SgSo6cg#1)/lkBs>f*7'@[][q(n9Wf*n)f"M9^VufSA\?X@\SLo:D<JO_c\<#,<kmaf%AhnHkM.5IB1$sYf?Ylq%e2pgPZ_<I8cDT"](9I,,#3U@3S<#5L'm]V%rL==?m0(gWp\H>,>h6C\l0iq)k$GgUOjo/-NL=%0hs4q(2>L:fA`B$PHi9Jre*.'u%H1(?Hbe!E@*-h4)rDo"e\]j.WL,2oShWs?PX.PP0[-YJT>&Kh[XBQetc1NP!Y>:g[s'@qQ>Q%TA$CYYBV.Im"]ma;UjBDOh56Zr;%OuNDhHu:ae$ApiVAC5c&Ce0^p=;Pi=q-Lhh/6r.UIWh-?oA8frX>50p/3NZRrL@g!1QT_Rp\NP`\>Hb3R@`6>n@a9,1Z!)Oh_J>K%U2urLG(bgn54?>J]me6G?*`U"qHgpba'8N)^5m2m]Ec'ie`-?"R@tH>.Bpa=Hug.p[b2XAhWs@'d;I'?gK!B!=Pi=5T0flA]Eb?=%rT;6p>PNTcCrXh2p\NRiosh`C26O^GDfKQ?SpUF+TqIIZML5;lTBn;YI=-tMdb<.hB(,D^lRG(S8`hDcXQ3\PrQL\Ce^%Z:`%fr^%I';GE=_TBZL<$3]Y3''*YiDj7hOiN_I';EIH*9lrlXtn1n`^L(hs9G6`Vr'8jf_,)DY;J^a>QP'4Pf>dS.+l_lu_hU[(4f7\`;fX%r1`r^3T'*\Z\g>ZYFf+s(hXbR-$#St6'l\:h]+XP:A=U1M-DT^YFkJYc9-AmJXe+d]m`VH*qXQXT<hs>g_F,m?9`)?:tal5p0Krc%.q`bm1O9gphs9I<A"t!0V=+"t4qFa<Y$L=!582(2$*eZ#8b:g)k8``.G]Lu4p\K0Wi`uIh5Q0S<9u]kb"(J5V*D!'nK%iXd[hG7a%T=F-r;VE1hFiKO7_0]\GU,f#\N+$Q@GBc?(4akD0-t`-=&<\B5Ud/M`>6.2h'_B/lK$U.T=u<sA(/%W5S!l3@*KN\F=BO<lO07Ki%5]/)lJ!L^Fl1"K63'N_\[u[=YG3@e/o4`X?GS40n`9[3pj'+RR=hEQ>#CcNWlF-=BN2CC@hfo't=`"t(50go<V-5d(rc7W=hJ8)k%T!iB@=.SdH@JjqfpO3qd^;$#OU$p%OpI4O+]\=?ZT*gcZTGH<(N=q^rlN:i4%ksJ[]:l-;j"?i2T*=t=2g\Q%)<dDWUP%@`g<T$C%fc!r)k_=:#aTB#hn6hk#Dsg'VE+<k4*+#.bNCKIkk\0h#^HLG6S:>#"fAoWKrSL4l06@,O6aB20hO)G+s#q@1:H"U8Kk.0Ce8ZZ-%V>K:Eq+2:#ih!C+d&qnppBYXQJ$5uBeRarPYM7=Z;5'UG?b8Ne%@_YNZVp,ToHUfTZP@_pgs#,.Mh0(*iQ:d`m<C:Ph)\2ae`9OD%VO'o>YASc@=G4Z`\p,3#)g,KIR)!tV9?Y;q31G_HThV2@5h?QO7<:eU[hcBSBrd;d%gW#UDJR$6/,.$?]0^nN;\!H(TCHBE4+_I'%?dDISXkT=di@+YE*mUYV%`I_rFgL^dZ>i9YaqZ#9'e7\n0"h/#q]P=2"N0=l?n)AANfVl9>:s:JeDi(i:;>6Pq9:\bLS$!hIafW'%M=oaSY48!++sMoH@DU_<r$2bif4/@'7a^TBgVat=ii-IEHj,NF#4OJd-=:1:?iS!p6BlqI*D7"8aVRKak49\SHg(9iBtY88L#)%J%#j=J&',k<U+)8WP^7Z28<!soHJm5[_(>s8:F@GT1Q<M5j$DO$1?V8.[M"HopXKL1*hnltILMsGP=qDt`^49HFbVAm.>[A+Bk6r[g%p"6$]Q,BdFL&Lf_:gm^bBpI!fMpLXtMQ."r'1=.&\&2Ii8/5K^D59f1kDCFDNFs2#(Z_V*[dj"6&iYN$5DnFp=m[R;V)Juab(\8(%Pqb3PMM2@RAf.[T$WJ>'cs'qF\_As4liNGD<@[MmB>%ALo)lq@/OV+6^48:57L,'8DiF;HgYG_Qs#,-Tn?:(ZSP>fUg6sS-O3a?C%)cXkpl2CPc&M=n:'JD'qD>kqh^Xic"=$G>*9CSNF2ckGhAuXFL)]'t!;tlTA5>@d-aCOH`U&)D!M/0!pa6lk?`;<I6+[3k9NXGO;%"m;G`I\0riYWkGbWjFp/3bgj%S)7sH10hA:35WCWlMC(I?YRn]d,jEX%0JXKUM9huC*o4iPC%QG-\_>?GX-@FH!7tqYZ*EU>C'k;%5Nu%s"Vu\$kq6Ym';?A]8sR"qiep67-iu^0iFRu0EOE\;o#^,1)^Hnlgq*l"q&QJDlKbi'JW2kCY<;ZS@7W^Dg+?*.4ku%Xo.][N%kG]WR]$3BBL1!:H]Z:/R^0gs\g&?l([Ku-J89TTIjjPn,fG?f9?\,.cTQ._7oNVq<FT)udl[=nT]^_.[lg44e8#;7gTa<XBYUD$\%_d!HPkDWZM%(s\Y;.0uRK,GN^p'$S`o8'K:g.@O6o9_Z&hBX;MRG0g1Q3]URYdLo<7XtI/JPBtJA5AF$nO\d@@X!^S1?GDg,SE<\%"F9FKa5DO!DOc^aDUPm\$fbKa?[9MY4Gl/eK6u@,@;H`j.pK_M2G#GgA&+N9Rb-6=C/k9,hr_FV]3]"m\VHQ;h/0Cl&%F3W4_/KS%n0sTRL=\N.XBW6XhICCl*KdNEPqA)qmkWPa2%DamfE(_Drr0:]8^s:Ur4%5;O*;(P74r[Yi7Z$*BSELg*?E<n9&)J<`?+Pb,$-u'%L)IEsgr>oZ<k(\0J[TA@LP?JZr@+J@S72=Z`J&Vp,P[_1:iY>(?3E$\k\shlrA-G8rt,QWjlfp23Oq84`Qq`('QX=fW-)oR(Dd#L%"K?c!Eol/o$1Kq"-N_O5d'!\f\;ATKR\-lH^E)c*4rbrYb&rG%/;Y7QnU-q;FK'?a)qrPf6p+P\co%"\Cum/`aEP;1o]5!&c@c%8%Tqc%!A+a)c"s8+F<[4BmKWpY"n\Ag:"Pu5@XVq)i9nU@*kL#7tCQ,^l?M/Aq9<d@sIQOg"W14MiiGB'qK/.64Q,M8N3.X!3p!+_-%ppK?=<4s);RM67IK`"D_+8N!YDVS5^!1'Cs[ZK/,FRO/]1E[@]U1rmr9jFCrAKC!g8Y8S'2ji(MbmVnr06%sEO_l'[AA'eL7cu8%%Qq?V8VlgP0Hr6C87;qrF*8ml`9SuZsQM/3uA@,cU,Lp#7iugO:ZG$lh&A_7rBtAKGBnF!Y!fQ#a_mt9=VGZT!T_([Vpqk)^&:mSh%5CSpoh0%kXH56uNqH:K[b`-N[#3+WmNI7iSD"5d,r.Rc]\7oH7d'[OUNEWqh_o&N,mUIhsKFb6mRTO9]Nil./I!0Mph$QR%^o[10%eedZu9QcsS2YhSF;C\B@pujX'GF2m=SD.[O/m]AsI<Rs1hWk!H$HIN!`"l2(/gc6KCCcXiT49,4gC`*C>\:Yrcae([,$;&7#N2c!%`Gld;P3%`WIZAj-C_WD)Mc_Fo/=;P'@.+1o\8`&``?Ye`GUpDop6a+1m<-g:T=kG,^uO\\YUpMt5MNY-]B:ZF:n0J%i+$T-H$TZY%`(#@1H+X%Rjc)$fbokoJ"^Jj$Et,GB&5s%u0ZXj7P[gM]C&uqr&1G'KIG7&r*F`A`O[3mHG1"#g!9ZrS;s!CTT07SZ4L\Su[,$C8%NAMMc7f'dMe&L'gJ)uR3Dpp[uL*:>[X#*"I>*4&l0m&YD=m5?2aOjm=(\lfMG.3.@K)L'1'#e\N)R,`C'3jYq$M9utehG:nKi</^%7[eRa:[=Z4:QN'5ET.&PhdF5qDh<oA]2l2n>Tg<OR>l2D,Ba#@daq!!8\AOdr_9gT0YVnP8F*7b2IFODJ`M+P8re_rNP^"`+oq36%5C;k4>t+1`M`u^L!Rh1ljcWT**/n`TE77NpU'XOJd"HE,q<'m;eXY%rP0.CiL2k6sg\WofmIf#Z$nC@7;Ou^(HPM-iX8a_F;AK5'%]Dl[JNp>Ku%P5EojIWfq%/f(hr^YlX:->i6<6YaDbal9b'[.O%n[kWT+,Pl7'-"fI5b<XEl!Og,Idu4A/aEe^\Rkfm`Zk=<@;H*%%]H-3@jo=38Y?L`cpGK%K<-+6nMF4(R_`JO(e(&t]@HI%A-[[WBo%:X*HmPoHo/d%__%0=+6(ZTt:D@LCpBM=<0`M\*r"7V8O8!Q=%4O&`Mpg,St?fslSN@0pbn*f<54=oeO@i;oM3Ud2nk9#1I\=I[K+idi3qa8$jcMfM*oVc"1$&db4aW#BAhL]:SbjgD-?enAtKMt>q%@K,hm=&17Y-Het-eGjM(4OmSBhqmHGGU-GMA'$C-r-n(KT4Plt1UeV;guFHmcOUjCUHT'YN5\jR74(^(qE1/D]Q,</_:M<j+7EMG%KRLb%<EM2/bXs5+f&%O@i(SC"90!8"M@-oh:KEQhN_cPSGI`d8QpLhV?2XBk+=b5D]3X_iGV?\Z#e4gN?p6^MWbUYp<4r,e7CDik%jXr#hIm9S:s8J,2EhA'Nj6X.Ld_GbNp?AbVH`Gmjh7iJWMU^+:@s_8Hc^09m0R',Ucq$n.2X\6UROOmL92n%-9uZF:5CFIYa-;2I%QiHrQh@+SjhZFXo4!/p1.IaT9YN#0?ca.Z!K(BiAcI\heio.>EW&ANWgsW&@rki=1U%5WqHa8d(ms4]pb;<dH\#:@^gfpf]ALppQ%3\M\(/E[QDbmR&nA(0')LEH4e5ghF]nC*F#L@KDneX8G3LG4/sh5:cg`ZG*Ka3SLirUu;NQp(8s^RNr4QS3Q#F]=F7>>DhYrSKng%^cUu`4^at0q;L)r,pN!&]=j2jT>'d-iCXg^pLCs$neXLjgR*U$PSSg7C_Qu=9Kle-/tVrZ_j@XIF72oH`hh'g:+B\cq@<4RFLY!e%4%CL<r89;HK`TB[4q%ha[`7-*BNg^QJ`D6<E+qGY>*`^b(lgQRFS*R%jG^t`JY/C4"R>aSqq(F!k"k\+n32D%Da0f*^NSa3rAbX_%0DA8d0)b\Hce2g/rTrm-Dr3UC8:AhH3I6"QkPOtm?nXZLGa`XA0]cJ9;cE]?:+"GECYNW+m*2,g8M975NKbZ4"t-#$`RPOD,'U#1%rM`kZc9I87BO:W2[uU+GajY2UAmlJ_K.2N4l[o^VQLrdYAG^YeGcq"GcZS"*T@^d(#N(CD$eI&O-'@X4HJ"cE%ii7Rp@(u%ogO!6%a\`gWJ=h`s#koo_C>]!B!'N]N$m5=!5#8aci,[U$'-]u1q>+Rg/YBkYIb6,uo?X1+Fm\.A"g`UCgD0U%Hhj\F(@S>-J,143S-O:)%W]P^F5.>dnSj!2P2gW\lGO4seCJ!BjCFej[^:sj;QM*]UlX"5Kd]$=!5<?-R@L9AP9eb12n\`%_paU:plS-r8`j%2lT_4$6ncdt?%+,;o#4!&@;G6Jh7DLfD4F+-ln3Je.;YU(dXo(>c!YX1,9?t9R#Y$DI^2a8puh`ZDQc\kHN-f-DS0/iS,PbjL"ODhI$:9N$RO6a(t%l2akF;mI2_Se^p@hd#7`Q)F?(egt8R9t(PUR?ok8cHFKir73Z@7XK8eie8H1Sk.+?n"2acq;V>dVa&QUUs1P0IIm!jWtY7/MoDCX%BC1`jc^uQo;tt#pf^bi`,Kn(P'AqPslAq`M?hgK7A"(M2dV-A1;WC8P>u@`#50G1q*pr$ucgCLApb)C0p?q6VkJAR@997k_7,$IC%EW0duVefosfjURLfNfE!h,*K;h5;p^qs,R]_.4(2NJBaVeB>gV.C4!hBJjk$8hIKKEP[]h<e1&7(P<"]TZZUafm\*=[MJ]<j^Hr6%Fn5HiF40T'.p4435Ikco%k'ut"'Z\Q0:T)EY-G%N?`m5eg\g'%Hgu4Jr4G2T0!7D%@I_dm0p[='+`drsAg-Tj]_q>FeNX"[p3_"2%m_P=VqW2YI@B%f1eW%&)\V9jWaEdC8N4X2klNQ1U[+B`<EHN#h8[A+kVWu^e]n^#XjQg_+:?iVgjF;ngfHoB\3`R\lE-u.WR?'LW%^\iQFT6C1n?ZSGDO']PFP^@a]N[/^M4bPe=FqOK*_/:["(>*,84MPs*]?001S)i9d7=u78^HQfNCHk#Br\9=XUg2Ukc]9r15L\hS%f9j9kCX_'f1u`.'`][SJL(!:[9Kuoe^N"@OqqZh?:f[;9d>-/%8iI:J=DO8-<J&^.3Cgi(iT)k'Og_CpEHC!^]mY:E2]Ak.3P#M[%E\g;AUq:,;?o[+8)W`qge`+#Fhb,Wrm_kAHCUbu)Q,22)m46f+19FO72lH(L2D:^!4r'RFoB(h7o<3n.3)\ICbOLd>_]/7hot;,:%VQ@ObroMpUF:U$eH19dr0RrZrd(cBU82Kb:]=>*3lga_MMn[n,?gV3L\HBKGj[D@Z\Wn7d,H1cVXJtAC:G,#C<m\!KS0s6ZL2tN6%[;==tPfYrA<Q07!V77U:BBK&_-`_$,c<g/'XK?(2r77?!+[8bo?Waf/)f&4p.\GVA4%7]V>5@p;d13UpFr6M5OZ>&MrM_7V+*Y9o%)EnN)loT&/VoF[Mhj:lkbQHn8Yk%5@j,:X^m8fl'FKe8TrSBT>qMVR@;q6,ATkF%<QoeZU)"%mE,OaFNc'&=7jmt)%^=Z)B^\IDu%m8:EDK>rjA:0d_nnYXuc4KSF;]3b;Wg0Uk`I=HSQ1=-R1bi>bl`:L+;fN6EpaQmnS<kXQl/g,dYYFN/1i@\FS@*Eki#?pP[ff4H)%q;1;pVCtQr\&)1CA@<Z!Wd/+UTXl&C!3h+>`O!*sMs(ntM7hkG7A\[>OF"D55]l/`Sq`tj7([L9Nnr1R'2GD&F9&m#(E;^Zp_d^9%f`9MBhqDC;>\IiJ&\kTOcGk_*3N$)u=8qfZWW8-VWl_pF:sFr_VY<]-qdKGA2^TAbGA&TG*?E.SF>2:X<As?A/O*'.)iLtM2J_g,%a8)hB(([fFrCj)#MnRg/QES[BOL/$DI6Ir",@E\@XlXFV_K%gg7fQbF9%q/Mqbuk?6Q-7ppd^'fGX"m9JY7^f?)N'6rAa8Hi=jkc%n6c>nPk;\)<dn.rs2@Di+3Z[R>e7N;mZ5<p^3Q+=c02cDX0<i.l^Jj?bd@)d6@6]KoCu59NpaNFD;*P^3sQ,Qj^b:7@<=K-D`GrF%KVQH$'8r1nAl$nqch=_0'].#T.n"W`EJd[%jn]PV<>\j^Jt>d,Jgmcdo2jC%S+SAnji<G36;DuN$TYG%pHKHuZFfSDJ\?$E?CY@c%/+Y!qVcYJ<SakaFk3N^sJD#I$qC^'2EO-&'?`:XJHGej?DIb!%LBFPKVmUU9Rud++%?:@NK[''_7WAt()7+EpgPL]u<-&q[;!a<R%K=qWE<.(<bps\O$k(^S/rk8n90W28"jj*mKl[#fhlL":jZS_FK3m9)rr--`,Qc`+`^;%5dFh`\lj@*Fp?WEjW2)TiMY/@'Kf)+Yb%cTGJe-iSHq:XNrEIG)NDc(Z2Ihb1/0CZE#XgPkipM3Ve$9m$sQ*H&FZH$8)Y-5(EIg!B[KHd.t[$N-K%1OR=.o+^Mh]ChU7)W,<O%+3`=3X2A&CM6j#0hf5J]`l'r>Y>DbFAd9.U^O%Y4\c*Hg_jIQ90@!SL=-mjc7)Z6'AljC$]/'/m^Yq97V=(F'6P^bTbGr(NMG56O%K\_5t#g_%B@?lH<N_[(!>&JQn%*P3pj.EpEh%rqOD[l'?N3^nVb2Tdd./IcQSsLi@ZR(JL(FUKN1V-!5LIUJ#Zp^T'."'_`*Qube%FRERo@`JWZ>eA?U'Je\%Fbt]Rra^jp`rug<^JJEaJ0bQ[*5,LTY!'FF*^4i.Uh'hlZ+n0DQ8^a;j"og!hOj@`XEp_.lO9:V\cHls%$YAFGp0HO/O(E]\]EOMKqj68(l^<-B%#6l2!E'SYBaFY?5F^NMZO'P^F2eGHI)5[GZb*`hF6j%DN;AE?B@s"2kKTt0>tW]3lHaeD%T<$XEF[(g0BdAX1l*U-uli+DZ*>f!pjXf@-poc\)B(eMK_QqlnHN%L-Xo(jTmZVhd<\iYh)/LlNK.TeWW(%ji[<-6\0Pr'(1cd+]%/6\iT[)Hu58[u48dFU&;(A<_p0%V[`SIJ=6f@+o1Ao%4EY>&Z4gmk+V`'(e&SVFHglfR<X(G!7t_q]+:B<N?<if5&A3+qc^43[?:%KAY3fWnZ][kV2Ip1]-Son!iFPS:ES,LP]&h2>pn<@Eok=f(=GbLWT/1Ur0:lbJ(`q_h@jbcHAeoWl"tRP#fMN9o$9bp%Z@$enaPt%XUj'"L0LWHHd2KLirOJNe4S/)68,bd1G<#8cWU"iCEf7P^+f3\\Gc)hiSL0rm5i"bf*q*ooUBQu\T$J5e$ihJc^:P-O'stHei$@.%Bjk&2'(rl?eNUb:F7q>m=RKX!\R9M6`G4elX_[@aR56dpdHL>=<f?#!WE*g/\lO1BBm0O/YM7-RQ_ThhZr>NRl'H)t/$_jlCDXT7%eFG@HD8=ol12XPi@VPRjg&j"WL2YZCA>/_4bI$hH`YN<?G!5_AmJtG;27*Ujc`ufuXkdEZG4CVB43Z/Mf@K<R4kG^:QrEK-cYou!%HhdSDFm],T\'GNtp\&8-q3Q5kpD9[DjRLl@m4\X'r3MqT#OO4M^AMdtS*D\a)VnVQ);+3X(n&\J^((hF:Yor<lS%KVeU.+O*@@"]%hdu60@9*X$0OYAG/\S^p%Pu=8VkuEI6Z/L/ofSaoq$l*9'A=&.U]YObs!bJrlH@]L-MNr:Hg3IsDi^bSo3LOoVUpc-VPQ6GfkZ>.%Iqj:NT=njh&MYTFq=*u>a\?0Ep-<QaPMAPIH$XdXJ)mK!M;PkuHsbQHNV7m.BD=Y1h#tIP)XT@eB=RGM[-J.XKdcBVq)rN-e'D?g%jkA>Q'`pR]>gG3EU"EU*l^)NCq@\,?3o$<JVRlKgqnq;IH^,Uc]6;3_f;`WP2l_;M?K_(?)3`J"+&6t/lgKnZ%%rY_h2/=2#-R=Y%EHm@@4O:eP5G2k@OA"+O5=V2jjX]EHDqI"@EYfP;gib(##-.N`<bUBo_*(k-G"5Fd@sI[,hZnYJDQ#bIb&f+@N!+m=R=&@X7eaa9%G"CG.fm.8mJ=55>E7tgCHtf@HON)*B4m%6;Y(Q9X[P=5I0:/<RR"+ufgj@+/BqCi@jjcS5YI\5AbUK0jJ,29QpZQK7;fE8G2@-D_%pkW!/j.W`s\C[1=X4V%A3OqU:CLl.\loZ<CG<4=)mEA]"0PrfDrkD+PDk4DOH@GD;K5$giE0b,i%:FKEA\.#b7S;^ceWY\@BF/nF%^n0D%pT)V4X@RdCp\GNQrV:7-h4\1_]6O)@j43HsB/b7H5J,mL5PoK`\.=#ZcdhW.Y9)@]56!X1[0Q"f-.[r;&1TUQaTn`n*Pg>d%POnuUU[M'M@XFtW&?r'L-?(S/2O`Rs!r8O[Hfndf]S6fRcLOI^IdO.%Fsq!q7ri9*p1q+fbE3b]'DV[M]k'<hK59Lf.*&f_GUVa.%]asP5\(RGpZh3tYANXpe4/9\J]@FO-/R=gWG91\]_^:S3iX1&mb;5=NMEA00-/WX*#n('UMUQi4mC1lg*\VTol^+I(G=M&>=T-r:%?GaGTltG6Ap3?+PCp`d3qd\N1]^Ts'oZlFODok'8*j8E7o=`PdHB/l6k2<r#^MAm3gstZTcK"f\Wg:=pf$j'WdQ?lGh]=Feq;X*2%K2U:XAs_X5r&MCaZ+`?4FS!>gm,Fe(B<dXoD`IY@$OZ&mh48*"nC+Qhmeo9H,+ka1I2BZY4M@8^0CH3&<hMMCH2;?_'DM2o3Sg+H%<]5+c:VSm+M?!GDo[84U0=L'8o]K$+q7`ab,(@L)cI:PDjeq9hI6+o&Eh;,`ClU^FHp']<'#&D5_ad7GY;1V*LOHV=Ap6@D%k"no%^:sglDsQ`XI:'VL*`RJI?LNpSppLNf:"OSO?6AUuT=P-^BD3E^-#M(Z4E(8po]=#p?HSB.Q=mu#I4RVM8029opK2muOo3Gn]oD.D%>:=h^BU(7rd#7:@3!#A2m4a]Y&a]M;o$`W[OgE^7=FP?;J+Drsj_Q3g2n)I>QM6]K?85)K[nV.\*Y)2dkNdMnh2Il**ui4lIrWK!%E0m`q3/eqT[_8p5/q/4j02!)Sp$H6+^Sb+?FRSFJ0E#cd4o]kUH0OAT9.+p'b>13_&%BpHA,0J[abG9ukqsEpjcU&mO6LF<I`j#V%+ihTg6Veb2$gbNBJ`XL*`ijpmok-bPlP.D:Y\qS]E(W<U#l`=ZFh[#r?2\$F-8DUomVVodC=DDn5M<TY%[UK1H=VW^lJQEm2jYm,%>W-D;DpS*OH<fC`)IDtE,D8^/na\!IeCJ9tdu/Yjn`2O^!tV<n\$%-R!gW6&*h7goj;bVM:XB!.C&K*u=71<T$^u[4N=333rV5=A%m%/q9E@s0*1>h3^q]$O4lKI\Ak/3knXS)POA\KPL:L2.u#&uc6LLn24?hZ`@#lVrgn@dRuE+!!9I;fN?o.(%e)AIDOr9@k-n_LXh%a0-IjR;_)FDu%6Ff"I'l1,Mh.$@g(O[a6S<3almQ-sSd=MPMiJ5eP*8mq[u$gjt4>JiiMjf_Kd`pr])\6@E=K0XaXg?GEc9mbs)i%@'@ffQ<P!]Zj51qf_OWFfmi9Mn2p"QHG,/6"`nB[=P7\UTNA8i\_rfTOO6?\``MTu0!8mn#rBU4EYm?7K*8h--uB.^E#4iL&pE1&%MkffJL'bhZhm#t=rH'-1[]aV,]60q5Sm@MR4*F1:rleF$GMa!PlJ);]7"di4eGUtk#tt$%YIS/@(7f2u@'^J&)N1gEU'p]5^Nk-6%.+\C<Y2_8jc;iKIcX$fjY_V&C;d[U'gg#-6^:"@jGs(1mL)4LAV;3)ERH$@e$O:J^rr"W0$;^YCe]dPj1O%Kb;4s>r0>=)4CD;<V%rs]e:AW9$d&Tjq]_lm_fi&f?`]rQ2q[^=:,NP`d"\>W9?4!F?HSoraVTigWEB&OOa$@'.*]NP#4UG.(&U.4+pIj9r)HmB3IM0$"2%QCbflc,*SX@$]%(Z;GS-6DG)]$6tPIbjiB-(&$K4UgM/+qr*!/<r@?br5(pSG=:e+XK_Fg6%;c.pYFO@md&X!K#/QJKi+0!j?>La%LINHEl>/&"-SbKJi'C/eNY)bP:&#%VYTL^_5#0@U"-!)RVBtI.hlV7>!LUV_g_h7T<dcd8>4^J-"=F(gl2<=$Z\n8o?bg'5p>Qs[%P3bFiN$j8F<Z@-pKj1%pK]Tok=f#9JX#.q('@X-7m)29JL[E=WZR9(l[BmpQ]>(oN*R4,t?U(;.kH6B'o>2iE1+.;#mY-8J'*1+7%I%M,6#QZs=OarDJZ'pE!oW`N84O"6q]&18o9D7\NTs+;,l9Voac&1Wk$?+/cH;>31*CgH]^ZDYf5jUI.J@QMW'gcD\@tiOlG+Cn*%G4jCj27)r41@G'S+n.+m$uY+Fb.Hg0C.:J*/1Jg#Q9&-9]];iCg1[fqK\(J>P1MKpgZR#%:[a%,C)6?shdO%akftb=2I%XiMr1hI%OPG'MgQiUeNrSBI`7T#p\CY(AMqE#2p<<%U"q9U:Cmd^Coh_Stj4,RX0QVVkG<L[qBX[?c[o85'_CF>i7h*q-).o`e2>BlDX,Wm/%Vd5"OL1JN$E\XQOma;<ZnpS;ba/k0=AOkqY_pOh/Rd]!HG.p,iR\aZ;0&+pWeN+\)Jo/c_.NI\d`su<=bPu?rr>skF4+#uc[[TGZ%g)(YpbT?Q1n$1V+_Iu(!9+Q432lmXI7_ra!1WY\C<qmWhp]V@6X.DP*iA;A,9?m2ma'Pr6H1^\+V2tQs3)TYW7Sb[LQ_(nee,QcI%B_KAs(B]+Y;+2Dk"G\`:A!ArCet8R^pqW]CJC3?(5&[%*YjYkYYgk*A3'?jkU[+^eQoVm-g[Ju^#2%]%]B0dT16cE@p,AUoo$kXE%iU'd3[1(.Go#)ZQh-99UF#5'q6X%,%+X6.?Bcr"$1?-ZE$64%NNq&LsG>'LYfn>nC'mJV#SqZ(s'nE8:Ya_@Mf_I#t;dWqAj7qHF%cHFfUko8E)SC(D!K'<b8mW9Lqs*)5<*KK1qP$`D,le"`lj"0nNpZj;F(0EkcE9qNhSk8jVGJB.YNq?A$n_LB54Ya>(#(f!FQC\QF%B9*"XbL3^_I/Ia!YJ)QY3eH"rL6I[FRo]]c]tC6n"i<E[^M:`)V^hr1pQG5qGMV8C2qR/8&a\oQ\nQ)c6RHg1GLoQ9Euh>d*q6Je%_nP].op)hNDBF;gjKPgMlmiVDb2:QIWc)nFUTZe*p<MZ+?[::**qkl6[',]WAc([ApMj3h@:+<4=!%(#5OU*E0$ipsY:MSS*VPbR%IH>R!AQ[ri64VUh!Wrc;btnh@L6_1Jc-9%h.K')3BC+5khcPAu,UYAhILTL2I#Bo):2s$(W^@_Meg7DqqcJqcoi:,=(Mnru-gh'+%5;,e\g"Hcd869%!Y(dmnT95o#kN*<Bgj?jJ(A3;!Md-*e=[./b^#fPMWKf-'hsr"ed]?gP%sm,;$Q?WApQC2J/a3LYlW=!l'!;Mo%3-M!Q?^*GfbA.S/Kb#Q"NUuo&k?Y4ejkE4kZec--Oo%JqSVh:*dS7BRl]NoiB+9ZuKJ1qoS\GNbG*fq_#V6:^FjP"(JX$SC9&R/?%QYU7Pr_sc!P$7T4I@RrU\9MZPbmcdCUCPZ/JXu.Lm1/;q2qH:@8`Q1%IAacL^O,!W8\F_705gbKp?p(u=*J%TS8!+QIdN=@:G:YG%UMAoL;b+gmcWULdHG8..rF>#Z^Z/bQe[q1,6DqS"W8R^CFh`;*Rtpu$6jWdO%K'l6bOJq^:iPOgG3aWAMY`o]XZ<I9O&d\%UPf(L%V%#>@^*@P;3W3@Y_m-_tj2:a`7Y915g9X7.73#Ok;4Kl5aM?%rZ&[Xh]b$(:ag7IYjN<fcpitaQY\t8VE9I88nfj)._YOR8T>$u7%^gRP)$h5JYF:TmFFntPO<c"qRb?.fMG5HIZp4J`jldt=[JB1gcfRW"b.G?iE+'bp]44X684IIsS,!PS"+C5K;#;U@ui`eQi$H&5e%=.[-PN%RKR?OkU-Wt0UBBD'uHc]o;QRrBnP`#Td\I(]+Akbg:F?^?aYrKh;:k\3CQ>JG0"''!32YR&M;:$@d%hqh`0nZB"27hP`f%a$Fhb1OT0dk@V<>D^N_k^?I`ZT9Xaf5/.#Bqs1l'mlhapRQ3O;Eq-.apHQ@f]_;$klT\bV5MoO,DuJ=;rTX3A;b'k@DI1&'[;T)Q%Dgd*-qT)REoV(;_E\Y<"33I6_%<t2[=a`*-J(XPVhUr^GDlSTUo'8p2h8\.$jcu%DRa(]^r0c76>E=NlV17Cu8'g'dAf#reg4UtI%<bIc"Rl1\E2&i[l"bkbfO4rtkB9o0nII@)XeZ3M"#9RtJGP:.;V(]<\?+<(G44eD@q0TF@q,.+BQ*:3MWc0W9g=_Bs\$50p@kcl*%G9#LK5RUB=r*U*pm6-hBqWmA\n,2&RB'5Ie*/40j_*=i1QS5p353`eWBBS0#4?'nMl0^dBMd)AGk(Bt)0Pp,D4rLt//ic_XO;,ut%DZ>@Nc52%e9tGOVR2V-9^>W)ohFMT`D^g3b#JOLrKOHjj.]d5T>g4lsYSp7riJNR8r7p5R-)qLKS.tLpU<!GiOQdiln5eV4SA`V9%Mf)26h5F:A;WcS,iRX]JD;!M[Sm)$He$a\tO_j\.Gi'#;eo.Y.`bPHq"`;\^YGp:6rQk?VFSkq6iqj9%p`U6*/B+=&SZBr>WVsk(%X=AF39Md,IEpqeaJ>Y.$T3(OR5u?n5bGRqu+-0.Yj"TZTeYR3bFlBVd9g-VcM;Hs2qXr>52jaP]f5AV<+L8rg\!55TNt<'+PAKp%%[kah!k4np5hQKDW]Ka1/Dg20'`BQ#)qE)G9k;l:P\`<M78LLOqn&lYCr5)dYm;alKKcqXVR@Xq=]f>j)[Ymf,cbq'*3"PLIl-*0*%/&'`(D]>c2ER3Eqq\,>u_)K@0PPDrZ^,Qr.H?&<Bg$$\9(RDa[l.+ZU5BE>9]re7iHIRmibGUDP(DlrGC`42#2aKfp2`&2<S:fDb%)RPuXTWQn7?(+"Xk=@CM/8o,eM>-BfQ9Yj;*0jm()Sc(o$GH4QR0MZ"=o\YE*/8OllPl2ZkPg*NTeN0n]cGI@^H)*3rq-4Qr#E.,%g63=bT>\2L/I]:o4%o?h<o-"7Ng8Q+gq((QlN]C`.Z,3.J@151+Sd+lp"<R6I#U>Ac0H,lf%"hS(Wke)EMU3ghb:nsr*9!J`oZA*%0##33.]lIr]Y&]BA:381Qh0o/p6C)o:(b@RLOUqr)R4a:.:?R&Z@4[C#^<`jOmJk^3A)7pQJP9$,VQr>nK7:1nE0>2>.R*QXB!jG%^4Yo^?MMb_;#l$@rALiZ/A8ZYWE?f\m/.Uj/6iH92`u31/L,H2kdg<NeZ7`&<kj)HqftK2d9r%5mHE9XED]TH52*)K.NU^^F-0J8%RnHd1IF/K+9mD.hr].[Y:7QcLHlfIDRJ!I[Ui*?NOTpmCIdsU55bEFNk-/3g+olhjW1<nJA;K]5I='RIM[)J\I]_e*5g;;-*h;)u%I1q@A8)_9Obe)jO!'(#I_M,`@?MJP[oZGc-cd,c7%-*!9\atlSGXq(Bs1h<k`@IH*j*USV$V"dH)lUM7L*<N<DpO$g#Opr<kg.<H%\(&S]pMf@qbcsh4f5^_==nuTKo_j31:Q'#FkQL2@S^6ZI7t!3EltZusYki4#1Z9FH#sTKgk"L#]'VLqR.LR;IFY>0O:)V0*RH*n*%+2)tmRGe%kR/g62LJ4?l=?*1`i;D^:53pbp\^dmN"hl6PZQU"A/,=H;^^,?7(j4[%%l"IY%l75rn0>cS,]G*38ATa/qg%9qaFpa`%*^5l`R!X,FhEO)dKD@NmMoX/f50!bh78_c=`I+Ol$3bFtb:4;$Xs-lM3*%-j]hDWTk*Pf+K5<Q=?Tr-?P9$^sbjd."=?20J@6.R4%Zr!1H'ng@hG?(n)5=OtrX_odDbT&jGMM&Al91q@FR'oC6Kd%7QCe#4s&%RS>'X,tk\2uX)D)/&7EW1-]i]r2)'M+AW3OV-eAr<[S%RXoTG=(+ZhqhJ.SDb&E_?V]Z_(.@TC-[5D^PZunNWSHK4ASeiS<i0SRArc>[@ekQ9HtB%pf`#X`b1$TJb?1I43bTA1eX8G3^G,#G%I)%M'Hf9E[gG\?'2uU*)IJA,kEJXad[lVq^:R`#@C%"5r4gI4aTsBle&lJ;B]=eY8c/8dFY,p<>*naTCQHRL-a=##tnh,W1QMtdD%hf8?NVl"0Ch<4Lt:N7]X_1uV!Cua'/*65t)BLk4ACXIMj0.n""3Bcs?:HJb2-f\rXF)!F)CiPA#F(%*,N43-nERGjhF67b<mlnE-%Cl`a\WVZ7W+"S[QI<$tZc<4/9qh@\7lP'6TmFaGr5`o7GJod`)eo)O>53nNsZi$VUq5dehcW^?h$=;^D?<b'B"\NI']`BeV<ZhRi%bGWC5Ao*\"/dA#9?OW1[]<Z)F=L\ObA!9G8[?j2*h'sD,g"Nrq5GQr77un+]PcZO?gt_f-(&Uj2[tGDGS2&-ZC\r,Cpm%[ar[FD;%/EbH%C/Y%&c;1UiN:3*IXN$9ScQ$lLh61a&m%1kYbH?]n;*U?mW97'km/2oG+.,u1dWEsX=fD4Ia3P^+5.YJQ2/$(#DT;qAeW9HA%r9MD`Vh)[u1B6?:r6)fk5Xc?cV+2=ej.co%!41!8h?[X:glre#gZS/=rfstmaD+c?oW.^[2q>S+pQB$3KRCfSlW(5o2=hd=X(8UF%2]hppodX+H_Z&XUX]I+FC/nrfVHg>$p4(B4S=V_N,gs"LT3c45C$,21O)2Q0ro4@l1s[efIf&Q^N>MWlp"((&,lFk:s+>g5iJ=c;%&_f/A7g%t7QSW\2Hc4,M\`"n[cW2ZIrP&,Glhe<?T3cpDha^EBo\ekkqc?j[S2q9nT6],=8*7HCeMAlG+3an'ouqdXCo076dJs6!%s5j9k4]>')s*r>KhYE6%^BZE(Wp$EXrP/;lC]9Ch*r956l6A6K4FU0KH0#-SE,VU38*Y7WZ9;.@,B['.q$;I,D):Dps0il)rW,gK%n=qn`hk9#ibhC:X%r^g+s8Va0;]WCTc>+@K;5+MK";S$(Rj=2qRkkHH_$3$e%&D^F'Upn$%?M*1Je,^OHIbmA,Q&.G1j3?i;>`l/%=tp/0'0KqqnQ1+h3b9`;TI69g'S")7SVjA0Lq4k+/r?OmP@qRXem%6(pd%^0i'apeJ&[72`JNMK6Cg"KJ'kSt)%&Uf'2t=;')gt5%Oq.M(4:-ppdSlnCMnf$i443c=:O6\)Sb_oAT@W:)Xmdr_-N9g=c6NV3:O^qA#3/L.3iGQ$i3c8f`h3/cNNc/%Catu5i>4_Z'5-<#%IbLhm^#6"!cB,a7RiaTC@/.^eL;[Kt8P_DqO5OrrgXKX/9oo/s_ENg\:F#5T#l?f6g*][iI:8UZ@l)h^D.4FuU8K=d5,_a@e.^VQ%\Ap'1SqOlO_cf4)o7rl_f^V?$@Ar6ipff$agk;<9TDDD8O4rsJ+HM9<;,^VD'`MW-R];Jt9pVa@`]F+$*ZAb7j59]AXWH'h_bNA]%p`Xrn9mkn!:e?'%Nc:Q)*Pn;$>npdL-*SWH.>t@jpCRAU8I"j,a<&o5*eqH&_aZe*nqTBk3W:Ja1kqX\T.5u,rqr_?*d.%P9-:PV%5JfYX,:Dq'r%3AN8s<>Lh.r&tf`"j4YG9e/BGfOOpICBD&IsJ#bkT"M)#!`Uc,?"Ng:_)rq:Q,+I)`gBk8Qb:&!N]&Yo3irBK;e\%7(.JYdSAN):8F=F;j5meFH!b%D&l0P-<o-/P)d4".Iiob(%H/:d@'7T`!sV7-pHM==<#a.5@1:Wem^`i"\iiuM2:m-"rqcE3_4C!%Y"=^EdP9lNYY(*2lrd(2?Eoa<2&5XieGdM8,1[2HAjX(#h4UD5Ubsl9PVM##9#TWF\'NI%ehXs<9=3(7L=6]3:J>%9;(?Bo`ekXW%Kk6]P8X!<I&[oF=>KliA`pPbamO%>J3q$31n`c]'$m:+L[A@6gVjm=\;pT<HhCAIH++MlUf0a89oIeP[8=o4hkC&Z1:\:jL:]lWX%pE>PZim3)%2W,2V\tN`d]q=RHZ/WS1Dm!eA/I9[k,&&:56(3<"6<!d5,O)gDl0^5>[L:F"/P<&A`]tFpP.lFOQ,PHnA&H6-Xg^T-%gD>5OK&KoF+iKkQWLg=nh.;HHkTlRrQ<!7aAj%i?8?EI*JT?0K.@2J5@`+"MCQ1P4_tt!"@o0L;j/:1OFp9#*0F3AOW#J,K!j3J!%,XT6.bk*SUf!]0)ekIX[^fj^uhc"-H&?lpU&tu2LPK/Ci4$T8%TX"0=qS!P''>]'g#,>qnLBN6FEGUCs3$ehS&HUL3;[*mH&[I*3%RotASK_^3R<)BD^O`rXg7L18t/r<D3kfI<B&Qb1Q"g9U^r`R9&Aqu3b<'ja\V:&//io:fUg32JrkObi.P1H?HV"ppFF\L4b=uTK1%Z0S$=>Ei+aNIb1j0eF0>NlM0Pos+8"B%$RFO2L;1j8/R]O<MQs2Ehp-Vks<Y1t*^@-g;I`@dhR1I&:HJ#_?+"/!4k_VBS3_gA&]P%'*d?X2?PS:&E5Pbkf`m#gQrD+Y6cs<f1(Vl)uTDtBko;!%B1->D)i%K^'1R1a(??@:m9P*hdD4e&XaupdU[OPE8eTV-8;d*?&4US%s.@-.1R0&!%FC@:.1XK;5A`]Cp`'-RTo2f(2Uc+K4-1d5^>8.Ld"r7!fl<10I:8O-e'_lP+NA0E<`PND%44QdQu>;Pn)48Q%:;e:%;MIM*7hQEdRdk<8W4e*5;s.?Lb`koAOIs\(hFGuqR?^l`^aG#r0Vf\KC<Eb'fHL7Mp`e5==Ap+.ZUR$$V1-pPc8NBJThI\46j0r1%@."P+7&J590L1r4Ad%BGK5X&9YSMJ'M'W4NW8nCR&jk)G_utYb=I:$0D_qC[CHo7eIB3a7[7>N^*^Lmta'&V\\fjWXIi?BrqV)Md%i&,L(dulTk%5_8i]Le;DU2=`O\pYEJ2AY7g"o'Fh2;Jj/;S]PW@sa;fTgX-c5J9Ps#IX3VjN1,*^rnOlK(#eVVYY.oBD^Y5QRD5W%"$WY51a7p;*RD0Gg<dJ,EBQ4!NJkK2+5fVF#].c$Z?]GcR6&qtB9mohL0Ws&7#T/=),A-,6qI68>)J[i:d9cV+UkG3i3YcM(WQE&%0T1Q7=Ea0HIcq`C2dr3d6XprKdIT7h07]#g(oTcba;Wiq=E&7l_B&hF4H/O2(a(@oS@:@B/Zd4gY:e<05A'<]r2H[/;G5?/35^>^%?fR2na:\dZog=2YTiQ,1Vf]cUK8o[39qJ<23nItY.Z/@brO*GOA"uW7)0-Q5<\!SACr%"sed*$G\It)DnnAC#UV5$+7jY=]lk&+(%O=r06j\#*"[M2(c`Hoct`?E'l#;-J+`@tEPYRN6*i@<28/LAA9h"WEO&,!VOgW&"3g&W\H#`4;S?F!0kbJnPleatHlp_\K_,-\r4%FS:ne[@WF8Dg3_CMeh8K*6%0?_mGO<8:ErmV$49d\p?l)k7u)CTBNbB:3D\laFCP/P94^f[6Jum]#8+TM,(LMnsFlf@$>nq1[1jE%BbF;>):VX>5a<1!*C42VPEn1kR$Y`JddO]g$IddJlo3%%Ff<&eJP[\.&d[a^:IF9%+"XA`TOqYlaE?[1+8CJYFPW`AJ$NaOK`";Q%X>\L/c%LOojBi[d<ln\oTooY/'j1f9>;*;W2eoQtoZ"X;T1Y.?N1K/`2>fST8&$Jp9s&(Qopb(1,gBKQ)K?q"U'_$D'u,)h<cq@u%P+P%)rd$qrB5EBYR+ZIfIUL_;>oT.Z:4AA1dY+&>r"Y%@N^PTJrJ[Q"?n"U/T2A__JC_dF7t:Ccn[G\7J,;:sQ[Y+%:&XJO@m<XZ%*d>QPU*cLVl/*bO>'Rq1Gq9?*HBG=UkNsrPJ!"!&'V@<Xf=R]^$/$BS^$r(^U_HKYp"q<s<M3*f>#2?.;R2SO5^k$V`H#,ckcE82%XHWR`PPhMolu/'0o@*HCk/_<(F8N,Dr7E%@c8lf05jr?4hrYBpqb?@MfDQd^PAI*Q$*EC`C99:n_eGPbXIa-pKU17I9bO850%Zn5%&l,?<P->RsBp.8Cj`Hq<M,GtX<5aPh1F]%9&m@)(=p!:*,&7ckgmHTA-U`2U18[T!)a\?%6AO(-K[_FWOq8Zh=X,sdRHs&e7=;ms%EK^qU]jk(e/1WJed0m]4aXl[UA4KEgr(M9U_K9lKc-Ziq_9%#N\Z$F*h@aP?8=VjmNW\HGMWT^.0ZA-%M5JYI,^)$%dDnhCi]DnE%%MM7IH:3A+j>sSk0Lk10?u<C!\.;r'_[=,>+'i,q(\4>b`H`dp8;_[%eg*d<knnKKL<l;^@8Eg,nVX/JY,R3fUDC#-j46T%+kCo_%)doOneW^pX659I96Ge56*^Mhien;(@24fYh3k(ur#Gu$6W%%B"Z!kSp&U6NS),`.-<l(/>(gL>@@n)%]`IE]*/bI]>RcZgW?Z6I:%M3KX%7Yp%g7&Vd2jKXDpM+8CthgnfW#m/;CY#QHt+6T>ZO;3F^2FOA+>Z%%pe$OqW(C4")0nhJ0ak.u('"=X1+uYCIM1hS#jU&qq%WX;B,9M*$'/kRj<_2':-7#EB(dDVgdg!`@2d"W8>7Cb7C4[q8*,#U&F<5aPh#@[_HlC+r"J.OfA9e/>_pEGD]rdoVMSj[)j$c5O"%B>mGu-5e-7RTj3(]#4sUegu[!1oZWbZa*/e#d!mOk`-2mOV';KgU=sI.ZbJE>EL1'`b&Cj@Y[MfaHA4i'-0!;,9o8>Kk:*S9:snj%e:\*ENtA)p$AB\?mS*tMf`)7@&t[^#qDp@)WKF^05r?+$6JNb.*eYOHR`,RRC_d5.-N$A&9@X*s:sjt0EC!&B&P$WQ6A^dtRqWJ-%i^AYM_1kH.OY3t>nY3Ni+q`63#\ketJj>09n-r9L_[$=48`-mAMtdJX"c1EZ58?IN&5aT:!WB#iScI[2eA1csEg%CqCk,e6M'gd"%A/7(W/28/^9G2"EMlX^%<8iZf*#7l@@1%ZU9Wl<EL(o\X>"hUN9V%Rp5Z&s]dq(T2GVDZt*g"\,?c5\oF^_C+)b=ZtnGuGN4BX7>%'kouc'rU_a.r.RgMs^=Ii`]$QI0JMr>k!//*68H9K^fil'YaH5)5](n:c&L%[$_[1*%,4:potVH#cslF/b+?g]SVaF)mpA76(gn?%f_C6]9t\eC@72H[p4UnE,9R*r+\\(f(%Su1,QbN<Q;lMlMIe=!#X)oX'mV>A+>XVd\%(HafSV-m$/m[6O:fdUd'a"Q77bAX8k`hf%E@X3lYZ-bugLPIYDlmDS=Jj9,j:Q5@$aP)g+80Y<m,<EG_u6giiI9FsrNM(S@1W+M*q"eHg^ebA+80Y<Cj!60p2E7_iI9FsrNM(S%@1sse\*f%-j-;@`@Sg(tE:^oAl>.P#e4.[6*Q1,K#$8b8(,8m[&WGgT_UujF`ccR=;J+_';WX9[`fulGe)*WsN2<CeBgggeb@ka>%<&7c>iEM*bAnOL1':)8aPJ50c$.G%QY%,Op$C4;mKqErCP(#N^q^GVskmBWY9-q3u:W=#=>NVhkWFR6mPB8RG8e,E#N$XX9&m7W@%==W!%7,fS(M'Oq-\PC.Bah%,.YuJ"ZrF@IAKSpsn58d*?8+Nu(btm4eQ'0%PAF%Bo(eZ/ZMFdYU/<L'8\PC.Bah%,.YuJ"^rF@IA%o^h:`:W?;SVY$(W<,s6KqpG<]7e1U;btgRmW:K].R$RAFMR"L0.TmQ"$'n3W77;_RP/\8d$C4:BV4W^CP!eI]@u7!'";cMBQ:dJ=%.9IeY7e5#fjsLR+$d!]oZ7dG3/<T#-9)6"rs#"Y[\f#fTcMsaQAh<R]NkFaL,l9;f=J!Z^:Vnm/H:5%[Q0^sc4"X#9%94iK=K3&6%a<Ml[PAE`7gJQ($6uj-,`7pXLf0i^R&`1N,82d5(qdS?t==S%-&Ir<=A3D,>O%OR?P+@o7M#8Bg.&)Bk3c.#(=cZ0u,EglMUoR*Z%=,fh`&P8=L"%,J*\<*%<`\O+&Lu^6:#us-T,V5-q7O4I#ahB<!KV]9s^`o*j/Cb'I+puG<<3dI*m)C=*Wg"b[PB:B8,:nh1)Sqs_%`dP7PG!sc=Q&qV@hqq.10O\`j'onBC-MA%1_4[iIO16+ZgH05U;$]7R+;0egh[+Sm"qS8L<0JgFUlfbX3EQRh.Fr#;H^<-c;^<W;%PG06^Qub=oqqR-%@MXo.Kf(Vfm>u9:P*)F9gqe)TYG@838Mg_t5mp/rMC)Q[PG#lFQ?'O5,!Lt>qW;=e,,+2ZW.ctYI>knWg/T*c%2P:bEJV$Q`^j@m%>[;-EWmF^Vp)kAc%e`;@'Pk".4Y,dL/!aoX9mM+'[HT'0W<,`Y)Mc3pLA^P9nhnA%H>_Jk/H?mrA'$,3!:PMj%aVUPV+rOU`Z)Ok-)$SQp#REbua5s`LVdb-HVD$Hk\Le*<9`4N1S;j?K$c.2t3ui7j0H"]],AE*'0H(HGKQn;@Okta).jW[+MOMa-%,\*pDe>>;OHFc/H7L17aT3+_@Nf&_H0]L5HQ)ks3j/=Y656XQVcM16^$K7KZ70qT;1EriKKY\WW;5A_KP,[a73_76_\B1ib!YKK:%Ags&r.V"*eXWKKj#,j3D<+kQJP<$KfR,%Dn"ABii(=2$6'MJt29LQ[?j'.J^BW8#Y<+YbG*FgcVp1?]+D"1-b&H_4</!4QS9mM+'%Fl-!mI&B?HqTcN//S<6$VZ,0ZlUUTeFuT^l+dcb0Obe60]QB3IYsleNMJQl7dP4csXD'tX1jS7?H\=Yqk`cAGKq^]@&2TP<j3Z1^%^p:'r+OQiU@bGS8*O.#HM\SN),2NVW;i+=L-u(MYOGkpO&@iRP8<G@&)+hh3Od,W8MMgUOB&DN(6_'[oHPUFRY6U*%f3PoT2WQ=2%KnhWfUPs-gal)Gb8[Vj,8WZ]q1"OA=_j\*VYWZ!jfIN))\Y^Q7N4Qt`59RXVN26]]M#%%dkGJ!*C6*:R:^WN7U.dtjH`2dD,#oAH%WluN[A'>"<d2Z#P9OZ7<3qeH-g-S^Z+%G)]Nkh'%jJE:o=bP^tMXSBpVi;ccomW!XB8&SVQ6ClO"M>*O9Y0OXaQ@ebC(!oOe,`n^%1/SLP'@O<+J5jo>-.M+(qV2hh$et9j-3GaL%!Ag/f#+;dgGnB9!ed)+&\pJ)qn.#n,#m`OlI=D9N'MM:Ln_oO[]H96LId5L-9ZWZ%(i0Z!(-`Lc9a+tPV4]l.Q7R!><?"\AJ.O>d#E^>CBriEM[mR9.>aMK'`,[>^W\@Th4k5YIWb?o1rih@)e`:^YYR^A_+:-/JTp]N:%_Kh7"<riOffNLDo&>XhLLb]PCc[j*:[?M\P9oP1IXVligAn:u(U^4->:X'IQk/]!6C2uagF;V?Dp!j"c0VL<:jP]A*]GO:AfDC.d%^rQY@#_:r7F[aC6H>I=(;@s%54huta27CVC&HJfO+VF!\4ah2UJur_NKu]PfMaKk(4kBAc9hg71U9kd-*l&E]:cDRXcLo\T0hB;d%*+H2pfAtLf,KZZQ/0mt\4[iluYOSa-6-ic(74>7T_7t\ng=mBe%Kms5"f'.("*@mXI1K.iWN+,U$.):"`bIIWkmP0QEeQNol,5$:%Ek/%k3fM`N?a[fGkO[D\G:],"/+M_#Yd4o+Mg$5=J7+?l&HV?KPM"DXb2@.tX[sZnV,Nb8@qf>324;=Q&UWjZ9/VF#4?hOS2o')<%Mhj#9cA&O)&6?]N=Zq!?,K-5`L!3AW849n*7E`52$^j>BafK@(-k)F3>*+W!i!TG4)Bk1n\g0UJTdPog!8B)qn@#u-MJGkE`md^n%jg(MU?M%.Rri[\J6kGP$Y]:Lr0Y*l2/"7ZKQl<kAg=um;.\g[Z:8foo)4+J@`f&]X3*#@)8_V#c=r*8r=Z0i+_8M4J8oFi2Blb5,%=X_<ca@RbY.2N//S;X6\Db<^"c#'+b+].8`_^XO1]dQS2WMsF%\\qJ$gd\NLh?!9PK6kiu(DXpm'WbV?4(FehZiQI-\]r%uX?&a@%-:S]hjHCU/o>2?AdcNI7Eo1ErF;pPT>kVJ<`pXV=qYe^,8t4R#bHgYgQhk+lc7r74_5pb<UlLe/8t4Q@QE0ACDWC*:Aa`&rr(^\O%g[C(mg;4%tDI$;'[rEa`[mLM_EbsL-B\*rqdcNI7Emk^S$-WD@Q:,0:C=oC6=qZOg[(-XQ//raNIa<-]SI*7Z(mEi2h5YY<<8-+s%Yah&9D4G(s,sl$<RVF?q]Yl(4@08)CS%Vb)>dd!,PBZ;\U0U]b8t4R#bBDr0gQD5H8)CQmH-^Zp4Vp$'Z>=XC5m*)$dt,G-NE$sj%+1q8/@k)>5,?V,0SPjm=3b_/6(;ZB*[75!O.5=CufKdWc$'D]/^aM+<k,fMQ[0+HNWU2;AVUOZcn<-;p;Q7`R>ND0g3+l[$R(iZU%WO03q"(/>-5EC<M9_hb!+pB4j;"LlAo@*Uf1P:R7NQbdsCXW,2Vc3M/j:<"*RbJK&;Y.(hb2o(Lpb6I-[F1:)YfNdudE/a7e"MYh%A(">PWa&Dd=\IE!aJfLA>3FHN3@El<9=;=)4>r.c3Qdq;bUC[<8"&]0*Dq;SM"Ws;(Y2Q]Cp(ikee7heO";K]Y?c$?AX)\f/Cip@%o%6:I6rN`mQ#X;k?X^>q3kuC:"5<r-`P=qg@:36<.5WoM4\`chN%l>l`PTG$\NN7l%[Np/F4+%+LJ]j)ff);j.]a"GU1.R.+Ji2m%?78-P@=+^S]1eDT)G.tO9gg1@Z@tH=5a>D%jYBPAHs=+]Q:]]"hR-a??@m)d.*o^4.3V.ed6t',<J@;"Z_rX^+;s,I.8%(km7Gu/%oIrqGKr-srN1-_<=Jm#l+r:$q=qe/.)h`k],t&EO,%V-N2D_7ffE%GEKSY>AR[Li]dZIHZe/+#5kdKJ7mm'm!7qi!+YV%K^1?[oF%?!(uUAs<kG_hq9SlY/+aRYDjJY].d#>[bfI.e\[o`9F4uL^`<TP#=#UKF+JEFJl?\7#G_sNi5m=,'m6G1#].b3PgMP'0<VEltLoD%W*u!4\Y^RbXa'+28P6X%0"to5>^/?KG2aN`R&@lZ186a1,us&aWm$p+?nl<Po`tX]ACbjj&dFYug0@Jr)b/%fX5YB2+tc^u=J?b&%J/(gW#ZqkJ\K76o&cu*RM6+_Z[Y0hYLKLM$p%5esc%Ks$#++h_^iDcV_K;]T:kgFHpfk)./5kY'lGS_F?6O1?C$rB(mDRlgo,:'M%=]1F%K/"^3AZWBJB8P/5LfYCnLbQ#m/!<`4,aC'cW$rln.:"=FC8c#:^37%M65'-[V-L1&L_$6rMR)B%.p*JMRo#Y]X<^,gG$L;c%2C0e\<hgi>C/-+C%J<HfR)5<=J`7>927]GD2N4#:9(->]57'0"8WR=BWur[PBLT6?`LF/pc1T`=QD.`7Q40=&CIO6W1:9Q$VI)cj%ch6q@X\D6lg6so5#h6k"!5s$6/o^R/LIOOmY:NTg>3aV%k$EJ_@2"1T0tAmRWQ:VY+qBg&4K>N.Lb`q5Q<>Gd[2JRNqj\!>6o2"t%`M=t4&tg\A=8tlKk1/2&S1U.1O`J"0,!([NR7UKMhC$-)XX7B5#X<2^@Nq$J9tV)cP\O0nJ;TKr#1kKcIO/$*]A/pASQ>*A82Z*u%4?C-=QFTRhF(jQ:(%[\j=K<$s1Tmo0-Bo<TKJ$gZ;s5s(29iaZhf5WM'u>#ZWAR!Vmj^Y0TdPog?rn$@cW_MR4J6Y<5iM3__VkNL%_ZL7$#8@XY-la:)3'<jA%hC'.*`+gYTQ#-@iUDB7i;nYM!t'eg'`P:"THK`Gp3&t-LMh2c;V^*=M9Bd`4MJ&WM^'6c:iK3S$f,i_%CDfsq&b?*&`'+M4pQt[1!t;s5=(%&mN\ImrL9]PT09.#rYuE_qRPAAcbk/AA.q>RCi^f2e27"J!.Znpoj*hZJF!1Jh9-o@,:J20B%559,Lmp%V>`_sp=,fNR!&kVlf6Z/I"<3e,$@P!f2bD7!.,k9@IR@fG7P&9G2@u2H^1ZadYV38!?Lp9pbUPQia`Y(kUh_im)==W!g%IPR3]p8+C?C!!rlKqEsnP&9`L"A:$1X6uB$A#X!E6mPkafhk/s-Y&"/+066,16tNjV4W^CP!eI]@u7"&7=>t'Q#)A&,Zl8Tg\;s:%`_spiN/4`<Z7l/e/<OaBkpKu?A5i?H==RI^@"K\fXXi\K@&[[<^*CW18c65I-HT@>=dORmQ:gkIT8Y(Z]e/,=5LtG&b"WIF5LtG:%G\;+N3K-DFI?jAEVuCJc/p/uBFPK&:KeR#1s5Hr1O%AtSP42bI]_<[&PH78"lVYcA7'b:)XaK9,O<cC-$"#X:,9e\&Ce#c*;9<67%EYsqWY=R`XM6J6Lr;&i*fo529MK'#6WMCt53/hF3c%omd.bTkRp0*V'nkFL/6jZM/g3Q/m*gQ(],eGd&=-\rO)O5ChP"nYJ7'8+6%*FkM_@75,QPH8UM8Q[=mN(>k%P'pK!#YQE5h*rPZ=K8^,7jRCta_jMP)j>*=;Ne7XZ7\cj@;/-Z#k$1rm]0?p,Ed5OK`''jr[s4a%$![1(;$UI;X)%&H)"[TNr#V*+>hor..$T<)-d"hfCBesLS$pp8D6?Ek7ZoJ1+5H2"LS]SH>?J5%9RJ$5nXC4-dG[#5HJeYMY"`@@%N*USb6OtXd9/7u/gt2"Z<&`m,"Hf>\j.KP=/aQ'YiY>*DKr-uHn0JS%R'j1EG4:chD2n?UCh-D&N?8p(.2W.UR>?CfE;H_Q[?N*s%REQ_JA'EQ/WXmi=U*a*sZ]^?^@]?NWPfFT7Y2EM8+YZ,=W8mY+@_SA_Ya(se$=sL4/l2mFP<gN>n846k\8&(@l9\F?fn4C*_2:tu%?`@U2Y-@(7*IC4Qi]1^&ikq_R;jNXq1d!)j4sZ2\ReVTo55&8A.dq-R]F3)tg9/mkD5N)>:/V\bhZW;n&N*jbfcgF5-&5TYI3q+&%>SsR2/,2cFI30gRKR(>%)Ra_&B,th(pg]P?M+s4k#^?hrA_/F]hn*Hg(a4611CEFpf(NL41r7T,e/fc@O1Z+)]$Q\^LJc[mfX:9^%[P_[WbGg%F__5oI@0]O>K8ei\LBHHd^3Q#"KdN#:K62c41Oq-72:3?UH`DIt=!H00Re$5-CA8'HO'gIjDp3t$/==a3CaE<sT9BZG%n5'H>gHd/1n4B;X2G=N_aq^@MAoDHS@;n::pr]&`"-]]I66I:o,uR+(.??,M%55OTfR<V)Y/.%SlR!WQ)[FjG+m_6T.9O$71(j%_%i0^s^>,oh)$.;F,`dI0\TKk?E_Ofe0iY>%AkG5)5&#4l!HMHDMm+MdmS2'dI>n?$0%fG@rC#QC>+9`-<;'mLV.4Cgl/T`d"j_#?s%-:Z&tUgjfsN<aBX28Ro9;L='^DNS!E<Tfg.pb6IC'4>$/n/tV;?*'$)N5=K9f]*[W2ND<oY%Q^HLXB""TrH3$D9XKQ`S)`/CgkX^%3qeH-g-S^Z+%GX1R8"^"YgeC8<l^LB[e*ShFg6g-93@F[j+N`P<4Hb;mlE&^$;E.Z#O*']Z/m9+0Ek8>0`pU6=%[3U2!+7]W-p&B%qB*5fJtaU9:k)F>5E'M>nB24_"j=MTL3kQ9?`:)Q/_"<g"K?]=``VSF=:sYd=OVOh5"Qfb9MlZJm\GN<3P>gt")-sE=<C/3K7Q+3%dLWbgTG/r@8""qNN=4LAS<AJl6`N_><mi],h]_[3>%r#24mj\_="IA7RYpkoC>THXf;W3K_87;K)Y<o'jbM%i[e7HY\5<5I+lNuC%+p-Wul(@E.[8^.>W\Sp*1CAb3<"Dm.aV=H-UgpT1W\$'hnR9r:iUmsX<^/I@EQXt/==o8:$(n7T6XX%o$E9LQP-]sh047UYoi=_r%6BfUZ5s!#5-dtE`(JRn<YEF"o'h]!iVEDR([>CN,"HGOWCVa8'6SNJ_ELA-6.9t"0,T=u((6803NL"="4b?d-a&j)6%r2643jhH`%`#O/6)=a0f'X;)bD-ZaeV4c,n-Ro:Pc`m0-W@oe)HoM`U"d!c3,/]62TtqCX7S1u7O(`!Ultsuqbg3(m#V);4qrW_u66NJQ/!4k_%VBS3_g<XeUlbZs5hc0dtPqa[b:aTTs$bqG^[@n:tZ9]f]i4Ya%<*cW&W^9XLfn4C*q2')#APt@Q_Ocm3lkN1$Kr-srN4SH;pN</F%[,G9u#%(X*dhrC!^u>dP9p>^*43Bs%$^\\;SOX">6BTO:D9XI;Lp8"sU*:G)VUc$(AE8qFonB,&\cZ1rM'GYsqeM%<Z,GLtp!n<C%A@Yg@#ogR.\GtkA'n+#b81as&;^)QiH?Vle1T&U_2W0057><87eO\u*[*mR&2hJ$9\IGq$jc\B.KU#1[9WW>0h2YnnD<]:a9iQ:&%C"AH91^_51oK^@JSM?Bf[t0j!G*SG+j+mC]R)IUF11n@%g>#0%X<a4$<g%G7?=?Na^fj791F?fD)e`B?eWj]MVQOcM72G@40U4Q*%JX2#Jmq"!LQO"qC']q@kh&tR=QqEk&5g-H=6.Yn6.\@E5?q_3ac:A6l0pOZ+&M/"p`q1V%Nalh$2\fpnUD%Q<9[X\7d'BXoR#NP)%(/3`Z_t#!`_,T.D#$S0/M'0uA?)FdidRr&Vh?^",ju2]A=4u^\<8l1rm_k9`0W&>g-<BMmWO03q@+c7%$Kb!,X\p"f+=FkS(a`r)%)ecc`-%b9:]daVi;(s6On:lfT9Vp!NTOleQ-F@aTMKbmNI]#qZ%k05u2Re7'AUBqLDThUM0P.(!nYReL/o1[67ReK4JZtL"$>C3u%Ldp741PSKT_?O20Xc'JZUG9a/5[iG$3SB3FL8hPj%C@Z*0bjl[Z=2KXN>^EQg.M`&0pOZ+ET$.0s6$YqS!p%)H;h,XD4@i>6]b1s%C.&]cQD??Q)`.lLE]V&%M1=,HZaR$@kJSEg`DTF(.?>"7edS[QMmb'M48?2(*YCX%h*EJu;$kXOX[njHPKE/;XKD6@7Z'74[WQJK%OG(#QWNOU4a0ue-m0-N(joU\7&BmP2K)&9@(77Nj"9`eJ,#oGJlHESOg@gZ+&D";5m1GMc[Nq^Fk+J]0&#1Ip;fQ"M&KrI%/Wj)X%g'Y/4X=XgfR2uQcf4'QW-t-tJba)_GKXE*Lp6kR6EFH)gd),Gj@69'K5,2<66m/Su&>U"U)j,f],q38>8Wt8KV\9L(*k3Ve>[bs8%4nac0l9\Dj+%@i`VAq$m%$mD^es:RqAl0;t_Ha-4R6m+ZltP#dpqE!#mG!4=DC$<EaXksWRe$5-C1]?^$H"o7D$N;u7J_]5;7OTL%:0:I^1i"U>Y0c5bH^_?rDgM&s3jPW_YZFCWp55]$6;nq4LmhF?i7`"eg;6[uLE].a.%DGM.:uEp;66m_C3*+$FHVZh`n(<+E1+*;%U*?k_Lh:L,8j"Iq7=5r[0XLq#1Em8&Ycp-Dpefte_M0+@;&N64X[j$G/"2.3*@)Y8IG>efr,8(X@mmZ3,$!fpMYJl?@Q!+R8CuE!%CQ$e7>%$oW+,0%\:l8CT7MKX=UoHa[Q.]*;/`]V27sL;rWj#Pr3qeH-g-S^Z+%@i`-?+^\F=7Q26[1uBg;:B3O:p-1&C&pdPUeT$%b[/0?qS?VMj\km23k%V8@VqC[:h\#3$W.jO?`>mrbf2P3=PGl-.Ftr)<^Knm(2>Tn$8I^&=kb)V6,M@L\MZ\dei$upUQ(/RkjWJ'%@5WIAWN[sQR((ng@_M9+I?7>XC.&]cQDB1p,u&tJP-,TjG(:o5BsNFUbNZqqQE#"#7=5q0Z^UBKT.oA'fFTA:#sX;F$&]^Wnd3nd%V5cj\Q.aWfXfm>*U<kC@ehjp#68WI.;Ji*VNt8!t<muD!YdSKP5%SSZK:&pBKP8q;Ug0V8AbIrrCTEu5otG&3#go`U8.C9M4MD@a%0q3,3XNFXL37?\6eeZR"<sadWLh:KmWlao>dRZF=>\JVO-<o-/S;qt@)=a0f'X;)bb\G"t!?5+/)!bR2PYnM6gf4>P_P.[;=^.2$%5*e&4dRZF=lEDd2BsNFUhTr%2@O[XZ.cS@ERFUps*+J(71Qb[MIaelI!uK66.Nt7g're4[<+Yb[CC=KM6XH<@nX^6!VfmNn=!H01%Re$5-C>h#Z/L)OB/Pc9[CE"YfMRDP[]s+prA.(ga1RGAT3;46?[a2&fP-DAGeJF,6kRMc=jo<!T[DP?DLPI&`%n.HZME!^4EHink%n5.'^TnpTR&Vl,clGGt$LPI&`%n.HZME!^4EHinkn5.'^Tnr_%%RoaY&kfb0[_qg\KJ<Z>P6nMqqT'4!.T?G#RmKc,jT`S:ZQmCH%GJ(\2be$d1Qs%FnOV,4_`_;>fV7S6H]ZrZ4V!C&U"meOL*(*o4LPq<o3JNc'"%29O:*;.?(B+W9jbCW:JWsF*$NC7WEa@Xr5YA10%o<0+V^TPeqDCkh!^6IqRjSWC3O$b$Af94VLT0Q!Y2S!Ap"O_=nn4t/Yf+n8kUu[IV(Zu8X/<O`U(DW6,QC4[*/SW@D<*1?t&h8>;%VBt1?7(IHV'$7_D8?bLf.jG[#90-#J.9IeIP^Wt*8.MJgJn[gAN3oBgM<%3Vet`'*HhHA=$'n-5AOM+rP'n41?s9injLt=;=<cF_%IL;B3%],eLBh8lWFUFF*[\]UJButfL5Prk+lppWQ+3dSGLFabK0hLVf`6Y"NVs1cc]U?(fN5k=cVYsVM_MtYEWP0kC#YO2`.He_3%g/>'oP8d-)6-2tD0Jpr5#YOaJDTGMSQ)kS.Tp-Kg3OfkbP@H#+CJ)-,ai-7)W\<K1&Uj0EXYa@=;RsB'X2j;4;Q^t$o.>#97o0hR%FetTIe(5@(Q(V)o.-60q3G/^[B?0)%;Q`l;'F0$L0UM)qo[RN<X3I#:SX390;RrN.16fj;7D34[M5)Nb,t"ZGU0]U>aL,#F:'jPS%>UejUjGJ9*:_H9&eB=Y%gN0tb2NFt2b/$m?mdF1JQpeKY%^(N!<!)k*%^nV?(frW*f<5NJfM`3d!*d2/nF+HkM,9E#@A&f`"@5e,%_\#bpeX7uji+!;Y&.>bhUaM32^MX)M@#$7"'!5R.VOor^Wn*;3;+AM4K7)-`.:<6V9nGpSJs!+88O=bN.VABHUg1(%L_$88`t"#-%>W:NjfFZVe%=Ue[UQ-kF3,Cku6GRr?X^.Pi<J@;"ZNo_3CVrcPBS'$CVY1:HFQA]X[=tJ?5)^CT:(@jV_Xa"#0R@Klpg+>@l7j3A%_;X8_@iiL]Ob)UMf4uO6W3MaF8B)LJF8L>.4`I&L2+@kI$4_ndT52R/$IS_%dF=l`+W%\k0bZN?!u#KLKlqF#Jg#6#M26Al\$ktV%CS@V%e7@\a).@bkG]/YI,1oJO=sF05O\[OII^>am3fLVCdZ3t+lYoJ3(_G'N,1kp;aM:1h8jpVp:ifnhWObaqaDW<&<./]Nc?mi_%]]Y\?66Ka?aXlOo9grk80s'mT[#I&R?\1/?eUdD=VM`8oCaiadFJ+W4Ys%WJLiL+o!qJP*,`(K&K%\fALo.2V-gdaT`DTF(.?>"7%p7iY["Quat1XsAFl/5KefL84=+",&V12p*3E,.hrN?3diY/dEJ+;I1b/<-CDjgLrtM*iiDkBd![('Nt#D,U[3&,1]n.h"s3f[jP>%i7Z(tr$V_a$W/5ph?ODnchg,1/i;+H]r`0+F^]K`BS$=tWBEQj*I5V%&e/P)ikq^'@.*M86lkLaD2krSQ8c#UI"8'q^>oDpYY#R?%,3$9iY^4u<.@<T#RKTT9*Fg^<(/UGn@F&mRnVX/JY,R3fUGfjbDrSD>\'8^s#4utB6R@E-P//q32FueQ<tjbBLk,5bpS-8;^tGWS%#[r'DSR?lu"N6`O[o.R3JA(03P%k=uH$gI:T1o+2@5@rt1trr7!jQ856eJs-h*W&^2iJ@]!T/;Mg%8Ih(2@Yt%$E@-#8aW=;A?[Y%RZh:0,F7R%20i^UhJ1J^EQ\YGg4I;@f&r-9Yi3U?f%:eq.)AV9X:gn,bLF(g3]#k20bbR0d8K(l\?QffW3$hjWN@eiJm`#6dK"Xm%XD]ro1_gdg)=mcp8W-qr[S:uT>DL)5#].c$E8U=lVA0:*[q0i>i2F:)Vt=TBC_5Ob,<lGH-\IR+%LB58WbHeeNZhIEl)C78'+Ikt%-,;T8[?R>%&-_tjl/.pAW"$R?HHmM9Te_`-@$r??P/dU>Fn#'4E"$u)N/\E6-E2B$JFU(#]q0?]7">aJ!W)3>ol\1E>/Xr49PS-S%L64Buh5nKDW>59sPE7"?dUbJNgkq0=&&]I#;>==LKapQ`hsbj(o7u#k:rPT(?GmAnUHnUf2<+r.?.UT`3`f1V<dYNLr91o_]Emi-%R2&@dfT1Q=UJXH$$cLWu0oH;:\`O4ZXnY)q^a?63(5c^sLKne+3IQFDJRr"^+FeHl&1CKr:1"O"NLFW(qa$<')3bhT5]GWmITG:f%J@4$_$<2f*\:2@YFJu_Z18#a\7)409D)Aqh!A>';!]WdtOI7pWCc>fT<GndF9C*,01qAo7VQerBP[(WI87gJm?$]cNj-jFOocsHj%4f_P98Ao%"9POa>5";?+3sJ7[Xb;iPq@3>XUE_><ANIEXb.b>/R%B^S?<"fWSci!d1DVKY$"osmpO>?$YU+]D$jn`F4g.6\f(&#X%/7:=s@QJ@D""ki3mRLFJ8kHj`Q(GP"&PQC]]m6B?/8_pI;_t;PFA;!/@leIE""am6a)h_@W'lWha!e$_[=24Vl$(-Hg=um9(7((5%-*26.C5PG6AlVN/M)Q`XdcNH>jcT:BO1aY%j?5FHn$s<]c\2h8/.AcDG$PinUG0gC\rlPi@Oc54""cT7+sMF;'5fE7UldAk>XMU@%h@u>PS(g3O2D5Xr#;&T%_B_<HPq`ZDd[$`tNS80@hQuIiQ@q!c:9?*P'#mo)_?O20SJ+o0bt.Xe,N[S-AU,(cV9NkMjXMnqgGgo<%l==JL\m';g*>_DG/PFn=[Aeih%o&10BF5Ej:j=1G,g=f6c)PGDqQ@o=^+1s\YXQ86`!HhE@'`pgJ8D5@5W8GW1=aqH4"MP?0NScC%AV1\<a;r$Dk)_[4KdS4$$b1A5,[mhsD"8o+Be\8<BJ8):BJ/#4BIt'!$$5cIZcV+:+-2`V^$1E/U:!EO+cms#Mq&d"CaX3\<=rkB%'lc-S&LTpq@BMe!e!n$pgma_HGD;p/eGSl080ogFeH)jXr#\=>DJJH7LcnIF#!,NC9VUm,c;__';]nd#Fh&hb'X=S"bXfc/$.@o.%'X9$--;1mS;\@nfgc#s^8YN]u,DJhS9Nlo^3`B)DL!F5.WmF^Vp(BEM-n:oH]A/u%]7eI?WOC0<a+mM"FW!CGT$Wn0J%W'RB?".U%'qH3S9kUbn/_&FsR&2ZJ%BB-n45huNg_q>ncX`HX:m4DX'mK1:b)b+h']aDR4_fl#%-oX*cD2a*@5CKN.C:q2.EuGtEQLZ!f\DYO%7-mX4&ViqN*YjDZ>[Ph<#@m6hA!\m;9J\B3W5o6V+BaS)9%G7mAhWBclQTm`S7n,@,=HU@,3<i>7=5q0F+$D8'X+L[TajTWKf&G^%0b=t00`mfb,T12B=cFPi;@-<VZi,d$*&:_184ZF;BaQ^lDJN2G9(*sH9+5r2[M!'Uf)u:E2U[HcBF7[kCp(gU[M4EUe?M(I2)_pT%,o&M[6@H#7cY[N6\h]j1;\URK]Ynl*9GZW"7?CtNOV(#j.]L#+<+kn]KfO86[%&=-gWU]`R_iSaM2!i%nR9p8nGtq/f9^;hX:EjR%0NeYq&P=dSaG?QE7>f/Xd3OO3FGuW,)2lpB(%s+P-XO'Bb;C%)@FRVF[bNG@f#RbX-qrn1KYitV67>Nj&djgZ$.<iT_<T[LLaH3U%F(13D@]?6OPfL6JO"1@-&'cMW[S%_^)kG%d)AcQaVA(8Jpe)C-KasRj9%_<N[Q)K;G+#04..36DqEd]E)qmuRbBV9Z_Hc*:6d8l1%OCg,#E.V1JQU.Lo[FCVDPds1c7l-L"V2>p8jq=A@\O8;d=:d#>I^$m+/l`Nt#T)/"I;.WjRR,>f&^^.rag@HO!MUmZ@D[GBE3YFb%Qq`YS'!n9"6=NDTr/Fm;Qlo46s%FD7$/u#E,n+7B,!n'9ERZ0pA3bgGN%+ra0aT(:#_O;O@J\K2Ts5R65nZnpU<0NR12R=\5Tc:7%3p&'K=qd=N!ItGQN:^<dR4Mf&*@A0<7&Grj5"(+HX;F^LNfZeul0*.<RmL=_\0<%=1@5XM/5.0IK-EuD`nuZp,`+Q`;5[G/O_Nc`%!)7"X-FFJ9.j?bnib2;R`rbcc!=7LtG_#qLOSd6G3Yu=oBd>sKR4Qg!=p1c`&OCSrp[OC^.L9i^$4D2J&Go+(MO5M_-3,'.W3tbE%?0pX?7<C,=0[U_e.n2<=9NI;`!F/;B#^#H>079Xt1+O)B@6^JSPH/A;/"=C\o#Q?DfUE888`,l7H+Q?.Ck^%X&X2H5W>4AI*VA;m%!(_geXRK%O*8us6A3.<Wb!Bnsr#`:<Fh$]8E7=dEVYe8*pP57+%l`;dDRr'fFFUgb?E[HODRr'fFFUgbrc$?biMQLi:%sF4mLM84%s8RAnrI4586^8\9^4$#h3ZGQn#KR,5,=?G%TCMOG,Oi*I;aM`e&4GeR+L\f?m=1nF(&CD$&u83[=T(-i?mI1,r?p$9mS4sC#.W#C%>UXAYNhAec:S#*kNZ]W\.qfS03IqgR2YTui/SD*=5CjG-Qhr.,,1dS/0r3oIOadEYE_Q[*+%(n?:rL23QLer[*X>&h>T94Lrts1)%^4"3'@jmJ?$i_&9jLW2mL9qq*cC4RL:a0!'?Se!t^99$IL(UuI'lbplaL0E0nW+hFkPOh_]J,SkeV/J]-$"Fm+%'3A^<2T6a&!u3%'`KhOaHcSQO6,7qk2.kYJ,"<9e3A\PS?&[&]EjbCeTi,9-$"DTLHo%gc\""Q"A7aD_EWbf\Y8MR+Y<qHCo38e7'=TqJ[Cpto?WEX%+4*fo>WjFc(ND.)jg](<s*!UCVX+%96a&m\l^Nhkl]iY.H5dZ*K)&@m7o1\u8i\gWf9UIER+tN\%9bC(!S?CFEWd]br1r2:9J/Z2%>g+iQVm;EFC0VrSj;:MNRSp<9EZkqJ1mQ8W,Pm@KfVWZlV/g]-=-(IGV-Gr'#=jq43J*DRTW7*oDG6\k.^O@+9'(e*DA\LgI0,fV%6)e*fau*?T`W9'pQg706eY\EQ.$aBu6'a/,V/fijf8[j/<?Xk/&kCtS3B*h=/`k[u\[F!1.7'r'/*5QR>[,@Y,P@f`l=JDNmC?LA%)jT%>W-fMqqn'o[Aj]975=a+DGagob_k_Gc/rYPr9q"TXJIlo:-pk_8mlB<i5CKG`RS44oSYRG85':M^&Q&Y[H")[3\C7#h@NkH5%o]1#N/cMuPVeTHLX^LKBI*J^,F<jkN;=Rib>f<:gJ7V:e#pKBX7\5be$(.fnLtO/<Ek.ng3fFq79so,)$ta'3r,R?rYdr,*j07&@%Q2#nV9#4%Ea:JEuqb_![h\Bb&WmF^Vp)kAcYf4sSAs"E"TpXOY"O`E6,1RHto(XnR"!:KX_G1=D+%b*c(^q?+$OqL+b61]VKj_D,%73^`^0JN1a#;'M.75hK\25@B.^,f<UIF$+L!pRcTOm3<KH#t3A=Jr;h%BL#QBS#*OTESDj0aPAu5R%J;5p?<cK*mp9LITBB\J@I\%:.5_Ab7=;Md0&-:&mGruBVRX7_@Eo<4=UcIU7r.hTVfWqFpmFZNH%-N`>,on;D?p_1(i41;\c=R&V@PdW^n:&P',2"fZH-BX9eM*%V:Gp'CuU>r;D(mI7L([&!S9VAF>R$/Kf,S#f`=:n<=R%/U(g;SU.e&l`54Gog;.L&WmF^Vp)kAc2H2o;aV=H-UgpT1W\$'hnR9p1%gf]T>#?Iq<%O\<9_4n?`GrV"A3="I8!$Ra("qa27'/0gXTkb5hRk(e42+Y_h)eu5unl@MeKKqS=8u2;M;]]5#)0XUi%6>CH083PF%F"A=%D6#9/<rsOM3s[#f[0d\`O'3&p9/X8S-F3ou#_N4P:g?F$I)mru7gPn8Vc\iTAkb^9(pfie_HeX9)U$GJE@lhd58PBB09I7p%2E'Nm;r\,R7r\8-73^Yq!(NjV_]BD)]1`_;d2&N%aG#5GeCYlh[Oe<hLKMW/HLeR"fG9?jA!$-I\orl[:(_P$I.4`$=D@9o%S4G$%<Kr=GGRbImn$Q+pBW<h7OH)%t6EMB&U*_uJQIo[MdSX![WOC0<a+mMNY_B(`a)^05753U2q!@Y,r)eG^+_hZ<0=V3'A0U$Hn1t=,%kpKB;ct"qZOH)%Pj/X;<Wg_]a+cq_s&uiUlPfFT7L:L+oDQi6%)/H"N2118,i/BUna/N*L"n>=f'8ANb6?T!"cE(m-.*P.V=ck/7%8J\X*SAS@0Vhbd,Y'mR-m>isWVMGCkaA_j@T.r+SL:-4ne$9Vs^9g$O+kPh5"EBT`0b[i(79*cuP*"?EQ?'O1,!(\9iAoHiVtuZm%Z#^])9*SIG2V"JX2*hT#o:nuI^j.'G"ter7#am#*/>j-iQ:!.Zpp)7H.'lDLfH[RfW[TddnR9q59"aaoSu-@daWM##)Z'!,pQb$(%cX)i&<[>aS"MCXY-rRM#A2ARoN\T1p#/7Ai5F9U\&H_4</!9*)9mM+0l7+EJpbLNUim!Q\!+QlK+5o!cWH4:I@Yk-SJUn=c6d%&J%Ff)$2/O:S4)OT$$Y=4Am9fYearf@\<9R?9.0N@'ZVJj>[MVa#HMD<m>CVcYcVYWam^\*Ra8BV1)Lj1"hX4Z'293#9#M%R#uknraE%m"R0bX9lUbQeEYe@OA9Hb2o(Lpb:t?XuO56hG<D[<+a-t]3uU+N"oTE!7_9;-4!L7DFU%MJG4"i_4[UJ0P$UT+a\0EK!@4e+e!da%bj5oCp;ebHC'm[\I(8pqpZGP79nOP?FZAYc(`XC^`P]J,6>OG-.?oGWW?=RL(9VN)eW<>T6Bf[\D9XI;%Lc;Z7@IU9+LO]FUa*'2%W\63jnJu#$K4Ec&(\qIX.BM^37D=#M@'K^1)&+C2s(_e+\:Ir[`9"AMP!jJE+nuIUKPFtX8k:>ReAIP569[+ki[jUib`E)5)]th5%@M)*Q8XQPKRm`pK33<KYQ+I0uTPVM`jH*.#niV8o83i$\\0=\&,Uh+XEAF=&2C!2sOXW3I<.C3u+_@;rh5CZnF7m@]nNQ>:]MF*s%5ZPPEWdLGLHE\iOnfZ_maMg(a:d_G*%Lj69!`B=\ok:[Mo""m$qWtmO,R"CLo_f8]:08422aZm*(!"ubS<UAme?u$1>+-)P#rD7j%B(k(iQ<CkEJb\?C]XH](P(^AlZq22f^dk[ZbmA*"jaFERnih+c-d:)8bspbBc:6kc)aUuS*$O&';aNNRVB0UF7MdM_Fi4#@YGIOS%LL+:cEEt"9Q*AHt^`0[aB9<'Wd[ZCWL2,+J;lWDVOt]su2JL'k.^uS?/0\p6WC#kgcL)\#$#NuRhPa.I".(/]opFSM6T)V-gMr_e%U_7;)dAH0VTXJifSl[_"<)A$WSQAsGFM]ZVZSuXjR_6s=hE,F]87%mm3DV&b,g=f6c,uo;F;p"6H*bVS'[j!6RUCkL6CZSX2mS8O%cGpMA9(1T_4(,#I9c+'e-e\UL#rD5Z^(0X^&1P2i#uDcN2(9GW4X!7Nq@cb+&VS*!0L+4OM?HfSTHZfLX%-DeP?UuXTTGm!j`3dY%F;QftL<rG79qRNA^q)M+3DgTG'IOf]KG.pr.T]S\ee1Rh-F9SsP\?DQ,:&sN=fO&1jj@M\6@W1+lddL2>)+!*i^B7YV)ZkY,b-8U%fg:nIltK?38-$/T6'7m/DNBm4'P48Xd$2QeU1X8+/P4>R-Uif\'HKeDFN@&$^*#l!Je[mgP*)KN&?n/b.h:/7.8$Hq2$"%s+^:Ft%U;5PE>:WScQogBBRZ\4NM@q1V-RhprBJ7IECVui0@98rR)BkO`'e,Iu.\kb8Xf"Q*qVIua>*k>F6ToG91C3sC]*ac8P*-ANMMbA5%BW<h7RM6d$k!OpZ'Hmc)b#5?BP"15210KFR!WrHS(n;"ff-4HJXQBR3-!Y+O&h]EFCn\s_p,!Wo3J+W?BQB6h'mi^(Yu`L,(Rjpi%[c6F^U^M`HWg^^3$Kg(V"25E<#V6fb0g3X7@RHD[;eTo$H^YH;\Q)^%lS5TsBD*1iF=9cgq+7$4pb:u()Zk^Pi3?KPi$&NoKFL?O%$?djdJs(R5/sJdKbpc7%E1DXo\G$D4$UmXPfr6BZ\3_Al;j,,+'t<!hQE]C..p*nN#IC)M.UjGS$VH4e5t.e'1f]sWKEZ5Pqp9_*%Al"[;c-8_W[a:8ZLJ_j,dl6)Wb(AUWRpNFo/k@E,1a356b#5[pA2AQ=$OWt;jYRA!jn8sO=AY=K$Vbno+_nt1%UF>2RK[OKPX`WD%U/8^Y,*K7);5c,>e=!^t"bhU.:aQnbRThS29N]Xa,[Q\++uYCIGs[-f4)Dcc)Vf7/CDIWXUnkY66o59D6HjAR,!hq`c%6jIXe84J%,1?Z<YssO]5t/rXMMgUOAnDA.@_Eq$>S53C<s*lLn;VRP;QOCs1^hH(b\sd65n'Y)%),gEbSFuGqZ'QAKP2-#UmaVK*Zmkr/>7dp%nKT3u=:<$C6*[)k$W=i6&u&N*Og9ZfS(Z7AW;g@X;QVdD_OgRQg\\E#?#JuN?dShH?Nf#sUs1u(P:%<5!!WkU?qu<tRj#/"49fog%5]S3n^E;l<mL/clL88lO:\l+8S6fCr<aQT"j<BLka&t-43)?us<V=oN74f-c90=C[Opo:_UhE1@?j`l85NRj#FAS-E`!o:'*(tAt%8Vfs.1\n:u^$Znp9..rh?q2nQAs8\35r1+3@9kY3JfRlFRDfL\HP/^^lj-)(CtMZ)2I;OM4.MS?ZM!;D_l?-QjK/arl[/Sa.#rZ-%Mp`n_iJje&)cI+,p7r7+Gb_LU(LW&sjPhJBa&t-t3`!2uf=ee=l^@7r7eKhkfU976%U-_YM(VAUej5"TS>ToWBcT&!c@f(pMiC5_%ej5!IS0qOuQ[P.g(Go:gfKo#Z61EMmnCU%rfKo#Z61EMmnCU%rfKo#Z61EMmnCU%rfKo#Z61EMmnCU%rfKo#Z61A6eKA^f8OpINc%!e(lr_tU=SR[hQSV1j=J(jm%&/?D*te7"cLM_L02LN2*.^Qj&9U3Cl!RP>Q>0(][`;=:OMPDP0(>ZM(o6ed\6bq#tn)EX<&`Db"H%-APk#\&^F*Y_1U8Pro6!bh4oc2S*9$ZhTC\4.*oe,a`3'361)/fYMAf:Vek$Nhj-X_%()N'a]%;4(U'j$Ds6d8Q4YJY_-),Sq8!,%iU[aW0k"LEbu8$UZansa@@A'dX%6Y(Zabl,Ftc!h06mo%R4(<=T7S*-lLP_V?sZ#m_)*r\pUi$C?oI`u.82O1$h#PXlsLT9O^JE8%pcJ`/9^!^(T7S*-lLP_V@/:X4@@GlTHeoK\0Y@@E"OkR9HprW-bi84.lsL<qVdPrRP5gN]>mj\fDo!-20J?dq@%&P5.`q:apX`2h%V1)Nb3c5>F9?Qs&\$>W*U-!B`cQp^gb71f51A_Neh_B*OWaQOKQrF[A,<KMOp"A8tN0Ce,_n>'dbtN7OR0h-CAMRkbonHU,ZdEd*%j+]S^I*Sui2mkGRR,s'*DOLHXg$b;L.-R%OSJBDC[V+`,T?Z9;KGiop_n>E)3I,43\'009XI;]qj`/0XG<X3pj&t@nZar5d0uNWZ%0k2T;qPT^cZ_H`W@`F@&rtI8410a6l11>p*Dj^?dfl!2EmQ#%].6\ZicY4,47geAG%f*BnTD'd)(pL-[J3[0bGeUQ%k%c9-r`h^+%X.X<]M?5>Vj'6\$@)5d3$`G^)--^2UP9<6Z(k_G@V??>kMU36%&3..MZ=9,1:7b^=GRD?UO$W-mW*1n#2<+]BWgpFF]'.g-CO7G^%@\Gi33"eW:(6".u:Js$g;ajV_6E8=nX_s[l0h3L7hh`4m`(p_m+V:1:"04JcI1dZcYR?]ib8Lu6I9tD8LLs!@.%4gW`Yb3HRc%)+%,M4i#L*Hif-n/SIkK-c6C(<no`1I)P\5*GNE1ebP7++?mcYKN!=H,Wpc:6_ON;7LJ,Dm293)@N3"$=M1![qC$ii+jUNtAOjXI(<a%O=+*O<o)1b^BA-:e5u++Z2"ni6aP!V4J#?#_De]l=2$[6R9@=n0-P%-Z]50F@R_4$QgHI]8<.)kbScBOW0q[8(?`r&>]j.i/Ta$j%HKbHKDLl3%8C%"pi-^ftAI(irlIqI+5j%[$N[0kb*].1+8Rs(Xm)MZqRGEBMI72ch7&"Lb;k01`6d8Nf/>B2KV'@R#W<0mB8NGaf%ri5j'4s7\gE)RMP=i94JW@:SaDW2NAX;ICSSrRFL-e_[bXZ.E^FQ]OU=L6XBDsTOY$'&TT^mQ@u%Kh\"XOY4b2mZ-f,TL#5AHQm`%c>41^MMdUgRs`5%I8\E3Md:<bM]^SQGJr28=A_9+\X]/4`e%[KI'3?M.RMCF@!O[dn;3@ANZ&neFkr;!XTpB\:T8)0Z]50F@`MU'%D%(b0_o<o(9&<,o8b+2uXu`XEQ$%iJ`BA?p`k8Ltq?6[V*qn;.EgYojPRYD78+VV(W%_><J,3THM%r>JeH.\BGf_jCAg>EQ8`b&(%X27aZXIUAKI;49+3X!X<ZN.&t@U>N'HGdWOg#>O]+O38]86N9no+Xn]Y[]6Nh?%u>K*%'XN.Ba09!Pu!AF%.5"75:pCP>02`L!2R%#5U4n4*u>qDG&P)'@9;qc:2C]@<RW7]JM-#:YEYg42PBb6quu@a5nal)ikQ7UTB,k3D[)t<HWu$T\"/dWU6]'Rj5O*(r/dGiQ,[L%k9:<%e\r]moa+Y1V#_B7=OhXo8/FA-@.ag)`8h5"pH7IJ!``0"KW32)-XRrJOG)_%F1AMFj4INcW30_J<\<8:Z-_&%$!1Xh9&"2+%DK-,4MZn-/6u]^L,dS4QF+a[#'pYD!A'pc3j[5PIh:T<C=;\KbYo;[2%fH:$Z2%-'];mYJ[;G:R./R!&c.NA55+e4.U1OSl.@>@`%:P-E'mL*65ncVV"cZk+n*G$Oujuh>nY\Nqe8B)>(Y*V2R&JGTL#)1@#^[bQ/JLk%Z^,R("=j51joNO.&4&=PJ"$=M7p,T60oC=`q%`[2`M?q4?+lZ/S5IB2YC%ZlBqqcH'?6h?RLi99&>p?Aff,D.8'[2*<U1Bf`_.`A#PebERGL_W3i%<n&+BOaK>P(\Y03KkOh(D[B'%Q3`O79Kn\,>2I9]1BsbnB'>$E][i2f$^JQIfuVA<cIck\.i&Nr:/?HuZ"%VD?S;+^`)CjL1>>B$bUV2-Wt28&6^BiaICqRd(_p%J%`oa5*6)uegjQk`+3$oYJW3Iu#7NhT]aW7X#<cFX^M$J3_<>Yb\?VERn(GC[eB>pt74PBS8C06%m%\.B`B+$Wk/NI`MS8!Po@GOMJ%<aWJLT_f20r<;(WbY$/Z1@\\C'NXpE.A!i'Qc4uk@b,LiCjfZpquS79bQK"_0I8fs[m/j8BE&GF7N$UQ7iXtp)+!m;;P+3?NXF?_%"r`X8DdqGO`dlA]M3=\[LE#R;UQ"3=@8,G0(`9e6-=,6+R/=H%2PYB2=EhHp[&o==O]c6pOa3LMZBhm/&uAkt)of7eNId3\1M*DW%aJo\M.MTm;&Bq26[kVH0A$!c!hdO/%7K$8m/k(6<>5W<bR'Lih0X<*T6'Q/-J!*<IcC/:]ZgfuA[^@hDEc/VRHujf"S,50P^1PBl%Xc7moe)g&&FE;r/S,508ItobUD/G4H3QePO.l8lh_^KH>=K-ftGeB#mXc%amA+;Fsk\H4+f,U9`R5&Po@pnBEb]!=a8"$g1&PW/#%@7W9de$_.=IQ1?Yk_SeS2>@"t9V1&OjUUmLZF)DfjQN0b(b"(88hbOBZFmkg0P0QZ?t<S.-,260#hjH&0_nGLXG47$[&o==OaAn1%h^9C5f\]:Tq+\2smC:!>Xc7moH#9$S!R^]AAF3>Me24U(?E%stBj2Nd7?3NAl/bq$TB)+hf_\5]ZXi)MAa<f5A6sJ9b/fUebfEkE%Z-JecQ;p=3R'sCW0J]i+<-MHdrXNF3h+b1%l3>_G2T?P_4S"ge_gXRV=HXpI,:-3dYY4oC.P+/E>(tcFiFVq#&XJ\N-,M8T;2_Y*%S5LVt#eN[Y3O6&$`EI5_"a;jQCds"O^/AD2@OW%8,DQWLXQVc8'CV#k@;M0sQ=7Cb8&ujk193K4[_CA,#]C*IY`#LT;hghFe8_Fk%D3:%i]9,I7AQH'rMM\3!fE#1Y@oX^(1tF!Y&3EXE=B[mpSm6D?ZcJC&XjGW4/QdMeYj#8HYh*>5&U#C&KOn&fNWa'*ejRh90e!]X%Ann)P2NsYe-$b\!<uojCEohD$><)i'%REZYKSAk/[\9ME%4DgS.'0VX(K"Ej1(jlTNhR.pB9Ho'%;6?>3Q67m2Uhu.\6e[@"l),>%Y^)Z!a?Z`/(OU7s2^OFrU30RH7HZ+gGZorp=!d"BeSQhAf4$0Xp(BI<@[Yc;-X.Znc)RU<lNAH#:#oDSi^AhB]hS]5AnC-SRs8,"%-*9l]AJ\)u4%Y<4QZZi>>;`a'H*IFa+m<ucl$1=BpdIa/V0NXtOXNmaWc4F",3%q-<Xati*/h,Wc<(2t23oXg"*q.O@B!J=/GMO!%IOQia`]n1%,[)a:8Hoe6U^SY'<_-G-'gE*PYp(U_'`hLd4^p-bLp9W'`fI7fFmh*<C1SXc7U]e`/kV,:(/(X3(WdjnNFc.4St_'c%W3I(*QY5D.]5Uos3%8H^lc<+^2/D#jhoc)_I2@bT]2pYA'$DdF7#3-aG&Hjg9?XR/r=usS7>;g0eclTrQ8k4PF4jY;[+nip:T]>p%eIr_'ZS.W-6p('AQ#OmIC-3r@L`Ku>on8U.ki,/U?F$:h]O\`>q>0T5c7Du4e's-"@,Y#j78'is86P8Q)`^;g@Yqn3*AKh,ZjIa<%5YS5"ZQ.5*<S"W#-laC6LD<jpSm6D?ZY5]3a--/'!b:>'G#6a;B"$jT(/$*O)pq9ZY_)H\9Y<`LKk$V#l@a(O_8Qdka&t-t3D[(I%XI>EsR9*!RYS(d/Q",$hQf^<c)orY'PRst8$7e26fu2?3Ck@(G.4Z]fAoH]uZ/_pQFZE7+^/ai,/E+L"F3pYHf_O*frLL$S=SOWp%OB<ML5V'*+Wl>PM'MBm[o/]>8Cok-<e\iXs/$Ve-1<>NYlZMZr>Y=,%EW2SP.'^#,Cd?U;2:#MC99`:?ZkCP5el^Uh+AqJ2S,J<&%i?;`-1KP6N&?WkXX&r0#5-.qPb"U":%QtJ,Y:7_[-Gi1hj]/Z[5@ml7Sq;fC.'_,rJu2:*"W&hJ*G<?mjuh>nY\I2giQDdLcWi1/%kOZJB`0r'$)Znc)<^mDC9!#7[o9;p2Xi/M3A2UmV.D'h-lo6M-%HkjapLTtYr$>++4a&G?FtPn#/j+;04E`>>FtT;&*]k/Z3u8r"%(EPXS*]k/Z3u8r"(EPXS*]k/Z3u8r"(EPXS5&]W$kC,It^iI/PnFPZr09fEL6"N@>1'CBu=\ucj%E?%O=G^r_*:qFY7c%_>rS<0=%9Eht`qnl]q4'VPjUsPg=E+F'piV?7Tes4Z2"_f#/"#W2q'G!AtDYsg:H-PFuOQKh$5CjNPAXB#SRb(ho!\%IMf<=(;^[A:4^Uns!%N6Uq5%1g`r0QdYsH&\!Lqufp1.o=[\:E[p*/jFnDYIj]8;S3j@92K%%ZaphcFtik`<1%8eIi/uE0H6^KVdPs]K"H.>FteiX8?da"%I78a%Ar]&N_%()MGm\^K0;#.MRL*mWlVk$?H#l-lmIdQss$hS\bi1,clsL<1O^OW7H^%3qJfW)#o+^P!?9V0$1p^heVdKb9q)ei0%b].\ea6iO>2qN-+?I(?DR,a2UmiomFXnU:?HX5Y*+:DQ?b>K3]ha-'i_9An;&TmTDkLDX8S:P3q)`i5M<m)_$IB.JAEE1>cGQ*?[%%F<3@=rp$YYOHn.Gss?nn@Ie*`S5ON3EML__i6l_Zt4OYNn6Csh=3,PT4-sAV;uk(*Hf0'$-TAnreBTq)]gR+0Kaq^?Lb[Ka6W.*%+m>l""NMbNn5oN4=7RB8H!\,C\`]-LK/Z;6p-'edW+5N&*O";Scdb1F$m!"CSkFf5SpN(-3dJX!VZ\#_:cnA?e+U-&[I/JSL42nQ%chj"Q%&3=#cF(DPdeG(!BNH'0,!iuL_NEU"h?"#@'M-oml[4!Eh.DODN?83M(0D.OYF[p6A2h#^9?/4Vc;:0eR)EQt+'TPQ)ZcE[%HAOF(3)M0cM5u4sfRe7jJ-jf5YJ\hN"Y\WTfuVA<3r(I:-nI=pnFRts&3Ib+KA-1GSNZX`it2>oMR!jq[[p`P=>anLbkQL:ZRsY6%3uT'-DWf!-=hs:R]4tkb[q0P;!nkK^_Juf3o+Xk\YTjR6%3;SeH%HEE`ZkWQ-nA^`kK2;1<Q"OM$dn_^a82nARm#O8^X*rE_R\"!%O+\M>r[l,ZAe&ml$2T/r-0HVC?slH+LXW5KIV)*ST](i!#ah`QKJT,;>M6#8/sQoqR2Bu#h;4.9(Jogo!/B-IZo4&T=O;o]S;k`4%C-t-[OfEJ%9fOh:Cplt?;IrA7713SE3>"pT-:b4"XL[p#%`cMh4'SpQ9s-<_o(+sZ.oq+j2_q]fr&bXnFR)M[.X#+OL/HmAC%7Em%]YnuV'sk4=jQaX_k8U+%V;T\KTiqDkZ.T-&]45G-qgd-"413.]@GU'^"L<fr4%$>^%eoT@87O`tk'.s@lmY```QJmTZXQsXSnrgW%29[>tJnKMoJEoH'MD&&%L2bF[K\+)+(C*INaOgK'SnEr_GmYu<2sH8(7N38=XnR*rZBrs5-j%2Ane'<SIYNgcV1p;D6&Jab)/Ef"%h?k"SV?su,&_:ZlaFa5Ac.U1^+jDW?*=&W):W:8!I8UpSWSiacSq;k:`/_/JQ=Na^>^]^sJe."]cOP;Bg:FBmK9=J"%7&/5DS=sF%?J(SH/=<EiS;k`D,405[('qCI-UKd6fJ*Tr\);3Pnc[S5N5l3']sCV<Cd#?*Yj)KY!fk7^3'=;i9JH7?$bTA'RZ=*"\\uS+3NpET%#\5%Nl;)#GbBaesZCPCpTks3j'i2rj9+m;l@TIWCCjfFY9G"Tm3&6o%(+`CeoD.j")"k&/&u/"c)'qF79$U-d_8)#6E:$'8O^'u*%VQTF683"MtZ'DG;_oqD>ANUHL2Ni;m).Tn-,L8d@I??>@g9?>78671Y#%!qar>">=S79/G'5AF?"D<e?Ar"(<C*F6DN@5`t<"[lE%0+3Yk"U:XF_.\1=bFhme?sn%=c^)">\8gHV6D09q#TJ#:K%Ed>RaY"ZnonXaL1^$>Aqo:jfg(CQ,af*5[bH_@#g+-/A&I5R]nHW)%ld\#Z!L[j-j:$?l#adX$UIJ(pN#)L%)$uPZ92iJk)_#eQcA"=/HEf=nTl<OB/A]Uo5=5\^m2%&#?Kupt;=6gZ#UR1*h_X6Epr/pU%dJ/N1Ph.9PAck)+EpP!Z1CF(D9dgUNFQ9.N.'pY@3QppX_YK?$LVNu9k.HcS$qDjU@;Sk,cKqBG`WfbAAnSjPTfL)<.43J"@VGI)%i$^eZP&-r47\%_X,iA".eHCTO!D0Jn8q[+q^SF-!6KY;oZ_(N4=AqQ-W>@9InG3::mam8Pdu5(D1)hqN.sCcq3!hK>+<*ma6^$kX%i[TO8iCmce<LlR/A8&'VD0E"a%\DoS!%DtDps,7tp9jI[TQ1o'!q73Y:gJ:8Gf_jAk")!OEN8\@CKg'&pWYgU9a(d3N6DMHVLAk:%%s_"Z4YlnQ=NX63'iC^q&^Ml03cZCJ7gk>gB,@d*9h1nl@B'-!KIPaPkVgRrY?Qg8A7V&2+i/a59#B'o(Z"`=+`OA/]?gN8U.?ee%B.`-d=a]_GV-pNPCL\/R4ZAb:[5$SQ6R!5DaPAWU;c*`,JN&sVm'HLWa^-3K'GeWU(.p:3H29Vr.bQdTgY*J]R705<F3D:0``.Ag%qjJDO[Pe=ZAk@#2^6`R\lc?IfeldT]/P%c0e$_0SMTihd6nZA]Qf4^hjKi8g8%(-+E`#MrO;3sA1+(K)0\3^3hL]HG)Zq>JlCY)H%rDU\&qFu&*:DIBnf#GMHakdU`=S6lk?ogoiaX6ea?&TLYR&AjU%X7;=+IIJ,;Nbi9VJKNHN#\%2WabHn<=Jl+MT%e[N+lK8"!dE3%&^c,;"NT(m$Y,`]Ri$A^cjcjhD%)6E.q%G3\uL+SY3I(-lZ,c86d!cea-a]urc;Jph;-D=4?-CtMNWS0d(+q!]Fmg$*5:MP^4@3A%e]En.[-f)L0<X!lagE#q8Q!152M3/aB\c&"em3pUWdF:RP+/jbmQ"lM)-ZbGZ`<F!/Tg%1SV?a:Q='$R)YZN[U^XAPN1$KR6[dl8%VRlna3pX#XaQ9jl1:6K$LNb20bQ9d(Ssag3Fk1Y-QbJc>PbE7"`?.qS"_jSN:@46E5f$"'e(X!5gU-[rWgqL$[jp"3-`qg&S^K^2%G,M]C'2PTX>5R*VCd#?*?M>Wo<[VV@9sCq#b`qfmF'YMgnq<CY5+*.UVdSLum1Z',S2V,Ko<Rll3ODRo2<W*4LK07!aAWuagTqKn%II?>,V1%p)L1m2Q9$U-d_6inrp4S)Y8hO9[Z^h\LL3$iTHeh?o[Q5hcX,L>2@T7HhCX8Q/)L:iU.nc0pWm4I!i=>7=-:_59X>ZNY%VaUD-QIJ6]>]j.)CP/k3CMf#2(i8aE@@C1cf[C!Td38nEg*a4/eRVI-7'Ycb*&aD)$3[K*RWsK*g*a54p#PDUW`^:2I4eF."`%>4%AsMm)>>\uaOq=aD15f.,p*<1?42LJgVo;STnWLiNXI*"Y-X.Znbpq[[_087,"B&sCfE_Q1<c[N'7$2>qCoKtIqFP<NV1-_Xl;D:a%6`juP#.44UUga31)s`,)SWMm'VGpZ(1Q8Ck_HKH?Yo:`?;Ekns3)@N3;sG`8(78c7io`#S(cfN1@S,S6OfJt-(7fLN/uuf(XN`X6%F^!?[qdM#AF!HJ68M&7Qacdi9lkl4CiTm&W;fqORgIYGib1;cW&$$I_nD`%6@km?E$`f5K?43i'7X9-\@`^0%2;+2WS/9poKlk";%7/LdY*[-=4afObig%o%L?AGWo-CVD,Zqm37AaQfVNm^*Ac&dhVae\"Q,SNjeT<PC5-=94=]PKDkPkN4hiS<).<kUf+7=%gF.1oo?%U,MEuJgcf[g(;et35p1m-C!(Fo6RZtQXh<e2WAO2U_;O%Hs'8s.u!J$L"1@'GSjM7U\.+;BMEM+$!OfCS7]Df5`q<-3Nit#2=)SH%'.C/P_oWH8'eC`8+t/Xt_O97%9*eMJ!.`ThfYS+<<[7uJg*]1fCQ]J7&fCui<nEtW`61Om5\Zk7WRd!0#mqul0Yu>nXJF0!YKh8:%OZoK'T+'-npRb(Q,XO<tiXnIecZo]6Qp6*\aCg0"#+WOWFQ9$`#TlIlb`R3K!i=H?@?E:2`F0pQ!$unGVcYUk6rK32]HZ"m@4u>^%8;TEDS..cS06qOp6(oh@AtG1tW%JgG<CYEf=G[`sNR^Y`1uh")OnBP`>K()*_+"cB,h[!)o%dVW9i.ch%/8a1JbiR?,VnC^*0DEM%X[j)8E^M$aDD,2PgdV@1[FRp^,TDTlBLt,#WRd!0Bq5XIMZ-od=@CVnja/O9_TII\?WrVX#&B&9$^OJCVi,f>&BT"mr4$W?<7?-t%TtclRacp[jF;s=75&L'&R`p(/jF8`AIk9Z1/ED:3jF8`AIk9Z1/ED:3jF8`AIk9Z1/ED:3jF8`AIk9Z1/ED:3jSqY$jT"!G&>I>X%,PCU?=t=sqs+9Nf^1@R62HUcK9qI&p'aZ)Y2\8K,oCIUD\N,-u;$g,DDPI,L(Z<;t^-*l\pfQsHcG>OFH6KEV="/!<%c/16GJbXr%nIcn[GOP_rGg5@uOQOMio+U?GAXf;W#Htc;(t-(XY+IraYO_W^rYR\@Q`G`^c'uUW>6dM#YO/,35DD"5[c981L(7O0q([!\]$$-X%c%GK&Rf"!`GlIQi]B]]/fsSKYL=``3K;!qLG1)Nq6^fr<%"#`CFRY12O.h1b>^d)q*_pC@q([!\WlpHsKBKGq\@[3V^OFejop`jc%BRX<C'G"6nR/9=FK3)k0!Zep^lOZVY?t$s@T0NXb])3C+GaHU7+jGX8rYg7p*B\QE"OasLY@##UIW,jbjcqpaE-3k1H2ME>r8)\Q%r3SE?L\4^%QPN>+3iNOi[nU0Xi>L1#Qg]1Do@b2qqML$:Tn<SU#f@mChO7OOlmK'NHKT3khXJ08;g)J6JkfX7[kR?0>\`5?cg.%/%l@=RSQ5@Gu^\LKE]R7b8T%ECTQgL=tFRW[XNStIke,cIM>$eo62`u$6n7Ia:nd%:%`Uh4mDn&;jTVE"Lk\>>F*WCqGj@ZuCFjKA4%]]u(]L/)&upF/Bu*UmoibA0'2F*5eT6O0g*kE;O&kFP>$:>Tsa.7$HEe;h5i[/K?7Xh3JCTq<"mo=cIU[o+5.[HS(RG(Sif1o:Z$%s/Er5)BfE)e4&'+lOs\dY;Eg;<TAjc+BBG5D13Y0fqd^6Y/(^.!;NKV-,_(ORJkdLn/q`k\0TRO<%Af`RH@KY<EBfh,PAnc,iqoL%OCM$UJk3_:EMhef$DqL:@a7PIffF0(@Ef,(i%.M(Y.<QN$%gE>ckY/1^6mmm5EQ+4Q-Itf,X:$F3'Bg;K(B[M4Kp%=((H4A4c:[M%'CglK#hW!T_J7A[XUhImE40Xi,(7cHNs?7*%^gqqi9"^VPZX6S%P6i4D9bU_(3&L2ll'P<Eh8GNp\L[>3+icbo#XfP2BF#L7p-.6%3)?us<V:/E8m0JJlkRi)&o>:8nlf-9BF.#_P07HRAEEjs9oZ2g<],=/aC<0AI/IU"orK,:(G;p4k<pT;RN/llYi<Im4</*:0,t'J%#'r[@U=k!ia'ulp@rjR!q?4[nHD3>$K:(,M6E6DqBcL<kqQi.R/m9GTPnUL0ETF0QRR-".WAN,4bLIes[hu_`+rpC^RtC,1!@8Rc%0QpY?66LPuK3VQcK(B[M4Kr=3^7FiOH*obo@cJ%%G*J8rRe((U_l@-N8:dfK#DcWmj/A4tR#,.m!E+Fa_c7HYQYn@s7V3:;^]TU(%<NK^O,nga3#_U#3o<hm9b7SQt42VX3G*J5qL@\rV>;a<mfX_8"-+5u+h[i?$nFOH;S1Sh&70!YW&/JgX1Bfa][p2LEWcM+b=CB*E%SlZ)E)Y'#-XMe/0cfRd@jMoc)`V+T/[u(\hMJ_9f#XL0!JaWWl_Ar1$UB2^2J3h<^AceXOKJ=1?FlS7.+BAl%/$tm@EW_ZlLrB?.%]+\)<D#DqsYh00SG`C@5?6+A:$Ce$=1!!$s5:t5o+q*P:2J47r3BVRsBNB)DJr'_UN58X!Y\6Ee,o84k*G<?mjuh>nYj)RRB'XaJ%c,]b!R6/Drr=;";F&[*9n3;\laMM)q`S&>V@ZE2*C]@cgk:)gD?q2%RN`a0BSiqdFit2?9Pa/J-o47/k<JQpg&FKC"$[1oE#gOKD%K>2#*BjF]*8o;2$7@1a4bDMi3-5G^AQtW[!$>]P5+\/k/@\OG9Aih:c8_2tCeV4g*fp>?N8n!>C.^@=!0K?6kc3FI4dh12D!+`o^%o]Bt#-8E.4]j6M[]6,Ai'/RW8/h7T"f`fQ8,q1Q!)aCJ`XE]b8Y#-h<K^XAG_TM:1b^Zu4f7nt/`Q3lqNB7gl`3N%BdUbQJP1`U7%\2tno.CaUgic/#CWm6g1&$&HI^VdG;rgapZ5oT_bM4U4t-<h9DdITd4A5?!pY`eUB9K]OhXK<S#*Phr51E7QG7S*o%=@]g2<HHgA%-p4^FBTEAGHl2$.0&m'CP"8Y`?tM+)rYIK$67UP^3FdUT6$jk"DXoKdndm<DLe4*mq6>'NZ*S;,UTTjkXfcCBK38nU_3jWW-t03B%()9aR`7`5U@CD=V%F(=nWUV6)(-BOuO!IJP$Ph;^&n4mB:0^e$COejfA_dqA<c"W:K/FoohA#Pj(E5OhA$J;Igmj?hcEgY)QX[oo%-9+.;Ulq:cnlgF:4=(ds8Nb:U=k.f'p#4=Y=<H5iUV==,$HfDf(h$p&MJHW5OC1gu;p+OD_/r]aQf]RV-CqDJT*.d<l5PVQ1eau-%fS]6.c>[ZUNV1sT)D[/Fn0KC/5IQ#4OSUZ)S*a-pM4O_Fr9k9(8i(]!']0X26/N"PX0+?[81sIp2Djj\Rm!i0WL1ft(fCAi8VS;7%0jP^TLft!-0+uVUS'n#;Ji_5L_o,E!"4DqD4iSbd%mFVmia-4qnePg-QFt2QF]q<T)YY)4<(h@N6Z\TM+E\i;E0m%:D)gmqnVns#%;C;lU9UuTkU-a$GL@"34mNEpXa7=So7)Cp5",>mW6Qth+8/l/fDgWc:\;E<%n'7"%0Y0o0+Dp=[X)CDF+"UF.=IMqX0?$b#oadOU%2]usNgom+(r:+/[.DIrE5`kng0SCHb5g%Hba-a6&@^&f<K?@cJ;C+[U*s4pGVh_XQEK;hi[;>sRi6:Z8OS\K^[qu16g<eYVhoMf5%Gs50+p+^&J*_$tf`A\oVfR;Mp.rtp<4tqY`lTscIBlp;PP"o:S6-@Qca-a6FBOlrk^O)96eEC-W+O`)#%r"Dk*b-PsHRAc>-NAE>%s*H*mHWp.\P?)t.CE'=f*Xo"U$%hdgO>cJ!Edo;aePr*U2^cF#3\e1BM'-ACh.',^D'qt(TKd.V:,(1QUes)\$Y_ug*l%Psam[N\%X8MD_rar+8dN5U;BimnF)Y[V:4i(Ke!rCkT5Y2D!N&3Z!J1fYP/"iuhM#t9-\S`F%"dI8r!kK[?;*[i4V$1T;FL/8qjJp+d73RUH%s/*$5k09+l\nAX>!m4GN8c`L(E1VZ<V\N&+)JdDt!?F()+(E7t.'oB6AF%.573Sb.QRJr/bb50d/PRVoPQ_IAJ2/WX8'+.\oZt0L%%co+LE(TCU.:s%Pa]>lcArVmb=r"JY86KcAp*?XdOr)HOMJalEC)mW/`NG)c\pb\t5`:W"DCegRM'RA1,?Go:bShW1E4r)8!<ic^%VkOmPX"9QMP(Y4ePT\@3acSoaR.4+(]j1*=T!aetU(MDoTZkQuOg"0f(S$XT38Xos/L=NVP=_L!N]daq$L$EY,#LUn'qD10ib8Sg%.SBW/mkl%6M$YQJXJVQ@Wj#N$"p_i6'R$Sp$Yt\DE?U7*84Jj5WE@8f8g^-15%fcJE`!Ha2=VO2b,;Iuo4706h+O>:+bZ=1k16s4%M7Zuq.*<o"F@]k$OqFO=.TWs;WemUk:UkPj#ZZeTQO1^R+b(+tng7/83ina'6CE=6Lo)7_!2\pM(-lI);$9]>Z//'$(oUoo=\2m4%L>jQ5=>KIr#r*kJ5IR`H^#ko?9^(MNr=do%%&,4%NH%anYoL:TXaW#Q3&ffTF_IC$PmBU@BV3hng;'D0&uR`Kc,TUQ29thlC5o.Z%#p2lo1e%/?MktOAN?#MWZ]apE9K]G(_WLFb]5$0nZLJ2\FAHKXkK2;aWX^4%N`tbJHa]7Z@i*sB^@dVaPfSh4h,?k`q'dZETmPqp%h)96e?*l"lPS0*(C\$M#_hqS9KPqn!2%5(BHguZCN,c$=&1KC*ao^-EM8Y8u3tc([).RNu?-*\+naMK,L_`1.Q)u94*S/HW@,gk,%$A1"1Uoos.[$O+;&kRm[5+0BY-@6@NZCPCm]iOpB$%%QI`Zml%T>IVRPH>@rAo/*FP[CO6b3'c'e;CfbZNCTXJL+2>+^4[U<cXdp%M5QWbH*udqR[!FN$fXmn,^,[mZ\J'^lW[?o?4+H6(CHCG<M35.bMn<t=_QW_dO^ecN14iW;T^A7iWN9bMAQ'!i":hHXaDm\11ibZ%Wn4q>E+suu?L?idJsE`9N-3-#Am[(#=H+Ro$_PXP8Wt,#ON!0`\/1!YUYrum[ZdMSQ)uE8*S.=B:27KGlat[ZXmt+>Kd`*#2^kD)%DG4c6gXDjQDEEQ;h<]rqm,H-]0?K)SeTnIn^$a^X>:I3ul%WRlX9BCa3L7?`;fkStZj8._j?+_%:WoEAY6>_7:2Mn\//;%!/@1*&%AF',u:DWq]k0"f-"s,i1*]jQI3sH`f"s,i1*]jQI3sH`f"s,i1*]jQI3sH`f"s,i1*]jQI3sH`f"s,i1^3mu:kC*FD5<k%_`pW=2%;q+Y&rnLU]fXHIK(D!^'boZ][6FXri@?E7(EJJPh2a;t?T;$OT(Rd&njt?9:[o)Rpl$J5D%h6LGe\R#QAu'i80?TolK6^<V`Op)/%^lRMXT7S*-:8m5&QtFW]Gd,R!4.*ug,hTpQ^*:BM'8JCk:VdNQo6C\?R4rPjR=ZI'lmi_8@!9\!ne=bRnU%+PVdKb9qE+pCR)A)9%QsuAC>b29aR*GS!$Id39>X\u]R)N($Y_1UXHc]2?btQOJ.G2J<5#9!)k2l1K9J^a5cb%%(Aok_L_DH>Bn?*tO%VG5G$$J"XcVlOB%XO62[fYOXQ:VdO<Do!-bR4Z&6?"!uEqqjpuc0W8J,hTpa5#9!)k4!X'VO8\)he:fQ?tK*K9OS1tneDJ.RI[MD4PtI7rR=p6L\7O>%[K+Tb11\DUqhsl5>[hK:q3K]OR-g2bXY9Jlb`//e=;bh@KInNN"H+NGZekNu2p?9ZK\8Q4ABZ`c]]GPajPh\%^L;<1g_IX>OCQ:L%k;26>B"hib)eQ]l_L`S.4(3l3DjXZ`WM2C`p<7^Go=A@:GK`'RED44XZedD%/T^\WM6O=\&j;G_dq?4:4A34rp)@VY@oiUD1M3$-%hoUPB("IKFCj5W$ohR;P-aWWHQncMN:GH@63W,FAfNAeDJo<N*T@595ru3]do:g`kG8ao*L*qpfIPWgp,8c&)82q/hG,]4_MC4SV%KlbXmJUkDYQdBtK,pgfN`fU6ebQn<5)(*tR&R:/K*$K8H"!to;cC6u-lL9=X!G`;E''^G$3spSKF36:L`hNo<!hC<UD/[Dq+ER=*%mG9[SS:4ToJcrAg#W=QW&l\>L]8<orLpb]?8p+I?%0^B9^iG-Wqcs6#bnQIEgbOXWn_2%Q+U^@qH,$'cJ]-`j*-#XmFIo4`#Bkbd%jY]2ZUY]iI6GSPC&luK%Ciudj=J+0RQ9+lM]6kPJleX,_)=KFi9.0rZFs%T6,B1FeI46HWbpq";1%E&>0mM*cp+2fnOIn<M+^dfC%0hX8L:Tcm_)VW"gep<G]B3'H/f^()b$n$hKFlE[!_8(Z*puZC'Ac\g>KVV2a3YJ6E).PHT//T0nd7&t0-92Z2ng6l03iok-3h3Xn%jFOp''K.%l!]e%9G$2FoO9?es73MeSLY:jd87`W&!d(j`XNl<Kq#HMKRAU?\#R$oeKN4Ne>8pUJ5k=56YHJ+P9>P4uR%Tj#Ac>;E%T?W-B(`7/97NhMP9hT5i'qM79idi+[*KJ0mK42jMBJpnT?q4?+X#j+c5--fkk.cqa+"ASd/JSJl8Xd+6/C06"/Z(cK%^?g_,B,?^%CaMN,R['GACuW,l#r_KSLuJ`t=(aW^^lG]5f&]$IqGu.QpY#GDLY=K!g2;>s""/A2TN_j0FDhtlF0br6]i1r"eZ9u]MV'YLG2jg=%U5Ki@NftZMj@tY>F]`]7Gd8lZNr%rOk?\F_]o"S9()R]a4IrZ,&kr*Pap-cXUNoF(<7q,dpgG;&'gVjqEJ:a6[i61:*O-H3X0`O<%Ugj8S]!0fm.k!p*E>q'bJmJ6cKS=\+?gDM'pt3B`)0-"6bgT2k.;Mt+St_&HG)XuM#dPiQgA`%O&?qq2K[lV@>9?ld5X$9:dgODe%103Q1LA+=@8KH(VMgJ\6o8fBIOdQ@]NEa%P.m$P[_ui*@TPjlb)"A;F]HDBf'sfOUak!r$L9CATB+N@-bug_&G2=kecB<o6'Zblo%gs+f442VDtOcj<Vj%5>WM&g*<\J7oFfm$@4DU++n<=Lh@Y!-))$#T#K^>Q$JrB)U3Y6QdLRh5<KOiW,7n]g$j/AoD$fXigQ$X2'/%P9<ll(b=o\<1]82Qe5'=@TKb*>^]^3N+h5'h`I2M2:M^F"+_0;Z4&]mYO'g(^d<0PEAdmOVbIt.E1VZ<p\L\iq2[QU>k%q9<6f`A%J/r2IXQDXuqQT5pqblAi<QL*J)TM&g)Wr1qrQ8mt6!WR`1u`V'?8B_jN`7hc4&=PJ"$=NNH5`'Hki,%9j/eVj3D[)t<HVR0bJJFe%eMCV>^46FD$.)#jiN]_]KHupm=Hl5Bq[=i>KfCog)F"@$/?g=sYHEPgJ\<I%/-;JL8r-&D#5PNH@BhMdM9qo.IUO[A^LhFSVWX6>%C/dGR6r)\W(7r4ei&/D'(bD2K"R0C9fRD)$Vd+&NbV(Nh8m'&YEqNkkE14lGooZ^R)%,[h3ln_q_dq^?8Ka`#\gW1ln/766)mO*X%Y`=<l#%ihU2*+QoOpdVpNg!pQF.R2j=>Lq?^CHj+:J9neV85tug:#\2L"SkaJq78;=X[`4c:2,[Z3u#HMNs^0AE(9d.1At<a$!>e%.D'h-lo6M-%HkjapB@TQE$gJ)p_rBJBe(rlW@p:.8O4rPk_[1&s-BEN6A$X[$]EGc-VXbs"k4L'GUi7ge$_.=Ho4Iu/fct-=9fpZ%'V>hEg=F9ZaB^Ob\ou'Jf<sgr"gfhV2\DT$VJU/YN6L;A?l>[-nqY%:Jm^9n8(]-@3)&)\(`8[;<->To0o*>LZG8i1Ch%2R#1L"=%`equ6QM(Y=9bD)8Yg1__0Y7qR`0@B^JWWA$A8/+.B8SgoP^8O0GT"C.VJU/YN1?C59jp_umKgC]N2b\k?S]Id0PtT8?t<Sq0P&h#%RTpl=AulN"''6THR'sCW<b-+)=N6#6n[<$I;_XB(^Vuo:GS=#a/d=f-jWPkjOqDhddVflNI8%C)/e!4;e$_.=7cqZBl?<`W5Ehf9%B/^8!N&.>JD%->kl8;8)"%/sJg)Rq.HPN:1@1Lbp2TCUoc.2WCK._Ln"Ht@*AQchYVJKNHN',T15rB0q8!$6\HBW064Q?q#[Pe=Z%k!`bM42W2Xr`4WmDjp>S&;Ot()Zq>VOuI*aU%<0VD8E$-cE_u^#1L"=`ekbt.At7084u;#N-,o[ZRj/-_3D'[JWY4<U9l2mP7?Zr%(JJ"l/;oF(0PtT8?t<SKWL';hpT>-&hFh";9&3n/f#ILEDb0lueCbA13_PX4Q=lQ2W8uVX%VgEX,Xa62D@,j=NjM-rd\Dt=;/"Gd%XU1m>9;U$R;RLsiD-4%YA4OL4m3ujI?mq/G/s[,a2fa_]b_j\E2"@qD$TfP@=+F1_0,ot66`"?pGFiW!YBsh%bH3r";l-%UeX!OB%Ba9fc8@sC>UErZTDTWj_:hX9\3t.t4c887s`)`DSk%J1K\Zp9cZ(bS8reVMF*RFMuYS)9$I5+kX,t+`=6>G)6.'Z.`RL$UmG@>X&%g1]c+&p9LB;@>L*eR?_(@*V0`?=tDuI!GH`B?MJJF`o!5SL"mVYN/3(aAuK]*Uus=LCH_oU!>Eo3(LD8XB:]h;="E1ThX$>'&uBN%(!05#=_:+c.@PKbSRnWl4@L&^,Wj,*=l"A/ojQCH?K/HipUr.\g:&?lTV0'%qhWa"7[,s7=P7uB-D"7NiTl;E:Q!HP9ftnP3\.;T%H*[+FWjdE`OraojK&nTJC`ubW1/^cQQ:@=C@Q!IBO=5:Rc<a_/&Tr8aG`6<YQ:RahOs=$Kf$#W+m$!ac)ds$+P'gtdp0&_=B/ae.%ZUA9aQ2E>_`+lO#gY`Gmb"]=L10[=:9Ie&CXm:,u6J1R7j+gdAh$Ht?-nX'`[8`IbLo/=rkWD9ImndZ?IK[VgG4DljEE:<KcBG@@%X8W:&ZQHP84"k42q+t]KX;fDYWO$R.J>LcDNG*H8=OhXo8.dr'i%+`0Ki1$%(GCrBb%bE9oBjZOLS&g'oeLQc6n+S:0;3L7h;;%D%.<eCKVFiDe?-*a)EJPWF]/(V%@^Y_MG=s23@28+MeV@/2H3p2r)!cfJK'dcYdR!J6.CF7B>+HC/E1VZ<Vq"q;1X#8*-2%J600%u(%U=ECT2<W*4LK1[,3F<]#8IIG"E7R<XrFNB9BuI*P$7e26fu2A)/:<0cQ"9EL?+__3S/&@_kK2;aW[8H:cjNL>ZsGR]%,L@W;,$d3%U1@7N<TAjc+BBG5e#Vu%AF*pBW6\QKBQ]V4PV`3AFhR2pQs77o2e0Znm*I^raAo4Gn8SJ:.CF7B>+K5jem4Ui6*f,t2TNj>eDb:`%i<#K?;TpW1OfJt-(A1RI9!->jF]!6W;BSC['qJ5Z<FuEt.@>@83_Sb4GfhY1k`h5FZ^UJrlbf_k]tF'c=eOIJa"ad=TOeR474TrH%S/">T3Q\g'B<4If*G`m"K\9sHD;^LeM)1Zk@:O`-(F=QVZY,?4%?J13O1c!`]a^%9%?J13O1c!`]a^%9%?J13O1c!`]a^%9%?J13%O1c!`]a^%9%?J13s+Pe=Ie2=Oa7rFPs5S%Ds*\)Njr_A<q!jukqpSoEs4dD9lVAUPs4s;2rl=pu4oaZ^hu<KNJ(!5(s7Gs6++Nn:%n,N)Grpoop^\mc:YJ:+`l/Sg/rX,BTI^NO8_=rHTma'4oqVCUhqtg/-TDnRls7S<HIm)&kqW$JZs)@*2/,7RlHiDR!TE!6Pr/?lG%:[,36Q$;k#hpGMP7pl38I>rICFhOQRq&I&BZhU-;DP!NIGP7X&IXKJ25JH=:+5c[UNUM/=`qR,[dsKrYkrit=oU\!YHI&'=^#r+Z%If-)A\"D^K4^7=Gj3PM*cR/9?Z@(!]+oV3-n9J1!pO"miO$=SHj\OJ];7hd.YZ@q/CHQ5OFq+jl^Ir!VS5<f&G7N-c(`d5<bI(G,%%H;3bFhTB[R_M\#C-;mO`/_+ndaJ13Hcj,B3o3?'SRb/?adbK(qOj&KZaRG;kh5Q%&_B*0K!Qi,Y\t6\T4HgrN;)5J[&o;gHTF??%6\kGpod-DeLI1Rn,"sU!CfkIo>cs0n3-`B;6hO.TkHOS/WLG0Pm@U^-7,K9,Wn*@V6gUhtPs'+MY%l&WVa"iR&+(0Up#!/%p>`8r%I/`NJmPPFM6hW2+q;7h7Y41?/Km@_7lOWJdD=(p5S(JcZ(-aq[iHJ()rV$!YO8n_*TDn?QIt%=pn,Db>X0;NSf73ep:Z$[#QZ#*;%s7GIr^A`U(T>1Bn3uCA6r7CaoT)\`e`uen6+.n&X^OQ3+5c+k8^\[4;roZL0rI;,ECQ/~>%AI9_PrivateDataEnd