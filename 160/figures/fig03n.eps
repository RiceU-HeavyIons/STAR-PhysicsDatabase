%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fig04.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Gary Westfall
%%CreationDate: 3/1/10
%%BoundingBox: 0 0 563 346
%%HiResBoundingBox: 0 0 562.6733 345.0962
%%CropBox: 0 0 562.6733 345.0962
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 10596 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD7FFFA8FD8CFFFD23A87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA8A8A87DA8A8A87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DFD0BA87DA8FD18FF7D2EFD187D5252A82752527D7D52%27A8FD167D277D7DFD04527D7D7D27FD167D5252527DFD04527D7DA852A8%FD12FF7DA8FFA8A852A1FD18FF7D7DA8FD0452FFA876FD16FFA852A8A852%A8525252A8FF7DFD16FF527D52A8A852527D277DFFA8A8FD11FF7D527DA8%5252528CC3FD17FF7D52A8527D7D5252A88CC3FD15FFA85252A8A852527D%5227A84BC3FD15FF7D52527D7D27527DA827527DA8FD11FF7D7D7DA8527D%27A1FD18FFA8FD05FFA8FF7D76FD17FFA8FD04FFA8FFFFFFA86FB5FD17FF%A8FFA8FFA8FD04FF7DA8FD12FF7DA8A8A87D527DFD20FF7D52FD20FFCA52%FD21FF7DA8FD17FF7DA8CABCFD1EFF7D7DCABCCAFD1DFFA87DFFBCC3FD1E%FF7DA8FD12FFA8FD04FF7D7DCAB5FD1EFFA852FFB5CACAFD1DFF52FFBCC3%C3FD1DFF7DA8FD11FFA87D7DFFA87D52A8FFFFC3C3FD1CFF7D7DFFFFC3B5%FD1CFFA852FFFFFFB5C3FD1CFF7DA8FD11FF7D7D7DFF7D27527DFFFFC3BC%FFCAFD1AFF7D52FFFFFFCACACAFD1BFF52FD04FFCABCFD1BFF7DA8FD11FF%A87D7DA87D7D52A8FD04FFB5C3FD1AFF7D7DFD04FFB5BCFD1AFFA852A8FF%FFFFC4B5FD1BFFA8A8FD12FFA8FFA8FFFF7D2DAEA8FFFFCACAFD1AFFA82D%A883FFAEFFCAC3CAFD19FF2D8358A8A8FFFFBDB5FD19FF7DA8FD17FF5258%838383AEAFCAFCFD19FF7D52A8A88383A8FFFCC3FD18FFA852A8AE838383%AEA1C3CAFD18FF7DA8FD12FFA8FD04FF7D7DFFA8A883837CA0A0BDFD17FF%A852FFFFFFA88358837CB0A8FD16FFA852FFFFFFA8AE83835FB59AFD17FF%7DA8FD11FFA8527DFF7D7D52A8FD05FFAE83A093A7A8FD15FF7D7DFD06FF%A8A876A099AFAFFD13FFA87DFD08FF83A18CA8AEFD14FF7DA8FD11FF7D7D%7DA8A87D527DFD07FFAEAF92995FA883AEA8FD10FFA852FD09FFC3BC767D%83AEA8FD11FF27FD09FFCAC39A93838383FD11FF7DA8FD11FFA87D7DA827%7D7DA8FD0AFFCAB5A084838383AEAEFD0DFF7D7DFD0BFFB5BCA7838383A8%A8FD0DFFA87DFD0BFFCAB5C3A08A8383A8AEFD0DFF7DA8FD12FFA8FFA8A8%A87D7DFD0BFFC3C3FCCAA884838383A8A8FD0AFF7D52FD0BFFCACAFCCAA7%AE83837D83A8AEFD0AFF52FD0DFFB5BCBCC98484598383AEAEFD09FF7DA8%FD17FF7D7DFD0CFFCACABCBCC3FFAFAE838383A8A8FD07FF7D52FD0EFFC3%B5C3CAAFFFA88483AEA8FD07FFA852A8FD0EFFBCBCC3CFFFAEAE838483FD%08FFA8A8FD17FF7D7DFD0EFFCAC3B5BCC3CAFFAEAF83835FA8A8FD04FFA8%52FD0FFFCABCB5BCC3CAFFFF84845F8383FFAEFFFFFF52FD10FFCAB5BCB5%CACAFFA8AE838383AEA8FFFFFF7DA8FD15FF7D7D52A8FD12FFBBBCB5C3C3%CACAA7838383A883FF7D7DFD12FFBCBCB5C3BBCAC3CAA7A7838383FFA87D%FD12FFCACAB5BCB5C3C3CAA1A77D8383AEFF7DA8FD14FFA87D7D274DA37E%7F787978797879787F4E7F78794E7F7E7978786A718D948DB68DB6938D6F%68237F547F797F7E79784F7879797F4E7F4E794E797879717169948D948D%948D926F8C227F787F54794F7954797879547978794E7F55795579787270%8E94948D948D93689344A8FD15FF7D7D524E544E547F78784EA37878787F%5478787E547E547E787F547F7E7877A277A19AA26F297E7878794E78787E%787E7879787F7E7E547F7E7E78A97E7E7EA277A2779B9BA16F4D787E547E%7E7E787F7E7E78A37878787FFD047E787F787F7EA378A27EA177A29B70A8%FD17FF7D51A87D7D7DA77D7D7DA77D837D7D7D837DA77D837DA77D837DA8%7D837DA87D847D5927A77D837D7D7DA77D7D7DA77D7D7DA77D7D7DA77D83%7DA77DA77DA87D7D7DA87D7D27A77D7D7DA77D7D7DA77D7D7DA77D837D7D%7D837DA77DA77D837D7D7D837D847DA852A8FD12FF7DA8FFA8A852A8FD14%FFA87D7D7DFFA8527D7D7DA8FF7D7DFD15FF7D7D7DA8FFFD057DFFFF7DFD%16FFA87D52FF7D7D7DA852A8FFA8A8FD11FF7D527DA85252527DFD14FFA8%2752527D7D27277D27277DA852FD15FF5227525252272752272727A852FD%15FFA8272752525227525252277D7DA8FD11FF7D7D7DA8527D279ACAFD13%FFA87D7D7DFFA87D7DA8FF7DA87D7DFD15FF7D7D7DA8FF7DA87DFFA87DA8%52A8FD15FFA87D7DFFA87D7DA8FF7D7DA8A8FD0EFF7DFFFFFF7DA8A8A87D%7D8CC3FD1FFF7D52FD21FF52FD21FF7DA8FD0DFF7D7D52FD07FF59A8FD11%FFCABCA8527DA8A87DA8FD06FFA88CC3FD1FFFA852FD21FF7DA8FD0CFFA8%A87D527DFFFFFFA8FFFF7D59CAFCFD0FFFCABC7DA852F82752F8A8FD05FF%A86FCAC3FD1EFFAF44B5FD20FF7DA8FD0DFF7D527DFFFF7DA8FFFFA852A8%FFC3BCBCFD10FF52A852A87D7DA8FD05FF7D7DFFB5BCC3FD1CFFA876CAC3%C3FD1EFF7DA8FD0EFF527DFFA8527DFFA8527D7DFFFFCAC3C3C3FD0BFFA9%A97D7D527DA8FFA8A852FD04FFA852FFCACAB5CACAFD1BFF52FFBCBCB5CA%FD1CFF7DA8FD0DFF52527DFF7D7D7DFF5252527DFD04FFB5C3FD0BFFA94F%A82727525227272752A8FFFFFF7D52FD04FFB5BCFD1AFFA852A8FFFFC3BC%B5FD1BFF7DA8FD0DFFA87D7DFFFF52A8A8FF7D582D8383FFFFFFCAB5CAFD%0BFFA87D7DA87D7D527D52FD04FFA82DA883FFFFFFCAB5C3FD19FF2783A8%FFFFCABCC3BCFD19FF7DA8FD0DFFA8A87DFD07FF7D83A8A8838384CABCCA%C4FD09FFAEA8527D7DFFFF7D277DA8A852FFA858A88383A7A8AFBCCACAFD%17FFCB52FD0483A8FFC3BCCAFD18FFA8A8FD0CFFA852F87DFD07FF7D7DFF%FFAEA883838A9AB0A8FD07FFA8837D522752277D27522727F852A8A852FF%FFAEFD04837DB0C3FD17FF27FFFFFF8383588483B5BCFD17FF7DA8FD0CFF%7D527D7DFFFF7DA8FFA8A852A8FD06FFA8A87D9399AFFD06FFAEFF7DA8A8%7D7DA87DA87D7D52FF7D7DFD06FFA8AE83BCFCAFAFFD13FFA852FD06FFA8%AE83A1FCCAAFFD14FF7DA8FD0CFF7D52527DFFA8527DA8A852277DFD07FF%AFFFC3C36EA083A8A8FD10FFA852FD09FFA7A1939A5FAEA8FD10FFA852FD%09FFA79A99B583AEA8FD11FF7DA8FD11FF7D7D7DFF7D7D527DFD0BFFBCC2%A0838A83AEAEFD0DFF7D52FD0BFFBDBC9AA18383AEAEFD0DFFA852A8FD09%FFAFFFC3BC998A83AEAEFD0EFF7DA8FD12FF7DA8A87D7D527DFD0CFFCAB0%C3A1AE838383A8A8FD0AFFA852FD0DFFB5C3B5A8838383A8A8FD0BFF27FD%0DFFC3C393A1838359A8A8FD0BFF7DA8FD17FF7DA8FD0EFFBCBCBCC3AFAE%838383A8A8FD07FF7D7DFD0EFFCABCBCBCA8AE838383AEA8FD07FFA852FD%0FFFBCBCB5CAA8848A83A883FD08FF7DA8FD17FF7D7DFD10FFBCBCB5C3CA%A8AE838458A8A8FFAFFFFFA852FD10FFC3BCB5BCC3A8AE83835F8483FFAF%FFFFFF52FD11FFBCBCB5C3A1CFFD0583AEAFFFFFFF7DA8FD15FF7D7D52A8%FD12FFC9C3B5BCC2C3C3CAA78383AEA8FF7D7DFD12FFCACAB5C3B5C3C3C9%A7A783A884FFAF52FD13FFCFBCC2B5C3C2CAA0A783A8A8AEFF84A8FD14FF%A87D7D274EA379A37F79787F7E7F797F7F7F55A37F7F7EA37E796B956994%8DB68D939399766E29A379A3797F797978797E79797F797F797F79A37F79%78716A958D948D9A93926F9322A378A3797F79A37F797E797E7F787F797F%4FA379A37872718E70948D948D9A689A44A8FD15FF7D7D52547F79547F7E%7F4E7F54797E79787F7879547F4E7F797F7E7F7E78779C9B9B93A1692978%797879787F787F4E7F797954797E7978A3797878A3797F7F7F78A2FD049B%934D797954797E7F547F787E78A378787879787F7879547F557F79A378A2%78789BC39A6FA8FD17FF7D277D587D527D587D527D587D527D7C7D527D7C%7D527D587C527D587D587D597D5952277D7C7D7C7D587D7C7D527D7C7D58%7D7C7D7C7D587D7C7D587D527D597D597D7D59277D7C7D527D7C7D7C7D7C%7D587D527D7C7D7C7D587D7C7C527D7D7D587D597D7D7D27A8FD17FF527D%FD14FFA8527D7DFF7D277D7D527DFFA87DFD15FF7D527DA8FF527D527D7D%FFA852FD16FF527D52FF7D52527D52A8FF7DA8FD11FFA8527DFF7D52527D%FD14FFA82752527D5227277D27277DFF52FD15FF275252527D7D7D522727%52A827FD15FFA87DFD0452F8527D52277D7DA8FD11FF7DA87DA8527D52A8%FD14FFA87D7D7DFFA87D7DA8FF7D7DA87DFD15FFA87D7DFD04A87DFFA87D%A852A8FD15FFA8A87DFF7D7D7DA8FF7D7DA8A8FD11FFA8527DA87D52527D%FD20FFA852FD21FF52FD21FF7DA8FD15FFA8FF7D7DFD20FFA87DFD20FFA8%52FD21FFA8A8FD17FF7D7DFD20FFA852FD21FF52FD21FF7DA8FD12FF7DA8%FFFFA852B5CAFD1FFFA87DFD20FFA87DFD21FF7DA8FD11FFA8527DFFA852%7D68C3BCCACAFD1DFF68BCFD20FF27CAFD20FF7DA8FD11FF7D7D7DFF5252%52A8CABCBCBCCAFD1BFFAF9AC3B5C3C3FD1CFFAF6FB5CACAFD1EFF7DA8FD%12FF7DA8A8FFA8527DFFFFCAC3B5BCFD1BFF59FFC3C4B5BCBCFD1BFF52FF%B5BCBCCAFD1CFF7DA8FD17FF582D83AEAEFFCACAFCCAFD18FFA85883FFFF%FFC3C3C3CAFD18FFA852A8FFCABCBCB5CAFD1AFF7DA8FD17FF7D58AE7D83%7D8483C9C3B5FD17FFCB2DAE588358AEAEB5BCBDCAFD17FF2758838383A8%A1BDB5FFCAFD17FF7DA8FD12FF7DA8FF7DA852A8FD04FF83A883A775C3C3%FD15FFA87DFFFFAEAE838383A793C3C3FD15FFA87DFFFFA8A8838A83A7B5%BCC3FD16FFA8A8FD11FF7D527DA8A852277DFD07FFA88A939976A7AEFD12%FFA852FD05FFAEAE838A75927DA8AFFD13FF52FD05FFA8AE837C76FCA1CA%FD14FF7DA8FD11FF7D7D52FF7D7D527DFD0AFFA8B59AA083AEAEFD0FFFA8%52FD0AFF84B5937CA7AEAEFD0FFFA852A8FD07FFAEAF83A1FCA17DAEAEFD%10FF7DA8FD12FF7DA8A87D7D527DFD0CFFCAB5A076838384A8FD0CFFA852%FD0BFFCACAFC9A75838383A8FD0CFFA852FD0BFFA8A8B5B56F7C83A883FF%AEFD0BFF7DA8FD17FF52A8FD0EFFBCBCBCC383AE838383FD09FFA87DFD0E%FFCAB5BBBC83A883AE83FD09FFA852FD0EFFCABCBCB57C83838A83FD0AFF%7DA8FD17FF7D52FD10FFBCBCB5A1CAA8845F8483AEA8FD05FF52FD10FFCA%C3B5BCA07DFD0483AEAEFD05FF27FD11FFBCBCFCA1768383838484A8FD05%FF7DA8FD15FFA8A87DA8FD12FFC3C3B5BCBCC3A1A7838383AEAFFFA883FD%12FFC9CABBC2B5C3A0A1838383AEAEFFAF7CFD12FFCFCABCC2B5C299C399%8383AEAEFFFF84A8FD14FFA87D7D2854A9A2A9A3A3A2A9A8A97EA37FA97E%A97FA9A2A9A2A2719B93948DBC93936F99769929A9A3A37EA9A9A3A2A37F%A37EA97FA97EA37FA9A3A99C9B94948DB6929A6E75769A287FA2A979A37E%A97F7F78FFA9A97EA37FA37EA9A9A97E95959494948D938C9A6FA14BA8FD%15FF52A8274E7F73797979A34F7F557F797978797F79797F797F79A3797F%79A39C9C95BDB6BD8C4E7F79797F797955A3797F797FFD0579A3557F4F79%557F7979789C9CBD94BD934C7979797F7F797F7979A34F79797F797FFD05%79A3797F79A3799C9CBE9BBD9A6FA8FD15FFA87D7D527D527D527D527D53%7D527D7D7C527D527D7D7D527D527D527D527D597D527D5959517D525252%7D527D527D527D527D527D527D7D7D527D527D527D5359537D537D597D27%7D527D7C7D527D7C7D5277527D527D7D7D527D537D527D527D7C7D527D52%7D7D7D27A8FD17FF7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA87DA8FF%A8FFA8FFA8FFA8FFA8FFA8FF7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8%A87D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8FFA8FFA8FFA8FF%A8FF7DA8FFA852CFA8FFA8FFA8FFA8FFA8FFA87D7DFFA87DA8FD14FF7D7D%52FD0DFF7D52FF7D7D7DFD0CFFA87D527DFD0CFFA852A8FF527DA8FD0CFF%7D527DFD0DFF7D52FF527D7DFD0BFF7D7DA87D527DFD14FFA87D7DFD0EFF%52FF7DA87DFD0DFF7D7D7DFD0DFF7DA8A87D7DA8FD0CFF7D7D7DFD0DFFA8%7DFF7D7D7DFD0BFF7D7DFF52A87DFD15FF7DA8FD0DFFFD04A87DFD0EFFA8%7DFD0EFFA8A8A87DA8FD0EFF52A8FD0DFFA87DFF7D7DA8FD0BFF52A8A8A8%52FDC9FF52A87D7DA8FD7AFFA852527D52FD7BFFA8527DA87DA8FD7EFFA8%FD7EFFA8FD3EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2010-01-20T11:21:20-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-01-20T11:21:20-05:00</xmp:MetadataDate>
         <xmp:CreateDate>2010-01-20T11:21:20-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUJq+q2WkaTe6tf&#xA;uY7HT4Jbq6kClisUCGR2CqCTRVOwxVjkP5l6TPCk0Wk648UgDI40i+oVO4I/ddDiqp/ysXTv+rPr&#xA;n/cIvv8Aqlirv+Vi6d/1Z9c/7hF9/wBUsVd/ysXTv+rPrn/cIvv+qWKu/wCVi6d/1Z9c/wC4Rff9&#xA;UsVd/wArF07/AKs+uf8AcIvv+qWKqH/K1NA+u/UPqGsfXvT9b6r+i7z1fTrx58PT5ca7VpTFULa/&#xA;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&#xA;V2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811B005DCFDD4A218DC</stEvt:instanceID>
                  <stEvt:when>2010-01-20T11:21:20-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>xmp.did:F77F117407206811B005DCFDD4A218DC</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:F77F117407206811B005DCFDD4A218DC</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F77F117407206811B005DCFDD4A218DC</xmpMM:DocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -345.096 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 345.096 li
562.673 345.096 li
562.673 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
51.8403 111.25 mo
202.84 111.25 li
51.8403 111.25 mo
51.8403 13.4995 li
202.84 13.4995 li
202.84 111.25 li
51.8403 111.25 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
202.84 108.5 mo
202.84 111.25 li
199.09 109.75 mo
199.09 111.25 li
195.09 109.75 mo
195.09 111.25 li
191.34 109.75 mo
191.34 111.25 li
187.59 108.5 mo
187.59 111.25 li
183.84 109.75 mo
183.84 111.25 li
180.09 109.75 mo
180.09 111.25 li
176.34 109.75 mo
176.34 111.25 li
172.59 108.5 mo
172.59 111.25 li
168.84 109.75 mo
168.84 111.25 li
165.09 109.75 mo
165.09 111.25 li
161.34 109.75 mo
161.34 111.25 li
157.34 108.5 mo
157.34 111.25 li
153.59 109.75 mo
153.59 111.25 li
149.84 109.75 mo
149.84 111.25 li
146.09 109.75 mo
146.09 111.25 li
142.34 108.5 mo
142.34 111.25 li
138.59 109.75 mo
138.59 111.25 li
134.84 109.75 mo
134.84 111.25 li
131.09 109.75 mo
131.09 111.25 li
127.34 108.5 mo
127.34 111.25 li
123.34 109.75 mo
123.34 111.25 li
119.59 109.75 mo
119.59 111.25 li
115.84 109.75 mo
115.84 111.25 li
112.09 108.5 mo
112.09 111.25 li
108.34 109.75 mo
108.34 111.25 li
104.59 109.75 mo
104.59 111.25 li
100.84 109.75 mo
100.84 111.25 li
97.0903 108.5 mo
97.0903 111.25 li
93.3403 109.75 mo
93.3403 111.25 li
89.5903 109.75 mo
89.5903 111.25 li
85.5903 109.75 mo
85.5903 111.25 li
81.8403 108.5 mo
81.8403 111.25 li
78.0903 109.75 mo
78.0903 111.25 li
74.3403 109.75 mo
74.3403 111.25 li
70.5903 109.75 mo
70.5903 111.25 li
66.8403 108.5 mo
66.8403 111.25 li
63.0903 109.75 mo
63.0903 111.25 li
59.3403 109.75 mo
59.3403 111.25 li
55.5903 109.75 mo
55.5903 111.25 li
51.8403 108.5 mo
51.8403 111.25 li
@
51.8403 111.25 mo
51.8403 13.4995 li
@
56.3403 13.4995 mo
51.8403 13.4995 li
54.0903 110 mo
51.8403 110 li
54.0903 107.5 mo
51.8403 107.5 li
56.3403 104.75 mo
51.8403 104.75 li
56.3403 13.4995 mo
51.8403 13.4995 li
54.0903 16.2495 mo
51.8403 16.2495 li
54.0903 18.7495 mo
51.8403 18.7495 li
54.0903 21.2495 mo
51.8403 21.2495 li
54.0903 23.9995 mo
51.8403 23.9995 li
56.3403 26.4995 mo
51.8403 26.4995 li
54.0903 29.2495 mo
51.8403 29.2495 li
54.0903 31.7495 mo
51.8403 31.7495 li
54.0903 34.4995 mo
51.8403 34.4995 li
54.0903 36.9995 mo
51.8403 36.9995 li
56.3403 39.4995 mo
51.8403 39.4995 li
54.0903 42.2495 mo
51.8403 42.2495 li
54.0903 44.7495 mo
51.8403 44.7495 li
54.0903 47.4995 mo
51.8403 47.4995 li
54.0903 49.9995 mo
51.8403 49.9995 li
56.3403 52.7495 mo
51.8403 52.7495 li
54.0903 55.2495 mo
51.8403 55.2495 li
54.0903 57.7495 mo
51.8403 57.7495 li
54.0903 60.4995 mo
51.8403 60.4995 li
54.0903 62.9995 mo
51.8403 62.9995 li
56.3403 65.7495 mo
51.8403 65.7495 li
54.0903 68.2495 mo
51.8403 68.2495 li
54.0903 70.9995 mo
51.8403 70.9995 li
54.0903 73.4995 mo
51.8403 73.4995 li
54.0903 75.9995 mo
51.8403 75.9995 li
56.3403 78.7495 mo
51.8403 78.7495 li
54.0903 81.2495 mo
51.8403 81.2495 li
54.0903 83.9995 mo
51.8403 83.9995 li
54.0903 86.4995 mo
51.8403 86.4995 li
54.0903 89.2495 mo
51.8403 89.2495 li
56.3403 91.7495 mo
51.8403 91.7495 li
54.0903 94.2495 mo
51.8403 94.2495 li
54.0903 96.9995 mo
51.8403 96.9995 li
54.0903 99.4995 mo
51.8403 99.4995 li
54.0903 102.25 mo
51.8403 102.25 li
56.3403 104.75 mo
51.8403 104.75 li
@
202.16 104.689 mo
202.16 103.034 200.816 101.689 199.16 101.689 cv
197.504 101.689 196.16 103.034 196.16 104.689 cv
196.16 106.346 197.504 107.689 199.16 107.689 cv
200.816 107.689 202.16 106.346 202.16 104.689 cv
1 0 0 rgb
ef
194.24 104.45 mo
194.24 102.793 192.896 101.45 191.24 101.45 cv
189.584 101.45 188.24 102.793 188.24 104.45 cv
188.24 106.105 189.584 107.45 191.24 107.45 cv
192.896 107.45 194.24 106.105 194.24 104.45 cv
ef
186.8 103.969 mo
186.8 102.313 185.457 100.969 183.8 100.969 cv
182.145 100.969 180.8 102.313 180.8 103.969 cv
180.8 105.625 182.145 106.969 183.8 106.969 cv
185.457 106.969 186.8 105.625 186.8 103.969 cv
ef
179.36 103.729 mo
179.36 102.074 178.016 100.729 176.36 100.729 cv
174.704 100.729 173.36 102.074 173.36 103.729 cv
173.36 105.385 174.704 106.729 176.36 106.729 cv
178.016 106.729 179.36 105.385 179.36 103.729 cv
ef
171.92 103.009 mo
171.92 101.354 170.576 100.009 168.92 100.009 cv
167.264 100.009 165.92 101.354 165.92 103.009 cv
165.92 104.666 167.264 106.009 168.92 106.009 cv
170.576 106.009 171.92 104.666 171.92 103.009 cv
ef
164.24 102.29 mo
164.24 100.633 162.896 99.2896 161.24 99.2896 cv
159.584 99.2896 158.24 100.633 158.24 102.29 cv
158.24 103.945 159.584 105.29 161.24 105.29 cv
162.896 105.29 164.24 103.945 164.24 102.29 cv
ef
156.561 101.089 mo
156.561 99.4336 155.216 98.0894 153.561 98.0894 cv
151.904 98.0894 150.561 99.4336 150.561 101.089 cv
150.561 102.746 151.904 104.089 153.561 104.089 cv
155.216 104.089 156.561 102.746 156.561 101.089 cv
ef
149.12 99.1694 mo
149.12 97.5137 147.776 96.1694 146.12 96.1694 cv
144.464 96.1694 143.12 97.5137 143.12 99.1694 cv
143.12 100.826 144.464 102.169 146.12 102.169 cv
147.776 102.169 149.12 100.826 149.12 99.1694 cv
ef
141.68 97.0093 mo
141.68 95.3535 140.336 94.0093 138.68 94.0093 cv
137.024 94.0093 135.68 95.3535 135.68 97.0093 cv
135.68 98.6655 137.024 100.009 138.68 100.009 cv
140.336 100.009 141.68 98.6655 141.68 97.0093 cv
ef
134 93.8896 mo
134 92.2334 132.656 90.8896 131 90.8896 cv
129.344 90.8896 128 92.2334 128 93.8896 cv
128 95.5454 129.344 96.8896 131 96.8896 cv
132.656 96.8896 134 95.5454 134 93.8896 cv
ef
126.32 90.7695 mo
126.32 89.1133 124.977 87.7695 123.32 87.7695 cv
121.665 87.7695 120.32 89.1133 120.32 90.7695 cv
120.32 92.4253 121.665 93.7695 123.32 93.7695 cv
124.977 93.7695 126.32 92.4253 126.32 90.7695 cv
ef
118.88 86.9297 mo
118.88 85.2734 117.536 83.9297 115.88 83.9297 cv
114.224 83.9297 112.88 85.2734 112.88 86.9297 cv
112.88 88.5854 114.224 89.9297 115.88 89.9297 cv
117.536 89.9297 118.88 88.5854 118.88 86.9297 cv
ef
111.44 82.8496 mo
111.44 81.1934 110.096 79.8496 108.44 79.8496 cv
106.784 79.8496 105.44 81.1934 105.44 82.8496 cv
105.44 84.5054 106.784 85.8496 108.44 85.8496 cv
110.096 85.8496 111.44 84.5054 111.44 82.8496 cv
ef
103.76 77.0894 mo
103.76 75.4336 102.417 74.0894 100.76 74.0894 cv
99.1045 74.0894 97.7603 75.4336 97.7603 77.0894 cv
97.7603 78.7456 99.1045 80.0894 100.76 80.0894 cv
102.417 80.0894 103.76 78.7456 103.76 77.0894 cv
ef
96.3203 70.6094 mo
96.3203 68.9536 94.9766 67.6094 93.3203 67.6094 cv
91.6646 67.6094 90.3203 68.9536 90.3203 70.6094 cv
90.3203 72.2656 91.6646 73.6094 93.3203 73.6094 cv
94.9766 73.6094 96.3203 72.2656 96.3203 70.6094 cv
ef
88.6401 64.2495 mo
88.6401 62.5933 87.2964 61.2495 85.6401 61.2495 cv
83.9844 61.2495 82.6401 62.5933 82.6401 64.2495 cv
82.6401 65.9058 83.9844 67.2495 85.6401 67.2495 cv
87.2964 67.2495 88.6401 65.9058 88.6401 64.2495 cv
ef
81.2002 55.7295 mo
81.2002 54.0737 79.8564 52.7295 78.2002 52.7295 cv
76.5444 52.7295 75.2002 54.0737 75.2002 55.7295 cv
75.2002 57.3853 76.5444 58.7295 78.2002 58.7295 cv
79.8564 58.7295 81.2002 57.3853 81.2002 55.7295 cv
ef
73.5205 48.5293 mo
73.5205 46.8735 72.1763 45.5293 70.5205 45.5293 cv
68.8643 45.5293 67.5205 46.8735 67.5205 48.5293 cv
67.5205 50.1855 68.8643 51.5293 70.5205 51.5293 cv
72.1763 51.5293 73.5205 50.1855 73.5205 48.5293 cv
ef
66.0806 39.8896 mo
66.0806 38.2334 64.7363 36.8896 63.0806 36.8896 cv
61.4243 36.8896 60.0806 38.2334 60.0806 39.8896 cv
60.0806 41.5454 61.4243 42.8896 63.0806 42.8896 cv
64.7363 42.8896 66.0806 41.5454 66.0806 39.8896 cv
ef
58.6401 24.0493 mo
58.6401 22.3936 57.2964 21.0493 55.6401 21.0493 cv
53.9844 21.0493 52.6401 22.3936 52.6401 24.0493 cv
52.6401 25.7056 53.9844 27.0493 55.6401 27.0493 cv
57.2964 27.0493 58.6401 25.7056 58.6401 24.0493 cv
ef
200.59 104.75 mo
202.09 104.75 li
@
51.8403 104.75 mo
202.84 104.75 li
0 0 0 rgb
@
199.09 102.75 mo
196.84 102.75 li
196.84 107.25 li
201.34 107.25 li
201.34 102.75 li
199.09 102.75 li
cp
0 0 1 rgb
ef
191.34 102.5 mo
189.09 102.5 li
189.09 107 li
193.59 107 li
193.59 102.5 li
191.34 102.5 li
cp
ef
183.84 103 mo
181.59 103 li
181.59 107.5 li
186.09 107.5 li
186.09 103 li
183.84 103 li
cp
ef
176.34 103 mo
174.09 103 li
174.09 107.5 li
178.59 107.5 li
178.59 103 li
176.34 103 li
cp
ef
168.84 102.75 mo
166.59 102.75 li
166.59 107.25 li
171.09 107.25 li
171.09 102.75 li
168.84 102.75 li
cp
ef
161.34 103 mo
159.09 103 li
159.09 107.5 li
163.59 107.5 li
163.59 103 li
161.34 103 li
cp
ef
153.59 103 mo
151.34 103 li
151.34 107.5 li
155.84 107.5 li
155.84 103 li
153.59 103 li
cp
ef
146.09 103 mo
143.84 103 li
143.84 107.5 li
148.34 107.5 li
148.34 103 li
146.09 103 li
cp
ef
138.59 103 mo
136.34 103 li
136.34 107.5 li
140.84 107.5 li
140.84 103 li
138.59 103 li
cp
ef
131.09 103 mo
128.84 103 li
128.84 107.5 li
133.34 107.5 li
133.34 103 li
131.09 103 li
cp
ef
123.34 102.75 mo
121.09 102.75 li
121.09 107.25 li
125.59 107.25 li
125.59 102.75 li
123.34 102.75 li
cp
ef
115.84 103.25 mo
113.59 103.25 li
113.59 107.75 li
118.09 107.75 li
118.09 103.25 li
115.84 103.25 li
cp
ef
108.34 102.5 mo
106.09 102.5 li
106.09 107 li
110.59 107 li
110.59 102.5 li
108.34 102.5 li
cp
ef
100.84 103 mo
98.5903 103 li
98.5903 107.5 li
103.09 107.5 li
103.09 103 li
100.84 103 li
cp
ef
93.3403 102.5 mo
91.0903 102.5 li
91.0903 107 li
95.5903 107 li
95.5903 102.5 li
93.3403 102.5 li
cp
ef
85.5903 103.25 mo
83.3403 103.25 li
83.3403 107.75 li
87.8403 107.75 li
87.8403 103.25 li
85.5903 103.25 li
cp
ef
78.0903 103 mo
75.8403 103 li
75.8403 107.5 li
80.3403 107.5 li
80.3403 103 li
78.0903 103 li
cp
ef
70.5903 103 mo
68.3403 103 li
68.3403 107.5 li
72.8403 107.5 li
72.8403 103 li
70.5903 103 li
cp
ef
63.0903 103.75 mo
60.8403 103.75 li
60.8403 108.25 li
65.3403 108.25 li
65.3403 103.75 li
63.0903 103.75 li
cp
ef
55.5903 104 mo
53.3403 104 li
53.3403 108.5 li
57.8403 108.5 li
57.8403 104 li
55.5903 104 li
cp
ef
58.6401 61.2495 mo
58.6401 59.5933 57.2964 58.2495 55.6401 58.2495 cv
53.9844 58.2495 52.6401 59.5933 52.6401 61.2495 cv
52.6401 62.9058 53.9844 64.2495 55.6401 64.2495 cv
57.2964 64.2495 58.6401 62.9058 58.6401 61.2495 cv
66.0806 63.8896 mo
66.0806 62.2334 64.7363 60.8896 63.0806 60.8896 cv
61.4243 60.8896 60.0806 62.2334 60.0806 63.8896 cv
60.0806 65.5454 61.4243 66.8896 63.0806 66.8896 cv
64.7363 66.8896 66.0806 65.5454 66.0806 63.8896 cv
73.5205 65.5693 mo
73.5205 63.9136 72.1763 62.5693 70.5205 62.5693 cv
68.8643 62.5693 67.5205 63.9136 67.5205 65.5693 cv
67.5205 67.2256 68.8643 68.5693 70.5205 68.5693 cv
72.1763 68.5693 73.5205 67.2256 73.5205 65.5693 cv
81.2002 67.7295 mo
81.2002 66.0737 79.8564 64.7295 78.2002 64.7295 cv
76.5444 64.7295 75.2002 66.0737 75.2002 67.7295 cv
75.2002 69.3853 76.5444 70.7295 78.2002 70.7295 cv
79.8564 70.7295 81.2002 69.3853 81.2002 67.7295 cv
88.6401 70.8496 mo
88.6401 69.1934 87.2964 67.8496 85.6401 67.8496 cv
83.9844 67.8496 82.6401 69.1934 82.6401 70.8496 cv
82.6401 72.5054 83.9844 73.8496 85.6401 73.8496 cv
87.2964 73.8496 88.6401 72.5054 88.6401 70.8496 cv
96.3203 72.5293 mo
96.3203 70.8735 94.9766 69.5293 93.3203 69.5293 cv
91.6646 69.5293 90.3203 70.8735 90.3203 72.5293 cv
90.3203 74.1855 91.6646 75.5293 93.3203 75.5293 cv
94.9766 75.5293 96.3203 74.1855 96.3203 72.5293 cv
103.76 74.9297 mo
103.76 73.2734 102.417 71.9297 100.76 71.9297 cv
99.1045 71.9297 97.7603 73.2734 97.7603 74.9297 cv
97.7603 76.5854 99.1045 77.9297 100.76 77.9297 cv
102.417 77.9297 103.76 76.5854 103.76 74.9297 cv
111.44 77.3296 mo
111.44 75.6733 110.096 74.3296 108.44 74.3296 cv
106.784 74.3296 105.44 75.6733 105.44 77.3296 cv
105.44 78.9854 106.784 80.3296 108.44 80.3296 cv
110.096 80.3296 111.44 78.9854 111.44 77.3296 cv
118.88 79.7295 mo
118.88 78.0737 117.536 76.7295 115.88 76.7295 cv
114.224 76.7295 112.88 78.0737 112.88 79.7295 cv
112.88 81.3853 114.224 82.7295 115.88 82.7295 cv
117.536 82.7295 118.88 81.3853 118.88 79.7295 cv
126.32 81.4097 mo
126.32 79.7534 124.977 78.4097 123.32 78.4097 cv
121.665 78.4097 120.32 79.7534 120.32 81.4097 cv
120.32 83.0654 121.665 84.4097 123.32 84.4097 cv
124.977 84.4097 126.32 83.0654 126.32 81.4097 cv
134 84.0493 mo
134 82.3936 132.656 81.0493 131 81.0493 cv
129.344 81.0493 128 82.3936 128 84.0493 cv
128 85.7056 129.344 87.0493 131 87.0493 cv
132.656 87.0493 134 85.7056 134 84.0493 cv
141.68 85.9692 mo
141.68 84.3135 140.336 82.9692 138.68 82.9692 cv
137.024 82.9692 135.68 84.3135 135.68 85.9692 cv
135.68 87.6255 137.024 88.9692 138.68 88.9692 cv
140.336 88.9692 141.68 87.6255 141.68 85.9692 cv
149.12 88.2495 mo
149.12 86.5933 147.776 85.2495 146.12 85.2495 cv
144.464 85.2495 143.12 86.5933 143.12 88.2495 cv
143.12 89.9053 144.464 91.2495 146.12 91.2495 cv
147.776 91.2495 149.12 89.9053 149.12 88.2495 cv
156.561 90.5293 mo
156.561 88.8735 155.216 87.5293 153.561 87.5293 cv
151.904 87.5293 150.561 88.8735 150.561 90.5293 cv
150.561 92.1855 151.904 93.5293 153.561 93.5293 cv
155.216 93.5293 156.561 92.1855 156.561 90.5293 cv
164.24 92.4497 mo
164.24 90.7935 162.896 89.4497 161.24 89.4497 cv
159.584 89.4497 158.24 90.7935 158.24 92.4497 cv
158.24 94.1055 159.584 95.4497 161.24 95.4497 cv
162.896 95.4497 164.24 94.1055 164.24 92.4497 cv
171.92 95.3296 mo
171.92 93.6733 170.576 92.3296 168.92 92.3296 cv
167.264 92.3296 165.92 93.6733 165.92 95.3296 cv
165.92 96.9854 167.264 98.3296 168.92 98.3296 cv
170.576 98.3296 171.92 96.9854 171.92 95.3296 cv
179.36 97.2495 mo
179.36 95.5933 178.016 94.2495 176.36 94.2495 cv
174.704 94.2495 173.36 95.5933 173.36 97.2495 cv
173.36 98.9053 174.704 100.25 176.36 100.25 cv
178.016 100.25 179.36 98.9053 179.36 97.2495 cv
186.8 99.6494 mo
186.8 97.9937 185.457 96.6494 183.8 96.6494 cv
182.145 96.6494 180.8 97.9937 180.8 99.6494 cv
180.8 101.306 182.145 102.649 183.8 102.649 cv
185.457 102.649 186.8 101.306 186.8 99.6494 cv
194.24 102.049 mo
194.24 100.394 192.896 99.0493 191.24 99.0493 cv
189.584 99.0493 188.24 100.394 188.24 102.049 cv
188.24 103.706 189.584 105.049 191.24 105.049 cv
192.896 105.049 194.24 103.706 194.24 102.049 cv
202.16 103.969 mo
202.16 102.313 200.816 100.969 199.16 100.969 cv
197.504 100.969 196.16 102.313 196.16 103.969 cv
196.16 105.625 197.504 106.969 199.16 106.969 cv
200.816 106.969 202.16 105.625 202.16 103.969 cv
0 .4 0 rgb
@
202.16 104.689 mo
202.16 103.034 200.816 101.689 199.16 101.689 cv
197.504 101.689 196.16 103.034 196.16 104.689 cv
196.16 106.346 197.504 107.689 199.16 107.689 cv
200.816 107.689 202.16 106.346 202.16 104.689 cv
1 0 0 rgb
ef
194.24 104.45 mo
194.24 102.793 192.896 101.45 191.24 101.45 cv
189.584 101.45 188.24 102.793 188.24 104.45 cv
188.24 106.105 189.584 107.45 191.24 107.45 cv
192.896 107.45 194.24 106.105 194.24 104.45 cv
ef
186.8 103.969 mo
186.8 102.313 185.457 100.969 183.8 100.969 cv
182.145 100.969 180.8 102.313 180.8 103.969 cv
180.8 105.625 182.145 106.969 183.8 106.969 cv
185.457 106.969 186.8 105.625 186.8 103.969 cv
ef
179.36 103.729 mo
179.36 102.074 178.016 100.729 176.36 100.729 cv
174.704 100.729 173.36 102.074 173.36 103.729 cv
173.36 105.385 174.704 106.729 176.36 106.729 cv
178.016 106.729 179.36 105.385 179.36 103.729 cv
ef
171.92 103.009 mo
171.92 101.354 170.576 100.009 168.92 100.009 cv
167.264 100.009 165.92 101.354 165.92 103.009 cv
165.92 104.666 167.264 106.009 168.92 106.009 cv
170.576 106.009 171.92 104.666 171.92 103.009 cv
ef
164.24 102.29 mo
164.24 100.633 162.896 99.2896 161.24 99.2896 cv
159.584 99.2896 158.24 100.633 158.24 102.29 cv
158.24 103.945 159.584 105.29 161.24 105.29 cv
162.896 105.29 164.24 103.945 164.24 102.29 cv
ef
156.561 101.089 mo
156.561 99.4336 155.216 98.0894 153.561 98.0894 cv
151.904 98.0894 150.561 99.4336 150.561 101.089 cv
150.561 102.746 151.904 104.089 153.561 104.089 cv
155.216 104.089 156.561 102.746 156.561 101.089 cv
ef
149.12 99.1694 mo
149.12 97.5137 147.776 96.1694 146.12 96.1694 cv
144.464 96.1694 143.12 97.5137 143.12 99.1694 cv
143.12 100.826 144.464 102.169 146.12 102.169 cv
147.776 102.169 149.12 100.826 149.12 99.1694 cv
ef
141.68 97.0093 mo
141.68 95.3535 140.336 94.0093 138.68 94.0093 cv
137.024 94.0093 135.68 95.3535 135.68 97.0093 cv
135.68 98.6655 137.024 100.009 138.68 100.009 cv
140.336 100.009 141.68 98.6655 141.68 97.0093 cv
ef
134 93.8896 mo
134 92.2334 132.656 90.8896 131 90.8896 cv
129.344 90.8896 128 92.2334 128 93.8896 cv
128 95.5454 129.344 96.8896 131 96.8896 cv
132.656 96.8896 134 95.5454 134 93.8896 cv
ef
126.32 90.7695 mo
126.32 89.1133 124.977 87.7695 123.32 87.7695 cv
121.665 87.7695 120.32 89.1133 120.32 90.7695 cv
120.32 92.4253 121.665 93.7695 123.32 93.7695 cv
124.977 93.7695 126.32 92.4253 126.32 90.7695 cv
ef
118.88 86.9297 mo
118.88 85.2734 117.536 83.9297 115.88 83.9297 cv
114.224 83.9297 112.88 85.2734 112.88 86.9297 cv
112.88 88.5854 114.224 89.9297 115.88 89.9297 cv
117.536 89.9297 118.88 88.5854 118.88 86.9297 cv
ef
111.44 82.8496 mo
111.44 81.1934 110.096 79.8496 108.44 79.8496 cv
106.784 79.8496 105.44 81.1934 105.44 82.8496 cv
105.44 84.5054 106.784 85.8496 108.44 85.8496 cv
110.096 85.8496 111.44 84.5054 111.44 82.8496 cv
ef
103.76 77.0894 mo
103.76 75.4336 102.417 74.0894 100.76 74.0894 cv
99.1045 74.0894 97.7603 75.4336 97.7603 77.0894 cv
97.7603 78.7456 99.1045 80.0894 100.76 80.0894 cv
102.417 80.0894 103.76 78.7456 103.76 77.0894 cv
ef
96.3203 70.6094 mo
96.3203 68.9536 94.9766 67.6094 93.3203 67.6094 cv
91.6646 67.6094 90.3203 68.9536 90.3203 70.6094 cv
90.3203 72.2656 91.6646 73.6094 93.3203 73.6094 cv
94.9766 73.6094 96.3203 72.2656 96.3203 70.6094 cv
ef
88.6401 64.2495 mo
88.6401 62.5933 87.2964 61.2495 85.6401 61.2495 cv
83.9844 61.2495 82.6401 62.5933 82.6401 64.2495 cv
82.6401 65.9058 83.9844 67.2495 85.6401 67.2495 cv
87.2964 67.2495 88.6401 65.9058 88.6401 64.2495 cv
ef
81.2002 55.7295 mo
81.2002 54.0737 79.8564 52.7295 78.2002 52.7295 cv
76.5444 52.7295 75.2002 54.0737 75.2002 55.7295 cv
75.2002 57.3853 76.5444 58.7295 78.2002 58.7295 cv
79.8564 58.7295 81.2002 57.3853 81.2002 55.7295 cv
ef
73.5205 48.5293 mo
73.5205 46.8735 72.1763 45.5293 70.5205 45.5293 cv
68.8643 45.5293 67.5205 46.8735 67.5205 48.5293 cv
67.5205 50.1855 68.8643 51.5293 70.5205 51.5293 cv
72.1763 51.5293 73.5205 50.1855 73.5205 48.5293 cv
ef
66.0806 39.8896 mo
66.0806 38.2334 64.7363 36.8896 63.0806 36.8896 cv
61.4243 36.8896 60.0806 38.2334 60.0806 39.8896 cv
60.0806 41.5454 61.4243 42.8896 63.0806 42.8896 cv
64.7363 42.8896 66.0806 41.5454 66.0806 39.8896 cv
ef
58.6401 24.0493 mo
58.6401 22.3936 57.2964 21.0493 55.6401 21.0493 cv
53.9844 21.0493 52.6401 22.3936 52.6401 24.0493 cv
52.6401 25.7056 53.9844 27.0493 55.6401 27.0493 cv
57.2964 27.0493 58.6401 25.7056 58.6401 24.0493 cv
ef
200.59 104.75 mo
202.09 104.75 li
@
202.215 111.186 mo
353.215 111.186 li
202.215 111.186 mo
202.215 13.436 li
353.215 13.436 li
353.215 111.186 li
202.215 111.186 li
cp
0 0 0 rgb
@
353.215 108.436 mo
353.215 111.186 li
349.465 109.686 mo
349.465 111.186 li
345.715 109.686 mo
345.715 111.186 li
341.715 109.686 mo
341.715 111.186 li
337.965 108.436 mo
337.965 111.186 li
334.215 109.686 mo
334.215 111.186 li
330.465 109.686 mo
330.465 111.186 li
326.715 109.686 mo
326.715 111.186 li
322.965 108.436 mo
322.965 111.186 li
319.215 109.686 mo
319.215 111.186 li
315.465 109.686 mo
315.465 111.186 li
311.715 109.686 mo
311.715 111.186 li
307.965 108.436 mo
307.965 111.186 li
303.965 109.686 mo
303.965 111.186 li
300.215 109.686 mo
300.215 111.186 li
296.465 109.686 mo
296.465 111.186 li
292.715 108.436 mo
292.715 111.186 li
288.965 109.686 mo
288.965 111.186 li
285.215 109.686 mo
285.215 111.186 li
281.465 109.686 mo
281.465 111.186 li
277.715 108.436 mo
277.715 111.186 li
273.965 109.686 mo
273.965 111.186 li
270.215 109.686 mo
270.215 111.186 li
266.215 109.686 mo
266.215 111.186 li
262.465 108.436 mo
262.465 111.186 li
258.715 109.686 mo
258.715 111.186 li
254.965 109.686 mo
254.965 111.186 li
251.215 109.686 mo
251.215 111.186 li
247.465 108.436 mo
247.465 111.186 li
243.715 109.686 mo
243.715 111.186 li
239.965 109.686 mo
239.965 111.186 li
236.215 109.686 mo
236.215 111.186 li
232.215 108.436 mo
232.215 111.186 li
228.465 109.686 mo
228.465 111.186 li
224.715 109.686 mo
224.715 111.186 li
220.965 109.686 mo
220.965 111.186 li
217.215 108.436 mo
217.215 111.186 li
213.465 109.686 mo
213.465 111.186 li
209.715 109.686 mo
209.715 111.186 li
205.965 109.686 mo
205.965 111.186 li
202.215 108.436 mo
202.215 111.186 li
@
202.215 111.186 mo
202.215 13.436 li
@
206.715 13.436 mo
202.215 13.436 li
204.465 109.936 mo
202.215 109.936 li
204.465 107.436 mo
202.215 107.436 li
206.715 104.686 mo
202.215 104.686 li
206.715 13.436 mo
202.215 13.436 li
204.465 16.186 mo
202.215 16.186 li
204.465 18.686 mo
202.215 18.686 li
204.465 21.186 mo
202.215 21.186 li
204.465 23.936 mo
202.215 23.936 li
206.715 26.436 mo
202.215 26.436 li
204.465 29.186 mo
202.215 29.186 li
204.465 31.686 mo
202.215 31.686 li
204.465 34.436 mo
202.215 34.436 li
204.465 36.936 mo
202.215 36.936 li
206.715 39.436 mo
202.215 39.436 li
204.465 42.186 mo
202.215 42.186 li
204.465 44.686 mo
202.215 44.686 li
204.465 47.436 mo
202.215 47.436 li
204.465 49.936 mo
202.215 49.936 li
206.715 52.686 mo
202.215 52.686 li
204.465 55.186 mo
202.215 55.186 li
204.465 57.686 mo
202.215 57.686 li
204.465 60.436 mo
202.215 60.436 li
204.465 62.936 mo
202.215 62.936 li
206.715 65.686 mo
202.215 65.686 li
204.465 68.186 mo
202.215 68.186 li
204.465 70.936 mo
202.215 70.936 li
204.465 73.436 mo
202.215 73.436 li
204.465 75.936 mo
202.215 75.936 li
206.715 78.686 mo
202.215 78.686 li
204.465 81.186 mo
202.215 81.186 li
204.465 83.936 mo
202.215 83.936 li
204.465 86.436 mo
202.215 86.436 li
204.465 89.186 mo
202.215 89.186 li
206.715 91.686 mo
202.215 91.686 li
204.465 94.186 mo
202.215 94.186 li
204.465 96.936 mo
202.215 96.936 li
204.465 99.436 mo
202.215 99.436 li
204.465 102.186 mo
202.215 102.186 li
206.715 104.686 mo
202.215 104.686 li
@
352.425 104.626 mo
352.425 102.97 351.082 101.626 349.425 101.626 cv
347.769 101.626 346.425 102.97 346.425 104.626 cv
346.425 106.282 347.769 107.626 349.425 107.626 cv
351.082 107.626 352.425 106.282 352.425 104.626 cv
1 0 0 rgb
ef
344.746 104.386 mo
344.746 102.73 343.401 101.386 341.746 101.386 cv
340.089 101.386 338.746 102.73 338.746 104.386 cv
338.746 106.042 340.089 107.386 341.746 107.386 cv
343.401 107.386 344.746 106.042 344.746 104.386 cv
ef
337.305 104.146 mo
337.305 102.49 335.961 101.146 334.305 101.146 cv
332.649 101.146 331.305 102.49 331.305 104.146 cv
331.305 105.802 332.649 107.146 334.305 107.146 cv
335.961 107.146 337.305 105.802 337.305 104.146 cv
ef
329.625 103.666 mo
329.625 102.01 328.282 100.666 326.625 100.666 cv
324.969 100.666 323.625 102.01 323.625 103.666 cv
323.625 105.322 324.969 106.666 326.625 106.666 cv
328.282 106.666 329.625 105.322 329.625 103.666 cv
ef
322.185 102.946 mo
322.185 101.29 320.841 99.9458 319.185 99.9458 cv
317.53 99.9458 316.185 101.29 316.185 102.946 cv
316.185 104.602 317.53 105.946 319.185 105.946 cv
320.841 105.946 322.185 104.602 322.185 102.946 cv
ef
314.746 101.986 mo
314.746 100.33 313.401 98.9858 311.746 98.9858 cv
310.089 98.9858 308.746 100.33 308.746 101.986 cv
308.746 103.642 310.089 104.986 311.746 104.986 cv
313.401 104.986 314.746 103.642 314.746 101.986 cv
ef
307.065 100.186 mo
307.065 98.5298 305.721 97.186 304.065 97.186 cv
302.41 97.186 301.065 98.5298 301.065 100.186 cv
301.065 101.842 302.41 103.186 304.065 103.186 cv
305.721 103.186 307.065 101.842 307.065 100.186 cv
ef
299.385 98.3862 mo
299.385 96.73 298.042 95.3862 296.385 95.3862 cv
294.729 95.3862 293.385 96.73 293.385 98.3862 cv
293.385 100.042 294.729 101.386 296.385 101.386 cv
298.042 101.386 299.385 100.042 299.385 98.3862 cv
ef
291.946 96.7061 mo
291.946 95.0498 290.601 93.7061 288.946 93.7061 cv
287.29 93.7061 285.946 95.0498 285.946 96.7061 cv
285.946 98.3618 287.29 99.7061 288.946 99.7061 cv
290.601 99.7061 291.946 98.3618 291.946 96.7061 cv
ef
284.505 93.5859 mo
284.505 91.9302 283.162 90.5859 281.505 90.5859 cv
279.849 90.5859 278.505 91.9302 278.505 93.5859 cv
278.505 95.2422 279.849 96.5859 281.505 96.5859 cv
283.162 96.5859 284.505 95.2422 284.505 93.5859 cv
ef
277.065 89.9858 mo
277.065 88.3301 275.721 86.9858 274.065 86.9858 cv
272.409 86.9858 271.065 88.3301 271.065 89.9858 cv
271.065 91.6421 272.409 92.9858 274.065 92.9858 cv
275.721 92.9858 277.065 91.6421 277.065 89.9858 cv
ef
269.146 85.666 mo
269.146 84.0103 267.801 82.666 266.146 82.666 cv
264.489 82.666 263.146 84.0103 263.146 85.666 cv
263.146 87.3218 264.489 88.666 266.146 88.666 cv
267.801 88.666 269.146 87.3218 269.146 85.666 cv
ef
261.706 80.8662 mo
261.706 79.21 260.361 77.8662 258.706 77.8662 cv
257.049 77.8662 255.706 79.21 255.706 80.8662 cv
255.706 82.522 257.049 83.8662 258.706 83.8662 cv
260.361 83.8662 261.706 82.522 261.706 80.8662 cv
ef
254.265 75.106 mo
254.265 73.4502 252.921 72.106 251.265 72.106 cv
249.609 72.106 248.265 73.4502 248.265 75.106 cv
248.265 76.7622 249.609 78.106 251.265 78.106 cv
252.921 78.106 254.265 76.7622 254.265 75.106 cv
ef
246.825 68.8662 mo
246.825 67.21 245.481 65.8657 243.825 65.8657 cv
242.169 65.8657 240.825 67.21 240.825 68.8662 cv
240.825 70.522 242.169 71.8662 243.825 71.8662 cv
245.481 71.8662 246.825 70.522 246.825 68.8662 cv
ef
239.146 62.8657 mo
239.146 61.21 237.801 59.8657 236.146 59.8657 cv
234.489 59.8657 233.146 61.21 233.146 62.8657 cv
233.146 64.522 234.489 65.8657 236.146 65.8657 cv
237.801 65.8657 239.146 64.522 239.146 62.8657 cv
ef
231.465 54.9458 mo
231.465 53.29 230.122 51.9458 228.465 51.9458 cv
226.809 51.9458 225.465 53.29 225.465 54.9458 cv
225.465 56.6021 226.809 57.9458 228.465 57.9458 cv
230.122 57.9458 231.465 56.6021 231.465 54.9458 cv
ef
224.025 45.8262 mo
224.025 44.1699 222.681 42.8262 221.025 42.8262 cv
219.369 42.8262 218.025 44.1699 218.025 45.8262 cv
218.025 47.4819 219.369 48.8262 221.025 48.8262 cv
222.681 48.8262 224.025 47.4819 224.025 45.8262 cv
ef
216.345 39.3462 mo
216.345 37.6899 215.001 36.3462 213.345 36.3462 cv
211.689 36.3462 210.345 37.6899 210.345 39.3462 cv
210.345 41.002 211.689 42.3462 213.345 42.3462 cv
215.001 42.3462 216.345 41.002 216.345 39.3462 cv
ef
208.905 23.9858 mo
208.905 22.3301 207.562 20.9858 205.905 20.9858 cv
204.25 20.9858 202.905 22.3301 202.905 23.9858 cv
202.905 25.6421 204.25 26.9858 205.905 26.9858 cv
207.562 26.9858 208.905 25.6421 208.905 23.9858 cv
ef
350.965 104.686 mo
352.465 104.686 li
@
202.215 104.686 mo
353.215 104.686 li
0 0 0 rgb
@
349.465 102.436 mo
347.215 102.436 li
347.215 106.936 li
351.715 106.936 li
351.715 102.436 li
349.465 102.436 li
cp
0 0 1 rgb
ef
341.715 102.686 mo
339.465 102.686 li
339.465 107.186 li
343.965 107.186 li
343.965 102.686 li
341.715 102.686 li
cp
ef
334.215 102.686 mo
331.965 102.686 li
331.965 107.186 li
336.465 107.186 li
336.465 102.686 li
334.215 102.686 li
cp
ef
326.715 102.936 mo
324.465 102.936 li
324.465 107.436 li
328.965 107.436 li
328.965 102.936 li
326.715 102.936 li
cp
ef
319.215 102.436 mo
316.965 102.436 li
316.965 106.936 li
321.465 106.936 li
321.465 102.436 li
319.215 102.436 li
cp
ef
311.715 102.936 mo
309.465 102.936 li
309.465 107.436 li
313.965 107.436 li
313.965 102.936 li
311.715 102.936 li
cp
ef
303.965 102.436 mo
301.715 102.436 li
301.715 106.936 li
306.215 106.936 li
306.215 102.436 li
303.965 102.436 li
cp
ef
296.465 102.436 mo
294.215 102.436 li
294.215 106.936 li
298.715 106.936 li
298.715 102.436 li
296.465 102.436 li
cp
ef
288.965 102.436 mo
286.715 102.436 li
286.715 106.936 li
291.215 106.936 li
291.215 102.436 li
288.965 102.436 li
cp
ef
281.465 102.686 mo
279.215 102.686 li
279.215 107.186 li
283.715 107.186 li
283.715 102.686 li
281.465 102.686 li
cp
ef
273.965 102.186 mo
271.715 102.186 li
271.715 106.686 li
276.215 106.686 li
276.215 102.186 li
273.965 102.186 li
cp
ef
266.215 102.436 mo
263.965 102.436 li
263.965 106.936 li
268.465 106.936 li
268.465 102.436 li
266.215 102.436 li
cp
ef
258.715 102.936 mo
256.465 102.936 li
256.465 107.436 li
260.965 107.436 li
260.965 102.936 li
258.715 102.936 li
cp
ef
251.215 102.686 mo
248.965 102.686 li
248.965 107.186 li
253.465 107.186 li
253.465 102.686 li
251.215 102.686 li
cp
ef
243.715 102.186 mo
241.465 102.186 li
241.465 106.686 li
245.965 106.686 li
245.965 102.186 li
243.715 102.186 li
cp
ef
236.215 102.936 mo
233.965 102.936 li
233.965 107.436 li
238.465 107.436 li
238.465 102.936 li
236.215 102.936 li
cp
ef
228.465 103.436 mo
226.215 103.436 li
226.215 107.936 li
230.715 107.936 li
230.715 103.436 li
228.465 103.436 li
cp
ef
220.965 102.936 mo
218.715 102.936 li
218.715 107.436 li
223.215 107.436 li
223.215 102.936 li
220.965 102.936 li
cp
ef
213.465 103.186 mo
211.215 103.186 li
211.215 107.686 li
215.715 107.686 li
215.715 103.186 li
213.465 103.186 li
cp
ef
205.965 103.186 mo
203.715 103.186 li
203.715 107.686 li
208.215 107.686 li
208.215 103.186 li
205.965 103.186 li
cp
ef
208.905 60.4658 mo
208.905 58.8101 207.562 57.4658 205.905 57.4658 cv
204.25 57.4658 202.905 58.8101 202.905 60.4658 cv
202.905 62.1221 204.25 63.4658 205.905 63.4658 cv
207.562 63.4658 208.905 62.1221 208.905 60.4658 cv
216.345 61.9058 mo
216.345 60.25 215.001 58.9058 213.345 58.9058 cv
211.689 58.9058 210.345 60.25 210.345 61.9058 cv
210.345 63.562 211.689 64.9058 213.345 64.9058 cv
215.001 64.9058 216.345 63.562 216.345 61.9058 cv
224.025 64.5459 mo
224.025 62.8901 222.681 61.5459 221.025 61.5459 cv
219.369 61.5459 218.025 62.8901 218.025 64.5459 cv
218.025 66.2021 219.369 67.5459 221.025 67.5459 cv
222.681 67.5459 224.025 66.2021 224.025 64.5459 cv
231.465 67.4263 mo
231.465 65.77 230.122 64.4263 228.465 64.4263 cv
226.809 64.4263 225.465 65.77 225.465 67.4263 cv
225.465 69.082 226.809 70.4263 228.465 70.4263 cv
230.122 70.4263 231.465 69.082 231.465 67.4263 cv
239.146 69.3462 mo
239.146 67.6899 237.801 66.3462 236.146 66.3462 cv
234.489 66.3462 233.146 67.6899 233.146 69.3462 cv
233.146 71.002 234.489 72.3462 236.146 72.3462 cv
237.801 72.3462 239.146 71.002 239.146 69.3462 cv
246.825 71.7461 mo
246.825 70.0898 245.481 68.7461 243.825 68.7461 cv
242.169 68.7461 240.825 70.0898 240.825 71.7461 cv
240.825 73.4019 242.169 74.7461 243.825 74.7461 cv
245.481 74.7461 246.825 73.4019 246.825 71.7461 cv
254.265 73.4263 mo
254.265 71.77 252.921 70.4263 251.265 70.4263 cv
249.609 70.4263 248.265 71.77 248.265 73.4263 cv
248.265 75.082 249.609 76.4263 251.265 76.4263 cv
252.921 76.4263 254.265 75.082 254.265 73.4263 cv
261.706 76.5459 mo
261.706 74.8901 260.361 73.5459 258.706 73.5459 cv
257.049 73.5459 255.706 74.8901 255.706 76.5459 cv
255.706 78.2021 257.049 79.5459 258.706 79.5459 cv
260.361 79.5459 261.706 78.2021 261.706 76.5459 cv
269.146 79.186 mo
269.146 77.5298 267.801 76.186 266.146 76.186 cv
264.489 76.186 263.146 77.5298 263.146 79.186 cv
263.146 80.8418 264.489 82.186 266.146 82.186 cv
267.801 82.186 269.146 80.8418 269.146 79.186 cv
277.065 80.3862 mo
277.065 78.73 275.721 77.3862 274.065 77.3862 cv
272.409 77.3862 271.065 78.73 271.065 80.3862 cv
271.065 82.042 272.409 83.3862 274.065 83.3862 cv
275.721 83.3862 277.065 82.042 277.065 80.3862 cv
284.505 83.2661 mo
284.505 81.6099 283.162 80.2661 281.505 80.2661 cv
279.849 80.2661 278.505 81.6099 278.505 83.2661 cv
278.505 84.9219 279.849 86.2661 281.505 86.2661 cv
283.162 86.2661 284.505 84.9219 284.505 83.2661 cv
291.946 85.4263 mo
291.946 83.77 290.601 82.4263 288.946 82.4263 cv
287.29 82.4263 285.946 83.77 285.946 85.4263 cv
285.946 87.082 287.29 88.4263 288.946 88.4263 cv
290.601 88.4263 291.946 87.082 291.946 85.4263 cv
299.385 87.3462 mo
299.385 85.6899 298.042 84.3462 296.385 84.3462 cv
294.729 84.3462 293.385 85.6899 293.385 87.3462 cv
293.385 89.002 294.729 90.3462 296.385 90.3462 cv
298.042 90.3462 299.385 89.002 299.385 87.3462 cv
307.065 89.7461 mo
307.065 88.0898 305.721 86.7461 304.065 86.7461 cv
302.41 86.7461 301.065 88.0898 301.065 89.7461 cv
301.065 91.4019 302.41 92.7461 304.065 92.7461 cv
305.721 92.7461 307.065 91.4019 307.065 89.7461 cv
314.746 92.146 mo
314.746 90.4902 313.401 89.146 311.746 89.146 cv
310.089 89.146 308.746 90.4902 308.746 92.146 cv
308.746 93.8022 310.089 95.146 311.746 95.146 cv
313.401 95.146 314.746 93.8022 314.746 92.146 cv
322.185 94.5459 mo
322.185 92.8901 320.841 91.5459 319.185 91.5459 cv
317.53 91.5459 316.185 92.8901 316.185 94.5459 cv
316.185 96.2021 317.53 97.5459 319.185 97.5459 cv
320.841 97.5459 322.185 96.2021 322.185 94.5459 cv
329.625 96.9458 mo
329.625 95.29 328.282 93.9458 326.625 93.9458 cv
324.969 93.9458 323.625 95.29 323.625 96.9458 cv
323.625 98.6021 324.969 99.9458 326.625 99.9458 cv
328.282 99.9458 329.625 98.6021 329.625 96.9458 cv
337.305 99.3462 mo
337.305 97.6899 335.961 96.3462 334.305 96.3462 cv
332.649 96.3462 331.305 97.6899 331.305 99.3462 cv
331.305 101.002 332.649 102.346 334.305 102.346 cv
335.961 102.346 337.305 101.002 337.305 99.3462 cv
344.746 101.986 mo
344.746 100.33 343.401 98.9858 341.746 98.9858 cv
340.089 98.9858 338.746 100.33 338.746 101.986 cv
338.746 103.642 340.089 104.986 341.746 104.986 cv
343.401 104.986 344.746 103.642 344.746 101.986 cv
352.425 103.666 mo
352.425 102.01 351.082 100.666 349.425 100.666 cv
347.769 100.666 346.425 102.01 346.425 103.666 cv
346.425 105.322 347.769 106.666 349.425 106.666 cv
351.082 106.666 352.425 105.322 352.425 103.666 cv
0 .4 0 rgb
@
352.425 104.626 mo
352.425 102.97 351.082 101.626 349.425 101.626 cv
347.769 101.626 346.425 102.97 346.425 104.626 cv
346.425 106.282 347.769 107.626 349.425 107.626 cv
351.082 107.626 352.425 106.282 352.425 104.626 cv
1 0 0 rgb
ef
344.746 104.386 mo
344.746 102.73 343.401 101.386 341.746 101.386 cv
340.089 101.386 338.746 102.73 338.746 104.386 cv
338.746 106.042 340.089 107.386 341.746 107.386 cv
343.401 107.386 344.746 106.042 344.746 104.386 cv
ef
337.305 104.146 mo
337.305 102.49 335.961 101.146 334.305 101.146 cv
332.649 101.146 331.305 102.49 331.305 104.146 cv
331.305 105.802 332.649 107.146 334.305 107.146 cv
335.961 107.146 337.305 105.802 337.305 104.146 cv
ef
329.625 103.666 mo
329.625 102.01 328.282 100.666 326.625 100.666 cv
324.969 100.666 323.625 102.01 323.625 103.666 cv
323.625 105.322 324.969 106.666 326.625 106.666 cv
328.282 106.666 329.625 105.322 329.625 103.666 cv
ef
322.185 102.946 mo
322.185 101.29 320.841 99.9458 319.185 99.9458 cv
317.53 99.9458 316.185 101.29 316.185 102.946 cv
316.185 104.602 317.53 105.946 319.185 105.946 cv
320.841 105.946 322.185 104.602 322.185 102.946 cv
ef
314.746 101.986 mo
314.746 100.33 313.401 98.9858 311.746 98.9858 cv
310.089 98.9858 308.746 100.33 308.746 101.986 cv
308.746 103.642 310.089 104.986 311.746 104.986 cv
313.401 104.986 314.746 103.642 314.746 101.986 cv
ef
307.065 100.186 mo
307.065 98.5298 305.721 97.186 304.065 97.186 cv
302.41 97.186 301.065 98.5298 301.065 100.186 cv
301.065 101.842 302.41 103.186 304.065 103.186 cv
305.721 103.186 307.065 101.842 307.065 100.186 cv
ef
299.385 98.3862 mo
299.385 96.73 298.042 95.3862 296.385 95.3862 cv
294.729 95.3862 293.385 96.73 293.385 98.3862 cv
293.385 100.042 294.729 101.386 296.385 101.386 cv
298.042 101.386 299.385 100.042 299.385 98.3862 cv
ef
291.946 96.7061 mo
291.946 95.0498 290.601 93.7061 288.946 93.7061 cv
287.29 93.7061 285.946 95.0498 285.946 96.7061 cv
285.946 98.3618 287.29 99.7061 288.946 99.7061 cv
290.601 99.7061 291.946 98.3618 291.946 96.7061 cv
ef
284.505 93.5859 mo
284.505 91.9302 283.162 90.5859 281.505 90.5859 cv
279.849 90.5859 278.505 91.9302 278.505 93.5859 cv
278.505 95.2422 279.849 96.5859 281.505 96.5859 cv
283.162 96.5859 284.505 95.2422 284.505 93.5859 cv
ef
277.065 89.9858 mo
277.065 88.3301 275.721 86.9858 274.065 86.9858 cv
272.409 86.9858 271.065 88.3301 271.065 89.9858 cv
271.065 91.6421 272.409 92.9858 274.065 92.9858 cv
275.721 92.9858 277.065 91.6421 277.065 89.9858 cv
ef
269.146 85.666 mo
269.146 84.0103 267.801 82.666 266.146 82.666 cv
264.489 82.666 263.146 84.0103 263.146 85.666 cv
263.146 87.3218 264.489 88.666 266.146 88.666 cv
267.801 88.666 269.146 87.3218 269.146 85.666 cv
ef
261.706 80.8662 mo
261.706 79.21 260.361 77.8662 258.706 77.8662 cv
257.049 77.8662 255.706 79.21 255.706 80.8662 cv
255.706 82.522 257.049 83.8662 258.706 83.8662 cv
260.361 83.8662 261.706 82.522 261.706 80.8662 cv
ef
254.265 75.106 mo
254.265 73.4502 252.921 72.106 251.265 72.106 cv
249.609 72.106 248.265 73.4502 248.265 75.106 cv
248.265 76.7622 249.609 78.106 251.265 78.106 cv
252.921 78.106 254.265 76.7622 254.265 75.106 cv
ef
246.825 68.8662 mo
246.825 67.21 245.481 65.8657 243.825 65.8657 cv
242.169 65.8657 240.825 67.21 240.825 68.8662 cv
240.825 70.522 242.169 71.8662 243.825 71.8662 cv
245.481 71.8662 246.825 70.522 246.825 68.8662 cv
ef
239.146 62.8657 mo
239.146 61.21 237.801 59.8657 236.146 59.8657 cv
234.489 59.8657 233.146 61.21 233.146 62.8657 cv
233.146 64.522 234.489 65.8657 236.146 65.8657 cv
237.801 65.8657 239.146 64.522 239.146 62.8657 cv
ef
231.465 54.9458 mo
231.465 53.29 230.122 51.9458 228.465 51.9458 cv
226.809 51.9458 225.465 53.29 225.465 54.9458 cv
225.465 56.6021 226.809 57.9458 228.465 57.9458 cv
230.122 57.9458 231.465 56.6021 231.465 54.9458 cv
ef
224.025 45.8262 mo
224.025 44.1699 222.681 42.8262 221.025 42.8262 cv
219.369 42.8262 218.025 44.1699 218.025 45.8262 cv
218.025 47.4819 219.369 48.8262 221.025 48.8262 cv
222.681 48.8262 224.025 47.4819 224.025 45.8262 cv
ef
216.345 39.3462 mo
216.345 37.6899 215.001 36.3462 213.345 36.3462 cv
211.689 36.3462 210.345 37.6899 210.345 39.3462 cv
210.345 41.002 211.689 42.3462 213.345 42.3462 cv
215.001 42.3462 216.345 41.002 216.345 39.3462 cv
ef
208.905 23.9858 mo
208.905 22.3301 207.562 20.9858 205.905 20.9858 cv
204.25 20.9858 202.905 22.3301 202.905 23.9858 cv
202.905 25.6421 204.25 26.9858 205.905 26.9858 cv
207.562 26.9858 208.905 25.6421 208.905 23.9858 cv
ef
350.965 104.686 mo
352.465 104.686 li
@
353.15 111.097 mo
504.65 111.097 li
353.15 111.097 mo
353.15 13.3472 li
504.65 13.3472 li
504.65 111.097 li
353.15 111.097 li
cp
0 0 0 rgb
@
504.65 108.347 mo
504.65 111.097 li
500.9 109.597 mo
500.9 111.097 li
497.15 109.597 mo
497.15 111.097 li
493.4 109.597 mo
493.4 111.097 li
489.4 108.347 mo
489.4 111.097 li
485.65 109.597 mo
485.65 111.097 li
481.9 109.597 mo
481.9 111.097 li
478.15 109.597 mo
478.15 111.097 li
474.4 108.347 mo
474.4 111.097 li
470.65 109.597 mo
470.65 111.097 li
466.65 109.597 mo
466.65 111.097 li
462.9 109.597 mo
462.9 111.097 li
459.15 108.347 mo
459.15 111.097 li
455.4 109.597 mo
455.4 111.097 li
451.65 109.597 mo
451.65 111.097 li
447.9 109.597 mo
447.9 111.097 li
444.15 108.347 mo
444.15 111.097 li
440.15 109.597 mo
440.15 111.097 li
436.4 109.597 mo
436.4 111.097 li
432.65 109.597 mo
432.65 111.097 li
428.9 108.347 mo
428.9 111.097 li
425.15 109.597 mo
425.15 111.097 li
421.4 109.597 mo
421.4 111.097 li
417.65 109.597 mo
417.65 111.097 li
413.65 108.347 mo
413.65 111.097 li
409.9 109.597 mo
409.9 111.097 li
406.15 109.597 mo
406.15 111.097 li
402.4 109.597 mo
402.4 111.097 li
398.65 108.347 mo
398.65 111.097 li
394.9 109.597 mo
394.9 111.097 li
391.15 109.597 mo
391.15 111.097 li
387.15 109.597 mo
387.15 111.097 li
383.4 108.347 mo
383.4 111.097 li
379.65 109.597 mo
379.65 111.097 li
375.9 109.597 mo
375.9 111.097 li
372.15 109.597 mo
372.15 111.097 li
368.4 108.347 mo
368.4 111.097 li
364.4 109.597 mo
364.4 111.097 li
360.65 109.597 mo
360.65 111.097 li
356.9 109.597 mo
356.9 111.097 li
353.15 108.347 mo
353.15 111.097 li
@
353.15 111.097 mo
353.15 13.3472 li
@
357.65 13.3472 mo
353.15 13.3472 li
355.4 109.847 mo
353.15 109.847 li
355.4 107.347 mo
353.15 107.347 li
357.65 104.597 mo
353.15 104.597 li
357.65 13.3472 mo
353.15 13.3472 li
355.4 16.0972 mo
353.15 16.0972 li
355.4 18.5972 mo
353.15 18.5972 li
355.4 21.0972 mo
353.15 21.0972 li
355.4 23.8472 mo
353.15 23.8472 li
357.65 26.3472 mo
353.15 26.3472 li
355.4 29.0972 mo
353.15 29.0972 li
355.4 31.5972 mo
353.15 31.5972 li
355.4 34.3472 mo
353.15 34.3472 li
355.4 36.8472 mo
353.15 36.8472 li
357.65 39.3472 mo
353.15 39.3472 li
355.4 42.0972 mo
353.15 42.0972 li
355.4 44.5972 mo
353.15 44.5972 li
355.4 47.3472 mo
353.15 47.3472 li
355.4 49.8472 mo
353.15 49.8472 li
357.65 52.5972 mo
353.15 52.5972 li
355.4 55.0972 mo
353.15 55.0972 li
355.4 57.5972 mo
353.15 57.5972 li
355.4 60.3472 mo
353.15 60.3472 li
355.4 62.8472 mo
353.15 62.8472 li
357.65 65.5972 mo
353.15 65.5972 li
355.4 68.0972 mo
353.15 68.0972 li
355.4 70.8472 mo
353.15 70.8472 li
355.4 73.3472 mo
353.15 73.3472 li
355.4 75.8472 mo
353.15 75.8472 li
357.65 78.5972 mo
353.15 78.5972 li
355.4 81.0972 mo
353.15 81.0972 li
355.4 83.8472 mo
353.15 83.8472 li
355.4 86.3472 mo
353.15 86.3472 li
355.4 89.0972 mo
353.15 89.0972 li
357.65 91.5972 mo
353.15 91.5972 li
355.4 94.0972 mo
353.15 94.0972 li
355.4 96.8472 mo
353.15 96.8472 li
355.4 99.3472 mo
353.15 99.3472 li
355.4 102.097 mo
353.15 102.097 li
357.65 104.597 mo
353.15 104.597 li
@
503.97 104.537 mo
503.97 102.881 502.625 101.537 500.97 101.537 cv
499.314 101.537 497.97 102.881 497.97 104.537 cv
497.97 106.193 499.314 107.537 500.97 107.537 cv
502.625 107.537 503.97 106.193 503.97 104.537 cv
1 0 0 rgb
ef
496.29 104.297 mo
496.29 102.641 494.946 101.297 493.29 101.297 cv
491.634 101.297 490.29 102.641 490.29 104.297 cv
490.29 105.953 491.634 107.297 493.29 107.297 cv
494.946 107.297 496.29 105.953 496.29 104.297 cv
ef
488.61 103.817 mo
488.61 102.161 487.266 100.817 485.61 100.817 cv
483.954 100.817 482.61 102.161 482.61 103.817 cv
482.61 105.473 483.954 106.817 485.61 106.817 cv
487.266 106.817 488.61 105.473 488.61 103.817 cv
ef
481.169 103.097 mo
481.169 101.441 479.826 100.097 478.169 100.097 cv
476.514 100.097 475.169 101.441 475.169 103.097 cv
475.169 104.753 476.514 106.097 478.169 106.097 cv
479.826 106.097 481.169 104.753 481.169 103.097 cv
ef
473.73 102.377 mo
473.73 100.721 472.386 99.377 470.73 99.377 cv
469.074 99.377 467.73 100.721 467.73 102.377 cv
467.73 104.033 469.074 105.377 470.73 105.377 cv
472.386 105.377 473.73 104.033 473.73 102.377 cv
ef
465.81 101.417 mo
465.81 99.7612 464.466 98.417 462.81 98.417 cv
461.154 98.417 459.81 99.7612 459.81 101.417 cv
459.81 103.073 461.154 104.417 462.81 104.417 cv
464.466 104.417 465.81 103.073 465.81 101.417 cv
ef
458.37 99.4971 mo
458.37 97.8413 457.026 96.4971 455.37 96.4971 cv
453.714 96.4971 452.37 97.8413 452.37 99.4971 cv
452.37 101.153 453.714 102.497 455.37 102.497 cv
457.026 102.497 458.37 101.153 458.37 99.4971 cv
ef
450.93 98.0571 mo
450.93 96.4009 449.585 95.0571 447.93 95.0571 cv
446.274 95.0571 444.93 96.4009 444.93 98.0571 cv
444.93 99.7134 446.274 101.057 447.93 101.057 cv
449.585 101.057 450.93 99.7134 450.93 98.0571 cv
ef
443.25 95.6572 mo
443.25 94.001 441.906 92.6572 440.25 92.6572 cv
438.594 92.6572 437.25 94.001 437.25 95.6572 cv
437.25 97.313 438.594 98.6572 440.25 98.6572 cv
441.906 98.6572 443.25 97.313 443.25 95.6572 cv
ef
435.57 92.5371 mo
435.57 90.8813 434.226 89.5371 432.57 89.5371 cv
430.914 89.5371 429.57 90.8813 429.57 92.5371 cv
429.57 94.1934 430.914 95.5371 432.57 95.5371 cv
434.226 95.5371 435.57 94.1934 435.57 92.5371 cv
ef
428.13 88.457 mo
428.13 86.8013 426.786 85.457 425.13 85.457 cv
423.474 85.457 422.13 86.8013 422.13 88.457 cv
422.13 90.1133 423.474 91.457 425.13 91.457 cv
426.786 91.457 428.13 90.1133 428.13 88.457 cv
ef
420.69 84.6172 mo
420.69 82.9609 419.346 81.6172 417.69 81.6172 cv
416.034 81.6172 414.69 82.9609 414.69 84.6172 cv
414.69 86.2729 416.034 87.6172 417.69 87.6172 cv
419.346 87.6172 420.69 86.2729 420.69 84.6172 cv
ef
413.01 79.3374 mo
413.01 77.6812 411.666 76.3374 410.01 76.3374 cv
408.354 76.3374 407.01 77.6812 407.01 79.3374 cv
407.01 80.9932 408.354 82.3374 410.01 82.3374 cv
411.666 82.3374 413.01 80.9932 413.01 79.3374 cv
ef
405.33 74.0571 mo
405.33 72.4014 403.986 71.0571 402.33 71.0571 cv
400.674 71.0571 399.33 72.4014 399.33 74.0571 cv
399.33 75.7134 400.674 77.0571 402.33 77.0571 cv
403.986 77.0571 405.33 75.7134 405.33 74.0571 cv
ef
397.89 68.0571 mo
397.89 66.4009 396.546 65.0571 394.89 65.0571 cv
393.234 65.0571 391.89 66.4009 391.89 68.0571 cv
391.89 69.7134 393.234 71.0571 394.89 71.0571 cv
396.546 71.0571 397.89 69.7134 397.89 68.0571 cv
ef
390.209 60.6172 mo
390.209 58.9614 388.866 57.6172 387.209 57.6172 cv
385.554 57.6172 384.209 58.9614 384.209 60.6172 cv
384.209 62.2729 385.554 63.6172 387.209 63.6172 cv
388.866 63.6172 390.209 62.2729 390.209 60.6172 cv
ef
382.53 53.417 mo
382.53 51.7612 381.186 50.417 379.53 50.417 cv
377.874 50.417 376.53 51.7612 376.53 53.417 cv
376.53 55.0732 377.874 56.417 379.53 56.417 cv
381.186 56.417 382.53 55.0732 382.53 53.417 cv
ef
375.09 45.2573 mo
375.09 43.6011 373.746 42.2573 372.09 42.2573 cv
370.434 42.2573 369.09 43.6011 369.09 45.2573 cv
369.09 46.9131 370.434 48.2573 372.09 48.2573 cv
373.746 48.2573 375.09 46.9131 375.09 45.2573 cv
ef
367.41 39.4971 mo
367.41 37.8413 366.066 36.4971 364.41 36.4971 cv
362.753 36.4971 361.41 37.8413 361.41 39.4971 cv
361.41 41.1533 362.753 42.4971 364.41 42.4971 cv
366.066 42.4971 367.41 41.1533 367.41 39.4971 cv
ef
359.97 27.0171 mo
359.97 25.3613 358.625 24.0171 356.97 24.0171 cv
355.314 24.0171 353.97 25.3613 353.97 27.0171 cv
353.97 28.6733 355.314 30.0171 356.97 30.0171 cv
358.625 30.0171 359.97 28.6733 359.97 27.0171 cv
ef
502.4 104.597 mo
503.9 104.597 li
@
353.15 104.597 mo
504.65 104.597 li
0 0 0 rgb
@
500.9 102.347 mo
498.65 102.347 li
498.65 106.847 li
503.15 106.847 li
503.15 102.347 li
500.9 102.347 li
cp
0 0 1 rgb
ef
493.4 102.597 mo
491.15 102.597 li
491.15 107.097 li
495.65 107.097 li
495.65 102.597 li
493.4 102.597 li
cp
ef
485.65 102.597 mo
483.4 102.597 li
483.4 107.097 li
487.9 107.097 li
487.9 102.597 li
485.65 102.597 li
cp
ef
478.15 102.597 mo
475.9 102.597 li
475.9 107.097 li
480.4 107.097 li
480.4 102.597 li
478.15 102.597 li
cp
ef
470.65 102.597 mo
468.4 102.597 li
468.4 107.097 li
472.9 107.097 li
472.9 102.597 li
470.65 102.597 li
cp
ef
462.9 102.597 mo
460.65 102.597 li
460.65 107.097 li
465.15 107.097 li
465.15 102.597 li
462.9 102.597 li
cp
ef
455.4 102.597 mo
453.15 102.597 li
453.15 107.097 li
457.65 107.097 li
457.65 102.597 li
455.4 102.597 li
cp
ef
447.9 102.597 mo
445.65 102.597 li
445.65 107.097 li
450.15 107.097 li
450.15 102.597 li
447.9 102.597 li
cp
ef
440.15 102.597 mo
437.9 102.597 li
437.9 107.097 li
442.4 107.097 li
442.4 102.597 li
440.15 102.597 li
cp
ef
432.65 102.597 mo
430.4 102.597 li
430.4 107.097 li
434.9 107.097 li
434.9 102.597 li
432.65 102.597 li
cp
ef
425.15 102.347 mo
422.9 102.347 li
422.9 106.847 li
427.4 106.847 li
427.4 102.347 li
425.15 102.347 li
cp
ef
417.65 102.847 mo
415.4 102.847 li
415.4 107.347 li
419.9 107.347 li
419.9 102.847 li
417.65 102.847 li
cp
ef
409.9 102.597 mo
407.65 102.597 li
407.65 107.097 li
412.15 107.097 li
412.15 102.597 li
409.9 102.597 li
cp
ef
402.4 102.597 mo
400.15 102.597 li
400.15 107.097 li
404.65 107.097 li
404.65 102.597 li
402.4 102.597 li
cp
ef
394.9 102.597 mo
392.65 102.597 li
392.65 107.097 li
397.15 107.097 li
397.15 102.597 li
394.9 102.597 li
cp
ef
387.15 102.597 mo
384.9 102.597 li
384.9 107.097 li
389.4 107.097 li
389.4 102.597 li
387.15 102.597 li
cp
ef
379.65 102.597 mo
377.4 102.597 li
377.4 107.097 li
381.9 107.097 li
381.9 102.597 li
379.65 102.597 li
cp
ef
372.15 102.597 mo
369.9 102.597 li
369.9 107.097 li
374.4 107.097 li
374.4 102.597 li
372.15 102.597 li
cp
ef
364.4 102.847 mo
362.15 102.847 li
362.15 107.347 li
366.65 107.347 li
366.65 102.847 li
364.4 102.847 li
cp
ef
356.9 102.847 mo
354.65 102.847 li
354.65 107.347 li
359.15 107.347 li
359.15 102.847 li
356.9 102.847 li
cp
ef
359.97 58.457 mo
359.97 56.8013 358.625 55.457 356.97 55.457 cv
355.314 55.457 353.97 56.8013 353.97 58.457 cv
353.97 60.1133 355.314 61.457 356.97 61.457 cv
358.625 61.457 359.97 60.1133 359.97 58.457 cv
367.41 60.8569 mo
367.41 59.2012 366.066 57.8569 364.41 57.8569 cv
362.753 57.8569 361.41 59.2012 361.41 60.8569 cv
361.41 62.5132 362.753 63.8569 364.41 63.8569 cv
366.066 63.8569 367.41 62.5132 367.41 60.8569 cv
375.09 63.4971 mo
375.09 61.8413 373.746 60.4971 372.09 60.4971 cv
370.434 60.4971 369.09 61.8413 369.09 63.4971 cv
369.09 65.1533 370.434 66.4971 372.09 66.4971 cv
373.746 66.4971 375.09 65.1533 375.09 63.4971 cv
382.53 65.897 mo
382.53 64.2412 381.186 62.897 379.53 62.897 cv
377.874 62.897 376.53 64.2412 376.53 65.897 cv
376.53 67.5532 377.874 68.897 379.53 68.897 cv
381.186 68.897 382.53 67.5532 382.53 65.897 cv
390.209 68.0571 mo
390.209 66.4009 388.866 65.0571 387.209 65.0571 cv
385.554 65.0571 384.209 66.4009 384.209 68.0571 cv
384.209 69.7134 385.554 71.0571 387.209 71.0571 cv
388.866 71.0571 390.209 69.7134 390.209 68.0571 cv
397.89 70.6973 mo
397.89 69.041 396.546 67.6973 394.89 67.6973 cv
393.234 67.6973 391.89 69.041 391.89 70.6973 cv
391.89 72.353 393.234 73.6973 394.89 73.6973 cv
396.546 73.6973 397.89 72.353 397.89 70.6973 cv
405.33 73.3374 mo
405.33 71.6812 403.986 70.3374 402.33 70.3374 cv
400.674 70.3374 399.33 71.6812 399.33 73.3374 cv
399.33 74.9932 400.674 76.3374 402.33 76.3374 cv
403.986 76.3374 405.33 74.9932 405.33 73.3374 cv
413.01 75.7373 mo
413.01 74.0811 411.666 72.7373 410.01 72.7373 cv
408.354 72.7373 407.01 74.0811 407.01 75.7373 cv
407.01 77.3931 408.354 78.7373 410.01 78.7373 cv
411.666 78.7373 413.01 77.3931 413.01 75.7373 cv
420.69 77.6572 mo
420.69 76.001 419.346 74.6572 417.69 74.6572 cv
416.034 74.6572 414.69 76.001 414.69 77.6572 cv
414.69 79.313 416.034 80.6572 417.69 80.6572 cv
419.346 80.6572 420.69 79.313 420.69 77.6572 cv
428.13 80.0571 mo
428.13 78.4014 426.786 77.0571 425.13 77.0571 cv
423.474 77.0571 422.13 78.4014 422.13 80.0571 cv
422.13 81.7134 423.474 83.0571 425.13 83.0571 cv
426.786 83.0571 428.13 81.7134 428.13 80.0571 cv
435.57 82.6973 mo
435.57 81.041 434.226 79.6973 432.57 79.6973 cv
430.914 79.6973 429.57 81.041 429.57 82.6973 cv
429.57 84.353 430.914 85.6973 432.57 85.6973 cv
434.226 85.6973 435.57 84.353 435.57 82.6973 cv
443.25 84.8569 mo
443.25 83.2012 441.906 81.8569 440.25 81.8569 cv
438.594 81.8569 437.25 83.2012 437.25 84.8569 cv
437.25 86.5132 438.594 87.8569 440.25 87.8569 cv
441.906 87.8569 443.25 86.5132 443.25 84.8569 cv
450.93 87.2573 mo
450.93 85.6011 449.585 84.2573 447.93 84.2573 cv
446.274 84.2573 444.93 85.6011 444.93 87.2573 cv
444.93 88.9131 446.274 90.2573 447.93 90.2573 cv
449.585 90.2573 450.93 88.9131 450.93 87.2573 cv
458.37 89.6572 mo
458.37 88.001 457.026 86.6572 455.37 86.6572 cv
453.714 86.6572 452.37 88.001 452.37 89.6572 cv
452.37 91.313 453.714 92.6572 455.37 92.6572 cv
457.026 92.6572 458.37 91.313 458.37 89.6572 cv
465.81 91.8169 mo
465.81 90.1611 464.466 88.8169 462.81 88.8169 cv
461.154 88.8169 459.81 90.1611 459.81 91.8169 cv
459.81 93.4731 461.154 94.8169 462.81 94.8169 cv
464.466 94.8169 465.81 93.4731 465.81 91.8169 cv
473.73 94.457 mo
473.73 92.8013 472.386 91.457 470.73 91.457 cv
469.074 91.457 467.73 92.8013 467.73 94.457 cv
467.73 96.1133 469.074 97.457 470.73 97.457 cv
472.386 97.457 473.73 96.1133 473.73 94.457 cv
481.169 96.8569 mo
481.169 95.2012 479.826 93.8569 478.169 93.8569 cv
476.514 93.8569 475.169 95.2012 475.169 96.8569 cv
475.169 98.5132 476.514 99.8569 478.169 99.8569 cv
479.826 99.8569 481.169 98.5132 481.169 96.8569 cv
488.61 99.0171 mo
488.61 97.3613 487.266 96.0171 485.61 96.0171 cv
483.954 96.0171 482.61 97.3613 482.61 99.0171 cv
482.61 100.673 483.954 102.017 485.61 102.017 cv
487.266 102.017 488.61 100.673 488.61 99.0171 cv
496.29 101.657 mo
496.29 100.001 494.946 98.6572 493.29 98.6572 cv
491.634 98.6572 490.29 100.001 490.29 101.657 cv
490.29 103.313 491.634 104.657 493.29 104.657 cv
494.946 104.657 496.29 103.313 496.29 101.657 cv
503.97 103.817 mo
503.97 102.161 502.625 100.817 500.97 100.817 cv
499.314 100.817 497.97 102.161 497.97 103.817 cv
497.97 105.473 499.314 106.817 500.97 106.817 cv
502.625 106.817 503.97 105.473 503.97 103.817 cv
0 .4 0 rgb
@
503.97 104.537 mo
503.97 102.881 502.625 101.537 500.97 101.537 cv
499.314 101.537 497.97 102.881 497.97 104.537 cv
497.97 106.193 499.314 107.537 500.97 107.537 cv
502.625 107.537 503.97 106.193 503.97 104.537 cv
1 0 0 rgb
ef
496.29 104.297 mo
496.29 102.641 494.946 101.297 493.29 101.297 cv
491.634 101.297 490.29 102.641 490.29 104.297 cv
490.29 105.953 491.634 107.297 493.29 107.297 cv
494.946 107.297 496.29 105.953 496.29 104.297 cv
ef
488.61 103.817 mo
488.61 102.161 487.266 100.817 485.61 100.817 cv
483.954 100.817 482.61 102.161 482.61 103.817 cv
482.61 105.473 483.954 106.817 485.61 106.817 cv
487.266 106.817 488.61 105.473 488.61 103.817 cv
ef
481.169 103.097 mo
481.169 101.441 479.826 100.097 478.169 100.097 cv
476.514 100.097 475.169 101.441 475.169 103.097 cv
475.169 104.753 476.514 106.097 478.169 106.097 cv
479.826 106.097 481.169 104.753 481.169 103.097 cv
ef
473.73 102.377 mo
473.73 100.721 472.386 99.377 470.73 99.377 cv
469.074 99.377 467.73 100.721 467.73 102.377 cv
467.73 104.033 469.074 105.377 470.73 105.377 cv
472.386 105.377 473.73 104.033 473.73 102.377 cv
ef
465.81 101.417 mo
465.81 99.7612 464.466 98.417 462.81 98.417 cv
461.154 98.417 459.81 99.7612 459.81 101.417 cv
459.81 103.073 461.154 104.417 462.81 104.417 cv
464.466 104.417 465.81 103.073 465.81 101.417 cv
ef
458.37 99.4971 mo
458.37 97.8413 457.026 96.4971 455.37 96.4971 cv
453.714 96.4971 452.37 97.8413 452.37 99.4971 cv
452.37 101.153 453.714 102.497 455.37 102.497 cv
457.026 102.497 458.37 101.153 458.37 99.4971 cv
ef
450.93 98.0571 mo
450.93 96.4009 449.585 95.0571 447.93 95.0571 cv
446.274 95.0571 444.93 96.4009 444.93 98.0571 cv
444.93 99.7134 446.274 101.057 447.93 101.057 cv
449.585 101.057 450.93 99.7134 450.93 98.0571 cv
ef
443.25 95.6572 mo
443.25 94.001 441.906 92.6572 440.25 92.6572 cv
438.594 92.6572 437.25 94.001 437.25 95.6572 cv
437.25 97.313 438.594 98.6572 440.25 98.6572 cv
441.906 98.6572 443.25 97.313 443.25 95.6572 cv
ef
435.57 92.5371 mo
435.57 90.8813 434.226 89.5371 432.57 89.5371 cv
430.914 89.5371 429.57 90.8813 429.57 92.5371 cv
429.57 94.1934 430.914 95.5371 432.57 95.5371 cv
434.226 95.5371 435.57 94.1934 435.57 92.5371 cv
ef
428.13 88.457 mo
428.13 86.8013 426.786 85.457 425.13 85.457 cv
423.474 85.457 422.13 86.8013 422.13 88.457 cv
422.13 90.1133 423.474 91.457 425.13 91.457 cv
426.786 91.457 428.13 90.1133 428.13 88.457 cv
ef
420.69 84.6172 mo
420.69 82.9609 419.346 81.6172 417.69 81.6172 cv
416.034 81.6172 414.69 82.9609 414.69 84.6172 cv
414.69 86.2729 416.034 87.6172 417.69 87.6172 cv
419.346 87.6172 420.69 86.2729 420.69 84.6172 cv
ef
413.01 79.3374 mo
413.01 77.6812 411.666 76.3374 410.01 76.3374 cv
408.354 76.3374 407.01 77.6812 407.01 79.3374 cv
407.01 80.9932 408.354 82.3374 410.01 82.3374 cv
411.666 82.3374 413.01 80.9932 413.01 79.3374 cv
ef
405.33 74.0571 mo
405.33 72.4014 403.986 71.0571 402.33 71.0571 cv
400.674 71.0571 399.33 72.4014 399.33 74.0571 cv
399.33 75.7134 400.674 77.0571 402.33 77.0571 cv
403.986 77.0571 405.33 75.7134 405.33 74.0571 cv
ef
397.89 68.0571 mo
397.89 66.4009 396.546 65.0571 394.89 65.0571 cv
393.234 65.0571 391.89 66.4009 391.89 68.0571 cv
391.89 69.7134 393.234 71.0571 394.89 71.0571 cv
396.546 71.0571 397.89 69.7134 397.89 68.0571 cv
ef
390.209 60.6172 mo
390.209 58.9614 388.866 57.6172 387.209 57.6172 cv
385.554 57.6172 384.209 58.9614 384.209 60.6172 cv
384.209 62.2729 385.554 63.6172 387.209 63.6172 cv
388.866 63.6172 390.209 62.2729 390.209 60.6172 cv
ef
382.53 53.417 mo
382.53 51.7612 381.186 50.417 379.53 50.417 cv
377.874 50.417 376.53 51.7612 376.53 53.417 cv
376.53 55.0732 377.874 56.417 379.53 56.417 cv
381.186 56.417 382.53 55.0732 382.53 53.417 cv
ef
375.09 45.2573 mo
375.09 43.6011 373.746 42.2573 372.09 42.2573 cv
370.434 42.2573 369.09 43.6011 369.09 45.2573 cv
369.09 46.9131 370.434 48.2573 372.09 48.2573 cv
373.746 48.2573 375.09 46.9131 375.09 45.2573 cv
ef
367.41 39.4971 mo
367.41 37.8413 366.066 36.4971 364.41 36.4971 cv
362.753 36.4971 361.41 37.8413 361.41 39.4971 cv
361.41 41.1533 362.753 42.4971 364.41 42.4971 cv
366.066 42.4971 367.41 41.1533 367.41 39.4971 cv
ef
359.97 27.0171 mo
359.97 25.3613 358.625 24.0171 356.97 24.0171 cv
355.314 24.0171 353.97 25.3613 353.97 27.0171 cv
353.97 28.6733 355.314 30.0171 356.97 30.0171 cv
358.625 30.0171 359.97 28.6733 359.97 27.0171 cv
ef
502.4 104.597 mo
503.9 104.597 li
@
51.9653 208.813 mo
202.965 208.813 li
51.9653 208.813 mo
51.9653 111.313 li
202.965 111.313 li
202.965 208.813 li
51.9653 208.813 li
cp
0 0 0 rgb
@
202.965 205.813 mo
202.965 208.813 li
199.215 207.313 mo
199.215 208.813 li
195.215 207.313 mo
195.215 208.813 li
191.465 207.313 mo
191.465 208.813 li
187.715 205.813 mo
187.715 208.813 li
183.965 207.313 mo
183.965 208.813 li
180.215 207.313 mo
180.215 208.813 li
176.465 207.313 mo
176.465 208.813 li
172.715 205.813 mo
172.715 208.813 li
168.965 207.313 mo
168.965 208.813 li
165.215 207.313 mo
165.215 208.813 li
161.465 207.313 mo
161.465 208.813 li
157.465 205.813 mo
157.465 208.813 li
153.715 207.313 mo
153.715 208.813 li
149.965 207.313 mo
149.965 208.813 li
146.215 207.313 mo
146.215 208.813 li
142.465 205.813 mo
142.465 208.813 li
138.715 207.313 mo
138.715 208.813 li
134.965 207.313 mo
134.965 208.813 li
131.215 207.313 mo
131.215 208.813 li
127.465 205.813 mo
127.465 208.813 li
123.465 207.313 mo
123.465 208.813 li
119.715 207.313 mo
119.715 208.813 li
115.965 207.313 mo
115.965 208.813 li
112.215 205.813 mo
112.215 208.813 li
108.465 207.313 mo
108.465 208.813 li
104.715 207.313 mo
104.715 208.813 li
100.965 207.313 mo
100.965 208.813 li
97.2153 205.813 mo
97.2153 208.813 li
93.4653 207.313 mo
93.4653 208.813 li
89.7153 207.313 mo
89.7153 208.813 li
85.7153 207.313 mo
85.7153 208.813 li
81.9653 205.813 mo
81.9653 208.813 li
78.2153 207.313 mo
78.2153 208.813 li
74.4653 207.313 mo
74.4653 208.813 li
70.7153 207.313 mo
70.7153 208.813 li
66.9653 205.813 mo
66.9653 208.813 li
63.2153 207.313 mo
63.2153 208.813 li
59.4653 207.313 mo
59.4653 208.813 li
55.7153 207.313 mo
55.7153 208.813 li
51.9653 205.813 mo
51.9653 208.813 li
@
51.9653 208.813 mo
51.9653 111.313 li
@
56.4653 111.313 mo
51.9653 111.313 li
54.2153 207.563 mo
51.9653 207.563 li
54.2153 204.813 mo
51.9653 204.813 li
56.4653 202.313 mo
51.9653 202.313 li
56.4653 111.313 mo
51.9653 111.313 li
54.2153 113.813 mo
51.9653 113.813 li
54.2153 116.563 mo
51.9653 116.563 li
54.2153 119.063 mo
51.9653 119.063 li
54.2153 121.563 mo
51.9653 121.563 li
56.4653 124.313 mo
51.9653 124.313 li
54.2153 126.813 mo
51.9653 126.813 li
54.2153 129.563 mo
51.9653 129.563 li
54.2153 132.063 mo
51.9653 132.063 li
54.2153 134.563 mo
51.9653 134.563 li
56.4653 137.313 mo
51.9653 137.313 li
54.2153 139.813 mo
51.9653 139.813 li
54.2153 142.563 mo
51.9653 142.563 li
54.2153 145.063 mo
51.9653 145.063 li
54.2153 147.563 mo
51.9653 147.563 li
56.4653 150.313 mo
51.9653 150.313 li
54.2153 152.813 mo
51.9653 152.813 li
54.2153 155.563 mo
51.9653 155.563 li
54.2153 158.063 mo
51.9653 158.063 li
54.2153 160.563 mo
51.9653 160.563 li
56.4653 163.313 mo
51.9653 163.313 li
54.2153 165.813 mo
51.9653 165.813 li
54.2153 168.563 mo
51.9653 168.563 li
54.2153 171.063 mo
51.9653 171.063 li
54.2153 173.563 mo
51.9653 173.563 li
56.4653 176.313 mo
51.9653 176.313 li
54.2153 178.813 mo
51.9653 178.813 li
54.2153 181.563 mo
51.9653 181.563 li
54.2153 184.063 mo
51.9653 184.063 li
54.2153 186.563 mo
51.9653 186.563 li
56.4653 189.313 mo
51.9653 189.313 li
54.2153 191.813 mo
51.9653 191.813 li
54.2153 194.563 mo
51.9653 194.563 li
54.2153 197.063 mo
51.9653 197.063 li
54.2153 199.563 mo
51.9653 199.563 li
56.4653 202.313 mo
51.9653 202.313 li
@
202.285 202.173 mo
202.285 200.517 200.941 199.173 199.285 199.173 cv
197.629 199.173 196.285 200.517 196.285 202.173 cv
196.285 203.829 197.629 205.173 199.285 205.173 cv
200.941 205.173 202.285 203.829 202.285 202.173 cv
1 0 0 rgb
ef
194.365 202.173 mo
194.365 200.517 193.021 199.173 191.365 199.173 cv
189.709 199.173 188.365 200.517 188.365 202.173 cv
188.365 203.829 189.709 205.173 191.365 205.173 cv
193.021 205.173 194.365 203.829 194.365 202.173 cv
ef
186.925 201.213 mo
186.925 199.557 185.582 198.213 183.925 198.213 cv
182.27 198.213 180.925 199.557 180.925 201.213 cv
180.925 202.869 182.27 204.213 183.925 204.213 cv
185.582 204.213 186.925 202.869 186.925 201.213 cv
ef
179.485 200.493 mo
179.485 198.837 178.141 197.493 176.485 197.493 cv
174.829 197.493 173.485 198.837 173.485 200.493 cv
173.485 202.149 174.829 203.493 176.485 203.493 cv
178.141 203.493 179.485 202.149 179.485 200.493 cv
ef
172.045 199.773 mo
172.045 198.117 170.701 196.773 169.045 196.773 cv
167.389 196.773 166.045 198.117 166.045 199.773 cv
166.045 201.429 167.389 202.773 169.045 202.773 cv
170.701 202.773 172.045 201.429 172.045 199.773 cv
ef
164.365 198.333 mo
164.365 196.677 163.021 195.333 161.365 195.333 cv
159.709 195.333 158.365 196.677 158.365 198.333 cv
158.365 199.989 159.709 201.333 161.365 201.333 cv
163.021 201.333 164.365 199.989 164.365 198.333 cv
ef
156.686 196.893 mo
156.686 195.237 155.341 193.893 153.686 193.893 cv
152.029 193.893 150.686 195.237 150.686 196.893 cv
150.686 198.549 152.029 199.893 153.686 199.893 cv
155.341 199.893 156.686 198.549 156.686 196.893 cv
ef
149.245 194.973 mo
149.245 193.317 147.901 191.973 146.245 191.973 cv
144.589 191.973 143.245 193.317 143.245 194.973 cv
143.245 196.629 144.589 197.973 146.245 197.973 cv
147.901 197.973 149.245 196.629 149.245 194.973 cv
ef
141.805 192.093 mo
141.805 190.437 140.461 189.093 138.805 189.093 cv
137.149 189.093 135.805 190.437 135.805 192.093 cv
135.805 193.749 137.149 195.093 138.805 195.093 cv
140.461 195.093 141.805 193.749 141.805 192.093 cv
ef
134.125 188.973 mo
134.125 187.317 132.781 185.973 131.125 185.973 cv
129.469 185.973 128.125 187.317 128.125 188.973 cv
128.125 190.629 129.469 191.973 131.125 191.973 cv
132.781 191.973 134.125 190.629 134.125 188.973 cv
ef
126.445 186.093 mo
126.445 184.437 125.102 183.093 123.445 183.093 cv
121.79 183.093 120.445 184.437 120.445 186.093 cv
120.445 187.749 121.79 189.093 123.445 189.093 cv
125.102 189.093 126.445 187.749 126.445 186.093 cv
ef
119.005 181.293 mo
119.005 179.637 117.661 178.293 116.005 178.293 cv
114.349 178.293 113.005 179.637 113.005 181.293 cv
113.005 182.949 114.349 184.293 116.005 184.293 cv
117.661 184.293 119.005 182.949 119.005 181.293 cv
ef
111.565 176.013 mo
111.565 174.357 110.221 173.013 108.565 173.013 cv
106.909 173.013 105.565 174.357 105.565 176.013 cv
105.565 177.669 106.909 179.013 108.565 179.013 cv
110.221 179.013 111.565 177.669 111.565 176.013 cv
ef
103.885 170.493 mo
103.885 168.837 102.542 167.493 100.885 167.493 cv
99.2295 167.493 97.8853 168.837 97.8853 170.493 cv
97.8853 172.149 99.2295 173.493 100.885 173.493 cv
102.542 173.493 103.885 172.149 103.885 170.493 cv
ef
96.4453 164.253 mo
96.4453 162.597 95.1016 161.253 93.4453 161.253 cv
91.7896 161.253 90.4453 162.597 90.4453 164.253 cv
90.4453 165.909 91.7896 167.253 93.4453 167.253 cv
95.1016 167.253 96.4453 165.909 96.4453 164.253 cv
ef
88.7651 157.773 mo
88.7651 156.117 87.4214 154.773 85.7651 154.773 cv
84.1094 154.773 82.7651 156.117 82.7651 157.773 cv
82.7651 159.429 84.1094 160.773 85.7651 160.773 cv
87.4214 160.773 88.7651 159.429 88.7651 157.773 cv
ef
81.3252 150.333 mo
81.3252 148.677 79.9814 147.333 78.3252 147.333 cv
76.6694 147.333 75.3252 148.677 75.3252 150.333 cv
75.3252 151.989 76.6694 153.333 78.3252 153.333 cv
79.9814 153.333 81.3252 151.989 81.3252 150.333 cv
ef
73.6455 144.093 mo
73.6455 142.437 72.3013 141.093 70.6455 141.093 cv
68.9893 141.093 67.6455 142.437 67.6455 144.093 cv
67.6455 145.749 68.9893 147.093 70.6455 147.093 cv
72.3013 147.093 73.6455 145.749 73.6455 144.093 cv
ef
66.2056 139.533 mo
66.2056 137.877 64.8613 136.533 63.2056 136.533 cv
61.5493 136.533 60.2056 137.877 60.2056 139.533 cv
60.2056 141.189 61.5493 142.533 63.2056 142.533 cv
64.8613 142.533 66.2056 141.189 66.2056 139.533 cv
ef
58.7651 128.973 mo
58.7651 127.317 57.4214 125.973 55.7651 125.973 cv
54.1094 125.973 52.7651 127.317 52.7651 128.973 cv
52.7651 130.629 54.1094 131.973 55.7651 131.973 cv
57.4214 131.973 58.7651 130.629 58.7651 128.973 cv
ef
200.715 202.063 mo
202.215 202.063 li
@
51.9653 202.313 mo
202.965 202.313 li
0 0 0 rgb
@
199.215 200.063 mo
196.965 200.063 li
196.965 204.563 li
201.465 204.563 li
201.465 200.063 li
199.215 200.063 li
cp
0 0 1 rgb
ef
191.465 200.063 mo
189.215 200.063 li
189.215 204.563 li
193.715 204.563 li
193.715 200.063 li
191.465 200.063 li
cp
ef
183.965 200.063 mo
181.715 200.063 li
181.715 204.563 li
186.215 204.563 li
186.215 200.063 li
183.965 200.063 li
cp
ef
176.465 200.063 mo
174.215 200.063 li
174.215 204.563 li
178.715 204.563 li
178.715 200.063 li
176.465 200.063 li
cp
ef
168.965 200.313 mo
166.715 200.313 li
166.715 204.813 li
171.215 204.813 li
171.215 200.313 li
168.965 200.313 li
cp
ef
161.465 200.313 mo
159.215 200.313 li
159.215 204.813 li
163.715 204.813 li
163.715 200.313 li
161.465 200.313 li
cp
ef
153.715 199.813 mo
151.465 199.813 li
151.465 204.313 li
155.965 204.313 li
155.965 199.813 li
153.715 199.813 li
cp
ef
146.215 200.063 mo
143.965 200.063 li
143.965 204.563 li
148.465 204.563 li
148.465 200.063 li
146.215 200.063 li
cp
ef
138.715 200.063 mo
136.465 200.063 li
136.465 204.563 li
140.965 204.563 li
140.965 200.063 li
138.715 200.063 li
cp
ef
131.215 200.063 mo
128.965 200.063 li
128.965 204.563 li
133.465 204.563 li
133.465 200.063 li
131.215 200.063 li
cp
ef
123.465 200.063 mo
121.215 200.063 li
121.215 204.563 li
125.715 204.563 li
125.715 200.063 li
123.465 200.063 li
cp
ef
115.965 199.813 mo
113.715 199.813 li
113.715 204.313 li
118.215 204.313 li
118.215 199.813 li
115.965 199.813 li
cp
ef
108.465 200.063 mo
106.215 200.063 li
106.215 204.563 li
110.715 204.563 li
110.715 200.063 li
108.465 200.063 li
cp
ef
100.965 199.813 mo
98.7153 199.813 li
98.7153 204.313 li
103.215 204.313 li
103.215 199.813 li
100.965 199.813 li
cp
ef
93.4653 200.313 mo
91.2153 200.313 li
91.2153 204.813 li
95.7153 204.813 li
95.7153 200.313 li
93.4653 200.313 li
cp
ef
85.7153 200.313 mo
83.4653 200.313 li
83.4653 204.813 li
87.9653 204.813 li
87.9653 200.313 li
85.7153 200.313 li
cp
ef
78.2153 199.563 mo
75.9653 199.563 li
75.9653 204.063 li
80.4653 204.063 li
80.4653 199.563 li
78.2153 199.563 li
cp
ef
70.7153 200.313 mo
68.4653 200.313 li
68.4653 204.813 li
72.9653 204.813 li
72.9653 200.313 li
70.7153 200.313 li
cp
ef
63.2153 200.313 mo
60.9653 200.313 li
60.9653 204.813 li
65.4653 204.813 li
65.4653 200.313 li
63.2153 200.313 li
cp
ef
55.7153 199.813 mo
53.4653 199.813 li
53.4653 204.313 li
57.9653 204.313 li
57.9653 199.813 li
55.7153 199.813 li
cp
ef
58.7651 156.333 mo
58.7651 154.677 57.4214 153.333 55.7651 153.333 cv
54.1094 153.333 52.7651 154.677 52.7651 156.333 cv
52.7651 157.989 54.1094 159.333 55.7651 159.333 cv
57.4214 159.333 58.7651 157.989 58.7651 156.333 cv
66.2056 158.493 mo
66.2056 156.837 64.8613 155.493 63.2056 155.493 cv
61.5493 155.493 60.2056 156.837 60.2056 158.493 cv
60.2056 160.149 61.5493 161.493 63.2056 161.493 cv
64.8613 161.493 66.2056 160.149 66.2056 158.493 cv
73.6455 161.373 mo
73.6455 159.717 72.3013 158.373 70.6455 158.373 cv
68.9893 158.373 67.6455 159.717 67.6455 161.373 cv
67.6455 163.029 68.9893 164.373 70.6455 164.373 cv
72.3013 164.373 73.6455 163.029 73.6455 161.373 cv
81.3252 163.293 mo
81.3252 161.637 79.9814 160.293 78.3252 160.293 cv
76.6694 160.293 75.3252 161.637 75.3252 163.293 cv
75.3252 164.949 76.6694 166.293 78.3252 166.293 cv
79.9814 166.293 81.3252 164.949 81.3252 163.293 cv
88.7651 165.813 mo
88.7651 164.157 87.4214 162.813 85.7651 162.813 cv
84.1094 162.813 82.7651 164.157 82.7651 165.813 cv
82.7651 167.469 84.1094 168.813 85.7651 168.813 cv
87.4214 168.813 88.7651 167.469 88.7651 165.813 cv
96.4453 168.573 mo
96.4453 166.917 95.1016 165.573 93.4453 165.573 cv
91.7896 165.573 90.4453 166.917 90.4453 168.573 cv
90.4453 170.229 91.7896 171.573 93.4453 171.573 cv
95.1016 171.573 96.4453 170.229 96.4453 168.573 cv
103.885 170.253 mo
103.885 168.597 102.542 167.253 100.885 167.253 cv
99.2295 167.253 97.8853 168.597 97.8853 170.253 cv
97.8853 171.909 99.2295 173.253 100.885 173.253 cv
102.542 173.253 103.885 171.909 103.885 170.253 cv
111.565 173.133 mo
111.565 171.477 110.221 170.133 108.565 170.133 cv
106.909 170.133 105.565 171.477 105.565 173.133 cv
105.565 174.789 106.909 176.133 108.565 176.133 cv
110.221 176.133 111.565 174.789 111.565 173.133 cv
119.005 175.293 mo
119.005 173.637 117.661 172.293 116.005 172.293 cv
114.349 172.293 113.005 173.637 113.005 175.293 cv
113.005 176.949 114.349 178.293 116.005 178.293 cv
117.661 178.293 119.005 176.949 119.005 175.293 cv
126.445 177.213 mo
126.445 175.557 125.102 174.213 123.445 174.213 cv
121.79 174.213 120.445 175.557 120.445 177.213 cv
120.445 178.869 121.79 180.213 123.445 180.213 cv
125.102 180.213 126.445 178.869 126.445 177.213 cv
134.125 180.093 mo
134.125 178.437 132.781 177.093 131.125 177.093 cv
129.469 177.093 128.125 178.437 128.125 180.093 cv
128.125 181.749 129.469 183.093 131.125 183.093 cv
132.781 183.093 134.125 181.749 134.125 180.093 cv
141.805 182.253 mo
141.805 180.597 140.461 179.253 138.805 179.253 cv
137.149 179.253 135.805 180.597 135.805 182.253 cv
135.805 183.909 137.149 185.253 138.805 185.253 cv
140.461 185.253 141.805 183.909 141.805 182.253 cv
149.245 184.893 mo
149.245 183.237 147.901 181.893 146.245 181.893 cv
144.589 181.893 143.245 183.237 143.245 184.893 cv
143.245 186.549 144.589 187.893 146.245 187.893 cv
147.901 187.893 149.245 186.549 149.245 184.893 cv
156.686 187.053 mo
156.686 185.397 155.341 184.053 153.686 184.053 cv
152.029 184.053 150.686 185.397 150.686 187.053 cv
150.686 188.709 152.029 190.053 153.686 190.053 cv
155.341 190.053 156.686 188.709 156.686 187.053 cv
164.365 189.213 mo
164.365 187.557 163.021 186.213 161.365 186.213 cv
159.709 186.213 158.365 187.557 158.365 189.213 cv
158.365 190.869 159.709 192.213 161.365 192.213 cv
163.021 192.213 164.365 190.869 164.365 189.213 cv
172.045 191.853 mo
172.045 190.197 170.701 188.853 169.045 188.853 cv
167.389 188.853 166.045 190.197 166.045 191.853 cv
166.045 193.509 167.389 194.853 169.045 194.853 cv
170.701 194.853 172.045 193.509 172.045 191.853 cv
179.485 194.253 mo
179.485 192.597 178.141 191.253 176.485 191.253 cv
174.829 191.253 173.485 192.597 173.485 194.253 cv
173.485 195.909 174.829 197.253 176.485 197.253 cv
178.141 197.253 179.485 195.909 179.485 194.253 cv
186.925 196.653 mo
186.925 194.997 185.582 193.653 183.925 193.653 cv
182.27 193.653 180.925 194.997 180.925 196.653 cv
180.925 198.309 182.27 199.653 183.925 199.653 cv
185.582 199.653 186.925 198.309 186.925 196.653 cv
194.365 198.813 mo
194.365 197.157 193.021 195.813 191.365 195.813 cv
189.709 195.813 188.365 197.157 188.365 198.813 cv
188.365 200.469 189.709 201.813 191.365 201.813 cv
193.021 201.813 194.365 200.469 194.365 198.813 cv
202.285 201.213 mo
202.285 199.557 200.941 198.213 199.285 198.213 cv
197.629 198.213 196.285 199.557 196.285 201.213 cv
196.285 202.869 197.629 204.213 199.285 204.213 cv
200.941 204.213 202.285 202.869 202.285 201.213 cv
0 .4 0 rgb
@
202.285 202.173 mo
202.285 200.517 200.941 199.173 199.285 199.173 cv
197.629 199.173 196.285 200.517 196.285 202.173 cv
196.285 203.829 197.629 205.173 199.285 205.173 cv
200.941 205.173 202.285 203.829 202.285 202.173 cv
1 0 0 rgb
ef
194.365 202.173 mo
194.365 200.517 193.021 199.173 191.365 199.173 cv
189.709 199.173 188.365 200.517 188.365 202.173 cv
188.365 203.829 189.709 205.173 191.365 205.173 cv
193.021 205.173 194.365 203.829 194.365 202.173 cv
ef
186.925 201.213 mo
186.925 199.557 185.582 198.213 183.925 198.213 cv
182.27 198.213 180.925 199.557 180.925 201.213 cv
180.925 202.869 182.27 204.213 183.925 204.213 cv
185.582 204.213 186.925 202.869 186.925 201.213 cv
ef
179.485 200.493 mo
179.485 198.837 178.141 197.493 176.485 197.493 cv
174.829 197.493 173.485 198.837 173.485 200.493 cv
173.485 202.149 174.829 203.493 176.485 203.493 cv
178.141 203.493 179.485 202.149 179.485 200.493 cv
ef
172.045 199.773 mo
172.045 198.117 170.701 196.773 169.045 196.773 cv
167.389 196.773 166.045 198.117 166.045 199.773 cv
166.045 201.429 167.389 202.773 169.045 202.773 cv
170.701 202.773 172.045 201.429 172.045 199.773 cv
ef
164.365 198.333 mo
164.365 196.677 163.021 195.333 161.365 195.333 cv
159.709 195.333 158.365 196.677 158.365 198.333 cv
158.365 199.989 159.709 201.333 161.365 201.333 cv
163.021 201.333 164.365 199.989 164.365 198.333 cv
ef
156.686 196.893 mo
156.686 195.237 155.341 193.893 153.686 193.893 cv
152.029 193.893 150.686 195.237 150.686 196.893 cv
150.686 198.549 152.029 199.893 153.686 199.893 cv
155.341 199.893 156.686 198.549 156.686 196.893 cv
ef
149.245 194.973 mo
149.245 193.317 147.901 191.973 146.245 191.973 cv
144.589 191.973 143.245 193.317 143.245 194.973 cv
143.245 196.629 144.589 197.973 146.245 197.973 cv
147.901 197.973 149.245 196.629 149.245 194.973 cv
ef
141.805 192.093 mo
141.805 190.437 140.461 189.093 138.805 189.093 cv
137.149 189.093 135.805 190.437 135.805 192.093 cv
135.805 193.749 137.149 195.093 138.805 195.093 cv
140.461 195.093 141.805 193.749 141.805 192.093 cv
ef
134.125 188.973 mo
134.125 187.317 132.781 185.973 131.125 185.973 cv
129.469 185.973 128.125 187.317 128.125 188.973 cv
128.125 190.629 129.469 191.973 131.125 191.973 cv
132.781 191.973 134.125 190.629 134.125 188.973 cv
ef
126.445 186.093 mo
126.445 184.437 125.102 183.093 123.445 183.093 cv
121.79 183.093 120.445 184.437 120.445 186.093 cv
120.445 187.749 121.79 189.093 123.445 189.093 cv
125.102 189.093 126.445 187.749 126.445 186.093 cv
ef
119.005 181.293 mo
119.005 179.637 117.661 178.293 116.005 178.293 cv
114.349 178.293 113.005 179.637 113.005 181.293 cv
113.005 182.949 114.349 184.293 116.005 184.293 cv
117.661 184.293 119.005 182.949 119.005 181.293 cv
ef
111.565 176.013 mo
111.565 174.357 110.221 173.013 108.565 173.013 cv
106.909 173.013 105.565 174.357 105.565 176.013 cv
105.565 177.669 106.909 179.013 108.565 179.013 cv
110.221 179.013 111.565 177.669 111.565 176.013 cv
ef
103.885 170.493 mo
103.885 168.837 102.542 167.493 100.885 167.493 cv
99.2295 167.493 97.8853 168.837 97.8853 170.493 cv
97.8853 172.149 99.2295 173.493 100.885 173.493 cv
102.542 173.493 103.885 172.149 103.885 170.493 cv
ef
96.4453 164.253 mo
96.4453 162.597 95.1016 161.253 93.4453 161.253 cv
91.7896 161.253 90.4453 162.597 90.4453 164.253 cv
90.4453 165.909 91.7896 167.253 93.4453 167.253 cv
95.1016 167.253 96.4453 165.909 96.4453 164.253 cv
ef
88.7651 157.773 mo
88.7651 156.117 87.4214 154.773 85.7651 154.773 cv
84.1094 154.773 82.7651 156.117 82.7651 157.773 cv
82.7651 159.429 84.1094 160.773 85.7651 160.773 cv
87.4214 160.773 88.7651 159.429 88.7651 157.773 cv
ef
81.3252 150.333 mo
81.3252 148.677 79.9814 147.333 78.3252 147.333 cv
76.6694 147.333 75.3252 148.677 75.3252 150.333 cv
75.3252 151.989 76.6694 153.333 78.3252 153.333 cv
79.9814 153.333 81.3252 151.989 81.3252 150.333 cv
ef
73.6455 144.093 mo
73.6455 142.437 72.3013 141.093 70.6455 141.093 cv
68.9893 141.093 67.6455 142.437 67.6455 144.093 cv
67.6455 145.749 68.9893 147.093 70.6455 147.093 cv
72.3013 147.093 73.6455 145.749 73.6455 144.093 cv
ef
66.2056 139.533 mo
66.2056 137.877 64.8613 136.533 63.2056 136.533 cv
61.5493 136.533 60.2056 137.877 60.2056 139.533 cv
60.2056 141.189 61.5493 142.533 63.2056 142.533 cv
64.8613 142.533 66.2056 141.189 66.2056 139.533 cv
ef
58.7651 128.973 mo
58.7651 127.317 57.4214 125.973 55.7651 125.973 cv
54.1094 125.973 52.7651 127.317 52.7651 128.973 cv
52.7651 130.629 54.1094 131.973 55.7651 131.973 cv
57.4214 131.973 58.7651 130.629 58.7651 128.973 cv
ef
200.715 202.063 mo
202.215 202.063 li
@
202.34 208.75 mo
353.34 208.75 li
202.34 208.75 mo
202.34 111.25 li
353.34 111.25 li
353.34 208.75 li
202.34 208.75 li
cp
0 0 0 rgb
@
353.34 205.75 mo
353.34 208.75 li
349.59 207.25 mo
349.59 208.75 li
345.84 207.25 mo
345.84 208.75 li
341.84 207.25 mo
341.84 208.75 li
338.09 205.75 mo
338.09 208.75 li
334.34 207.25 mo
334.34 208.75 li
330.59 207.25 mo
330.59 208.75 li
326.84 207.25 mo
326.84 208.75 li
323.09 205.75 mo
323.09 208.75 li
319.34 207.25 mo
319.34 208.75 li
315.59 207.25 mo
315.59 208.75 li
311.84 207.25 mo
311.84 208.75 li
308.09 205.75 mo
308.09 208.75 li
304.09 207.25 mo
304.09 208.75 li
300.34 207.25 mo
300.34 208.75 li
296.59 207.25 mo
296.59 208.75 li
292.84 205.75 mo
292.84 208.75 li
289.09 207.25 mo
289.09 208.75 li
285.34 207.25 mo
285.34 208.75 li
281.59 207.25 mo
281.59 208.75 li
277.84 205.75 mo
277.84 208.75 li
274.09 207.25 mo
274.09 208.75 li
270.34 207.25 mo
270.34 208.75 li
266.34 207.25 mo
266.34 208.75 li
262.59 205.75 mo
262.59 208.75 li
258.84 207.25 mo
258.84 208.75 li
255.09 207.25 mo
255.09 208.75 li
251.34 207.25 mo
251.34 208.75 li
247.59 205.75 mo
247.59 208.75 li
243.84 207.25 mo
243.84 208.75 li
240.09 207.25 mo
240.09 208.75 li
236.34 207.25 mo
236.34 208.75 li
232.34 205.75 mo
232.34 208.75 li
228.59 207.25 mo
228.59 208.75 li
224.84 207.25 mo
224.84 208.75 li
221.09 207.25 mo
221.09 208.75 li
217.34 205.75 mo
217.34 208.75 li
213.59 207.25 mo
213.59 208.75 li
209.84 207.25 mo
209.84 208.75 li
206.09 207.25 mo
206.09 208.75 li
202.34 205.75 mo
202.34 208.75 li
@
202.34 208.75 mo
202.34 111.25 li
@
206.84 111.25 mo
202.34 111.25 li
204.59 207.5 mo
202.34 207.5 li
204.59 204.75 mo
202.34 204.75 li
206.84 202.25 mo
202.34 202.25 li
206.84 111.25 mo
202.34 111.25 li
204.59 113.75 mo
202.34 113.75 li
204.59 116.5 mo
202.34 116.5 li
204.59 119 mo
202.34 119 li
204.59 121.5 mo
202.34 121.5 li
206.84 124.25 mo
202.34 124.25 li
204.59 126.75 mo
202.34 126.75 li
204.59 129.5 mo
202.34 129.5 li
204.59 132 mo
202.34 132 li
204.59 134.5 mo
202.34 134.5 li
206.84 137.25 mo
202.34 137.25 li
204.59 139.75 mo
202.34 139.75 li
204.59 142.5 mo
202.34 142.5 li
204.59 145 mo
202.34 145 li
204.59 147.5 mo
202.34 147.5 li
206.84 150.25 mo
202.34 150.25 li
204.59 152.75 mo
202.34 152.75 li
204.59 155.5 mo
202.34 155.5 li
204.59 158 mo
202.34 158 li
204.59 160.5 mo
202.34 160.5 li
206.84 163.25 mo
202.34 163.25 li
204.59 165.75 mo
202.34 165.75 li
204.59 168.5 mo
202.34 168.5 li
204.59 171 mo
202.34 171 li
204.59 173.5 mo
202.34 173.5 li
206.84 176.25 mo
202.34 176.25 li
204.59 178.75 mo
202.34 178.75 li
204.59 181.5 mo
202.34 181.5 li
204.59 184 mo
202.34 184 li
204.59 186.5 mo
202.34 186.5 li
206.84 189.25 mo
202.34 189.25 li
204.59 191.75 mo
202.34 191.75 li
204.59 194.5 mo
202.34 194.5 li
204.59 197 mo
202.34 197 li
204.59 199.5 mo
202.34 199.5 li
206.84 202.25 mo
202.34 202.25 li
@
352.55 202.11 mo
352.55 200.454 351.207 199.11 349.55 199.11 cv
347.894 199.11 346.55 200.454 346.55 202.11 cv
346.55 203.765 347.894 205.11 349.55 205.11 cv
351.207 205.11 352.55 203.765 352.55 202.11 cv
1 0 0 rgb
ef
344.871 201.75 mo
344.871 200.093 343.526 198.75 341.871 198.75 cv
340.214 198.75 338.871 200.093 338.871 201.75 cv
338.871 203.406 340.214 204.75 341.871 204.75 cv
343.526 204.75 344.871 203.406 344.871 201.75 cv
ef
337.43 201.15 mo
337.43 199.494 336.086 198.15 334.43 198.15 cv
332.774 198.15 331.43 199.494 331.43 201.15 cv
331.43 202.805 332.774 204.15 334.43 204.15 cv
336.086 204.15 337.43 202.805 337.43 201.15 cv
ef
329.75 200.19 mo
329.75 198.534 328.407 197.19 326.75 197.19 cv
325.094 197.19 323.75 198.534 323.75 200.19 cv
323.75 201.845 325.094 203.19 326.75 203.19 cv
328.407 203.19 329.75 201.845 329.75 200.19 cv
ef
322.31 199.23 mo
322.31 197.574 320.966 196.23 319.31 196.23 cv
317.655 196.23 316.31 197.574 316.31 199.23 cv
316.31 200.885 317.655 202.23 319.31 202.23 cv
320.966 202.23 322.31 200.885 322.31 199.23 cv
ef
314.871 198.269 mo
314.871 196.614 313.526 195.269 311.871 195.269 cv
310.214 195.269 308.871 196.614 308.871 198.269 cv
308.871 199.925 310.214 201.269 311.871 201.269 cv
313.526 201.269 314.871 199.925 314.871 198.269 cv
ef
307.19 196.589 mo
307.19 194.933 305.846 193.589 304.19 193.589 cv
302.535 193.589 301.19 194.933 301.19 196.589 cv
301.19 198.246 302.535 199.589 304.19 199.589 cv
305.846 199.589 307.19 198.246 307.19 196.589 cv
ef
299.51 194.19 mo
299.51 192.534 298.167 191.19 296.51 191.19 cv
294.854 191.19 293.51 192.534 293.51 194.19 cv
293.51 195.845 294.854 197.19 296.51 197.19 cv
298.167 197.19 299.51 195.845 299.51 194.19 cv
ef
292.071 191.79 mo
292.071 190.133 290.726 188.79 289.071 188.79 cv
287.415 188.79 286.071 190.133 286.071 191.79 cv
286.071 193.446 287.415 194.79 289.071 194.79 cv
290.726 194.79 292.071 193.446 292.071 191.79 cv
ef
284.63 188.669 mo
284.63 187.013 283.287 185.669 281.63 185.669 cv
279.974 185.669 278.63 187.013 278.63 188.669 cv
278.63 190.326 279.974 191.669 281.63 191.669 cv
283.287 191.669 284.63 190.326 284.63 188.669 cv
ef
277.19 184.83 mo
277.19 183.173 275.846 181.83 274.19 181.83 cv
272.534 181.83 271.19 183.173 271.19 184.83 cv
271.19 186.486 272.534 187.83 274.19 187.83 cv
275.846 187.83 277.19 186.486 277.19 184.83 cv
ef
269.271 180.509 mo
269.271 178.853 267.926 177.509 266.271 177.509 cv
264.614 177.509 263.271 178.853 263.271 180.509 cv
263.271 182.166 264.614 183.509 266.271 183.509 cv
267.926 183.509 269.271 182.166 269.271 180.509 cv
ef
261.831 175.95 mo
261.831 174.293 260.486 172.95 258.831 172.95 cv
257.174 172.95 255.831 174.293 255.831 175.95 cv
255.831 177.606 257.174 178.95 258.831 178.95 cv
260.486 178.95 261.831 177.606 261.831 175.95 cv
ef
254.39 169.709 mo
254.39 168.053 253.046 166.709 251.39 166.709 cv
249.734 166.709 248.39 168.053 248.39 169.709 cv
248.39 171.366 249.734 172.709 251.39 172.709 cv
253.046 172.709 254.39 171.366 254.39 169.709 cv
ef
246.95 164.19 mo
246.95 162.534 245.606 161.19 243.95 161.19 cv
242.294 161.19 240.95 162.534 240.95 164.19 cv
240.95 165.845 242.294 167.19 243.95 167.19 cv
245.606 167.19 246.95 165.845 246.95 164.19 cv
ef
239.271 157.95 mo
239.271 156.293 237.926 154.95 236.271 154.95 cv
234.614 154.95 233.271 156.293 233.271 157.95 cv
233.271 159.605 234.614 160.95 236.271 160.95 cv
237.926 160.95 239.271 159.605 239.271 157.95 cv
ef
231.59 151.469 mo
231.59 149.813 230.247 148.469 228.59 148.469 cv
226.934 148.469 225.59 149.813 225.59 151.469 cv
225.59 153.125 226.934 154.469 228.59 154.469 cv
230.247 154.469 231.59 153.125 231.59 151.469 cv
ef
224.15 145.469 mo
224.15 143.813 222.806 142.469 221.15 142.469 cv
219.494 142.469 218.15 143.813 218.15 145.469 cv
218.15 147.125 219.494 148.469 221.15 148.469 cv
222.806 148.469 224.15 147.125 224.15 145.469 cv
ef
216.47 142.35 mo
216.47 140.693 215.126 139.35 213.47 139.35 cv
211.814 139.35 210.47 140.693 210.47 142.35 cv
210.47 144.005 211.814 145.35 213.47 145.35 cv
215.126 145.35 216.47 144.005 216.47 142.35 cv
ef
209.03 134.91 mo
209.03 133.253 207.687 131.91 206.03 131.91 cv
204.375 131.91 203.03 133.253 203.03 134.91 cv
203.03 136.565 204.375 137.91 206.03 137.91 cv
207.687 137.91 209.03 136.565 209.03 134.91 cv
ef
351.09 202 mo
352.59 202 li
@
202.34 202.25 mo
353.34 202.25 li
0 0 0 rgb
@
349.59 200 mo
347.34 200 li
347.34 204.5 li
351.84 204.5 li
351.84 200 li
349.59 200 li
cp
0 0 1 rgb
ef
341.84 200 mo
339.59 200 li
339.59 204.5 li
344.09 204.5 li
344.09 200 li
341.84 200 li
cp
ef
334.34 200 mo
332.09 200 li
332.09 204.5 li
336.59 204.5 li
336.59 200 li
334.34 200 li
cp
ef
326.84 200 mo
324.59 200 li
324.59 204.5 li
329.09 204.5 li
329.09 200 li
326.84 200 li
cp
ef
319.34 200 mo
317.09 200 li
317.09 204.5 li
321.59 204.5 li
321.59 200 li
319.34 200 li
cp
ef
311.84 199.75 mo
309.59 199.75 li
309.59 204.25 li
314.09 204.25 li
314.09 199.75 li
311.84 199.75 li
cp
ef
304.09 200 mo
301.84 200 li
301.84 204.5 li
306.34 204.5 li
306.34 200 li
304.09 200 li
cp
ef
296.59 199.75 mo
294.34 199.75 li
294.34 204.25 li
298.84 204.25 li
298.84 199.75 li
296.59 199.75 li
cp
ef
289.09 200.25 mo
286.84 200.25 li
286.84 204.75 li
291.34 204.75 li
291.34 200.25 li
289.09 200.25 li
cp
ef
281.59 199.75 mo
279.34 199.75 li
279.34 204.25 li
283.84 204.25 li
283.84 199.75 li
281.59 199.75 li
cp
ef
274.09 200 mo
271.84 200 li
271.84 204.5 li
276.34 204.5 li
276.34 200 li
274.09 200 li
cp
ef
266.34 200 mo
264.09 200 li
264.09 204.5 li
268.59 204.5 li
268.59 200 li
266.34 200 li
cp
ef
258.84 200 mo
256.59 200 li
256.59 204.5 li
261.09 204.5 li
261.09 200 li
258.84 200 li
cp
ef
251.34 200 mo
249.09 200 li
249.09 204.5 li
253.59 204.5 li
253.59 200 li
251.34 200 li
cp
ef
243.84 200 mo
241.59 200 li
241.59 204.5 li
246.09 204.5 li
246.09 200 li
243.84 200 li
cp
ef
236.34 199.75 mo
234.09 199.75 li
234.09 204.25 li
238.59 204.25 li
238.59 199.75 li
236.34 199.75 li
cp
ef
228.59 199.5 mo
226.34 199.5 li
226.34 204 li
230.84 204 li
230.84 199.5 li
228.59 199.5 li
cp
ef
221.09 200 mo
218.84 200 li
218.84 204.5 li
223.34 204.5 li
223.34 200 li
221.09 200 li
cp
ef
213.59 200 mo
211.34 200 li
211.34 204.5 li
215.84 204.5 li
215.84 200 li
213.59 200 li
cp
ef
206.09 200.25 mo
203.84 200.25 li
203.84 204.75 li
208.34 204.75 li
208.34 200.25 li
206.09 200.25 li
cp
ef
209.03 156.75 mo
209.03 155.093 207.687 153.75 206.03 153.75 cv
204.375 153.75 203.03 155.093 203.03 156.75 cv
203.03 158.406 204.375 159.75 206.03 159.75 cv
207.687 159.75 209.03 158.406 209.03 156.75 cv
216.47 158.91 mo
216.47 157.253 215.126 155.91 213.47 155.91 cv
211.814 155.91 210.47 157.253 210.47 158.91 cv
210.47 160.566 211.814 161.91 213.47 161.91 cv
215.126 161.91 216.47 160.566 216.47 158.91 cv
224.15 162.269 mo
224.15 160.614 222.806 159.27 221.15 159.27 cv
219.494 159.27 218.15 160.614 218.15 162.269 cv
218.15 163.925 219.494 165.269 221.15 165.269 cv
222.806 165.269 224.15 163.925 224.15 162.269 cv
231.59 163.469 mo
231.59 161.814 230.247 160.469 228.59 160.469 cv
226.934 160.469 225.59 161.814 225.59 163.469 cv
225.59 165.125 226.934 166.469 228.59 166.469 cv
230.247 166.469 231.59 165.125 231.59 163.469 cv
239.271 166.349 mo
239.271 164.694 237.926 163.349 236.271 163.349 cv
234.614 163.349 233.271 164.694 233.271 166.349 cv
233.271 168.005 234.614 169.349 236.271 169.349 cv
237.926 169.349 239.271 168.005 239.271 166.349 cv
246.95 168.509 mo
246.95 166.853 245.606 165.509 243.95 165.509 cv
242.294 165.509 240.95 166.853 240.95 168.509 cv
240.95 170.166 242.294 171.509 243.95 171.509 cv
245.606 171.509 246.95 170.166 246.95 168.509 cv
254.39 171.15 mo
254.39 169.494 253.046 168.15 251.39 168.15 cv
249.734 168.15 248.39 169.494 248.39 171.15 cv
248.39 172.805 249.734 174.15 251.39 174.15 cv
253.046 174.15 254.39 172.805 254.39 171.15 cv
261.831 173.309 mo
261.831 171.654 260.486 170.309 258.831 170.309 cv
257.174 170.309 255.831 171.654 255.831 173.309 cv
255.831 174.965 257.174 176.309 258.831 176.309 cv
260.486 176.309 261.831 174.965 261.831 173.309 cv
269.271 175.469 mo
269.271 173.814 267.926 172.469 266.271 172.469 cv
264.614 172.469 263.271 173.814 263.271 175.469 cv
263.271 177.125 264.614 178.469 266.271 178.469 cv
267.926 178.469 269.271 177.125 269.271 175.469 cv
277.19 177.389 mo
277.19 175.734 275.846 174.389 274.19 174.389 cv
272.534 174.389 271.19 175.734 271.19 177.389 cv
271.19 179.045 272.534 180.389 274.19 180.389 cv
275.846 180.389 277.19 179.045 277.19 177.389 cv
284.63 180.269 mo
284.63 178.614 283.287 177.269 281.63 177.269 cv
279.974 177.269 278.63 178.614 278.63 180.269 cv
278.63 181.925 279.974 183.269 281.63 183.269 cv
283.287 183.269 284.63 181.925 284.63 180.269 cv
292.071 182.669 mo
292.071 181.013 290.726 179.669 289.071 179.669 cv
287.415 179.669 286.071 181.013 286.071 182.669 cv
286.071 184.326 287.415 185.669 289.071 185.669 cv
290.726 185.669 292.071 184.326 292.071 182.669 cv
299.51 185.309 mo
299.51 183.654 298.167 182.309 296.51 182.309 cv
294.854 182.309 293.51 183.654 293.51 185.309 cv
293.51 186.965 294.854 188.309 296.51 188.309 cv
298.167 188.309 299.51 186.965 299.51 185.309 cv
307.19 186.99 mo
307.19 185.333 305.846 183.99 304.19 183.99 cv
302.535 183.99 301.19 185.333 301.19 186.99 cv
301.19 188.646 302.535 189.99 304.19 189.99 cv
305.846 189.99 307.19 188.646 307.19 186.99 cv
314.871 189.389 mo
314.871 187.734 313.526 186.389 311.871 186.389 cv
310.214 186.389 308.871 187.734 308.871 189.389 cv
308.871 191.045 310.214 192.389 311.871 192.389 cv
313.526 192.389 314.871 191.045 314.871 189.389 cv
322.31 192.03 mo
322.31 190.374 320.966 189.03 319.31 189.03 cv
317.655 189.03 316.31 190.374 316.31 192.03 cv
316.31 193.685 317.655 195.03 319.31 195.03 cv
320.966 195.03 322.31 193.685 322.31 192.03 cv
329.75 194.19 mo
329.75 192.534 328.407 191.19 326.75 191.19 cv
325.094 191.19 323.75 192.534 323.75 194.19 cv
323.75 195.845 325.094 197.19 326.75 197.19 cv
328.407 197.19 329.75 195.845 329.75 194.19 cv
337.43 196.589 mo
337.43 194.933 336.086 193.589 334.43 193.589 cv
332.774 193.589 331.43 194.933 331.43 196.589 cv
331.43 198.246 332.774 199.589 334.43 199.589 cv
336.086 199.589 337.43 198.246 337.43 196.589 cv
344.871 199.23 mo
344.871 197.574 343.526 196.23 341.871 196.23 cv
340.214 196.23 338.871 197.574 338.871 199.23 cv
338.871 200.885 340.214 202.23 341.871 202.23 cv
343.526 202.23 344.871 200.885 344.871 199.23 cv
352.55 201.15 mo
352.55 199.494 351.207 198.15 349.55 198.15 cv
347.894 198.15 346.55 199.494 346.55 201.15 cv
346.55 202.805 347.894 204.15 349.55 204.15 cv
351.207 204.15 352.55 202.805 352.55 201.15 cv
0 .4 0 rgb
@
352.55 202.11 mo
352.55 200.454 351.207 199.11 349.55 199.11 cv
347.894 199.11 346.55 200.454 346.55 202.11 cv
346.55 203.765 347.894 205.11 349.55 205.11 cv
351.207 205.11 352.55 203.765 352.55 202.11 cv
1 0 0 rgb
ef
344.871 201.75 mo
344.871 200.093 343.526 198.75 341.871 198.75 cv
340.214 198.75 338.871 200.093 338.871 201.75 cv
338.871 203.406 340.214 204.75 341.871 204.75 cv
343.526 204.75 344.871 203.406 344.871 201.75 cv
ef
337.43 201.15 mo
337.43 199.494 336.086 198.15 334.43 198.15 cv
332.774 198.15 331.43 199.494 331.43 201.15 cv
331.43 202.805 332.774 204.15 334.43 204.15 cv
336.086 204.15 337.43 202.805 337.43 201.15 cv
ef
329.75 200.19 mo
329.75 198.534 328.407 197.19 326.75 197.19 cv
325.094 197.19 323.75 198.534 323.75 200.19 cv
323.75 201.845 325.094 203.19 326.75 203.19 cv
328.407 203.19 329.75 201.845 329.75 200.19 cv
ef
322.31 199.23 mo
322.31 197.574 320.966 196.23 319.31 196.23 cv
317.655 196.23 316.31 197.574 316.31 199.23 cv
316.31 200.885 317.655 202.23 319.31 202.23 cv
320.966 202.23 322.31 200.885 322.31 199.23 cv
ef
314.871 198.269 mo
314.871 196.614 313.526 195.269 311.871 195.269 cv
310.214 195.269 308.871 196.614 308.871 198.269 cv
308.871 199.925 310.214 201.269 311.871 201.269 cv
313.526 201.269 314.871 199.925 314.871 198.269 cv
ef
307.19 196.589 mo
307.19 194.933 305.846 193.589 304.19 193.589 cv
302.535 193.589 301.19 194.933 301.19 196.589 cv
301.19 198.246 302.535 199.589 304.19 199.589 cv
305.846 199.589 307.19 198.246 307.19 196.589 cv
ef
299.51 194.19 mo
299.51 192.534 298.167 191.19 296.51 191.19 cv
294.854 191.19 293.51 192.534 293.51 194.19 cv
293.51 195.845 294.854 197.19 296.51 197.19 cv
298.167 197.19 299.51 195.845 299.51 194.19 cv
ef
292.071 191.79 mo
292.071 190.133 290.726 188.79 289.071 188.79 cv
287.415 188.79 286.071 190.133 286.071 191.79 cv
286.071 193.446 287.415 194.79 289.071 194.79 cv
290.726 194.79 292.071 193.446 292.071 191.79 cv
ef
284.63 188.669 mo
284.63 187.013 283.287 185.669 281.63 185.669 cv
279.974 185.669 278.63 187.013 278.63 188.669 cv
278.63 190.326 279.974 191.669 281.63 191.669 cv
283.287 191.669 284.63 190.326 284.63 188.669 cv
ef
277.19 184.83 mo
277.19 183.173 275.846 181.83 274.19 181.83 cv
272.534 181.83 271.19 183.173 271.19 184.83 cv
271.19 186.486 272.534 187.83 274.19 187.83 cv
275.846 187.83 277.19 186.486 277.19 184.83 cv
ef
269.271 180.509 mo
269.271 178.853 267.926 177.509 266.271 177.509 cv
264.614 177.509 263.271 178.853 263.271 180.509 cv
263.271 182.166 264.614 183.509 266.271 183.509 cv
267.926 183.509 269.271 182.166 269.271 180.509 cv
ef
261.831 175.95 mo
261.831 174.293 260.486 172.95 258.831 172.95 cv
257.174 172.95 255.831 174.293 255.831 175.95 cv
255.831 177.606 257.174 178.95 258.831 178.95 cv
260.486 178.95 261.831 177.606 261.831 175.95 cv
ef
254.39 169.709 mo
254.39 168.053 253.046 166.709 251.39 166.709 cv
249.734 166.709 248.39 168.053 248.39 169.709 cv
248.39 171.366 249.734 172.709 251.39 172.709 cv
253.046 172.709 254.39 171.366 254.39 169.709 cv
ef
246.95 164.19 mo
246.95 162.534 245.606 161.19 243.95 161.19 cv
242.294 161.19 240.95 162.534 240.95 164.19 cv
240.95 165.845 242.294 167.19 243.95 167.19 cv
245.606 167.19 246.95 165.845 246.95 164.19 cv
ef
239.271 157.95 mo
239.271 156.293 237.926 154.95 236.271 154.95 cv
234.614 154.95 233.271 156.293 233.271 157.95 cv
233.271 159.605 234.614 160.95 236.271 160.95 cv
237.926 160.95 239.271 159.605 239.271 157.95 cv
ef
231.59 151.469 mo
231.59 149.813 230.247 148.469 228.59 148.469 cv
226.934 148.469 225.59 149.813 225.59 151.469 cv
225.59 153.125 226.934 154.469 228.59 154.469 cv
230.247 154.469 231.59 153.125 231.59 151.469 cv
ef
224.15 145.469 mo
224.15 143.813 222.806 142.469 221.15 142.469 cv
219.494 142.469 218.15 143.813 218.15 145.469 cv
218.15 147.125 219.494 148.469 221.15 148.469 cv
222.806 148.469 224.15 147.125 224.15 145.469 cv
ef
216.47 142.35 mo
216.47 140.693 215.126 139.35 213.47 139.35 cv
211.814 139.35 210.47 140.693 210.47 142.35 cv
210.47 144.005 211.814 145.35 213.47 145.35 cv
215.126 145.35 216.47 144.005 216.47 142.35 cv
ef
209.03 134.91 mo
209.03 133.253 207.687 131.91 206.03 131.91 cv
204.375 131.91 203.03 133.253 203.03 134.91 cv
203.03 136.565 204.375 137.91 206.03 137.91 cv
207.687 137.91 209.03 136.565 209.03 134.91 cv
ef
351.09 202 mo
352.59 202 li
@
353.275 208.661 mo
504.775 208.661 li
353.275 208.661 mo
353.275 111.161 li
504.775 111.161 li
504.775 208.661 li
353.275 208.661 li
cp
0 0 0 rgb
@
504.775 205.661 mo
504.775 208.661 li
501.025 207.161 mo
501.025 208.661 li
497.275 207.161 mo
497.275 208.661 li
493.525 207.161 mo
493.525 208.661 li
489.525 205.661 mo
489.525 208.661 li
485.775 207.161 mo
485.775 208.661 li
482.025 207.161 mo
482.025 208.661 li
478.275 207.161 mo
478.275 208.661 li
474.525 205.661 mo
474.525 208.661 li
470.775 207.161 mo
470.775 208.661 li
466.775 207.161 mo
466.775 208.661 li
463.025 207.161 mo
463.025 208.661 li
459.275 205.661 mo
459.275 208.661 li
455.525 207.161 mo
455.525 208.661 li
451.775 207.161 mo
451.775 208.661 li
448.025 207.161 mo
448.025 208.661 li
444.275 205.661 mo
444.275 208.661 li
440.275 207.161 mo
440.275 208.661 li
436.525 207.161 mo
436.525 208.661 li
432.775 207.161 mo
432.775 208.661 li
429.025 205.661 mo
429.025 208.661 li
425.275 207.161 mo
425.275 208.661 li
421.525 207.161 mo
421.525 208.661 li
417.775 207.161 mo
417.775 208.661 li
413.775 205.661 mo
413.775 208.661 li
410.025 207.161 mo
410.025 208.661 li
406.275 207.161 mo
406.275 208.661 li
402.525 207.161 mo
402.525 208.661 li
398.775 205.661 mo
398.775 208.661 li
395.025 207.161 mo
395.025 208.661 li
391.275 207.161 mo
391.275 208.661 li
387.275 207.161 mo
387.275 208.661 li
383.525 205.661 mo
383.525 208.661 li
379.775 207.161 mo
379.775 208.661 li
376.025 207.161 mo
376.025 208.661 li
372.275 207.161 mo
372.275 208.661 li
368.525 205.661 mo
368.525 208.661 li
364.525 207.161 mo
364.525 208.661 li
360.775 207.161 mo
360.775 208.661 li
357.025 207.161 mo
357.025 208.661 li
353.275 205.661 mo
353.275 208.661 li
@
353.275 208.661 mo
353.275 111.161 li
@
357.775 111.161 mo
353.275 111.161 li
355.525 207.411 mo
353.275 207.411 li
355.525 204.661 mo
353.275 204.661 li
357.775 202.161 mo
353.275 202.161 li
357.775 111.161 mo
353.275 111.161 li
355.525 113.661 mo
353.275 113.661 li
355.525 116.411 mo
353.275 116.411 li
355.525 118.911 mo
353.275 118.911 li
355.525 121.411 mo
353.275 121.411 li
357.775 124.161 mo
353.275 124.161 li
355.525 126.661 mo
353.275 126.661 li
355.525 129.411 mo
353.275 129.411 li
355.525 131.911 mo
353.275 131.911 li
355.525 134.411 mo
353.275 134.411 li
357.775 137.161 mo
353.275 137.161 li
355.525 139.661 mo
353.275 139.661 li
355.525 142.411 mo
353.275 142.411 li
355.525 144.911 mo
353.275 144.911 li
355.525 147.411 mo
353.275 147.411 li
357.775 150.161 mo
353.275 150.161 li
355.525 152.661 mo
353.275 152.661 li
355.525 155.411 mo
353.275 155.411 li
355.525 157.911 mo
353.275 157.911 li
355.525 160.411 mo
353.275 160.411 li
357.775 163.161 mo
353.275 163.161 li
355.525 165.661 mo
353.275 165.661 li
355.525 168.411 mo
353.275 168.411 li
355.525 170.911 mo
353.275 170.911 li
355.525 173.411 mo
353.275 173.411 li
357.775 176.161 mo
353.275 176.161 li
355.525 178.661 mo
353.275 178.661 li
355.525 181.411 mo
353.275 181.411 li
355.525 183.911 mo
353.275 183.911 li
355.525 186.411 mo
353.275 186.411 li
357.775 189.161 mo
353.275 189.161 li
355.525 191.661 mo
353.275 191.661 li
355.525 194.411 mo
353.275 194.411 li
355.525 196.911 mo
353.275 196.911 li
355.525 199.411 mo
353.275 199.411 li
357.775 202.161 mo
353.275 202.161 li
@
504.095 202.021 mo
504.095 200.365 502.75 199.021 501.095 199.021 cv
499.439 199.021 498.095 200.365 498.095 202.021 cv
498.095 203.676 499.439 205.021 501.095 205.021 cv
502.75 205.021 504.095 203.676 504.095 202.021 cv
1 0 0 rgb
ef
496.415 201.661 mo
496.415 200.004 495.071 198.661 493.415 198.661 cv
491.759 198.661 490.415 200.004 490.415 201.661 cv
490.415 203.317 491.759 204.661 493.415 204.661 cv
495.071 204.661 496.415 203.317 496.415 201.661 cv
ef
488.735 200.821 mo
488.735 199.165 487.391 197.821 485.735 197.821 cv
484.079 197.821 482.735 199.165 482.735 200.821 cv
482.735 202.477 484.079 203.821 485.735 203.821 cv
487.391 203.821 488.735 202.477 488.735 200.821 cv
ef
481.294 200.101 mo
481.294 198.445 479.951 197.101 478.294 197.101 cv
476.639 197.101 475.294 198.445 475.294 200.101 cv
475.294 201.756 476.639 203.101 478.294 203.101 cv
479.951 203.101 481.294 201.756 481.294 200.101 cv
ef
473.855 199.141 mo
473.855 197.485 472.511 196.141 470.855 196.141 cv
469.199 196.141 467.855 197.485 467.855 199.141 cv
467.855 200.796 469.199 202.141 470.855 202.141 cv
472.511 202.141 473.855 200.796 473.855 199.141 cv
ef
465.935 198.18 mo
465.935 196.525 464.591 195.18 462.935 195.18 cv
461.279 195.18 459.935 196.525 459.935 198.18 cv
459.935 199.836 461.279 201.18 462.935 201.18 cv
464.591 201.18 465.935 199.836 465.935 198.18 cv
ef
458.495 196.26 mo
458.495 194.605 457.151 193.26 455.495 193.26 cv
453.839 193.26 452.495 194.605 452.495 196.26 cv
452.495 197.917 453.839 199.26 455.495 199.26 cv
457.151 199.26 458.495 197.917 458.495 196.26 cv
ef
451.055 194.34 mo
451.055 192.685 449.71 191.34 448.055 191.34 cv
446.399 191.34 445.055 192.685 445.055 194.34 cv
445.055 195.997 446.399 197.34 448.055 197.34 cv
449.71 197.34 451.055 195.997 451.055 194.34 cv
ef
443.375 191.46 mo
443.375 189.804 442.031 188.46 440.375 188.46 cv
438.719 188.46 437.375 189.804 437.375 191.46 cv
437.375 193.117 438.719 194.46 440.375 194.46 cv
442.031 194.46 443.375 193.117 443.375 191.46 cv
ef
435.695 188.34 mo
435.695 186.685 434.351 185.34 432.695 185.34 cv
431.039 185.34 429.695 186.685 429.695 188.34 cv
429.695 189.997 431.039 191.34 432.695 191.34 cv
434.351 191.34 435.695 189.997 435.695 188.34 cv
ef
428.255 184.741 mo
428.255 183.084 426.911 181.741 425.255 181.741 cv
423.599 181.741 422.255 183.084 422.255 184.741 cv
422.255 186.397 423.599 187.741 425.255 187.741 cv
426.911 187.741 428.255 186.397 428.255 184.741 cv
ef
420.815 180.18 mo
420.815 178.525 419.471 177.18 417.815 177.18 cv
416.159 177.18 414.815 178.525 414.815 180.18 cv
414.815 181.836 416.159 183.18 417.815 183.18 cv
419.471 183.18 420.815 181.836 420.815 180.18 cv
ef
413.135 174.901 mo
413.135 173.245 411.791 171.901 410.135 171.901 cv
408.479 171.901 407.135 173.245 407.135 174.901 cv
407.135 176.557 408.479 177.901 410.135 177.901 cv
411.791 177.901 413.135 176.557 413.135 174.901 cv
ef
405.455 170.34 mo
405.455 168.685 404.111 167.34 402.455 167.34 cv
400.799 167.34 399.455 168.685 399.455 170.34 cv
399.455 171.997 400.799 173.34 402.455 173.34 cv
404.111 173.34 405.455 171.997 405.455 170.34 cv
ef
398.015 164.34 mo
398.015 162.685 396.671 161.34 395.015 161.34 cv
393.359 161.34 392.015 162.685 392.015 164.34 cv
392.015 165.997 393.359 167.34 395.015 167.34 cv
396.671 167.34 398.015 165.997 398.015 164.34 cv
ef
390.334 158.341 mo
390.334 156.685 388.991 155.341 387.334 155.341 cv
385.679 155.341 384.334 156.685 384.334 158.341 cv
384.334 159.997 385.679 161.34 387.334 161.34 cv
388.991 161.34 390.334 159.997 390.334 158.341 cv
ef
382.655 153.061 mo
382.655 151.405 381.311 150.061 379.655 150.061 cv
377.999 150.061 376.655 151.405 376.655 153.061 cv
376.655 154.717 377.999 156.061 379.655 156.061 cv
381.311 156.061 382.655 154.717 382.655 153.061 cv
ef
375.215 148.5 mo
375.215 146.845 373.871 145.5 372.215 145.5 cv
370.559 145.5 369.215 146.845 369.215 148.5 cv
369.215 150.157 370.559 151.5 372.215 151.5 cv
373.871 151.5 375.215 150.157 375.215 148.5 cv
ef
367.535 145.38 mo
367.535 143.725 366.191 142.38 364.535 142.38 cv
362.878 142.38 361.535 143.725 361.535 145.38 cv
361.535 147.037 362.878 148.38 364.535 148.38 cv
366.191 148.38 367.535 147.037 367.535 145.38 cv
ef
360.095 138.901 mo
360.095 137.245 358.75 135.901 357.095 135.901 cv
355.439 135.901 354.095 137.245 354.095 138.901 cv
354.095 140.557 355.439 141.901 357.095 141.901 cv
358.75 141.901 360.095 140.557 360.095 138.901 cv
ef
502.525 201.661 mo
504.025 201.911 li
@
353.275 202.161 mo
504.775 202.161 li
0 0 0 rgb
@
501.025 199.661 mo
498.775 199.661 li
498.775 204.161 li
503.275 204.161 li
503.275 199.661 li
501.025 199.661 li
cp
0 0 1 rgb
ef
493.525 199.661 mo
491.275 199.661 li
491.275 204.161 li
495.775 204.161 li
495.775 199.661 li
493.525 199.661 li
cp
ef
485.775 199.911 mo
483.525 199.911 li
483.525 204.411 li
488.025 204.411 li
488.025 199.911 li
485.775 199.911 li
cp
ef
478.275 199.911 mo
476.025 199.911 li
476.025 204.411 li
480.525 204.411 li
480.525 199.911 li
478.275 199.911 li
cp
ef
470.775 199.661 mo
468.525 199.661 li
468.525 204.161 li
473.025 204.161 li
473.025 199.661 li
470.775 199.661 li
cp
ef
463.025 199.911 mo
460.775 199.911 li
460.775 204.411 li
465.275 204.411 li
465.275 199.911 li
463.025 199.911 li
cp
ef
455.525 199.911 mo
453.275 199.911 li
453.275 204.411 li
457.775 204.411 li
457.775 199.911 li
455.525 199.911 li
cp
ef
448.025 200.161 mo
445.775 200.161 li
445.775 204.661 li
450.275 204.661 li
450.275 200.161 li
448.025 200.161 li
cp
ef
440.275 199.911 mo
438.025 199.911 li
438.025 204.411 li
442.525 204.411 li
442.525 199.911 li
440.275 199.911 li
cp
ef
432.775 199.411 mo
430.525 199.411 li
430.525 203.911 li
435.025 203.911 li
435.025 199.411 li
432.775 199.411 li
cp
ef
425.275 200.161 mo
423.025 200.161 li
423.025 204.661 li
427.525 204.661 li
427.525 200.161 li
425.275 200.161 li
cp
ef
417.775 199.911 mo
415.525 199.911 li
415.525 204.411 li
420.025 204.411 li
420.025 199.911 li
417.775 199.911 li
cp
ef
410.025 200.161 mo
407.775 200.161 li
407.775 204.661 li
412.275 204.661 li
412.275 200.161 li
410.025 200.161 li
cp
ef
402.525 199.661 mo
400.275 199.661 li
400.275 204.161 li
404.775 204.161 li
404.775 199.661 li
402.525 199.661 li
cp
ef
395.025 199.911 mo
392.775 199.911 li
392.775 204.411 li
397.275 204.411 li
397.275 199.911 li
395.025 199.911 li
cp
ef
387.275 200.161 mo
385.025 200.161 li
385.025 204.661 li
389.525 204.661 li
389.525 200.161 li
387.275 200.161 li
cp
ef
379.775 199.661 mo
377.525 199.661 li
377.525 204.161 li
382.025 204.161 li
382.025 199.661 li
379.775 199.661 li
cp
ef
372.275 199.911 mo
370.025 199.911 li
370.025 204.411 li
374.525 204.411 li
374.525 199.911 li
372.275 199.911 li
cp
ef
364.525 199.911 mo
362.275 199.911 li
362.275 204.411 li
366.775 204.411 li
366.775 199.911 li
364.525 199.911 li
cp
ef
357.025 200.411 mo
354.775 200.411 li
354.775 204.911 li
359.275 204.911 li
359.275 200.411 li
357.025 200.411 li
cp
ef
360.095 157.861 mo
360.095 156.205 358.75 154.861 357.095 154.861 cv
355.439 154.861 354.095 156.205 354.095 157.861 cv
354.095 159.517 355.439 160.861 357.095 160.861 cv
358.75 160.861 360.095 159.517 360.095 157.861 cv
367.535 160.021 mo
367.535 158.365 366.191 157.021 364.535 157.021 cv
362.878 157.021 361.535 158.365 361.535 160.021 cv
361.535 161.676 362.878 163.021 364.535 163.021 cv
366.191 163.021 367.535 161.676 367.535 160.021 cv
375.215 162.42 mo
375.215 160.764 373.871 159.42 372.215 159.42 cv
370.559 159.42 369.215 160.764 369.215 162.42 cv
369.215 164.077 370.559 165.42 372.215 165.42 cv
373.871 165.42 375.215 164.077 375.215 162.42 cv
382.655 165.3 mo
382.655 163.645 381.311 162.3 379.655 162.3 cv
377.999 162.3 376.655 163.645 376.655 165.3 cv
376.655 166.957 377.999 168.3 379.655 168.3 cv
381.311 168.3 382.655 166.957 382.655 165.3 cv
390.334 166.741 mo
390.334 165.084 388.991 163.741 387.334 163.741 cv
385.679 163.741 384.334 165.084 384.334 166.741 cv
384.334 168.397 385.679 169.741 387.334 169.741 cv
388.991 169.741 390.334 168.397 390.334 166.741 cv
398.015 169.141 mo
398.015 167.485 396.671 166.141 395.015 166.141 cv
393.359 166.141 392.015 167.485 392.015 169.141 cv
392.015 170.796 393.359 172.141 395.015 172.141 cv
396.671 172.141 398.015 170.796 398.015 169.141 cv
405.455 172.26 mo
405.455 170.605 404.111 169.26 402.455 169.26 cv
400.799 169.26 399.455 170.605 399.455 172.26 cv
399.455 173.917 400.799 175.26 402.455 175.26 cv
404.111 175.26 405.455 173.917 405.455 172.26 cv
413.135 173.941 mo
413.135 172.285 411.791 170.941 410.135 170.941 cv
408.479 170.941 407.135 172.285 407.135 173.941 cv
407.135 175.596 408.479 176.941 410.135 176.941 cv
411.791 176.941 413.135 175.596 413.135 173.941 cv
420.815 176.34 mo
420.815 174.685 419.471 173.34 417.815 173.34 cv
416.159 173.34 414.815 174.685 414.815 176.34 cv
414.815 177.997 416.159 179.34 417.815 179.34 cv
419.471 179.34 420.815 177.997 420.815 176.34 cv
428.255 178.5 mo
428.255 176.844 426.911 175.5 425.255 175.5 cv
423.599 175.5 422.255 176.844 422.255 178.5 cv
422.255 180.157 423.599 181.5 425.255 181.5 cv
426.911 181.5 428.255 180.157 428.255 178.5 cv
435.695 180.661 mo
435.695 179.004 434.351 177.661 432.695 177.661 cv
431.039 177.661 429.695 179.004 429.695 180.661 cv
429.695 182.317 431.039 183.661 432.695 183.661 cv
434.351 183.661 435.695 182.317 435.695 180.661 cv
443.375 182.821 mo
443.375 181.165 442.031 179.821 440.375 179.821 cv
438.719 179.821 437.375 181.165 437.375 182.821 cv
437.375 184.477 438.719 185.821 440.375 185.821 cv
442.031 185.821 443.375 184.477 443.375 182.821 cv
451.055 184.981 mo
451.055 183.325 449.71 181.981 448.055 181.981 cv
446.399 181.981 445.055 183.325 445.055 184.981 cv
445.055 186.636 446.399 187.981 448.055 187.981 cv
449.71 187.981 451.055 186.636 451.055 184.981 cv
458.495 187.141 mo
458.495 185.485 457.151 184.141 455.495 184.141 cv
453.839 184.141 452.495 185.485 452.495 187.141 cv
452.495 188.796 453.839 190.141 455.495 190.141 cv
457.151 190.141 458.495 188.796 458.495 187.141 cv
465.935 189.661 mo
465.935 188.004 464.591 186.661 462.935 186.661 cv
461.279 186.661 459.935 188.004 459.935 189.661 cv
459.935 191.317 461.279 192.661 462.935 192.661 cv
464.591 192.661 465.935 191.317 465.935 189.661 cv
473.855 191.941 mo
473.855 190.285 472.511 188.941 470.855 188.941 cv
469.199 188.941 467.855 190.285 467.855 191.941 cv
467.855 193.596 469.199 194.941 470.855 194.941 cv
472.511 194.941 473.855 193.596 473.855 191.941 cv
481.294 194.101 mo
481.294 192.445 479.951 191.101 478.294 191.101 cv
476.639 191.101 475.294 192.445 475.294 194.101 cv
475.294 195.756 476.639 197.101 478.294 197.101 cv
479.951 197.101 481.294 195.756 481.294 194.101 cv
488.735 196.741 mo
488.735 195.084 487.391 193.741 485.735 193.741 cv
484.079 193.741 482.735 195.084 482.735 196.741 cv
482.735 198.397 484.079 199.741 485.735 199.741 cv
487.391 199.741 488.735 198.397 488.735 196.741 cv
496.415 198.901 mo
496.415 197.245 495.071 195.901 493.415 195.901 cv
491.759 195.901 490.415 197.245 490.415 198.901 cv
490.415 200.557 491.759 201.901 493.415 201.901 cv
495.071 201.901 496.415 200.557 496.415 198.901 cv
504.095 201.061 mo
504.095 199.405 502.75 198.061 501.095 198.061 cv
499.439 198.061 498.095 199.405 498.095 201.061 cv
498.095 202.716 499.439 204.061 501.095 204.061 cv
502.75 204.061 504.095 202.716 504.095 201.061 cv
0 .4 0 rgb
@
504.095 202.021 mo
504.095 200.365 502.75 199.021 501.095 199.021 cv
499.439 199.021 498.095 200.365 498.095 202.021 cv
498.095 203.676 499.439 205.021 501.095 205.021 cv
502.75 205.021 504.095 203.676 504.095 202.021 cv
1 0 0 rgb
ef
496.415 201.661 mo
496.415 200.004 495.071 198.661 493.415 198.661 cv
491.759 198.661 490.415 200.004 490.415 201.661 cv
490.415 203.317 491.759 204.661 493.415 204.661 cv
495.071 204.661 496.415 203.317 496.415 201.661 cv
ef
488.735 200.821 mo
488.735 199.165 487.391 197.821 485.735 197.821 cv
484.079 197.821 482.735 199.165 482.735 200.821 cv
482.735 202.477 484.079 203.821 485.735 203.821 cv
487.391 203.821 488.735 202.477 488.735 200.821 cv
ef
481.294 200.101 mo
481.294 198.445 479.951 197.101 478.294 197.101 cv
476.639 197.101 475.294 198.445 475.294 200.101 cv
475.294 201.756 476.639 203.101 478.294 203.101 cv
479.951 203.101 481.294 201.756 481.294 200.101 cv
ef
473.855 199.141 mo
473.855 197.485 472.511 196.141 470.855 196.141 cv
469.199 196.141 467.855 197.485 467.855 199.141 cv
467.855 200.796 469.199 202.141 470.855 202.141 cv
472.511 202.141 473.855 200.796 473.855 199.141 cv
ef
465.935 198.18 mo
465.935 196.525 464.591 195.18 462.935 195.18 cv
461.279 195.18 459.935 196.525 459.935 198.18 cv
459.935 199.836 461.279 201.18 462.935 201.18 cv
464.591 201.18 465.935 199.836 465.935 198.18 cv
ef
458.495 196.26 mo
458.495 194.605 457.151 193.26 455.495 193.26 cv
453.839 193.26 452.495 194.605 452.495 196.26 cv
452.495 197.917 453.839 199.26 455.495 199.26 cv
457.151 199.26 458.495 197.917 458.495 196.26 cv
ef
451.055 194.34 mo
451.055 192.685 449.71 191.34 448.055 191.34 cv
446.399 191.34 445.055 192.685 445.055 194.34 cv
445.055 195.997 446.399 197.34 448.055 197.34 cv
449.71 197.34 451.055 195.997 451.055 194.34 cv
ef
443.375 191.46 mo
443.375 189.804 442.031 188.46 440.375 188.46 cv
438.719 188.46 437.375 189.804 437.375 191.46 cv
437.375 193.117 438.719 194.46 440.375 194.46 cv
442.031 194.46 443.375 193.117 443.375 191.46 cv
ef
435.695 188.34 mo
435.695 186.685 434.351 185.34 432.695 185.34 cv
431.039 185.34 429.695 186.685 429.695 188.34 cv
429.695 189.997 431.039 191.34 432.695 191.34 cv
434.351 191.34 435.695 189.997 435.695 188.34 cv
ef
428.255 184.741 mo
428.255 183.084 426.911 181.741 425.255 181.741 cv
423.599 181.741 422.255 183.084 422.255 184.741 cv
422.255 186.397 423.599 187.741 425.255 187.741 cv
426.911 187.741 428.255 186.397 428.255 184.741 cv
ef
420.815 180.18 mo
420.815 178.525 419.471 177.18 417.815 177.18 cv
416.159 177.18 414.815 178.525 414.815 180.18 cv
414.815 181.836 416.159 183.18 417.815 183.18 cv
419.471 183.18 420.815 181.836 420.815 180.18 cv
ef
413.135 174.901 mo
413.135 173.245 411.791 171.901 410.135 171.901 cv
408.479 171.901 407.135 173.245 407.135 174.901 cv
407.135 176.557 408.479 177.901 410.135 177.901 cv
411.791 177.901 413.135 176.557 413.135 174.901 cv
ef
405.455 170.34 mo
405.455 168.685 404.111 167.34 402.455 167.34 cv
400.799 167.34 399.455 168.685 399.455 170.34 cv
399.455 171.997 400.799 173.34 402.455 173.34 cv
404.111 173.34 405.455 171.997 405.455 170.34 cv
ef
398.015 164.34 mo
398.015 162.685 396.671 161.34 395.015 161.34 cv
393.359 161.34 392.015 162.685 392.015 164.34 cv
392.015 165.997 393.359 167.34 395.015 167.34 cv
396.671 167.34 398.015 165.997 398.015 164.34 cv
ef
390.334 158.341 mo
390.334 156.685 388.991 155.341 387.334 155.341 cv
385.679 155.341 384.334 156.685 384.334 158.341 cv
384.334 159.997 385.679 161.34 387.334 161.34 cv
388.991 161.34 390.334 159.997 390.334 158.341 cv
ef
382.655 153.061 mo
382.655 151.405 381.311 150.061 379.655 150.061 cv
377.999 150.061 376.655 151.405 376.655 153.061 cv
376.655 154.717 377.999 156.061 379.655 156.061 cv
381.311 156.061 382.655 154.717 382.655 153.061 cv
ef
375.215 148.5 mo
375.215 146.845 373.871 145.5 372.215 145.5 cv
370.559 145.5 369.215 146.845 369.215 148.5 cv
369.215 150.157 370.559 151.5 372.215 151.5 cv
373.871 151.5 375.215 150.157 375.215 148.5 cv
ef
367.535 145.38 mo
367.535 143.725 366.191 142.38 364.535 142.38 cv
362.878 142.38 361.535 143.725 361.535 145.38 cv
361.535 147.037 362.878 148.38 364.535 148.38 cv
366.191 148.38 367.535 147.037 367.535 145.38 cv
ef
360.095 138.901 mo
360.095 137.245 358.75 135.901 357.095 135.901 cv
355.439 135.901 354.095 137.245 354.095 138.901 cv
354.095 140.557 355.439 141.901 357.095 141.901 cv
358.75 141.901 360.095 140.557 360.095 138.901 cv
ef
502.525 201.661 mo
504.025 201.911 li
@
52.1895 306.335 mo
203.189 306.335 li
52.1895 306.335 mo
52.1895 208.835 li
203.189 208.835 li
203.189 306.335 li
52.1895 306.335 li
cp
0 0 0 rgb
@
203.189 303.585 mo
203.189 306.335 li
199.439 304.835 mo
199.439 306.335 li
195.439 304.835 mo
195.439 306.335 li
191.689 304.835 mo
191.689 306.335 li
187.939 303.585 mo
187.939 306.335 li
184.189 304.835 mo
184.189 306.335 li
180.439 304.835 mo
180.439 306.335 li
176.689 304.835 mo
176.689 306.335 li
172.939 303.585 mo
172.939 306.335 li
169.189 304.835 mo
169.189 306.335 li
165.439 304.835 mo
165.439 306.335 li
161.689 304.835 mo
161.689 306.335 li
157.689 303.585 mo
157.689 306.335 li
153.939 304.835 mo
153.939 306.335 li
150.189 304.835 mo
150.189 306.335 li
146.439 304.835 mo
146.439 306.335 li
142.689 303.585 mo
142.689 306.335 li
138.939 304.835 mo
138.939 306.335 li
135.189 304.835 mo
135.189 306.335 li
131.439 304.835 mo
131.439 306.335 li
127.689 303.585 mo
127.689 306.335 li
123.689 304.835 mo
123.689 306.335 li
119.939 304.835 mo
119.939 306.335 li
116.189 304.835 mo
116.189 306.335 li
112.439 303.585 mo
112.439 306.335 li
108.689 304.835 mo
108.689 306.335 li
104.939 304.835 mo
104.939 306.335 li
101.189 304.835 mo
101.189 306.335 li
97.4395 303.585 mo
97.4395 306.335 li
93.6895 304.835 mo
93.6895 306.335 li
89.9395 304.835 mo
89.9395 306.335 li
85.9395 304.835 mo
85.9395 306.335 li
82.1895 303.585 mo
82.1895 306.335 li
78.4395 304.835 mo
78.4395 306.335 li
74.6895 304.835 mo
74.6895 306.335 li
70.9395 304.835 mo
70.9395 306.335 li
67.1895 303.585 mo
67.1895 306.335 li
63.4395 304.835 mo
63.4395 306.335 li
59.6895 304.835 mo
59.6895 306.335 li
55.9395 304.835 mo
55.9395 306.335 li
52.1895 303.585 mo
52.1895 306.335 li
@
52.1895 306.335 mo
52.1895 208.835 li
@
56.6895 208.835 mo
52.1895 208.835 li
54.4395 305.085 mo
52.1895 305.085 li
54.4395 302.585 mo
52.1895 302.585 li
56.6895 299.835 mo
52.1895 299.835 li
56.6895 208.835 mo
52.1895 208.835 li
54.4395 211.585 mo
52.1895 211.585 li
54.4395 214.085 mo
52.1895 214.085 li
54.4395 216.835 mo
52.1895 216.835 li
54.4395 219.335 mo
52.1895 219.335 li
56.6895 221.835 mo
52.1895 221.835 li
54.4395 224.585 mo
52.1895 224.585 li
54.4395 227.085 mo
52.1895 227.085 li
54.4395 229.585 mo
52.1895 229.585 li
54.4395 232.335 mo
52.1895 232.335 li
56.6895 234.835 mo
52.1895 234.835 li
54.4395 237.585 mo
52.1895 237.585 li
54.4395 240.085 mo
52.1895 240.085 li
54.4395 242.585 mo
52.1895 242.585 li
54.4395 245.335 mo
52.1895 245.335 li
56.6895 247.835 mo
52.1895 247.835 li
54.4395 250.585 mo
52.1895 250.585 li
54.4395 253.085 mo
52.1895 253.085 li
54.4395 255.585 mo
52.1895 255.585 li
54.4395 258.335 mo
52.1895 258.335 li
56.6895 260.835 mo
52.1895 260.835 li
54.4395 263.585 mo
52.1895 263.585 li
54.4395 266.085 mo
52.1895 266.085 li
54.4395 268.585 mo
52.1895 268.585 li
54.4395 271.335 mo
52.1895 271.335 li
56.6895 273.835 mo
52.1895 273.835 li
54.4395 276.585 mo
52.1895 276.585 li
54.4395 279.085 mo
52.1895 279.085 li
54.4395 281.585 mo
52.1895 281.585 li
54.4395 284.335 mo
52.1895 284.335 li
56.6895 286.835 mo
52.1895 286.835 li
54.4395 289.585 mo
52.1895 289.585 li
54.4395 292.085 mo
52.1895 292.085 li
54.4395 294.585 mo
52.1895 294.585 li
54.4395 297.335 mo
52.1895 297.335 li
56.6895 299.835 mo
52.1895 299.835 li
@
202.509 299.625 mo
202.509 297.969 201.166 296.625 199.509 296.625 cv
197.854 296.625 196.509 297.969 196.509 299.625 cv
196.509 301.282 197.854 302.625 199.509 302.625 cv
201.166 302.625 202.509 301.282 202.509 299.625 cv
1 0 0 rgb
ef
194.589 299.385 mo
194.589 297.729 193.246 296.385 191.589 296.385 cv
189.934 296.385 188.589 297.729 188.589 299.385 cv
188.589 301.042 189.934 302.385 191.589 302.385 cv
193.246 302.385 194.589 301.042 194.589 299.385 cv
ef
187.149 298.666 mo
187.149 297.009 185.806 295.666 184.149 295.666 cv
182.494 295.666 181.149 297.009 181.149 298.666 cv
181.149 300.322 182.494 301.666 184.149 301.666 cv
185.806 301.666 187.149 300.322 187.149 298.666 cv
ef
179.709 297.946 mo
179.709 296.29 178.365 294.946 176.709 294.946 cv
175.053 294.946 173.709 296.29 173.709 297.946 cv
173.709 299.601 175.053 300.946 176.709 300.946 cv
178.365 300.946 179.709 299.601 179.709 297.946 cv
ef
172.27 296.505 mo
172.27 294.849 170.925 293.505 169.27 293.505 cv
167.613 293.505 166.27 294.849 166.27 296.505 cv
166.27 298.162 167.613 299.505 169.27 299.505 cv
170.925 299.505 172.27 298.162 172.27 296.505 cv
ef
164.589 295.305 mo
164.589 293.65 163.246 292.305 161.589 292.305 cv
159.934 292.305 158.589 293.65 158.589 295.305 cv
158.589 296.961 159.934 298.305 161.589 298.305 cv
163.246 298.305 164.589 296.961 164.589 295.305 cv
ef
156.91 293.866 mo
156.91 292.209 155.565 290.866 153.91 290.866 cv
152.253 290.866 150.91 292.209 150.91 293.866 cv
150.91 295.521 152.253 296.866 153.91 296.866 cv
155.565 296.866 156.91 295.521 156.91 293.866 cv
ef
149.469 291.946 mo
149.469 290.29 148.125 288.946 146.469 288.946 cv
144.813 288.946 143.469 290.29 143.469 291.946 cv
143.469 293.601 144.813 294.946 146.469 294.946 cv
148.125 294.946 149.469 293.601 149.469 291.946 cv
ef
142.029 289.066 mo
142.029 287.41 140.686 286.066 139.029 286.066 cv
137.374 286.066 136.029 287.41 136.029 289.066 cv
136.029 290.721 137.374 292.066 139.029 292.066 cv
140.686 292.066 142.029 290.721 142.029 289.066 cv
ef
134.35 285.585 mo
134.35 283.929 133.005 282.585 131.35 282.585 cv
129.693 282.585 128.35 283.929 128.35 285.585 cv
128.35 287.242 129.693 288.585 131.35 288.585 cv
133.005 288.585 134.35 287.242 134.35 285.585 cv
ef
126.669 282.345 mo
126.669 280.689 125.326 279.345 123.669 279.345 cv
122.014 279.345 120.669 280.689 120.669 282.345 cv
120.669 284.001 122.014 285.345 123.669 285.345 cv
125.326 285.345 126.669 284.001 126.669 282.345 cv
ef
119.229 278.026 mo
119.229 276.37 117.885 275.026 116.229 275.026 cv
114.573 275.026 113.229 276.37 113.229 278.026 cv
113.229 279.681 114.573 281.026 116.229 281.026 cv
117.885 281.026 119.229 279.681 119.229 278.026 cv
ef
111.79 273.585 mo
111.79 271.929 110.445 270.585 108.79 270.585 cv
107.133 270.585 105.79 271.929 105.79 273.585 cv
105.79 275.242 107.133 276.585 108.79 276.585 cv
110.445 276.585 111.79 275.242 111.79 273.585 cv
ef
104.109 268.906 mo
104.109 267.25 102.766 265.906 101.109 265.906 cv
99.4536 265.906 98.1094 267.25 98.1094 268.906 cv
98.1094 270.561 99.4536 271.906 101.109 271.906 cv
102.766 271.906 104.109 270.561 104.109 268.906 cv
ef
96.6694 263.145 mo
96.6694 261.49 95.3257 260.145 93.6694 260.145 cv
92.0137 260.145 90.6694 261.49 90.6694 263.145 cv
90.6694 264.801 92.0137 266.145 93.6694 266.145 cv
95.3257 266.145 96.6694 264.801 96.6694 263.145 cv
ef
88.9893 257.625 mo
88.9893 255.969 87.6455 254.625 85.9893 254.625 cv
84.3335 254.625 82.9893 255.969 82.9893 257.625 cv
82.9893 259.282 84.3335 260.625 85.9893 260.625 cv
87.6455 260.625 88.9893 259.282 88.9893 257.625 cv
ef
81.5493 252.826 mo
81.5493 251.169 80.2056 249.826 78.5493 249.826 cv
76.8936 249.826 75.5493 251.169 75.5493 252.826 cv
75.5493 254.482 76.8936 255.826 78.5493 255.826 cv
80.2056 255.826 81.5493 254.482 81.5493 252.826 cv
ef
73.8696 248.746 mo
73.8696 247.089 72.5254 245.746 70.8696 245.746 cv
69.2134 245.746 67.8696 247.089 67.8696 248.746 cv
67.8696 250.402 69.2134 251.746 70.8696 251.746 cv
72.5254 251.746 73.8696 250.402 73.8696 248.746 cv
ef
66.4297 246.585 mo
66.4297 244.929 65.0854 243.585 63.4297 243.585 cv
61.7734 243.585 60.4297 244.929 60.4297 246.585 cv
60.4297 248.242 61.7734 249.585 63.4297 249.585 cv
65.0854 249.585 66.4297 248.242 66.4297 246.585 cv
ef
58.9893 241.786 mo
58.9893 240.129 57.6455 238.786 55.9893 238.786 cv
54.3335 238.786 52.9893 240.129 52.9893 241.786 cv
52.9893 243.442 54.3335 244.786 55.9893 244.786 cv
57.6455 244.786 58.9893 243.442 58.9893 241.786 cv
ef
200.939 299.585 mo
202.439 299.585 li
@
52.1895 299.835 mo
203.189 299.835 li
0 0 0 rgb
@
199.439 297.585 mo
197.189 297.585 li
197.189 302.085 li
201.689 302.085 li
201.689 297.585 li
199.439 297.585 li
cp
0 0 1 rgb
ef
191.689 297.585 mo
189.439 297.585 li
189.439 302.085 li
193.939 302.085 li
193.939 297.585 li
191.689 297.585 li
cp
ef
184.189 297.835 mo
181.939 297.835 li
181.939 302.335 li
186.439 302.335 li
186.439 297.835 li
184.189 297.835 li
cp
ef
176.689 297.835 mo
174.439 297.835 li
174.439 302.335 li
178.939 302.335 li
178.939 297.835 li
176.689 297.835 li
cp
ef
169.189 297.585 mo
166.939 297.585 li
166.939 302.085 li
171.439 302.085 li
171.439 297.585 li
169.189 297.585 li
cp
ef
161.689 297.835 mo
159.439 297.835 li
159.439 302.335 li
163.939 302.335 li
163.939 297.835 li
161.689 297.835 li
cp
ef
153.939 297.335 mo
151.689 297.335 li
151.689 301.835 li
156.189 301.835 li
156.189 297.335 li
153.939 297.335 li
cp
ef
146.439 297.585 mo
144.189 297.585 li
144.189 302.085 li
148.689 302.085 li
148.689 297.585 li
146.439 297.585 li
cp
ef
138.939 297.585 mo
136.689 297.585 li
136.689 302.085 li
141.189 302.085 li
141.189 297.585 li
138.939 297.585 li
cp
ef
131.439 298.085 mo
129.189 298.085 li
129.189 302.585 li
133.689 302.585 li
133.689 298.085 li
131.439 298.085 li
cp
ef
123.689 297.335 mo
121.439 297.335 li
121.439 301.835 li
125.939 301.835 li
125.939 297.335 li
123.689 297.335 li
cp
ef
116.189 297.335 mo
113.939 297.335 li
113.939 301.835 li
118.439 301.835 li
118.439 297.335 li
116.189 297.335 li
cp
ef
108.689 297.585 mo
106.439 297.585 li
106.439 302.085 li
110.939 302.085 li
110.939 297.585 li
108.689 297.585 li
cp
ef
101.189 297.585 mo
98.9395 297.585 li
98.9395 302.085 li
103.439 302.085 li
103.439 297.585 li
101.189 297.585 li
cp
ef
93.6895 297.835 mo
91.4395 297.835 li
91.4395 302.335 li
95.9395 302.335 li
95.9395 297.835 li
93.6895 297.835 li
cp
ef
85.9395 298.085 mo
83.6895 298.085 li
83.6895 302.585 li
88.1895 302.585 li
88.1895 298.085 li
85.9395 298.085 li
cp
ef
78.4395 297.585 mo
76.1895 297.585 li
76.1895 302.085 li
80.6895 302.085 li
80.6895 297.585 li
78.4395 297.585 li
cp
ef
70.9395 298.085 mo
68.6895 298.085 li
68.6895 302.585 li
73.1895 302.585 li
73.1895 298.085 li
70.9395 298.085 li
cp
ef
63.4395 298.335 mo
61.1895 298.335 li
61.1895 302.835 li
65.6895 302.835 li
65.6895 298.335 li
63.4395 298.335 li
cp
ef
55.9395 297.585 mo
53.6895 297.585 li
53.6895 302.085 li
58.1895 302.085 li
58.1895 297.585 li
55.9395 297.585 li
cp
ef
58.9893 257.385 mo
58.9893 255.729 57.6455 254.385 55.9893 254.385 cv
54.3335 254.385 52.9893 255.729 52.9893 257.385 cv
52.9893 259.042 54.3335 260.385 55.9893 260.385 cv
57.6455 260.385 58.9893 259.042 58.9893 257.385 cv
66.4297 260.026 mo
66.4297 258.37 65.0854 257.026 63.4297 257.026 cv
61.7734 257.026 60.4297 258.37 60.4297 260.026 cv
60.4297 261.681 61.7734 263.026 63.4297 263.026 cv
65.0854 263.026 66.4297 261.681 66.4297 260.026 cv
73.8696 260.986 mo
73.8696 259.33 72.5254 257.986 70.8696 257.986 cv
69.2134 257.986 67.8696 259.33 67.8696 260.986 cv
67.8696 262.641 69.2134 263.986 70.8696 263.986 cv
72.5254 263.986 73.8696 262.641 73.8696 260.986 cv
81.5493 264.105 mo
81.5493 262.45 80.2056 261.105 78.5493 261.105 cv
76.8936 261.105 75.5493 262.45 75.5493 264.105 cv
75.5493 265.761 76.8936 267.105 78.5493 267.105 cv
80.2056 267.105 81.5493 265.761 81.5493 264.105 cv
88.9893 265.786 mo
88.9893 264.129 87.6455 262.786 85.9893 262.786 cv
84.3335 262.786 82.9893 264.129 82.9893 265.786 cv
82.9893 267.442 84.3335 268.786 85.9893 268.786 cv
87.6455 268.786 88.9893 267.442 88.9893 265.786 cv
96.6694 268.425 mo
96.6694 266.769 95.3257 265.425 93.6694 265.425 cv
92.0137 265.425 90.6694 266.769 90.6694 268.425 cv
90.6694 270.082 92.0137 271.425 93.6694 271.425 cv
95.3257 271.425 96.6694 270.082 96.6694 268.425 cv
104.109 270.826 mo
104.109 269.169 102.766 267.826 101.109 267.826 cv
99.4536 267.826 98.1094 269.169 98.1094 270.826 cv
98.1094 272.482 99.4536 273.826 101.109 273.826 cv
102.766 273.826 104.109 272.482 104.109 270.826 cv
111.79 272.505 mo
111.79 270.849 110.445 269.505 108.79 269.505 cv
107.133 269.505 105.79 270.849 105.79 272.505 cv
105.79 274.162 107.133 275.505 108.79 275.505 cv
110.445 275.505 111.79 274.162 111.79 272.505 cv
119.229 274.425 mo
119.229 272.769 117.885 271.425 116.229 271.425 cv
114.573 271.425 113.229 272.769 113.229 274.425 cv
113.229 276.082 114.573 277.425 116.229 277.425 cv
117.885 277.425 119.229 276.082 119.229 274.425 cv
126.669 277.305 mo
126.669 275.65 125.326 274.305 123.669 274.305 cv
122.014 274.305 120.669 275.65 120.669 277.305 cv
120.669 278.961 122.014 280.305 123.669 280.305 cv
125.326 280.305 126.669 278.961 126.669 277.305 cv
134.35 279.225 mo
134.35 277.57 133.005 276.225 131.35 276.225 cv
129.693 276.225 128.35 277.57 128.35 279.225 cv
128.35 280.881 129.693 282.225 131.35 282.225 cv
133.005 282.225 134.35 280.881 134.35 279.225 cv
142.029 281.625 mo
142.029 279.969 140.686 278.625 139.029 278.625 cv
137.374 278.625 136.029 279.969 136.029 281.625 cv
136.029 283.282 137.374 284.625 139.029 284.625 cv
140.686 284.625 142.029 283.282 142.029 281.625 cv
149.469 283.545 mo
149.469 281.889 148.125 280.545 146.469 280.545 cv
144.813 280.545 143.469 281.889 143.469 283.545 cv
143.469 285.202 144.813 286.545 146.469 286.545 cv
148.125 286.545 149.469 285.202 149.469 283.545 cv
156.91 285.225 mo
156.91 283.57 155.565 282.225 153.91 282.225 cv
152.253 282.225 150.91 283.57 150.91 285.225 cv
150.91 286.881 152.253 288.225 153.91 288.225 cv
155.565 288.225 156.91 286.881 156.91 285.225 cv
164.589 287.625 mo
164.589 285.969 163.246 284.625 161.589 284.625 cv
159.934 284.625 158.589 285.969 158.589 287.625 cv
158.589 289.282 159.934 290.625 161.589 290.625 cv
163.246 290.625 164.589 289.282 164.589 287.625 cv
172.27 289.786 mo
172.27 288.129 170.925 286.786 169.27 286.786 cv
167.613 286.786 166.27 288.129 166.27 289.786 cv
166.27 291.442 167.613 292.786 169.27 292.786 cv
170.925 292.786 172.27 291.442 172.27 289.786 cv
179.709 292.185 mo
179.709 290.53 178.365 289.185 176.709 289.185 cv
175.053 289.185 173.709 290.53 173.709 292.185 cv
173.709 293.841 175.053 295.185 176.709 295.185 cv
178.365 295.185 179.709 293.841 179.709 292.185 cv
187.149 294.585 mo
187.149 292.929 185.806 291.585 184.149 291.585 cv
182.494 291.585 181.149 292.929 181.149 294.585 cv
181.149 296.242 182.494 297.585 184.149 297.585 cv
185.806 297.585 187.149 296.242 187.149 294.585 cv
194.589 296.746 mo
194.589 295.089 193.246 293.746 191.589 293.746 cv
189.934 293.746 188.589 295.089 188.589 296.746 cv
188.589 298.402 189.934 299.746 191.589 299.746 cv
193.246 299.746 194.589 298.402 194.589 296.746 cv
202.509 299.145 mo
202.509 297.49 201.166 296.145 199.509 296.145 cv
197.854 296.145 196.509 297.49 196.509 299.145 cv
196.509 300.801 197.854 302.145 199.509 302.145 cv
201.166 302.145 202.509 300.801 202.509 299.145 cv
0 .4 0 rgb
@
202.509 299.625 mo
202.509 297.969 201.166 296.625 199.509 296.625 cv
197.854 296.625 196.509 297.969 196.509 299.625 cv
196.509 301.282 197.854 302.625 199.509 302.625 cv
201.166 302.625 202.509 301.282 202.509 299.625 cv
1 0 0 rgb
ef
194.589 299.385 mo
194.589 297.729 193.246 296.385 191.589 296.385 cv
189.934 296.385 188.589 297.729 188.589 299.385 cv
188.589 301.042 189.934 302.385 191.589 302.385 cv
193.246 302.385 194.589 301.042 194.589 299.385 cv
ef
187.149 298.666 mo
187.149 297.009 185.806 295.666 184.149 295.666 cv
182.494 295.666 181.149 297.009 181.149 298.666 cv
181.149 300.322 182.494 301.666 184.149 301.666 cv
185.806 301.666 187.149 300.322 187.149 298.666 cv
ef
179.709 297.946 mo
179.709 296.29 178.365 294.946 176.709 294.946 cv
175.053 294.946 173.709 296.29 173.709 297.946 cv
173.709 299.601 175.053 300.946 176.709 300.946 cv
178.365 300.946 179.709 299.601 179.709 297.946 cv
ef
172.27 296.505 mo
172.27 294.849 170.925 293.505 169.27 293.505 cv
167.613 293.505 166.27 294.849 166.27 296.505 cv
166.27 298.162 167.613 299.505 169.27 299.505 cv
170.925 299.505 172.27 298.162 172.27 296.505 cv
ef
164.589 295.305 mo
164.589 293.65 163.246 292.305 161.589 292.305 cv
159.934 292.305 158.589 293.65 158.589 295.305 cv
158.589 296.961 159.934 298.305 161.589 298.305 cv
163.246 298.305 164.589 296.961 164.589 295.305 cv
ef
156.91 293.866 mo
156.91 292.209 155.565 290.866 153.91 290.866 cv
152.253 290.866 150.91 292.209 150.91 293.866 cv
150.91 295.521 152.253 296.866 153.91 296.866 cv
155.565 296.866 156.91 295.521 156.91 293.866 cv
ef
149.469 291.946 mo
149.469 290.29 148.125 288.946 146.469 288.946 cv
144.813 288.946 143.469 290.29 143.469 291.946 cv
143.469 293.601 144.813 294.946 146.469 294.946 cv
148.125 294.946 149.469 293.601 149.469 291.946 cv
ef
142.029 289.066 mo
142.029 287.41 140.686 286.066 139.029 286.066 cv
137.374 286.066 136.029 287.41 136.029 289.066 cv
136.029 290.721 137.374 292.066 139.029 292.066 cv
140.686 292.066 142.029 290.721 142.029 289.066 cv
ef
134.35 285.585 mo
134.35 283.929 133.005 282.585 131.35 282.585 cv
129.693 282.585 128.35 283.929 128.35 285.585 cv
128.35 287.242 129.693 288.585 131.35 288.585 cv
133.005 288.585 134.35 287.242 134.35 285.585 cv
ef
126.669 282.345 mo
126.669 280.689 125.326 279.345 123.669 279.345 cv
122.014 279.345 120.669 280.689 120.669 282.345 cv
120.669 284.001 122.014 285.345 123.669 285.345 cv
125.326 285.345 126.669 284.001 126.669 282.345 cv
ef
119.229 278.026 mo
119.229 276.37 117.885 275.026 116.229 275.026 cv
114.573 275.026 113.229 276.37 113.229 278.026 cv
113.229 279.681 114.573 281.026 116.229 281.026 cv
117.885 281.026 119.229 279.681 119.229 278.026 cv
ef
111.79 273.585 mo
111.79 271.929 110.445 270.585 108.79 270.585 cv
107.133 270.585 105.79 271.929 105.79 273.585 cv
105.79 275.242 107.133 276.585 108.79 276.585 cv
110.445 276.585 111.79 275.242 111.79 273.585 cv
ef
104.109 268.906 mo
104.109 267.25 102.766 265.906 101.109 265.906 cv
99.4536 265.906 98.1094 267.25 98.1094 268.906 cv
98.1094 270.561 99.4536 271.906 101.109 271.906 cv
102.766 271.906 104.109 270.561 104.109 268.906 cv
ef
96.6694 263.145 mo
96.6694 261.49 95.3257 260.145 93.6694 260.145 cv
92.0137 260.145 90.6694 261.49 90.6694 263.145 cv
90.6694 264.801 92.0137 266.145 93.6694 266.145 cv
95.3257 266.145 96.6694 264.801 96.6694 263.145 cv
ef
88.9893 257.625 mo
88.9893 255.969 87.6455 254.625 85.9893 254.625 cv
84.3335 254.625 82.9893 255.969 82.9893 257.625 cv
82.9893 259.282 84.3335 260.625 85.9893 260.625 cv
87.6455 260.625 88.9893 259.282 88.9893 257.625 cv
ef
81.5493 252.826 mo
81.5493 251.169 80.2056 249.826 78.5493 249.826 cv
76.8936 249.826 75.5493 251.169 75.5493 252.826 cv
75.5493 254.482 76.8936 255.826 78.5493 255.826 cv
80.2056 255.826 81.5493 254.482 81.5493 252.826 cv
ef
73.8696 248.746 mo
73.8696 247.089 72.5254 245.746 70.8696 245.746 cv
69.2134 245.746 67.8696 247.089 67.8696 248.746 cv
67.8696 250.402 69.2134 251.746 70.8696 251.746 cv
72.5254 251.746 73.8696 250.402 73.8696 248.746 cv
ef
66.4297 246.585 mo
66.4297 244.929 65.0854 243.585 63.4297 243.585 cv
61.7734 243.585 60.4297 244.929 60.4297 246.585 cv
60.4297 248.242 61.7734 249.585 63.4297 249.585 cv
65.0854 249.585 66.4297 248.242 66.4297 246.585 cv
ef
58.9893 241.786 mo
58.9893 240.129 57.6455 238.786 55.9893 238.786 cv
54.3335 238.786 52.9893 240.129 52.9893 241.786 cv
52.9893 243.442 54.3335 244.786 55.9893 244.786 cv
57.6455 244.786 58.9893 243.442 58.9893 241.786 cv
ef
200.939 299.585 mo
202.439 299.585 li
@
202.564 306.272 mo
353.565 306.272 li
202.564 306.272 mo
202.564 208.772 li
353.565 208.772 li
353.565 306.272 li
202.564 306.272 li
cp
0 0 0 rgb
@
353.565 303.522 mo
353.565 306.272 li
349.815 304.772 mo
349.815 306.272 li
346.065 304.772 mo
346.065 306.272 li
342.065 304.772 mo
342.065 306.272 li
338.315 303.522 mo
338.315 306.272 li
334.565 304.772 mo
334.565 306.272 li
330.815 304.772 mo
330.815 306.272 li
327.065 304.772 mo
327.065 306.272 li
323.315 303.522 mo
323.315 306.272 li
319.565 304.772 mo
319.565 306.272 li
315.814 304.772 mo
315.814 306.272 li
312.064 304.772 mo
312.064 306.272 li
308.314 303.522 mo
308.314 306.272 li
304.314 304.772 mo
304.314 306.272 li
300.564 304.772 mo
300.564 306.272 li
296.814 304.772 mo
296.814 306.272 li
293.064 303.522 mo
293.064 306.272 li
289.314 304.772 mo
289.314 306.272 li
285.564 304.772 mo
285.564 306.272 li
281.814 304.772 mo
281.814 306.272 li
278.064 303.522 mo
278.064 306.272 li
274.314 304.772 mo
274.314 306.272 li
270.564 304.772 mo
270.564 306.272 li
266.564 304.772 mo
266.564 306.272 li
262.814 303.522 mo
262.814 306.272 li
259.064 304.772 mo
259.064 306.272 li
255.314 304.772 mo
255.314 306.272 li
251.564 304.772 mo
251.564 306.272 li
247.814 303.522 mo
247.814 306.272 li
244.064 304.772 mo
244.064 306.272 li
240.314 304.772 mo
240.314 306.272 li
236.564 304.772 mo
236.564 306.272 li
232.564 303.522 mo
232.564 306.272 li
228.814 304.772 mo
228.814 306.272 li
225.064 304.772 mo
225.064 306.272 li
221.314 304.772 mo
221.314 306.272 li
217.564 303.522 mo
217.564 306.272 li
213.814 304.772 mo
213.814 306.272 li
210.064 304.772 mo
210.064 306.272 li
206.314 304.772 mo
206.314 306.272 li
202.564 303.522 mo
202.564 306.272 li
@
202.564 306.272 mo
202.564 208.772 li
@
207.064 208.772 mo
202.564 208.772 li
204.814 305.022 mo
202.564 305.022 li
204.814 302.522 mo
202.564 302.522 li
207.064 299.772 mo
202.564 299.772 li
207.064 208.772 mo
202.564 208.772 li
204.814 211.522 mo
202.564 211.522 li
204.814 214.022 mo
202.564 214.022 li
204.814 216.772 mo
202.564 216.772 li
204.814 219.272 mo
202.564 219.272 li
207.064 221.772 mo
202.564 221.772 li
204.814 224.522 mo
202.564 224.522 li
204.814 227.022 mo
202.564 227.022 li
204.814 229.522 mo
202.564 229.522 li
204.814 232.272 mo
202.564 232.272 li
207.064 234.772 mo
202.564 234.772 li
204.814 237.522 mo
202.564 237.522 li
204.814 240.022 mo
202.564 240.022 li
204.814 242.522 mo
202.564 242.522 li
204.814 245.272 mo
202.564 245.272 li
207.064 247.772 mo
202.564 247.772 li
204.814 250.522 mo
202.564 250.522 li
204.814 253.022 mo
202.564 253.022 li
204.814 255.522 mo
202.564 255.522 li
204.814 258.272 mo
202.564 258.272 li
207.064 260.772 mo
202.564 260.772 li
204.814 263.522 mo
202.564 263.522 li
204.814 266.022 mo
202.564 266.022 li
204.814 268.522 mo
202.564 268.522 li
204.814 271.272 mo
202.564 271.272 li
207.064 273.772 mo
202.564 273.772 li
204.814 276.522 mo
202.564 276.522 li
204.814 279.022 mo
202.564 279.022 li
204.814 281.522 mo
202.564 281.522 li
204.814 284.272 mo
202.564 284.272 li
207.064 286.772 mo
202.564 286.772 li
204.814 289.522 mo
202.564 289.522 li
204.814 292.022 mo
202.564 292.022 li
204.814 294.522 mo
202.564 294.522 li
204.814 297.272 mo
202.564 297.272 li
207.064 299.772 mo
202.564 299.772 li
@
352.774 299.802 mo
352.774 298.146 351.43 296.802 349.774 296.802 cv
348.118 296.802 346.774 298.146 346.774 299.802 cv
346.774 301.458 348.118 302.802 349.774 302.802 cv
351.43 302.802 352.774 301.458 352.774 299.802 cv
1 0 0 rgb
ef
345.094 299.562 mo
345.094 297.906 343.75 296.562 342.094 296.562 cv
340.438 296.562 339.094 297.906 339.094 299.562 cv
339.094 301.218 340.438 302.562 342.094 302.562 cv
343.75 302.562 345.094 301.218 345.094 299.562 cv
ef
337.655 298.602 mo
337.655 296.946 336.311 295.602 334.655 295.602 cv
332.999 295.602 331.655 296.946 331.655 298.602 cv
331.655 300.258 332.999 301.602 334.655 301.602 cv
336.311 301.602 337.655 300.258 337.655 298.602 cv
ef
329.975 297.882 mo
329.975 296.226 328.631 294.882 326.975 294.882 cv
325.319 294.882 323.975 296.226 323.975 297.882 cv
323.975 299.538 325.319 300.882 326.975 300.882 cv
328.631 300.882 329.975 299.538 329.975 297.882 cv
ef
322.534 296.202 mo
322.534 294.546 321.19 293.202 319.534 293.202 cv
317.879 293.202 316.534 294.546 316.534 296.202 cv
316.534 297.858 317.879 299.202 319.534 299.202 cv
321.19 299.202 322.534 297.858 322.534 296.202 cv
ef
315.095 295.002 mo
315.095 293.346 313.75 292.002 312.095 292.002 cv
310.438 292.002 309.095 293.346 309.095 295.002 cv
309.095 296.658 310.438 298.002 312.095 298.002 cv
313.75 298.002 315.095 296.658 315.095 295.002 cv
ef
307.414 293.322 mo
307.414 291.666 306.07 290.322 304.414 290.322 cv
302.759 290.322 301.414 291.666 301.414 293.322 cv
301.414 294.978 302.759 296.322 304.414 296.322 cv
306.07 296.322 307.414 294.978 307.414 293.322 cv
ef
299.734 290.922 mo
299.734 289.266 298.391 287.922 296.734 287.922 cv
295.078 287.922 293.734 289.266 293.734 290.922 cv
293.734 292.578 295.078 293.922 296.734 293.922 cv
298.391 293.922 299.734 292.578 299.734 290.922 cv
ef
292.295 288.762 mo
292.295 287.106 290.95 285.762 289.295 285.762 cv
287.639 285.762 286.295 287.106 286.295 288.762 cv
286.295 290.418 287.639 291.762 289.295 291.762 cv
290.95 291.762 292.295 290.418 292.295 288.762 cv
ef
284.854 284.922 mo
284.854 283.266 283.511 281.922 281.854 281.922 cv
280.198 281.922 278.854 283.266 278.854 284.922 cv
278.854 286.578 280.198 287.922 281.854 287.922 cv
283.511 287.922 284.854 286.578 284.854 284.922 cv
ef
277.415 282.042 mo
277.415 280.386 276.07 279.042 274.415 279.042 cv
272.758 279.042 271.415 280.386 271.415 282.042 cv
271.415 283.698 272.758 285.042 274.415 285.042 cv
276.07 285.042 277.415 283.698 277.415 282.042 cv
ef
269.495 278.442 mo
269.495 276.786 268.15 275.442 266.495 275.442 cv
264.838 275.442 263.495 276.786 263.495 278.442 cv
263.495 280.098 264.838 281.442 266.495 281.442 cv
268.15 281.442 269.495 280.098 269.495 278.442 cv
ef
262.055 274.602 mo
262.055 272.946 260.71 271.602 259.055 271.602 cv
257.398 271.602 256.055 272.946 256.055 274.602 cv
256.055 276.258 257.398 277.602 259.055 277.602 cv
260.71 277.602 262.055 276.258 262.055 274.602 cv
ef
254.614 268.602 mo
254.614 266.946 253.271 265.602 251.614 265.602 cv
249.958 265.602 248.614 266.946 248.614 268.602 cv
248.614 270.258 249.958 271.602 251.614 271.602 cv
253.271 271.602 254.614 270.258 254.614 268.602 cv
ef
247.174 264.042 mo
247.174 262.386 245.831 261.042 244.174 261.042 cv
242.519 261.042 241.174 262.386 241.174 264.042 cv
241.174 265.698 242.519 267.042 244.174 267.042 cv
245.831 267.042 247.174 265.698 247.174 264.042 cv
ef
239.495 260.202 mo
239.495 258.546 238.15 257.202 236.495 257.202 cv
234.838 257.202 233.495 258.546 233.495 260.202 cv
233.495 261.858 234.838 263.202 236.495 263.202 cv
238.15 263.202 239.495 261.858 239.495 260.202 cv
ef
231.814 254.442 mo
231.814 252.786 230.471 251.442 228.814 251.442 cv
227.158 251.442 225.814 252.786 225.814 254.442 cv
225.814 256.098 227.158 257.442 228.814 257.442 cv
230.471 257.442 231.814 256.098 231.814 254.442 cv
ef
224.375 251.082 mo
224.375 249.426 223.03 248.082 221.375 248.082 cv
219.718 248.082 218.375 249.426 218.375 251.082 cv
218.375 252.738 219.718 254.082 221.375 254.082 cv
223.03 254.082 224.375 252.738 224.375 251.082 cv
ef
216.694 249.162 mo
216.694 247.506 215.351 246.162 213.694 246.162 cv
212.039 246.162 210.694 247.506 210.694 249.162 cv
210.694 250.818 212.039 252.162 213.694 252.162 cv
215.351 252.162 216.694 250.818 216.694 249.162 cv
ef
209.254 245.322 mo
209.254 243.666 207.911 242.322 206.254 242.322 cv
204.599 242.322 203.254 243.666 203.254 245.322 cv
203.254 246.978 204.599 248.322 206.254 248.322 cv
207.911 248.322 209.254 246.978 209.254 245.322 cv
ef
351.315 299.272 mo
352.815 299.272 li
@
202.564 299.772 mo
353.565 299.772 li
0 0 0 rgb
@
349.815 297.522 mo
347.565 297.522 li
347.565 302.022 li
352.065 302.022 li
352.065 297.522 li
349.815 297.522 li
cp
0 0 1 rgb
ef
342.065 297.522 mo
339.815 297.522 li
339.815 302.022 li
344.315 302.022 li
344.315 297.522 li
342.065 297.522 li
cp
ef
334.565 297.522 mo
332.315 297.522 li
332.315 302.022 li
336.815 302.022 li
336.815 297.522 li
334.565 297.522 li
cp
ef
327.065 297.772 mo
324.815 297.772 li
324.815 302.272 li
329.315 302.272 li
329.315 297.772 li
327.065 297.772 li
cp
ef
319.565 297.772 mo
317.314 297.772 li
317.314 302.272 li
321.815 302.272 li
321.815 297.772 li
319.565 297.772 li
cp
ef
312.064 297.272 mo
309.814 297.272 li
309.814 301.772 li
314.314 301.772 li
314.314 297.272 li
312.064 297.272 li
cp
ef
304.314 297.772 mo
302.064 297.772 li
302.064 302.272 li
306.564 302.272 li
306.564 297.772 li
304.314 297.772 li
cp
ef
296.814 297.772 mo
294.564 297.772 li
294.564 302.272 li
299.064 302.272 li
299.064 297.772 li
296.814 297.772 li
cp
ef
289.314 297.772 mo
287.064 297.772 li
287.064 302.272 li
291.564 302.272 li
291.564 297.772 li
289.314 297.772 li
cp
ef
281.814 297.022 mo
279.564 297.022 li
279.564 301.522 li
284.064 301.522 li
284.064 297.022 li
281.814 297.022 li
cp
ef
274.314 297.772 mo
272.064 297.772 li
272.064 302.272 li
276.564 302.272 li
276.564 297.772 li
274.314 297.772 li
cp
ef
266.564 297.522 mo
264.314 297.522 li
264.314 302.022 li
268.814 302.022 li
268.814 297.522 li
266.564 297.522 li
cp
ef
259.064 297.522 mo
256.814 297.522 li
256.814 302.022 li
261.314 302.022 li
261.314 297.522 li
259.064 297.522 li
cp
ef
251.564 297.522 mo
249.314 297.522 li
249.314 302.022 li
253.814 302.022 li
253.814 297.522 li
251.564 297.522 li
cp
ef
244.064 297.522 mo
241.814 297.522 li
241.814 302.022 li
246.314 302.022 li
246.314 297.522 li
244.064 297.522 li
cp
ef
236.564 297.772 mo
234.314 297.772 li
234.314 302.272 li
238.814 302.272 li
238.814 297.772 li
236.564 297.772 li
cp
ef
228.814 298.272 mo
226.564 298.272 li
226.564 302.772 li
231.064 302.772 li
231.064 298.272 li
228.814 298.272 li
cp
ef
221.314 297.272 mo
219.064 297.272 li
219.064 301.772 li
223.564 301.772 li
223.564 297.272 li
221.314 297.272 li
cp
ef
213.814 297.772 mo
211.564 297.772 li
211.564 302.272 li
216.064 302.272 li
216.064 297.772 li
213.814 297.772 li
cp
ef
206.314 297.022 mo
204.064 297.022 li
204.064 301.522 li
208.564 301.522 li
208.564 297.022 li
206.314 297.022 li
cp
ef
209.254 258.282 mo
209.254 256.625 207.911 255.282 206.254 255.282 cv
204.599 255.282 203.254 256.625 203.254 258.282 cv
203.254 259.938 204.599 261.282 206.254 261.282 cv
207.911 261.282 209.254 259.938 209.254 258.282 cv
216.694 261.162 mo
216.694 259.506 215.351 258.162 213.694 258.162 cv
212.039 258.162 210.694 259.506 210.694 261.162 cv
210.694 262.818 212.039 264.162 213.694 264.162 cv
215.351 264.162 216.694 262.818 216.694 261.162 cv
224.375 262.362 mo
224.375 260.706 223.03 259.362 221.375 259.362 cv
219.718 259.362 218.375 260.706 218.375 262.362 cv
218.375 264.018 219.718 265.362 221.375 265.362 cv
223.03 265.362 224.375 264.018 224.375 262.362 cv
231.814 265.242 mo
231.814 263.586 230.471 262.242 228.814 262.242 cv
227.158 262.242 225.814 263.586 225.814 265.242 cv
225.814 266.898 227.158 268.242 228.814 268.242 cv
230.471 268.242 231.814 266.898 231.814 265.242 cv
239.495 266.922 mo
239.495 265.266 238.15 263.922 236.495 263.922 cv
234.838 263.922 233.495 265.266 233.495 266.922 cv
233.495 268.578 234.838 269.922 236.495 269.922 cv
238.15 269.922 239.495 268.578 239.495 266.922 cv
247.174 269.322 mo
247.174 267.666 245.831 266.322 244.174 266.322 cv
242.519 266.322 241.174 267.666 241.174 269.322 cv
241.174 270.978 242.519 272.322 244.174 272.322 cv
245.831 272.322 247.174 270.978 247.174 269.322 cv
254.614 271.242 mo
254.614 269.586 253.271 268.242 251.614 268.242 cv
249.958 268.242 248.614 269.586 248.614 271.242 cv
248.614 272.898 249.958 274.242 251.614 274.242 cv
253.271 274.242 254.614 272.898 254.614 271.242 cv
262.055 272.922 mo
262.055 271.266 260.71 269.922 259.055 269.922 cv
257.398 269.922 256.055 271.266 256.055 272.922 cv
256.055 274.578 257.398 275.922 259.055 275.922 cv
260.71 275.922 262.055 274.578 262.055 272.922 cv
269.495 275.802 mo
269.495 274.146 268.15 272.802 266.495 272.802 cv
264.838 272.802 263.495 274.146 263.495 275.802 cv
263.495 277.458 264.838 278.802 266.495 278.802 cv
268.15 278.802 269.495 277.458 269.495 275.802 cv
277.415 277.242 mo
277.415 275.586 276.07 274.242 274.415 274.242 cv
272.758 274.242 271.415 275.586 271.415 277.242 cv
271.415 278.898 272.758 280.242 274.415 280.242 cv
276.07 280.242 277.415 278.898 277.415 277.242 cv
284.854 280.122 mo
284.854 278.466 283.511 277.122 281.854 277.122 cv
280.198 277.122 278.854 278.466 278.854 280.122 cv
278.854 281.778 280.198 283.122 281.854 283.122 cv
283.511 283.122 284.854 281.778 284.854 280.122 cv
292.295 281.322 mo
292.295 279.666 290.95 278.322 289.295 278.322 cv
287.639 278.322 286.295 279.666 286.295 281.322 cv
286.295 282.978 287.639 284.322 289.295 284.322 cv
290.95 284.322 292.295 282.978 292.295 281.322 cv
299.734 283.722 mo
299.734 282.066 298.391 280.722 296.734 280.722 cv
295.078 280.722 293.734 282.066 293.734 283.722 cv
293.734 285.378 295.078 286.722 296.734 286.722 cv
298.391 286.722 299.734 285.378 299.734 283.722 cv
307.414 285.882 mo
307.414 284.226 306.07 282.882 304.414 282.882 cv
302.759 282.882 301.414 284.226 301.414 285.882 cv
301.414 287.538 302.759 288.882 304.414 288.882 cv
306.07 288.882 307.414 287.538 307.414 285.882 cv
315.095 288.282 mo
315.095 286.625 313.75 285.282 312.095 285.282 cv
310.438 285.282 309.095 286.625 309.095 288.282 cv
309.095 289.938 310.438 291.282 312.095 291.282 cv
313.75 291.282 315.095 289.938 315.095 288.282 cv
322.534 289.962 mo
322.534 288.306 321.19 286.962 319.534 286.962 cv
317.879 286.962 316.534 288.306 316.534 289.962 cv
316.534 291.618 317.879 292.962 319.534 292.962 cv
321.19 292.962 322.534 291.618 322.534 289.962 cv
329.975 292.362 mo
329.975 290.706 328.631 289.362 326.975 289.362 cv
325.319 289.362 323.975 290.706 323.975 292.362 cv
323.975 294.018 325.319 295.362 326.975 295.362 cv
328.631 295.362 329.975 294.018 329.975 292.362 cv
337.655 294.762 mo
337.655 293.106 336.311 291.762 334.655 291.762 cv
332.999 291.762 331.655 293.106 331.655 294.762 cv
331.655 296.418 332.999 297.762 334.655 297.762 cv
336.311 297.762 337.655 296.418 337.655 294.762 cv
345.094 296.682 mo
345.094 295.026 343.75 293.682 342.094 293.682 cv
340.438 293.682 339.094 295.026 339.094 296.682 cv
339.094 298.338 340.438 299.682 342.094 299.682 cv
343.75 299.682 345.094 298.338 345.094 296.682 cv
352.774 299.082 mo
352.774 297.426 351.43 296.082 349.774 296.082 cv
348.118 296.082 346.774 297.426 346.774 299.082 cv
346.774 300.738 348.118 302.082 349.774 302.082 cv
351.43 302.082 352.774 300.738 352.774 299.082 cv
0 .4 0 rgb
@
352.774 299.802 mo
352.774 298.146 351.43 296.802 349.774 296.802 cv
348.118 296.802 346.774 298.146 346.774 299.802 cv
346.774 301.458 348.118 302.802 349.774 302.802 cv
351.43 302.802 352.774 301.458 352.774 299.802 cv
1 0 0 rgb
ef
345.094 299.562 mo
345.094 297.906 343.75 296.562 342.094 296.562 cv
340.438 296.562 339.094 297.906 339.094 299.562 cv
339.094 301.218 340.438 302.562 342.094 302.562 cv
343.75 302.562 345.094 301.218 345.094 299.562 cv
ef
337.655 298.602 mo
337.655 296.946 336.311 295.602 334.655 295.602 cv
332.999 295.602 331.655 296.946 331.655 298.602 cv
331.655 300.258 332.999 301.602 334.655 301.602 cv
336.311 301.602 337.655 300.258 337.655 298.602 cv
ef
329.975 297.882 mo
329.975 296.226 328.631 294.882 326.975 294.882 cv
325.319 294.882 323.975 296.226 323.975 297.882 cv
323.975 299.538 325.319 300.882 326.975 300.882 cv
328.631 300.882 329.975 299.538 329.975 297.882 cv
ef
322.534 296.202 mo
322.534 294.546 321.19 293.202 319.534 293.202 cv
317.879 293.202 316.534 294.546 316.534 296.202 cv
316.534 297.858 317.879 299.202 319.534 299.202 cv
321.19 299.202 322.534 297.858 322.534 296.202 cv
ef
315.095 295.002 mo
315.095 293.346 313.75 292.002 312.095 292.002 cv
310.438 292.002 309.095 293.346 309.095 295.002 cv
309.095 296.658 310.438 298.002 312.095 298.002 cv
313.75 298.002 315.095 296.658 315.095 295.002 cv
ef
307.414 293.322 mo
307.414 291.666 306.07 290.322 304.414 290.322 cv
302.759 290.322 301.414 291.666 301.414 293.322 cv
301.414 294.978 302.759 296.322 304.414 296.322 cv
306.07 296.322 307.414 294.978 307.414 293.322 cv
ef
299.734 290.922 mo
299.734 289.266 298.391 287.922 296.734 287.922 cv
295.078 287.922 293.734 289.266 293.734 290.922 cv
293.734 292.578 295.078 293.922 296.734 293.922 cv
298.391 293.922 299.734 292.578 299.734 290.922 cv
ef
292.295 288.762 mo
292.295 287.106 290.95 285.762 289.295 285.762 cv
287.639 285.762 286.295 287.106 286.295 288.762 cv
286.295 290.418 287.639 291.762 289.295 291.762 cv
290.95 291.762 292.295 290.418 292.295 288.762 cv
ef
284.854 284.922 mo
284.854 283.266 283.511 281.922 281.854 281.922 cv
280.198 281.922 278.854 283.266 278.854 284.922 cv
278.854 286.578 280.198 287.922 281.854 287.922 cv
283.511 287.922 284.854 286.578 284.854 284.922 cv
ef
277.415 282.042 mo
277.415 280.386 276.07 279.042 274.415 279.042 cv
272.758 279.042 271.415 280.386 271.415 282.042 cv
271.415 283.698 272.758 285.042 274.415 285.042 cv
276.07 285.042 277.415 283.698 277.415 282.042 cv
ef
269.495 278.442 mo
269.495 276.786 268.15 275.442 266.495 275.442 cv
264.838 275.442 263.495 276.786 263.495 278.442 cv
263.495 280.098 264.838 281.442 266.495 281.442 cv
268.15 281.442 269.495 280.098 269.495 278.442 cv
ef
262.055 274.602 mo
262.055 272.946 260.71 271.602 259.055 271.602 cv
257.398 271.602 256.055 272.946 256.055 274.602 cv
256.055 276.258 257.398 277.602 259.055 277.602 cv
260.71 277.602 262.055 276.258 262.055 274.602 cv
ef
254.614 268.602 mo
254.614 266.946 253.271 265.602 251.614 265.602 cv
249.958 265.602 248.614 266.946 248.614 268.602 cv
248.614 270.258 249.958 271.602 251.614 271.602 cv
253.271 271.602 254.614 270.258 254.614 268.602 cv
ef
247.174 264.042 mo
247.174 262.386 245.831 261.042 244.174 261.042 cv
242.519 261.042 241.174 262.386 241.174 264.042 cv
241.174 265.698 242.519 267.042 244.174 267.042 cv
245.831 267.042 247.174 265.698 247.174 264.042 cv
ef
239.495 260.202 mo
239.495 258.546 238.15 257.202 236.495 257.202 cv
234.838 257.202 233.495 258.546 233.495 260.202 cv
233.495 261.858 234.838 263.202 236.495 263.202 cv
238.15 263.202 239.495 261.858 239.495 260.202 cv
ef
231.814 254.442 mo
231.814 252.786 230.471 251.442 228.814 251.442 cv
227.158 251.442 225.814 252.786 225.814 254.442 cv
225.814 256.098 227.158 257.442 228.814 257.442 cv
230.471 257.442 231.814 256.098 231.814 254.442 cv
ef
224.375 251.082 mo
224.375 249.426 223.03 248.082 221.375 248.082 cv
219.718 248.082 218.375 249.426 218.375 251.082 cv
218.375 252.738 219.718 254.082 221.375 254.082 cv
223.03 254.082 224.375 252.738 224.375 251.082 cv
ef
216.694 249.162 mo
216.694 247.506 215.351 246.162 213.694 246.162 cv
212.039 246.162 210.694 247.506 210.694 249.162 cv
210.694 250.818 212.039 252.162 213.694 252.162 cv
215.351 252.162 216.694 250.818 216.694 249.162 cv
ef
209.254 245.322 mo
209.254 243.666 207.911 242.322 206.254 242.322 cv
204.599 242.322 203.254 243.666 203.254 245.322 cv
203.254 246.978 204.599 248.322 206.254 248.322 cv
207.911 248.322 209.254 246.978 209.254 245.322 cv
ef
351.315 299.272 mo
352.815 299.272 li
@
353.499 306.183 mo
504.999 306.183 li
353.499 306.183 mo
353.499 208.683 li
504.999 208.683 li
504.999 306.183 li
353.499 306.183 li
cp
0 0 0 rgb
@
504.999 303.433 mo
504.999 306.183 li
501.249 304.683 mo
501.249 306.183 li
497.499 304.683 mo
497.499 306.183 li
493.749 304.683 mo
493.749 306.183 li
489.749 303.433 mo
489.749 306.183 li
485.999 304.683 mo
485.999 306.183 li
482.249 304.683 mo
482.249 306.183 li
478.499 304.683 mo
478.499 306.183 li
474.749 303.433 mo
474.749 306.183 li
470.999 304.683 mo
470.999 306.183 li
466.999 304.683 mo
466.999 306.183 li
463.249 304.683 mo
463.249 306.183 li
459.499 303.433 mo
459.499 306.183 li
455.749 304.683 mo
455.749 306.183 li
451.999 304.683 mo
451.999 306.183 li
448.249 304.683 mo
448.249 306.183 li
444.499 303.433 mo
444.499 306.183 li
440.499 304.683 mo
440.499 306.183 li
436.749 304.683 mo
436.749 306.183 li
432.999 304.683 mo
432.999 306.183 li
429.249 303.433 mo
429.249 306.183 li
425.499 304.683 mo
425.499 306.183 li
421.749 304.683 mo
421.749 306.183 li
417.999 304.683 mo
417.999 306.183 li
413.999 303.433 mo
413.999 306.183 li
410.249 304.683 mo
410.249 306.183 li
406.499 304.683 mo
406.499 306.183 li
402.749 304.683 mo
402.749 306.183 li
398.999 303.433 mo
398.999 306.183 li
395.249 304.683 mo
395.249 306.183 li
391.499 304.683 mo
391.499 306.183 li
387.499 304.683 mo
387.499 306.183 li
383.749 303.433 mo
383.749 306.183 li
379.999 304.683 mo
379.999 306.183 li
376.249 304.683 mo
376.249 306.183 li
372.499 304.683 mo
372.499 306.183 li
368.749 303.433 mo
368.749 306.183 li
364.749 304.683 mo
364.749 306.183 li
360.999 304.683 mo
360.999 306.183 li
357.249 304.683 mo
357.249 306.183 li
353.499 303.433 mo
353.499 306.183 li
@
353.499 306.183 mo
353.499 208.683 li
@
357.999 208.683 mo
353.499 208.683 li
355.749 304.933 mo
353.499 304.933 li
355.749 302.433 mo
353.499 302.433 li
357.999 299.683 mo
353.499 299.683 li
357.999 208.683 mo
353.499 208.683 li
355.749 211.433 mo
353.499 211.433 li
355.749 213.933 mo
353.499 213.933 li
355.749 216.683 mo
353.499 216.683 li
355.749 219.183 mo
353.499 219.183 li
357.999 221.683 mo
353.499 221.683 li
355.749 224.433 mo
353.499 224.433 li
355.749 226.933 mo
353.499 226.933 li
355.749 229.433 mo
353.499 229.433 li
355.749 232.183 mo
353.499 232.183 li
357.999 234.683 mo
353.499 234.683 li
355.749 237.433 mo
353.499 237.433 li
355.749 239.933 mo
353.499 239.933 li
355.749 242.433 mo
353.499 242.433 li
355.749 245.183 mo
353.499 245.183 li
357.999 247.683 mo
353.499 247.683 li
355.749 250.433 mo
353.499 250.433 li
355.749 252.933 mo
353.499 252.933 li
355.749 255.433 mo
353.499 255.433 li
355.749 258.183 mo
353.499 258.183 li
357.999 260.683 mo
353.499 260.683 li
355.749 263.433 mo
353.499 263.433 li
355.749 265.933 mo
353.499 265.933 li
355.749 268.433 mo
353.499 268.433 li
355.749 271.183 mo
353.499 271.183 li
357.999 273.683 mo
353.499 273.683 li
355.749 276.433 mo
353.499 276.433 li
355.749 278.933 mo
353.499 278.933 li
355.749 281.433 mo
353.499 281.433 li
355.749 284.183 mo
353.499 284.183 li
357.999 286.683 mo
353.499 286.683 li
355.749 289.433 mo
353.499 289.433 li
355.749 291.933 mo
353.499 291.933 li
355.749 294.433 mo
353.499 294.433 li
355.749 297.183 mo
353.499 297.183 li
357.999 299.683 mo
353.499 299.683 li
@
504.319 299.713 mo
504.319 298.057 502.975 296.713 501.319 296.713 cv
499.663 296.713 498.319 298.057 498.319 299.713 cv
498.319 301.369 499.663 302.713 501.319 302.713 cv
502.975 302.713 504.319 301.369 504.319 299.713 cv
1 0 0 rgb
ef
496.639 298.993 mo
496.639 297.337 495.295 295.993 493.639 295.993 cv
491.983 295.993 490.639 297.337 490.639 298.993 cv
490.639 300.649 491.983 301.993 493.639 301.993 cv
495.295 301.993 496.639 300.649 496.639 298.993 cv
ef
488.959 298.273 mo
488.959 296.617 487.616 295.273 485.959 295.273 cv
484.303 295.273 482.959 296.617 482.959 298.273 cv
482.959 299.929 484.303 301.273 485.959 301.273 cv
487.616 301.273 488.959 299.929 488.959 298.273 cv
ef
481.518 297.073 mo
481.518 295.417 480.174 294.073 478.518 294.073 cv
476.864 294.073 475.518 295.417 475.518 297.073 cv
475.518 298.729 476.864 300.073 478.518 300.073 cv
480.174 300.073 481.518 298.729 481.518 297.073 cv
ef
474.079 295.153 mo
474.079 293.498 472.735 292.153 471.079 292.153 cv
469.422 292.153 468.079 293.498 468.079 295.153 cv
468.079 296.809 469.422 298.153 471.079 298.153 cv
472.735 298.153 474.079 296.809 474.079 295.153 cv
ef
466.159 294.673 mo
466.159 293.017 464.815 291.673 463.159 291.673 cv
461.502 291.673 460.159 293.017 460.159 294.673 cv
460.159 296.33 461.502 297.673 463.159 297.673 cv
464.815 297.673 466.159 296.33 466.159 294.673 cv
ef
458.719 293.713 mo
458.719 292.057 457.375 290.713 455.719 290.713 cv
454.063 290.713 452.719 292.057 452.719 293.713 cv
452.719 295.369 454.063 296.713 455.719 296.713 cv
457.375 296.713 458.719 295.369 458.719 293.713 cv
ef
451.28 290.593 mo
451.28 288.937 449.934 287.593 448.28 287.593 cv
446.624 287.593 445.28 288.937 445.28 290.593 cv
445.28 292.25 446.624 293.593 448.28 293.593 cv
449.934 293.593 451.28 292.25 451.28 290.593 cv
ef
443.598 288.433 mo
443.598 286.777 442.254 285.433 440.598 285.433 cv
438.944 285.433 437.598 286.777 437.598 288.433 cv
437.598 290.089 438.944 291.433 440.598 291.433 cv
442.254 291.433 443.598 290.089 443.598 288.433 cv
ef
435.918 285.073 mo
435.918 283.417 434.575 282.073 432.918 282.073 cv
431.262 282.073 429.918 283.417 429.918 285.073 cv
429.918 286.729 431.262 288.073 432.918 288.073 cv
434.575 288.073 435.918 286.729 435.918 285.073 cv
ef
428.479 281.953 mo
428.479 280.297 427.135 278.953 425.479 278.953 cv
423.823 278.953 422.479 280.297 422.479 281.953 cv
422.479 283.609 423.823 284.953 425.479 284.953 cv
427.135 284.953 428.479 283.609 428.479 281.953 cv
ef
421.04 278.833 mo
421.04 277.177 419.696 275.833 418.04 275.833 cv
416.383 275.833 415.04 277.177 415.04 278.833 cv
415.04 280.489 416.383 281.833 418.04 281.833 cv
419.696 281.833 421.04 280.489 421.04 278.833 cv
ef
413.36 274.753 mo
413.36 273.097 412.014 271.753 410.36 271.753 cv
408.704 271.753 407.36 273.097 407.36 274.753 cv
407.36 276.409 408.704 277.753 410.36 277.753 cv
412.014 277.753 413.36 276.409 413.36 274.753 cv
ef
405.678 269.473 mo
405.678 267.817 404.334 266.473 402.678 266.473 cv
401.024 266.473 399.678 267.817 399.678 269.473 cv
399.678 271.129 401.024 272.473 402.678 272.473 cv
404.334 272.473 405.678 271.129 405.678 269.473 cv
ef
398.239 266.353 mo
398.239 264.697 396.895 263.353 395.239 263.353 cv
393.583 263.353 392.239 264.697 392.239 266.353 cv
392.239 268.009 393.583 269.353 395.239 269.353 cv
396.895 269.353 398.239 268.009 398.239 266.353 cv
ef
390.559 261.433 mo
390.559 259.777 389.215 258.433 387.559 258.433 cv
385.903 258.433 384.559 259.777 384.559 261.433 cv
384.559 263.089 385.903 264.433 387.559 264.433 cv
389.215 264.433 390.559 263.089 390.559 261.433 cv
ef
382.879 257.953 mo
382.879 256.297 381.536 254.953 379.879 254.953 cv
378.223 254.953 376.879 256.297 376.879 257.953 cv
376.879 259.609 378.223 260.953 379.879 260.953 cv
381.536 260.953 382.879 259.609 382.879 257.953 cv
ef
375.44 255.433 mo
375.44 253.777 374.094 252.433 372.44 252.433 cv
370.784 252.433 369.44 253.777 369.44 255.433 cv
369.44 257.089 370.784 258.433 372.44 258.433 cv
374.094 258.433 375.44 257.089 375.44 255.433 cv
ef
367.758 252.433 mo
367.758 250.777 366.415 249.433 364.758 249.433 cv
363.102 249.433 361.758 250.777 361.758 252.433 cv
361.758 254.089 363.102 255.433 364.758 255.433 cv
366.415 255.433 367.758 254.089 367.758 252.433 cv
ef
360.319 248.113 mo
360.319 246.458 358.975 245.113 357.319 245.113 cv
355.663 245.113 354.319 246.458 354.319 248.113 cv
354.319 249.769 355.663 251.113 357.319 251.113 cv
358.975 251.113 360.319 249.769 360.319 248.113 cv
ef
502.749 299.183 mo
504.249 299.183 li
361.749 252.433 mo
363.249 252.683 li
364.749 252.933 li
365.999 253.433 li
367.499 253.683 li
@
353.499 299.683 mo
504.999 299.683 li
0 0 0 rgb
@
501.249 297.433 mo
498.999 297.433 li
498.999 301.933 li
503.499 301.933 li
503.499 297.433 li
501.249 297.433 li
cp
0 0 1 rgb
ef
493.749 297.433 mo
491.499 297.433 li
491.499 301.933 li
495.999 301.933 li
495.999 297.433 li
493.749 297.433 li
cp
ef
485.999 297.183 mo
483.749 297.183 li
483.749 301.683 li
488.249 301.683 li
488.249 297.183 li
485.999 297.183 li
cp
ef
478.499 297.683 mo
476.249 297.683 li
476.249 302.183 li
480.749 302.183 li
480.749 297.683 li
478.499 297.683 li
cp
ef
470.999 297.183 mo
468.749 297.183 li
468.749 301.683 li
473.249 301.683 li
473.249 297.183 li
470.999 297.183 li
cp
ef
463.249 297.683 mo
460.999 297.683 li
460.999 302.183 li
465.499 302.183 li
465.499 297.683 li
463.249 297.683 li
cp
ef
455.749 297.433 mo
453.499 297.433 li
453.499 301.933 li
457.999 301.933 li
457.999 297.433 li
455.749 297.433 li
cp
ef
448.249 297.433 mo
445.999 297.433 li
445.999 301.933 li
450.499 301.933 li
450.499 297.433 li
448.249 297.433 li
cp
ef
440.499 297.933 mo
438.249 297.933 li
438.249 302.433 li
442.749 302.433 li
442.749 297.933 li
440.499 297.933 li
cp
ef
432.999 297.433 mo
430.749 297.433 li
430.749 301.933 li
435.249 301.933 li
435.249 297.433 li
432.999 297.433 li
cp
ef
425.499 297.683 mo
423.249 297.683 li
423.249 302.183 li
427.749 302.183 li
427.749 297.683 li
425.499 297.683 li
cp
ef
417.999 297.433 mo
415.749 297.433 li
415.749 301.933 li
420.249 301.933 li
420.249 297.433 li
417.999 297.433 li
cp
ef
410.249 297.933 mo
407.999 297.933 li
407.999 302.433 li
412.499 302.433 li
412.499 297.933 li
410.249 297.933 li
cp
ef
402.749 298.683 mo
400.499 298.683 li
400.499 303.183 li
404.999 303.183 li
404.999 298.683 li
402.749 298.683 li
cp
ef
395.249 296.683 mo
392.999 296.683 li
392.999 301.183 li
397.499 301.183 li
397.499 296.683 li
395.249 296.683 li
cp
ef
387.499 297.433 mo
385.249 297.433 li
385.249 301.933 li
389.749 301.933 li
389.749 297.433 li
387.499 297.433 li
cp
ef
379.999 297.683 mo
377.749 297.683 li
377.749 302.183 li
382.249 302.183 li
382.249 297.683 li
379.999 297.683 li
cp
ef
372.499 296.933 mo
370.249 296.933 li
370.249 301.433 li
374.749 301.433 li
374.749 296.933 li
372.499 296.933 li
cp
ef
364.749 298.183 mo
362.499 298.183 li
362.499 302.683 li
366.999 302.683 li
366.999 298.183 li
364.749 298.183 li
cp
ef
357.249 296.933 mo
354.999 296.933 li
354.999 301.433 li
359.499 301.433 li
359.499 296.933 li
357.249 296.933 li
cp
ef
360.319 260.833 mo
360.319 259.177 358.975 257.833 357.319 257.833 cv
355.663 257.833 354.319 259.177 354.319 260.833 cv
354.319 262.489 355.663 263.833 357.319 263.833 cv
358.975 263.833 360.319 262.489 360.319 260.833 cv
367.758 262.273 mo
367.758 260.617 366.415 259.273 364.758 259.273 cv
363.102 259.273 361.758 260.617 361.758 262.273 cv
361.758 263.929 363.102 265.273 364.758 265.273 cv
366.415 265.273 367.758 263.929 367.758 262.273 cv
375.44 264.193 mo
375.44 262.537 374.094 261.193 372.44 261.193 cv
370.784 261.193 369.44 262.537 369.44 264.193 cv
369.44 265.849 370.784 267.193 372.44 267.193 cv
374.094 267.193 375.44 265.849 375.44 264.193 cv
382.879 266.833 mo
382.879 265.177 381.536 263.833 379.879 263.833 cv
378.223 263.833 376.879 265.177 376.879 266.833 cv
376.879 268.489 378.223 269.833 379.879 269.833 cv
381.536 269.833 382.879 268.489 382.879 266.833 cv
390.559 268.033 mo
390.559 266.377 389.215 265.033 387.559 265.033 cv
385.903 265.033 384.559 266.377 384.559 268.033 cv
384.559 269.689 385.903 271.033 387.559 271.033 cv
389.215 271.033 390.559 269.689 390.559 268.033 cv
398.239 270.673 mo
398.239 269.017 396.895 267.673 395.239 267.673 cv
393.583 267.673 392.239 269.017 392.239 270.673 cv
392.239 272.33 393.583 273.673 395.239 273.673 cv
396.895 273.673 398.239 272.33 398.239 270.673 cv
405.678 272.353 mo
405.678 270.697 404.334 269.353 402.678 269.353 cv
401.024 269.353 399.678 270.697 399.678 272.353 cv
399.678 274.009 401.024 275.353 402.678 275.353 cv
404.334 275.353 405.678 274.009 405.678 272.353 cv
413.36 275.233 mo
413.36 273.577 412.014 272.233 410.36 272.233 cv
408.704 272.233 407.36 273.577 407.36 275.233 cv
407.36 276.889 408.704 278.233 410.36 278.233 cv
412.014 278.233 413.36 276.889 413.36 275.233 cv
421.04 276.673 mo
421.04 275.017 419.696 273.673 418.04 273.673 cv
416.383 273.673 415.04 275.017 415.04 276.673 cv
415.04 278.33 416.383 279.673 418.04 279.673 cv
419.696 279.673 421.04 278.33 421.04 276.673 cv
428.479 277.874 mo
428.479 276.217 427.135 274.874 425.479 274.874 cv
423.823 274.874 422.479 276.217 422.479 277.874 cv
422.479 279.529 423.823 280.874 425.479 280.874 cv
427.135 280.874 428.479 279.529 428.479 277.874 cv
435.918 280.273 mo
435.918 278.617 434.575 277.273 432.918 277.273 cv
431.262 277.273 429.918 278.617 429.918 280.273 cv
429.918 281.929 431.262 283.273 432.918 283.273 cv
434.575 283.273 435.918 281.929 435.918 280.273 cv
443.598 281.953 mo
443.598 280.297 442.254 278.953 440.598 278.953 cv
438.944 278.953 437.598 280.297 437.598 281.953 cv
437.598 283.609 438.944 284.953 440.598 284.953 cv
442.254 284.953 443.598 283.609 443.598 281.953 cv
451.28 284.353 mo
451.28 282.697 449.934 281.353 448.28 281.353 cv
446.624 281.353 445.28 282.697 445.28 284.353 cv
445.28 286.009 446.624 287.353 448.28 287.353 cv
449.934 287.353 451.28 286.009 451.28 284.353 cv
458.719 286.513 mo
458.719 284.857 457.375 283.513 455.719 283.513 cv
454.063 283.513 452.719 284.857 452.719 286.513 cv
452.719 288.169 454.063 289.513 455.719 289.513 cv
457.375 289.513 458.719 288.169 458.719 286.513 cv
466.159 288.433 mo
466.159 286.777 464.815 285.433 463.159 285.433 cv
461.502 285.433 460.159 286.777 460.159 288.433 cv
460.159 290.089 461.502 291.433 463.159 291.433 cv
464.815 291.433 466.159 290.089 466.159 288.433 cv
474.079 290.113 mo
474.079 288.458 472.735 287.113 471.079 287.113 cv
469.422 287.113 468.079 288.458 468.079 290.113 cv
468.079 291.769 469.422 293.113 471.079 293.113 cv
472.735 293.113 474.079 291.769 474.079 290.113 cv
481.518 292.033 mo
481.518 290.377 480.174 289.033 478.518 289.033 cv
476.864 289.033 475.518 290.377 475.518 292.033 cv
475.518 293.689 476.864 295.033 478.518 295.033 cv
480.174 295.033 481.518 293.689 481.518 292.033 cv
488.959 294.433 mo
488.959 292.777 487.616 291.433 485.959 291.433 cv
484.303 291.433 482.959 292.777 482.959 294.433 cv
482.959 296.089 484.303 297.433 485.959 297.433 cv
487.616 297.433 488.959 296.089 488.959 294.433 cv
496.639 296.833 mo
496.639 295.177 495.295 293.833 493.639 293.833 cv
491.983 293.833 490.639 295.177 490.639 296.833 cv
490.639 298.489 491.983 299.833 493.639 299.833 cv
495.295 299.833 496.639 298.489 496.639 296.833 cv
504.319 298.993 mo
504.319 297.337 502.975 295.993 501.319 295.993 cv
499.663 295.993 498.319 297.337 498.319 298.993 cv
498.319 300.649 499.663 301.993 501.319 301.993 cv
502.975 301.993 504.319 300.649 504.319 298.993 cv
0 .4 0 rgb
@
504.319 299.713 mo
504.319 298.057 502.975 296.713 501.319 296.713 cv
499.663 296.713 498.319 298.057 498.319 299.713 cv
498.319 301.369 499.663 302.713 501.319 302.713 cv
502.975 302.713 504.319 301.369 504.319 299.713 cv
1 0 0 rgb
ef
496.639 298.993 mo
496.639 297.337 495.295 295.993 493.639 295.993 cv
491.983 295.993 490.639 297.337 490.639 298.993 cv
490.639 300.649 491.983 301.993 493.639 301.993 cv
495.295 301.993 496.639 300.649 496.639 298.993 cv
ef
488.959 298.273 mo
488.959 296.617 487.616 295.273 485.959 295.273 cv
484.303 295.273 482.959 296.617 482.959 298.273 cv
482.959 299.929 484.303 301.273 485.959 301.273 cv
487.616 301.273 488.959 299.929 488.959 298.273 cv
ef
481.518 297.073 mo
481.518 295.417 480.174 294.073 478.518 294.073 cv
476.864 294.073 475.518 295.417 475.518 297.073 cv
475.518 298.729 476.864 300.073 478.518 300.073 cv
480.174 300.073 481.518 298.729 481.518 297.073 cv
ef
474.079 295.153 mo
474.079 293.498 472.735 292.153 471.079 292.153 cv
469.422 292.153 468.079 293.498 468.079 295.153 cv
468.079 296.809 469.422 298.153 471.079 298.153 cv
472.735 298.153 474.079 296.809 474.079 295.153 cv
ef
466.159 294.673 mo
466.159 293.017 464.815 291.673 463.159 291.673 cv
461.502 291.673 460.159 293.017 460.159 294.673 cv
460.159 296.33 461.502 297.673 463.159 297.673 cv
464.815 297.673 466.159 296.33 466.159 294.673 cv
ef
458.719 293.713 mo
458.719 292.057 457.375 290.713 455.719 290.713 cv
454.063 290.713 452.719 292.057 452.719 293.713 cv
452.719 295.369 454.063 296.713 455.719 296.713 cv
457.375 296.713 458.719 295.369 458.719 293.713 cv
ef
451.28 290.593 mo
451.28 288.937 449.934 287.593 448.28 287.593 cv
446.624 287.593 445.28 288.937 445.28 290.593 cv
445.28 292.25 446.624 293.593 448.28 293.593 cv
449.934 293.593 451.28 292.25 451.28 290.593 cv
ef
443.598 288.433 mo
443.598 286.777 442.254 285.433 440.598 285.433 cv
438.944 285.433 437.598 286.777 437.598 288.433 cv
437.598 290.089 438.944 291.433 440.598 291.433 cv
442.254 291.433 443.598 290.089 443.598 288.433 cv
ef
435.918 285.073 mo
435.918 283.417 434.575 282.073 432.918 282.073 cv
431.262 282.073 429.918 283.417 429.918 285.073 cv
429.918 286.729 431.262 288.073 432.918 288.073 cv
434.575 288.073 435.918 286.729 435.918 285.073 cv
ef
428.479 281.953 mo
428.479 280.297 427.135 278.953 425.479 278.953 cv
423.823 278.953 422.479 280.297 422.479 281.953 cv
422.479 283.609 423.823 284.953 425.479 284.953 cv
427.135 284.953 428.479 283.609 428.479 281.953 cv
ef
421.04 278.833 mo
421.04 277.177 419.696 275.833 418.04 275.833 cv
416.383 275.833 415.04 277.177 415.04 278.833 cv
415.04 280.489 416.383 281.833 418.04 281.833 cv
419.696 281.833 421.04 280.489 421.04 278.833 cv
ef
413.36 274.753 mo
413.36 273.097 412.014 271.753 410.36 271.753 cv
408.704 271.753 407.36 273.097 407.36 274.753 cv
407.36 276.409 408.704 277.753 410.36 277.753 cv
412.014 277.753 413.36 276.409 413.36 274.753 cv
ef
405.678 269.473 mo
405.678 267.817 404.334 266.473 402.678 266.473 cv
401.024 266.473 399.678 267.817 399.678 269.473 cv
399.678 271.129 401.024 272.473 402.678 272.473 cv
404.334 272.473 405.678 271.129 405.678 269.473 cv
ef
398.239 266.353 mo
398.239 264.697 396.895 263.353 395.239 263.353 cv
393.583 263.353 392.239 264.697 392.239 266.353 cv
392.239 268.009 393.583 269.353 395.239 269.353 cv
396.895 269.353 398.239 268.009 398.239 266.353 cv
ef
390.559 261.433 mo
390.559 259.777 389.215 258.433 387.559 258.433 cv
385.903 258.433 384.559 259.777 384.559 261.433 cv
384.559 263.089 385.903 264.433 387.559 264.433 cv
389.215 264.433 390.559 263.089 390.559 261.433 cv
ef
382.879 257.953 mo
382.879 256.297 381.536 254.953 379.879 254.953 cv
378.223 254.953 376.879 256.297 376.879 257.953 cv
376.879 259.609 378.223 260.953 379.879 260.953 cv
381.536 260.953 382.879 259.609 382.879 257.953 cv
ef
375.44 255.433 mo
375.44 253.777 374.094 252.433 372.44 252.433 cv
370.784 252.433 369.44 253.777 369.44 255.433 cv
369.44 257.089 370.784 258.433 372.44 258.433 cv
374.094 258.433 375.44 257.089 375.44 255.433 cv
ef
367.758 252.433 mo
367.758 250.777 366.415 249.433 364.758 249.433 cv
363.102 249.433 361.758 250.777 361.758 252.433 cv
361.758 254.089 363.102 255.433 364.758 255.433 cv
366.415 255.433 367.758 254.089 367.758 252.433 cv
ef
360.319 248.113 mo
360.319 246.458 358.975 245.113 357.319 245.113 cv
355.663 245.113 354.319 246.458 354.319 248.113 cv
354.319 249.769 355.663 251.113 357.319 251.113 cv
358.975 251.113 360.319 249.769 360.319 248.113 cv
ef
502.749 299.183 mo
504.249 299.183 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 48 /zero putdup 50 /two putdup 52 /four putdup 54 /six putdup 66 /B putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EWNBKY+Helvetica /Helvetica findfont ct_VMDictPut/EWNBKY+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six 11{/.notdef}rp /B 189{/.notdef}rp]EWNBKY+Helvetica nfEWNBKY+Helvetica*1 [0 -18 -18 0 0 0 ]msf15.8403 176.683 mo(B\()[-12.0059 0 ]ysh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 68 /Deltagreek putdup 104 /eta putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/Deltagreek <1C60D8A8C9B7D7E8D30894797D5AAF286B71BDFF6614E4B5AD120122FA30F5DFD5F63E0C3E5314> |-/eta <1C60D8A8C9B7C05416182BC4CBCC557F21C84B22ACA4314A039BCE067B845562F2F67CDCB6119221AD4A12E2F5F1262809FF00C2121B85A39DFC953CF715E669ADCB99B69B4E1399F7F21E49165D2A91B3D9DC4367E5CED8101AC76C63E20576FD3C56453198727DE7F98AC1AE813B1BBC57468AFAAAC796110FBB0C71658A280CBDB4F7F373C3AED2D36B4169E0CE6D6DD5D44C2162203507AF59EBD2CD83> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EWNBKZ+Symbol /Symbol findfont ct_VMDictPut/EWNBKZ+Symbol*1 [68{/.notdef}rp /Deltagreek 35{/.notdef}rp /eta 151{/.notdef}rp]EWNBKZ+Symbol nfEWNBKZ+Symbol*1 [0 -18 -18 0 0 0 ]msf15.8403 158.683 mo(Dh)[-11.0127 0 ]yshEWNBKY+Helvetica*1 [0 -18 -18 0 0 0 ]msf15.8403 136.815 mo(\))shEWNBKY+Helvetica*1 [18 0 0 -18 0 0 ]msf24.5059 32.1855 mo(0.6)sh39.5176 109.02 mo(0)sh24.5059 57.7969 mo(0.4)sh24.5059 83.4082 mo(0.2)shEWNBKZ+Symbol*1 [18 0 0 -18 0 0 ]msf269.806 339.717 mo(Dh)[11.0127 0 ]xshEWNBKY+Helvetica*1 [18 0 0 -18 0 0 ]msf492.389 322.469 mo(2.0)sh24.5059 130.311 mo(0.6)sh39.5176 207.144 mo(0)sh24.5059 155.922 mo(0.4)sh24.5059 181.533 mo(0.2)sh24.5059 228.186 mo(0.6)sh39.5176 305.019 mo(0)sh24.5059 253.797 mo(0.4)sh24.5059 279.408 mo(0.2)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginEWNBKY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B59F85E959DC9E62959B5B049387399C5A88EDF2D5DFBD776DAFCB889B62AC98B872299D239B948311090C1C069798A7F20A8D7BE29B8C384DB55F663943C1B42044C054991C856F3C3AA085C2B4902C8215DC2701EFD5FA664B5C9C44640813B5AC440B37B70CE58EFC65A9AFC0BCC84F3CDC68795E4995966F74639212F5372957A607AD4B6B94BBB7C36A3A6EF325381FE12C0468B5DD1F216D01C174551A50AC78A5328CDA24DAC0484DFF3993D32A7CA064F169906996AA1E2F6A555998F55A1AFCE2776BEE589EC3162F968A180A5713C4537EF11B8529CE22F8373BC7632472323D1F8491B48E948870255C9E830736EE70F30EE309DFBBB8294CCC2BB5ECB81667BEB60155> |-/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendEWNBKY+Helvetica /Encoding getdup 37 /percent putdup 45 /hyphen putdup 49 /one putdup 51 /three putdup 53 /five putdup 55 /seven putdup 56 /eight putpop%ADOEndSubsetFont
/EWNBKY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 189{/.notdef}rp]EWNBKY+Helvetica nfEWNBKY+Helvetica*1 [14 0 0 -14 0 0 ]msf163.297 26.4692 mo(0-5%)sh306.511 26.4692 mo(5-10%)sh450.975 26.4692 mo(10-20%)sh147.725 124.219 mo(20-30%)sh298.725 124.219 mo(30-40%)sh450.975 124.219 mo(40-50%)sh147.725 221.969 mo(50-60%)sh298.725 221.969 mo(60-70%)sh450.975 221.969 mo(70-80%)shEWNBKY+Helvetica*1 [18 0 0 -18 0 0 ]msf416.889 322.469 mo(1.0)sh349.389 322.469 mo(0)sh114.389 322.469 mo(1.0)sh46.8892 322.469 mo(0)sh265.889 322.469 mo(1.0)sh198.389 322.469 mo(0)sh140.908 136.219 mo
140.908 134.563 139.564 133.219 137.908 133.219 cv
136.252 133.219 134.908 134.563 134.908 136.219 cv
134.908 137.875 136.252 139.219 137.908 139.219 cv
139.564 139.219 140.908 137.875 140.908 136.219 cv
1 0 0 rgb
ef
137.908 148.386 mo
135.658 148.386 li
135.658 152.886 li
140.158 152.886 li
140.158 148.386 li
137.908 148.386 li
cp
0 0 1 rgb
ef
140.908 164.581 mo
140.908 162.924 139.564 161.581 137.908 161.581 cv
136.252 161.581 134.908 162.924 134.908 164.581 cv
134.908 166.236 136.252 167.581 137.908 167.581 cv
139.564 167.581 140.908 166.236 140.908 164.581 cv
0 .4 0 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginEWNBKY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/M <1C60D8A8C9B6B41C9910B30BE12408A0CCE83CFCBF71D6A0AFED0B0C7E6B8742F00BF38074693AE67B7536DF8025FC27BB7165EE6A43D7B9497E065E42F0EE8DA1C58C8863D1E0F8290CD2A3925749EE5F186B> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/x <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-systemdict /gcheck known {setglobal} if end {end} ifendEWNBKY+Helvetica /Encoding getdup 68 /D putdup 77 /M putdup 83 /S putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 116 /t putdup 117 /u putdup 120 /x putpop%ADOEndSubsetFont
/EWNBKY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 8{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l 7{/.notdef}rp /t /u 2{/.notdef}rp /x 135{/.notdef}rp]EWNBKY+Helvetica nfEWNBKY+Helvetica*1 [14 0 0 -14 0 0 ]msf143.391 141.886 mo(Data)sh143.391 155.636 mo(Mixed)sh143.391 169.386 mo(Shuffled)sh1.5 lw
504.999 306.183 mo
51.8403 306.183 li
51.8403 13.4995 li
504.999 13.4995 li
504.999 306.183 li
cp
@
562.673 .75 mo
560.006 .75 li
560.006 .75 li
562.673 .75 li
562.673 .75 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/EWNBKY+Helvetica*1 uf/EWNBKY+Helvetica uf/Helvetica uf/EWNBKZ+Symbol*1 uf/EWNBKZ+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Gary Westfall) ()%%Title: (fig04.eps)%%CreationDate: 3/1/10 2:41 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&kuoRM&h*\6!;?ICb"O`MLe9J1W&Wd!,IE7^ftc>1g-<ljIoT(doYdu+^!BjIOXWk%;Q801<6+G\O(Q:)DqHY&r[E)e/F-"U%e)#1-iD&K;O5F=5>mV03*@@(F0hJG`A(/OFe7N2NI*XOP6n4g`B%9b*2@tVl$ZXZ3-BlTN58#=IDrknQkWNd*Tqpdu&Gl@Q^V&ZW%X8Sf-_N0FMW*1#6ItVO>h1DB*\+t7;1$WOh2.trh^F+,>CNE#12nml[plROL9tenn#(L.sDrk-*h`7/84p8.K9kL^+F7P<4o4A(&%K<F3HqX`+=h4JhC$g=P93>t0Q":MMRjE"7e:4Y=M$)H2'@9G\SJsRY\"&Dub[l9_4X_D]1HjNF?`6ihV&q;78>)#arZhX_U]+tV2%IVUDERO=M^2jr"5mnsT3)(B-<hA#!Ek>U5R2FYegq?qe!_S6FCoQG.4*DO93+>8%X8fg`t2LGIYnZo,._pDIgE]*.jim"]_j<]5s%e#'%<NmK/+Q.kj.<d,_uPZ;()L$P&W'rJc7U](\B?L[)f$pah^l`VF+,\["_o<C!^*o2u#""s_N,u`Yo1(e"P)(uq%HW`7jo4Bbn%V&=k5$b-gp"ZIsH;?R78J]V#%Rf+$VA`mO+gD^p(5%`[^`El'*`b`M]UG$-pZ(0r00E9H!_U,2Z@4:djpo8A7_I8haBp0aNrW6+>%[X(KR6k1X'bs>FR^_4P"CYFAIR5@TU?22HEr]<RB@c1TKM6E<U^?5%^>,fTX-Bn4r9O_]kM5A<>/`h7o9j;0a==]TODj_$bb%._W%-H#F1b^:JtjRZJ$&-&kV5**,BH)u^ln.f_=.Ti`L_3U>nQ;f>9LZbq,k;*ulc1>&_o<\to1$pX]&&h(4Z)(]s9R?X3MR@CspklIu%9_(_g)3+u0Ymud"?ZFjV-"pL&'>EHb*"fn/,YBEk)+T@`3,X,a?ZAbqP>[V(a'(GTI)S-/O2&g.K0?+hVGs?j_H5HSNh#g7p7:o:%@`P(`F!TA1s0*9!%pon]SO#;O>"3-5hm!rW:S(ue("sGDLTgI^7n;_a?YRjV(OX2*3'M_dZUhW[dZrf^N%toOcXm*<kD]+q;B9OM%]#f&f,H&5qT$r-c]G.Y6?aPRc&*r0;ABr-@@;@o=>)M@X=0+jd)okH_6JLKMf"oaZr%_p.CPPfJ@\DL.o<?Fh1:L]<.Ap!KOOo1K%Vj-VVGEhA,0;TW]>b2OQCp`Y59?'`#e+U/=rhDWS/!G!0ST@CB$@sT).0$<JS[S(`jjgB6/=B6_mo/Y?q-N/ICp!8i][G>5QDpt2%"859_,dpaQ+no")YDegbV(Ft>OFR%#V'7Gg9-e2-qG.'a#/brU48n@4Vpk8Sopu**B'FO4Sc6gokkA=W`gr=mE?$Q-hs%mrR=85p%ks(6D>,B!4n+9th7_c"moH0k+U[fDf%U\J5ddQ`cq@;OYUai?#?d6GH0#q%78CqT#alTg.Va&O,\mOsAp3j3sfd^??b4IJsATKu+%XX7fX.9fLodKqOmaPqQTMVgSr7$c?G5clU:#-Ch2'Ruf&=<E#kbIANY!hQEt$,cftGjI*]b0!h#&$Q5'AMXT"5@I34`L^#L*2u`W%&\_KP5@^lFCa`r$*r_&,C"jU]2j@ie$+?QQ_p;4`RUXf6`R[$><*?@igX&er%._#h<us</L:5MiaVY<g;C=j/6:Xe#jU"^npi;gh%iOETY>YDpX;3K3dV0@Nb4enW!*)[50ZV$]<rD_au(&1h)rPWUh%_`V!+oTQJ&iGmT.Q/#+Bp5D*E/`-f?/]<2j?#U,l'J3\W,t?#%=U>V08a'fMe>lEeoTsTeE(`WSO8f38;GU)$_R5'r;JRI<8Ui^V,30j>Oo/B0]d0A8BMm>IV5o9P&#l1sY1*PKlDaCpC!Xo6MQI2f%'VS?+iPpO+M`g6BQ)dL:kN&39(QfH$"8U*i84eu/JW*<&F3-8,D*j.1JY(K=/8um(GqOsR!B,tQ,1iOD9M0=n>UO*3,UG>%$?4TV%<l192RX7(>XIlV6%*+U5.]:FR`q"3]CQo\d0si_c@n[!tnsnK=b9_6_2:TZ(")U"ETB)pZ8h760Tt!s75WJfI;HDJH`6D9d7KP/E%@!fZs,q1&D;;CFt@W5$C"nRRu5#'$`k,QQZdO;+hT(6#BK<:DZJ;7$aPeu5;\U9Q<<lUtC#:MG@[j:i1_Mr8iaeb5)K`3`,AY`n[%Dd6<mcOoD,C<3]N_PdI2?pLNJ$:E-p['^7/X@&'P0O>WH:@8p`.MOr7(">QOSBPHNWaOe]F]G::"=]E;=K-CK1E)*_anj:4,HFY^%U^bTh0Cu!hLTJo/>Sk2T3(E*8jgC=8"(^P7'$o'(%O!r6YD=4WV/S%P:ZmsbWV/V]ES,?<"pb`95*^F[A2J$'prl[iU"0E#_m,@?%FT(2`XNNA@<j4JQ7?5/a<h1cHPSm)/3?RDl%$M#9Dj%P0k8uG+hNN7#=q@VHaT3n\W_*"Rf"cseBc/8IA%=/9,5+Ii77u^j6oJ',%P$--9=[&=uju%X9W^_I_mksZ?0#M8R>W&.r<Qc9XK/HKMT]_P4,dVkZ"Z>mlm1b8AVi]gI+]7H>Q3B'&73R3eJY*Pm5$%bbN3*Xh%*nofI*F$VR#RP=d4T<1k6l'UU>V2S2@HE]@>X"QJl"Q]gV,R.Z@-:EF(ibT67scgV5%,o9PHaZ>;jIN\K4FKm#JEdka`"O&U^^-P%7t)]TJkn8'-2bdEaa9"4JA6Il?fjUQVQ)C0BO.D.U_ZS+O;k#/;Mlb#"6;DXb*TGnG)`>$3gVP0=nNfe0)in8q7H3h6ch_\_0ZMs%jM?l([*h:0LJ25n<r/#"9Di>X;O5CEDi?iu^;t);cCQ;OM],^;.;KSgb0$b2XkIH%HS]AN4(+Js:ULqF)cTIj;e:^'Z;dr3<g!rm%`LP#D4\B(\hE\_e9@?jC6=8-O`,`XfX@$/XlcAP#ShSlbM/8be&4toleM56f?9`>L"5p0WO)ds$'3[IlV4/_6M2Y7W(=epc`i*1Z%.on&kje$:=15],1Z5V4W)%j:.5]#O1<Fq5E+Z#h/V,YmYX&,68\m)HnB]%6`C'2S`>+,V(X7J@)Y/&U+,5EOCQ;8+INEXeGY@[JA%cgZfn6S&7I"Yr&DqR`KPANPUDRR4GtZPg\0fuT'#7G:X%Z4/(#Y@K(/WO7\RR)@QgSl/M!#%Tl^<[>B(lBSa[-X56g(aVpXXD4jb%-X4>"F,Edgk#0@<Z9>C)C/aG#[a/ON=N)oa*2Oh?\TBH$V>?+1+8\e)G?O$%R0)Zp_7%YRg*@s`3_O<:l1YPY6u,4IP&2`(J<FJ2%Cu&?RqFNAN.;HhphH&foqOZ+Di+Q\K)cekPrX_SHNq+%.:\m\cEU8BqED%fUp3SVZ5qHPpf;/CbH&gV0eE0'=8>QKT3HS;H`IF1X%;nUduR?9Yk7$^`.=?=BdP%H;H?"LO[[A29q>e3[mEqptai6j89=[L21Xu]onl^c`rJ?tuXh$K&rdeZGfT-\Y.YI3;VMX$,CCPDJ>%6imX2TXEilAnk]g9,=A\QKM(sK>!l=NKuct)CYnq5$q'#/U]E.<:M*R`!=;\"bUlm\)h1*)SEQefF=q=elQNW@X+EM@e+dR'\,fS%U&Z+e`0N#3-sOKmWu5c"C"-.oU;>a.l"ZH^%g1jp;QAiB["g'1jVmu?Jnf)]RR5b7nO#1b]4tj)RKa.%Z/#_(?BnI-^?6bWQ[!RT%lpRm/WpP]p<.^X'rFM"UjgAWW-Y9nqogFXL!&^`tOR.-kL!-0g"DLVZCFaa;Z*<h_+-DX9m&XsdX7j+MSWf3WNq/]Blo8J@$g@a_%XU-YC=p]_ucoT,.Jptno]'R[m]oLZO*r^E'lD-<sO-VNrSQ^t[CM1fc1tpV:A&M]/<<+O/S&s.mGmR*7[&-lLNEYZ5+2pRJ>W0L]%duo\"ShF:5q.([8/CUE'2M"bi/D!!ffI:.DL%[QsX(<0f>3E\)kD[tQocg=\NID2=q,7o:C(lfZ<))m@,\oPM5q<n"3Wneu(+#1(%bpXW-?LfEK1t),g1'[XeQ8Zn5Hl;jF,ZsAII9uIe['mQK8)TY/3WKRT[9UG)Ob+"FnheLlZt.Q$hm4'n?'`Q.;Gh2e?QT4mMm4J6%aD"l<G9W0/V)#29rM)9c^*W_&\9%LR,q'M]g6VU[g&+I,9(G>J>2)N,-d-O8[8gemL2(tu)^oK)M#aS[5`QB$a-,LcY)HSne#B4/%m<!((VbmfDp(-O.Q;\`j7(Ui>bQVM-3>n":8uES'm[&gcbXRrZnJ_9D@&k&(NN];s3\Aa+2QD6NlU(!K'8fh[\'.u4.UA<TWh3tK%,JhYq9l+5bPZWtlJ#WB9/U7F>enioNj?HknjJ\=ha-\YCZr!uL,)a48[^oK]j2gJDaZ;r#K/l-Aa`:IgaSCc5`E)U]fP?A!<I:R^%M'T-j6j#1'/,94/V2\NYK!h?'>L]f%g0BK5.1o_)G,:c6eK<LYXeJ,1C4of^'@;"^g&FO47Ptc0XctR*S0kLD`(bPZX`1QdQrYa=%i&-h=R!H5A5GRjNNJpg'%%b$EV:)FU2>0M@iOn6fkfTm,N&j.\&MhI(b*`"ZHJ8q`EE$:rk/>ni6Br$;AkXn"=VPE!>-]cGEh`S"%C7taN8j:X-Hs!gX-2WSP:`-_ieg.ZEGYM_16`gdY(a%(=b9_IGjiAWLZlGR;dQ50ZN02C4G$UPHZ5MqiBRL'N\Jh*b_hdEbeG'^,%HcojdbNTG-XiN4b['5OUSN_pgF+U0Pj4V@#VXgo;H1,I+;bEQV;sPi/>D[,-/"LNL.jabi`->:/%d*ts+_mW@G%+Vo<CJF)`5ENC%09mDH;`e$gi<Z8/h(T10Bp[E;E%*PBVEaXN[!pD_c769&[(dbW#?YCS$p6hNmaP:'f/<jjQCq*9'5JobYU4@F?EL-5j!6--QVN*i%Q[lgrr5X!o0160ThhggJ9/R>%=A<JZOJlpuD)ec5?rc:(`h<s:-2iMj(sY)9Ku0Q<Te'!@UD/^D@ae"&Rg(9G!\>2,6nB,\2qg)*%$W%te38f-)$kS(Zj/oj!Z#A8o=d#aub$A\[!gFt8.04IHQgH$>-KDMb-FLV8?K73qcUpA1&h6h_jsm[]-<Y5#`Fbs/4fFE<;oDF2%i?O::fU2/p9N>aJaJ^@DUd',V,`5gn%=q@!QciCJIT(?tCp,7:8_&HZlnubf0`:%oGPKM,qrs!GBC[td"am^7`WMA<)VnuQ>E@i.%3sQq.JQe1#;t""-`Mjd'lq\R#2!eW9raa3k\m2R3AQ_[GA+iE4bN7tV`=dd"a-$Y"qu.M+?+)7/H)d.QZ=]EK!,*T(=pU;).nNpt%5#\5sWg?Cub7Ro(DQ8/OFb:S9;+kW97Is_dNZc`jUhj8Y0e^Mk,abFZdUu9*[\i6kjeRFTK<cK)PI4dE04Ub7Z;TaLNmqX`=rWaV%ODrC8phI*(m3$mqfYQU7oM]<X^_=$fq-`?=39lR9ZqU9h8t*V=2YK7YP54nACbukR]j\B'Gk7>J=)@gIn;(_Ilgt;l8g\OQK]76Q%/Tc=;IOe`?[:`D]IQ$Td4$rjMY3(Su-nSW08rGrm\(X!M4WAeBKn&)6[17'2,/DqgE.PCg`!+jocnlK%VEG:#8*fe(Fa?ZN+T_%g%O(d>]XZOt\*@Z,$Zn!q9F[iFWe>f,89W?c\Fh<5Bmm%*]+l3ELa!XeOm,KK@65pF@a$427^+bP->9ZsQr"Xu&K@[9ud0D.Xj;9a>%lbqPQnR&QQrL1a(@]La360^GsK7Y^6*)/N3B:Q$AcR8\BjNF=r2"&[:KALRE<g)A?$H)XHB)L=<=&48eM4IEC5kTj5INGjCm9(OG%a;%nJ]7g-,-;8B?S^G3,ET*O5^GR,UJ\-6q<Z`5.XZlV,R,%LTFD!;X_I,4f$_LAj)l857n+Xg]o#\Dl(?-=)$r17il)b^C+cd$n%d&"6++E)pqJ]%\ir.W!5hpgQJO.G."*\rO<1kk'&b,8%?7;&tc'1\jrA>L^Q-Jo(g:].O(".%RA0ZV4aB@K3O+`jcgZ]E[*:c_.]%5h5,NBJol,n\dEsMq0_W3Q`3sV/nLdRNq\+Od9:6PY+HQdQ+FOY(7s]qjc6ITf$_p?uBXT#A7d,l,>N^ksPq`D%ZSL'POmTRk+iV%V!3d1`4op%DG-K/qQ8Ebf&:9jr5@>AB]lq/O]1]4j1"?rC`jG)B2D-[rt@+e)n&8([8HG-.HqG57#@hOqK#oD5`a?#5>j`hqd_D;%CN1\+ruDKMZ-kH;3?&(id8+cHG8HX<fF08:$SRuD`e!?jn#Y&p0:@''p^)jrqH("fOjKm*87J9HXFjkBClZIL%2*7+C\9d&cd+TC%I6_g-iaZuXRC,?;oDmkb,q"5hjl>M+U"f-afR,^iiWWD]Qd'1'XYD[-8*WN,(U"2EC!2uR;pphZV>P7?fG2&U'SD\JYXkR@^R:'D%:!*)5AA!G\a4p^AfbdA&D\r?i'HN(+g%]7U3V!<_cKIUqnmF4Cf6dMe%3dUl%7i^^T:3+C</@r.j.ItH^>BP,0.hjsjK&4Hgq"t_%Nl6M&SGl\2rXo"%Ym.<#$S5-C>tZ/!K>-QYL+UeGITIXNHD"Iq>!O;I[ecI$TWRIF\(h5!2c3u2YBkHc2eRB[2C<p0hQf,1I!Mnc%UV6e1?_frRIO;g=rVm<H(Snn:Hq4Q#O%H?Z`5IM]s#DW,gDU/.r\$XBZp8mMMl5/b6XWfp@%q4j0G]d=]u`P$-d=:\-n3o!U%oL@%XaqKLU]uY6%PT(=3biS'K/'54HCJ9DYs;\l^N`Y_W;oVef[l"pB[g?80&.RF9/+V-qA7Y6-[mfRK8Y-I(4[=@dEnB),_FnJ=_f.)%,G'.d2ZTg/f3l8SnCR?SWGRUgr\&XZL(E22e%`OEn#?'GL%0?EfD@'rmiDlL.]@MR?I07Un8?&="M_BWrTT5'iY]e0!mK4;kl:Mq%1]ZmICmmq'BdT=qjHAR+VFFt=)T-/bnea@<"(Ehd7#25WTp!uHIP+f3fRn[*82!/3GLi-D8Ws#>s6Z4IWk<"l0$6dFA8I1n7g$P@%-YI=]Ur"mGa>1,Y/i*Y%s%,EW+N'6U^nncf\Xh5mI>c;+JS4IVO4`5>nLs^08Z.bdDu9lu!s$.F$i=G`&j+r.k&LMD5Pd0<SIqgC%GiN@s*E\A6]c@u*D_f0l<2_4,,[fBL5Jp@qB/H*(]2Wo_<Ak;OYCorKp>AmM_0+9p-a*2^136bZ4-[0E-W5ekFf,mZ1^Mpg"o!T!%9JX2.SBn'Bkbro*&fSj,B1$X=6t+aI$U*]r]T_3e"dco!am:u3R__#8<<gM/k2QNu(I82QkZ[aol34(ugA:%+_,aS`:BCiF(%reZ%%<&"!m*8dB^Kul=ndHG).P$^Z1[`4qQ'CnKFA+N1#WTaeL7_YBB+4a1N(6f\ShfjnNE[E;Ge;U20/oA\PR3iBg:VV<W^_YU)9hq/%FV7hM$L5`al.@!N%3,fMNs%YlM.2C'3l$"%s(mYVAk>l;5%O6kq.#.Z4pFS7ko31ijqO@JGsi!'6m6\1P6<loG?:B)8o+4"2/+OM%%^;oL5ZIghI^gVOf'gckD?Y"]_hZ\9e]N,$C">%9$<AWG._J\fPBf@?ef;jQ2>SPR@h_SU#rFJPpNpBm12=1G]GS$o%4CR)!s3oC%,KSd\%C9ebMhDP6J%u/<Q130&O.e.mZ`@[JJa,t'?Z/Yi;N2:`FJsO6RL-3sH\?BpUT1c"[eRE;dLi`V5jhDeB;:Jp.ZpF\5D/qH%MPDj@Z1fuBb(J4es%e8L"+3hFp/eHT&I!g6PY:OXqKFJHn+L_kp8933FuB2uXnnrla@c%#`1l*"VG<NdWFFrgHKp#D._$Tp+7q,,%IV6gE2:od6bDtn`8#usH`Ro]$5SouR5rap$>C0)n^EOt+>=uCDIh)^?)od)lec2*SHJsqNV2eRUb8cMZCX4?VdGVbiao6@/=I?Hl%J"rb>9?\tLrl<Uoo]:S$/,q9(d`L[ereIoOIsDo*qRuV&mBTi><gVlM=cN*XS(X'$jo=%JPXgfqN923`]_^M,9feJoA[9U&o<2J5%qW2<W;T8\(W04-%N6,]F:8@XuE!+b;YiM8Qh/OnCY18%d7T1uI)T([%5%`$`d,s*\&#at%pR7kFfG;O1!<;B]+10OI]*e^Lg?O2K%Zt_hr/,!IONju[Z/kop*putcAoO\2"YS24(DMGh_[$78P`<LT6qEb7B;m4d<Jp#okM&i9G++s+'cULi=0rp;f%7b/4akIbtW6o9F%2NqtRX6F<7b8o8Y:)frPFXn<!W^st*.rB5TX+jhm<>ob6hpOJ_=W;#%"h&.46TciK"N.oj)X0.JP]]i:g8KR"0AJb07O2GYCue7k%em#b"\toG0Ce]TY]&ut-Y,RE*Bk^#:\L&)o^*pC&.q`l_0V<7Sc+s$m<RSnAUOJi,8^ifa$s?eQ1@<+C'I)LE6&N5Xm(m0fWP5rK%h6\&D##O(s]'e(Xiu0n"BU'?L:+!`aicm#oHMHjU(nTi0=*$Ec2A>R?V7&6M<R#1*$2_;5ERN!g=k,F]rR^9)F!=;KWdPbbc-c01%oDpe>oX[E7mR"db,+7-q8TEHM,S`hA]tWF!?>K,ZRgrV3ql7#`BNQ$^[G-*aefG8dr(_5:`hoe=;\@J#ps<?:\md$F&ohWp*7.'l%:QRqN,OsY(HW\cA)F4bSA.fJ)oW[3ka1bg0qd\HkEHgmc"&0,?^:X&*)UJY`cDI'h0P/_i<13bg,&PKq=;@,Y$=]!ODqXe</<J`X%F6$.leEikj<$cm'+"_JA6X3M$81&Fd2/2-(Mopp5E)B[],[AjMMM[:'Fn-qmIBQpU<dO/-Y,9f'C2805-K=].S4s,?f?3m=Aefe*%Vm0!H/:NV6G)Lc2M4kY2ik\W![[=uu@cFQG&?9Jep0>jl`\GjhOGHV=<jV*]F?r&]Ep:"cD<fN>7;I]g8"AdE4DQiJUmeq03LNuZ%D@^4I^1hr`f1oYP'h?_+6*qdpkU@ujD"n(s8?-%V2:bZbC'7*dDcoa!H3_61!X[BHIf/k>`SM^'Xf[8/p8Y*$USN#Vbt:D4\og55%8?>2hC:KG@W%3"=1Y$ebD)nR/Z0SK3TT5gc=N7YtUtt;D1+^Il2X63$)Y`!9D&AMeBb)S7,_\;.?=/'Ma'96On9gHf*?qVU[#?D+%<3n2U!N)>!dlN]GLHMT4\_u`\ItYP\.[kl*KeA%\oG\.nQ?l`Q;Nuca2mfd;B2RTqj=Zot4Gqms<X5rECuj'48gdUsA^-/`&<"+u%'3:h@X>=&u4;t\G9FOg-@P`+(Tefmu1gt'8^OW;fSdjGW"9PRY)@kl88?._6=3F/BK1o@W1iO+D`k6N4#<:M@.1"8_5kFFAi]66$%PAkJ-;)N%""#G-'lC]*LP9W3%atYT/W,QcGYBiN(4VB&&pbp0=8<C\F!l.pg\lLYnF!/QDg$/7uVLd5!,8\:Hf7o-eg>o.j#+oI?%UP#fiB&\U[!P9`5"-i[1T-n]`Dr_\&?<_OW!t_T6?oG")UCTJ;D*Fe<.L\,U=9`nQ:KHE<W8F3ZB43'3f,I,o?<pP+2u2[3"r!S8%"Ls`JR%@dR.I:^+.ESfs`STMeXQ_eOX$O^!U+t<]=p`4&27O:1=BV6nlS%J6(NX?,M"=4cR!0b1#ibg7QSA&,>(;W'XeAfh93gB2%ec^JgZ6?6\EiM%[]pTFnn>Z`eG;SoOJZZV\Ti[md,,cs#DQ>_7GcCsF`!aYNVF+2"hWY;3ZitB/"CGBiId8YYi5OKJ?CN!oS]oep%fY+%gQ%VA$0GN7QAcV`>n*!\=hj\k'_]M#5*jb#@A6:*(J8U:YYpQc>cIgMC:i-*L.r^s2US)5,$#lO[RGDY<-"FcGUjdC=)KoMR%C@!XtSi":5&BMOR=%Fq_1JhsT]X2HYG?7kRX:KATpA.sG=`YI_OP<<=kl3[r:O/+Rb6V0SN.=-/N(\F!MBHqG:K%,e>'&-G`Ms(V%E2:E4m!;!3g$!.WJ-4W2grU#>249&6a/arb4)p)HH'%=6SNo(CUtg]0]MsT]6kA@KoS+A&LgYe$[;fAL("MhuLIc<uM)GRI[PG(J%fl;*q&aiE/RW.MZgX*OeQKA?M7`/!I55q4ES?dQB9[A:DTU6U!q]jhg@Zg:P0,H5&/k%07KoBgf"nr8*/\DkNfbTL8rs$:?j`KNU%STWC@Rj+:l^n2E5"5r!bNBlmc#4jC8Q(?omQ7Z*C8D-]%l"E%kImGU$FE&pf;Bs[JRrZLTF-3>0_,nopqH]J<>[&1r[&3KX2J9Ec%\@t;(HkU_(.7(3Nc\busB5Eni%8LYN6kulc,!bR+oLHM)>g0&P@?.e)fF@[b/o)nEZ&['I)uK%O>aE_IqGrrhQ7Dh"#HHBaMiCZm%ei6>Nc"Ykg"Xhl`6lMm(`UqGLA4dPE>(0^OI3!G1@dgYdE_kD_5H`VOFnQ?UZ%.?sl&+I>8tAn/+'J\h`^[lkQl&VHJ-5.$Va[%Q%%e4R8G$_^kjle+ZXpR-h/5.(SDa/r6GC)E`Xo$1ZEr.t&/r>@9Y<mHs46CsR^eU`XMG:N72t^?dZV\4ngcnLR'H5:ZV^6?6cLSB]%C!P&%;O\(NWI@p\&SA)Nq\fj-MNRG)1c\.G4oWlI_^ETlNi1uVrN]9MVM&QX\$t7t`aV$c3E2!`"5q@'H%."7GW;gS^Q_ZXd0MZJ%2(%*UF8?X.cYUo%C23(;r8$8@oD#AYbjgH;YcVa@1OFKEoZUTB@^joZ[Ijk[V;`$c;CY@LK5`^-TCIKMcDS]YLrI+22cN"Km]tr'%WIJ:M/:UAE?eIqM7um?2C7B)<QAPo/G8(O/GuAqT^5h.#p2BW&F6"iAF5L2,1V,TBICO3<AfcI$3tQ;]g?HdGjX^#4>NG_(m;VkP%nfBD`G&I)40FR:**cHMp[bIo+r6u,+4r[iC1X!^@=g>I/?Kf'DGKP@6_+mr<5L6i/F8HdN+"Ze#J)M]/]=0F>DV3e`K_J5cj4V9?%?8%e-:Hju4fKNc^56Y)=fWH8kDLlWW*?fcrA3,EN-/O7LAP`%%d>1WeB.jI2":krkWH(tn]W4Klkm>SWd8OXu5?f#=L5WO3VaBBQ%o7__N+8TD2qjGeX:<?Gs/os$@3pi8`JsiRUR^\gl_nKrY<o^=A2X_#<MMNR2"g8%9WT*G(*ud^!ni=A/(SspH]@mRn?A[1g.Bp`X%iWrZ\SdFlSf-6(:6$H+VF156+m<kP>P*o91%.MQcBaG/H.N^/]GYpQ<#554(P)pm&V1%Ij)^.)+h$9q'A*1DJ?!"eYe^+$4DlqRD%fd^VuDD(MsrqdZ&]McJBIPuPfV;IV+fAeN^*j4BK0cr3Ba4_IO^+H8N\T>L]IJ6e,I:qQOT*'S0YC)(,+Q36G2LEslWVCMYhn]VC%h?]\AeR7QndRGQ?jaENpkr<i(5.GJ.dK/`JEimdXolPhu5+^'^LM!3\L(<cBgl"?6<"i<XH"H:2f,d$QDW8?S:hBFb;Ne7Ln\*"F%JNH2\E-[[t29qJYZJ(/#-\?Ba_:N3eW!$VXdcn8]aLrV#KO]nuna8I\pcOCQ9_%s6&_q[adZ3P5OdTM:"[9.R%T^;!=$O*3,K?dS%$4Gd#KG(.blQCtK?r7BA@;).H9)#AEamQTUY.3h.im'Lg(\Rd0%ednN/K4H+RnZKR7l[Jmr7psZ-O^W"5@6!$*e)=Z9585,*Bn!u%@F<R;9]@aK3mTh8$U/g_hrUp'a$b1Pn3-(,X5ee/[6OIj24Z=3U?B!Ri5F:ED1j%6`o"h1o(TLI.//M+,OYEoILAE2KG=LI>%D`@%i4#K7-gp9kCBp<ACmQs:`YXo+_<U2Y4TiA<I8MFq]=kDk+rh/a]Nci[;KqRN"oN`?,P?3"h>#_<ID'LclM@KPqsHt47&$Z<!3iE`%ULU0'rX"O1I.<:-BOq##<N)aj$0W"]Y\';a=Y6lPH`(Ts6Rctp@%-ILpOq[6H1!i.HSkO$M;@#^Qe>OAM/0gI=/=8,pKf?#.l"!n%ILB&HZ!Cr`B5_$rG+DN(8S*unnACnE[L:i3[^>?Vr_P^:Y7.bjPL_(%4FJ\6-\4Pm?92Z[K^EaNe+(=^*^8EK_f)Z?p,BEa-7o4U%[Ur0IGS94@jG)R].@@lCD5>`<!Xa\a)tQnpi!MYr=(rDKnsEl`\qcQXE!VaqeHeLjH)8LM:T#]8L3<kb8"`*h&.9L*JV]j(QCIM*%#oFNp_1JeK,Z;3i7+s%]ZiPD^/5HM>f#Q82,#l-6J<qWY91je"n62!S=M3.FJC=%/k=gX$b,LU//Gb2YT@u^]_CuE+QA"^'-5L]&%WrB@Ydn*%>>#5)hq1Wbt@\3%@`E:nh#oNdB,X[egF^L7_E*b(4_hK`aI1>SB<*#D7(+DL"B#LER-'XM5Tc#Xe2C0j3%F(7d!\+m?%NZ-VBp_4;9hImZR*U_Cj%Oo8i8FQ;pH;S<J5HC#l#a&-m8sh1FBgH2a>Q@qS-)eQB]O:Q0Uitf86LoIa1mQ+GM-&HYA_=+9`J.nq%Uu;rDOd1m8K:-fV',_>kK8t':=`=.j\Ehn5+^`q8Y//Qd9P>/1Sf<9alo+Y5dt\"n$cPAh0u?F(-YrVC(0E3>T@2QX9t/PtI4Nk%%5JPrPQ"eI!o^p#SS^ElHiB-&EJ1mdDBLkXoh.Z;.RXQ&C_.Qcgl+AT[ZZNemaB-)f=-(mqPM`Zh5ijqU],F_r9?gQ.""`)RBu'#=%KSf.o3+Mf'`TTBJ17#p=Jkt<XhMuC=aE>.cM'Sf6^QC*tFK7a,<`a,g[$6S`H'L(H(&".Zf=5^%,6D+KoPO2JIe64VZT/$[.;0J;%`D<\/3U@Pa8mnd!+'3GW>du+o.BVg(\8Y.fX&%^$-k;6JbW=YUoge[OErDA-Qfd5Gs!-2epW$iS`i=,Y62eR[=V+),p8@3%eWY#c%#7q#&b*Ss&;#/Q>1*u':F*u&@:$ADG70qZ:B22pdU[N"l,o_(E82uJ(gp!B`m5M2Yo:$D$G?CE#3Rs-l3>IdMqjC,K=TF6=I]!!1%XFGWQZY]ZfG>pQ**rbp<=C.=_$u30.;e126hY>1T_n2m(4kPLCP>^20''>9kp.Jh-h>Lp><sRoFdZ#n5H)fI>!JpE4EcCjgO$B,!%Y@h2C3rJ[uci-QGL)YcQ?iE%pK-PF,R8Oek!?HgEnkW`@V\U])c4i<l5(h=+XRhQ1A\M8nN[[f1r9I!hPHPF.YUU=cr#eKi/$]n>%b%9=ej7;;#kop^e(n=/<SNZbYbHp=_qV#u+h02bknS"E6rldPYR)V,:5Fe5OU&hU-.Lio>NS3>n=HY=oin$o)E-c^n&F;.W]C4t>%<LD*[j[]LNHsEh@;mS6s7W'P:h&JPjEr"OTW)@T*qMk/-ieu>2-#qtTcA."6'SreOn8BMA+_[c(Spq.E^2Tmi;Xrdi=Lu*QD\p.)%boS:Jr&<SUNHCa"@+:t%@kmUNH#0'^I'nB+;d$jr@.%'6,/\72%>]!@VtHNYK9#Z+=47ad^#06X4tF<<08!,UkS)SZ[GQiBU'iV]%"8:.JRTj+38bTB/dO/$%CsI5/CHqT51$).OfFFIl]p#ct[55loAEF89J=h;+<%IW9Wf3YshgULg!bh5mDD,9,hR<ZF:A'Ni\KAFm%!GHOFbRT]+@Q_9E^!tnFrD1f9Y-7J%ILR\DlV$1uOLgi35>WPRKK?#8qhRK1oJR,?fMBG0Qh5Eq$^O]amW@76lY]l^>>3V$g?\RT%)qZLL-u_A&[<@p_k#-d.-&B=J*45qqoZ>?Un_e#kH8OhKQ.*5:1%$f=dH.O6_`Y":s5?VZr53\GXf4W%b$M`,o[F/?Z#N44J93D%%brVK/hVN#<Dk#JlePDi>\Y%W6<0%-t!&8AU[8/?1Y5\`O,/:D[\^gU56(.j$H8V[U6^^`PHGd93^Qi/![p.=\K"1n\h">6U%K6\f%8%O^LF[\AUk32'6."P4e.uDWEIXce^H97Ik@+%J'^A:Y:R12kl0-0c]G@*g8cZYRk6eSg>m^]%6Y4*A-+`Xm+=a.>VMi8][OGmn>%CSpoo_ne1:KCuri#rBUjRhO-pVdIr83QTtt<mE2(#6s%HFtZ8@':@%Z="qam?]B1VJRW(RhRg&5:GtI3jraloo-BOQj+$C6C;5m3%NF6H5?T3D`cfY,'dbEDH"(S7S\`*P8aGbmn?BFEs8*t<qoJ=d5kCqV]Bt$4U>2E0'MLgp-c-K35QalBTkH+NJIui2&L$?$sT)!;E%k8O!llN9*B3Y)81oZX%s9B>EFg3Mo3_3'IFp@g=61Btu$E4'I6S%g.Zj'23JEWR/IM@->lohE0;]la'BWI%Y&g1-2RI/JaUYJQ"-%9=NMC/\Y>XC3fuFG]TWZ\.cHMgfSqKEQNJW[6u]:jpJW^ilg^[WL9Z>;EX<<%`8+r_`I"JhoFOXAYP>1-u0J)dpE0#HuG?h5He]<%f__)s=Z(BQM3\K]h`i%>*+#d()uQoaD7q@@op8<.@.jhurH.,Xl,UPlf6<Y46:sn2qY@3rJ"995OUo0,$uYlZJ/9;VbCfEboK9ln%DLhT[Gsk;>QOSJ89DQD']8frWY=3F(R*U=q"WgBEh@KRtn"_4H^.t`$,;EfIY^+Tah&u.Qh"-fWK;?)+,l\%-K.I49WJST4h1,0d%7/H)IHFWD[^r4<,BFM=tq`%Hgmdbq(c5es4cR:%+X$Z=k?%lE`FTCN/Sn'5\bb`;740XSP^U\EoS-1eJi29Q0+)boGU21%MVbUJa%7:m0Xbj=5_C0WfGEf#C"S]=&HOcI0HM/-%\[)"\U[<?j%R%ppZ$*eZ`D"EmH3I&'l7bhXl*",UB,\I9)!7hh4/Y%QZTLl>rIBHVN%NpZ)D=>@N&HtT=\Lp)RRP;qJRJZ7Lo>5LTZ=%i5VY?X(C6A$mX)<pXae0c2jP'%An4+9<C:^=AQ9=^ZHD%Ti9g;qLrk!Cs_6[<ZO%Ljg+.AYe#k`+_BUPl(FL]>9&"Gtb!A5AD96ECXf\9+WndJEsZIgm-O1bo2>K)E"DBaSBaE[Zl5Q9!>Z!Kj`T:[5Tioi5ta^^6ZC2%)i]j7qGi/-b.F9um;6gs^GDlAA7>S0K#Fh2aCGAg)k1=2Xqj4Y#m138UNZ>(:LP-4C]S-3Aqo"!=)d&^ML@[e[D@j<Rb$d7QgeqT%XHn>`$73>LH-E>+&Yp]_BeOECHpA5(/Df,4'IAB4Y/J*Jiu*r@R=6T3hlUn/_oWV%^8$)63-ne;D[)D2Ts-\10jb*lR.l(8`/6sN%I*`Z$dW3@h5/plf8g"30nZl.">AqIHIa/)D.!eCWC0]4Sfbc&0j7-c2fmFJ"m3^/G]"mCOflb?'Il#%--$2C:i"Xi,/ckZ:nW[fY%8h_pScqoXS0P@LNgN_b!dF\XAKGal=JN=\Vjj[)(PI\AP\]n[r.eUs9;eH1qXGp-J1AP*:3@ShoS&NBZ@#si[m945ujT`rSlt)PU%7"3l5jWAt;kC/H%X+'n?-\P^uV+L0*UO$sN"Ld2=O3Ig-]PE#eR([s<%6]0==kTj!e!Z2)AG4g%m/MfTi!"g`q'+^^\5AAaMJ//a%OsJ'pP#HA**Sr;X2lbs*!-I:uP&5A37BjeP>H^m]\68$;g=M$H.s+YV8(m4GqoARWbfdAp7e:;YZe(6Us8FeN_UB8^`&EP`,M+A"%&_b?=nB'X22Ep0K4.,f4!&si>:))BYKD:lP&07]0A"a!O$c_Mu$jcXd#I/G4;bJR#h/V%*fkZjrq4H)Z"%GJadtK?8b3sPIU;kE1%@u=o/9h^c_X1VBDY(h8mFtrQ,;W`"^,D<P^K<^NGWYe-)Pa<afZLDU:9U4Afq+2U99=k^*LP2g'QQ)S;KW!YWh<5fjf6H];ce%`_%?L@FblNRJeoYI@"HfjJgl!'<)%K>#n2BSIWNb[rT0O6jO#(,%^d:F.XEFUj%'(l/P^B<i8oiR,9jLXI&>r&FJrSD=cb?\0sU!2ss%lX16NirD&?795IFJJ-[hp$tuTfrMjZ*]>m7VSF?m4m8De'o:p^jf?mf<fd*B4+k[g&spq6I,LfZQgA!?7Rij:lf-h?75FM^s%M$.%Y%q`O1?pPXU>\r;OFX_Y+aM:qQjW]28Z&8D\J/e\p[8AH4RcYGmt$f./r&QSZ1!lR]-kLFHeghGY?tiJpGX0J(4hfG6sqlD=r]>(%R!g[[Jq2c^)lq:!2IB]0/P>3`_R7j3*`cQ+!c."G;JYaQ!S#BfGUn8BHeQVdn%_GJT%,PJ++*+P^Y2WQj8[e6d_GG;hQ#X.<92t\%<r_)%D69\gZdP>F5JlZd5OFI-!iO@QgRV.<;K$p/?TruF+6fU)QpW3eH,tP-m4Y@"n\Y1fpMBW_p*7l$_l)J__:LN#T+\-_AKe#e%>Ul@:_/Ai%H<LO=ip`k[H*u6j[pWPl9n`8D11.c2;eX>j3PBq3pjM+Em(sQ1n.f<?<:hp8]n[^rQ1e40Q`3Pc!X^JarCJ$"^[EPn%\RZ3&Fmqr]?\GW4;PsF?<((_U1-P!]5/!1U$H7=feNF,kK+2gSOT[DL[7lp>anhS^)W/*rL%g(S^>R[ShA?"Q6,EG2bSQicRP5Ko%;UlRp:(oUG^l$%^qqr[YZfBJ*I^5TH([ki2kV72fqHA8qA?(^g__o3LmBpA9fqE"kQ"]@gn22t%1IMH^9/c?Fo2Q\B;;@^IHi/C>%El>mp9f`]jB9O<"]hQ/"I^YZi2G5`rX'im_Al8ca\QO1Wd'p+e4;ORM%TBpqh/E(7fS?mG<T#SPg1Ts;o_HoTl!a9C>r[.iR3I(8%3bqhA"Wc2V3V9@c[7H4iJ2h!9U,gX0p,TOC."og+:3IhZ;&-(NY="fY$FFstC?A&c&,-LYKMG7(DXa4@(5UQu1Sis.n^htbMm6kP%r>/1gZU4N6*,[ssQm4bQQ?J9P@eU#)a)<6mo62]0+hcO]0b?=T47.4t;W,NTRXS!R`0\F4)'TM.OF$iO2YNBh40=/:D/(oJ9!:\?%&o"q,^+m#^g(Ic%rO2nYnsGQ)pi^8ZP=_2eST$5R/#;jfkilMdL(r3s=PO0UG-]ksfiZ5H46mC]%\@"NO>;3t[Vp^RZanW!'mBs^%,00=c9g--Cr(I"2$n8F/ACphp^MTD`4cIV1b`I/K"RV5r/Y/@E\EJj/POZU-+q;eZpQ?%-A4sX85ai]4OZ'N,#D*Z_b<n*o(i-#%%ppm4lCX55XDPW=>VX[VYRj-[es%]jaS!Oup;N(f&g=)/9PK#YE[.Nrji@L'S"drsgR$]*]M*@PRKZFj.V:et?D[3n?8C*mna(6cs%($9]&5%d+f==DnCk,d87ki>F"hDX#K-.8:#pgN%ekm;Dm:6km<ku\l0_;!SRGKpoeh8)V&''\-i2n_!i74]/?F,G6'^CH\W4Zi+]%hcG^Z;ku(qfVKnB_*rVGhW)'^lSHl"?2bVaOe.nkiY+8MQm/Y\7l(@F"H+NJI!93sK-G/L9FpfSk!5Hm4f&^(G](p!Dsdg:B7i-.%\gJDY^5&l"?r^+35P^C,dqgh<B5)rSZ*PONl]K3*8b[HCO[eNQ6R1`?hTYJ>Znrps6&TGFiU\HnOWFX?&HdT4*.P[iOhOKsa#`bq%Do0-Z]jjGKT,3/>XN)F-2R^@$/O)&6?a4edP`QY5A,;>=Dp&(H,!hY[\7mdA,Mda9Ud(G'&1Ku.P)L$-^h<K1NVhu%&Kjfl8S=1_%(uBrEaeF&p3OeU!ds+&7.g=$ZC\`k3d;sPIg3V?(fk4NQMbUNUQifP3o9Zqd=DB&25),IV^VpflPF,jLNV_7/<b5m>6SWre;GUM]%:8^*qs"UR?l6s)\[-]B7hpj@(>9?R`:QCGo-g%6QbY'0#:=%-V618`^ADYU(qm.<$egI(+L$W[+Zo!"#aNBr.&XetabSHU<9!NZ5%De-:p>#2PSMpc(m[Sjag=d54>G?\O[XHr-#eu2*q.[fU8o@BfZs1K4B#0ffeY.hUtDmcfP.8oO!rd0`s`"Nog#J[%tO,u.NI<`<D%>d^:AD-oV*KY+?7p@`h`b<qKAepV"G,Eh059837!I_'MO=AeFKH261i52%]-mD$:"g]i.=#A0g,\G(07/6rG]=;mZ9Q/Z,EHusg?%*anf6(_XBg_8Q)R;`-.t]b^_nJ'n".;7[PPQ0psj8hjM`57SILMT7Y&6>A_lhte\JMlFHu<#!q8C[[_f679CH02fKpo0mP(M-p)0%\H\rl35\N.k^cc^d??MnL$jGr[,M#@kQcF_/.m7Zk4iY.\-)0_rJW]t+Bh!f$I[1DDsnnVp>&1IXmq</UDp8DOkA@!Le@*\ejuhN%pG\9arf7<6g%j:3qGDsS(258nX<Js:?],[&i+pgT.DqK.k8$V)0HMQbhoq2Am&(n2/]S4dN\>7/o^G\):lm#H89=IKhotFiebb,M%4b6tI85mbb%FX$Ckt6T8Zb=&O+q=#7DpHRg&o0W.L&<ipa/VXuH?cY`]"rS.9;KLId-1G(J\^J2HrqP/fcWFg$>)gTCReKP('FiZ%!\BKRF/263`,;A@gBIs/DQo6B2G-"q5"QE-2X;2lhn7hAVI3O;Hni%k`qc4P"[mA(p>aaq$QQM&ir/YfY]-:Q,XBXJ9[5'\_l!jq%In,/G12W9kIs?DG<'H:40*dF_Hm?Uc;NWKsC:`%%iOJJY;(1#,.[*EVr]&982MrhH?]KUB<Bn36.L8@Q@4pcg;j@fW^NloDP^P8d%m-X8nr0eF`N2jR.Ls]L;7t9VMdW!_H1WO4ET=c:&h!&[)WFtD:#cck^O(;N`5RlfcD_Bu62S*%tOF<H,bJj1n^/MQ9(a1PsShsb@%i2E_D8`#i&Ods_28p'WEV=hr)`co4i1n;QU?<[)'14N2T`,#XA#Ii<_l3s--?fY2G([;U#Nc,`=\=>j_q)`C&/c!lU2^Ob!YhLIk%S]8^/`*toSId^A#/EEiDgY1A\;bqdPb/`o6mTG56+-Rus"%Gci_WN't,f3(#gY-^[X@8e@hPKFu4E7%gCQ5I09F_dK8TOqSSnq%h%R0i7qcf\65hIoq9OmNa.H-un&k@dpa&,O42Cn%TMT]N2$XX1H":Dt_nm<Om(9p*Q[Uu%taaJpJDd!E<D**$t46cWc`mLPGb?;W74%TPD[n@?b?%P;%r7&_kmklIot+5CEI<k<P(Y_L*+#O&fH\;ILJD98@@DRJEr&SsBRm=EP^BOh0i!]E%V.)\%R"]2SMW?E'Ze8S[k?%EuCrGk_h9!m*M7S5*?k&VA!<I:8VH9'CKONS?eHria8JMhL*'F^K,[\,Oq6O5N\$O))bA&Qrmd?;t?+k)[)kT&$9b<>?U8moGf&X%GVcbgn[l(E2=oQ_e4\>;[5:+[MQSe[mn[i0*pX-Dro*JDm>6PWM`\3!:O^3e9;Ef(76:+LC"9&C\n94L:Ug3jB$eAiH^jE4SNkYt%P9[cd1MAXqU8"`jRDIp-%BQnbW\).l.O_uC!Pf,8a!u^@3IVDO,BhnS.&N?=.oK%od2!^t'\AKb/Q'63L_@0sVAO]`j&2kY_)e1U%)s)h*HSrAIk3J[EGFAff]Tt,Qj/T1"4n5@MA[e7UR?^QaH-GJ#Vp#XW+E\1L\60jXlF;'8bj?gKm#-FI9\.i1<\lmY&dn-fEUJ^2%(XKB3*l!p$F$gVSD)pJcO.3:3/UN+_plPt''U3/$_(pF3/`r8G/PRP0X\jB4"gURGV6cBr!nHOE#V:QG8*JkP>1tZBiko5VJ/`+&%j"7m=n\oU@>*As]4sC'Dg#$uh!&2.S7K%X-U)t(%:D],Fg+MX^$hAk4X^L'j$VN\R1AT@#nrf?H1fGDYN*SsY[)Sp[1d.6tAruh!%2]e81QHi,i@P,+.D2=H`5Zc5E9>AF>VM6B,G3SP@bcd0TbT_&?A)e32MC#3`"H4cI\=Yq;Z?I5Cg@*.c!eq#O,:"m.ZH#H3h.11?%j5<Uc(0EH,EK'2e'XP-HD]@OM*&GImkK\*5*l$BEbn'#_[RuKRij%QFr\q5?@IUN3U-l$.&-FXVCc'YHM:\,OK#4_:8(JX.GVki9%mfAsr9kbsXOst7R?4*$gX4$FSTE`N0\@t21(#epU[=iBVJm*R4MQh'1np3=4[BJ25c;Mc[,<ig31QKW<-Gl05\FCqJ)%bojP<#JK%KE)j](q#o(^FVbiZZ)TG>?66N=/&I@"a/VRZGAenT!hWX@pr@2bpCutS.Q8UfGIUj,3Fm$pS_;5-i7@Rq@8(qh6<4YD`'=4AA&Mh%QrOr0"mB*X\WP"B]LldQ)3q*_cS*2`4-E7<*!/R@rcC'uJoI6'.T@g^HV"@#\`R*qn(fpZFeR\9>R6]?/:Q4k)XU8s9k0/e#S"95%2umQiDERn%"#&;2RnY!R4he/n]Ni&oV:PROP%`@R%#+@%dLaUHg*GD>a;?('8to%/*/'FN#Wr0phXn(>BQO"RJL+?_B](!i2ca;_%2[`26CEC)jMaY0#&ksJ6>8GL&p0J&q2p8>0&gL(giXucigB-Q,W&7?'/n5bqd;9nm8),A%O?0ZLmdGVG(`TZ[I.0E>rN3nq2R18m%/MipDKnM"n@OYmiQqOL:?H<cXnh=DGoE1]6Z$%!JIb2cRp08%[.232s?Ze'`>kTLVJ79SeEJEMr&lbNk7Rmb)l]pLHOrHZkMk2#s%ZgT+c]'taD6L".#MV@Rqf3T9)o(^SPE_p0;\kk?_!6g`*BPZKUTJXh^8$RabXgK<gXffY2ee-=S:sar"#95,kg5Ql[>KFN;K0h\?%!bXB-W11$?KOGI-H#.J;LkihlL',_B-XS^BU5Nd(Hb5rVp?32NL*<0/[MhC&m+'T/SKjuB+>%fpcrk=l-s^&g!6V7d/0r!"eQiHV%h*t:I:i,?)8NAbsP`tQAY&h52;cjBmTkermb0AU%/UQ/%;U`Sg?BUjgMO>liLW,f@X#!i8;VENG(FRhAUOOD!iH/_sD3pRkX-E(&%2U"_&`+`EYp?P&QBUi]]ZecDKFEJpr.HVtKXP4\uS4UoA\#+N3(+)Ks(:Q;OX6#/IThG!h$)CL#J`0&CWiG2J)5@Ps)jq7'pGeSA%XfO2Hp"dR1\:uZ*MnU'Lkj1+hAGrfK%\8"PS]AL:*'3s*3qAMc2<<-;B@('Vl8itL_R:>(1d\Ko%\8"P*R,@)4bmnrWA]CS,[55e%*'3s*3pG<</*G9YF)%#]L:O&EaJ#rdTT_.t<mIDFc_*'^8=%Ppdj<hoA^D;H=T*e]lV*tV$`@'U#2VBSW+:DSb\`\7-Vk`X.GuC5%d/K8fB7WVQ`O<ZeEqb]&T[SU5*H^#g0_i^^e&eQPkKfQMLr6(Un_#1?KbpQ64=E4&"Frql_Zse!F)(]4G(e0$M_3F)S'4C_Ar[VR%S\)hAY[/)9RBo)TjGmXj,,,IScf:BXAY#FZr[8&W?sd^8#ohpcR&1M@SPjMGg2]\LoI'#J,%LMf+>/l6N:GmR,/(D'O+Nb\]jcGZ%[E\/\_Z@iQC'0Y5&U'1j.59r_/<XLS!DItG$[gOCYhk2oSU>J01:af4D])JomIX9uR9r(ue3a)@GdG)"<@0B]g[hk#fuCgq68=tF%@<at0dQ(P\J]N#Tl6g58fWTJJ7:_GJf[J@,S8b+@BCXm]`SY#F&'QbPk]EU)XVgk:SS"F]*ZSC_aTYTND9p!JPNODS._fPuE>QdX%)`jc1/s++dN*rg*%.[=.2#:be?k+V@daLrr!cp>$^DOp0Eb6()UpL`>*f;s?$GhR.qS7#MS3-!mh047X#agU?dnj'LG.6n,Zn!eQ%.f^EoG">k[!oYPHY#u9`F'@DK",GED^X]$cPib<E2U7nn.@)AHChu0q\]#0!rL7T+`BY"]Zee-NSDt"qG=KgKMsU%;VmnahI7n$_%ZI4]$N,Hbr,"GD]H.OK)/'FdW@\)8m`XR3u09_HahMs^=b)/'dRF[o+1)V\W[W%i[2s4?-h,Wd"W.iZ`mHcRkPaf!$/iGXS>/!Z4%V@.QU3pg$m8X!TGL/)X(4&1ng6Z/E8Uqn[O9od:CZbHKIlFW9c9T.SHC8$HBjlplnZoIf%dRRgXf]1*/ZTF=Sq6>QJk9_Bo^n+Xm%!QF^\[Gt72157USKB"gXA70)>jg4:[U>pqO1)>5rR"i%i6jAk%&ulpU,n8+!7)n82aNn'N,(jEG5&'JQC9CA\j,0&V*T&Blk42=V%QTjSRj)1U=j-+WH,TbaFp*U("3Z9AX+WYuIgiZG+I'V,@=_3(i5F2U6Hbn7]`tXddl^-`(lJ+Q^N(2_WoBKB%+$CcrlH6"00sAkW%KuE$:J-\`LZOVRJY$N*+m\h2bhV9jPUr%$Nq\**BMGE\KF;])A*p^8WLXX9=h.Md"RLa'&r38-A_l\ASeP/5tRhMg&kJP\gIE%5U%Fm$XoSh7HG5+L<O#Q_BbHoN#b2.je/4!.32K3`rPbqU;8I7f#J,L1%1QHb367'-ng/XOV8Ze4q.bnjSO8k4]t2.JPh(NY!OEpb*g%('O8C8SE5nEpf11Ebk\ep%3PE67u&#\q";b=::HW]ElPsTOGr>l&GHa1V"'W[GO)j,a7edjYFKR%>_Pc-]jssVCY)uXZT9d>A>&$%7=/ttN&aa./46HC!>B(3T%W4O):kBt?*#%+,.,S!H8%K=]njhC<>XWbei;sa[6+nc^fbCi)PGI1?Zd5QDesi9GL*joE*Qq/>8[&<%$%p%cO-jp5g6BkH"rpupmM5g#ea_T2DB*E85[$ZIlLXH_1K"8+qD(s@J(KdEb&1</h(4YMg=eNG/1L%0)6!UK%<<,T(k&?Z1/\.u%@d]G6Zul<bBW$q-=WSX!bsPF#:FmBM@3H1:KTbjaa/>B<>_W`fE15Tt=4oXXV8AY@Ph)B4kO(A"X/<bEM-I-S$>8X*Y!!NF9^f/L%'i$c3j!mQGWDkiRGoj^.dh)388l(+!B]P52rd_pZH$/D4NKlZhqOeW)F$:9$E>_#2@#baQFDJdA9_8i5??UC@Up-g;34;W3Z8oLH%=ai7`3eMH,5GMoUPY7%@<XtQ[;_I=:EMi(RRssFMbj=NAB=@ZXh_n-tBt7(S?h`FNY,ad'V&V_6X)89bc0@U)H+c._%qjhL+]tsF%F/Qn45P(GacMg:uWZr/Ee\mZJ:V()GZNG%sQJoEbc.e!]h$I)0$J9g$o(6=Tlum<8GD8'JZ'IrNG&/LIWf<J3PMNNG_&'._2qnbQ%EDjQp@n:dtI(Z^PMUuTeX`C[uQFU,Y5/),*1KJo2(qFBb6#'):_[A6s(,r]+D):N:pf>TO.Dqbl0.`2s2Z9V]lFV1nh4%]UgK)<4%l/CadUBT(Nh1+9CD-:N(?.n#RGBS"BNO2`uiUq9'735Mq3I+8]M`2%2`Q`/CeOrp[(\O0i:k@)dKX@`s/rZYb<HZ0G+&YQq<8#&A%;5Y/`*F@nR[t\D`+YFebmgrL^T;f,<*mL:oURF>eE>.YbX=PD>m\3@/S+8$=GI4kRWAC.<1c]Wbi_=H*d3\VQ%EmTRk;EZ[GjO)j%F;cl7:D(&qf=0N]Ei)\n"D-k"]!t/Rp%ZTTW9nZa?'!=rgpA7)`MQQAjU)j9UkpS2\3J7rSb1k[Z^W8cNk;H=!M+6m_qME\*9&Yf%b,-u<V/pVmkCVB/Aj]Kl&^57YZIs>G)NU_Y?0fe51E2Esk2Ya]fWR/k>-BlScHQ*WCO_o.FRDpjYEDWCW0,\p9kTbbB,S*`3h+DG%c9e:Flcc5IF1,`SCc\n)]5k>mD:s#C\TDo=<EM8Nc:kTC$+%on3jUH4%C=o-3\*j;^"IL>o4K-/>pYtXDZ6/EQs(]'c4&3341oI:%l-)Cqj]=(,9fEU*GXcZnflZPRR$1tB5d<1XdokL3]\[HcZWoQ/*N<hqVDHDl1O3TaMV3*?[B8N<g#Q3eR8%;u^d>o>OA0AR94rP5%j3lV&B"<#\CO`0s3jW'PVl.mDP%,[.AphJSlIg8k?,B8f$O,_I!B^We7=t]0GaWY2-3db@9.#Jjgp/*20!#_Y>j'tt7<=K.p=FXu%SS]?YD>2SKj^OYFMLHX-h-0'':?p]9)`_Ll[-H02*a7>l>0Bog%UIN>0"2mN1:$uIT5nO2-catS%2-[X;hDpI2U"RdhB.VH=EGV3%i)oF[R@HK^':CX_F19Y5W.hFc,Nk;]0"P9N4JLNUE4rd6+("K+4-.QQ]%*AY:/29\?$*RH20X@\l',VdCmpN!<E`aOk:.^mm[?3f%:3LggdHrf8b<-RnH#OGR>_j9AoZR#?9mIKZL!(K\\Y@A=2[lf"=?2^\I,aEBL)kbir0U%<lFn::6opg5,0_1$@j9b"B7CY%M&D'!%LH&Nk>Ter=nuLReW>5^1al<+aqBm7$1Q!dhoD(cjK>eRrq0>UUE,6O2VQK;D<-+V.Tpi#q4)O-?b)6c@h?V;gf_&)FGAu@"e>c>=%ZC_]R3q>:`lM=`LT#@;V9QnI?>m/deM7&5U0;$Eq9HI%>^[9]iC%kC,6spbqoT_ir49UpgH,l"9G?L+">6qb`V=)'!]/.rEXTa\s%W8T[j9:Cg2\E+UnS&Oip2G;+pisgaPUG^n9GWT(kOhimGEM\"sjo!!OO:#Rp4,2mh;S:Ls21`*"I*Q$<oDC6"kS#K//u;KjGoR@A%iW<7<OhlF#(N$A&>UmY:YJWc<NPNlrEOTIfQXLJpSKW!b%,Kf[kBLq<>&LjF\Siu_f#$C#]>\[1>B]fZDou9W53L]1GK\j-\(D.6%f!04@a5'(t*:A0]^>j+QK,4=MVt`=6R.G;,f?YI+?uIZ<@84udj)[^&fZ.GE!u#b7c>^d;l-)Z,M7&;eF06p]eIu^!$G+g6pE[>#%j*8qmiss?9q<_c;/N'Cn(<@EbgQa%]W4E6l=ROeK$k!)Gb)5;/I-,-:3`<\KDNgGE(9Ce2fSYG#FVJ'3UWjC8c>?oFDQ0P$gE\-/%N1iQ\B'-r`Pf,u8p"`e9[qNSt=6Peb7jq5g`H,97Z07]d=G`Gh=T?kt=#mDo$XNMjUlc>Pq_-,?27UBg;6e.k0aG2/I?&(hAt##H%J"MFa*7mg,qUp6(g+[U22jW9)TQ^dHT&Y]pjB8NGIFba*`6:ZRHSg3VOh-"03<'aO_^B*+#o-<"@&4RNl\"OkooXa6Y!1FT&m*Ca%+'6UiG,8)sT7i'.ClW)Wj6u<G-Uj@1pTWJ4qbQAME(/ZJ=[!hYHR8Ej'eZkpUs"N$n$^QEP46n,+b.luZ:`!/R=?,^9V7'kM-D08%q!7LI"k(VlRO+gT76)]gICI>s4,i;Z8<*AJ'uCUfWA-7^FoU"E<P;I$mb^LL1,Vdr]sH9]Gi@ZM^j+lZR=/eN2Ri"K*hM^NIiDLf%)`%?TqH@AV)fu%f)o>[s$E7F"KQh][5YADNP(n2SFD+6Rh;s>[UmH.D$;4;a:[T)t35&^,;lR7lWa=u$U!KpLXr4mF2'k-5aI!g8%o"sL$IA?(,U;WpQ5F'Ib*Fj-s6$PAu)g&>JEdrP^:,bC;SW:S27nB`QIt!_HbA#VdLJBFC'ZN2gb2QgZi]"2+<LqFCc%gAB4MH^o%f143SViDV)lcDb?])T]s<gls=Jrrf3;#499k1r%idrIB2m3sV'V[)Te!F<".SAf3k.@ZOTDS&<.DRqu7ka[rEQcr6>d2f8#mE`GC%UDI":d@@^mLl>WXQsJL8nlf7Cqi]`>D"HGl78CqU/DX[N'+S;-^ot.'m..s=Sl^o4^"*U3Xl\PP0]rg\=du$&?V=q?VE,"6[kYH<%N9bjG8$<)Il(8^"fL(*cOXpC:#X/kGA(GI3ULEC&/L4ag'!q9+aHjYMj3rNam!A93BBDki!G!bDT`BHGRJ"J#gk>$YR#5F8d3h<F%%M0U@?Rt15VE"5C/=#7)M.F/rV*1R.RGp7BnC@Lu#7KWq3Lu)[7:WI3,]$ST)g>_MCV+,=pEk`I8e/&b%-lsQ@]>lD9BdhmGa5Ds%q7DVIHPZ%#3Tg5NO3]++lb.EWrR0NE"Mc"##T"@(]2"5D?F$sE`>gQ,=bL65942i*_Ud;s>RhmuY$F'rcts9Nr,YC[6*,%#*jPR-%c2r*W"1V#eH1;jHk3oQY,R_t9%\V&uAem4+k!m%p>g\82!)4/YBb$eYQAq@b5^TrKP5L5M!P6MVFQ"J!A-(E&8u1=bkP?b(Ut0c>%T@o3?lbA\19b_L<9DR'cgjelm5358Bs6-;,eiS`S]Tg_d+*l+tnh'D`[H0('1Z"GjT=L34E.?sVQgu$*e4;agG=Apjo8Tg#i;%`u%lu2Q$i7Ur8p\HJ)agJ!Y6d=HP\,<S+o_848&'asXm:,hd=`d'CeShj.6`KhVfal0_fhej?os9P`%?B'1Ca^QfrTSC*"`&Uf_>[b*%q]h"u,HlR"T=r(DSfh5(?9^H6bPYC*m9S&=h!6m`PM0uY5*KdXHi5LM-Jdsr9&*<kYFdt-g>)b7aM!&2=a)Kj"7LW@h\u&9=1S5r%GNNYjHi<;Looh1d<k[*\c##7@F\?8A3F5/6p'F]Vhs4p)X5=gj5nhAL168uWf?_^4>cZcJ-UTUiH&LS#kHk<8TGV`>QG(nrU.^XW%lQ@cbhs34nKr_o;cRSO+d<kiY7>AjJL$*ieTDbm@`d(_\?9bImfCW*._m;Fj^=R:@`TqF7>9teZ[i_rrNf^JIk<6>ff?\o@99T3'%hs7aiH`Q&@p[KhspL"`H>5hhm,8C)$"]i-oDZM*>17MdiHi7b,g'p&Z]?\%odp)e7;eXaEpL&3Gha1I[9:sOtcPTjR?9a?s4`%39%NGJ"U>M^9*jBb&t.-MnZj'FtI-[RCb+5cY'[/0ELq0W&U\r+hd-0#Y]eoIsdG3-s*l=[FZ@[h1B][q)dXL,A]_rK3?f5n-&f_/?1%pJ5Y3^XmCT][mndp!Z9Jq=KDqn+F#B@XT?UlIVc2\,'erZGhqE=82RE-c8#045ICT/ai;<+1O$,^[/X_p:'nCBsAuQos7749,Qf&%Kq,&-^`f9)ZTug"h7\8Tig-Y&lXrDFF&/B4,3MOEYM[L##@60OB5\XPG=@k5f?`;-PkXrR^"6%Mb.1aToUa%mp\NS3fP'DYV0i1-%cN@sgCKJ+!cTj3P6EJ^Dd\?L4fge)?T%pWu]mak)3*3lH:TGHRWL,t3+I5L>VTVpl3'G3%-b5NBM&W$:V=%c\B+3H8][s&5)FI^)%(tQ-EL\Eqcd"]2h?rel_+__!u$<0d4'qk:h0d"UUGRD`DdJ2"$/D8*_WRc<(,)V3`k6lFObBVNDfM::oVR^dq4S_$qO(PMb\rb*j%%\C*M2ge-ETTA-:iYrE3RDN"rDR8X.))`Eq_Ugc9Bf:FtZ9OmL\+K9@p2qQ9oD,`UqCd)s9m1pTg&/GJokt?#VmG-e_dMEiXV)+m%5GZ'?#8c@TcZ/`b1_ou6^lBfi[sT,>@2/Gl>@5"Ya%#qaS.D4rp4'OU%Ar/-<^lPOE8_2<*1m!>jn!qG\","2)[m8N)?0JmB+?jj%B?]?1fp=,\%\htLCO^!&'05s*U&1WZbPg=%GV=:7KN$kTBl?]42Z"gr]#U:6r*1oj8'8K+r6kPc[/.jb%=XAmCTCN%dX)+@b.h$?%`9O\.k1@l/Y?2]Tc?shK-Xjn`@9'=;S\<(P6JMM:MlkcP^[/^K*Zjd_2imZ1q<cX)=@j!VBmQpNZ]4?j@#H^'g#.pc5-ahp`rs[<%:bCk)IPh`'6<ukFrk:"nMWTR+D_8"W;mh[P%L:[X_Y,C?WniqiDbKV7W#EsZ52t[-U(6br^RcL55&[UM\9d<9/=]N)*Urm,X%qd<%GdC.7ROCCRCQta=?$Q7%G6-K-$&#>ks,7K<O,hlHCS=kp[Gi`4cEPn!q9:_cqk%Q]Xkk3]M65Y`lM)qn&J<"5TJ6+05KSPIN>U?O%O_+FP%WR5jGWHQb?\)[_&UZ0`a]DTg=2474'W#/D-:3B5o(\DQ`SruZ(48/O5$pt=dVcrM6GH='*K;bjGGQFX/ZAG/P_+_"i.gVI%"o+T<9i6-';^l04"jsHI0=g!l84L`C2E"a]DdcB%_q/!p.>X,gO'a@T(E!'-/h)MH)1r5g"1Fe8,k,T$_Z"fQ/$L\E[*$FV`TM>J%7MUK\"fr?PgL2^EUl*4=[PJYOF30Na`j>(/3Vb.UD*L4h`(a\"%t$?cgAFN/l#hZD-A%Y;6C@'U`PMbeE_N4bo[b;_i+m%n\_Y]+%liN;@74Rg]kIjqgncQh?,t'P6*ksL!7K\d4Dbc2KRp@bTJ!2qRZ7haK>tr/UVGH4/LSk86(c<Yqakbc7@4mo`A?SC?f(kG`I]$V?%7('aaQJ`eFmR6a<Lo"opD4d`&:]6c9oP+$k8eucJ(2UZUT+]s:U"EY>Jp;Vn+iMD<a\bXBotbo$Xl!_l'(#AN]u"WI#u,?pG<=\S%5q6-O]s$Hu4u?bpe7r/D'/[81HXjf[bU?B)]pMBhMW>i8ic-D2)'9Dm;k:<Kc:u9:iKdf,j,XGpFTFoB,f9e"Gt]JN=KZ]A974!8%$s=\Q5<M`G4K]+f=ZSR6AckGSOaB%GCGnR,9P^Dk,-]IMqNYY7,Rd9.7_@aoXG:"W3Y)<Gfci:a5&Ud(VBHe<5L0s0.PFo>7WuN*%-nU$S0p8/<AGIKE3pcBHQX?Ca8'o<T$B]B14OEn&mV`MZ2Y*:O1f@sNHX!\ds)9!_;9*6>#Tjh63'!ntJn:TLNj9"=GSA07lup\]%O.A]bdF:l6O.F7c3HrLUafWG:TfGX$=bU^"W/CTR`BB^G%crc5&Fo:@<+85V:6j7+*tjF&D8u:4j]i=\qScqe;16TWP*6P+`jn"B%nsDFdi!YD9`9T$LA%*^dg!\ue.:Oak"4eaE]TEJA4%Dm1ll_R<45+BoC8#[fbjO'8r!/'qQ9AbsWphI)"qXiZ,h@rSAac<Q-]Z:"%c2(20<bu+E#KF[OhEq[JF'NuJhau=f,CI7Q4H&qDDtl`iTTj!uJ"sD>bu[,mNg)L4Egs1DI?il:nK8i:I4;t39QKTG%H>o?P*I"*%:3(P+LoPWUnb[DP3(VWZCSjSS3Q+(%A5:P2]%$Rh;?Zt^&d7KI+/>,0_,pqb[Ts4tb[ZR"YjhAlE91jq;&pVr"-)?oUq[QEq0F`N%)[L:)q'i;$!Ut^CHa%O^UX2&IS>]cUF/CRTAn$D)"nn_]<(d@tQkWAuG)g[bgImUr5AjcrD^&:*F"4.*+uK)9bE3\LbpKttkf<q$%%2!jZUc'Um6U)$MN7fH%\Y)Q.$h%*-L(['9r0,r.DC9446r:Bt6YC5J(TCA1(Ilf,3SLL<LR"ot,?#&C).?]0!#+oNPB\bCj`BIB%1'4]0906,r&On-+C[lXfTAN$5n&<K_0h=T%#!*7BA)Q6=[dFY`:fN+`Nh039^g/\_M/"2TAM%MY]'66t"^_7?gNgm]^.8=p2(Aer%W(9SIBe2(*1kPOOIc,5Z+0dSVP6dHe/5tGWWs/&@qNo+oMJN6Dc(NEZ!+C,]pqf:VVb//cahn0O+4\bLHaVoN.Fn`OP2o4$&U5[,%;kh@YbG#u6Isn2/BUgDXm2oSr;ei1VI&bsfXa.=8`(YaC\DMA<,*76*I97$!N7lSW1KnSsr1Qk'"T\C^;q,:2_/kAH\2$raq\%WK%'Yr\.F?aik8<%gYCp9&;hJRAGpNVMr-O-[,3+Ud12t*eT-;Oke9BG.C1-6tipUu9f-I.ON2r/5npuuG"!,Qm"!rJqOJ5oE1[U5Ka%eBP#)CU6]$r&`-c>H#]QT+:-sS':NSc'k^XPRM*uE&bpdr:E%S7l!t8#:n-(rTmE';s*fs!0h-&Ccdqfeg`GE?$#t][^QJ<@"g@Y%`!l#1dAg]DjNU8GL6s4DrPCa>I/_=iJ.Ms+WjT%s-9+UI:n?DT)u9.QJB(Q5cuE:^=X!fJHgFJ^!V,')K+XKN&ohJ3XE5=Il]RA8%EEKnU#=-(6`aZE'\bS*i]e:<R[XD.?`@+ttLp8&^Vu7kg^0Iefd^QTJUd`KK2?m_N;Y[CVgY8Cq5$kd13?PncR68_A\'Kq>75e=L%F`sUZccQ&dU.T".O?bQB*7HhCLM[64M@+aueBGBUa:?,Cp:HL^])N<ZC1Ft'Wj3H@-6"6J7BSG`7QR]X%Je8@3icRZEVDUNXJIWP%:crD`-R'spUZY0A&)qC)jt25m_,jRjCUhbT%?Bj@Cr1,$);V:EIS:_sG_eQ.Y'<\BGl1\BEZW.m#GSq<=8-'`-M68@)!D6[pEO;W%=E+.7pf%daVjR$ZSGYjJ6+"tRkN4E2T*@\%Z!d^=8'Oeg9K)HP`cq4ZKR4Qn4<9T:^rP$V1Y^VS*?(PDLg``8@tca2"^a)j'DReY%Gul3bJ-DFjSji\A9XbtJ4cng&*'@*,!pVGDNUIgl$\4]O;8QfZ,J#B;3-a`SG*)DbP[_c$q2b/i]u5juU`8SD.5Bnt+nnIt+MX"1%!foS<,UP`d+r".E#f4Ynk>`iq/?0p]l;o.FX-NmFm\N7%8!O32(?6VpVu+5(6td=]<"^IKqJ=HE`iMH5,X<E7VSiWM@d<NppPn/i%8cl9qn79iMl5h%hh]ciGk#7,p922"d'dDGfn,^4_MGiut^doN]3tUI(]f??7!(_e(G-hS^HB?Hr4j\JZ>7pX0o@<^,->HTCEZdOm%/s\@c9,eGZFN$FkbuADf,ZFAaDRgBlhcrA$%Mr=)F)1[46"R#s9!O(94HER/0GeXC6L+S`n%H32aI.82/+>]0L?,_t/Ti=/PJb0i%U`gZ#0OS9*=QfS[F0>I?PuL&GD6k6bl^Y<Zc?db'Vb7c9PoiR\leArDk*o45:FoH7F?:6+rqks7=?N;lS@eF^Qi-cdH[kK=;r.?G%A"%u\bNp^mbl@T<:+bDZLUm0H0WB<&.4V?5\"Ba;;c!DP]^nO:>HL''QL,lBo())tH#1*kT"N`ZXTNjmWd&0_a:@h;PJ:r=8U5.G%'*%%Q/i#tha.@\XZ,\Q49s&R#Np\$K+,>()"6Zqe^]!l4dcUQ+92s+Ws7>[ag4qV*[]XaPMnIl0Gk:@\^%d+*l2A<99_IQ.J(s.B%fHP8.2Vri\^@R44;t07:h6tC36O2u3#rner$!>>NnVl/Zj50^]c[?Q!f\oI>%`>$(Sd08G\6_uXbG_GkZY,Sk`d`Q?8J7`qp_g3F%!V<NZDJhALRmsU.Hi/'ocDQGkbH`"5<#ZA*T$>:P;lmbeP_L6Vqbf(RHM1>.o(aIi1;CE=o^"qo%]A5p_fr`Mh]4_8XR=k@GO_ZI%L2$S)_%6L8fB:Gte2s's8rJYR4T5jlnN>7#11#C>>$*e-nc#/iEV*aYN7X[!J7\*aJ.R*JaXu:44]JKLR:R6(?ZRkZ/"]jsi5ko,%du17Kg9i'4rn,8ZX-MW'rN!/#k6\HnoNki594tja,:]HY<.BTNK+n$#dbB7VrDk7\=2a<m0oL.nl$E0VVAC?5Tg+R\%aR:#3ah!?%[Y'&onYD[H\TiPq_f&32rIo1]BDdGo)n03MaZk(Wh`*g]Xt4`t69rjLiiIbspZJ*:`S5XPH*1I;n`"0%YlC:$n"mTmh>%!C3m<it%mcCk$$h`&*D_'o6X1'JE5J\WqEF7/aC?+CRF2=+O``(J)Qd4,G4:i.Wiju(Id+?GairmAd)u1IK>2'^g(9X1=kEaW<)H;Gcj[CLC%rgSCdr%bDL\7nu2Xe^5nfDdJ(e`dlq?cuNb5Km@Ii*%$Od:n<VeISnXm,"RUXgF;PH)CFkdg`<NQV0CVU=qSjFRea0.0Xc_:VM7'%mR^U$QC"NGqXIK\+5fJp@l$p,75l<<>`mg$mfi=WT>S$642!U,hRihM72GGfZ^bSF=Q<0*@3I!k8VXdk]TbP#X/>bc=c2JI:\i)d%IgjZpA=dThm1^>Bb36Gr9c*fa]qg%oAQ6^r/RF-"3,s.r5B?&3NU=n(nAm-K0=b/^YM>^IZMp:Nm9d%=H%!-4H$SL(]V3g)]6e<p%lSgJ'YD+uX/\Ie=r_07QQCc*N:=f.:"Vg:mX;:.=FY.jH3PcSHH81q1A(jNieUgQi]D[DO^MH41]DXSL_\?-peUB,4dsf<NV/8N-%BKqj>0&+^^%^mdDqqQYkgj%D%mW\OW22lE=GL_/Vr--?X':He5"l8Y@',]T3"l8Y@;m1tE;@]k#H@"n3>PmI9iVOGBIt)S=_R6O.%O0e`</FY8";OY)=Q8@PV5B%;d='=JeAKs=V>I6j*mV]R.5uf>XjU[H:++IP4ll\sNEGJ?pH.NjC]sh2'rV"lSZW_ctG9V=DH[+]6%V$dfpSbc"fHQRXSLXCQsoCghl;>_updb('Nm*<!tT4aifH[6iT[b/&aX$7cZ;@N\eqi,mM\B@S7bg$$i)7n_&oZeJRl3$sm.klj'%Mq`He\#_?BhRHN'YUF1<<O/jPk$:e>hq@^n6rm_Vfru/ZYW9+rS9hpFnqQ3u#ec6q+$Xu8/?V95D*VE[rcA"k=l/dp(`$TjYTeQ3%QIMK:L%KBH0!BZ9!XhnuV([>7=l7Ol[BTLs5PF'W=ZDM9JQh%mXQ/R8QmR%ic\b4q5<eHf*rC-;+.F?j_N(RYe]iE>X#;TD4sQbT%)?qZ#]hW@J>?h'qk+=`>hPUn_RZjEHfXrs>PBo*B^gZuI<N</sXBfhT#H/LUE4s3Th]#(@=AbUerkX<&lp!A9k.'DgfBmk?RW$J)%]=#]N9C%f5VFcj7@/"kAN2-!G8`q+;]55u4W.[LN&UEI&`+1_X]mf_%]7hQf8J%Iq^/"^hqp3;)Y+<;THq=u$?QU>Y?iKqp5N\#3%*Y-L<Hi:YZMXe<`Voa3En\Es!h8O#b08_XV:o17lpCc?EnVg;VYo2H0Y#9LG+[(s4TEb/i;[n@Ji9.fRKl*+enrg`cn+0I\K\l_8%TCVg:X%T>"_RB]Lc\hcSl,$iXIe[mloSc*=L-BPU)-foU<G2Z)4bEP]Vi_%Ymj?ihj)>s[o_HK&g</$*p%i4\\s+c68Z__4-RYgY%cCJ.0ha+*cXhh*U`lX.CG&9(d_R>^r$^F\90=Ti22T['TDpnW9Ac_jc=@*/CalhAp"Z?E5bVJ,%DJ\hl`Ns@KE1b+g>N])&^0:O_%KCICRYMe__q`>(5^)/AXfT<Qq^XJcuW*s[r)!\#C(FaP]g_bJ^LT>2,I_YOAo$-Ll%mn9"F"KM-1N+n<>C,eZj`;g+4q6>%7mjt3%k3T_`cDLa/'mF]DN8"-'<fTEc'":S4-`Ii?:dC=@59o'4H:O>7fGobf8ms$(.Ot0&5EX5jeg5O`fKk'?.jqd_HU*!PGjun?ah&k6%Qb&lNaJoc^ES9;W4"5J8/AR2PrT'&_Z%SS:M3lY6s)`Jd.grd&?H=R.;hl1=aPQep5tCjQHiEuJ;dC+Tq:F6Dh&f"\:ku4+%sLt`%0Bh**\C)rcU!%NW.L[VX0Ne)tF?r[Aa4c6ul-aj7jlL]mmMM6K>n-srq/]smnc#8tnEBW4n8\-@?,$%3'%]m.5^CJl'<7Karbp'3%ln\&"S7ra6XY6tqHK,@%V2I!KC]Din4a/(g]p83SV<-?J8UIO`Y"X#q;nh:3^^LrQCA\:i<:g>49SY]o]KY5Y['H1@QoAKTWOU=@%S#nF%do8?P_u-g6rmY*:*=qi%".;BE.L.KY%.tR<!4pOnIda]^l7`+U/b7KaB^iqU:7ZtCJ2MQH^@0441b=Q.c!Uc,Pu!-IpZ#M'%6a(C2IX(EZB_VQ&m-AFWX&(0,I!n;,m@i-up"Lc$#Gol?ZWl-V/"Q-UNU?B6os52/G^edoI:F*@ea\Wq4ZCnf-Z@C7LVe$0^\qlH%kDi<,1!f%+n*[:ILQUdrB&Im3nY[GV4NoG@o]+&:;s*_M<?jVTTo*AQ/+3=h`RFSZL!r4B@#mML!UH7O]7k$9c_pI)VtKK"b%u.q%Qg-L_?<l-3:*2C[X]7<_hPt*UJ*uNZF8F(dcKS,odDrp_Tq71DBfV_+L&c!AICpmajnT!`s"fo"&7fH[*R+$;e\)b?NApd?%j)k@%ai60J#LDJij_Z@=@XjlZ,'rD6P!?Ol\WVtbM@EOB$Hc$80^IisdWp%Jn_B\3ZQIe#goELUpEVS?kB1oWmE\"_@.Q-s2M*/(2a[4A%^Bmp"R1SUTkX'[3^'+$FG@Bh$of*_fK@$M=\bb>`3[RUB\#N?!QG<<7)/E&0E.N<TamWl/\XfRCn]A*F+dSUaqUI05`dE*qN'95`%l#1"ko]Z,<1^Q_E>$2)NBrKY\PoF\^h1+<*Q7mHT-WT25]@:nKr:*Qf_3fH-]'rD5>G7IPYO(#YGnS,0O02arL#VRM`S7<<?$_P$%.:2fCl#sc>CqL\OMlRSg\I`)rSK%(n6Vjq8G246e[=0IJ&uu3&gs68^3'(+a"?c\d?\AuA(q"H!b+[hCi/_/(I0g6O"moca*l22r%Q_sEckDmjA5:h,9c1Ro9]81hAc"rrh]Sj9VCDTj?gbM5E1%-;=c.YUNp8.+$iosc*f'Rb-^21B:+Xc_e4iOL.`4;Xi=\gbf(X^Nf%mqb/+XDC_'\%E+gB3'"dl]0OpbfU,Uqm-+l'XP)2F*h(d+`,O!X!rq?jj'cEAlqc)mX<i*heQEAC[UE4qd-V1GM7YNKpd\nlZ1bK%hSV@FEE\KWZ?W:;=OAoWMFWEW%bI#(iPinPXYcd$)F?L3kj41E!OIY-eB)lc'b:/paTQBno^C>\^GcXHE1"j@oFQ<bZ#2f>k4)f#%,U[b3[NC&`L\3*WYJCG=_2c=j2B=9uf^##-YjYija1cEGK"aK_$MLj(PJVQ#RFZKFn+,gYC1Tn0B/U:,j8"sCRnfrHG;HuhCX\^F%^<J@H&o*!oqX0ft8b(?G?da%6_i!kldjb4<4tK.XZK[l@3b<bOhj_p0MXJeg`%@HR./WnM'QM<n1S(SNO"AAZVGjlUHXDZ?A^e2J%[0eEGD`VI3_TDh$ZLN?U9kWJ[VpH1UflTtlF7fp0:1Ou[j7u?::71Fj)UDd=FG<](mC74eRa1gfXZ]Pq>;i$n8,&.7fWsa0/%_K%%r/m20DXM[;Z2,b@B4=>ZaXVaR3i-c*s/Yq6.'tWl>D9T]VA%PPs/K)sdWAq_q%p0mQ_lQ@H$\q>?bLX^F^895I;+/n$P6rQIQ45@%+M-an:Yt$LA**rN1FtbLr;N9'+O74h0KX]#V?MdB^@-Gn!IlIO4d4FPO,%.*Ha`jVIe2RP.;1SSR(8qYdIq4=at>p6W;gRnIn;-t%p2)qnFB#Q'!`n%$<)q:kK(WVr^&2j@7];N;]Nn=;r1^B&\T/edfl"G^5@Th:21M.#IhDVHHT2P<%sdZ`7=X[L[E]l+Eq:1hiH61W%089hlhr>O=p&!bY4Uli$oG+GFK9cHhK\G\GD>7F?$R_EL%Fr[f>I[^BGmrM^>F4SoU^[L5SNtbML6h_QK[t@m?9P*Lp=iX[Tc@<W%TmCr\mBV&jiVMV@<Y,3HY>6dNLL'QJ($dR>QomJc?@Z-o5>l.l/ItZ-YO6G./@></Fn]BKKN#,1p8\b6?\?G$B\q4Y'<ZQ.e#,'Z%lh<bpY],$'LMIH`Guq$XU%e=p(Vd/9lALiR1<)pL`N5*h(U(XU;<,#EK%DAscf[i*]GZ1S?%W6h]6a;7O\>-5od\J5O2(F_X&<5X%r^o,W-aD4e,NSUnYG_EqFZk6H?+h/fqj6GVOn'"%a?*S$I."q<AQbf;ZTWZlH1]QSb1YL??a`KC@X5EW@`fnVakdg_LKJkMD"1K?%SLmHee0h7JcK4Diocs0GpQP4pVY)0kQ,@t:8^+gcC:9_PXec?s,i8JI4UE;2jXJ&;r9]WS:a<&H6c'd/n)9YA;fHj:XY@i,HWa.E%X+d6m%5U6*`hP'CnG/8:%5VkOnp[cFT!B:"bf>L4'CfnTrUqNGcT]%SG^N/uCXsrHm8l[::$[80L+8KAn)M8rI7ghK\ifT$jfJ25%Fl>+KPG]s;VPAnFr'IGPi%-ujEpc(f2/(R:?\ro'4EW,dhdjAsn_(U&inU=O&a*SgnuXmpH7R:Jiej(K:Vla?S5p7YZL_'ke3cIN%n;-"]m_7U/(HB\g<!j+Zf=pc70bGmu_hVefK02D%L0Up+s.,uiV]PD?aFA&p%!Ff./!p1=8$D>Gs.M77QhP.cnlG,3QMlTHLTAdO%=>Bc0m>Ga@;.n5RL[BF!lGS=gDfXR;pHYVYmE6iS/UJ#6CLC6BLQD\Z)7DAhp&*<h#cSX3rdu39hX8$gJ:@'4Fi44.$u1RRe@K(<%C'N>`4LK)%lRUNq:c#V\28aH_\(p54%5280;SEoAL)4U&drHNKs36IHL?pP%5=2PlO2i.!gE5lOV6CNsLa2p`I.42i"P(oV-T3,r%#j^L1Qh]MhrjEI[L(qu$=ZCX)'PE_imItrthHbR/oZ]T:57PBd^7F0>8\CX%Iei\un7V\Ke-s7mZ*QZtWkbAm(ru3(]e[,#n)_[O%3\TYplbd#!Yct@U29[]8-l;6=]']5WVY@CX.d?ob".;p1SmhV,0=)0C%l;u<K:..<SE82c_t\YjS:+5'`gXH5C?*ddc2"]rNK:8]%mVLq4c2&qc4PYfOp6:S)qHDIRg\@$+/W""CJZco=Nk,]VF<&`_dCjWBB';4i=#0O&FdSl_&D;_"FWL1ag(oRbWEnqHN*i1%^B+D!%n&5Mmp1[?S*J_2#^N`S+cRt5.J&S)?cd1BdW0"9Q2Q1kJ&k3,,YZ9X-*6isG^'q6cK8L^6JTHJ,(B<)8=hf1nqClV[dH1c0Bi%ZI%(-e@SSAa]DHOW&H'6_l@aNkEbWR!8BF>(=^=o/VK8,(GIfXfCj*u"`s9"X=F:usH:T-:=:i*O<skVZ'2Pg3%u8]S<TZ^oN+k;B_R%4UBpsgs$H;WeoT60@]=N:Z'&g?\%)ek9H[(=P[FKnaJA_!4;pl#PbYm'-?GL)kiAM\e55dnM:NQ)g>jM!G,V$q8J9N=+(\$'-[@s%WVYnV]<I9/j^o?CCgQ#pE@P)AI_PhnVX_SfkUoQ;X;(AL:%.YeYNakGV%?hk?SRd!PsT<]WET'V0(*j10m0`g*:M3-PZXJ3Pdgpi%$ZR?UhDthNqq7:i/TIB^=!"8k",T"CfYMPW+,@$]-SjlW:u^cXq`$Acm5UA(`)"&AB'KKkXY=Y[X.(IXSuO[iI_>rd(@([k4PNT_%,2q;JY]9+Q%RYEh8\jePmahF_4#c-Hir$&;G?u;k;3\fk_in_GmAil1`kD&#-WdWg^26+/1L&V(T60^h[TTePKcK<$FmGbOMe[Aq%e=_,1qNM*/bjf>.:"f@4BA'l1HQ1/%P[$6S4_A&=If2)6h]]/oUQ'_C+K<,[k\l.fp'G@GGB&_]qLd-[5J.-VOZkqq+9chF!gLi7%E0*E6:]C(TbfemFf:TaDr0$/uo\DH>Nd+pp4tTRK*TP#b9sq:5",;W.q_Z&69:&]5Do^>Ck=#$RcsNmphV$h57go8?@l;F^\Y@Wm%*li*!-CigHFfGD](-8:%]mfDG3.7M#eT]mO>Fja2@H@4_4l[=@8(_&FiUQ=G*^8U::Za<cb3I,/mGQsmp@FQ$^Z=<]RY<PGlX,/(%0V,8P58/!?SN33Cg"i(6$`4lTZSRC(WIY"%SiQ_TK8=,"F*R-Y&]&`/WFYtEK8AZM:2</i]D\8j*T"<u#2@J5ec)qJn6WP*^UoQo%-[o^(BL2BnrOhmc$dC*f@\!mU$>Tn6-bbrGR[i6?rJ\@)G.YqFf(QGO@CFi=2e2a\Yc^^t$%:"!2Uh#"q`1dN>cb<iF8K+1&[BU9%eE;:+Q]3CKn$@N?As\Kjj=FpBoZ]!-;4/M1hSW2%b<J#3%os5?JtlLC,>.-(mIO1,B$4HEoC)EN/_Ru=:VP$nr?XtACsc&8kG)4h%31k[:qoqpO=KJ.Ps5#@+I/POd%(=>Rk9p;#FoA?&`-8fW4L_WPrj:=8:"t2=@bRNF1EHn.#]hd0U,8GJ\[1b^/F@Zs#b7m"e*l2\%r9H:V7PRZRm@<Y\US4*'((0<JB33;sH2)7Kq#)-:D6Dd4p@D>r_ioKQ#LE2R]0!Rbg\MA/iUlA=0Te6j+*;PHG3>Dj)85HM<qdt3%ip%97H^N@^acX)T]'6Z0]$S"@m0X7m]<#MqT39uaF1PuNkW[5U:7K_/R4C(o)n]J3jfE>THM.#BeW"qS3BYZMcW/%uF_>VW?i@\S%9%0>8meQSjj-K)qG5^KUPo#d=Sh&Fdgj\gMDh$&J$14WPf@5Fe5C^t9mRR.7gK-3)g4!LVR<\nt#sNBYBC0>:GHi"QhcnNDpUC*S%p16J&+1H[qq3/5;qp^)3(qFHKoCfNHF8HiV9PHfe]D[E>peQq[h0&U?k3au_U@BbXqg#LF1hp"`-N$JNFDj5`@%6VQ?13;oe<>;s%7#dI=7#fK/h2LbH2%&YW`U*<J.*TAAghNilc^5M`'MiKBFT*(TU\9*7?UKgMETOZJJ)/b%[W1`-[kit3p[TW]rp0RMV;2%iptX#0%:2N53HQ[P(-.YL5)_9T=#R_,':)D@t[aTG<ii2=qNW6^WRF[PhrCa546M[oJ4+,2;=S95liURkV!qq$>q;UFg=^0<g?XhjEq<!Sj%X6Yfu<nH<`SZQebrMp9:.(g]_IN-$VFL;UnX33eQ^Aq(*hWflCf<7FI\PD7-o3&d)rdF"H^3FWUG%a7dIPi..^,UlAd[n,00-33(%Y.iJJC[U;jmTui7`Z&-1"6.G/$[gBJ'g,^4l7ZCk>j_9gB;AiT0CRrLKt1Pb]cchH-Vs^[lK*q-\mS^H)5rlT]3)WEn)]m603GQ!%\Vad%QS.>H;=']sWBRLZ>Iq&Xl.PsHF9+k7^Qa$np*35Udk!>G'=@D:57W[s$S$#&5;SYsP5T\A1=E'lFpc$KDn&CTpm:Fs-;42;%JB;eR5QID+']3Y]"c&>9cs6U.e+n6F4AE>u1neGqX'BLA=BUE*$leM/8\HB>D_@thI!PYhRW%EP4ZqbI^9ODN]]e8CNRch,f1YT.%<iu6+(]T2,o:8=04ZoER.Wsd"o9O<J#IO3b;gn&Sq'qrf"s<^2E%?B8'L(X_QbR=lDr*.`PPmZ</OQE#:SsklHol@Rp%lh!)FRWd%&YC6$_diSW`jlIJoD:mSl_+miL<UeuC2li<_Fap4p`Je;jK#9K?i2a+^Ne_oqSk*LbX!9#!&$6j?KJ\OUXK`k\@-R,<fPT#:&0P"%n$gT,gH^Mf(EWK6o&7a?\+eh583VDNjBqZZa,BP'<;,C,VsO(HUJKDGA!!9<bG1?TLV*K]-!4FNBU(@PUS.M/F6H@]WbEdU,HR*D%^b=$KR],/eWD0$ZT!$GSf9bguih,d&p88Z*;Rm5p*df)KSpGhFo#DthGl7*(<ebSDlIsFIAp_t1&AN8_gBfWSqf=5sGMb!l/9(O2%"$59`jA7i!FTi\8$5N>WO06,jdq,^i:1@c<)%C3(QK)`73-toO\Q*j!jk17^CbEIQQrgP7L\gc5j7F%hhHWTG67D3"X+e1WBT$3,%EP95+HT7q1E%Lt(>G2f@Q,]"Zp%H=\PNf3@4c*U;#ikB_cd65Oq^\r(@o6?WIqJBENRM77+M9Vk>4/pc14K-XGP'mm_k5Ogc1^%"%C*PqV$ej-8LF4ObX65hB)SHT>Cl`sb^t)Q%quV&KA+/C"s#rNr%mrEm%h7pQLOW@ns7l6SgYHcihLG<JBR0$qh!0UZFoCh$gFm@"%hS&gHh>d6JnsB"kS*rOj5BQJCl@fJ0Y$W:)bO=#s]R=uP54)E7pM6)C4&<Nk^K&l5QBB?0j404BI_1*lp#V1ua]U^oZ/DgVR9s)[%*a4R!d'l/$^MrB#35>CcLN)S0`ajP_a2nSXbI8R#SmSI7]=<A_'An+t(=/4lg20#:^%,q*9E3(7DbUHK<k"Y`oB*p\f/kq:h]2YX%4'XlGBX7?nC%LMQDgspPnAMlF1De?<A(.,tA$R_.bFTaZ[.o%9#ODNhqk(q#bC@79&tFIDGlGY(lba:k%JY!ZIcZ0r(SX+e@Xd:R%VmGtFT7?kK^,S6l&5G3d7/"OPHu),\X[1NQ]KWXs(Zr>k"eN*sQB`2b4T>11hna><mpuge&'EF3?E0<X&uQLr9+rk2'2H%e]a'&T%c`\.a4>\E2Mjo;B2tUq:g%3%;gleWF;dOQOHM1C9$Bd/ooctT_\"G=.El4eUi^sY;;ms+YO#9&8LS7(Sp"!lXXKLE^TMAYt-$Ag+%\:!L*G:;p`^Q1rPkRrHfEp@Dp]=oIrg\J+AMTWV:',4'Vd<kU<)#;bAcWdo,*7]f7np-DPa!6e%\/AuQan=b?fMNL$SYDG2mR2Qt%pscnl$QGH3magg'I7LTL#[VA^ZUk(+H]7Br:=BHUdr%$,XJVN[q!-;brQVM^rj_InOo8&I:$CYZ_t/YM7T@.[2n,+KKtU6:9"qhX%]83.Q]Y"f*]fu?Aer.`"cD9nCi.sO,V:4&d=*h8mhR?TndX^]E_[2:+lL<AZj*2g4^2P:qH@=l&RH2W5f8dOi'@]6/2g:L(]l0i(%HJ2+SNKV!``]HIcpNkQp,uc[oL4P6%<\pH?49;kS%B)5S6!\PKIX0o-+&f2-,IX%t3BkrrZ'PaT`mmS;<8te\0abVnGD/*;@9C>$%E,L#`j!Ug72LR%!!'n^J`r/PE=SLlL4;?9c5<o1<c7oS^%(r]hbP6*Y5<Sq*L#Elm@Or[ZL4c?IbJ=W1k[K;-5IcFsmI36m0Ba<$%Q.<3RQH80WWMdB+Yb&d^q:YbnCR8@U]^Q]oWmj(0qr[%O.K/ij]U\_?Z)nGjFG^XDCA?D7<$L>'I)+_qjQ^kTDf(gcZ:.trR-n$'%2WJhQCk^Vh30iDl@MmfPCMG.8@WCX:F8n<-ru$JK:5]0e/)>[_>/g&f.n7M+V'G0+TP*cpgCrT\0?l7]LC^"?GI;aDo^h0_hp-UP%e3mm'Q[O*qmAQt^hApK8NJbc;mp0<9+&6>TIE9")UC$DXb$V&Ir392HlL9`c0>eb[A?"=aYjsK@Tj@S;'%,nB^%Br0;AOdc0D4CU%4!*EDmG@jaMT+TthnCrUc_9D>N]0_8hn9KTfu%dh#sLGYro?$Do_7A@7uOQ<4udrOgQ,EK*-R),`kmRRc^kA3S#bL;4inOG*%']m%q(WCLkMmLprd0AEhmJgB@.l>1qCVO7l/<ZUEm?jOrg]S4`J'f6J&"SMHuf"SLZ(6FXTbI5.*)(rYW&38\HA`6)_0l8\GY4dIL(Gf%L[a?W?%*'?ZOCr&8NhZ<hu"F>"=Iu1"ER'L/j4X[Jf[7I&_EMY[s/2N#SrK"7r[nE^Y+rJ:L*mRO!*NEA2ZW)oLaT3&>4fm)NFUm%m`4r*glHbb5(N2j3Ir9hWatJ:o3YP%`/!jLife$G&5KkuErW<po"i0Lob<IYSpuH,r"`FL>87N8`=*+%*Xu/T\8rCqJu*2C!T2)%%,m$jog5QWKc=(-mY@1,5/Cnl4B+/9m00[</BslPd<H#'Kmc[GH/2,4D]!j3EbDUF3pSq]k29bX^(+Nq@&^)n%V'i^JMTc=+@PYje%o]L]gE<>H:;"=D;h-@pj1)24!//=c/mSq[l4A%%?=SAj(7k2+-Uj2i^q!-*sRG@)%a;t*C:YeZaCRZrC>FI"%D&:af/@EdYd;;mb%lnP-9:/i:h?&;pZ3J28l.o]Jp%7AZ,F%:EjL>.h$R)c9Ero^-F>'&hL(tPGmhp/Yo;rDJo,;&Jf:Vn^Pg]u:P]=hf+2josVMACKL%\)Cr`ggJ*4W\%qI>r?E31d7^(Q,h2M(M?<ZR&/CE5"_U%'5Eo3k'c[3qj_9(++IO80<`&pQB,))>Vr7IUq(1<L..O\`iiOpT5fuq%3itHf`jR7]d_HWb4gaBRiaj;[Ilm(ZS3Hm$NH\a"(UciG\QjQ3`A\QRL.K_@2`9h5#-LYrgmmRIn'>h>NCr"\'@)^bJD"PsZgO4B%.SN^pd<sNqY:&9ThVl#a4&r)0Y'%53-/OJ/`TfB8N^h8q-i^mpL#.3Z+Xd:BX$D]``L-ar,\j<j"F>O#iZXBKfC%X0;S2r#=\U\`%CJ1_;+2E4#p(*V$KWdB)K?4VtF.XKn]s9aQ]V'2(P[eG'[YXk'^,!!_Z,?I4Z'ok6i7u`Jm).u2L&Uo&'BVjV&G7iIJpJ`rb:WX:%qiNlbPuZW$CM0=,5FNjhl03=q_06$,W:dc:!r;DbLG&Q%na&\LCN="Foum!N]l-2*)caOuH6+n,SKO3c?@KIc`O%:JglK&*dsZ_h%gOJKFX*!Xo5>4!n4R;`r@sNrZ`shQ>10ZX1$g4R$[L-+$rhB3<RB=@"jVQ0C/b*XWXN+qCYPR^;T:J&$G8*TDQWHAceHF=UdA$_f%nF$17Y9;3+]_LpnLX3G9s3J;qF7l7%?PWQm^\rDUG/GKT[c*qao[]MB'.A4+?9!$W$q+F)?MO6mnqZo,+23,OrU#(ESHS0Hm9:+)%?TrT&:m?AGA5=4,&\P)L#3g)B!EcCh_8DU\eY*B0s,[33gu=Can,;bUX)h;3+lNA6/oH=arrhP8*NH/-[gtWK?6+>"C$s;)oqA6%%%rK1E[d,8gHg&p`4hCOm6p?b"Vn)gQRG<3E\+gM>J6RF2Bf@?WK=Ri[W9L>hhM>6TDj[J-G`hF$DW9_X\tXPB(kUWJO4mFA9(tBM%%)iUcdq_>8.c'Dj7(l"<B+af>7/`5')t^h[.4=*Yh<CXIa]>uH2ogdh_,!D22O(B.?EXdVMfbl"lHBlHo5.'S^DYA7U.`(%lbLp`%hs2WC?G*)'Y0miQ0)9C[DD_di1M>,^h=Yo&0OF=p2D^^Qq<k2!NIj)A1RKfjDB<5M7G(Z;dDRQLf4<1&9>3Kd>D(j>*M"@#l'cP"%g0hSQHXgYA?..Qcb:WM6GaB@Cf5uA\+rmloLHNEsO)Ps,]0g`Xl5-ms=#O"CXp8&6`TZ%_<C6HoWu<(>%<Q+,E,_<4XnZ,X`.-30%r2jm\FJk$NH8#co!WH%)`]Do]5;_`GKD8[.m)4PO>MgFbc6sa@<D=OQT9>kL)V14'l^JplOacVcUImP8PdO/._@Q13DV,KtW>"ou%/cO<[8+@i'<]?RZV>+!HiZ##j_Y'(bcP-(G]SO>q9da8chte[4ZhRJV)X,26]P&RWV;Eao,IoB(ei-fuZF),AZc/R%<gti`r")(r%a_U.M:*Os8rRNp,e?u'+43;<0a_Y6M2]CdDVfJ1>i1H?BGoc.Y^*t]jrVi4u:mG"8m`ngr.f@VJNmhMYrAY54LE\9mV]NUECC]/1%]tD^5WlKGFlZ%aKF]FD9'Or:26[`5Nj(.L<XD+CC<,bDU+mYiMlR#ohA5[9<WAXAl*FjOR<Z\&=P:Pu[8]P/"P^#rlMYPccej;tn%n`)SQg5k9E<An@cU^=4gfQ<=Wm2X,u;U?U5R=k\ri+J7JN`&/od3M75knn1_Fjh=.MHjT8EADNkV7]Z)7#*LPM\/">Tbn3'a2TbU%rFGP+Yhr-c)E!RQU^e_J+C0WKiGhnXQ3e#(<^N,n-QsaKG7Z'9nA^>%/*mSc[(2@N=:+M?+k&Hi>),7mF?N<LG^)oU4,cD>ol(#F%'9962:Ho^XYO4K9hC8CGT<=ZFXFUVml$]GdP<@SqpBQn2aRlZEDl=SS3gQA7EiFhYY[K;?B2HLu^k:@&=\pL\ZQqk.0HM^Y`q`<.%[>J-t%?`F]Jf2FXB0F(J@uV$j7R")A\=F<KZ!kSQ.YD5d]gYE1Qm_0b$:"k#rMDmoYClY*$<!%#HE3h*1HU\QOY5cld1V&Pm)3ZF%PD`n5n5b=$#@iE6cW)^_eQmR'N!58tnG%V.B&`]L`C"W8+mc-tObA86i?<rQ8;-nSoe8_`f&m__\dt&2CIqBBgfPd(X<j3$W%IYo%fJ$bV3l=,1_*`P5Ri6?&YLL;()PdZ[CD=Vd9b^/)\F-U':dV>3j,>id7Tf-fo.MWZ#A];18=!KnTqThC@uCqSa6sW5>]L!`@Y&Sd%a4Og=4-buUSP(.IQR*H>p<[>JNE+IFCQOL[3Yj^&;\dlZSe.Mb9&*1!MV'UlkMlpT2gpV?G_Lk7=$o(5lBj/mcuc#s%$QlK6@omD%&@7QkKc[YL,Y0<I(i(IHeUS?LnqB6Ql,5*<nlA[$+%BPFP@d'E)sfqfld4l%Gpb_e0M9,&c04'i9IJbHr!,=ocdF[k^Dc_9krS)?%noW^.A<K-$V=_eYcqjB"IV[B@RJo(6%B16c[:-OY;ii>L[d#Q.l:.`-_r(u8lDfgVko0I.aTnH[32=H(Fs'LGlIbc.3\"X;Ou2M5%b7$k`@-g.;eYK7=m28j!^T"Im<pCn<#t(S'X&SNm@?b/-I;TJLO=%Ic16'i4(fMRi6Z$XI8..PMbRt"$;=]Gbj`"*rL'>DJN&B02%K]/o<&ZCQ^5!5pT&'i$/).fIN*@85hLC&sCd5%9?,(SiE%+VU&MO)CgW[O!SP9BBSBdmMC5R5NU0TtlCCgn#Rf+U)pH`8EH&Ufl\%>eH[]K=@g61";8PL3-!&f&m;ED>O=L;0p<KaoYiQ$fhC_[(1qB=BM%#9e1DGgD[XjEYYlNg\F41/]JAl>6k0H\d>Q(oJ0i/J2_54%WYVEsP-74/JrIcB^![5#Cp=cDoJT^QPm5R8=AcN#.Dd.:!+"ptLQMU<juA@Z%YYC5]&1O\E9KStj\,=eS%cuqKEM^nfVoVqF`*mJ%$.o=_`5@hr_uO5"DLXTu4P0Ejp2r8.jKXISqR56Je_uuG')KL;+9CeLcu!r4bB19-\ZRq%6PXdr=GIiS*<JQ\j9n95CfF<N"$qZj%5;qm_Z]eR6JR!M5*d\t_^QY6$$#n&p;oGBQ^dp7"*<K3)L7uu#MXN/Hn\)1p5d6GW@?K.+Yjju?%:rY/)631#$5?Z7Ugm;W%o3s0%)Cc7#XM]u+Q5178NK2_[#tYs@frBW&$0gs1N9<%a$H_p@M2_al,W]dsBqYoU^oKmn%H^];RD4>f'M"KPgN6HX[F2E?hiC]5_r//0%%>O^sK\*?=TH?]ZAi!=APMW4*oIg+AP^[tToAW0Or_5-tq5:b4T%!.B`h2]i@Z[bA/1&NDo[Bs7?E6Hl82[3rhn$!^3i8ci8(Lj$%pSY/shTNkB'-O*ao=8u+F)>3T>GGu"=6`V3433%l>7sD.]#7+o-#P6F+Mg?.mC(/"DMHqV\g@qlQ[@N!ggdGrof$%S$tKE]8a;c(%Jd$3_)a^HbB!5N0]HBYWc]"Ym(<p4NL2_O9fk%@</m2Ik03GHf5.`<=\K6u[4X`bEAOb)oCTabb[GsT]M;o<Kb%mOgl:,>!\fa;:%MWRC&A:*Z]e+3gLMK8fqWd;f5fjtko?Q6olVh.)&A&el>1)8hhbXs`uP&R%[l*6Ca3ogg"aG\^7ZM[C_8U.?/1EE"ZGGm9HkqY7Y%1mu*GPPM7:JS$+riQ:fX?F\D33sVa8A3WqaOdE;gWs;P\SI2/k0nqkjGsubea[b`cAc4M;.W&4HBMP%HPLO8d4Y<SqinB2<rVR@Z%!ac0a@fA.iW0Es3Q?*U1j<f9IM6?.-;:D#l,c+LkcHtM#LG#JoGNaf3FML8A_tQ,j'7RMH>&kjpI$:F@G(m)\BmNLoi#KAu*]+0V%m"e?c$\uSsX]<jhCDe"Rk1W7b0<E9[^%aunic\4!`3t]E\JIjaothD$@M_X-O.hS#6B)PNR2D7TH_X,^6'A4H?gL<4-Dn35#g&GN%QL\'T&KSl]k_gSnfS,2#>TDl6!tl<@%'_("Xgo:78Q6(5U$ITb&/d:B.0mi3oXQ!RcI`u"BoSG0fQk:)bMX*O'<3c,IgQuIFA.o-%?,jb>*G:NqdOG)eGh9Z\\L^<TM9[S\?LZ6JOq"/WJ`9a_;4M1DS4b7;3&RC#QTe"jdNp%Sl,$>8TrBpC2!Y3!X<$j;XJmi=eWPs+%+t<&P1_oOheBCi"4nGA!NJYVb^*E9[,PB-J#U,Xb@4C>>=Hal@UgpKa1oAVZNAX4^-=K<b)b!2;(pe06,7W];K=\)OKSC?X+!SW/%+c;"_+XU;^NUS\JV\3g]jML&$eeTEdKFsp/Wj-PP[*2I-/u)cCT?7ph*Fl.[ODpma(VJjeKMF@>WWf81Z%OiE1MTZte-$09)N'3#%f).d1-tC/sUL7qTe<n)Y]t2i/1!r:CVH$$aZ&0H0:"(TN?"9WVHKr@N/]lWmOqP6fU*;LSQt_><k9q#[-Q%NO(t01PYT+l`;[=2V%;TtJh+os_r``S[A:l9X/Ni+Cl;_7%4VBS'[R7NPc4qOSk?pY^&,1@Ga,E+C7pu#pVXb]Y.k$!RW))r'KI=.rMSnTuBI'"h5O_Kf@%f%>75U^Hl0(G!k?98a78fRPDg==b#_O*%3((;B62HDgBcEb.e"%>8!NQ2Ylj&M*,F@+#RRrWbc_J.L.K$J*/X:.UX.$43][;KF+Z%$HY,*94LX%W<-uW)`f-B`nV1/RT)k?E]C$I_h)9MJ7scd'<$g0@A,DRDcs$!J[d,%6V+(1=p/M!OlBNJ@kLrT[H&`uG`s8pTqI\q%-4!TGM:=j!6NO<NE%4j%+ASc-Q:Ep"":9nd$A:]:ncX'eQ3j>7AGRgJ7MeOJ,hbpXC\0h&$3a[jjI\+BFmMa,cf(UWcle@I2'tmc%Up`m1@n8=+i"1!I84dbZ[mP]*>Zdl48o-m4-8?=E1[GKK=;h!6[i%+;0,=AImPd%PP?C`K$WNT5qbiEAKk`I29*E2Nb-3O0iIOfW%_$g17fU'1-<!Q>C5^*[+(*Prj0.bQi/HRc!L`rBgZ^0<KW[X'TP9BBSBdmMC5aemU]7PU5LR`pp8&L;8ULdg=@<R?H#ga:p9\nb<%9Pp2hg04c979Zb0`WJL^@o8;UHjSU8lrl1+i=mNr2!<j4h86.+;6$R\n=l&BUni,\3g$[XCN-2\WHt['nK4).<nnat\33r6Ha)N'%@)_NLMVEau[g+F$%p%I,XLLDqEI4qLp0bl,_2@!"'t4DuD@]e'*ium-`tc(^q.cEOMPjL.r8^Ef+P72gKT:1GiPQVl!oem*8mQBg%c4g@ZP*/Hhh:L'$jts2Z#Y$nTe)'eageLZu(P]uDO\:e%$RI//-o*f;Ek0Kla&"*!\ou(XL2o:mrF77BlO3^ub2cgtr#!T<g*A'B%#g28K+qB2[\M-FXE=eAXFX[gjO.]/V9"ND?:bL?6rXkC<on@kuATDWnpd\.5=$FBBg@K+#;Jr!KfD-U#Jo\CS`?G3mPfX(l2STff%b;G!'"QaYki?(@R>Sq'Vrs6d/g;6(+Ek1c:%F^p+=?aK>g@GCjh7R*H[%+<LRpR#TjVf'C6b1u[j'X:!$_:AZ+%*SD>PL]b/iORF%&X:Bt?hd,f/lt/"L,(br5!M:!q1\fH+kKDO)i?T\b2fL8;>tF[g<A.=4c$3Q4mc9R&ZTLX'O)NK]H""FL,(cZkKDrmb2m%/CZH+m%bB8MEJuI5<38j!H.lU.YA#p&d"Qa[<LkD@*Xt/KS.$lGj#t$``*)`5,8!):,K3VoQTj4b,EA3X#NMX@/MS;o/D:TmZMZXH>Z?"3S%3.O:OFpZ=Q`ZbnE1-+!t@I+VkbI'bY"D)Sg8C,HO;tTmcLkD@*c4t=1Pfjg'P+c-`.$k?REAU+pA15pY']kLO>co[O[F=a_jcZ<2%Xt@dB6WkCG;(`a/obHSOTj4b%.bh50&+HYN>GY(FQXRg><5$P@34cD#G$2B2C&M;t.u&)T,+gWt'E<6"S<e)$b!(R,\^ZoWe,sXJ%&,?DVqWg[oU(B/>;'Z2.Tr%*&UDnM2e/CIY[$$:h58h'SA6=ht[N)1XLId5L-9X7>)!H8VP^i!2*BNYoKkDr9,2lr8K=Fl'7Yamg%X%4uP#sL>9KG]tNW.^*R6!?k"=;+0^4\1\Z='0O69RL:uD\X#7@EbmD1gLbRZ.)e=9eci6ZGn%I!TVlpm_(n8ka<`bKRiZf_c%#8%QDt9dQ*CSY(i(H-CqN]8Hst>o3qeH-\jDU?&#6:_8O!bf5,:@kA&H61aH3*$CRViNGYebD[n.ni_$aXA_LOmE\O)K9p=AC@eq?0A%pP4t[?eFt5NkJo$U!R?1Mc&LU&_nornWiPtC;u"MfL!$JTg";1*=CaJ!C[8#:;HMn0Xb/b[>G+O,opKhi&-TJ=VHbiEdNI)d)d^P%'#."8&KSkrGq#4k3/]L!L>5'.9N(\;SQ6al6)BO%oe9!27?J]0[cNA\1.X1?6E!lp;H0MtCQ/mM<*Z;'ar<c\F:bd2e`X)l)ji)n%M)&+-qK`;-_\d$b,%la10Nq1+#m'4_boFE_WX;IcYm9M!$_B4U%oT2P]H:XE&4f;tM,[PiZLMAQ0R@E\lUeLn_L/G,6e`3Q_`I@o%-j=,[,h#T'k^rR`5VjW_Y0c6g4\3Uq'l.+&6k+_"PL`(5&uhSOAE/SFf:cA`j'XE[r+NM`@A/8mi=1M=fnUO\pM#0mcC@:jKENrY%S:S@&8uaI"[Dj8`@k;j_^`*n\<FN(oFR0`6M<C\6L_$9K@?GbU^?^0%;aCQF1;E;]6W4iU&Wb^($K:=bMBj=S!!D\)(mIkK)a+UO%P)>nd!3(:+@5Zoqnsi;l@Nf[^fXNWf%^LF#2kZus9OW(DGrdE7:o^aCK$tF.N9@bX]>2=WV5cj\AaD]D_STf>FVnnG]URY#"O_99%_bsd6ai9*5\)I-aD;&8/RqRLuZ!hc`LbNuhFW[H!$8foteF^:*i94QEQBH9B->2[23lYE@=I#bpYZFIYp55]$6BdB^7L`#0gUPYQ%&$Z`l%-A9S5DFR7_"tpXLBE6L*]]*',WO0OLGN\=VU3d/C[6$KK1uPHnK^O_9p/Xh"Hl3?6qALF4[j0(E>Yc8Y)1nCl6_g._)`^7%^ndH!6XA`t&sS!Ip`u&bhuo-ah5H!SD\WT,8i"D<h#YYA.rp>$a2u7IQL\'R&KSk2L,J#<`&72ZQ3HmEmJ&$h[5so(NU'\sc:B\s%!U#)md'bF'0Oc`)"KD3N0ij:urNIX4JDiS#H\?o4nk,_36BdB>UNS*,j*]7)Vf4/&,[XL'JbAI\SlEQD!UirI<)TmGjGZ5ma&ngY%APManaI[_#m$1*NKdIaGN4S$EX46;JW/EfM=2Rr"cn_u,!c#hFX>(8kW+![90PI0"l=k9COGY/&]?*[)ZaQC"@Y[L1I3q*8/dsZ!%\9_h(>a*OER'?h\-<1R0-KL&XW<Qnf;$qTj.$KbN6NsNY#;&sK<g+YcUgkqaYdtmO=ArMXX#Z_q`DYQ-.cS@E6eQ?-aR0LZj($Sj%Ke?el^4t$@=2tF(;$tt3,a/f/5#d^7o`<'!\'&G_84DbGo.[VgW(E3AXZ]"d*dK&0D5#(kLMPg;gn-aL`<*;KU9Hh)-L)3:FbcP?%/oCY<R'91<,;o3Lg!s&3-KPS/cIdbkN&@jrTeuS^SsOQc'h]!i-6(h`(.5m%<)(OXBE\Ib]P;UD*CElO*%D:eMspXE1*NuM-E0,0%/*M80"[bDI%$:s&5q8R*%k#I)+idORhMGKp8g$p9YV:3"DZr^!Wuc+5WMjXa78elYJ85NO(fC["HF1f4-rVGN+&5F(XYpj/T5Y.;%h?m-eNI%tRjK?-k=D+&:"+fOpeJ6,-5Ut`#o>ZM/W&[U3%Q7(5,cJj%EE9f0e#EYB6F([&0\'R:T0Q`<BPgcc81!p%R;JmV!b-6?%78elY^sEm80Vf>iAQb/7%Uub_Mkgb1"'+ST<B+dE8"3MM^L<Wmf_d<4(CV/6%U25^d&KU*]]b#_0c4[93F+4u(H:E'(6D.%e>(9s%[:KN]FlmrT,S.3JD-7HA,qQ@PL0FL"AYj+!ZGM\:D3Z\'!i^kOPd8_:[dJd!NN)dXP*ac[>PAFL$*AN\ac!CaI<p5.nli\*3p]>Z%DA81)k\T,.:^bD+ft*n=&P*t=l\igNqVn>Rok9O*__LN_4mON:[$s=@[/gTJ'r2H\p!KX^n!ht_2=Ffn$*&07?kc-E>4lR8P4q`?%Z]b&XYD"-3m\+,NC^$ek7Qm?Ca9sNO-?SlR;M!Ic%GMZ,JlG(3Ia=qI$(E>Z&jo%f#q8G&&Mocj,mh9,6ESYQJ1sP'&cEqh]X9%J%OuPirlndn2ENS7VW%![_0,PF20IjeI<1)HO+_MZ-Kaa-g1+L/([apmV<.)N\pju?lU;N@d73$Q*Vm&!1'0^G-@lIgJ#9Mh1[jb3T%TrBg@16sbVb7mV'>C1cOl'Nc.WNOTYj27g`7>.fQnV)oZ`"s%.$2`F#2b0qq+ds\l.9C2'`h$d66P`6U+)@k`HU:Pd="H3CRV[@+%C>og1f_U.4Op],*!KCP[LFAs#dY)-^.8.'LOW^d%A#u(t%2+)jaVFLhVdlVq8Gjf'7<BA&o8(<"WrN9TL&=d?0I$n9$^#@?hNAGh%OqK&<-Rhs7+NYJd,'>P\CMU$aU01BVnjZIoh)[1+,o.*<gTGpfZ)"(5WS<@X%3kt>'%W3Wc'!r`<G8Ck4jB,oc\<cV8Vc0V,=Jl6%,1REsCj['WZ\Uk7</)\&.K\e5R#cokKiQ,r&u&N,O`H.&BC'>u'_[4<%$U1_UU<UJAk>F+-oBWPf$ffOa<JKR$_>@t,n1A7e:ar5%8`BS,O:p--&C$Aq<*O$NNBPOL_AKV3.9+\o(\VT8a'OmmGYX]bpb6Gl'8'NL&2Q:5@8MuJj@i1_R:.5VbU!:Y-"S6/5ZnU"SYRGX%e7K3INMuBuQKM6,&.<cYa2YNYFsSCLEFep<0O0`uUcn71^tD,MSQJNS'MGI%W^9WqltMc-*"ls=Hu!B]0qqfKOm39J2Em(g=@D6B%;ZBuUQPO6G*sjHXj.Zli/K%D:WKM:U->2[V/ErN;BF%6l(jh3P/1F4$KdIaGN1(V]:JJ45g=W\<9A2fX`KGDop'FC76;=/O1"I%3%g>\]F@'Nj3<EQ:I)7`.%i\fsL@`+!Z,>&]<?pgr;KTR6Q<?]$:a;#&GRj99W-RmKV.4<Tg.FpP]a;<Di-PN+Sb$.;'F;V@RM?>fa%_CS`e=V[70:/.FdUbt)u_NL(HE2'."(t!o`$.bqb<ER]#g*7kQ8Qi&F1thXXC1.^.9G3<*,iKu)9G5oSa<]_&=iqJJS?\tpdY]Fq%el;=n?6s+pHR2QWTuk:jUTSjN!bH;)RZo7hP_9?^bXo`X&tiB*&SeD=-F]gRdZ?P"Nat"P8B@)H8F-lqZ-T5d`jMBr>XfL6jq3?b%d_J-Ca>sbOKXIn,L`tP#9/6IgRKR=N*FieoTJX3r*Y0ui="NI8VBS3_RT[RTLthkc9,\l535WjI4qb;_Js<L*KP6[90]>5fP<oIG%V_Ar`_$a^H0NFIo,=Jl6,1RHtCjbP_o5A.OiB-:V@7c+GNCR?4O*!!H$#<+gAk>G6'q1YtVccnCP;8F\G]2p\U01BV)@B1s^:g'a%Gd-/b@)KgsL4b*f#6u1XoMjP\L4b*f#6u1X%Q5:HCcFE,E,`&?i*aI=_1mSp%0m+W%LtB:*,ISofPn(X%0u,37bhBJ_)Drmhm*a2%N]%mX#"ON/Q%MjVj/GXT@@[&?'Rap7j"r:8;Nk`;hq-90k#BTElrGO0/P<m8;j&D7\`B.EBut@P%mIY.f'6csQg@:Ar+%@BK_&0F%FiJID[Z$$I>]M5;@P!`0?0N_H\R\e<a]KmH;_gh*Z!=R`,@W3jlmX.KPHddo]"D&kA%?,SqT2hl3L5+LVBm0`+^k3^/=5^\G9g9;%)&`l%O^P_1;a_m5/ic`ri[86(,Yj%3SW)ZnD<WEX\`?lha]KkrB,B=ca]L1K([jo!9G7%H=mM%.P"cf+A%CYsqT2hdM;S(^3Z6*e%gX8m;ElkTk'.f@6Hr8`(b9d&V*ANjOp2q5bA%?,KqT2hl3L"tJQ:VRhHq2)])D!Ku[?B!R0UN+o,%<*ioOW=*Wr8Bo8UV.S3j'Q.%BpH4$93?#F30t,/>/kSS>h<a:#r@akT<XOc1Ql$XSM4f@@mi$B;Fh;H,(`7Y<g#-]l-"kg1Ql#]&Re/7HqfQ2&]'E\NJOi5-S2.#%eep9,>nIZY7WP#nF.B*@%W8\'&sc#jj0h:[R2-D(6.S)*7WL%)+tT&h_nNuK@7IOS,9e\"#e':<P5R5.^+(?ObXf<#,/T:L=c+(Q%P%?(S/<?_Y9/0qecDE/3N#B`\MU$CFcE\-?Q:nYt.:t,lW%CXs@n(*6MA\45;_$OFS5P-XJWN;gh:,?X2,c!oAm.UYPZ$:JV0EgL%I$s:;1Ql<EAo)+/md@k]>a"I;bCR':;Yuicd%0BT3-EK!2+g/MRq*/;4pOeMe#0B^7B)uiRKR=N*FfP,k`%I1_Ofe0iY>+3X/Umc%^B4M/>s\;n4t?ofd[M/-O7<YKP@K_Y6H7`uN>bA8+lIc+ksmrf.JQM/Y"=_@dg=T!gt9TJ01h?XloD>k?EmI6BX70IY@$oUBcZr'%2;WK.B4D@aGW*Jn_M(iQqViA`J_DB5&F_kGf@kR'<>V*=@rHcj@6nVb`Dm7:P:u9J8]P/B<*s=En\qH-3,8u4Ba-r/+fusqU[N29%j%DWdlq=)^+n.p\:u(s?;8jg2'UfqM&(32`_Um@(MDY!c[7:Lu,Hk3A4=<ilHl-uB`jEW#+4JTWG:aYN0a$&:j6ie(,Vi!NW+8H4%9gjRL/Z_k?NL&k2-:)rLa&k9?21-=/28Pq0[mp]l9jY)hGYX]bpb:tK50Go41>TPXa'"'!mmG%q?GK,B?0%)5W!R<H&kN?gT+:6'%WR,f,7?!>=of7`Bf0;!'dKJm9EdNIi^#YC`22*4n*QHmMVil!"7]8N)=G$ts.Zb#&h$-%IQtUN)_JukS$TAUtk@'EhUP7u";/ONC%1;ZA$#RqG<,t5>F/$h\N,U8pLW\5(>k[Mc08K6):+R:c$bZG_=2,Fp:Uhe[F/PZ<E0]*FQ&cs0H#mJH2B.-o_.5Wp%*i*;IR^=,"%D8_lNH!>0I&4f;tZ'9K.RYpkoC@C032)G@$QtB/3K9&I<MFA%;0A>(RU(ki,,aj;g0-!)p5AI1CC(d>)FGr6T;C4r>VRj!5F#riK%Ur7?&<5aPh48<%rXsE>DLEbB<qA!tRbL#t8;2BW$=!nkP_#*V+Hgd15/;22($.<lU_7J."?qp.(aP7g[@#qr5WM\$Qj27h5!6rLU%!W<l$0g\5(f:\c*&OG3qfgH^F8T^_4KAU*.k0o(iP>#i#e<q=JPE78B8<S,2VH@\jXs"8M+u6jZdMk7k7TbE&i0ZYaL-Fa4_*W_S%ar]uZBZIK(%<;sHa?Z/H":p#H+/*6X.:6cZ`ZCpcbenWS6&IP1_Ocs5lkN0QKdIaGN#Fn9Rm)?^f!4Zm(p)tS^(ZTL/o<+*.@AFV%1'q*Uo<;Jrp:ZdWN$a6XOtL/PIUt:A/Z]8M<c3s1LcTh#(jjPsb4oqDA]TCqLj>L68N!rnHDkJm-@?Q1NOq)F$CHAi__nA'72<6C%M@^14E^bS%P)QXm<jSOA(Y1\r';&C,Z&4G&0]l3)X(I<;0.:GK;VU2N@s8a`.\q#%P%ho20]n!@'.^&ncr:s2OH-T'JgO4_prK%U%`oNCUon=_3+%G'R7>gD*7Olr?Kh=+b`K1i>#qiRi3,8XpaAkYH/nH*8p9c!MPV4k=@h7!Bf#P'ERUH.cDN>?"7p_&%=D5#1`Mi+4%8f?2`Un4L$L=fr,crY-PHP!bF;$pF?,Vr>jcA.NIjh9,@Xjn[f-g;I`@ujK$nqB6Ql,5*8'$j-J&KaI_`\k!=,BSXZd5b_l'*=df%L"`GGE<.gI*rm2::/N3@#Q%p<d#NQO1,)JM>3NP[1^OIA3nQQjFO\<*c"Y*4Q>(@k-6A+#N+-a/1<eOMrjBU@\(JUm-:@`eZZ[aN%]Q9=rrj@NAJ*h#'<>CrP@h7!"k#9#s2#6"^o=^qEY=,B@1thXXl=Q"H-Fa&ma/B/o7@W3cI"2iA?uQDT8AT[RP"E_Uc?A/_Nfrse%-?&6:3l]SQJsE45YZFCWp55]d6BdCI%uW@bTsS$tUHDCQC5O^9(Ko$*C0!qSf_pYhMBhGTq%B"-kHuFanU*-7CAcYMUb-Dufh@:n%l\3B[,^"u>@@h(CEBX9OQqD.2T]P$&_H]kcWA(U*1I"#3;e\mC2Dc@'Q=W48U_ZY*FCXQp?n/:dJX2!o(<a"p78aMjXLK_9\C0][%7^QtX@2*$?.SQqN:&42\;jL'p2Djm+/A!Z[j%:gWT0Ec`BrqiOltqd8`0l-"[@`VCrE+@jQqCTF\dc>"6S,huq9r'[a1a1`]jN=,%l-4rh@3V$'.J^<AP)imIH6\f_Ci,j,\hS?Q-B;eWSYIm<Y<j&.h&94+XUVXBW>s=43['b587Q3kT2.G$XgZ5K>&+49BcY5<LV\5[%4ro@!PHF+*LC'j+=rYkpbn6F)egaQ.ANoh9H;2;AjYGG)k]LL[Eg\-d-<=[-a>?Se/T]a&?8X*rqbg=#@R\k`9Z'i`d[L]Z##Hjp%?(&:iVHBgqGZ0r8(H/"!Rj0hr%pl%I9WZ>3UhQ4%>irU,]foBG,d^0!PlcYZ$1bCUC)Wtt=rV-X<h$,>&ACgiQroKYA(*,sf%SdJ%8X51I'Zs0),2.\U,r/6Z;PEH1<$`t:?:g>'6J6(!2A0l$aVXZ(Z4jEDb$.S/I-\9RX;.1h-Ft(IrJij#bsWsU.5P80-D$W)ALSs4%=d)[e"/cg69@M?VcaMCG+W3Gd;Ji,L`eRDII0nY`j,coB/e4,!#RuMb9'B/>1d*?eFePcmp+gr;Mut@pcOSMI+W3Gd;LP7\`YYBs%q@X9\*"sdG=Qh=q85q?-gI3P[cR'p4B3D5`1c<:EVIs>XZ:B4<&\Zb%-0Z+X*2USpdT"/?;)<V,o5&,m?a)^gc3ld.e*99Gb2g1]%ZRjX09nKa8Nj0p*dYfGRfQ3QX]HSfpS2:uN@FRW_%U>JX#%L6+K89hfa]PW&QnB[Qe$CUE`%*>N_KOjZJp"%"&u)kCp'=OfX9^\;%+r_QBbQK74l^6rm_-F!kQjSNL.C%H3_NYU#c\bP).&r7e:!X$a@Kj\4Df;a,MGP^2QKeiH2S/RgJ322GYaI@D$nA?8PBoQK_Jte_%-$1RZR[t7nVU3g0H^^O[Df`_TSg&JNCQB$$ca&d[:7@(80P[I<@?3aTaTUp.rPM%e32ATfku'i)4Y'F$eKd[9kns#krXhl-Yie!:%GXYNi3GBu&_l0!;"9tibmolr8i[Uae'+kSI&5"Z_b(ud)7>cq'eg*f4kl_Cm_%B7Q-@-V@NtG+4MH!MfZLMAQOj4(oC&%cQF_%/4%&nTcFdADe)@VSobe4**%fhqD.OHp4Z`S5$Kpfc.Q,1@J_]s7/oW*#i.;p?UjP:@Or6Lj,!X<iZTAOOqP9$.s=]WnBu=X4Zc`Y!N?%2"hd.kZO2i$V`Onos@"5d?c"Pe1j/q#.uD]b4KKlV%c(^OGocBWQo0T80d@5M*&(09SfRWYZFaaj]0/Q@Mq%gn_o&IR_VUm[)*$A%Oqg-L87G$6'"P+-fdJ,a.k/p=/14r/9q8SbB<=$[JLc%)8MsOG&`%ceZGs7aWjrh?=i^A.dBbGt.=0QBNM,K<QDt<e[BZXo=^\D+%^/=N=BC-:odBbCS(Rf/f(q%_W6:qVT<3d(/6oPKZ.\sG5W\!6>:#=OGkZOXC=VK9/Cep2Am$1,$KdIaGN1/s'R-eYu4^3,L3/aYH%nL2D9/gWp7ZQdq'9nG3bNj2DlNu:(g`ul4G25_+k84kul9gsFHFeU\N35@pe&i(`<OXX-e%M/r`7%;W4VIs$YOftj?Xuf4=OHrF,%f&;T/+\0KfQ>(@k-6A,.l-&!jl?*EqlI]/N,1NIgNR4M^HU0uuMH!ShWf0)8c\<EjI3m9?GLg*V8NQE7Uq/mVNGgssM2q5)irrm!%98gE8#^'kWQdDRh(PrHt.T4"-jGc;scapL)9/P1O[9!m%Nk?"(Z-[%AgY4HJ#MU4.[Q,=DF6F+B3?2jV38!A4Yg)-7S&<'#LP'FR%#MU4.[Q,=DF#_h7E3RUG@%5'M2MZp%%L:`.p2QQh3i+S?RHdc")X.*:&qXVB5iS-([t$HoVa;&e:0D>(P*"I-iPrBjaYr[Yf5Sah%R%t#8;?IubWMKkt;Jl>D[ut2g96Jf=7^UZYrF//dFl)u6LmI>.?]6D4^3Eu_PipR5c`<]/]O3"'UkVc^E7TA*ZrEB>A\T'Z;Ibu>%AR17..<#/o6qd4(01M1*%1B:Z`rsQG>3hVBR9]:/"O_=5n^muejLPJOIgg$O=4up`:aXd.EA3X!ogKi/BfTN:r\9YZ[=s)=ATD;>%+%'57EJ8lNATHo(CSj80[OU,=6^_1X`5,7s2\^6cUuap=?nhD;ThMU@r*q.=)[lZ_dW.%JD=fQIa`W;e$u*8GI"&u?k;SXODj^7r%i'SMcDO;Wg9o&MQ7;FYOX+lBt2Y:7$DC6iH07ol"JDNPU6RG5m-3Znuk>DW.UtS.:4%7b/gHn6dZ),kFZ*N4"U320Ydo[k@PNo7D%KOdtJTkc&u_9NhfpoD!q*i;+j,NT=%)uRiX0%E\$3#_6'd8G+(FV0d.fmX2OgAAIfh@l(:)@MI5BebQ!NVA*:;N93q81)kkmg7Cu%_`&j"e6%%cS[D!Z-Il;g$-B">6<@OZK!0=XIM&<fDk-KlOA(umBoHS#KCtfI/_/PnJ<<OJ>OMmGhM4CZnXbh9QRup1BW9@=)".dQ%UhgLU81)k%Q"F*D:DN-dWc_tI.WC25W`9ft2\2e2l#eVKafjM@_H=^'>f[Fq\d6;mRi34n4cJ02keL5A*@JWf$C\4J6caReg>L_X%@j]`09nEe:N\R3"X7;9b$;\jt,6Y`F5[L^[GYX]bq!e.lnA-aPb+4Pr0_Q6]W7pK\W[+@6`m:Aj;>7cS,`"i?)#;=C,\jW_U1USs%b$.S/Hl."9NN3)2qLe%O9nAtF+48PLdPi#LMaGdaMBW?,fAS5*@jY/X4]QA-;@s&(TYYkE%="#g+okN'6R(#_4e8tqJq[pK-A$[#%%G6A.:j>hH9UjYDX1]E*%MZe:B[[;"*!d9N-q9VdZ[,ko$W7Q>hj1=S6_^IHN%G)R'fdO+K@Mb[>AMmEG#_c,o5A"HF]2cn_fuu>%_6CVjE.*t&c?tdH8FQXlX-t2qC(!b<Ym9M!K5Bm(In2E4VSq72+cq_s@O_#@2&5Xie?,(c37dke(P0GahLQ>FL`7%[!DsJd5]EFU%,+N24hPq0`k#;c*\)Af-`W^T@[LrT!Eq(FnDq3LM0\F_Z$r-'7,nJ1u2`2ANJhXJ>*]0(hJj?mqKYtn[Oq;RP)UM=fq9eI>`,d]M%l:G>_U#KKL<FN!BCZH*9[=oY@)b01&N@-V=+_UI&@_n]fl9]*6"TVihUJM4#j@LU?i49GaaJaetTuS$dOGko]apLFj,$.lfP)NXT%TqThC@uCqS7_;<rf0K"GC+MJrB_C]<O6tlS_B)Lb%oP*Z&S24S:,q&)SOk\mVT.7mT2SjImnFM4lAaR=+cqYQ@OZ:Z.4V(0R%9j/%Qq@QIkq*;*dbAc8,_Q1/npp7u\r(#:Idf5=KFV/m8F]rK+LS!i%)0**mtWc?Na[8a>Hq6RjfPC(5)d&_Faqr9U\(8uC=Cpg70"@X%'X2]a+">F9Th*MU]abPfeffoI(`)7[(hblD6S?(kd8F1IP,#r;(2Ahtell7pM8R]ii@oRoA$7+C5^!Bdi,],<rICYV'Z+S+Xq^r,%%b2bPaAdh_e`1[SOG]^\['CTp5aa2.+B<GQ#n9q]?u836eYL7SKu2Cb+()*WYd#_>62\_JI'p9FUC_m/&g\0p4u\3[%=Z0YAK%VG%0r@8]L;F<9_Aa(=[C&tT,5*?Lb2K.n$k%XjrWPO_>B(I;TfR=U?o8:?4Le.W-eKR]-+J^61Le8#A<?K8=r=3Jdj%]S(pTC,1R9NY%?a2O@j,K?K-4"^Lfc&K#N0o588LI1?WG'(&-57>&&kLWjiDd`4lGm-7?al8QO_3V3l[PYG)(U`LYTkFA)BGrfZ8Mpi=83=TbfQ[;%UHhQ?o&7XCiHt:$NAC8lGEcd?9@guclUE0u>:$[3Zp#j6(&N<QU`PL9!^[grKk5S2`(#Dg_P0qQ[kJCnj$9%V30C-M*l?NQi!Z85%%>6L18"Lt=YW`m"m/nsGAspYRBoJmMLnQ!cnlQ9I+Z$Gm5Y+<"&0rDE/O`>E.'24CchDb\`(gOX@tFL/.YJjcK:`/K?34[,S1Tsr%_"o$Ep#?:2=f*uY"R%fW6dY90=\Z8JCWTL!nKpQ]DphP%"G+GaNUa'_5ciR>!so*XVh=(4P7!UQ_0Q(m!?O'),TsT:;M/sURaL=1%TV=7O!Qu!"MNkn;JBSK(_+o$)79Zb0`Y4]jVnCf*#>(T<X(eM#[&N*7:oS0>GLWF?`?M]i;B&!-lnC^7G%Y3RDH,$m`_OFb,5-_%%HE4tR["jnIofub=cZ6mmO4TISrm8s@Bqe$jhsLF06frT#s$H9hka57>r\2jnHnEQSF^%*lThu?`r%LX;D"`Q&6d!20A7Gp[RtVe#%_R!sG<KWLgAY<rL2[Ih<]mXK3_A+PiSM-.L^+dq,Kc:0ZK^G!`RI=ZM!G4Be2C9+@in</!X7@]I%B5"MIC)RK6#8GHOgGu5"0F*/%?qAs-lHs2gn!tn>H1.Q2O\Eo8[%*C5U_=[>B[aFZ=n0IXB1T]uh\TjX+J#aX<ZApU/"<\dmgNn4<TutQ3,@&7RoL&54VUHo;?iXA%g`T/BXJWp=]:uCVKcEJ&5i!,cKclqjE+;8dP,LKB(%7\:Q!p\ah6;u9=CeHA?4J2gNl>3EM]-4JD2a.H<(2Pqi.X9+i6^6RL>IYD%3ZB(_P0.MDCV0e,X+?tC5_c#!)&c]a0I!K$=Te:c.eJ`/WF#.*dLBEY[Ql*<@=NorIEB?Y:>Tl7-\V+cds#<-?Q^h`d1"TN_&CAF%p,9@f\$:)$`l<h1)U$cXWL[.lMKG-6%3P?$!g-I-^AeXK,UdrDEOO_AS?95hhU^D6W)QJoBCG(Y_2MMB$ApS#NeD6pH:caY+eaR+%A?"-pdek>f@uU1-@2h:D:D$I@2Nj:m6^io-eo;FdRa7mXEDT%l2$0[2.&$d>'\f":N,9i>^:0R-hUp$(`\@T(S4^!+$=f-YN,<)S%D`&:"Xf"$XOV3<\_f-/:&=ed?7a3i7;+T?Z"Cu<n$WU5'Q.o2Qj+)3XNFEhMbhQ5FWRr@0lE$T&g3TEj7@k\9.*_3/[P?#,$/<P-%7#Ghl+_UJXgm2CgLG[2<Od="QP>mG=9L=B^1K[il1p[H8KQXZW04K/Y4&AJllbRNKUkJ[k7'hjseJ=TW@o'Fj:j<p%ObC2[XZ]!-%gW38*%;@<O_l/ug$_C8P-(%=_%b#c7PA1Ed!"%&+,>0bZaI372,or?=1hj"hbJDmW7$EWTjfPC(5)br03S:,b`X-Lu63@69^+dS4%$gKuJLd49@mDqUf.'am[4=:dN2Q[AO#kbI-<J`;JLkT$-`Q!VZ1+``:`n!tHE;Eic7h`WB#NW91#tTlH*(@p`HCV7;.7ZAp%`qRK%j9fZtP*&Bg1_b7PCb]BCj^>i3Wjr6O;jB`:*\]1NVB?A1&Oe]0WM\%l(jh]l$ooP54$m73`Z?@nF(?`iS2:uN@FR]fJZ$H$$!%^&%Rcln:[@*E.MIaBH@YlQK.A@JEP9?-d@j5qall!-r]eQDk5@Hl]ar<c<F;T'CkJ0fl^)1T_SO4)5&1"NP83A!sMK0E)6mmj5#!Aem%W)!#FW2Zl#8o1b"/C[idXgRge0oSgu3d(\kfNZe/T0bU4Q?;J6dZJAQkm0K7UuV.OB?>`8<mP/j4jX=Aa:`W#bpM'sl,,.t*Q)qg%+f5;I:o#>Z1fd7Z9PMq[NKa-(3]=tj!Le+(:r\ZmRPLu;\8?s,\l<$NdLduI9ff#--67pk;l!nKb'KgOPE(kuOcGPu;l!o@M1D+<%N&'7'.:RloRA^M]oLNgQ!dc@RkL`0/AcpMijr>&QN+,c&QSkUI,fC;k5XII8?S`pKXXH[TBoS/(>'V7gU+A_LW/K[QU&!.-DP7,Y%)J:a.80YHA;B%u\EWj+%d$/$WmI5?iHm+p7.^9RoQpf9:b5#-M#rKTsK1We'";sW2&tgXCQ>*Fd``Q-'A#LQUp(/f>b(q@iM:e:#%M8)VT&JG;ioNVj[`%o?[_.NDfh-l<S^:2OG(mkOR5V\9Mdhs_G,X[H.KEft,]b$3HM]usb>q<K@+l[oJ@DdX-R@Jn>87J2W+:ehp%KPZ;T7mM`!5QZUT,_V"BdNLkMB`tHq1'LPWVl$hiCa;9e7M]^?%NA2+';()%:E6o1D.L,Di$29k8O-^eM'lhrg+'(]+[n:M(WgMp%;HZ'rVdWq'VRK067!h#@mpO!0_1MK8"nMs,jpr6O+"WdD=>56/@/aQMr5"!\K*CiO$g%s8bTAC'5?KVs*A!RB=>56/@/g1g"nUt$%4h(q[iU:BiC-kV`fi_s:8#]9e)E9?&f9+7>/Wsh4*Kd<k=R6\$llsf1g`?4AW,Pg(':Eb.L"u'[7CqKjTp*M4q*OL-I&kBY?<O'3%^?]m"F<u.c#q&H^jkcrKTaSU#4l,Zm_n/LD%+6HZ%g@`RVVcEt;&8C_mLFV[d!/c-(?n`bWu,%S,FgL2pW!,;kERuJ+a88fM8/j]%?`Ecc(NQtsMs7_+)jEe&i4Es*-<\:EEi2nQksFg<(^C`7W+-faN,["LHEqWapO-&>V"'f0NVLC-Ed*nlbou]!LJEu;aHpq^UQkOH%n53>a$bdQLG^M=GQ?ubnI*)+Ga69iH4_s]#r1H0G$bi+qTk:?/C$Vef6*.?\HY'4c)H(G5-Y_OUYNiE<R0he%('2(l"PR*J>A+jq%D2D?aFpGo[\J'GXAFUbPl`K"t&CR/hb=l<b2%2qVN/lCTX(p`6XJ;"A9qJH8HIHFP0P\q^V&$#q9LHJ:"EY"bYLp0@/"5nuH*T0V%4'K>CAY-la9VBKa`61iIf:Lq9Hfcih'7T7XhIV#nAL>c9T#JlHT[,Lf<Wfc>HloQEZc9%-5#7L+hfP7m%%1bu;@Bj7)+p6`JCgCO%'mnMTl;!Zn)fiV\rf*g[9<#+sB3ePmdUacPA^s8J4U[O2X\aIIS%r+]e]i9#(W\e`"R0qgHb2?ob_Ifg+(ss+:b?(gR?15f`]!J'%6LO>K([%hr"tSP6Y1H$@geXs$pKFH=[F"RhBbJk1&2*Uc=@[TOR2rknPH)_@Q6C0<Mhq\bk(YP8prXh=9`kJb>#OPRSA7%G>2_,^%I3f69AMEK/][DOP]>:@W"AM,_#2iu.54kgF"hn`VJ=#abaFeTLZ0Cj.0JE`ANA59H(uspl%,3.SoV(U8RPZ1K;V4Z5R=p+.@B9PQ%j&&]STrBg@+<=t]M>.:H"_e$I1:KaZUa*'2W[fpZpb6HM6)q!,ZJ^l(Ri6qRhhEDMYMOGA7fADY(ABNG'4hdh]RWRZp_]'TEePiQ%m&eS?eg$@jHt?$#Ds\,<l,YB;)@B1s^)/`O&WEuN<FNh!;)8tC:QN6,7\gN^4;<B2?kQ%%DusWqla/Ah8[VT]+LS!i$pWtVY-KAs%g2hUo5g[V%(1P$];%Xhg>W#Cfa.[6HO#LKrdePdHWOV:Q;(?[T8L>VHTmoc_3'hF%N$<u*P"ZU5mi$D+'`ilR>9a7l'piNuC5elB%3f)JJ>%bnni)Wo>*#gT_:.!jN#u7k$:2_A6M,H%A82:JPkNb\u_W)B1WmF]_H]X8m:`!(S;_(RB@BYi9lkN09KdI`\7NK(O*IJ"1%j(Fsf9Im3*-.*1kahKIV9.0u(Yp;,'=`Kh0Yq]]:=(lWo*i*;IM'Z#5nqB4[l.@MP)@B1s^)/_(%TVl[2_eo2`jB@0p$fd^aQB^k%-g6;IX&%5EKD&_;\8Rm.["XMuZNFnYJbdG"U1f,>8D6hOL,@s_Oq@(RLPZ7GlpH7LDF6]BAQ'-^\J3Z57m#2O[8@.KoqPasgFs?N%+4V!lY0XN&FY.;O&othP6;l23j!no$Xs$:*7:^eK`PdB`G-I,02lMBW"&i6i)XHE%,hGoX#^$JH_7W:$8I0PM--Zs(W[]i*`ZCpc%/3):ugCR)^Yid8PHc8lgTuk<0;7EcbY_leLa/rC3K&M<1fPKYQpnT!Zp^<tb5ROBFP"\2o(SRV]pHFd]KdLI!5s!$D,H@Fu,=O<+%c-7sEac]RpC9WS3F>7Ck<hiac9t,,XQl/P-WIpVqVMjL]#W\:CN?SZ84uD5l_Iq=cW%%?q`nL9Z_I/4#k[o[G]!,4.13/5)`,!e"%`.ej_U$i1-Xb$`7D1`LTN4?CN.^We$#>76gR;n>)WQ-E<f>2juaq&""!hlf9<!ZB!&jkM\'a#.5;H!1uQ$<a(Orkt.XU5^N7L55N%29$rheFj/;/V]%AlunM6MmY[/2,QisT$XTXg*W#`$;Hej#O*)#(.0qS_Oe+tiY>+/KdI`\7d[.M_Sepdab$ANim(EcL$h"a)b6`k%OPkhfdOS4ud,^-K8B4ir08.`B-jl$]Qm2`sO]*G]=@G-Z(ipGTAVR_9J!1J*Hf>Pr?rSXY`pN(?P,A0Q3`sG9#k374O_Jh^9kFQl%1c-9Whl@G#+h5`'>sf7qKOr7#Ur:3'n\I\V\uLlNU^..iP'c[Q?2-039FF;T'oDR!+1?[+?;&*H*gn2Q)G.r9O)BiH]!/''.Jq%]%hC'j__h]g&fk$,Tj"SK==0Q\m_C%\k<+nW8^CuN'^`>i]6GW=ls7MA7WaVN0VF_poV,J4Y#W=(B9u0n@NtANc?AVWcBX70e17JlC%4nLr1ir']AR2AR9P<urD)&iE"n.;FHB1jud=i^?8ei0"].l97rDgbAhE&<%H;QRtTp7.pgY?5Nf1thZt^lZF'Oc';rf@'R4?`V)_%A=?97K/dGOqt%^]UDU"AgijFGr'Zm"RR[giR0sVVHJmio,YV=BbAYielgfm[1=r87c?)Pp8$pmYFLl($Y0F)FCQ\@Th"SBYg2!<R%f07ee&%T)i/b32E4-EpO^$9Y&F=l2rA$*nedH[J*po#BLa,_6YdUh<E_XtqB71p:TTTPU-EnQH;A[kTK#oI$Y`MJCQ06Mp#8of-K%pOM8n$N5$c@6XX!M,oD@_5ulti@kb64357A1kG%K8kirrX!GZ@UTQ*<XW+WcnLAk7Hi8jJFE5m_RA\^%VqC73f]>o6bF`6F4N4bZ%3=84m>(EbY?e]3RMQTC^c#]+BBA>oB9jW#,>-q;L>*XFZb+e;RoA/S@LTXcaj)Sr">-qANGOMs5]^4!&C\)C\/R=:IcZHdBU,%PJ%M@a(5N8](3G]^cRm3Kk&2;^lP`RT&pq@kU[7$*.0QFRPmXX@l7Y6+PDl;caG#@>"n#KBCPXn,W*_(/eZF7pO#-*+*5Ka?hEF+[QN%%$?PAWHdF+</,2`d^?b\;Oi!XB1XQ'M27+D0_lhR'G2%t6OASm4;>uG\JF/#3))_qF:]LnbO$_K6?joA+ob,lM.[i10;o1aR_fl"%B&:4icApB8?;5(]S@XpKlmO-L'Ie'T0pg9c2"U-G3nmb81\b9NB.'[u.Oq11R"^R[l"l'M8SCOiV28qU;=Sb:U8V1o.Pt/FSu/H"%&mB"L$@A&6A$9"7.l>rS0P[;#\g\=n?Vj^35uEV?.&sPFW;;+?l:Qqk-D@?"?.14,OuOBf9fB^&23U"n=U?rS:/Sho`D.7"fFJ$=%_AElZ)(Lb`N?/*)8]DTpUD_Jfe^[iEKIDG0Ku@b)<5c5:emcT\5?>"HYK7&"fG7AoSKb#jS$4"]PS#'rTHZq*-W6b%8s40C+"(Jf%=URM!7p"j(#gid?82Wk6);R?V>9a1SqjVTb82/[^fI;7VQQ![S%J*#ABRWRL.]]L'ehfMnkptX@H>9MgF-WP2Vc]rL1th(HAu9L^%Xgm4Z@;q;Kn:s[?_<F?1-$0_BR[t-@=(lWoSu/F$ZN6Fad8UqUC.ZHPZ.)T`ZLPo4R>gF!]Fes*qBjTVYRN$Y-Aacm7$1G@W\$'8%`h"NW?meht@$p@sN'0lP$#N.0i]1^&ikq^Oi#.Al:'aOa8"Q)=,+(EP>]M*Qpf\81+qs2hd6`N:-ts;L,c4^8Y:d0!f:&oV)4t\!%nR.;Dk^[lVhGRI>WZ.[eE6f8"8OO[UU'N7q<>CrP@o!\;84d4.-%sf^lnOY8<\2c9RV[?g[?+<B4Xq;mC:5!g75LQ&=NUK>&6:@D%$;Jgu;hPmW0BNsW"jU=n1-mBbZ.*.rg#unh9^6_)EsXb#qM*[s0i\fP+cT`h0[I[(9qeI>ehY+B9skE\nqAqSaiGb@dPP1X;oFD&%$gGQ=M2_/EEIadbdRZZd<]lrbg5:P?9beBL9f5PK?C3/]%L@4-=_eb5.MR<M;VilQU0CFj!YWIN1DMF-:B[\Z7875SKi2ZQ)\q@h%V5cj\AaEtB<YZKO<WpI&jlQir%$jG,<fr@O@qLT'c8M\3c5%r>='Nb._A.2j8hipEd0,b+\O)K9p,%=(C[#iU?8PZ9]h6_X="H3C%RV[@+l:Cg%SY`RU+k8Wt*7\QE0%%)hYXG?C>+3ZqOB?X@81^.3c-5sG`*sU)[`q>oZ1:-l<^@h8^k.QFojl&JNX?[=Wt_`pK9[^L%RUR:ho\?#Fetr)(p!g?hN,@+N]Sue$.;q'YO^YmrnUs2B,'+Hap9=s-jI.JCPS,.._BM[p.FP#R>"BOJn8$oPmZFAmYkI?Jm#b?n%eJ=TiI!EdW;`p'UHo"#8-nnR&@r+R\iMC.hdX>1FE8$'/XT&7n^9'nhgplnke:4E`!@2(/ign<dPD$=D!<RH'[^#]V$q`Zd!F6p[%,d4>"^Pj;q_MBaYVRp.CIh)WTSN`!*IS=@:-^]PtP!MsIZ4ThR@CP/3f"V`.@%9Epk%dqW@dHT>p7iK%;2kH%`dSV35Dl]f`Rp5\%lpif(UDWl*N;Y0EIM?9VMQn8BfT0M.7ks^eJR\!ETdm"WT"i;E'$V9FY00:Nc;3W-1Z6^eAYsdeKlPkn2tl0.<d.m<>#Ssh?X-P8%Iff5Y+duJ;Y8TKi(\q"RlR%?knQ.`=JfW'1W5L-PB#<0_XEVJjB([#JFte]t82/;A6V)'aJfW(titP0CiA9/Q.G2Hf4sRlRAuFi=%:;Jb#VWZO-?jF%73!DC2Q]G'!`Pd')';r\WAok_L_DF%QQ]],pAoS\;lsL<\?K)Ym1N<`MfG*[[<Ze5I#P7M+$Ds6_O_=-,KcSD*%INsP\jr=P17Y2Z)i\M56?k+9V@%)qE?oKtI4.+R=.G2K/,FH>)ZXn?q/*pYeru29AR6CD*"?W!ia!oZW*'R-61ijrB)i_HAX:.=F%.82O+[E.&9lsOFT^VBI>qQZ+2O6]BXA&48)&fVZScJ0Z-+?O4Z-^-7%KJTY[F(9r-Df"!/S&7IQ$)8m=ap8KrZqS>3Ro#)Y]b>"F%c"BG3@?):rj2NEpB?gEL+l6`4b60^J`f/1)]JF/eQck2iP<#NLc6ctSl/.pH4#;cMB1/,lH/3_[m_#IY1Et$sMml9F@<S7T@:r%i%pl#J?D<Bom'5!W^B1/+qp)BM"c6fXSfJj1!1Fh'j7$t7Dmpa9FF81\"4.4W[2N/Mcp)+HcAlP8GLbN>fho1PFbSGUrKGgX/D&>(Q%Fu+ZX]8UE*Iqu"_P&VOREQ>074#;:\B'cG7q.1YX.p0j*c_*jDeGXdM(oSkP.;#N<-D;;["`)'N.5Zjnb\&f_3KBt=UK^BC$u*a!%kW4"7\(MC-5Gp_4i$6tjQ*@R%jRU3LArjM,Us@:S_-m:EJ`@0sF88HQg<UIXDqUY?5kK"4gUIr5->P.e6N1RY_=f$.@Ysr=p`fq>%;,kE4cB?FjI4?5fAbP@b-&mrRCkRA,%@7X/>hu;a+UMHT2e=3F4@iU"CK@fsU@IsJUp.Rn=;=2J3n`JP&84R"$*--\2S55q=A.+F%r\CYtk02Hd-^9WM;N,$!?m#j7U_dYgnEKN?TjR]`X3E->;DJ0D*FVc&EC$d=9/C8ANt>tp;)*tRB1jjAb^'bV+dR6u`iu`a/:H`!%&$i<m-2f$gZp:.@bU=s2krjo5JKf5?&gU(2_Vk0e3Bi?I4Ke&?7gNX";$eaW9.iHQHHs4@<VH.+G3(k/gK=I%dseOo\rIt$&kq^O%AKqaK/;K1a=QQiC"A.BDY\>4hdUW[LJkgfKJA3+hOK(*IZbr:@S.ALuA]Q`0c@WkMEi%d\BT?<r7Ma:4lRoY3"G2CIa@h_k1DGg1%BZ=/kK6G4/E6a'BifKPXXW<ncb'4DrEM"n,Ke)Q@JW9?1+g$:of#'QE$X)sS[lGCY6P#i9Gr3bqc;HCrTH.N=8X6GkALTWh8_S/`%`0/3`P04BBT!,W5?k&7XiKp_TRh*R8lRXJ5?8,j(=Z-B.&%RM&OVu,cr>pAlRanJc7`Z[YA#ujI>Jq/%$fU_J#\6Y,0h\eq9.iHQ%)Q"3kDfhf4>-PYh+Xl$%@;TU[<u(!r(T6c1LSJ7\OVA2K]0._P'"OQ@@K/Z1M0f^/;gjS!&ls"<Cjqa/SF7HL:+SMcl;^,uSS885%>fXO5@ip%$bD=6l!(7=ofuMI8B["ED'/UnH^/rpnNXsiEP'*%c(!"4fDXDQ3CShH.ANESV!tX(:`BDY$0UM;@Wk=*W=GU7Qb[Y=:%19j\5.m$DWpk*`/>?*5"D;RZQ=N,=U@g(NQW"eQ<Q>D"#CCkg8g,YJBBR:>;A(+Vss-Wt!h>;thKj+R25"pB4Q0*2F1;"2*Wu4P;%WR?g3]FJLQQBLj+W1Af\@k.%daleEoP4QD'Z0]Z@DJ$^s[p(qNiJ"toYuP5)3k%+3OCF%[Wp3!(U:&G],NK?'0fIT'aG/UX5.qO0%f8=#M<j@BaG*k(ED]R0%ieNf93e[nsrODP-luWSSL'/%aSDf&-.lp>Npk*aK'hXoH-0J'0@ucFLh-%&Z@Fjq>G2YUm(tNZ#TeII&%p\S6eNs-@(ObI`JfA<-NaGck^<@,W,c;HS"TH.NhYSBfYrRdaRarH\N/n`;g\$D$p^_k69ekBABq%,"Mc3Hkhic3jaSW;FDVJKXp%d,;.JOVF]s1P0^d`DBj<a,:rt@I<Ql!D&R:+c_4LAo(e@m$uO8.Q/_K^Eb)n_b8r7*GU>6$3G[R(,ob%4h]J56]^`D+::dS%O2BM%DF;Jb;6L*:1'7+pg<]a;Xpp*%P[]T=Hn`Up<Zs154Z%QL;HV\onA;G82=/j[4PpqhkJc*[6k*d;O/Q3t=UN.jZt!p45nQ/M=GkC2%P]e#]Z^S42o>@ZQ[8ouZ]m`29'UJJ<"mYehm02A6f>F=>iY6j__!/S;Nh]_0=j"`+Zm.,/n43Qq=j"YYbOR@JW.]:R9/aPg.+fpl%>RrD>7Da9]F+6X)Y8eU0PZgfZnuq>8&iP?CDNP]!GbnTJc7?EdiqRCFe^jPHD]FV:V`b:B>,i%Mb:#Om`cPGN"$LkIgoJPn/*?gS%"RE_3%P('>9h`%(50u*$Y0&P%IAk^p#pN^0jeH6X\$\EH1FpQ3C3'iB\meRh,$24XU4%[Y[arLiS4nC8\Fa45NaO?O>%C(W@B-I$%JY'98b+=f8Xk2CNMlc!s@(NK5JY'45&R<)DH3@MB`am%1"s9lI#c??[+6Y^j^5&PSrg@[#EK7bg0rE]/+3S_ir3fA*G-5THZbh#%%Ma_rZ_c0k'"$O\6Y0JQCBC44]9O6=3)/X;$\ukXVSqHDB0KJ_f683On_rZ@K`cPGBlb6:499M)[\&?35R*%'Mhnp;[D68l\3P'2L%Ak$t!(/.2W/5NGg9XT",d.8Z',f)WUk3<4!=#N]ga:5$$=s)t=2qPrTMI<WJ?ufhb<4^jm\ukXVT"39F?1$4ueIbJ\=fL/d_/roI%@sO)P,_=Q[HZ]Hi=&u>_DD9Vlq*<9V1;U;0$DtI,:"9]Mg\PTtdl!u%%YFR/f0LgDlN=FlLtuL>XnD57?[Ot(fK$Q(Kio6B@32A#%fsFjRR,,h,bS#g[=14p$>&MA_T6%hIQu1Cr+bqbpXDBK!r*HT1XGXec.q=1u.>&7FpU!6nZTS%[_CVr[QmGCWn74cjZe&O0&n,rc%Ism,;(1rt7SL'aIAh>3CjqV7>l<:5'@CGPL<Y8p_0>r`%bH,@d7H7)MZQNf06^WQ.`4-3'Ne:eAGF!&g.q]VMgPmoASM5CN@J78E%AhPOUFskKl0?h;if2J(8O+gsh(JEi.$+'!eUD@9N*snut$T?n.)_@kk":AdA"&";F6F8Gi/<OA_Os!-G1"KaI93/n\m'JtT&Yat^%@:a5rjnH%gAX@LaWJLslBbs@&#(#[Z,8!NSdD@H@=E7t?Jcos=_X,o4&gHjhl]2T'bR1=16T.$MRDhg$%bME,?tB`/XFabqMqtJ"%&u(%^+[p#l)L#APL!A2IS$SgH]EN#h0eo^j6T2QC?+@SD9DJ.!>J47F[a0)/&bI!",uQ08>+-1,EL)LPVkr&a=c:WS`DUaUP-j8J%LaA1I-'o]c/M_/*Z5UQ^<=M;6.-N%ZJq]Fe7[,[/=NqZqTM%)\l7Rf'M74=GN+cXc=V<YrEnOmH,$\H%7h^XSG4A$I#o!N9Fn^to%b(p[BKgh0*=:u5>ic]qHI4'ojgPe?dZnO#3i[id\0^C<!U7>=<V9=J_<<DCH,_Y/i#0Xtp.K-AZ=eS6!,T_D&PslQ&euK<u=8S]+%%o&?<h&>OtcUY+OAsV3UX'6tg7<U1j8s*]@9I[9kb0EmCrfeUb66Zcu@OX9d6/$<Xbds;jS);EG(:4h"`m84uaKDG?BV3mc.>@Dg%kFL$uRFR6BKf!Ma=BSEuALT]jR@hY8e](SLgQKkn^X"I"AZ+O]6c[-6+/R'H8fabLE]oI3Z:*.;lS9_VQY&VGest@TQ'WUtX><0Q%6'bZmfQ"I8ltpKAYN3P[L$`n=V0q]o2l2RU@@U4mR2)9hB`)R-2XGHBYnVrc(P];lW.`]l-(>ugc$Es^q1Z]:Zp4qiHfh!^;4_,C%&X?MP)Tp'h<b(0]'duGc\I6iGK4<En/D9AjcD4X\(C/,]h?BD;Wr[!)8cFB]%K]9[;F7`5/$*J;#u[Q>A$`p:0,6k%\Vo6:Jg-K`%^(%X>0P;"QB:'nq]oo(7Old<OWNu,(M'S3V2kY:r-B[T9Fr9GkMP0d6g/26'1Gd2&(BI^/'iHc0CgNJ[X-XsPVs=n,iNYUD4sh-]%%Re-p81WMHQ=cNuS=+?md_b?u%Dbq`Yqs;9;KHhIL_aTVeXWIJh0i6@/F:FqX/J@hnfa5bQVDV-6mj9Kla"CMc;HS"Zn;_nFNB4i%4$/2e7u5`-KloCK2SZHm>3'1+_dd>s@qW\hB>\4l_dd>s@qW\hB>\4l_dd>s@qW\hB>\4l_dd>s@qW\hB>\4l_dd>s@qW^Vltk=H%UdV]Dq@<<9$bj`$#]@$OctE7pkF3;IrTpZ&pF'rbgpNuWKFWbE*"a4X!]/2=S[qpHj:#`DN)GDNOQ+NV>`Cmt1p=Ib"B%?a9ec8D%d_+r+'1h`+MbbJ7li-bR]Be)Ip$6hRDk2l.nu`qgI#QfB"OaqP6$%DT.Gd*2iijeljqS])5ap;1Hiba'KWgN+!#9Z2Ws_d5#Ld$J%KkY/kQVh/rZOn[,$Ds51L5tpZfYK+&,JalPn/2P0R5!dX3!DC2e]0,k_7Y/cJnZQjm+/%A#P7)(QJ:^3?f\NL"Zr*jB-c-G*'PU`%1p\Kc?K)[c?reAI?jH;oE=/S24o72B4.+jE.@=_-S*N(PYNNF+T&]NjU1e&)j,PS7,)PonkL5K=>iNdN$XIFN1Hh@?"Kd`dm\!r&%cLR-EN\R`Kk9<2>DpB@SDaOcu$I0\Yq`2:ZQu<Tq%t[Q'e`B*DaW'+*n9MhF7j\b$:0tC&(t*]FTi*3JL/**5rPSgZ]K+$AIL/&\%`T9D4a`Ho6$lsVDXDd)Ckcb<@6Gk&3j;$jETTdu5*X&%HbM0XHo#Sr76-s$N2X+@N\]J@,BrkZn%UKGo%t[P_EqTc"ngN&M6-s>L%]0$?[Gh(W:%%Y&tnf[/W\T*7q,7cc%`l(Bo@BTj$#=0``N>i:s]]Sc-kiB9oK:sM#)NWbmU4;b/gg.[(ki>`&mLo.jiqp$B6UmFF%[Q2Tb**Oie0OlMZ88tq)KGWlPdmPsS,+]m2PQe_DLF"@G=`^T#,=p`n"MqorXj:\6%U?*Qf*:0[#)\0q*&="gH/V%(TRN2\%63P>%<C(]oQ9q/1d]1ZJ4HK]L(5oJL)$%rqZ6k-cJ(S0P8?33Eeg\f[fa=\XLFWGa$;ioPb,6,H'rD="EWc#0.."b,<M975_%BQWG.Y5p%:6ktp^6pRq![-^:l:ZgES=+?mJlW"s32iqQB<d)I%GKD<TG>G`SEA$PlY@gT97q)r!+e.dm8[ZfeZ1i'R/A;D9Qb@Ee[Fks+[foF%XfUV1`Ce-F1;7(d'F*b!5i?G`Ng)Z>&H_>J-=I?ral^#eSp,Xpf%np#IK=(t5"=J?lj*t)UJ@I6'$LnFAKs!eg7SZ3d]@0m$'M,*%@rjC[qXpp@"m7OX3t@-=&iU\KfjW0kqDm%mY.L#D>S3@<:?B*s0+psc(1dS(K#2^bO\.QU(b!h4o.Vk*N+^pT-<ac=>=h(Rb/TId%$^7,;8X/!QU^Umi]kV@YSEI(Rb(lQ<FH('UE2L2`)hGNZP4KA<(d#S/Jl[h]PPKPS45"o&dZ.gH<caRCDO>F8j*\]UHgj`\fS)7+%PU-_Tpi/M<gb?9V"sGdW%%8S4.]d1I,i]891"Q'#a*)\]?uKf$i0]0TS0aZZauH+@!F\GW./[(2n:>74NG-$-O+J797=nO'7G5Hb%!G`YF6)rL24afVs%F&ZdkKifPAmjJ>p`]]A;*[gLR+[ME$^1b-/&73pn[q.rE'QOu,,BnGI_,6B'!=;Jb!otK=Oa":#R]R*8!"q>%(k^@cGY):1d<UZ*N'h&P[WYnnQuT4.PSrJn_A]W]Rhr-AHNM\A@'qk0BRp0cQLD%KRLk8qA5LqM^oVKX97h8'-Q!i^"Y"@W#n'>3%4%@$A%SF"+2.X&2S3b1;TK@a_SlVI!Cq_HC362N8I4RVnFg5m'FE'2?Z0,CN/?In`-0#Ni0fFO+#.G[WJnoN*@g(NQW"a#,9/aPM%FkB.\5qN*n2HHH'F4p'DjZTTVBVPS/02G^$O;4To)oXd_GnR'YhT/0looloqKsD:*lo*j%Jjc;sTO#'6OUF@:(n%YR#@+:pk]-N%%-ksOJgOHt#@0K#!'I]R0c1ui6ZSqqe"25hlXg(tr3M=-"@MAoCnnH!R!*P<;PMn@j#TGp5'f8,H3lfQ4G:AbP!GBbR9#-CPmSST4%AZQ0aWKBI;FfLDmbZ8]+OnM2YoL.(\VckT/-V+rO!t*-1.IF[;+D&gF3h2a'8,!FI7SO666l2QbBbZj[AAq*j6or$*-B*U84(B6!%;'G=<s#liJ*5i]F`3<Q[Ie34?8t$B/A&[lX#jeW%n[ZI:mpHn@`rl_hap\FLqrOfnWMEZqMQp#R0=(s.og<Z24gTuE:+u86CdN[a%`0"pV2AaFF$3BYISe'H\VjG.J#aTGlA./g,7pTn9aFVt1`RquL',D`>"H&`\,6C8N6P)H]k=ghnUga040U&;7R$3LAQP$#r@;EYY%0H<ta)6.HpXCZ6DaE\:lTY2r^O&p:NE6a>>/n7<M*Z>2SCEsTE_0QITM5)4h[8q*=CF@0j_\p`IcYFcGL1"^M_>0gI,J`V(E!kDO%"@.t3^7CXTXHd<Y6&?sTi1WMX_R>W.nO*B,\*n!t1TV=\doR53^cKf)Ig3)n_ST&20_O[![ihTF)8/T8j^2=.;/#G[D]C%d%pnH7%XL!]aq2@6eh:DFQD[hQAV*&tJ'MNci/7ICCg9Zk&4!iO=,U-QZel:YF=Q]kQfW2*/3_[#j50u+/O32Oe^3.WU9,g&5`cPGN"$NuX%Wie6"K4M/&A*V4Fi-tdIFBe'@Gn*%$147B+WVgN)3S3V=G!=8o;+rIQ.>g\4MsA>&9pP_G0\t=V5gR";]..HC=#$STD!q;*@SF8=%51"?hju7_-RB^PPR._/1U'X"uk@8d<4X*ciL?]@]OYMt/?rB&B`)Kt("$O\8IT,a;R.OTOeW8rRNE,he_fT,K"$HnD,@5A]k?<Z-%]nGgK@8+0'^$[t]h3"?*o)4+_on/"WDfE]q;r?WLP6rT*3db:B83C/!"i?All201Y;FMnL`s?ST?q:KZ;;KkZWZ+!hH19K%Dg1=2%HXlf@G5e-$gC1'9ei`_Dh$k7(]'IbD]1(K9mUV&O6Yd`k#+&ui/l.3IWKpe\$qWg!*di!.iF$*.o'al@4@?g2cSFBMa'4X?B[*`a%s11M$,^5(^OpbF(]A06p+2sZJl>J+$]e@eZrX^i)riLjt4`OLp-I8i[Pf^"A/I<&d*K-?;RY<7HF'*pF*-*C27*d,O0#&4(=qWDq%:C%-(CG)Lfc*g.eBJu<$.7'.gXC%-]hG7KNd"DkH"k>Uk'<JCQXX##9ARidCKuo5Ea-?r<l[._p1sIWC.oCBWU9:G`bR2Wn0`JG^%3P3:7-kf7qq+K.rULI8FQ>D#;[HN,3.FD2:((>?s>[==uE/$$M6uO>=X.-suc;HFs%Xk\.T+8H-ek(ic6F=HUXPk_`r)VCE!5b>Q%2)SE:>-hCu&tuH:8>8$UU@h5h<GP-e+RN:g*,B;ioZ_:P&Yeqm,)Ma[L0Snh1[0E+Xj.6YQe"Q!][l'].ukDtc\X,C'[eSd#Qoq<%&@*,(PdG_,IKhCN.:JDgfbcI>]^2BG-2l*P67V)Y26Z_IFm+H/,$nca6u!u8$_,!?c;H@q['VhT6uL?V`DUaUP-j8JR+7]QRic7e%o&#D,LHW7XCqeabOC:T5]G=.sRi=B+9kG\a.2dV=hLrrWW9dtB4+CDeEE(.#cB?H@AJ]C-*S0Z))Z_s1F[ZoVTgBDSd2!_dDl%:X%V-5,:n=u4Bpkg>?71i)ViCD]_,.)4pLJLB55+!QDIh3XnB>N$aKj-mfE#^l]*7>]B&QMb#UfWEo6)$2G<V+pmOB'P6]]ko@<D=fO%CWGOk)3aIn;,J3c?tIqcLoOU%fn65lQ&?kTeKbppQ"!=H`9d\c]7rX_c-,lljH)6e<LkG*+(d+9+8g1OVli$MqLJu)l^D=gPchQZ%6e>jLEgDmYGNbJl#!AKBU#auTBuWFnCKNq^]9P0FJ=UJ7"M7]K&4q^u=7`ZM(qJX]"A,I)CSM_:>1IGi-AY[H@f-e1<6^CB)WiM#%E[a;K8gE,sO\uK_ne#Rl/IG.?M:<E*2E.H(9XLMC9PQmb?]pK6S*fi7IqsIr./C5YF+O6W$]NSZ"j3m`BgiUo>'8V+67\6*M0?G3%#S<tt5QUa#)kkR'NoU]/@$jlP&XsB.abh4rjm/1/TXJ2!6rr(rB;.NZ$_3$:`(ANP17j`K$,[7cj,'%74gAlLd1Bqm.lJbKFA%5t%:;I5;,I81kF*>^k@_<J1"A&Anadc$R`^Vu%Ls1^Nkf=rh`b`:uDSgs@La1_6Cb@AVLZ9!NB5"8Q+d`Oj:bdE),'0Wg3$LS)5\*VV%7)I_K(a)=@k+%d3_7,iRa:.S16\(=[R?NUBQP$%8Os#2S&5-R;MQ=IFKgkoWiT.6<8:Zj`$"=4)X9]B9&OZ%R6E"^//,7@Um>1fh%F#'Xs.lO;Jie'ep]Bi^oZHB#%W]NI@;2#7eWk#(NK>gF58i!!&bW.<\<(e$-H>knh5cL9t)9.KWkj,rmpaF"/']D96n/k*oO!=Kl%&cVBs#ldbTs!Ya6']D96n/k*oO!=Kl&cSO2s&"IL.)LHJiW#f(_V\],KR`Hi`:_r]hPhD$1&Pbi?uW&^>+[^e_mo*s)gh(J^cO2n%XXQ$ET6'(87Wn4\26Ugd['$oF20L\428q<g;p5AjU9U]%K@sM"$Id39>au-_R)R%DY_1VWS:YHeo%-fK#I>$m2?c10Qd82Vc%Ia$%>+:*abXTuQS:YJ;]N&7-JfW(pitUif%NhTVRTZDH;m:n"F$8jVon;eW3p(S*KTGKPN!)50SYDH1"k1]k!-N]]Y_-)+S:Vd*iStVG%1L\P_`[TQVX?KCq%d)%/*4OPk]"+EamIc-B2sp&dQssNiK(6"JK3;GK$9OW-7SLc@2kqcngDs.O;dfp;5tn1N_%,W,`r*Y`9J]W@%E=-kC]8olEc-4SU.G2J<2p?Tk*'PU`1fKuG''EKFY93X4rOAG@D>+@hoOc1'XlidBI0)<"3+gT73bDFmoH_X7@@4CFNLe9DGaj@<%-=qk>OCdRdN8Q4<N`kg+K%!YhpMlDE]%P<H-d49NZcUj^&_;!T+-\HhF82B!Y`fs"pJ.)a(7u1IL?[Ta(csO*mg@c.#s3"@QN\t)%0Z,Hu4(3lsI7Al-k&k2*]#tAn0PKJlm'I)V(j*uBQVm2-4(0KM:=ZUC_@/5GRtR=MQ0L.Lbh28G,Jm2foli-#L7*HZKGgX/D&>>j%!hINS8_@_j^,p"rKGgX/D&>(Qjte4*0`>\&fU3<\lYd7*?S]oNhs2+8bj%]:_L>[Y?hS>'Qq>V,Ip8>*Nb9.92Q+hD=1f.-XF?hp%Ke.W*0$ZpmT&@VWBkGVierh.Ag(?5M0fpr*Z6@k#Fh/e#^?&-V0oH,]6S:G_^]4l-Wd0q)N;`Ic=BZ*00_F:#!EeLc/:;59S;k`8%i&IdjV\L]kCIsU1m0J?u#ZqiX92OqoqBH-G'h'FM@P,.g0^I6>.30PX[^+fC(s>RTK4R&*mK5jNAAS0#k%k0p:[?pM`<smg0`I^c%@8Q**`Uk^Ik"fUe&H_>J.Ub2Ial\@]6g7l/A,R=JVu?%q0dm.MAJaEEr=__(/%6oGR6c@(e5=S*<d'5'E<kkJS&9?,].smK5rlmJ%Nt?!6K+cVo%,'uJcLV*B1E$Z02@mH8Cl[g)Y<(!7Y(jmraF`$6c.U/H!jn]7[qon^"kHM9"=_cZYo240gU"1"S\N85,V!7pjCHBo%LKOlGojq^%8rn<W[P9b..Bbf4.pRM9,6J<\/Ji%E02EuR?6]d]YH"KHKiDd,(jmhWNb;oP3Icn>WMl1aN$Y)<A.:#"mCBF1TQ'*p%A#m0HhT40GPs>\hbAY6e+EZ8)MS5K^_3t\M(GoW<qWMq@a4jF6m]s4S+YflT4#Sn=(\W&YA^u#Nr/hkK9i5DEhcdqO=G.qR\gSMb%!T5E;I:uNaG1,X@j[l+*qY%F6=dBpRnMkn.!3IXl+Ur4"=C7/+KX4l%?IL\!iN+^]pYF0((p6jeJLk'+=e(Jq(h!>)e'b=4/I<&d%*FU`Z4RGcmc'XJT66KouMHLoZ>B9OJf"JlPX_X77rPjGsrSr"PYS515ObMC$^5T?WK<IDY:UOPe"^`W;/I>=O*FjBp5[l0&J'tAC%.V9E2alS:\\$f%B`\A_I>jl/.C1LbsBmA7f&2G]=FLY(ch>d\=GFtT4B-Wq,TFjP1N%tfGgC2r9g(OM6B\gMKB[0)RNb4`$ZET@*%%<:V\Y8Z0-7oSeop?NV$OTd8=S$S4p_48_7'tke;B.+XAd#>6_7;JDXei!Y^T&(<8Aih?Y)U=GhDWMks^t,njCVP-DXKVAp<3CZA%CY8)8\:VCRr$IX8>hsD(Wj>Za5A8)>?LLP0;KDc"[,\*@-'=B;QQKgFnq[#N^E;AqCV_dF3[a\?NbFK-U'S]rpW\r]T^/:S0Sr"G%#nj'T@:?nsMC#f^jA0,oMFq"(>&sFIep3;Fp`eAS/nUpJ)\?%"Y-?dGnCE.$mNCPaHRluGf0`Jg2%gB`d"[XfmlrOiNM"F33#&)D%CSVh41WMnsI(mnppIg4Zoi=&MYkoK50D*<e2/71f]sjiFmpR@cB.+XAd#9[RE"BSqZD#pQ\(IMp`?_PD%,'uJc@OQQ.Z[ecm9NBl%ME!@2A=R=l+B=Jb)+B4BXl7f2=N+Dm`o"t'_TEp<`):XTP-j8JLaA1I-'o]c4hJZoFEpVV@8kgZJnBKO$&U-@Jh"hLB?WUBF`^Ot%0LL@rB"]])HrT;d_oVNTXVdN,'B?aIfhQ;%f*3@'MMF4FR^%-HZEQ%sC5m7=e_.,58frAq+:F^m]]Rj;!dT&g2?71+IJbm0TN3.X%"GkQb+])W(F@8"hT=-e.&HKNn+<aa#VcmHBT&028ST*D,bo7AJeuf-8[hoWmT&]%gQ#K`tFF#Bk`N3Cd_+N9T1>Z?/'UI>i^G6Lo%].!&+-tWp$a_(8^`>Po*Zt-;T9:EApFC=AAM10SDCJK2pnB4%Y-u.AleS)JHgBXoO$eAGoK&G+IQu6\f^aFe']2P;bB*tNKj@fp>%%Al;cBYID;V"PdVCW;U*<.-T^l*f.JH=gH*YXSYS9Q!RI22lZa]8$VaGn\YDXUk'J.^AQ'_U[3IWAS2>9=Tg*po'aEjd@rD;(^bW%pJ`n4/$'8da;Xsc->gF,n14p\j:!h4Aess]WdL.HWiWZk9XhDncnj8u.*j.8er2%2A,'^Sdqu2toZYi#b&_L82.P?5\;;R-W1B"2%R;,.plU;,V&rh<?=D&WXFRo&NVV4'QkdfOIcL'b<DE#=O]D8#Pc0t"HT]`>B>QppjPY5$TQu]03qRaXe>O)AS(Y'bOF/cl2A(jSc%M'i"rSWDkmpmgsFXVk&D9(L@`VEJ-*ka<s@[--@O1T%hGlD%c]\$\EHF0[sg'k\Mp7gPu<;rZ^1#1IF;YPV'po*naX;e.5Umt-+H%72COJGDGFkf#R?_H3AL'_i;!SaVYJjcM^I2[<4[[F%CcP$od3C\/DJhlcWM"DJO[Y-Vq9jF=>DgO$eN@GQmQ"G$G\S\$\E6qLaYt%SrA#BF_Is<02gNiqN?f#?H\qQ.-6^ReX@'qE\#^HY;It2_Wrni2K6a?Rj4p`RB_%N@*M^aosD/6:=XLUHr?t[>:cV^DWFW"M'X&j%=V;uQ42tZV1Ie4P_M8b`^VK4^.V9E2alS:\M^hkD$"%+h/\EUaFYB%2eWlKNQ0QMni%,&l:TLY&M*K%Z<*-SfN5$Y*3%AMtB?B<1%Z7?Eo0%oF[#%s80S!Ucuq@(Lr6:6p7TS."/<ERolb/W82]$<73Bgo#(o-Q3k#Z7V&O=k1eB")e-<>'IjNMSiH#+M?,*KB\c(lCeD%8d-M/X00;`4d@T*&u6PKY1%&R*C/ku`ZH@Zl:NVT=NQ`Lmq(+d/l`PDK)J;FFhQ?B1.9uP4a]L-&X3hY\e6?1l8GGg.*WTu8OQMf%Q$R6$&TVQfbUUVqcgCsPM+O,*JaSs.Ksanf5RQ\%PTWIq:dVPQ.]hRp"QN4WY#eel!6S2]rh?dS0eoRd4#T%AQmL>ZYA*<a"RY$m%8p.f_8Q=:N*3(NQP-pKK?V5I31!P`fDU*)G>@1N:EBm29f$:M65&,doYbY#2DNG#RSE*E.>"c[Y&X3kR\gg`<L.$)'dYtHF`Ge[m%X)Z19em+Uh\WA,(h94XnJ=7`U=_TI:$5PkuJR>G1l6aa:Oi84e,>*"l(9+9B8WY(^L?Q+C__S?-Y2/k_jNq/"<NIL5+(e4S,t*X&%f3U<=>MMMo+ORSKN`'.AU1ICQ"_T/!B1dE&$^3(lf!;"-]EN#X,@XDhAo)(HYK2o]MZ"7?<f*C\?[#eH&mr3G:;g3\-"eVDGDGs^%YXD:R7-?*n.h7D=_qMB+^$P,M,*)(p!l;mZ!+:p&SqEuqZP6#fQ<o8FSY^*!*R\`Z'`]Gk(@.$C6[C'0+gdsiQQKhA`CfFI,$0NT%+[p_5HT.5^R^fPXoL^YH>02qn=h,P_IJ6<q?CUVcmNdp$R?am#Qf$!CJsQ-]((K",V)?n?]lOXE8e\$u<9pEN'TAH!H;a%oN+e3W%CaF2`.WfAnnHc*s43dWuW74jE^N[.&XR+4\C+#8eM'a^k8M$Ae.60c;\2tDW\GIHh$I5-r6kU0>L,3AH><.m6)(ToG_:n=7XEDOf%]+6EdKP1Ni=N+Dm`h-:>+YrDA@OX<eEYD#D`0/3`P04BBAu.9R9M/`?!i.*f4\8P_-r6\(GY0M&=P8i[?.q$AB0]oT(@*XE<(`kt%<jn<!I[DuaQLSunC^O4#:!(PQa\/mlM9Hls'MH0)'FS7q4f-f`N%Y7>'J#tom8WE;UQSmr:SAK25;L<[B.EQ45LN"7:SC0B'iqVp%P4>EGfX*"i@OM`P/e2Sc5m_<d9/aDcqi9]H_nop$_ILL#A&H/n_nu"T_nop$_ILL#A&H/n_nop$_ILL#A&H/n_nop$_ILL#A&H/n%_nop$_N3QXYeMLkq\.[eesKa9[BfNX+9p^@WITDG.e)Ei[kM^sq8OJ':%HTQ?#,<knR8Q\N9]?aZHkRcfDeJ51T$QtO?[.\Fti(b%D/BW'0KYs@VdPr"T8L&5"Zr+%B-c-G]R32#BkC.):;IEPo5P,7RBU:9R=ZI'i\M56?k/'#iY5'B@Ie;Q$?e,(O&N98H20E';p5:X%%OOr)*R*r#,DBhY#^s_)_@C0t)(Fo[%Z4TP'ML;oGuJMdFtftX;m:n"q)AQ,9_`;*]q0frbjKp)Kk]Zhq-6C@*R*M!''s!9+/`M8%M8u>-Rt;[)k2R.L1RfK&'Qu1:]AF?H0Y@@E"Og'>k`j=_Y_-),S:Vd*iStVG1Iq#NdC:.3b4$XC_DDp$Lpf2F4.+"Emr(A(IdA<P%j*K/$=F_.+k"/(qHI>ZO*8-`kbV6)IH4jhWF&Lta)`sHaNbb&9/LG$3X/S!P_Mlb%1Et$sa,Th5P7a*K)(&jJR@R'lNf9Vf`Fd&U%Z$H/;T!4Cba)"rJKGeCl)%gJJriM$^1F(9HD4H9M2F0mC9Yq4EGjg;'B(m/TAsh20c0I!W3HK0X&U)mPeRq:;@<V+1Y`i4Ac\O9m%9\q+)B1A`oN!M3tLX1d\P?Iiiba;gNT+PLdksl]4cA_&X)%h&GS?L!d,Jjl<O#Dq7B(HlPAse%S@I23oL@r$1qC``L]C0m$).rQ:%2dnp&c7f'`AAMQZqolZ5Iis,&1,`JaY>h+:S4IQ13%l%2D>TXW&:'\iC,hT*95]YF]!WeSOEQ<%(PjdI*8NlGHFNkZJb(QD.Ucn(%alU!,\#>rQ%?uWG`Dn:>62a0&kiYX;em5ou/9l*dS;ff+o?FY<VHEf&Q3<'"Nj0'a*X+NqJh4a`ajV=Ti/aTF<cs^EI[E!/s,%W[%5&>)NZYaNm[-%S>_bl858`.V+2o)qIfH:7CKD^iabt?8Z1B*pe@ppI$_Ns-Qnao<W[%jRQ24Pt^ho^8jD#5iWM1,?RK$C2t:<s*>%\%EDTjPZMLhttq8JJ1LdK86[g[8W#?BZ=/M@t!$,E:/=bUR6i_;3N/i)eM2;c]lK(@M,copDdXPo0QK61kHXY[]:PX-7#(dOVn7[%mJDl`O_Qgu"K9b+0rWM-o<r9naZ3#L9L<2h[YA%)QuRg'F0*64g0;F^(h4*dN'3H@s"G2rk&m0"&I9FmUf16oE`l%e<,O'c?3b0p%9?I!&i_Ouf@^E)@AFm^?kHeUhI@)7=h1CVLidqH&nPmGBO-6=NkMibR^_YVQ2(L^\dJ/'6;HVTsY#rilT0+VL.V<g9al^(<Skjrc%XX]K7)]kNo)!mHDC#0^F:I&3n(WaJ$L;hgOS5*&XmM94GB;l_td#Kh?4.D2e>kN&)#W/6*QmITJB:fq$$B+_fY<@QO]##:Hg?+)A%3Nf2lga*+T=KC,FNPM5[@rLoL<jS(pM:.EhY`@WS94M(RKL!Bg'sf0+ZK1SoXOFhi4)QRM4CS]Lejp1@IE?&=6c7jpjtquOGRR;c%;Hg^I$OV.i6NU5)-<R-$eCdZ=mZP*?TU8`M-(>q;*9RDHO1m(]Y(d1!$$La,._J9%7!b-+LCICrH3bK[+Stof0lRpVZ_Fc?NB_*s%(`X"nmh'(:9/$j*N'OuqQ""lKal^(<SfQe$f)0ucfaF\sb4@[=GJF93>chd[-]i9^G#9#/6O<>eD^@_BEE:6H$6!aeY"EV@pA\t6%GG/_H"@/_&%<Eq*Z!t&V<5T^3j&N@9Tj2B;((B'j0hOQ;EF;cHZ="PsF#NU[Pcl[d.onHl'N1bJA,4$0R62uman\TZ:.;QF(&><!%o>?GW(i+/!4-+\pdhfin"Cf+6Af-$#]sRoE+:)f/7NhQ3p6uBs7[DMd+G&9%(9Vf@S6--SqBH.@;,kC^cB?E_Z_$UlF6^0U+NDr.%c4b$fYrW-E4Q%d1Z8T*8$`''4fa'tVH>Z?D'qM17r'<EaT\^=h0Z6k.rdqN;W0l,+-(>ug%250i#1bf=<(.X_TC@ZY*=c_`=F5TE%d&8jVT)k/F+gc?qZ87`)4(uZ:?V_ND'W^ms#di>P$0cJbCj%>lZmq)E6#@.e$Hm4hc1%0N_:c#+&!.q-D%7)OH-QHQD_s;O=\F>l%Bua=XK<87-g7Hb8+cnNL`@Qk9/@k[4lT(`VZfq(6TjVa;5k(c`HN[_bE*_!0M:;:Kf5#jVJQX[.3%YG7U`EtBA5Hhd3e,Sc,V!C@%CWY[n=kC+I*g<\n0Q^0fFdGb`5hY3e+TOj$f<XAU>F6,+ST+FOGnR&Q^1;tmA7,0g;*[H_ekWQcB!UN%lR#_.PAq)3Ye9_EN3rWf%Mm#Z<!Ims)nq)d*\<s$nfc&#Q)`2&@hXL]nKP!SJ;KKDo"PQ^L_Rc6`S))[1Dq#nfinQ8s@#4J@]>0"*&_'--r&eb?0C^5Nr#UhO%?J[1`OUkc#`Pnq];r=tSCQr#udd*3+r_6&5g]js=(KUJ>YDEY<=d^`UYBSi2Wibjn?Z?\^;0ree[F@'iQVi/fN9Re%#C9uF<7JRt%'cEb.$.aBM]QD`:D_U"uqEWB.mLE8i$J1UQ<_<M\X<>;fde+ragKG]BF7;22[>]uI.VL*BQ@-u:WOC(WH=l8Ejik+s.W23jP5K'W%hqheQXn@7:7:DH&<c7bH\`q/9);JZ3Xn@7:\LKpkc8Y\Xht5rVq.LVoD64?@S.p&1&g\tR=_(3*%@HTkDdp;[os$V,PM[n9_X5kc%9]_UuoIu'"[a#,(Nj_HjiXFPs<AF<].Q2cX0rE_%?MC"j-;li/h]i8&q1[#Tba<;6HeinG2G/F2QjQ=S]*P9_dh&(E-(&RcI4W_0%0uar>g`oqI&o;lf$:UrK\A;-Kk6!kgh:`FRE?lECfJD,SZ0IsX$KVK@D64?@bZ/oY46Q&/VdT(bAuVc?_/roI"$L^"U%E2h0%g.P%R.TDi'gajHDJOYOcV^hTorrbae_q;eeW2-qWHYqi<*SMf4`e="OLg4IqBtB&<BoVIZmIr[@CiT6JY'Du<TRJCoIu/l0pSB\U>94g%XnD57hm?>qWJI6O!aZM:8AHKlM?L$!:mQW71@<YU+<lPt"O%K*9>JIA;du[r^s'sPP0<:tMp5?Jc*[*k:u.%aU&_[1fI$`>UBNs2%IlBm9?8<`rVH-k4?E8fi-Wj`,I;qBfWQn2F^-6:sQRb35f(\IE.)3,u0?UK"l\k>WXQ1oYj6ofnb?k,`9?I!&dZ1)3eo6pkIOf27%7q(#;<ISB.)0AB3=lJ,rn^(_OdF,5&MDJ4j]0lIL\_O1_<pPeXXo/l(i[.#F]9cef](Aj%j31!iKjtTFXo6,FgjI2JKIH5S8M'1j%*<Cc!lCoK_A6ZFuDOhA[BYVd6er\&a1M1K'Bk2gXZGe:DX'_sI.ZKB%>@t.?bE`8CND)$([^:p.r2G$7/(0neSL'aIB$K$XltFLF%"_DL.\`Q^4.dPV#9=.ef[.Z#OkU]0_:M[]]I&\P^V>\7[ji1YhFrV7']!Gr=>?S;X>A7MO@=9__/+%O3QI:3e/QaOjQW_:1.`S+3%IV0b=jmYW+[f2Gs;i:3V8`XF(jbHus8h/Pf@&3"KhC>NIWNo\H,jeX;R^FDsBS1o!U*k8-2?'s@.,$M_,]^3OnpB'%'t-k`EO?Ef%&H/U`,/k;3Dh3$sUrtNfA7/i._CLp?o=_Z)?t7e*M%8="5=Q,'Qs%sBZM@q[Um"-@\Ml)BK=De>8m2G%85^r,!Y,g0374.NV_9=s%BDgaNMO?!r?`,OY%KVqVh3mNYf>ghUV6V,Xl7TLWrO;.q)%hB<QdN#=bbX5,(#r&'_"bTEXL2J(_0HF:N+4&t(4DMmQQ>4iFj^h&%[h`f:&j9Nu%ZIJV#=cYq^mil5V*bLMG"N"b%CYY=*SC3]eF(\7&Nb)B[,ghrO%tURg0#$<C?j5%70b1,;062C-q+AQKlU9gJojjJ%)/EHs'HO\cItSe&0XHYCAFm^?=XSp5<rZ4SBjBIl.B^8_9^/if-Do9sAjp>])LkoqL(@<O^D'=_X,'!NT-PmpF_AhYLKTO5Rcq.`%@<oO<CWR;_LG$3rB+OZYZa)BONOqO_%dRt7/AYs[:Oe$G*EYk!1M!h=g"S?m^.P_'"mp#s&mX$^;5piXRoIffELJa08ENq]m:i6!%'<EjU9r`Fr7m\OY2D7aij\beh@`9Ka@=;H((jK.rKnh(\7#iQ]bJ281@@&PPd\ImnY\45.QrqMV?flME'sie*jRU3i8LDF&+0;7U%]%/rr;Hq$_M'O&(+g5ul-3\04SA(6cM][A$^$0>[(?6n\Bgi%/WED=-qYI.dhAOc0cO?Y[4/+.*C%WR1@h\Mid;4Z'SXFm%db6AH%!UPVYL[GQD-2.ni_jno<\ZE!<q6]6npV^S9`+/P[A,!oOpV^S9`+/P[A,!oOpV^S9`+/P[A,!oOpV^S9`+/P[A,!oOpV^S9`+/P[%J%0jb-gb^E`@l]Sj$.tgpV/ijpY#BZ^]*3@Vgn^FpO@MgDsOTF?U+MOqqlo"p\B#_rl)pmr99!OdbfQSo^pDsIdtT'rpi;Qq!sb9%ros;uJ,&?:n]gNO2Z%_0rG"QP#!`%Uq`d4ClrUsujibi^^Ad/brphX;Im0?Oo=Mc0s5Cg:B(5\qpAD7h5Q@AUr=_L)5,9j?(#RD>%H:M38?&cO1QMEZsJ%FLcfQ^2%2]_qANOAL;<o;A.Gu%rG4cR/<*K].N5(D/bkWSBbpmu[pI*Xks^?6LJht%>6ms,/V^O6@blVB80%T(bMJg\8KJ5@%V/ja5hpJ,=EaZ68&rcM6.B=i^<tj\V1.j*WosXVY6G%QV>AZGPm^2Wd[lVX^@Xgi.BS=YY'YCuf1$+8@104BTR*%.`NR;@gn7=$F&/\"P1s!2?N8*.Ul!1ABEp<0>0SagT7p1ENL1n@`Td/m'FQ:UG-,LO1^22[ak]M&,Ge@+d2Phgp]2Ej(F?jKQ0`O%B:[LuA4[bokatjW`E=\1TDht<*,CeNqH7<KrfXYKW/)a^P9lP;<!<-oHg536s/JZ-H]IB@HVg(+4[/o:?Zm1&5N;D,3A5^X[qG%5%rd2bkcn'\F(B1<CKF[d,@XCMNq"%FdY\9DrCS.rTl[i-N>2Z?<-I?[L+kuK%qX`0SJ+`HY07QoMpCH0]rjUeap!XG$pNKEjI.P+e%rPPO_qVg0nIfAuWdi\SemJm(Ur9a79_aNtB^W_1Qrkf8=r]DjeVrp;Eh`q&Y+L;C%^\R"6ro^JWr]`>oPC`~>%AI9_PrivateDataEnd