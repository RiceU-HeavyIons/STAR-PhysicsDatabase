%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fig14.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Gary Westfall
%%CreationDate: 2/23/10
%%BoundingBox: 0 0 514 350
%%HiResBoundingBox: 0 0 513.1074 349.2358
%%CropBox: 0 0 513.1074 349.2358
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 10920 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FFA8FFFFA87DA8FD7AFF27A8FF5227A8FD7AFF7DA8FF527D7D%FD04A87D7DA8A8FFFD14A87DFD07A87D7DFD1AA87DFD05A87DA8A8A87DFD%1BA87DA87DA87DFD06A8FD08FF76A8A87D527D52FFFF7D272752FD057DA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5252A8522752277DFF7D7DFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727A87D527D272727%A8A852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF527D52%52A87D2752522752A8A8A8FD0DFFA87DFFFF7D7D7D52527D7D2727A8FD0F%FF7D7D7D527D7D5227A87DA8C3FD18FF7D527DA8FD047D5252A87DCACAFD%16FFA852FD047D52527D7D5252A8A8FD0CFFA8FF52B5C3AFA8FF7D7D7DA8%7D7DA8FD0FFF7D7DFFA852FFA87D7D8476B0CAFD17FF7D7DFFFFA8A87DFF%A87D7D7D93B6FD16FFA8A87DA8FFFD047DFFA87DA8A8FD07FFA852A8FFFD%047DBDCAFD22FF7DA8FD24FF52FFCAFD23FFA8FD08FF52A8FFFF527D7DFD%24FF7D7DFD23FFA87DFD24FFA8A8FD08FF7DA8FF527DA87DFD24FF7DA8FD%24FF52FD25FFA8FD08FF7DFFA87D7DA87DFD24FF7DA8FD23FFA87DFD24FF%A8A8FD0DFFA876CAFD23FF7D84FD24FF52FD25FFA8FD0EFF8CC3FFFFCAFD%20FF9B8DFD23FFA852A8FFCAFD21FFA8A8FD0DFFA876CFCAC3FD21FFA093%CAC3CAFD21FF68C3C3B0FD22FFA8FD08FFA8FFFFFFA8AE2DAEB6B6FD21FF%7D58CAFCCAFD20FFA86F76A7C3FD21FFA8A8FD07FFA8527DFF7D527D7D83%AEFD22FF7D8383FD23FF59AE83FD23FFA8FD07FF7D7D7DFF52527D528383%FD22FF7D7DA8A8FD21FFA87DFFAE83FD21FFA8A8FD07FF7D7D7DFF527D52%7DFFAEA7FD21FF7DA8AE83AEFD21FF52FFA883FD22FFA8FD08FF52A8A8A8%7DA87DFF83AEFD21FF7DA8FFA8CACAFD1FFFA87DFFFFA1BCCBFD1FFFA8A8%FD0DFFA87DFFFFC3BCFD20FF7DA8FFFF8CC3FD20FF52FFFFA768FD21FFA8%FD0DFFA852FFFFA16FFD20FF7D7DFFA8A1A7FD1FFFA852A8FFAEAEA8FD1F%FFA8A8FFFF7D7D7D52FD07FFA87DFFFFFFA875AEFD1EFF7DA8FFFFFF9A7C%FD1FFF52FFFFFFCA8D7DFD1FFFA8FFFF52A8A87DA8FD05FFA8FF52FFFFFF%C3B07C83A8FD1CFF7D7DFFFFFFB59358AEA8FD1BFFA852A8FFFFFF9A9958%AEAEFD1BFFA8A8FF7D527DFD07FF7D527D7DFD04FFC3B0757C83A883AE84%FFAEAFAEFD13FF7DA8FD04FFB68D757D83A884AEA8AEA8FFAFFFAFFD11FF%52FD05FFB0B575837C8383AE84AEAEAFAEFFAFFD11FFA8FFFF7DFD08FF7D%A85252FFA8FFFFFF9AB08C938C92686F6E756F756F75757676A176A1A1A8%A1A7A1C9A1CAA1CAC3767DFFFFFFAFCAB6FC8C8C686F6E996F6F6F996F75%757676A17CA7A1A1A1CAA1C3A1CAA1C3A152FFFFA8FFFFFF93B08C8C6893%68936E936F6F6F75759A76A1A0A1A0A7A1A1A1CAA1C3A1CAA1A1FFFFA87D%A8A8FD05FF527D527DFD05A8AFA8A194BCB5B6B0B6B5B5FCB5B0B08CB58C%B08CB08CB08CB08CFC8CB08CFC4476FD06A8A1C39ABCB0B5B0B593B6B0B5%8DB0FCB08CB08CB08CB08CB08CB08CFC8C8D4BA7FD05A8AFA1C394BCB5B6%93B6B0B593B5B0B58CB08CB08CB08CFC8CB08CB08CB08CFC93FFFFFD047D%A8FD04FFA852A852FD0FFFCAFFFFFFCAFFCAFFCAFFA8CACACAA2CAA7CAA1%CACA7C7DFD13FFCAFFCAFFFD04CAA1CAA8CAA8CAA7CAA152FD16FFCAFFCA%FFCACAC4CAA7CAA8CAA7CAA1A1FFFFFFA8A8A8FD07FFA87DA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFAFA8FFAFFFFFFFA8FF7D%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8AFA8FFAFFFFFAFA8%FFFFFFA8FFFFA852FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8AEA8FFA8FFA8%A8A8FFAFFFA8AFFFFFAFFFFFFFAFAFA8FFFFFD047DFD08FF27A87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA8FD04527D7D277D277D527D7D%5252A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD04527DA8%527D2752527D7D527DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87D7D5252A85227FD04527D7DA8FFFFA82727A8FD07FFA8A8FD17FFA8%527D7DA8A87D52A8525252FF7DFD18FFA8277D7DA87D527D7D27527DFF7D%FD18FF7D277D7DA85252527D52527DFFA8FFFF7DA87DA8FD08FF52BCC3FD%15FFFD04527D7D525252A87D527D7D7DFD17FF7D52527D7D7D277D52A852%527D52A8FD17FF5252527D7D7D52527DA852277DA8FFFFA87D52A8FFFFA8%FFFF7D7DA87DB5C3FD16FFA8FFA8FD09FF7DA1FCCAFD16FFA8FFA8FFFFFF%A8FFFFFFA8FF52FD1BFFA8FFA8FFA8FFFFFFA8FFA8FFFF7D7D52A8FFFF27%A8FFA852527DFD24FF7DA1C4CAFD21FFA859C3C3FD22FFA8A8FFFFA87DA8%FFFFFF7DA8FFA8A8A87DFD16FF7D7DA8FFA8A8FD08FF7DA8FD24FF52BCBC%FD23FFA8FFFFA827277DFFFF52A8A85252A852FD14FFBC9A7DA8FD05527D%FD06FF7D7DFD23FFA852FD24FFA8A8FFFFFF5252A8FD07FFA87DFD14FFC3%CA527D5252527D277DFD06FF7DA8FD24FF52FD25FFA8FFFF7D7D27A8FD08%FF2DAECACAFD13FFA8A8FFA8FFA8FFA8FD06FF7D51FFCAFD21FFA851A8FD%23FFA8A8FFA87DA87D7DFD07FFA858AEBCB5FD1BFFA8FD05FF7D83CAB0CA%FD21FF2DAEC4B6FD22FFA8FFFF52A8527DFD08FF4BA7A7CBFD11FFA8A8FD%0452A8A852F8527DA87D52FF7D7DA89AFD21FFA85283A0B6FD21FFA8A8FF%FFA852A8A8FFA87DA8FFA884A8B075AFFD12FF83A87D52277D277D275227%27F85252FFA19383FD23FF76A783FD23FFA8FFFFA87D7D7DFF7D527DFF52%277D7DFFA8FD14FFA87D7DA87D527D7DA8FD047DFF9B8DCFA8FD21FFA88C%BCAFA8FD21FFA8A8FFFFA87DA87DFF7DA87DFF52A8527DFFA883FD21FF7D%A8AE83A1FD21FF4BCAA883CAFD21FFA8FFFFFD047DA8A8277DA87D527D7D%FFAEC3B5FD20FF7D7DFFA8FCBDFD1FFFA859FFFFA1B0CAFD1FFFA8A8FFFF%FFA8A8FD08FFA87DFFFFA199FD20FF7DA8FFFF7CA8FD20FF52FFFFA875FD%21FFA8FFFFFD047DA8FD07FF52FFFFAE83AFFD1FFF7D7DFFAEAE83FD1FFF%A852A8FFA884A1FD1FFFA8A8FD04FF5252A8FD06FFA87DFFFFFFCA93FD1F%FF7DA8FFFFFFB59AFD1FFF52FFFFFFCAFCA1FD1FFFA8FD04FF7D527DFD07%FF52FFFFFFC3937584AEFD1CFF7DA8FFFFFFC39975AEFD1CFFA852FD04FF%A19376AFFD1CFFA8A8FD04FFA852A8FD04FFA87DA87DA8FFFFFFC3B06F7C%83AEA8AFAEFFFFFFAFFD13FF7DA8FD04FFBCFC6F7D83AEA8AFAFFFAFFD15%FF52FD05FFB5FC6FA783AEAEFFAFFFAFFD15FFA8FD04FF52527DFD04FF7D%527D7DFD05FFC3B58C936F6F75757576757C767D7DA7A7AEA8CFA8FFA8FF%A8FFA8FFA8FFFF7DA8FD05FFC3B08C8D6E936F7C7576757C757D7DFD04A8%FFA8FFA8FFA8FFA8FFA8FFA87DFD06FFBCB58C8C68936F756F75757C76A1%7DA8A8CFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD04FF7D527DFD04FF7DA852%7DFD05A8AFA2A193B58DB08CB58CB0FCB08CFC8C938C8D8CB58C938DB58C%B08CB58CB54476FD05A8AEA1A194B593B0FCB08CB08CB08CB08C8D8CB08D%938CB58DB58CB58DB08C9327FD06A8AFA1A193B693B58DB58DB08CB08CFC%8CB08C938CB58DB08CB58CB08CB58CFC93FFFFA8525227A8FD04FF7D52A8%7DFFA8FFA8FFA8FFAFFFAFFFCACBCACBCACAC4CAFD04C3BCC39AC39ABC9A%BD9ABD9AC3BC767DFFA8FFA8FFA8FFAFFFFFFFCAFFCACBCAFFCACAFD04C3%9AC39ABD9AC39ABD9AC39ABD9A52A8FFA8FFA8FFA8FFAFFFAFFFFFFFAFFF%FD04CAC3C39BC3BDC39AC39AC39AC39ABD9AC39AA1FFFFA8527D7DFD07FF%A87DFD04FFA8FD05FFA8FFFFFFAFFFAFFFAFFFFFFFAFFD05FFAFFD05FFAF%FF7DA8FD04FFA8FD05FFA8FD05FFAFFD0BFFAFFFFFFFAFFFFFFF52FD05FF%A8FD05FFA8FD07FFAFFFFFFFAFFFFFFFAFFD09FFA8FFFFA87D7DA8A8FD07%FF27FD187DA87DA8FD057DA87D7D7D5252FD187DA87DA87D7D7DA87D7D7D%A87D2752FD187DA87D7D7DA87DA87DA87D7D52A8FFFFA87D7D7DFD07FFA8%7DFD17FFA87DA87DFFFF7D7DFD04A8FF7DA8FD17FFA87DA87DFF7D7D7DA8%7DA8FFFF52FD18FF7D7DA87DFFA8A87DA87DA8A8FFA8FFFF7D5227A8FD08%FF52FD17FF5252527D7D7D27527D522752A87DA8FD17FF5252527D7DA827%7D5227277DA87DFD18FF7D52527D7D5227525252277DA8A8FFA852527D7D%FFFFA8FFFFA87D7D7DA8FD16FFA8527D52A87D52527DA8A8277D7DA8FD17%FF7D527D52A87DA87D7DA87D27A852FD18FF7DA87D7DA85252527DA87D27%A8A8FFFF525227A8FFFF27A8FFA87D527DFD17FFFD04A8FFFFA8FFA8FFA8%FFFF7DA8FD17FFA8FFA8A8FD04FFA8FFA8FFA87DFD18FFA8FFA8FFFFFFA8%FFA8FFA8FFA8A8FD08FF7DA8FFCBA8A87DCAFD23FF7DA8FD24FF52FD25FF%A8FD08FF52A8A87D52A852B5BCFD22FF7D7DFD23FFA87DFD24FFA8A8FD0D%FFA87DC3CAFD22FF7DA8CAFD23FF52FD25FFA8FD0EFF52FD24FF7D76B0CA%FD21FFA852A8FD23FFA8A8FD0DFFA858A8FD23FF7D58C3FD23FF2D9AB6FD%23FFA8FD0EFF52AF93B6FD21FF7D7DFFCAFD21FFA852A0C3FD22FFA8A8FD%07FFA87DA8FFA8A87D7D83A0C3FD21FF7D837CFCC3FD21FF528483CAFD22%FFA8FD07FF7D527DFF7D277793A7AFFD22FF7D7DA8A1FD21FFA876A89A8C%FD21FFA8A8FD07FF52A87DFF527D52B0C3AFA8FD21FF9AB5FFAEAEFD21FF%8CBDA8A7FD22FFA8FD07FFA8277DA8A8527D52FF839AB5FD20FFA194FF7D%9ACAFD1FFFA870CAAE7CB5CAFD1FFFA8A8FD0DFFA87DFFFFA19AFD20FF7D%AFFFFFFCC3FD20FF52FFFFCA93FD21FFA8FD0EFF52FFFFA87DFD20FF7D7D%FFA8837DFD1FFFA852A8FFA8839ACBFD1EFFA8A8FD0DFFA87DFFFFFFC3FC%FD1FFF7DA8FFFFAEB09AFD1FFF52FFFFFFA88CA1FD1FFFA8FD0EFF52FFFF%FFA89A9AAFFD1DFF7DA8FFFFFF7C939AFD1DFFA852FD04FF7D93BCFD1DFF%A8A8FD0DFFA87DA8FFFFFFA8FC6EA1A7FFAFFD19FF7DA8FD04FFA18C8DA7%A8FD1BFF52FD05FF938C93C3C3FD1BFFA8FD0BFFA8527D52FD05FFCAB58C%8C6876767675A17DA17DA8A8CFAEFFAFFFAFFFFFFFAFFFFFFFAFFFFF7D7D%FD05FFA8B58C8C8C93759A76A0A1A7A1A8A8FFAFFFAFFFFFFFAFFD07FFA8%52FD06FFA1938C8C8CB69AA09A9A9AA1A1A8A8FFAEFFFFFFAFFD07FFAFFF%AFA8FD0BFF76A8527DFD04FFA8FFFFCA9AB68CB08CB0FD078C93939A93BC%94BC9ABC9ABC9ABC9ABC6FA2FFFFA8FFFFFFA8CAA1BC8DB08C8DFD058CB0%8D93939A93BC93BC9ABC9ABD9ABC9A9A52FD05FFCBFFFFCAA1BC938D8CFC%8C8C8CFC8C8D8C9393BC9ABC9ABC9ABCBCBC9ABC9ABC9AFD0BFF7D525252%FD05A87DFD05A8A1A87DA1A1A19BC39ABD93BC8DB593B58CB58CB08CB58C%938D4B51A8A8A87DA8A8A884AFA8A87DA8A1A2A1A1A1C39ABC94B58DB693%938CB58D938CB58C8D8D4B7DA87DA8A8A87DA8A8A884A87DA87DA87DA1A1%C39BBC93BC93938DB58C938C938C938D938C93FD0CFF7D7DA8FD24FF7DFD%25FF52FD25FFA8FD0EFF27A87DA87D7D7DA8FD057DA87DA87DA87DA87D7D%7DA87D7D7DA87D847DA87DA87DA8A85252A87DA87D7D7DA87D7D7DA87DA8%7DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA87D277DA87DA87DA8%7DA8FD057DA87DA87DA87DA87DA87D847DA87DA87DA87DA87DA87D7D7DA8%FD0DFF52527DFFA8FD04FFA82752A8FF277DFD05FF7D27A8FF5227A8FD04%FFA8FD04FFA82752A8FFFFFFA8FFFF7D277DFFFF27FFFFFFA8FFA85227FF%7D5252FFFFFFA8FFFFFFA8FFFF7D277DFFFFA8FFFFFFA85227A8FF7D27FF%A8FFFFFF7D5252FF52527DFFA8FFFFFF7D52FFA85252A8FD0CFFA8527D7D%FD06FF7DA852FF7D277DFD05FF52A852FF5252A8FD09FF7DA852A8FD06FF%52A852FF5227A8FD04FFA87D7DA8A82752FD0AFF52A852FD06FFA852A87D%FF2752FD05FF7D7D7DFF7D27A8FD05FFA852FFFFA852FD0EFF527D7DFD06%FFA8527DA8A8277DFD05FF52527DA85252A8FD09FFA8527DFD07FF7D527D%FF7D27A8FD04FFA87D52A87D5252FD0AFF7D527DFD06FFA85252A8A85227%FD05FF7D5252FF525252FD05FFA852FFFF52A8FD0EFFA852FD08FF7D7DA8%FFA8A8FD05FFA87DA8A87D7DA8FD0AFF7D7DFD07FFA87DA8A8FFA8A8FD05%FF7D7DA8A852A8FD0AFFA87DA8FD07FF7D7DA8FFFFA8FD06FF52A8A8A852%A8FD06FF7DA87D7D7DFD44FFA8FFA87DA8FFFFFFA8FFA8FFFFFFA8FD68FF%A87D7DFD06FF7D527D7D7DA8FD0A7DFD67FF7D7D7DA8FFFFFFA8FF527D7D%FF5252277D7D52A87D527D7D7DFD67FF7D52277D527D5252FF7D7DFD0452%277D7D52A87D52527D7DFD68FFA87D527D525252FFA8A8FD04FFA8FD07FF%7DFD6BFFA8A8FFA8FDFCFFFD42FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-01-20T14:35:18-05:00</xmp:CreateDate>
         <xmp:MetadataDate>2010-01-20T14:35:18-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-01-20T14:35:18-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qtlRnjdFcxswIEi05&#xA;KSPtDkGWo9xirypPMGsWX5Sa2y6tLca+lzrUNndXEga7dLW/mRpEVFFTDCOVI0ooGwApilV/Ljzh&#xA;dW0DaOfrnmd572+OnapaSCa3e0tEtS8izX100npiW74Cs0nxBqGlAFCfeYPzS0/QLtLXU9G1WORo&#xA;vrDvFDDPHFDzEfqTSRTOsa8jSrEYqtP5ueVEi9WaRLYCGO5dbi90uF0hlp6bukl4rKrV2JGKphpv&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:32255C8C22206811B005DCFDD4A218DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:32255C8C22206811B005DCFDD4A218DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:32255C8C22206811B005DCFDD4A218DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:32255C8C22206811B005DCFDD4A218DC</stEvt:instanceID>
                  <stEvt:when>2010-01-20T14:35:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -349.236 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 349.236 li
513.107 349.236 li
513.107 0 li
cp
clp
[1 0 0 1 0 0 ]ct
56.5898 108.713 mo
57.5898 107.713 li
57.5898 11.9634 li
206.59 11.9634 li
207.59 10.9634 li
56.5898 10.9634 li
56.5898 108.713 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
56.5898 108.713 mo
207.59 108.713 li
56.5898 108.713 mo
56.5898 10.9634 li
207.59 10.9634 li
207.59 108.713 li
56.5898 108.713 li
cp
0 0 0 1 cmyk
@
201.59 107.213 mo
201.59 108.713 li
195.84 105.963 mo
195.84 108.713 li
195.84 105.963 mo
195.84 108.713 li
190.09 107.213 mo
190.09 108.713 li
184.34 107.213 mo
184.34 108.713 li
178.34 107.213 mo
178.34 108.713 li
172.59 105.963 mo
172.59 108.713 li
166.84 107.213 mo
166.84 108.713 li
161.09 107.213 mo
161.09 108.713 li
155.34 107.213 mo
155.34 108.713 li
149.34 105.963 mo
149.34 108.713 li
143.59 107.213 mo
143.59 108.713 li
137.84 107.213 mo
137.84 108.713 li
132.09 107.213 mo
132.09 108.713 li
126.09 105.963 mo
126.09 108.713 li
120.34 107.213 mo
120.34 108.713 li
114.59 107.213 mo
114.59 108.713 li
108.84 107.213 mo
108.84 108.713 li
102.84 105.963 mo
102.84 108.713 li
97.0898 107.213 mo
97.0898 108.713 li
91.3398 107.213 mo
91.3398 108.713 li
85.5898 107.213 mo
85.5898 108.713 li
79.5898 105.963 mo
79.5898 108.713 li
73.8398 107.213 mo
73.8398 108.713 li
68.0898 107.213 mo
68.0898 108.713 li
62.3398 107.213 mo
62.3398 108.713 li
56.5898 105.963 mo
56.5898 108.713 li
@
56.5898 108.713 mo
56.5898 10.9634 li
@
61.0898 10.9634 mo
56.5898 10.9634 li
61.0898 108.713 mo
56.5898 108.713 li
61.0898 10.9634 mo
56.5898 10.9634 li
58.8398 13.7134 mo
56.5898 13.7134 li
58.8398 16.4634 mo
56.5898 16.4634 li
58.8398 19.2134 mo
56.5898 19.2134 li
61.0898 21.9634 mo
56.5898 21.9634 li
58.8398 24.4634 mo
56.5898 24.4634 li
58.8398 27.2134 mo
56.5898 27.2134 li
58.8398 29.9634 mo
56.5898 29.9634 li
61.0898 32.7134 mo
56.5898 32.7134 li
58.8398 35.4634 mo
56.5898 35.4634 li
58.8398 38.2134 mo
56.5898 38.2134 li
58.8398 40.9634 mo
56.5898 40.9634 li
61.0898 43.4634 mo
56.5898 43.4634 li
58.8398 46.2134 mo
56.5898 46.2134 li
58.8398 48.9634 mo
56.5898 48.9634 li
58.8398 51.7134 mo
56.5898 51.7134 li
61.0898 54.4634 mo
56.5898 54.4634 li
58.8398 57.2134 mo
56.5898 57.2134 li
58.8398 59.9634 mo
56.5898 59.9634 li
58.8398 62.7134 mo
56.5898 62.7134 li
61.0898 65.2134 mo
56.5898 65.2134 li
58.8398 67.9634 mo
56.5898 67.9634 li
58.8398 70.7134 mo
56.5898 70.7134 li
58.8398 73.4634 mo
56.5898 73.4634 li
61.0898 76.2134 mo
56.5898 76.2134 li
58.8398 78.9634 mo
56.5898 78.9634 li
58.8398 81.7134 mo
56.5898 81.7134 li
58.8398 84.2134 mo
56.5898 84.2134 li
61.0898 86.9634 mo
56.5898 86.9634 li
58.8398 89.7134 mo
56.5898 89.7134 li
58.8398 92.4634 mo
56.5898 92.4634 li
58.8398 95.2134 mo
56.5898 95.2134 li
61.0898 97.9634 mo
56.5898 97.9634 li
58.8398 100.713 mo
56.5898 100.713 li
58.8398 103.463 mo
56.5898 103.463 li
58.8398 105.963 mo
56.5898 105.963 li
61.0898 108.713 mo
56.5898 108.713 li
@
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LSNQKM+Helvetica /Helvetica findfont ct_VMDictPut/LSNQKM+Helvetica*1 [48{/.notdef}rp /zero 207{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf45.332 102.713 mo(0)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 46 /period putdup 54 /six putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six 201{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf29.582 69.9556 mo(0.6)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 49 /one putdup 50 /two putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two 3{/.notdef}rp /six 201{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf29.582 37.7056 mo(1.2)shLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf29.582 15.4556 mo(1.6)sh210.51 98.0732 mo
210.51 96.4175 209.166 95.0732 207.51 95.0732 cv
205.854 95.0732 204.51 96.4175 204.51 98.0732 cv
204.51 99.7295 205.854 101.073 207.51 101.073 cv
209.166 101.073 210.51 99.7295 210.51 98.0732 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
205.95 98.0732 mo
205.95 96.4175 204.606 95.0732 202.95 95.0732 cv
201.294 95.0732 199.95 96.4175 199.95 98.0732 cv
199.95 99.7295 201.294 101.073 202.95 101.073 cv
204.606 101.073 205.95 99.7295 205.95 98.0732 cv
ef
201.15 98.0732 mo
201.15 96.4175 199.806 95.0732 198.15 95.0732 cv
196.494 95.0732 195.15 96.4175 195.15 98.0732 cv
195.15 99.7295 196.494 101.073 198.15 101.073 cv
199.806 101.073 201.15 99.7295 201.15 98.0732 cv
ef
196.59 98.0732 mo
196.59 96.4175 195.246 95.0732 193.59 95.0732 cv
191.934 95.0732 190.59 96.4175 190.59 98.0732 cv
190.59 99.7295 191.934 101.073 193.59 101.073 cv
195.246 101.073 196.59 99.7295 196.59 98.0732 cv
ef
191.79 98.0732 mo
191.79 96.4175 190.446 95.0732 188.79 95.0732 cv
187.134 95.0732 185.79 96.4175 185.79 98.0732 cv
185.79 99.7295 187.134 101.073 188.79 101.073 cv
190.446 101.073 191.79 99.7295 191.79 98.0732 cv
ef
187.23 98.0732 mo
187.23 96.4175 185.886 95.0732 184.23 95.0732 cv
182.574 95.0732 181.23 96.4175 181.23 98.0732 cv
181.23 99.7295 182.574 101.073 184.23 101.073 cv
185.886 101.073 187.23 99.7295 187.23 98.0732 cv
ef
182.67 98.0732 mo
182.67 96.4175 181.326 95.0732 179.67 95.0732 cv
178.014 95.0732 176.67 96.4175 176.67 98.0732 cv
176.67 99.7295 178.014 101.073 179.67 101.073 cv
181.326 101.073 182.67 99.7295 182.67 98.0732 cv
ef
178.11 98.0732 mo
178.11 96.4175 176.766 95.0732 175.11 95.0732 cv
173.454 95.0732 172.11 96.4175 172.11 98.0732 cv
172.11 99.7295 173.454 101.073 175.11 101.073 cv
176.766 101.073 178.11 99.7295 178.11 98.0732 cv
ef
173.31 98.0732 mo
173.31 96.4175 171.966 95.0732 170.31 95.0732 cv
168.654 95.0732 167.31 96.4175 167.31 98.0732 cv
167.31 99.7295 168.654 101.073 170.31 101.073 cv
171.966 101.073 173.31 99.7295 173.31 98.0732 cv
ef
168.51 98.0732 mo
168.51 96.4175 167.166 95.0732 165.51 95.0732 cv
163.854 95.0732 162.51 96.4175 162.51 98.0732 cv
162.51 99.7295 163.854 101.073 165.51 101.073 cv
167.166 101.073 168.51 99.7295 168.51 98.0732 cv
ef
164.19 97.7134 mo
164.19 96.0571 162.846 94.7134 161.19 94.7134 cv
159.534 94.7134 158.19 96.0571 158.19 97.7134 cv
158.19 99.3691 159.534 100.713 161.19 100.713 cv
162.846 100.713 164.19 99.3691 164.19 97.7134 cv
ef
159.39 97.7134 mo
159.39 96.0571 158.046 94.7134 156.39 94.7134 cv
154.734 94.7134 153.39 96.0571 153.39 97.7134 cv
153.39 99.3691 154.734 100.713 156.39 100.713 cv
158.046 100.713 159.39 99.3691 159.39 97.7134 cv
ef
154.83 97.7134 mo
154.83 96.0571 153.486 94.7134 151.83 94.7134 cv
150.174 94.7134 148.83 96.0571 148.83 97.7134 cv
148.83 99.3691 150.174 100.713 151.83 100.713 cv
153.486 100.713 154.83 99.3691 154.83 97.7134 cv
ef
150.03 97.7134 mo
150.03 96.0571 148.686 94.7134 147.03 94.7134 cv
145.374 94.7134 144.03 96.0571 144.03 97.7134 cv
144.03 99.3691 145.374 100.713 147.03 100.713 cv
148.686 100.713 150.03 99.3691 150.03 97.7134 cv
ef
145.23 97.7134 mo
145.23 96.0571 143.886 94.7134 142.23 94.7134 cv
140.574 94.7134 139.23 96.0571 139.23 97.7134 cv
139.23 99.3691 140.574 100.713 142.23 100.713 cv
143.886 100.713 145.23 99.3691 145.23 97.7134 cv
ef
140.91 97.3535 mo
140.91 95.6973 139.566 94.3535 137.91 94.3535 cv
136.254 94.3535 134.91 95.6973 134.91 97.3535 cv
134.91 99.0093 136.254 100.354 137.91 100.354 cv
139.566 100.354 140.91 99.0093 140.91 97.3535 cv
ef
136.11 97.1133 mo
136.11 95.4575 134.766 94.1133 133.11 94.1133 cv
131.454 94.1133 130.11 95.4575 130.11 97.1133 cv
130.11 98.7695 131.454 100.113 133.11 100.113 cv
134.766 100.113 136.11 98.7695 136.11 97.1133 cv
ef
131.55 97.1133 mo
131.55 95.4575 130.206 94.1133 128.55 94.1133 cv
126.894 94.1133 125.55 95.4575 125.55 97.1133 cv
125.55 98.7695 126.894 100.113 128.55 100.113 cv
130.206 100.113 131.55 98.7695 131.55 97.1133 cv
ef
126.75 97.3535 mo
126.75 95.6973 125.406 94.3535 123.75 94.3535 cv
122.094 94.3535 120.75 95.6973 120.75 97.3535 cv
120.75 99.0093 122.094 100.354 123.75 100.354 cv
125.406 100.354 126.75 99.0093 126.75 97.3535 cv
ef
122.19 97.1133 mo
122.19 95.4575 120.846 94.1133 119.19 94.1133 cv
117.534 94.1133 116.19 95.4575 116.19 97.1133 cv
116.19 98.7695 117.534 100.113 119.19 100.113 cv
120.846 100.113 122.19 98.7695 122.19 97.1133 cv
ef
117.63 96.6333 mo
117.63 94.9775 116.286 93.6333 114.63 93.6333 cv
112.974 93.6333 111.63 94.9775 111.63 96.6333 cv
111.63 98.2896 112.974 99.6333 114.63 99.6333 cv
116.286 99.6333 117.63 98.2896 117.63 96.6333 cv
ef
112.83 96.6333 mo
112.83 94.9775 111.486 93.6333 109.83 93.6333 cv
108.174 93.6333 106.83 94.9775 106.83 96.6333 cv
106.83 98.2896 108.174 99.6333 109.83 99.6333 cv
111.486 99.6333 112.83 98.2896 112.83 96.6333 cv
ef
108.27 96.3936 mo
108.27 94.7373 106.926 93.3936 105.27 93.3936 cv
103.614 93.3936 102.27 94.7373 102.27 96.3936 cv
102.27 98.0493 103.614 99.3936 105.27 99.3936 cv
106.926 99.3936 108.27 98.0493 108.27 96.3936 cv
ef
103.59 95.9136 mo
103.59 94.2573 102.246 92.9136 100.59 92.9136 cv
98.9336 92.9136 97.5898 94.2573 97.5898 95.9136 cv
97.5898 97.5693 98.9336 98.9136 100.59 98.9136 cv
102.246 98.9136 103.59 97.5693 103.59 95.9136 cv
ef
99.1499 95.9136 mo
99.1499 94.2573 97.8057 92.9136 96.1499 92.9136 cv
94.4937 92.9136 93.1499 94.2573 93.1499 95.9136 cv
93.1499 97.5693 94.4937 98.9136 96.1499 98.9136 cv
97.8057 98.9136 99.1499 97.5693 99.1499 95.9136 cv
ef
94.3496 94.9536 mo
94.3496 93.2974 93.0059 91.9536 91.3496 91.9536 cv
89.6938 91.9536 88.3496 93.2974 88.3496 94.9536 cv
88.3496 96.6094 89.6938 97.9536 91.3496 97.9536 cv
93.0059 97.9536 94.3496 96.6094 94.3496 94.9536 cv
ef
89.5498 93.5132 mo
89.5498 91.8574 88.2061 90.5132 86.5498 90.5132 cv
84.894 90.5132 83.5498 91.8574 83.5498 93.5132 cv
83.5498 95.1694 84.894 96.5132 86.5498 96.5132 cv
88.2061 96.5132 89.5498 95.1694 89.5498 93.5132 cv
ef
84.9897 91.1133 mo
84.9897 89.4575 83.646 88.1133 81.9897 88.1133 cv
80.334 88.1133 78.9897 89.4575 78.9897 91.1133 cv
78.9897 92.7695 80.334 94.1133 81.9897 94.1133 cv
83.646 94.1133 84.9897 92.7695 84.9897 91.1133 cv
ef
80.4297 85.3535 mo
80.4297 83.6973 79.0859 82.3535 77.4297 82.3535 cv
75.7739 82.3535 74.4297 83.6973 74.4297 85.3535 cv
74.4297 87.0093 75.7739 88.3535 77.4297 88.3535 cv
79.0859 88.3535 80.4297 87.0093 80.4297 85.3535 cv
ef
75.8696 75.9932 mo
75.8696 74.3374 74.5259 72.9932 72.8696 72.9932 cv
71.2139 72.9932 69.8696 74.3374 69.8696 75.9932 cv
69.8696 77.6494 71.2139 78.9932 72.8696 78.9932 cv
74.5259 78.9932 75.8696 77.6494 75.8696 75.9932 cv
ef
71.0698 53.4331 mo
71.0698 51.7773 69.7256 50.4331 68.0698 50.4331 cv
66.4141 50.4331 65.0698 51.7773 65.0698 53.4331 cv
65.0698 55.0894 66.4141 56.4331 68.0698 56.4331 cv
69.7256 56.4331 71.0698 55.0894 71.0698 53.4331 cv
ef
66.27 23.1934 mo
66.27 21.5376 64.9258 20.1934 63.27 20.1934 cv
61.6138 20.1934 60.27 21.5376 60.27 23.1934 cv
60.27 24.8491 61.6138 26.1934 63.27 26.1934 cv
64.9258 26.1934 66.27 24.8491 66.27 23.1934 cv
ef
61.9497 46.2334 mo
61.9497 44.5776 60.606 43.2334 58.9497 43.2334 cv
57.2939 43.2334 55.9497 44.5776 55.9497 46.2334 cv
55.9497 47.8892 57.2939 49.2334 58.9497 49.2334 cv
60.606 49.2334 61.9497 47.8892 61.9497 46.2334 cv
ef
56.5898 97.9634 mo
149.34 97.9634 li
0 0 0 1 cmyk
@
61.9497 52.9536 mo
61.9497 51.2974 60.606 49.9536 58.9497 49.9536 cv
57.2939 49.9536 55.9497 51.2974 55.9497 52.9536 cv
55.9497 54.6094 57.2939 55.9536 58.9497 55.9536 cv
60.606 55.9536 61.9497 54.6094 61.9497 52.9536 cv
66.27 60.3931 mo
66.27 58.7373 64.9258 57.3931 63.27 57.3931 cv
61.6138 57.3931 60.27 58.7373 60.27 60.3931 cv
60.27 62.0493 61.6138 63.3931 63.27 63.3931 cv
64.9258 63.3931 66.27 62.0493 66.27 60.3931 cv
71.0698 68.3135 mo
71.0698 66.6572 69.7256 65.3135 68.0698 65.3135 cv
66.4141 65.3135 65.0698 66.6572 65.0698 68.3135 cv
65.0698 69.9692 66.4141 71.3135 68.0698 71.3135 cv
69.7256 71.3135 71.0698 69.9692 71.0698 68.3135 cv
75.8696 76.7134 mo
75.8696 75.0571 74.5259 73.7134 72.8696 73.7134 cv
71.2139 73.7134 69.8696 75.0571 69.8696 76.7134 cv
69.8696 78.3691 71.2139 79.7134 72.8696 79.7134 cv
74.5259 79.7134 75.8696 78.3691 75.8696 76.7134 cv
80.4297 83.1934 mo
80.4297 81.5376 79.0859 80.1934 77.4297 80.1934 cv
75.7739 80.1934 74.4297 81.5376 74.4297 83.1934 cv
74.4297 84.8491 75.7739 86.1934 77.4297 86.1934 cv
79.0859 86.1934 80.4297 84.8491 80.4297 83.1934 cv
84.9897 86.3135 mo
84.9897 84.6572 83.646 83.3135 81.9897 83.3135 cv
80.334 83.3135 78.9897 84.6572 78.9897 86.3135 cv
78.9897 87.9692 80.334 89.3135 81.9897 89.3135 cv
83.646 89.3135 84.9897 87.9692 84.9897 86.3135 cv
89.5498 89.4331 mo
89.5498 87.7773 88.2061 86.4331 86.5498 86.4331 cv
84.894 86.4331 83.5498 87.7773 83.5498 89.4331 cv
83.5498 91.0894 84.894 92.4331 86.5498 92.4331 cv
88.2061 92.4331 89.5498 91.0894 89.5498 89.4331 cv
94.3496 90.8735 mo
94.3496 89.2173 93.0059 87.8735 91.3496 87.8735 cv
89.6938 87.8735 88.3496 89.2173 88.3496 90.8735 cv
88.3496 92.5293 89.6938 93.8735 91.3496 93.8735 cv
93.0059 93.8735 94.3496 92.5293 94.3496 90.8735 cv
99.1499 92.0732 mo
99.1499 90.4175 97.8057 89.0732 96.1499 89.0732 cv
94.4937 89.0732 93.1499 90.4175 93.1499 92.0732 cv
93.1499 93.7295 94.4937 95.0732 96.1499 95.0732 cv
97.8057 95.0732 99.1499 93.7295 99.1499 92.0732 cv
103.59 93.2734 mo
103.59 91.6172 102.246 90.2734 100.59 90.2734 cv
98.9336 90.2734 97.5898 91.6172 97.5898 93.2734 cv
97.5898 94.9292 98.9336 96.2734 100.59 96.2734 cv
102.246 96.2734 103.59 94.9292 103.59 93.2734 cv
108.27 93.2734 mo
108.27 91.6172 106.926 90.2734 105.27 90.2734 cv
103.614 90.2734 102.27 91.6172 102.27 93.2734 cv
102.27 94.9292 103.614 96.2734 105.27 96.2734 cv
106.926 96.2734 108.27 94.9292 108.27 93.2734 cv
112.83 93.7534 mo
112.83 92.0972 111.486 90.7534 109.83 90.7534 cv
108.174 90.7534 106.83 92.0972 106.83 93.7534 cv
106.83 95.4092 108.174 96.7534 109.83 96.7534 cv
111.486 96.7534 112.83 95.4092 112.83 93.7534 cv
117.63 94.4731 mo
117.63 92.8174 116.286 91.4731 114.63 91.4731 cv
112.974 91.4731 111.63 92.8174 111.63 94.4731 cv
111.63 96.1294 112.974 97.4731 114.63 97.4731 cv
116.286 97.4731 117.63 96.1294 117.63 94.4731 cv
122.19 94.2334 mo
122.19 92.5771 120.846 91.2334 119.19 91.2334 cv
117.534 91.2334 116.19 92.5771 116.19 94.2334 cv
116.19 95.8892 117.534 97.2334 119.19 97.2334 cv
120.846 97.2334 122.19 95.8892 122.19 94.2334 cv
126.75 94.4731 mo
126.75 92.8174 125.406 91.4731 123.75 91.4731 cv
122.094 91.4731 120.75 92.8174 120.75 94.4731 cv
120.75 96.1294 122.094 97.4731 123.75 97.4731 cv
125.406 97.4731 126.75 96.1294 126.75 94.4731 cv
131.55 94.4731 mo
131.55 92.8174 130.206 91.4731 128.55 91.4731 cv
126.894 91.4731 125.55 92.8174 125.55 94.4731 cv
125.55 96.1294 126.894 97.4731 128.55 97.4731 cv
130.206 97.4731 131.55 96.1294 131.55 94.4731 cv
136.11 94.9536 mo
136.11 93.2974 134.766 91.9536 133.11 91.9536 cv
131.454 91.9536 130.11 93.2974 130.11 94.9536 cv
130.11 96.6094 131.454 97.9536 133.11 97.9536 cv
134.766 97.9536 136.11 96.6094 136.11 94.9536 cv
140.91 95.6733 mo
140.91 94.0171 139.566 92.6733 137.91 92.6733 cv
136.254 92.6733 134.91 94.0171 134.91 95.6733 cv
134.91 97.3296 136.254 98.6733 137.91 98.6733 cv
139.566 98.6733 140.91 97.3296 140.91 95.6733 cv
145.23 95.9136 mo
145.23 94.2573 143.886 92.9136 142.23 92.9136 cv
140.574 92.9136 139.23 94.2573 139.23 95.9136 cv
139.23 97.5693 140.574 98.9136 142.23 98.9136 cv
143.886 98.9136 145.23 97.5693 145.23 95.9136 cv
150.03 96.3936 mo
150.03 94.7373 148.686 93.3936 147.03 93.3936 cv
145.374 93.3936 144.03 94.7373 144.03 96.3936 cv
144.03 98.0493 145.374 99.3936 147.03 99.3936 cv
148.686 99.3936 150.03 98.0493 150.03 96.3936 cv
154.83 96.8735 mo
154.83 95.2173 153.486 93.8735 151.83 93.8735 cv
150.174 93.8735 148.83 95.2173 148.83 96.8735 cv
148.83 98.5293 150.174 99.8735 151.83 99.8735 cv
153.486 99.8735 154.83 98.5293 154.83 96.8735 cv
159.39 96.8735 mo
159.39 95.2173 158.046 93.8735 156.39 93.8735 cv
154.734 93.8735 153.39 95.2173 153.39 96.8735 cv
153.39 98.5293 154.734 99.8735 156.39 99.8735 cv
158.046 99.8735 159.39 98.5293 159.39 96.8735 cv
164.19 97.3535 mo
164.19 95.6973 162.846 94.3535 161.19 94.3535 cv
159.534 94.3535 158.19 95.6973 158.19 97.3535 cv
158.19 99.0093 159.534 100.354 161.19 100.354 cv
162.846 100.354 164.19 99.0093 164.19 97.3535 cv
168.51 97.7134 mo
168.51 96.0571 167.166 94.7134 165.51 94.7134 cv
163.854 94.7134 162.51 96.0571 162.51 97.7134 cv
162.51 99.3691 163.854 100.713 165.51 100.713 cv
167.166 100.713 168.51 99.3691 168.51 97.7134 cv
173.31 97.7134 mo
173.31 96.0571 171.966 94.7134 170.31 94.7134 cv
168.654 94.7134 167.31 96.0571 167.31 97.7134 cv
167.31 99.3691 168.654 100.713 170.31 100.713 cv
171.966 100.713 173.31 99.3691 173.31 97.7134 cv
178.11 97.7134 mo
178.11 96.0571 176.766 94.7134 175.11 94.7134 cv
173.454 94.7134 172.11 96.0571 172.11 97.7134 cv
172.11 99.3691 173.454 100.713 175.11 100.713 cv
176.766 100.713 178.11 99.3691 178.11 97.7134 cv
182.67 98.0732 mo
182.67 96.4175 181.326 95.0732 179.67 95.0732 cv
178.014 95.0732 176.67 96.4175 176.67 98.0732 cv
176.67 99.7295 178.014 101.073 179.67 101.073 cv
181.326 101.073 182.67 99.7295 182.67 98.0732 cv
187.23 98.0732 mo
187.23 96.4175 185.886 95.0732 184.23 95.0732 cv
182.574 95.0732 181.23 96.4175 181.23 98.0732 cv
181.23 99.7295 182.574 101.073 184.23 101.073 cv
185.886 101.073 187.23 99.7295 187.23 98.0732 cv
191.79 98.0732 mo
191.79 96.4175 190.446 95.0732 188.79 95.0732 cv
187.134 95.0732 185.79 96.4175 185.79 98.0732 cv
185.79 99.7295 187.134 101.073 188.79 101.073 cv
190.446 101.073 191.79 99.7295 191.79 98.0732 cv
196.59 98.0732 mo
196.59 96.4175 195.246 95.0732 193.59 95.0732 cv
191.934 95.0732 190.59 96.4175 190.59 98.0732 cv
190.59 99.7295 191.934 101.073 193.59 101.073 cv
195.246 101.073 196.59 99.7295 196.59 98.0732 cv
201.15 98.0732 mo
201.15 96.4175 199.806 95.0732 198.15 95.0732 cv
196.494 95.0732 195.15 96.4175 195.15 98.0732 cv
195.15 99.7295 196.494 101.073 198.15 101.073 cv
199.806 101.073 201.15 99.7295 201.15 98.0732 cv
205.95 98.0732 mo
205.95 96.4175 204.606 95.0732 202.95 95.0732 cv
201.294 95.0732 199.95 96.4175 199.95 98.0732 cv
199.95 99.7295 201.294 101.073 202.95 101.073 cv
204.606 101.073 205.95 99.7295 205.95 98.0732 cv
210.51 98.0732 mo
210.51 96.4175 209.166 95.0732 207.51 95.0732 cv
205.854 95.0732 204.51 96.4175 204.51 98.0732 cv
204.51 99.7295 205.854 101.073 207.51 101.073 cv
209.166 101.073 210.51 99.7295 210.51 98.0732 cv
.878019 .337896 1 .281529 cmyk
@
210.51 98.0732 mo
210.51 96.4175 209.166 95.0732 207.51 95.0732 cv
205.854 95.0732 204.51 96.4175 204.51 98.0732 cv
204.51 99.7295 205.854 101.073 207.51 101.073 cv
209.166 101.073 210.51 99.7295 210.51 98.0732 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
205.95 98.0732 mo
205.95 96.4175 204.606 95.0732 202.95 95.0732 cv
201.294 95.0732 199.95 96.4175 199.95 98.0732 cv
199.95 99.7295 201.294 101.073 202.95 101.073 cv
204.606 101.073 205.95 99.7295 205.95 98.0732 cv
ef
201.15 98.0732 mo
201.15 96.4175 199.806 95.0732 198.15 95.0732 cv
196.494 95.0732 195.15 96.4175 195.15 98.0732 cv
195.15 99.7295 196.494 101.073 198.15 101.073 cv
199.806 101.073 201.15 99.7295 201.15 98.0732 cv
ef
196.59 98.0732 mo
196.59 96.4175 195.246 95.0732 193.59 95.0732 cv
191.934 95.0732 190.59 96.4175 190.59 98.0732 cv
190.59 99.7295 191.934 101.073 193.59 101.073 cv
195.246 101.073 196.59 99.7295 196.59 98.0732 cv
ef
191.79 98.0732 mo
191.79 96.4175 190.446 95.0732 188.79 95.0732 cv
187.134 95.0732 185.79 96.4175 185.79 98.0732 cv
185.79 99.7295 187.134 101.073 188.79 101.073 cv
190.446 101.073 191.79 99.7295 191.79 98.0732 cv
ef
187.23 98.0732 mo
187.23 96.4175 185.886 95.0732 184.23 95.0732 cv
182.574 95.0732 181.23 96.4175 181.23 98.0732 cv
181.23 99.7295 182.574 101.073 184.23 101.073 cv
185.886 101.073 187.23 99.7295 187.23 98.0732 cv
ef
182.67 98.0732 mo
182.67 96.4175 181.326 95.0732 179.67 95.0732 cv
178.014 95.0732 176.67 96.4175 176.67 98.0732 cv
176.67 99.7295 178.014 101.073 179.67 101.073 cv
181.326 101.073 182.67 99.7295 182.67 98.0732 cv
ef
178.11 98.0732 mo
178.11 96.4175 176.766 95.0732 175.11 95.0732 cv
173.454 95.0732 172.11 96.4175 172.11 98.0732 cv
172.11 99.7295 173.454 101.073 175.11 101.073 cv
176.766 101.073 178.11 99.7295 178.11 98.0732 cv
ef
173.31 98.0732 mo
173.31 96.4175 171.966 95.0732 170.31 95.0732 cv
168.654 95.0732 167.31 96.4175 167.31 98.0732 cv
167.31 99.7295 168.654 101.073 170.31 101.073 cv
171.966 101.073 173.31 99.7295 173.31 98.0732 cv
ef
168.51 98.0732 mo
168.51 96.4175 167.166 95.0732 165.51 95.0732 cv
163.854 95.0732 162.51 96.4175 162.51 98.0732 cv
162.51 99.7295 163.854 101.073 165.51 101.073 cv
167.166 101.073 168.51 99.7295 168.51 98.0732 cv
ef
164.19 97.7134 mo
164.19 96.0571 162.846 94.7134 161.19 94.7134 cv
159.534 94.7134 158.19 96.0571 158.19 97.7134 cv
158.19 99.3691 159.534 100.713 161.19 100.713 cv
162.846 100.713 164.19 99.3691 164.19 97.7134 cv
ef
159.39 97.7134 mo
159.39 96.0571 158.046 94.7134 156.39 94.7134 cv
154.734 94.7134 153.39 96.0571 153.39 97.7134 cv
153.39 99.3691 154.734 100.713 156.39 100.713 cv
158.046 100.713 159.39 99.3691 159.39 97.7134 cv
ef
154.83 97.7134 mo
154.83 96.0571 153.486 94.7134 151.83 94.7134 cv
150.174 94.7134 148.83 96.0571 148.83 97.7134 cv
148.83 99.3691 150.174 100.713 151.83 100.713 cv
153.486 100.713 154.83 99.3691 154.83 97.7134 cv
ef
150.03 97.7134 mo
150.03 96.0571 148.686 94.7134 147.03 94.7134 cv
145.374 94.7134 144.03 96.0571 144.03 97.7134 cv
144.03 99.3691 145.374 100.713 147.03 100.713 cv
148.686 100.713 150.03 99.3691 150.03 97.7134 cv
ef
145.23 97.7134 mo
145.23 96.0571 143.886 94.7134 142.23 94.7134 cv
140.574 94.7134 139.23 96.0571 139.23 97.7134 cv
139.23 99.3691 140.574 100.713 142.23 100.713 cv
143.886 100.713 145.23 99.3691 145.23 97.7134 cv
ef
140.91 97.3535 mo
140.91 95.6973 139.566 94.3535 137.91 94.3535 cv
136.254 94.3535 134.91 95.6973 134.91 97.3535 cv
134.91 99.0093 136.254 100.354 137.91 100.354 cv
139.566 100.354 140.91 99.0093 140.91 97.3535 cv
ef
136.11 97.1133 mo
136.11 95.4575 134.766 94.1133 133.11 94.1133 cv
131.454 94.1133 130.11 95.4575 130.11 97.1133 cv
130.11 98.7695 131.454 100.113 133.11 100.113 cv
134.766 100.113 136.11 98.7695 136.11 97.1133 cv
ef
131.55 97.1133 mo
131.55 95.4575 130.206 94.1133 128.55 94.1133 cv
126.894 94.1133 125.55 95.4575 125.55 97.1133 cv
125.55 98.7695 126.894 100.113 128.55 100.113 cv
130.206 100.113 131.55 98.7695 131.55 97.1133 cv
ef
126.75 97.3535 mo
126.75 95.6973 125.406 94.3535 123.75 94.3535 cv
122.094 94.3535 120.75 95.6973 120.75 97.3535 cv
120.75 99.0093 122.094 100.354 123.75 100.354 cv
125.406 100.354 126.75 99.0093 126.75 97.3535 cv
ef
122.19 97.1133 mo
122.19 95.4575 120.846 94.1133 119.19 94.1133 cv
117.534 94.1133 116.19 95.4575 116.19 97.1133 cv
116.19 98.7695 117.534 100.113 119.19 100.113 cv
120.846 100.113 122.19 98.7695 122.19 97.1133 cv
ef
117.63 96.6333 mo
117.63 94.9775 116.286 93.6333 114.63 93.6333 cv
112.974 93.6333 111.63 94.9775 111.63 96.6333 cv
111.63 98.2896 112.974 99.6333 114.63 99.6333 cv
116.286 99.6333 117.63 98.2896 117.63 96.6333 cv
ef
112.83 96.6333 mo
112.83 94.9775 111.486 93.6333 109.83 93.6333 cv
108.174 93.6333 106.83 94.9775 106.83 96.6333 cv
106.83 98.2896 108.174 99.6333 109.83 99.6333 cv
111.486 99.6333 112.83 98.2896 112.83 96.6333 cv
ef
108.27 96.3936 mo
108.27 94.7373 106.926 93.3936 105.27 93.3936 cv
103.614 93.3936 102.27 94.7373 102.27 96.3936 cv
102.27 98.0493 103.614 99.3936 105.27 99.3936 cv
106.926 99.3936 108.27 98.0493 108.27 96.3936 cv
ef
103.59 95.9136 mo
103.59 94.2573 102.246 92.9136 100.59 92.9136 cv
98.9336 92.9136 97.5898 94.2573 97.5898 95.9136 cv
97.5898 97.5693 98.9336 98.9136 100.59 98.9136 cv
102.246 98.9136 103.59 97.5693 103.59 95.9136 cv
ef
99.1499 95.9136 mo
99.1499 94.2573 97.8057 92.9136 96.1499 92.9136 cv
94.4937 92.9136 93.1499 94.2573 93.1499 95.9136 cv
93.1499 97.5693 94.4937 98.9136 96.1499 98.9136 cv
97.8057 98.9136 99.1499 97.5693 99.1499 95.9136 cv
ef
94.3496 94.9536 mo
94.3496 93.2974 93.0059 91.9536 91.3496 91.9536 cv
89.6938 91.9536 88.3496 93.2974 88.3496 94.9536 cv
88.3496 96.6094 89.6938 97.9536 91.3496 97.9536 cv
93.0059 97.9536 94.3496 96.6094 94.3496 94.9536 cv
ef
89.5498 93.5132 mo
89.5498 91.8574 88.2061 90.5132 86.5498 90.5132 cv
84.894 90.5132 83.5498 91.8574 83.5498 93.5132 cv
83.5498 95.1694 84.894 96.5132 86.5498 96.5132 cv
88.2061 96.5132 89.5498 95.1694 89.5498 93.5132 cv
ef
84.9897 91.1133 mo
84.9897 89.4575 83.646 88.1133 81.9897 88.1133 cv
80.334 88.1133 78.9897 89.4575 78.9897 91.1133 cv
78.9897 92.7695 80.334 94.1133 81.9897 94.1133 cv
83.646 94.1133 84.9897 92.7695 84.9897 91.1133 cv
ef
80.4297 85.3535 mo
80.4297 83.6973 79.0859 82.3535 77.4297 82.3535 cv
75.7739 82.3535 74.4297 83.6973 74.4297 85.3535 cv
74.4297 87.0093 75.7739 88.3535 77.4297 88.3535 cv
79.0859 88.3535 80.4297 87.0093 80.4297 85.3535 cv
ef
75.8696 75.9932 mo
75.8696 74.3374 74.5259 72.9932 72.8696 72.9932 cv
71.2139 72.9932 69.8696 74.3374 69.8696 75.9932 cv
69.8696 77.6494 71.2139 78.9932 72.8696 78.9932 cv
74.5259 78.9932 75.8696 77.6494 75.8696 75.9932 cv
ef
71.0698 53.4331 mo
71.0698 51.7773 69.7256 50.4331 68.0698 50.4331 cv
66.4141 50.4331 65.0698 51.7773 65.0698 53.4331 cv
65.0698 55.0894 66.4141 56.4331 68.0698 56.4331 cv
69.7256 56.4331 71.0698 55.0894 71.0698 53.4331 cv
ef
66.27 23.1934 mo
66.27 21.5376 64.9258 20.1934 63.27 20.1934 cv
61.6138 20.1934 60.27 21.5376 60.27 23.1934 cv
60.27 24.8491 61.6138 26.1934 63.27 26.1934 cv
64.9258 26.1934 66.27 24.8491 66.27 23.1934 cv
ef
61.9497 46.2334 mo
61.9497 44.5776 60.606 43.2334 58.9497 43.2334 cv
57.2939 43.2334 55.9497 44.5776 55.9497 46.2334 cv
55.9497 47.8892 57.2939 49.2334 58.9497 49.2334 cv
60.606 49.2334 61.9497 47.8892 61.9497 46.2334 cv
ef
207.02 108.713 mo
208.02 107.713 li
208.02 11.9634 li
357.02 11.9634 li
358.02 10.9634 li
207.02 10.9634 li
207.02 108.713 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
207.02 108.713 mo
358.02 108.713 li
207.02 108.713 mo
207.02 10.9634 li
358.02 10.9634 li
358.02 108.713 li
207.02 108.713 li
cp
0 0 0 1 cmyk
@
352.27 107.213 mo
352.27 108.713 li
346.27 105.963 mo
346.27 108.713 li
346.27 105.963 mo
346.27 108.713 li
340.52 107.213 mo
340.52 108.713 li
334.77 107.213 mo
334.77 108.713 li
329.02 107.213 mo
329.02 108.713 li
323.02 105.963 mo
323.02 108.713 li
317.27 107.213 mo
317.27 108.713 li
311.52 107.213 mo
311.52 108.713 li
305.77 107.213 mo
305.77 108.713 li
299.77 105.963 mo
299.77 108.713 li
294.02 107.213 mo
294.02 108.713 li
288.27 107.213 mo
288.27 108.713 li
282.52 107.213 mo
282.52 108.713 li
276.52 105.963 mo
276.52 108.713 li
270.77 107.213 mo
270.77 108.713 li
265.02 107.213 mo
265.02 108.713 li
259.27 107.213 mo
259.27 108.713 li
253.52 105.963 mo
253.52 108.713 li
247.52 107.213 mo
247.52 108.713 li
241.77 107.213 mo
241.77 108.713 li
236.02 107.213 mo
236.02 108.713 li
230.27 105.963 mo
230.27 108.713 li
224.27 107.213 mo
224.27 108.713 li
218.52 107.213 mo
218.52 108.713 li
212.77 107.213 mo
212.77 108.713 li
207.02 105.963 mo
207.02 108.713 li
@
207.02 108.713 mo
207.02 10.9634 li
@
211.52 10.9634 mo
207.02 10.9634 li
211.52 108.713 mo
207.02 108.713 li
211.52 10.9634 mo
207.02 10.9634 li
209.27 13.7134 mo
207.02 13.7134 li
209.27 16.4634 mo
207.02 16.4634 li
209.27 19.2134 mo
207.02 19.2134 li
211.52 21.9634 mo
207.02 21.9634 li
209.27 24.4634 mo
207.02 24.4634 li
209.27 27.2134 mo
207.02 27.2134 li
209.27 29.9634 mo
207.02 29.9634 li
211.52 32.7134 mo
207.02 32.7134 li
209.27 35.4634 mo
207.02 35.4634 li
209.27 38.2134 mo
207.02 38.2134 li
209.27 40.9634 mo
207.02 40.9634 li
211.52 43.4634 mo
207.02 43.4634 li
209.27 46.2134 mo
207.02 46.2134 li
209.27 48.9634 mo
207.02 48.9634 li
209.27 51.7134 mo
207.02 51.7134 li
211.52 54.4634 mo
207.02 54.4634 li
209.27 57.2134 mo
207.02 57.2134 li
209.27 59.9634 mo
207.02 59.9634 li
209.27 62.7134 mo
207.02 62.7134 li
211.52 65.2134 mo
207.02 65.2134 li
209.27 67.9634 mo
207.02 67.9634 li
209.27 70.7134 mo
207.02 70.7134 li
209.27 73.4634 mo
207.02 73.4634 li
211.52 76.2134 mo
207.02 76.2134 li
209.27 78.9634 mo
207.02 78.9634 li
209.27 81.7134 mo
207.02 81.7134 li
209.27 84.2134 mo
207.02 84.2134 li
211.52 86.9634 mo
207.02 86.9634 li
209.27 89.7134 mo
207.02 89.7134 li
209.27 92.4634 mo
207.02 92.4634 li
209.27 95.2134 mo
207.02 95.2134 li
211.52 97.9634 mo
207.02 97.9634 li
209.27 100.713 mo
207.02 100.713 li
209.27 103.463 mo
207.02 103.463 li
209.27 105.963 mo
207.02 105.963 li
211.52 108.713 mo
207.02 108.713 li
@
361.069 98.0732 mo
361.069 96.4175 359.726 95.0732 358.069 95.0732 cv
356.413 95.0732 355.069 96.4175 355.069 98.0732 cv
355.069 99.7295 356.413 101.073 358.069 101.073 cv
359.726 101.073 361.069 99.7295 361.069 98.0732 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.27 98.0732 mo
356.27 96.4175 354.926 95.0732 353.27 95.0732 cv
351.613 95.0732 350.27 96.4175 350.27 98.0732 cv
350.27 99.7295 351.613 101.073 353.27 101.073 cv
354.926 101.073 356.27 99.7295 356.27 98.0732 cv
ef
351.71 98.0732 mo
351.71 96.4175 350.365 95.0732 348.71 95.0732 cv
347.054 95.0732 345.71 96.4175 345.71 98.0732 cv
345.71 99.7295 347.054 101.073 348.71 101.073 cv
350.365 101.073 351.71 99.7295 351.71 98.0732 cv
ef
346.909 98.0732 mo
346.909 96.4175 345.565 95.0732 343.909 95.0732 cv
342.254 95.0732 340.909 96.4175 340.909 98.0732 cv
340.909 99.7295 342.254 101.073 343.909 101.073 cv
345.565 101.073 346.909 99.7295 346.909 98.0732 cv
ef
342.35 98.0732 mo
342.35 96.4175 341.006 95.0732 339.35 95.0732 cv
337.693 95.0732 336.35 96.4175 336.35 98.0732 cv
336.35 99.7295 337.693 101.073 339.35 101.073 cv
341.006 101.073 342.35 99.7295 342.35 98.0732 cv
ef
337.789 98.0732 mo
337.789 96.4175 336.445 95.0732 334.789 95.0732 cv
333.134 95.0732 331.789 96.4175 331.789 98.0732 cv
331.789 99.7295 333.134 101.073 334.789 101.073 cv
336.445 101.073 337.789 99.7295 337.789 98.0732 cv
ef
332.989 98.0732 mo
332.989 96.4175 331.646 95.0732 329.989 95.0732 cv
328.334 95.0732 326.989 96.4175 326.989 98.0732 cv
326.989 99.7295 328.334 101.073 329.989 101.073 cv
331.646 101.073 332.989 99.7295 332.989 98.0732 cv
ef
328.43 98.0732 mo
328.43 96.4175 327.086 95.0732 325.43 95.0732 cv
323.773 95.0732 322.43 96.4175 322.43 98.0732 cv
322.43 99.7295 323.773 101.073 325.43 101.073 cv
327.086 101.073 328.43 99.7295 328.43 98.0732 cv
ef
323.869 98.0732 mo
323.869 96.4175 322.525 95.0732 320.869 95.0732 cv
319.214 95.0732 317.869 96.4175 317.869 98.0732 cv
317.869 99.7295 319.214 101.073 320.869 101.073 cv
322.525 101.073 323.869 99.7295 323.869 98.0732 cv
ef
319.069 98.0732 mo
319.069 96.4175 317.726 95.0732 316.069 95.0732 cv
314.413 95.0732 313.069 96.4175 313.069 98.0732 cv
313.069 99.7295 314.413 101.073 316.069 101.073 cv
317.726 101.073 319.069 99.7295 319.069 98.0732 cv
ef
314.51 98.0732 mo
314.51 96.4175 313.166 95.0732 311.51 95.0732 cv
309.854 95.0732 308.51 96.4175 308.51 98.0732 cv
308.51 99.7295 309.854 101.073 311.51 101.073 cv
313.166 101.073 314.51 99.7295 314.51 98.0732 cv
ef
309.71 98.0732 mo
309.71 96.4175 308.365 95.0732 306.71 95.0732 cv
305.054 95.0732 303.71 96.4175 303.71 98.0732 cv
303.71 99.7295 305.054 101.073 306.71 101.073 cv
308.365 101.073 309.71 99.7295 309.71 98.0732 cv
ef
305.27 97.7134 mo
305.27 96.0571 303.926 94.7134 302.27 94.7134 cv
300.613 94.7134 299.27 96.0571 299.27 97.7134 cv
299.27 99.3691 300.613 100.713 302.27 100.713 cv
303.926 100.713 305.27 99.3691 305.27 97.7134 cv
ef
300.59 97.7134 mo
300.59 96.0571 299.245 94.7134 297.59 94.7134 cv
295.934 94.7134 294.59 96.0571 294.59 97.7134 cv
294.59 99.3691 295.934 100.713 297.59 100.713 cv
299.245 100.713 300.59 99.3691 300.59 97.7134 cv
ef
296.029 97.7134 mo
296.029 96.0571 294.686 94.7134 293.029 94.7134 cv
291.373 94.7134 290.029 96.0571 290.029 97.7134 cv
290.029 99.3691 291.373 100.713 293.029 100.713 cv
294.686 100.713 296.029 99.3691 296.029 97.7134 cv
ef
291.229 97.3535 mo
291.229 95.6973 289.886 94.3535 288.229 94.3535 cv
286.573 94.3535 285.229 95.6973 285.229 97.3535 cv
285.229 99.0093 286.573 100.354 288.229 100.354 cv
289.886 100.354 291.229 99.0093 291.229 97.3535 cv
ef
286.43 96.8735 mo
286.43 95.2173 285.086 93.8735 283.43 93.8735 cv
281.773 93.8735 280.43 95.2173 280.43 96.8735 cv
280.43 98.5293 281.773 99.8735 283.43 99.8735 cv
285.086 99.8735 286.43 98.5293 286.43 96.8735 cv
ef
282.109 97.1133 mo
282.109 95.4575 280.766 94.1133 279.109 94.1133 cv
277.454 94.1133 276.109 95.4575 276.109 97.1133 cv
276.109 98.7695 277.454 100.113 279.109 100.113 cv
280.766 100.113 282.109 98.7695 282.109 97.1133 cv
ef
277.31 96.8735 mo
277.31 95.2173 275.965 93.8735 274.31 93.8735 cv
272.653 93.8735 271.31 95.2173 271.31 96.8735 cv
271.31 98.5293 272.653 99.8735 274.31 99.8735 cv
275.965 99.8735 277.31 98.5293 277.31 96.8735 cv
ef
272.75 96.3936 mo
272.75 94.7373 271.405 93.3936 269.75 93.3936 cv
268.094 93.3936 266.75 94.7373 266.75 96.3936 cv
266.75 98.0493 268.094 99.3936 269.75 99.3936 cv
271.405 99.3936 272.75 98.0493 272.75 96.3936 cv
ef
267.95 96.8735 mo
267.95 95.2173 266.605 93.8735 264.95 93.8735 cv
263.293 93.8735 261.95 95.2173 261.95 96.8735 cv
261.95 98.5293 263.293 99.8735 264.95 99.8735 cv
266.605 99.8735 267.95 98.5293 267.95 96.8735 cv
ef
263.27 96.6333 mo
263.27 94.9775 261.926 93.6333 260.27 93.6333 cv
258.613 93.6333 257.27 94.9775 257.27 96.6333 cv
257.27 98.2896 258.613 99.6333 260.27 99.6333 cv
261.926 99.6333 263.27 98.2896 263.27 96.6333 cv
ef
258.83 97.1133 mo
258.83 95.4575 257.485 94.1133 255.83 94.1133 cv
254.173 94.1133 252.83 95.4575 252.83 97.1133 cv
252.83 98.7695 254.173 100.113 255.83 100.113 cv
257.485 100.113 258.83 98.7695 258.83 97.1133 cv
ef
254.029 96.1533 mo
254.029 94.4976 252.686 93.1533 251.029 93.1533 cv
249.374 93.1533 248.029 94.4976 248.029 96.1533 cv
248.029 97.8096 249.374 99.1533 251.029 99.1533 cv
252.686 99.1533 254.029 97.8096 254.029 96.1533 cv
ef
249.47 95.1934 mo
249.47 93.5376 248.125 92.1934 246.47 92.1934 cv
244.813 92.1934 243.47 93.5376 243.47 95.1934 cv
243.47 96.8491 244.813 98.1934 246.47 98.1934 cv
248.125 98.1934 249.47 96.8491 249.47 95.1934 cv
ef
244.669 94.7134 mo
244.669 93.0571 243.326 91.7134 241.669 91.7134 cv
240.014 91.7134 238.669 93.0571 238.669 94.7134 cv
238.669 96.3691 240.014 97.7134 241.669 97.7134 cv
243.326 97.7134 244.669 96.3691 244.669 94.7134 cv
ef
240.109 93.2734 mo
240.109 91.6172 238.766 90.2734 237.109 90.2734 cv
235.454 90.2734 234.109 91.6172 234.109 93.2734 cv
234.109 94.9292 235.454 96.2734 237.109 96.2734 cv
238.766 96.2734 240.109 94.9292 240.109 93.2734 cv
ef
235.549 90.3936 mo
235.549 88.7373 234.206 87.3936 232.549 87.3936 cv
230.894 87.3936 229.549 88.7373 229.549 90.3936 cv
229.549 92.0493 230.894 93.3936 232.549 93.3936 cv
234.206 93.3936 235.549 92.0493 235.549 90.3936 cv
ef
230.75 85.1133 mo
230.75 83.4575 229.405 82.1133 227.75 82.1133 cv
226.094 82.1133 224.75 83.4575 224.75 85.1133 cv
224.75 86.7695 226.094 88.1133 227.75 88.1133 cv
229.405 88.1133 230.75 86.7695 230.75 85.1133 cv
ef
226.189 74.7935 mo
226.189 73.1372 224.846 71.7935 223.189 71.7935 cv
221.534 71.7935 220.189 73.1372 220.189 74.7935 cv
220.189 76.4492 221.534 77.7935 223.189 77.7935 cv
224.846 77.7935 226.189 76.4492 226.189 74.7935 cv
ef
221.629 52.9536 mo
221.629 51.2974 220.286 49.9536 218.629 49.9536 cv
216.974 49.9536 215.629 51.2974 215.629 52.9536 cv
215.629 54.6094 216.974 55.9536 218.629 55.9536 cv
220.286 55.9536 221.629 54.6094 221.629 52.9536 cv
ef
217.069 21.2734 mo
217.069 19.6172 215.726 18.2734 214.069 18.2734 cv
212.414 18.2734 211.069 19.6172 211.069 21.2734 cv
211.069 22.9292 212.414 24.2734 214.069 24.2734 cv
215.726 24.2734 217.069 22.9292 217.069 21.2734 cv
ef
212.27 47.9136 mo
212.27 46.2573 210.926 44.9136 209.27 44.9136 cv
207.613 44.9136 206.27 46.2573 206.27 47.9136 cv
206.27 49.5693 207.613 50.9136 209.27 50.9136 cv
210.926 50.9136 212.27 49.5693 212.27 47.9136 cv
ef
207.02 97.9634 mo
299.77 97.9634 li
0 0 0 1 cmyk
@
212.27 51.7534 mo
212.27 50.0972 210.926 48.7534 209.27 48.7534 cv
207.613 48.7534 206.27 50.0972 206.27 51.7534 cv
206.27 53.4092 207.613 54.7534 209.27 54.7534 cv
210.926 54.7534 212.27 53.4092 212.27 51.7534 cv
217.069 59.1934 mo
217.069 57.5376 215.726 56.1934 214.069 56.1934 cv
212.414 56.1934 211.069 57.5376 211.069 59.1934 cv
211.069 60.8491 212.414 62.1934 214.069 62.1934 cv
215.726 62.1934 217.069 60.8491 217.069 59.1934 cv
221.629 66.1533 mo
221.629 64.4976 220.286 63.1533 218.629 63.1533 cv
216.974 63.1533 215.629 64.4976 215.629 66.1533 cv
215.629 67.8096 216.974 69.1533 218.629 69.1533 cv
220.286 69.1533 221.629 67.8096 221.629 66.1533 cv
226.189 75.2734 mo
226.189 73.6172 224.846 72.2734 223.189 72.2734 cv
221.534 72.2734 220.189 73.6172 220.189 75.2734 cv
220.189 76.9292 221.534 78.2734 223.189 78.2734 cv
224.846 78.2734 226.189 76.9292 226.189 75.2734 cv
230.75 82.4731 mo
230.75 80.8174 229.405 79.4731 227.75 79.4731 cv
226.094 79.4731 224.75 80.8174 224.75 82.4731 cv
224.75 84.1294 226.094 85.4731 227.75 85.4731 cv
229.405 85.4731 230.75 84.1294 230.75 82.4731 cv
235.549 86.3135 mo
235.549 84.6572 234.206 83.3135 232.549 83.3135 cv
230.894 83.3135 229.549 84.6572 229.549 86.3135 cv
229.549 87.9692 230.894 89.3135 232.549 89.3135 cv
234.206 89.3135 235.549 87.9692 235.549 86.3135 cv
240.109 88.9536 mo
240.109 87.2974 238.766 85.9536 237.109 85.9536 cv
235.454 85.9536 234.109 87.2974 234.109 88.9536 cv
234.109 90.6094 235.454 91.9536 237.109 91.9536 cv
238.766 91.9536 240.109 90.6094 240.109 88.9536 cv
244.669 90.1533 mo
244.669 88.4976 243.326 87.1533 241.669 87.1533 cv
240.014 87.1533 238.669 88.4976 238.669 90.1533 cv
238.669 91.8096 240.014 93.1533 241.669 93.1533 cv
243.326 93.1533 244.669 91.8096 244.669 90.1533 cv
249.47 92.3135 mo
249.47 90.6572 248.125 89.3135 246.47 89.3135 cv
244.813 89.3135 243.47 90.6572 243.47 92.3135 cv
243.47 93.9692 244.813 95.3135 246.47 95.3135 cv
248.125 95.3135 249.47 93.9692 249.47 92.3135 cv
254.029 93.0332 mo
254.029 91.3774 252.686 90.0332 251.029 90.0332 cv
249.374 90.0332 248.029 91.3774 248.029 93.0332 cv
248.029 94.6895 249.374 96.0332 251.029 96.0332 cv
252.686 96.0332 254.029 94.6895 254.029 93.0332 cv
258.83 93.2734 mo
258.83 91.6172 257.485 90.2734 255.83 90.2734 cv
254.173 90.2734 252.83 91.6172 252.83 93.2734 cv
252.83 94.9292 254.173 96.2734 255.83 96.2734 cv
257.485 96.2734 258.83 94.9292 258.83 93.2734 cv
263.27 93.7534 mo
263.27 92.0972 261.926 90.7534 260.27 90.7534 cv
258.613 90.7534 257.27 92.0972 257.27 93.7534 cv
257.27 95.4092 258.613 96.7534 260.27 96.7534 cv
261.926 96.7534 263.27 95.4092 263.27 93.7534 cv
267.95 93.2734 mo
267.95 91.6172 266.605 90.2734 264.95 90.2734 cv
263.293 90.2734 261.95 91.6172 261.95 93.2734 cv
261.95 94.9292 263.293 96.2734 264.95 96.2734 cv
266.605 96.2734 267.95 94.9292 267.95 93.2734 cv
272.75 94.2334 mo
272.75 92.5771 271.405 91.2334 269.75 91.2334 cv
268.094 91.2334 266.75 92.5771 266.75 94.2334 cv
266.75 95.8892 268.094 97.2334 269.75 97.2334 cv
271.405 97.2334 272.75 95.8892 272.75 94.2334 cv
277.31 94.2334 mo
277.31 92.5771 275.965 91.2334 274.31 91.2334 cv
272.653 91.2334 271.31 92.5771 271.31 94.2334 cv
271.31 95.8892 272.653 97.2334 274.31 97.2334 cv
275.965 97.2334 277.31 95.8892 277.31 94.2334 cv
282.109 94.4731 mo
282.109 92.8174 280.766 91.4731 279.109 91.4731 cv
277.454 91.4731 276.109 92.8174 276.109 94.4731 cv
276.109 96.1294 277.454 97.4731 279.109 97.4731 cv
280.766 97.4731 282.109 96.1294 282.109 94.4731 cv
286.43 94.9536 mo
286.43 93.2974 285.086 91.9536 283.43 91.9536 cv
281.773 91.9536 280.43 93.2974 280.43 94.9536 cv
280.43 96.6094 281.773 97.9536 283.43 97.9536 cv
285.086 97.9536 286.43 96.6094 286.43 94.9536 cv
291.229 95.1934 mo
291.229 93.5376 289.886 92.1934 288.229 92.1934 cv
286.573 92.1934 285.229 93.5376 285.229 95.1934 cv
285.229 96.8491 286.573 98.1934 288.229 98.1934 cv
289.886 98.1934 291.229 96.8491 291.229 95.1934 cv
296.029 95.6733 mo
296.029 94.0171 294.686 92.6733 293.029 92.6733 cv
291.373 92.6733 290.029 94.0171 290.029 95.6733 cv
290.029 97.3296 291.373 98.6733 293.029 98.6733 cv
294.686 98.6733 296.029 97.3296 296.029 95.6733 cv
300.59 96.1533 mo
300.59 94.4976 299.245 93.1533 297.59 93.1533 cv
295.934 93.1533 294.59 94.4976 294.59 96.1533 cv
294.59 97.8096 295.934 99.1533 297.59 99.1533 cv
299.245 99.1533 300.59 97.8096 300.59 96.1533 cv
305.27 96.8735 mo
305.27 95.2173 303.926 93.8735 302.27 93.8735 cv
300.613 93.8735 299.27 95.2173 299.27 96.8735 cv
299.27 98.5293 300.613 99.8735 302.27 99.8735 cv
303.926 99.8735 305.27 98.5293 305.27 96.8735 cv
309.71 97.1133 mo
309.71 95.4575 308.365 94.1133 306.71 94.1133 cv
305.054 94.1133 303.71 95.4575 303.71 97.1133 cv
303.71 98.7695 305.054 100.113 306.71 100.113 cv
308.365 100.113 309.71 98.7695 309.71 97.1133 cv
314.51 97.3535 mo
314.51 95.6973 313.166 94.3535 311.51 94.3535 cv
309.854 94.3535 308.51 95.6973 308.51 97.3535 cv
308.51 99.0093 309.854 100.354 311.51 100.354 cv
313.166 100.354 314.51 99.0093 314.51 97.3535 cv
319.069 97.7134 mo
319.069 96.0571 317.726 94.7134 316.069 94.7134 cv
314.413 94.7134 313.069 96.0571 313.069 97.7134 cv
313.069 99.3691 314.413 100.713 316.069 100.713 cv
317.726 100.713 319.069 99.3691 319.069 97.7134 cv
323.869 98.0732 mo
323.869 96.4175 322.525 95.0732 320.869 95.0732 cv
319.214 95.0732 317.869 96.4175 317.869 98.0732 cv
317.869 99.7295 319.214 101.073 320.869 101.073 cv
322.525 101.073 323.869 99.7295 323.869 98.0732 cv
328.43 97.7134 mo
328.43 96.0571 327.086 94.7134 325.43 94.7134 cv
323.773 94.7134 322.43 96.0571 322.43 97.7134 cv
322.43 99.3691 323.773 100.713 325.43 100.713 cv
327.086 100.713 328.43 99.3691 328.43 97.7134 cv
332.989 98.0732 mo
332.989 96.4175 331.646 95.0732 329.989 95.0732 cv
328.334 95.0732 326.989 96.4175 326.989 98.0732 cv
326.989 99.7295 328.334 101.073 329.989 101.073 cv
331.646 101.073 332.989 99.7295 332.989 98.0732 cv
337.789 98.0732 mo
337.789 96.4175 336.445 95.0732 334.789 95.0732 cv
333.134 95.0732 331.789 96.4175 331.789 98.0732 cv
331.789 99.7295 333.134 101.073 334.789 101.073 cv
336.445 101.073 337.789 99.7295 337.789 98.0732 cv
342.35 98.0732 mo
342.35 96.4175 341.006 95.0732 339.35 95.0732 cv
337.693 95.0732 336.35 96.4175 336.35 98.0732 cv
336.35 99.7295 337.693 101.073 339.35 101.073 cv
341.006 101.073 342.35 99.7295 342.35 98.0732 cv
346.909 98.0732 mo
346.909 96.4175 345.565 95.0732 343.909 95.0732 cv
342.254 95.0732 340.909 96.4175 340.909 98.0732 cv
340.909 99.7295 342.254 101.073 343.909 101.073 cv
345.565 101.073 346.909 99.7295 346.909 98.0732 cv
351.71 98.0732 mo
351.71 96.4175 350.365 95.0732 348.71 95.0732 cv
347.054 95.0732 345.71 96.4175 345.71 98.0732 cv
345.71 99.7295 347.054 101.073 348.71 101.073 cv
350.365 101.073 351.71 99.7295 351.71 98.0732 cv
356.27 98.0732 mo
356.27 96.4175 354.926 95.0732 353.27 95.0732 cv
351.613 95.0732 350.27 96.4175 350.27 98.0732 cv
350.27 99.7295 351.613 101.073 353.27 101.073 cv
354.926 101.073 356.27 99.7295 356.27 98.0732 cv
361.069 98.0732 mo
361.069 96.4175 359.726 95.0732 358.069 95.0732 cv
356.413 95.0732 355.069 96.4175 355.069 98.0732 cv
355.069 99.7295 356.413 101.073 358.069 101.073 cv
359.726 101.073 361.069 99.7295 361.069 98.0732 cv
.878019 .337896 1 .281529 cmyk
@
361.069 98.0732 mo
361.069 96.4175 359.726 95.0732 358.069 95.0732 cv
356.413 95.0732 355.069 96.4175 355.069 98.0732 cv
355.069 99.7295 356.413 101.073 358.069 101.073 cv
359.726 101.073 361.069 99.7295 361.069 98.0732 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.27 98.0732 mo
356.27 96.4175 354.926 95.0732 353.27 95.0732 cv
351.613 95.0732 350.27 96.4175 350.27 98.0732 cv
350.27 99.7295 351.613 101.073 353.27 101.073 cv
354.926 101.073 356.27 99.7295 356.27 98.0732 cv
ef
351.71 98.0732 mo
351.71 96.4175 350.365 95.0732 348.71 95.0732 cv
347.054 95.0732 345.71 96.4175 345.71 98.0732 cv
345.71 99.7295 347.054 101.073 348.71 101.073 cv
350.365 101.073 351.71 99.7295 351.71 98.0732 cv
ef
346.909 98.0732 mo
346.909 96.4175 345.565 95.0732 343.909 95.0732 cv
342.254 95.0732 340.909 96.4175 340.909 98.0732 cv
340.909 99.7295 342.254 101.073 343.909 101.073 cv
345.565 101.073 346.909 99.7295 346.909 98.0732 cv
ef
342.35 98.0732 mo
342.35 96.4175 341.006 95.0732 339.35 95.0732 cv
337.693 95.0732 336.35 96.4175 336.35 98.0732 cv
336.35 99.7295 337.693 101.073 339.35 101.073 cv
341.006 101.073 342.35 99.7295 342.35 98.0732 cv
ef
337.789 98.0732 mo
337.789 96.4175 336.445 95.0732 334.789 95.0732 cv
333.134 95.0732 331.789 96.4175 331.789 98.0732 cv
331.789 99.7295 333.134 101.073 334.789 101.073 cv
336.445 101.073 337.789 99.7295 337.789 98.0732 cv
ef
332.989 98.0732 mo
332.989 96.4175 331.646 95.0732 329.989 95.0732 cv
328.334 95.0732 326.989 96.4175 326.989 98.0732 cv
326.989 99.7295 328.334 101.073 329.989 101.073 cv
331.646 101.073 332.989 99.7295 332.989 98.0732 cv
ef
328.43 98.0732 mo
328.43 96.4175 327.086 95.0732 325.43 95.0732 cv
323.773 95.0732 322.43 96.4175 322.43 98.0732 cv
322.43 99.7295 323.773 101.073 325.43 101.073 cv
327.086 101.073 328.43 99.7295 328.43 98.0732 cv
ef
323.869 98.0732 mo
323.869 96.4175 322.525 95.0732 320.869 95.0732 cv
319.214 95.0732 317.869 96.4175 317.869 98.0732 cv
317.869 99.7295 319.214 101.073 320.869 101.073 cv
322.525 101.073 323.869 99.7295 323.869 98.0732 cv
ef
319.069 98.0732 mo
319.069 96.4175 317.726 95.0732 316.069 95.0732 cv
314.413 95.0732 313.069 96.4175 313.069 98.0732 cv
313.069 99.7295 314.413 101.073 316.069 101.073 cv
317.726 101.073 319.069 99.7295 319.069 98.0732 cv
ef
314.51 98.0732 mo
314.51 96.4175 313.166 95.0732 311.51 95.0732 cv
309.854 95.0732 308.51 96.4175 308.51 98.0732 cv
308.51 99.7295 309.854 101.073 311.51 101.073 cv
313.166 101.073 314.51 99.7295 314.51 98.0732 cv
ef
309.71 98.0732 mo
309.71 96.4175 308.365 95.0732 306.71 95.0732 cv
305.054 95.0732 303.71 96.4175 303.71 98.0732 cv
303.71 99.7295 305.054 101.073 306.71 101.073 cv
308.365 101.073 309.71 99.7295 309.71 98.0732 cv
ef
305.27 97.7134 mo
305.27 96.0571 303.926 94.7134 302.27 94.7134 cv
300.613 94.7134 299.27 96.0571 299.27 97.7134 cv
299.27 99.3691 300.613 100.713 302.27 100.713 cv
303.926 100.713 305.27 99.3691 305.27 97.7134 cv
ef
300.59 97.7134 mo
300.59 96.0571 299.245 94.7134 297.59 94.7134 cv
295.934 94.7134 294.59 96.0571 294.59 97.7134 cv
294.59 99.3691 295.934 100.713 297.59 100.713 cv
299.245 100.713 300.59 99.3691 300.59 97.7134 cv
ef
296.029 97.7134 mo
296.029 96.0571 294.686 94.7134 293.029 94.7134 cv
291.373 94.7134 290.029 96.0571 290.029 97.7134 cv
290.029 99.3691 291.373 100.713 293.029 100.713 cv
294.686 100.713 296.029 99.3691 296.029 97.7134 cv
ef
291.229 97.3535 mo
291.229 95.6973 289.886 94.3535 288.229 94.3535 cv
286.573 94.3535 285.229 95.6973 285.229 97.3535 cv
285.229 99.0093 286.573 100.354 288.229 100.354 cv
289.886 100.354 291.229 99.0093 291.229 97.3535 cv
ef
286.43 96.8735 mo
286.43 95.2173 285.086 93.8735 283.43 93.8735 cv
281.773 93.8735 280.43 95.2173 280.43 96.8735 cv
280.43 98.5293 281.773 99.8735 283.43 99.8735 cv
285.086 99.8735 286.43 98.5293 286.43 96.8735 cv
ef
282.109 97.1133 mo
282.109 95.4575 280.766 94.1133 279.109 94.1133 cv
277.454 94.1133 276.109 95.4575 276.109 97.1133 cv
276.109 98.7695 277.454 100.113 279.109 100.113 cv
280.766 100.113 282.109 98.7695 282.109 97.1133 cv
ef
277.31 96.8735 mo
277.31 95.2173 275.965 93.8735 274.31 93.8735 cv
272.653 93.8735 271.31 95.2173 271.31 96.8735 cv
271.31 98.5293 272.653 99.8735 274.31 99.8735 cv
275.965 99.8735 277.31 98.5293 277.31 96.8735 cv
ef
272.75 96.3936 mo
272.75 94.7373 271.405 93.3936 269.75 93.3936 cv
268.094 93.3936 266.75 94.7373 266.75 96.3936 cv
266.75 98.0493 268.094 99.3936 269.75 99.3936 cv
271.405 99.3936 272.75 98.0493 272.75 96.3936 cv
ef
267.95 96.8735 mo
267.95 95.2173 266.605 93.8735 264.95 93.8735 cv
263.293 93.8735 261.95 95.2173 261.95 96.8735 cv
261.95 98.5293 263.293 99.8735 264.95 99.8735 cv
266.605 99.8735 267.95 98.5293 267.95 96.8735 cv
ef
263.27 96.6333 mo
263.27 94.9775 261.926 93.6333 260.27 93.6333 cv
258.613 93.6333 257.27 94.9775 257.27 96.6333 cv
257.27 98.2896 258.613 99.6333 260.27 99.6333 cv
261.926 99.6333 263.27 98.2896 263.27 96.6333 cv
ef
258.83 97.1133 mo
258.83 95.4575 257.485 94.1133 255.83 94.1133 cv
254.173 94.1133 252.83 95.4575 252.83 97.1133 cv
252.83 98.7695 254.173 100.113 255.83 100.113 cv
257.485 100.113 258.83 98.7695 258.83 97.1133 cv
ef
254.029 96.1533 mo
254.029 94.4976 252.686 93.1533 251.029 93.1533 cv
249.374 93.1533 248.029 94.4976 248.029 96.1533 cv
248.029 97.8096 249.374 99.1533 251.029 99.1533 cv
252.686 99.1533 254.029 97.8096 254.029 96.1533 cv
ef
249.47 95.1934 mo
249.47 93.5376 248.125 92.1934 246.47 92.1934 cv
244.813 92.1934 243.47 93.5376 243.47 95.1934 cv
243.47 96.8491 244.813 98.1934 246.47 98.1934 cv
248.125 98.1934 249.47 96.8491 249.47 95.1934 cv
ef
244.669 94.7134 mo
244.669 93.0571 243.326 91.7134 241.669 91.7134 cv
240.014 91.7134 238.669 93.0571 238.669 94.7134 cv
238.669 96.3691 240.014 97.7134 241.669 97.7134 cv
243.326 97.7134 244.669 96.3691 244.669 94.7134 cv
ef
240.109 93.2734 mo
240.109 91.6172 238.766 90.2734 237.109 90.2734 cv
235.454 90.2734 234.109 91.6172 234.109 93.2734 cv
234.109 94.9292 235.454 96.2734 237.109 96.2734 cv
238.766 96.2734 240.109 94.9292 240.109 93.2734 cv
ef
235.549 90.3936 mo
235.549 88.7373 234.206 87.3936 232.549 87.3936 cv
230.894 87.3936 229.549 88.7373 229.549 90.3936 cv
229.549 92.0493 230.894 93.3936 232.549 93.3936 cv
234.206 93.3936 235.549 92.0493 235.549 90.3936 cv
ef
230.75 85.1133 mo
230.75 83.4575 229.405 82.1133 227.75 82.1133 cv
226.094 82.1133 224.75 83.4575 224.75 85.1133 cv
224.75 86.7695 226.094 88.1133 227.75 88.1133 cv
229.405 88.1133 230.75 86.7695 230.75 85.1133 cv
ef
226.189 74.7935 mo
226.189 73.1372 224.846 71.7935 223.189 71.7935 cv
221.534 71.7935 220.189 73.1372 220.189 74.7935 cv
220.189 76.4492 221.534 77.7935 223.189 77.7935 cv
224.846 77.7935 226.189 76.4492 226.189 74.7935 cv
ef
221.629 52.9536 mo
221.629 51.2974 220.286 49.9536 218.629 49.9536 cv
216.974 49.9536 215.629 51.2974 215.629 52.9536 cv
215.629 54.6094 216.974 55.9536 218.629 55.9536 cv
220.286 55.9536 221.629 54.6094 221.629 52.9536 cv
ef
217.069 21.2734 mo
217.069 19.6172 215.726 18.2734 214.069 18.2734 cv
212.414 18.2734 211.069 19.6172 211.069 21.2734 cv
211.069 22.9292 212.414 24.2734 214.069 24.2734 cv
215.726 24.2734 217.069 22.9292 217.069 21.2734 cv
ef
212.27 47.9136 mo
212.27 46.2573 210.926 44.9136 209.27 44.9136 cv
207.613 44.9136 206.27 46.2573 206.27 47.9136 cv
206.27 49.5693 207.613 50.9136 209.27 50.9136 cv
210.926 50.9136 212.27 49.5693 212.27 47.9136 cv
ef
358.01 108.713 mo
359.01 107.713 li
359.01 11.9629 li
508.51 11.9629 li
509.51 10.9629 li
358.01 10.9629 li
358.01 108.713 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
358.01 108.713 mo
509.51 108.713 li
358.01 108.713 mo
358.01 10.9629 li
509.51 10.9629 li
509.51 108.713 li
358.01 108.713 li
cp
0 0 0 1 cmyk
@
503.76 107.213 mo
503.76 108.713 li
497.76 105.963 mo
497.76 108.713 li
497.76 105.963 mo
497.76 108.713 li
492.01 107.213 mo
492.01 108.713 li
486.26 107.213 mo
486.26 108.713 li
480.26 107.213 mo
480.26 108.713 li
474.51 105.963 mo
474.51 108.713 li
468.76 107.213 mo
468.76 108.713 li
463.01 107.213 mo
463.01 108.713 li
457.01 107.213 mo
457.01 108.713 li
451.26 105.963 mo
451.26 108.713 li
445.51 107.213 mo
445.51 108.713 li
439.51 107.213 mo
439.51 108.713 li
433.76 107.213 mo
433.76 108.713 li
428.01 105.963 mo
428.01 108.713 li
422.01 107.213 mo
422.01 108.713 li
416.26 107.213 mo
416.26 108.713 li
410.51 107.213 mo
410.51 108.713 li
404.51 105.963 mo
404.51 108.713 li
398.76 107.213 mo
398.76 108.713 li
393.01 107.213 mo
393.01 108.713 li
387.26 107.213 mo
387.26 108.713 li
381.26 105.963 mo
381.26 108.713 li
375.51 107.213 mo
375.51 108.713 li
369.76 107.213 mo
369.76 108.713 li
363.76 107.213 mo
363.76 108.713 li
358.01 105.963 mo
358.01 108.713 li
@
358.01 108.713 mo
358.01 10.9629 li
@
362.51 10.9629 mo
358.01 10.9629 li
362.51 108.713 mo
358.01 108.713 li
362.51 10.9629 mo
358.01 10.9629 li
360.26 13.7129 mo
358.01 13.7129 li
360.26 16.4629 mo
358.01 16.4629 li
360.26 19.2129 mo
358.01 19.2129 li
362.51 21.9629 mo
358.01 21.9629 li
360.26 24.4629 mo
358.01 24.4629 li
360.26 27.2129 mo
358.01 27.2129 li
360.26 29.9629 mo
358.01 29.9629 li
362.51 32.7129 mo
358.01 32.7129 li
360.26 35.4629 mo
358.01 35.4629 li
360.26 38.2129 mo
358.01 38.2129 li
360.26 40.9629 mo
358.01 40.9629 li
362.51 43.4629 mo
358.01 43.4629 li
360.26 46.2129 mo
358.01 46.2129 li
360.26 48.9629 mo
358.01 48.9629 li
360.26 51.7129 mo
358.01 51.7129 li
362.51 54.4629 mo
358.01 54.4629 li
360.26 57.2129 mo
358.01 57.2129 li
360.26 59.9629 mo
358.01 59.9629 li
360.26 62.7129 mo
358.01 62.7129 li
362.51 65.2129 mo
358.01 65.2129 li
360.26 67.9629 mo
358.01 67.9629 li
360.26 70.7129 mo
358.01 70.7129 li
360.26 73.4629 mo
358.01 73.4629 li
362.51 76.2129 mo
358.01 76.2129 li
360.26 78.9629 mo
358.01 78.9629 li
360.26 81.7129 mo
358.01 81.7129 li
360.26 84.2129 mo
358.01 84.2129 li
362.51 86.9629 mo
358.01 86.9629 li
360.26 89.7129 mo
358.01 89.7129 li
360.26 92.4629 mo
358.01 92.4629 li
360.26 95.2129 mo
358.01 95.2129 li
362.51 97.9629 mo
358.01 97.9629 li
360.26 100.713 mo
358.01 100.713 li
360.26 103.463 mo
358.01 103.463 li
360.26 105.963 mo
358.01 105.963 li
362.51 108.713 mo
358.01 108.713 li
@
512.43 98.0728 mo
512.43 96.417 511.086 95.0728 509.43 95.0728 cv
507.773 95.0728 506.43 96.417 506.43 98.0728 cv
506.43 99.729 507.773 101.073 509.43 101.073 cv
511.086 101.073 512.43 99.729 512.43 98.0728 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
507.87 98.0728 mo
507.87 96.417 506.525 95.0728 504.87 95.0728 cv
503.214 95.0728 501.87 96.417 501.87 98.0728 cv
501.87 99.729 503.214 101.073 504.87 101.073 cv
506.525 101.073 507.87 99.729 507.87 98.0728 cv
ef
503.31 98.0728 mo
503.31 96.417 501.966 95.0728 500.31 95.0728 cv
498.653 95.0728 497.31 96.417 497.31 98.0728 cv
497.31 99.729 498.653 101.073 500.31 101.073 cv
501.966 101.073 503.31 99.729 503.31 98.0728 cv
ef
498.51 98.0728 mo
498.51 96.417 497.166 95.0728 495.51 95.0728 cv
493.854 95.0728 492.51 96.417 492.51 98.0728 cv
492.51 99.729 493.854 101.073 495.51 101.073 cv
497.166 101.073 498.51 99.729 498.51 98.0728 cv
ef
493.71 98.0728 mo
493.71 96.417 492.366 95.0728 490.71 95.0728 cv
489.054 95.0728 487.71 96.417 487.71 98.0728 cv
487.71 99.729 489.054 101.073 490.71 101.073 cv
492.366 101.073 493.71 99.729 493.71 98.0728 cv
ef
489.149 98.0728 mo
489.149 96.417 487.806 95.0728 486.149 95.0728 cv
484.494 95.0728 483.149 96.417 483.149 98.0728 cv
483.149 99.729 484.494 101.073 486.149 101.073 cv
487.806 101.073 489.149 99.729 489.149 98.0728 cv
ef
484.59 98.0728 mo
484.59 96.417 483.246 95.0728 481.59 95.0728 cv
479.934 95.0728 478.59 96.417 478.59 98.0728 cv
478.59 99.729 479.934 101.073 481.59 101.073 cv
483.246 101.073 484.59 99.729 484.59 98.0728 cv
ef
479.79 98.0728 mo
479.79 96.417 478.445 95.0728 476.79 95.0728 cv
475.134 95.0728 473.79 96.417 473.79 98.0728 cv
473.79 99.729 475.134 101.073 476.79 101.073 cv
478.445 101.073 479.79 99.729 479.79 98.0728 cv
ef
475.229 98.0728 mo
475.229 96.417 473.886 95.0728 472.229 95.0728 cv
470.574 95.0728 469.229 96.417 469.229 98.0728 cv
469.229 99.729 470.574 101.073 472.229 101.073 cv
473.886 101.073 475.229 99.729 475.229 98.0728 cv
ef
470.43 98.0728 mo
470.43 96.417 469.086 95.0728 467.43 95.0728 cv
465.773 95.0728 464.43 96.417 464.43 98.0728 cv
464.43 99.729 465.773 101.073 467.43 101.073 cv
469.086 101.073 470.43 99.729 470.43 98.0728 cv
ef
466.109 97.7129 mo
466.109 96.0566 464.766 94.7129 463.109 94.7129 cv
461.454 94.7129 460.109 96.0566 460.109 97.7129 cv
460.109 99.3687 461.454 100.713 463.109 100.713 cv
464.766 100.713 466.109 99.3687 466.109 97.7129 cv
ef
461.31 97.7129 mo
461.31 96.0566 459.966 94.7129 458.31 94.7129 cv
456.653 94.7129 455.31 96.0566 455.31 97.7129 cv
455.31 99.3687 456.653 100.713 458.31 100.713 cv
459.966 100.713 461.31 99.3687 461.31 97.7129 cv
ef
456.51 97.7129 mo
456.51 96.0566 455.166 94.7129 453.51 94.7129 cv
451.854 94.7129 450.51 96.0566 450.51 97.7129 cv
450.51 99.3687 451.854 100.713 453.51 100.713 cv
455.166 100.713 456.51 99.3687 456.51 97.7129 cv
ef
451.95 97.7129 mo
451.95 96.0566 450.605 94.7129 448.95 94.7129 cv
447.294 94.7129 445.95 96.0566 445.95 97.7129 cv
445.95 99.3687 447.294 100.713 448.95 100.713 cv
450.605 100.713 451.95 99.3687 451.95 97.7129 cv
ef
447.149 97.353 mo
447.149 95.6968 445.806 94.353 444.149 94.353 cv
442.494 94.353 441.149 95.6968 441.149 97.353 cv
441.149 99.0088 442.494 100.353 444.149 100.353 cv
445.806 100.353 447.149 99.0088 447.149 97.353 cv
ef
442.59 97.1128 mo
442.59 95.457 441.246 94.1128 439.59 94.1128 cv
437.934 94.1128 436.59 95.457 436.59 97.1128 cv
436.59 98.769 437.934 100.113 439.59 100.113 cv
441.246 100.113 442.59 98.769 442.59 97.1128 cv
ef
438.029 97.1128 mo
438.029 95.457 436.686 94.1128 435.029 94.1128 cv
433.374 94.1128 432.029 95.457 432.029 97.1128 cv
432.029 98.769 433.374 100.113 435.029 100.113 cv
436.686 100.113 438.029 98.769 438.029 97.1128 cv
ef
433.229 96.873 mo
433.229 95.2168 431.886 93.873 430.229 93.873 cv
428.574 93.873 427.229 95.2168 427.229 96.873 cv
427.229 98.5288 428.574 99.873 430.229 99.873 cv
431.886 99.873 433.229 98.5288 433.229 96.873 cv
ef
428.43 96.873 mo
428.43 95.2168 427.086 93.873 425.43 93.873 cv
423.773 93.873 422.43 95.2168 422.43 96.873 cv
422.43 98.5288 423.773 99.873 425.43 99.873 cv
427.086 99.873 428.43 98.5288 428.43 96.873 cv
ef
424.109 96.873 mo
424.109 95.2168 422.766 93.873 421.109 93.873 cv
419.454 93.873 418.109 95.2168 418.109 96.873 cv
418.109 98.5288 419.454 99.873 421.109 99.873 cv
422.766 99.873 424.109 98.5288 424.109 96.873 cv
ef
419.31 96.3931 mo
419.31 94.7368 417.966 93.3931 416.31 93.3931 cv
414.653 93.3931 413.31 94.7368 413.31 96.3931 cv
413.31 98.0488 414.653 99.3931 416.31 99.3931 cv
417.966 99.3931 419.31 98.0488 419.31 96.3931 cv
ef
414.51 96.1528 mo
414.51 94.4971 413.166 93.1528 411.51 93.1528 cv
409.854 93.1528 408.51 94.4971 408.51 96.1528 cv
408.51 97.8091 409.854 99.1528 411.51 99.1528 cv
413.166 99.1528 414.51 97.8091 414.51 96.1528 cv
ef
409.95 96.1528 mo
409.95 94.4971 408.605 93.1528 406.95 93.1528 cv
405.294 93.1528 403.95 94.4971 403.95 96.1528 cv
403.95 97.8091 405.294 99.1528 406.95 99.1528 cv
408.605 99.1528 409.95 97.8091 409.95 96.1528 cv
ef
405.149 95.6729 mo
405.149 94.0166 403.806 92.6729 402.149 92.6729 cv
400.494 92.6729 399.149 94.0166 399.149 95.6729 cv
399.149 97.3291 400.494 98.6729 402.149 98.6729 cv
403.806 98.6729 405.149 97.3291 405.149 95.6729 cv
ef
400.83 95.4326 mo
400.83 93.7769 399.485 92.4326 397.83 92.4326 cv
396.174 92.4326 394.83 93.7769 394.83 95.4326 cv
394.83 97.0889 396.174 98.4326 397.83 98.4326 cv
399.485 98.4326 400.83 97.0889 400.83 95.4326 cv
ef
396.029 94.4727 mo
396.029 92.8169 394.686 91.4727 393.029 91.4727 cv
391.374 91.4727 390.029 92.8169 390.029 94.4727 cv
390.029 96.1289 391.374 97.4727 393.029 97.4727 cv
394.686 97.4727 396.029 96.1289 396.029 94.4727 cv
ef
391.229 92.793 mo
391.229 91.1367 389.886 89.793 388.229 89.793 cv
386.574 89.793 385.229 91.1367 385.229 92.793 cv
385.229 94.4487 386.574 95.793 388.229 95.793 cv
389.886 95.793 391.229 94.4487 391.229 92.793 cv
ef
386.67 89.1929 mo
386.67 87.5371 385.326 86.1929 383.67 86.1929 cv
382.014 86.1929 380.67 87.5371 380.67 89.1929 cv
380.67 90.8486 382.014 92.1929 383.67 92.1929 cv
385.326 92.1929 386.67 90.8486 386.67 89.1929 cv
ef
382.109 83.4326 mo
382.109 81.7769 380.766 80.4326 379.109 80.4326 cv
377.454 80.4326 376.109 81.7769 376.109 83.4326 cv
376.109 85.0889 377.454 86.4326 379.109 86.4326 cv
380.766 86.4326 382.109 85.0889 382.109 83.4326 cv
ef
377.31 72.1528 mo
377.31 70.4971 375.966 69.1528 374.31 69.1528 cv
372.653 69.1528 371.31 70.4971 371.31 72.1528 cv
371.31 73.8091 372.653 75.1528 374.31 75.1528 cv
375.966 75.1528 377.31 73.8091 377.31 72.1528 cv
ef
372.75 50.313 mo
372.75 48.6567 371.406 47.313 369.75 47.313 cv
368.094 47.313 366.75 48.6567 366.75 50.313 cv
366.75 51.9688 368.094 53.313 369.75 53.313 cv
371.406 53.313 372.75 51.9688 372.75 50.313 cv
ef
367.95 21.5127 mo
367.95 19.8569 366.605 18.5127 364.95 18.5127 cv
363.294 18.5127 361.95 19.8569 361.95 21.5127 cv
361.95 23.1689 363.294 24.5127 364.95 24.5127 cv
366.605 24.5127 367.95 23.1689 367.95 21.5127 cv
ef
363.149 51.2729 mo
363.149 49.6167 361.806 48.2729 360.149 48.2729 cv
358.494 48.2729 357.149 49.6167 357.149 51.2729 cv
357.149 52.9287 358.494 54.2729 360.149 54.2729 cv
361.806 54.2729 363.149 52.9287 363.149 51.2729 cv
ef
358.01 97.9629 mo
451.26 97.9629 li
0 0 0 1 cmyk
@
363.149 49.353 mo
363.149 47.6968 361.806 46.353 360.149 46.353 cv
358.494 46.353 357.149 47.6968 357.149 49.353 cv
357.149 51.0088 358.494 52.353 360.149 52.353 cv
361.806 52.353 363.149 51.0088 363.149 49.353 cv
367.95 56.313 mo
367.95 54.6567 366.605 53.313 364.95 53.313 cv
363.294 53.313 361.95 54.6567 361.95 56.313 cv
361.95 57.9688 363.294 59.313 364.95 59.313 cv
366.605 59.313 367.95 57.9688 367.95 56.313 cv
372.75 64.9531 mo
372.75 63.2969 371.406 61.9531 369.75 61.9531 cv
368.094 61.9531 366.75 63.2969 366.75 64.9531 cv
366.75 66.6089 368.094 67.9531 369.75 67.9531 cv
371.406 67.9531 372.75 66.6089 372.75 64.9531 cv
377.31 74.793 mo
377.31 73.1367 375.966 71.793 374.31 71.793 cv
372.653 71.793 371.31 73.1367 371.31 74.793 cv
371.31 76.4487 372.653 77.793 374.31 77.793 cv
375.966 77.793 377.31 76.4487 377.31 74.793 cv
382.109 82.2329 mo
382.109 80.5767 380.766 79.2329 379.109 79.2329 cv
377.454 79.2329 376.109 80.5767 376.109 82.2329 cv
376.109 83.8887 377.454 85.2329 379.109 85.2329 cv
380.766 85.2329 382.109 83.8887 382.109 82.2329 cv
386.67 85.353 mo
386.67 83.6968 385.326 82.353 383.67 82.353 cv
382.014 82.353 380.67 83.6968 380.67 85.353 cv
380.67 87.0088 382.014 88.353 383.67 88.353 cv
385.326 88.353 386.67 87.0088 386.67 85.353 cv
391.229 88.4727 mo
391.229 86.8169 389.886 85.4727 388.229 85.4727 cv
386.574 85.4727 385.229 86.8169 385.229 88.4727 cv
385.229 90.1289 386.574 91.4727 388.229 91.4727 cv
389.886 91.4727 391.229 90.1289 391.229 88.4727 cv
396.029 90.6328 mo
396.029 88.9771 394.686 87.6328 393.029 87.6328 cv
391.374 87.6328 390.029 88.9771 390.029 90.6328 cv
390.029 92.2891 391.374 93.6328 393.029 93.6328 cv
394.686 93.6328 396.029 92.2891 396.029 90.6328 cv
400.83 91.7129 mo
400.83 90.0566 399.485 88.7129 397.83 88.7129 cv
396.174 88.7129 394.83 90.0566 394.83 91.7129 cv
394.83 93.3687 396.174 94.7129 397.83 94.7129 cv
399.485 94.7129 400.83 93.3687 400.83 91.7129 cv
405.149 92.5527 mo
405.149 90.897 403.806 89.5527 402.149 89.5527 cv
400.494 89.5527 399.149 90.897 399.149 92.5527 cv
399.149 94.209 400.494 95.5527 402.149 95.5527 cv
403.806 95.5527 405.149 94.209 405.149 92.5527 cv
409.95 93.0327 mo
409.95 91.377 408.605 90.0327 406.95 90.0327 cv
405.294 90.0327 403.95 91.377 403.95 93.0327 cv
403.95 94.689 405.294 96.0327 406.95 96.0327 cv
408.605 96.0327 409.95 94.689 409.95 93.0327 cv
414.51 93.5127 mo
414.51 91.8569 413.166 90.5127 411.51 90.5127 cv
409.854 90.5127 408.51 91.8569 408.51 93.5127 cv
408.51 95.1689 409.854 96.5127 411.51 96.5127 cv
413.166 96.5127 414.51 95.1689 414.51 93.5127 cv
419.31 93.7529 mo
419.31 92.0967 417.966 90.7529 416.31 90.7529 cv
414.653 90.7529 413.31 92.0967 413.31 93.7529 cv
413.31 95.4087 414.653 96.7529 416.31 96.7529 cv
417.966 96.7529 419.31 95.4087 419.31 93.7529 cv
424.109 93.9927 mo
424.109 92.3369 422.766 90.9927 421.109 90.9927 cv
419.454 90.9927 418.109 92.3369 418.109 93.9927 cv
418.109 95.6489 419.454 96.9927 421.109 96.9927 cv
422.766 96.9927 424.109 95.6489 424.109 93.9927 cv
428.43 94.2329 mo
428.43 92.5767 427.086 91.2329 425.43 91.2329 cv
423.773 91.2329 422.43 92.5767 422.43 94.2329 cv
422.43 95.8887 423.773 97.2329 425.43 97.2329 cv
427.086 97.2329 428.43 95.8887 428.43 94.2329 cv
433.229 94.4727 mo
433.229 92.8169 431.886 91.4727 430.229 91.4727 cv
428.574 91.4727 427.229 92.8169 427.229 94.4727 cv
427.229 96.1289 428.574 97.4727 430.229 97.4727 cv
431.886 97.4727 433.229 96.1289 433.229 94.4727 cv
438.029 94.9531 mo
438.029 93.2969 436.686 91.9531 435.029 91.9531 cv
433.374 91.9531 432.029 93.2969 432.029 94.9531 cv
432.029 96.6089 433.374 97.9531 435.029 97.9531 cv
436.686 97.9531 438.029 96.6089 438.029 94.9531 cv
442.59 95.1929 mo
442.59 93.5371 441.246 92.1929 439.59 92.1929 cv
437.934 92.1929 436.59 93.5371 436.59 95.1929 cv
436.59 96.8486 437.934 98.1929 439.59 98.1929 cv
441.246 98.1929 442.59 96.8486 442.59 95.1929 cv
447.149 95.9131 mo
447.149 94.2568 445.806 92.9131 444.149 92.9131 cv
442.494 92.9131 441.149 94.2568 441.149 95.9131 cv
441.149 97.5688 442.494 98.9131 444.149 98.9131 cv
445.806 98.9131 447.149 97.5688 447.149 95.9131 cv
451.95 96.3931 mo
451.95 94.7368 450.605 93.3931 448.95 93.3931 cv
447.294 93.3931 445.95 94.7368 445.95 96.3931 cv
445.95 98.0488 447.294 99.3931 448.95 99.3931 cv
450.605 99.3931 451.95 98.0488 451.95 96.3931 cv
456.51 96.6328 mo
456.51 94.9771 455.166 93.6328 453.51 93.6328 cv
451.854 93.6328 450.51 94.9771 450.51 96.6328 cv
450.51 98.2891 451.854 99.6328 453.51 99.6328 cv
455.166 99.6328 456.51 98.2891 456.51 96.6328 cv
461.31 97.1128 mo
461.31 95.457 459.966 94.1128 458.31 94.1128 cv
456.653 94.1128 455.31 95.457 455.31 97.1128 cv
455.31 98.769 456.653 100.113 458.31 100.113 cv
459.966 100.113 461.31 98.769 461.31 97.1128 cv
466.109 97.353 mo
466.109 95.6968 464.766 94.353 463.109 94.353 cv
461.454 94.353 460.109 95.6968 460.109 97.353 cv
460.109 99.0088 461.454 100.353 463.109 100.353 cv
464.766 100.353 466.109 99.0088 466.109 97.353 cv
470.43 97.353 mo
470.43 95.6968 469.086 94.353 467.43 94.353 cv
465.773 94.353 464.43 95.6968 464.43 97.353 cv
464.43 99.0088 465.773 100.353 467.43 100.353 cv
469.086 100.353 470.43 99.0088 470.43 97.353 cv
475.229 97.7129 mo
475.229 96.0566 473.886 94.7129 472.229 94.7129 cv
470.574 94.7129 469.229 96.0566 469.229 97.7129 cv
469.229 99.3687 470.574 100.713 472.229 100.713 cv
473.886 100.713 475.229 99.3687 475.229 97.7129 cv
479.79 97.7129 mo
479.79 96.0566 478.445 94.7129 476.79 94.7129 cv
475.134 94.7129 473.79 96.0566 473.79 97.7129 cv
473.79 99.3687 475.134 100.713 476.79 100.713 cv
478.445 100.713 479.79 99.3687 479.79 97.7129 cv
484.59 98.0728 mo
484.59 96.417 483.246 95.0728 481.59 95.0728 cv
479.934 95.0728 478.59 96.417 478.59 98.0728 cv
478.59 99.729 479.934 101.073 481.59 101.073 cv
483.246 101.073 484.59 99.729 484.59 98.0728 cv
489.149 98.0728 mo
489.149 96.417 487.806 95.0728 486.149 95.0728 cv
484.494 95.0728 483.149 96.417 483.149 98.0728 cv
483.149 99.729 484.494 101.073 486.149 101.073 cv
487.806 101.073 489.149 99.729 489.149 98.0728 cv
493.71 98.0728 mo
493.71 96.417 492.366 95.0728 490.71 95.0728 cv
489.054 95.0728 487.71 96.417 487.71 98.0728 cv
487.71 99.729 489.054 101.073 490.71 101.073 cv
492.366 101.073 493.71 99.729 493.71 98.0728 cv
498.51 98.0728 mo
498.51 96.417 497.166 95.0728 495.51 95.0728 cv
493.854 95.0728 492.51 96.417 492.51 98.0728 cv
492.51 99.729 493.854 101.073 495.51 101.073 cv
497.166 101.073 498.51 99.729 498.51 98.0728 cv
503.31 98.0728 mo
503.31 96.417 501.966 95.0728 500.31 95.0728 cv
498.653 95.0728 497.31 96.417 497.31 98.0728 cv
497.31 99.729 498.653 101.073 500.31 101.073 cv
501.966 101.073 503.31 99.729 503.31 98.0728 cv
507.87 98.0728 mo
507.87 96.417 506.525 95.0728 504.87 95.0728 cv
503.214 95.0728 501.87 96.417 501.87 98.0728 cv
501.87 99.729 503.214 101.073 504.87 101.073 cv
506.525 101.073 507.87 99.729 507.87 98.0728 cv
512.43 98.0728 mo
512.43 96.417 511.086 95.0728 509.43 95.0728 cv
507.773 95.0728 506.43 96.417 506.43 98.0728 cv
506.43 99.729 507.773 101.073 509.43 101.073 cv
511.086 101.073 512.43 99.729 512.43 98.0728 cv
.878019 .337896 1 .281529 cmyk
@
512.43 98.0728 mo
512.43 96.417 511.086 95.0728 509.43 95.0728 cv
507.773 95.0728 506.43 96.417 506.43 98.0728 cv
506.43 99.729 507.773 101.073 509.43 101.073 cv
511.086 101.073 512.43 99.729 512.43 98.0728 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
507.87 98.0728 mo
507.87 96.417 506.525 95.0728 504.87 95.0728 cv
503.214 95.0728 501.87 96.417 501.87 98.0728 cv
501.87 99.729 503.214 101.073 504.87 101.073 cv
506.525 101.073 507.87 99.729 507.87 98.0728 cv
ef
503.31 98.0728 mo
503.31 96.417 501.966 95.0728 500.31 95.0728 cv
498.653 95.0728 497.31 96.417 497.31 98.0728 cv
497.31 99.729 498.653 101.073 500.31 101.073 cv
501.966 101.073 503.31 99.729 503.31 98.0728 cv
ef
498.51 98.0728 mo
498.51 96.417 497.166 95.0728 495.51 95.0728 cv
493.854 95.0728 492.51 96.417 492.51 98.0728 cv
492.51 99.729 493.854 101.073 495.51 101.073 cv
497.166 101.073 498.51 99.729 498.51 98.0728 cv
ef
493.71 98.0728 mo
493.71 96.417 492.366 95.0728 490.71 95.0728 cv
489.054 95.0728 487.71 96.417 487.71 98.0728 cv
487.71 99.729 489.054 101.073 490.71 101.073 cv
492.366 101.073 493.71 99.729 493.71 98.0728 cv
ef
489.149 98.0728 mo
489.149 96.417 487.806 95.0728 486.149 95.0728 cv
484.494 95.0728 483.149 96.417 483.149 98.0728 cv
483.149 99.729 484.494 101.073 486.149 101.073 cv
487.806 101.073 489.149 99.729 489.149 98.0728 cv
ef
484.59 98.0728 mo
484.59 96.417 483.246 95.0728 481.59 95.0728 cv
479.934 95.0728 478.59 96.417 478.59 98.0728 cv
478.59 99.729 479.934 101.073 481.59 101.073 cv
483.246 101.073 484.59 99.729 484.59 98.0728 cv
ef
479.79 98.0728 mo
479.79 96.417 478.445 95.0728 476.79 95.0728 cv
475.134 95.0728 473.79 96.417 473.79 98.0728 cv
473.79 99.729 475.134 101.073 476.79 101.073 cv
478.445 101.073 479.79 99.729 479.79 98.0728 cv
ef
475.229 98.0728 mo
475.229 96.417 473.886 95.0728 472.229 95.0728 cv
470.574 95.0728 469.229 96.417 469.229 98.0728 cv
469.229 99.729 470.574 101.073 472.229 101.073 cv
473.886 101.073 475.229 99.729 475.229 98.0728 cv
ef
470.43 98.0728 mo
470.43 96.417 469.086 95.0728 467.43 95.0728 cv
465.773 95.0728 464.43 96.417 464.43 98.0728 cv
464.43 99.729 465.773 101.073 467.43 101.073 cv
469.086 101.073 470.43 99.729 470.43 98.0728 cv
ef
466.109 97.7129 mo
466.109 96.0566 464.766 94.7129 463.109 94.7129 cv
461.454 94.7129 460.109 96.0566 460.109 97.7129 cv
460.109 99.3687 461.454 100.713 463.109 100.713 cv
464.766 100.713 466.109 99.3687 466.109 97.7129 cv
ef
461.31 97.7129 mo
461.31 96.0566 459.966 94.7129 458.31 94.7129 cv
456.653 94.7129 455.31 96.0566 455.31 97.7129 cv
455.31 99.3687 456.653 100.713 458.31 100.713 cv
459.966 100.713 461.31 99.3687 461.31 97.7129 cv
ef
456.51 97.7129 mo
456.51 96.0566 455.166 94.7129 453.51 94.7129 cv
451.854 94.7129 450.51 96.0566 450.51 97.7129 cv
450.51 99.3687 451.854 100.713 453.51 100.713 cv
455.166 100.713 456.51 99.3687 456.51 97.7129 cv
ef
451.95 97.7129 mo
451.95 96.0566 450.605 94.7129 448.95 94.7129 cv
447.294 94.7129 445.95 96.0566 445.95 97.7129 cv
445.95 99.3687 447.294 100.713 448.95 100.713 cv
450.605 100.713 451.95 99.3687 451.95 97.7129 cv
ef
447.149 97.353 mo
447.149 95.6968 445.806 94.353 444.149 94.353 cv
442.494 94.353 441.149 95.6968 441.149 97.353 cv
441.149 99.0088 442.494 100.353 444.149 100.353 cv
445.806 100.353 447.149 99.0088 447.149 97.353 cv
ef
442.59 97.1128 mo
442.59 95.457 441.246 94.1128 439.59 94.1128 cv
437.934 94.1128 436.59 95.457 436.59 97.1128 cv
436.59 98.769 437.934 100.113 439.59 100.113 cv
441.246 100.113 442.59 98.769 442.59 97.1128 cv
ef
438.029 97.1128 mo
438.029 95.457 436.686 94.1128 435.029 94.1128 cv
433.374 94.1128 432.029 95.457 432.029 97.1128 cv
432.029 98.769 433.374 100.113 435.029 100.113 cv
436.686 100.113 438.029 98.769 438.029 97.1128 cv
ef
433.229 96.873 mo
433.229 95.2168 431.886 93.873 430.229 93.873 cv
428.574 93.873 427.229 95.2168 427.229 96.873 cv
427.229 98.5288 428.574 99.873 430.229 99.873 cv
431.886 99.873 433.229 98.5288 433.229 96.873 cv
ef
428.43 96.873 mo
428.43 95.2168 427.086 93.873 425.43 93.873 cv
423.773 93.873 422.43 95.2168 422.43 96.873 cv
422.43 98.5288 423.773 99.873 425.43 99.873 cv
427.086 99.873 428.43 98.5288 428.43 96.873 cv
ef
424.109 96.873 mo
424.109 95.2168 422.766 93.873 421.109 93.873 cv
419.454 93.873 418.109 95.2168 418.109 96.873 cv
418.109 98.5288 419.454 99.873 421.109 99.873 cv
422.766 99.873 424.109 98.5288 424.109 96.873 cv
ef
419.31 96.3931 mo
419.31 94.7368 417.966 93.3931 416.31 93.3931 cv
414.653 93.3931 413.31 94.7368 413.31 96.3931 cv
413.31 98.0488 414.653 99.3931 416.31 99.3931 cv
417.966 99.3931 419.31 98.0488 419.31 96.3931 cv
ef
414.51 96.1528 mo
414.51 94.4971 413.166 93.1528 411.51 93.1528 cv
409.854 93.1528 408.51 94.4971 408.51 96.1528 cv
408.51 97.8091 409.854 99.1528 411.51 99.1528 cv
413.166 99.1528 414.51 97.8091 414.51 96.1528 cv
ef
409.95 96.1528 mo
409.95 94.4971 408.605 93.1528 406.95 93.1528 cv
405.294 93.1528 403.95 94.4971 403.95 96.1528 cv
403.95 97.8091 405.294 99.1528 406.95 99.1528 cv
408.605 99.1528 409.95 97.8091 409.95 96.1528 cv
ef
405.149 95.6729 mo
405.149 94.0166 403.806 92.6729 402.149 92.6729 cv
400.494 92.6729 399.149 94.0166 399.149 95.6729 cv
399.149 97.3291 400.494 98.6729 402.149 98.6729 cv
403.806 98.6729 405.149 97.3291 405.149 95.6729 cv
ef
400.83 95.4326 mo
400.83 93.7769 399.485 92.4326 397.83 92.4326 cv
396.174 92.4326 394.83 93.7769 394.83 95.4326 cv
394.83 97.0889 396.174 98.4326 397.83 98.4326 cv
399.485 98.4326 400.83 97.0889 400.83 95.4326 cv
ef
396.029 94.4727 mo
396.029 92.8169 394.686 91.4727 393.029 91.4727 cv
391.374 91.4727 390.029 92.8169 390.029 94.4727 cv
390.029 96.1289 391.374 97.4727 393.029 97.4727 cv
394.686 97.4727 396.029 96.1289 396.029 94.4727 cv
ef
391.229 92.793 mo
391.229 91.1367 389.886 89.793 388.229 89.793 cv
386.574 89.793 385.229 91.1367 385.229 92.793 cv
385.229 94.4487 386.574 95.793 388.229 95.793 cv
389.886 95.793 391.229 94.4487 391.229 92.793 cv
ef
386.67 89.1929 mo
386.67 87.5371 385.326 86.1929 383.67 86.1929 cv
382.014 86.1929 380.67 87.5371 380.67 89.1929 cv
380.67 90.8486 382.014 92.1929 383.67 92.1929 cv
385.326 92.1929 386.67 90.8486 386.67 89.1929 cv
ef
382.109 83.4326 mo
382.109 81.7769 380.766 80.4326 379.109 80.4326 cv
377.454 80.4326 376.109 81.7769 376.109 83.4326 cv
376.109 85.0889 377.454 86.4326 379.109 86.4326 cv
380.766 86.4326 382.109 85.0889 382.109 83.4326 cv
ef
377.31 72.1528 mo
377.31 70.4971 375.966 69.1528 374.31 69.1528 cv
372.653 69.1528 371.31 70.4971 371.31 72.1528 cv
371.31 73.8091 372.653 75.1528 374.31 75.1528 cv
375.966 75.1528 377.31 73.8091 377.31 72.1528 cv
ef
372.75 50.313 mo
372.75 48.6567 371.406 47.313 369.75 47.313 cv
368.094 47.313 366.75 48.6567 366.75 50.313 cv
366.75 51.9688 368.094 53.313 369.75 53.313 cv
371.406 53.313 372.75 51.9688 372.75 50.313 cv
ef
367.95 21.5127 mo
367.95 19.8569 366.605 18.5127 364.95 18.5127 cv
363.294 18.5127 361.95 19.8569 361.95 21.5127 cv
361.95 23.1689 363.294 24.5127 364.95 24.5127 cv
366.605 24.5127 367.95 23.1689 367.95 21.5127 cv
ef
363.149 51.2729 mo
363.149 49.6167 361.806 48.2729 360.149 48.2729 cv
358.494 48.2729 357.149 49.6167 357.149 51.2729 cv
357.149 52.9287 358.494 54.2729 360.149 54.2729 cv
361.806 54.2729 363.149 52.9287 363.149 51.2729 cv
ef
56.668 206.463 mo
57.668 205.463 li
57.668 109.963 li
206.668 109.963 li
207.668 108.963 li
56.668 108.963 li
56.668 206.463 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
56.668 206.463 mo
207.668 206.463 li
56.668 206.463 mo
56.668 108.963 li
207.668 108.963 li
207.668 206.463 li
56.668 206.463 li
cp
0 0 0 1 cmyk
@
201.668 204.963 mo
201.668 206.463 li
195.918 203.463 mo
195.918 206.463 li
195.918 203.463 mo
195.918 206.463 li
190.168 204.963 mo
190.168 206.463 li
184.418 204.963 mo
184.418 206.463 li
178.418 204.963 mo
178.418 206.463 li
172.668 203.463 mo
172.668 206.463 li
166.918 204.963 mo
166.918 206.463 li
161.168 204.963 mo
161.168 206.463 li
155.418 204.963 mo
155.418 206.463 li
149.418 203.463 mo
149.418 206.463 li
143.668 204.963 mo
143.668 206.463 li
137.918 204.963 mo
137.918 206.463 li
132.168 204.963 mo
132.168 206.463 li
126.168 203.463 mo
126.168 206.463 li
120.418 204.963 mo
120.418 206.463 li
114.668 204.963 mo
114.668 206.463 li
108.918 204.963 mo
108.918 206.463 li
102.918 203.463 mo
102.918 206.463 li
97.168 204.963 mo
97.168 206.463 li
91.418 204.963 mo
91.418 206.463 li
85.668 204.963 mo
85.668 206.463 li
79.668 203.463 mo
79.668 206.463 li
73.918 204.963 mo
73.918 206.463 li
68.168 204.963 mo
68.168 206.463 li
62.418 204.963 mo
62.418 206.463 li
56.668 203.463 mo
56.668 206.463 li
@
56.668 206.463 mo
56.668 108.963 li
@
61.168 108.963 mo
56.668 108.963 li
61.168 206.463 mo
56.668 206.463 li
61.168 108.963 mo
56.668 108.963 li
58.918 111.713 mo
56.668 111.713 li
58.918 114.463 mo
56.668 114.463 li
58.918 116.963 mo
56.668 116.963 li
61.168 119.713 mo
56.668 119.713 li
58.918 122.463 mo
56.668 122.463 li
58.918 125.213 mo
56.668 125.213 li
58.918 127.963 mo
56.668 127.963 li
61.168 130.713 mo
56.668 130.713 li
58.918 133.213 mo
56.668 133.213 li
58.918 135.963 mo
56.668 135.963 li
58.918 138.713 mo
56.668 138.713 li
61.168 141.463 mo
56.668 141.463 li
58.918 144.213 mo
56.668 144.213 li
58.918 146.963 mo
56.668 146.963 li
58.918 149.463 mo
56.668 149.463 li
61.168 152.213 mo
56.668 152.213 li
58.918 154.963 mo
56.668 154.963 li
58.918 157.713 mo
56.668 157.713 li
58.918 160.463 mo
56.668 160.463 li
61.168 163.213 mo
56.668 163.213 li
58.918 165.713 mo
56.668 165.713 li
58.918 168.463 mo
56.668 168.463 li
58.918 171.213 mo
56.668 171.213 li
61.168 173.963 mo
56.668 173.963 li
58.918 176.713 mo
56.668 176.713 li
58.918 179.213 mo
56.668 179.213 li
58.918 181.963 mo
56.668 181.963 li
61.168 184.713 mo
56.668 184.713 li
58.918 187.463 mo
56.668 187.463 li
58.918 190.213 mo
56.668 190.213 li
58.918 192.963 mo
56.668 192.963 li
61.168 195.463 mo
56.668 195.463 li
58.918 198.213 mo
56.668 198.213 li
58.918 200.963 mo
56.668 200.963 li
58.918 203.713 mo
56.668 203.713 li
61.168 206.463 mo
56.668 206.463 li
@
.697627 .675227 .638575 .739559 cmyk
LSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf44.4258 200.213 mo(0)sh29.668 167.713 mo(0.)[10.0107 0 ]xsh44.6211 167.713 mo(6)sh29.668 135.963 mo(1.)[10.0107 0 ]xsh44.6211 135.963 mo(2)sh210.588 195.503 mo
210.588 193.847 209.244 192.503 207.588 192.503 cv
205.932 192.503 204.588 193.847 204.588 195.503 cv
204.588 197.16 205.932 198.503 207.588 198.503 cv
209.244 198.503 210.588 197.16 210.588 195.503 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
206.028 195.503 mo
206.028 193.847 204.684 192.503 203.028 192.503 cv
201.372 192.503 200.028 193.847 200.028 195.503 cv
200.028 197.16 201.372 198.503 203.028 198.503 cv
204.684 198.503 206.028 197.16 206.028 195.503 cv
ef
201.228 195.503 mo
201.228 193.847 199.884 192.503 198.228 192.503 cv
196.572 192.503 195.228 193.847 195.228 195.503 cv
195.228 197.16 196.572 198.503 198.228 198.503 cv
199.884 198.503 201.228 197.16 201.228 195.503 cv
ef
196.668 195.503 mo
196.668 193.847 195.324 192.503 193.668 192.503 cv
192.012 192.503 190.668 193.847 190.668 195.503 cv
190.668 197.16 192.012 198.503 193.668 198.503 cv
195.324 198.503 196.668 197.16 196.668 195.503 cv
ef
191.868 195.744 mo
191.868 194.087 190.524 192.744 188.868 192.744 cv
187.212 192.744 185.868 194.087 185.868 195.744 cv
185.868 197.399 187.212 198.744 188.868 198.744 cv
190.524 198.744 191.868 197.399 191.868 195.744 cv
ef
187.308 195.744 mo
187.308 194.087 185.964 192.744 184.308 192.744 cv
182.652 192.744 181.308 194.087 181.308 195.744 cv
181.308 197.399 182.652 198.744 184.308 198.744 cv
185.964 198.744 187.308 197.399 187.308 195.744 cv
ef
182.748 195.744 mo
182.748 194.087 181.404 192.744 179.748 192.744 cv
178.092 192.744 176.748 194.087 176.748 195.744 cv
176.748 197.399 178.092 198.744 179.748 198.744 cv
181.404 198.744 182.748 197.399 182.748 195.744 cv
ef
178.188 195.744 mo
178.188 194.087 176.844 192.744 175.188 192.744 cv
173.532 192.744 172.188 194.087 172.188 195.744 cv
172.188 197.399 173.532 198.744 175.188 198.744 cv
176.844 198.744 178.188 197.399 178.188 195.744 cv
ef
173.388 195.503 mo
173.388 193.847 172.044 192.503 170.388 192.503 cv
168.732 192.503 167.388 193.847 167.388 195.503 cv
167.388 197.16 168.732 198.503 170.388 198.503 cv
172.044 198.503 173.388 197.16 173.388 195.503 cv
ef
168.588 195.503 mo
168.588 193.847 167.244 192.503 165.588 192.503 cv
163.932 192.503 162.588 193.847 162.588 195.503 cv
162.588 197.16 163.932 198.503 165.588 198.503 cv
167.244 198.503 168.588 197.16 168.588 195.503 cv
ef
164.268 195.503 mo
164.268 193.847 162.924 192.503 161.268 192.503 cv
159.612 192.503 158.268 193.847 158.268 195.503 cv
158.268 197.16 159.612 198.503 161.268 198.503 cv
162.924 198.503 164.268 197.16 164.268 195.503 cv
ef
159.468 195.503 mo
159.468 193.847 158.124 192.503 156.468 192.503 cv
154.812 192.503 153.468 193.847 153.468 195.503 cv
153.468 197.16 154.812 198.503 156.468 198.503 cv
158.124 198.503 159.468 197.16 159.468 195.503 cv
ef
154.908 195.503 mo
154.908 193.847 153.564 192.503 151.908 192.503 cv
150.252 192.503 148.908 193.847 148.908 195.503 cv
148.908 197.16 150.252 198.503 151.908 198.503 cv
153.564 198.503 154.908 197.16 154.908 195.503 cv
ef
150.108 195.263 mo
150.108 193.607 148.764 192.263 147.108 192.263 cv
145.452 192.263 144.108 193.607 144.108 195.263 cv
144.108 196.919 145.452 198.263 147.108 198.263 cv
148.764 198.263 150.108 196.919 150.108 195.263 cv
ef
145.308 195.023 mo
145.308 193.368 143.964 192.023 142.308 192.023 cv
140.652 192.023 139.308 193.368 139.308 195.023 cv
139.308 196.679 140.652 198.023 142.308 198.023 cv
143.964 198.023 145.308 196.679 145.308 195.023 cv
ef
140.988 195.023 mo
140.988 193.368 139.644 192.023 137.988 192.023 cv
136.332 192.023 134.988 193.368 134.988 195.023 cv
134.988 196.679 136.332 198.023 137.988 198.023 cv
139.644 198.023 140.988 196.679 140.988 195.023 cv
ef
136.188 194.543 mo
136.188 192.887 134.844 191.543 133.188 191.543 cv
131.532 191.543 130.188 192.887 130.188 194.543 cv
130.188 196.2 131.532 197.543 133.188 197.543 cv
134.844 197.543 136.188 196.2 136.188 194.543 cv
ef
131.628 194.303 mo
131.628 192.647 130.284 191.303 128.628 191.303 cv
126.972 191.303 125.628 192.647 125.628 194.303 cv
125.628 195.959 126.972 197.303 128.628 197.303 cv
130.284 197.303 131.628 195.959 131.628 194.303 cv
ef
126.828 194.303 mo
126.828 192.647 125.484 191.303 123.828 191.303 cv
122.172 191.303 120.828 192.647 120.828 194.303 cv
120.828 195.959 122.172 197.303 123.828 197.303 cv
125.484 197.303 126.828 195.959 126.828 194.303 cv
ef
122.268 194.303 mo
122.268 192.647 120.924 191.303 119.268 191.303 cv
117.612 191.303 116.268 192.647 116.268 194.303 cv
116.268 195.959 117.612 197.303 119.268 197.303 cv
120.924 197.303 122.268 195.959 122.268 194.303 cv
ef
117.708 193.824 mo
117.708 192.167 116.364 190.824 114.708 190.824 cv
113.052 190.824 111.708 192.167 111.708 193.824 cv
111.708 195.479 113.052 196.824 114.708 196.824 cv
116.364 196.824 117.708 195.479 117.708 193.824 cv
ef
112.908 194.063 mo
112.908 192.408 111.564 191.063 109.908 191.063 cv
108.252 191.063 106.908 192.408 106.908 194.063 cv
106.908 195.719 108.252 197.063 109.908 197.063 cv
111.564 197.063 112.908 195.719 112.908 194.063 cv
ef
108.348 193.463 mo
108.348 191.807 107.004 190.463 105.348 190.463 cv
103.692 190.463 102.348 191.807 102.348 193.463 cv
102.348 195.12 103.692 196.463 105.348 196.463 cv
107.004 196.463 108.348 195.12 108.348 193.463 cv
ef
103.668 192.864 mo
103.668 191.208 102.324 189.864 100.668 189.864 cv
99.0117 189.864 97.668 191.208 97.668 192.864 cv
97.668 194.519 99.0117 195.864 100.668 195.864 cv
102.324 195.864 103.668 194.519 103.668 192.864 cv
ef
99.228 192.624 mo
99.228 190.967 97.8838 189.624 96.228 189.624 cv
94.5718 189.624 93.228 190.967 93.228 192.624 cv
93.228 194.28 94.5718 195.624 96.228 195.624 cv
97.8838 195.624 99.228 194.28 99.228 192.624 cv
ef
94.4277 191.183 mo
94.4277 189.528 93.084 188.183 91.4277 188.183 cv
89.772 188.183 88.4277 189.528 88.4277 191.183 cv
88.4277 192.839 89.772 194.183 91.4277 194.183 cv
93.084 194.183 94.4277 192.839 94.4277 191.183 cv
ef
89.6279 189.744 mo
89.6279 188.087 88.2842 186.744 86.6279 186.744 cv
84.9722 186.744 83.6279 188.087 83.6279 189.744 cv
83.6279 191.399 84.9722 192.744 86.6279 192.744 cv
88.2842 192.744 89.6279 191.399 89.6279 189.744 cv
ef
85.0679 186.383 mo
85.0679 184.727 83.7241 183.383 82.0679 183.383 cv
80.4121 183.383 79.0679 184.727 79.0679 186.383 cv
79.0679 188.04 80.4121 189.383 82.0679 189.383 cv
83.7241 189.383 85.0679 188.04 85.0679 186.383 cv
ef
80.5078 180.383 mo
80.5078 178.727 79.1641 177.383 77.5078 177.383 cv
75.8521 177.383 74.5078 178.727 74.5078 180.383 cv
74.5078 182.04 75.8521 183.383 77.5078 183.383 cv
79.1641 183.383 80.5078 182.04 80.5078 180.383 cv
ef
75.9478 167.904 mo
75.9478 166.248 74.604 164.904 72.9478 164.904 cv
71.292 164.904 69.9478 166.248 69.9478 167.904 cv
69.9478 169.559 71.292 170.904 72.9478 170.904 cv
74.604 170.904 75.9478 169.559 75.9478 167.904 cv
ef
71.1479 146.303 mo
71.1479 144.647 69.8037 143.303 68.1479 143.303 cv
66.4922 143.303 65.1479 144.647 65.1479 146.303 cv
65.1479 147.959 66.4922 149.303 68.1479 149.303 cv
69.8037 149.303 71.1479 147.959 71.1479 146.303 cv
ef
66.3481 120.624 mo
66.3481 118.967 65.0039 117.624 63.3481 117.624 cv
61.6919 117.624 60.3481 118.967 60.3481 120.624 cv
60.3481 122.279 61.6919 123.624 63.3481 123.624 cv
65.0039 123.624 66.3481 122.279 66.3481 120.624 cv
ef
62.0278 153.503 mo
62.0278 151.847 60.6841 150.503 59.0278 150.503 cv
57.3721 150.503 56.0278 151.847 56.0278 153.503 cv
56.0278 155.159 57.3721 156.503 59.0278 156.503 cv
60.6841 156.503 62.0278 155.159 62.0278 153.503 cv
ef
56.668 195.463 mo
149.418 195.463 li
0 0 0 1 cmyk
@
62.0278 145.823 mo
62.0278 144.167 60.6841 142.823 59.0278 142.823 cv
57.3721 142.823 56.0278 144.167 56.0278 145.823 cv
56.0278 147.479 57.3721 148.823 59.0278 148.823 cv
60.6841 148.823 62.0278 147.479 62.0278 145.823 cv
66.3481 153.263 mo
66.3481 151.607 65.0039 150.263 63.3481 150.263 cv
61.6919 150.263 60.3481 151.607 60.3481 153.263 cv
60.3481 154.919 61.6919 156.263 63.3481 156.263 cv
65.0039 156.263 66.3481 154.919 66.3481 153.263 cv
71.1479 162.143 mo
71.1479 160.488 69.8037 159.143 68.1479 159.143 cv
66.4922 159.143 65.1479 160.488 65.1479 162.143 cv
65.1479 163.799 66.4922 165.143 68.1479 165.143 cv
69.8037 165.143 71.1479 163.799 71.1479 162.143 cv
75.9478 171.503 mo
75.9478 169.847 74.604 168.503 72.9478 168.503 cv
71.292 168.503 69.9478 169.847 69.9478 171.503 cv
69.9478 173.16 71.292 174.503 72.9478 174.503 cv
74.604 174.503 75.9478 173.16 75.9478 171.503 cv
80.5078 178.704 mo
80.5078 177.047 79.1641 175.704 77.5078 175.704 cv
75.8521 175.704 74.5078 177.047 74.5078 178.704 cv
74.5078 180.36 75.8521 181.704 77.5078 181.704 cv
79.1641 181.704 80.5078 180.36 80.5078 178.704 cv
85.0679 183.263 mo
85.0679 181.607 83.7241 180.263 82.0679 180.263 cv
80.4121 180.263 79.0679 181.607 79.0679 183.263 cv
79.0679 184.919 80.4121 186.263 82.0679 186.263 cv
83.7241 186.263 85.0679 184.919 85.0679 183.263 cv
89.6279 185.904 mo
89.6279 184.248 88.2842 182.904 86.6279 182.904 cv
84.9722 182.904 83.6279 184.248 83.6279 185.904 cv
83.6279 187.559 84.9722 188.904 86.6279 188.904 cv
88.2842 188.904 89.6279 187.559 89.6279 185.904 cv
94.4277 188.063 mo
94.4277 186.408 93.084 185.063 91.4277 185.063 cv
89.772 185.063 88.4277 186.408 88.4277 188.063 cv
88.4277 189.719 89.772 191.063 91.4277 191.063 cv
93.084 191.063 94.4277 189.719 94.4277 188.063 cv
99.228 189.023 mo
99.228 187.368 97.8838 186.023 96.228 186.023 cv
94.5718 186.023 93.228 187.368 93.228 189.023 cv
93.228 190.679 94.5718 192.023 96.228 192.023 cv
97.8838 192.023 99.228 190.679 99.228 189.023 cv
103.668 189.983 mo
103.668 188.328 102.324 186.983 100.668 186.983 cv
99.0117 186.983 97.668 188.328 97.668 189.983 cv
97.668 191.639 99.0117 192.983 100.668 192.983 cv
102.324 192.983 103.668 191.639 103.668 189.983 cv
108.348 190.463 mo
108.348 188.807 107.004 187.463 105.348 187.463 cv
103.692 187.463 102.348 188.807 102.348 190.463 cv
102.348 192.12 103.692 193.463 105.348 193.463 cv
107.004 193.463 108.348 192.12 108.348 190.463 cv
112.908 190.944 mo
112.908 189.288 111.564 187.944 109.908 187.944 cv
108.252 187.944 106.908 189.288 106.908 190.944 cv
106.908 192.599 108.252 193.944 109.908 193.944 cv
111.564 193.944 112.908 192.599 112.908 190.944 cv
117.708 191.183 mo
117.708 189.528 116.364 188.183 114.708 188.183 cv
113.052 188.183 111.708 189.528 111.708 191.183 cv
111.708 192.839 113.052 194.183 114.708 194.183 cv
116.364 194.183 117.708 192.839 117.708 191.183 cv
122.268 191.664 mo
122.268 190.007 120.924 188.664 119.268 188.664 cv
117.612 188.664 116.268 190.007 116.268 191.664 cv
116.268 193.32 117.612 194.664 119.268 194.664 cv
120.924 194.664 122.268 193.32 122.268 191.664 cv
126.828 191.664 mo
126.828 190.007 125.484 188.664 123.828 188.664 cv
122.172 188.664 120.828 190.007 120.828 191.664 cv
120.828 193.32 122.172 194.664 123.828 194.664 cv
125.484 194.664 126.828 193.32 126.828 191.664 cv
131.628 191.664 mo
131.628 190.007 130.284 188.664 128.628 188.664 cv
126.972 188.664 125.628 190.007 125.628 191.664 cv
125.628 193.32 126.972 194.664 128.628 194.664 cv
130.284 194.664 131.628 193.32 131.628 191.664 cv
136.188 192.383 mo
136.188 190.727 134.844 189.383 133.188 189.383 cv
131.532 189.383 130.188 190.727 130.188 192.383 cv
130.188 194.04 131.532 195.383 133.188 195.383 cv
134.844 195.383 136.188 194.04 136.188 192.383 cv
140.988 192.624 mo
140.988 190.967 139.644 189.624 137.988 189.624 cv
136.332 189.624 134.988 190.967 134.988 192.624 cv
134.988 194.28 136.332 195.624 137.988 195.624 cv
139.644 195.624 140.988 194.28 140.988 192.624 cv
145.308 193.824 mo
145.308 192.167 143.964 190.824 142.308 190.824 cv
140.652 190.824 139.308 192.167 139.308 193.824 cv
139.308 195.479 140.652 196.824 142.308 196.824 cv
143.964 196.824 145.308 195.479 145.308 193.824 cv
150.108 194.303 mo
150.108 192.647 148.764 191.303 147.108 191.303 cv
145.452 191.303 144.108 192.647 144.108 194.303 cv
144.108 195.959 145.452 197.303 147.108 197.303 cv
148.764 197.303 150.108 195.959 150.108 194.303 cv
154.908 194.543 mo
154.908 192.887 153.564 191.543 151.908 191.543 cv
150.252 191.543 148.908 192.887 148.908 194.543 cv
148.908 196.2 150.252 197.543 151.908 197.543 cv
153.564 197.543 154.908 196.2 154.908 194.543 cv
159.468 194.784 mo
159.468 193.127 158.124 191.784 156.468 191.784 cv
154.812 191.784 153.468 193.127 153.468 194.784 cv
153.468 196.439 154.812 197.784 156.468 197.784 cv
158.124 197.784 159.468 196.439 159.468 194.784 cv
164.268 195.263 mo
164.268 193.607 162.924 192.263 161.268 192.263 cv
159.612 192.263 158.268 193.607 158.268 195.263 cv
158.268 196.919 159.612 198.263 161.268 198.263 cv
162.924 198.263 164.268 196.919 164.268 195.263 cv
168.588 195.263 mo
168.588 193.607 167.244 192.263 165.588 192.263 cv
163.932 192.263 162.588 193.607 162.588 195.263 cv
162.588 196.919 163.932 198.263 165.588 198.263 cv
167.244 198.263 168.588 196.919 168.588 195.263 cv
173.388 195.503 mo
173.388 193.847 172.044 192.503 170.388 192.503 cv
168.732 192.503 167.388 193.847 167.388 195.503 cv
167.388 197.16 168.732 198.503 170.388 198.503 cv
172.044 198.503 173.388 197.16 173.388 195.503 cv
178.188 195.503 mo
178.188 193.847 176.844 192.503 175.188 192.503 cv
173.532 192.503 172.188 193.847 172.188 195.503 cv
172.188 197.16 173.532 198.503 175.188 198.503 cv
176.844 198.503 178.188 197.16 178.188 195.503 cv
182.748 195.503 mo
182.748 193.847 181.404 192.503 179.748 192.503 cv
178.092 192.503 176.748 193.847 176.748 195.503 cv
176.748 197.16 178.092 198.503 179.748 198.503 cv
181.404 198.503 182.748 197.16 182.748 195.503 cv
187.308 195.503 mo
187.308 193.847 185.964 192.503 184.308 192.503 cv
182.652 192.503 181.308 193.847 181.308 195.503 cv
181.308 197.16 182.652 198.503 184.308 198.503 cv
185.964 198.503 187.308 197.16 187.308 195.503 cv
191.868 195.503 mo
191.868 193.847 190.524 192.503 188.868 192.503 cv
187.212 192.503 185.868 193.847 185.868 195.503 cv
185.868 197.16 187.212 198.503 188.868 198.503 cv
190.524 198.503 191.868 197.16 191.868 195.503 cv
196.668 195.503 mo
196.668 193.847 195.324 192.503 193.668 192.503 cv
192.012 192.503 190.668 193.847 190.668 195.503 cv
190.668 197.16 192.012 198.503 193.668 198.503 cv
195.324 198.503 196.668 197.16 196.668 195.503 cv
201.228 195.503 mo
201.228 193.847 199.884 192.503 198.228 192.503 cv
196.572 192.503 195.228 193.847 195.228 195.503 cv
195.228 197.16 196.572 198.503 198.228 198.503 cv
199.884 198.503 201.228 197.16 201.228 195.503 cv
206.028 195.503 mo
206.028 193.847 204.684 192.503 203.028 192.503 cv
201.372 192.503 200.028 193.847 200.028 195.503 cv
200.028 197.16 201.372 198.503 203.028 198.503 cv
204.684 198.503 206.028 197.16 206.028 195.503 cv
210.588 195.503 mo
210.588 193.847 209.244 192.503 207.588 192.503 cv
205.932 192.503 204.588 193.847 204.588 195.503 cv
204.588 197.16 205.932 198.503 207.588 198.503 cv
209.244 198.503 210.588 197.16 210.588 195.503 cv
.878019 .337896 1 .281529 cmyk
@
210.588 195.503 mo
210.588 193.847 209.244 192.503 207.588 192.503 cv
205.932 192.503 204.588 193.847 204.588 195.503 cv
204.588 197.16 205.932 198.503 207.588 198.503 cv
209.244 198.503 210.588 197.16 210.588 195.503 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
206.028 195.503 mo
206.028 193.847 204.684 192.503 203.028 192.503 cv
201.372 192.503 200.028 193.847 200.028 195.503 cv
200.028 197.16 201.372 198.503 203.028 198.503 cv
204.684 198.503 206.028 197.16 206.028 195.503 cv
ef
201.228 195.503 mo
201.228 193.847 199.884 192.503 198.228 192.503 cv
196.572 192.503 195.228 193.847 195.228 195.503 cv
195.228 197.16 196.572 198.503 198.228 198.503 cv
199.884 198.503 201.228 197.16 201.228 195.503 cv
ef
196.668 195.503 mo
196.668 193.847 195.324 192.503 193.668 192.503 cv
192.012 192.503 190.668 193.847 190.668 195.503 cv
190.668 197.16 192.012 198.503 193.668 198.503 cv
195.324 198.503 196.668 197.16 196.668 195.503 cv
ef
191.868 195.744 mo
191.868 194.087 190.524 192.744 188.868 192.744 cv
187.212 192.744 185.868 194.087 185.868 195.744 cv
185.868 197.399 187.212 198.744 188.868 198.744 cv
190.524 198.744 191.868 197.399 191.868 195.744 cv
ef
187.308 195.744 mo
187.308 194.087 185.964 192.744 184.308 192.744 cv
182.652 192.744 181.308 194.087 181.308 195.744 cv
181.308 197.399 182.652 198.744 184.308 198.744 cv
185.964 198.744 187.308 197.399 187.308 195.744 cv
ef
182.748 195.744 mo
182.748 194.087 181.404 192.744 179.748 192.744 cv
178.092 192.744 176.748 194.087 176.748 195.744 cv
176.748 197.399 178.092 198.744 179.748 198.744 cv
181.404 198.744 182.748 197.399 182.748 195.744 cv
ef
178.188 195.744 mo
178.188 194.087 176.844 192.744 175.188 192.744 cv
173.532 192.744 172.188 194.087 172.188 195.744 cv
172.188 197.399 173.532 198.744 175.188 198.744 cv
176.844 198.744 178.188 197.399 178.188 195.744 cv
ef
173.388 195.503 mo
173.388 193.847 172.044 192.503 170.388 192.503 cv
168.732 192.503 167.388 193.847 167.388 195.503 cv
167.388 197.16 168.732 198.503 170.388 198.503 cv
172.044 198.503 173.388 197.16 173.388 195.503 cv
ef
168.588 195.503 mo
168.588 193.847 167.244 192.503 165.588 192.503 cv
163.932 192.503 162.588 193.847 162.588 195.503 cv
162.588 197.16 163.932 198.503 165.588 198.503 cv
167.244 198.503 168.588 197.16 168.588 195.503 cv
ef
164.268 195.503 mo
164.268 193.847 162.924 192.503 161.268 192.503 cv
159.612 192.503 158.268 193.847 158.268 195.503 cv
158.268 197.16 159.612 198.503 161.268 198.503 cv
162.924 198.503 164.268 197.16 164.268 195.503 cv
ef
159.468 195.503 mo
159.468 193.847 158.124 192.503 156.468 192.503 cv
154.812 192.503 153.468 193.847 153.468 195.503 cv
153.468 197.16 154.812 198.503 156.468 198.503 cv
158.124 198.503 159.468 197.16 159.468 195.503 cv
ef
154.908 195.503 mo
154.908 193.847 153.564 192.503 151.908 192.503 cv
150.252 192.503 148.908 193.847 148.908 195.503 cv
148.908 197.16 150.252 198.503 151.908 198.503 cv
153.564 198.503 154.908 197.16 154.908 195.503 cv
ef
150.108 195.263 mo
150.108 193.607 148.764 192.263 147.108 192.263 cv
145.452 192.263 144.108 193.607 144.108 195.263 cv
144.108 196.919 145.452 198.263 147.108 198.263 cv
148.764 198.263 150.108 196.919 150.108 195.263 cv
ef
145.308 195.023 mo
145.308 193.368 143.964 192.023 142.308 192.023 cv
140.652 192.023 139.308 193.368 139.308 195.023 cv
139.308 196.679 140.652 198.023 142.308 198.023 cv
143.964 198.023 145.308 196.679 145.308 195.023 cv
ef
140.988 195.023 mo
140.988 193.368 139.644 192.023 137.988 192.023 cv
136.332 192.023 134.988 193.368 134.988 195.023 cv
134.988 196.679 136.332 198.023 137.988 198.023 cv
139.644 198.023 140.988 196.679 140.988 195.023 cv
ef
136.188 194.543 mo
136.188 192.887 134.844 191.543 133.188 191.543 cv
131.532 191.543 130.188 192.887 130.188 194.543 cv
130.188 196.2 131.532 197.543 133.188 197.543 cv
134.844 197.543 136.188 196.2 136.188 194.543 cv
ef
131.628 194.303 mo
131.628 192.647 130.284 191.303 128.628 191.303 cv
126.972 191.303 125.628 192.647 125.628 194.303 cv
125.628 195.959 126.972 197.303 128.628 197.303 cv
130.284 197.303 131.628 195.959 131.628 194.303 cv
ef
126.828 194.303 mo
126.828 192.647 125.484 191.303 123.828 191.303 cv
122.172 191.303 120.828 192.647 120.828 194.303 cv
120.828 195.959 122.172 197.303 123.828 197.303 cv
125.484 197.303 126.828 195.959 126.828 194.303 cv
ef
122.268 194.303 mo
122.268 192.647 120.924 191.303 119.268 191.303 cv
117.612 191.303 116.268 192.647 116.268 194.303 cv
116.268 195.959 117.612 197.303 119.268 197.303 cv
120.924 197.303 122.268 195.959 122.268 194.303 cv
ef
117.708 193.824 mo
117.708 192.167 116.364 190.824 114.708 190.824 cv
113.052 190.824 111.708 192.167 111.708 193.824 cv
111.708 195.479 113.052 196.824 114.708 196.824 cv
116.364 196.824 117.708 195.479 117.708 193.824 cv
ef
112.908 194.063 mo
112.908 192.408 111.564 191.063 109.908 191.063 cv
108.252 191.063 106.908 192.408 106.908 194.063 cv
106.908 195.719 108.252 197.063 109.908 197.063 cv
111.564 197.063 112.908 195.719 112.908 194.063 cv
ef
108.348 193.463 mo
108.348 191.807 107.004 190.463 105.348 190.463 cv
103.692 190.463 102.348 191.807 102.348 193.463 cv
102.348 195.12 103.692 196.463 105.348 196.463 cv
107.004 196.463 108.348 195.12 108.348 193.463 cv
ef
103.668 192.864 mo
103.668 191.208 102.324 189.864 100.668 189.864 cv
99.0117 189.864 97.668 191.208 97.668 192.864 cv
97.668 194.519 99.0117 195.864 100.668 195.864 cv
102.324 195.864 103.668 194.519 103.668 192.864 cv
ef
99.228 192.624 mo
99.228 190.967 97.8838 189.624 96.228 189.624 cv
94.5718 189.624 93.228 190.967 93.228 192.624 cv
93.228 194.28 94.5718 195.624 96.228 195.624 cv
97.8838 195.624 99.228 194.28 99.228 192.624 cv
ef
94.4277 191.183 mo
94.4277 189.528 93.084 188.183 91.4277 188.183 cv
89.772 188.183 88.4277 189.528 88.4277 191.183 cv
88.4277 192.839 89.772 194.183 91.4277 194.183 cv
93.084 194.183 94.4277 192.839 94.4277 191.183 cv
ef
89.6279 189.744 mo
89.6279 188.087 88.2842 186.744 86.6279 186.744 cv
84.9722 186.744 83.6279 188.087 83.6279 189.744 cv
83.6279 191.399 84.9722 192.744 86.6279 192.744 cv
88.2842 192.744 89.6279 191.399 89.6279 189.744 cv
ef
85.0679 186.383 mo
85.0679 184.727 83.7241 183.383 82.0679 183.383 cv
80.4121 183.383 79.0679 184.727 79.0679 186.383 cv
79.0679 188.04 80.4121 189.383 82.0679 189.383 cv
83.7241 189.383 85.0679 188.04 85.0679 186.383 cv
ef
80.5078 180.383 mo
80.5078 178.727 79.1641 177.383 77.5078 177.383 cv
75.8521 177.383 74.5078 178.727 74.5078 180.383 cv
74.5078 182.04 75.8521 183.383 77.5078 183.383 cv
79.1641 183.383 80.5078 182.04 80.5078 180.383 cv
ef
75.9478 167.904 mo
75.9478 166.248 74.604 164.904 72.9478 164.904 cv
71.292 164.904 69.9478 166.248 69.9478 167.904 cv
69.9478 169.559 71.292 170.904 72.9478 170.904 cv
74.604 170.904 75.9478 169.559 75.9478 167.904 cv
ef
71.1479 146.303 mo
71.1479 144.647 69.8037 143.303 68.1479 143.303 cv
66.4922 143.303 65.1479 144.647 65.1479 146.303 cv
65.1479 147.959 66.4922 149.303 68.1479 149.303 cv
69.8037 149.303 71.1479 147.959 71.1479 146.303 cv
ef
66.3481 120.624 mo
66.3481 118.967 65.0039 117.624 63.3481 117.624 cv
61.6919 117.624 60.3481 118.967 60.3481 120.624 cv
60.3481 122.279 61.6919 123.624 63.3481 123.624 cv
65.0039 123.624 66.3481 122.279 66.3481 120.624 cv
ef
62.0278 153.503 mo
62.0278 151.847 60.6841 150.503 59.0278 150.503 cv
57.3721 150.503 56.0278 151.847 56.0278 153.503 cv
56.0278 155.159 57.3721 156.503 59.0278 156.503 cv
60.6841 156.503 62.0278 155.159 62.0278 153.503 cv
ef
207.098 206.463 mo
208.098 205.463 li
208.098 109.963 li
357.098 109.963 li
358.098 108.963 li
207.098 108.963 li
207.098 206.463 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
207.098 206.463 mo
358.098 206.463 li
207.098 206.463 mo
207.098 108.963 li
358.098 108.963 li
358.098 206.463 li
207.098 206.463 li
cp
0 0 0 1 cmyk
@
352.348 204.963 mo
352.348 206.463 li
346.348 203.463 mo
346.348 206.463 li
346.348 203.463 mo
346.348 206.463 li
340.598 204.963 mo
340.598 206.463 li
334.848 204.963 mo
334.848 206.463 li
329.098 204.963 mo
329.098 206.463 li
323.098 203.463 mo
323.098 206.463 li
317.348 204.963 mo
317.348 206.463 li
311.598 204.963 mo
311.598 206.463 li
305.848 204.963 mo
305.848 206.463 li
299.848 203.463 mo
299.848 206.463 li
294.098 204.963 mo
294.098 206.463 li
288.348 204.963 mo
288.348 206.463 li
282.598 204.963 mo
282.598 206.463 li
276.598 203.463 mo
276.598 206.463 li
270.848 204.963 mo
270.848 206.463 li
265.098 204.963 mo
265.098 206.463 li
259.348 204.963 mo
259.348 206.463 li
253.598 203.463 mo
253.598 206.463 li
247.598 204.963 mo
247.598 206.463 li
241.848 204.963 mo
241.848 206.463 li
236.098 204.963 mo
236.098 206.463 li
230.348 203.463 mo
230.348 206.463 li
224.348 204.963 mo
224.348 206.463 li
218.598 204.963 mo
218.598 206.463 li
212.848 204.963 mo
212.848 206.463 li
207.098 203.463 mo
207.098 206.463 li
@
207.098 206.463 mo
207.098 108.963 li
@
211.598 108.963 mo
207.098 108.963 li
211.598 206.463 mo
207.098 206.463 li
211.598 108.963 mo
207.098 108.963 li
209.348 111.713 mo
207.098 111.713 li
209.348 114.463 mo
207.098 114.463 li
209.348 116.963 mo
207.098 116.963 li
211.598 119.713 mo
207.098 119.713 li
209.348 122.463 mo
207.098 122.463 li
209.348 125.213 mo
207.098 125.213 li
209.348 127.963 mo
207.098 127.963 li
211.598 130.713 mo
207.098 130.713 li
209.348 133.213 mo
207.098 133.213 li
209.348 135.963 mo
207.098 135.963 li
209.348 138.713 mo
207.098 138.713 li
211.598 141.463 mo
207.098 141.463 li
209.348 144.213 mo
207.098 144.213 li
209.348 146.963 mo
207.098 146.963 li
209.348 149.463 mo
207.098 149.463 li
211.598 152.213 mo
207.098 152.213 li
209.348 154.963 mo
207.098 154.963 li
209.348 157.713 mo
207.098 157.713 li
209.348 160.463 mo
207.098 160.463 li
211.598 163.213 mo
207.098 163.213 li
209.348 165.713 mo
207.098 165.713 li
209.348 168.463 mo
207.098 168.463 li
209.348 171.213 mo
207.098 171.213 li
211.598 173.963 mo
207.098 173.963 li
209.348 176.713 mo
207.098 176.713 li
209.348 179.213 mo
207.098 179.213 li
209.348 181.963 mo
207.098 181.963 li
211.598 184.713 mo
207.098 184.713 li
209.348 187.463 mo
207.098 187.463 li
209.348 190.213 mo
207.098 190.213 li
209.348 192.963 mo
207.098 192.963 li
211.598 195.463 mo
207.098 195.463 li
209.348 198.213 mo
207.098 198.213 li
209.348 200.963 mo
207.098 200.963 li
209.348 203.713 mo
207.098 203.713 li
211.598 206.463 mo
207.098 206.463 li
@
361.147 195.503 mo
361.147 193.847 359.804 192.503 358.147 192.503 cv
356.491 192.503 355.147 193.847 355.147 195.503 cv
355.147 197.16 356.491 198.503 358.147 198.503 cv
359.804 198.503 361.147 197.16 361.147 195.503 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.348 195.503 mo
356.348 193.847 355.004 192.503 353.348 192.503 cv
351.691 192.503 350.348 193.847 350.348 195.503 cv
350.348 197.16 351.691 198.503 353.348 198.503 cv
355.004 198.503 356.348 197.16 356.348 195.503 cv
ef
351.788 195.503 mo
351.788 193.847 350.443 192.503 348.788 192.503 cv
347.132 192.503 345.788 193.847 345.788 195.503 cv
345.788 197.16 347.132 198.503 348.788 198.503 cv
350.443 198.503 351.788 197.16 351.788 195.503 cv
ef
346.987 195.503 mo
346.987 193.847 345.644 192.503 343.987 192.503 cv
342.332 192.503 340.987 193.847 340.987 195.503 cv
340.987 197.16 342.332 198.503 343.987 198.503 cv
345.644 198.503 346.987 197.16 346.987 195.503 cv
ef
342.428 195.744 mo
342.428 194.087 341.084 192.744 339.428 192.744 cv
337.771 192.744 336.428 194.087 336.428 195.744 cv
336.428 197.399 337.771 198.744 339.428 198.744 cv
341.084 198.744 342.428 197.399 342.428 195.744 cv
ef
337.867 195.744 mo
337.867 194.087 336.523 192.744 334.867 192.744 cv
333.212 192.744 331.867 194.087 331.867 195.744 cv
331.867 197.399 333.212 198.744 334.867 198.744 cv
336.523 198.744 337.867 197.399 337.867 195.744 cv
ef
333.067 195.503 mo
333.067 193.847 331.724 192.503 330.067 192.503 cv
328.412 192.503 327.067 193.847 327.067 195.503 cv
327.067 197.16 328.412 198.503 330.067 198.503 cv
331.724 198.503 333.067 197.16 333.067 195.503 cv
ef
328.508 195.503 mo
328.508 193.847 327.164 192.503 325.508 192.503 cv
323.852 192.503 322.508 193.847 322.508 195.503 cv
322.508 197.16 323.852 198.503 325.508 198.503 cv
327.164 198.503 328.508 197.16 328.508 195.503 cv
ef
323.947 195.503 mo
323.947 193.847 322.604 192.503 320.947 192.503 cv
319.292 192.503 317.947 193.847 317.947 195.503 cv
317.947 197.16 319.292 198.503 320.947 198.503 cv
322.604 198.503 323.947 197.16 323.947 195.503 cv
ef
319.147 195.503 mo
319.147 193.847 317.804 192.503 316.147 192.503 cv
314.491 192.503 313.147 193.847 313.147 195.503 cv
313.147 197.16 314.491 198.503 316.147 198.503 cv
317.804 198.503 319.147 197.16 319.147 195.503 cv
ef
314.588 195.503 mo
314.588 193.847 313.244 192.503 311.588 192.503 cv
309.932 192.503 308.588 193.847 308.588 195.503 cv
308.588 197.16 309.932 198.503 311.588 198.503 cv
313.244 198.503 314.588 197.16 314.588 195.503 cv
ef
309.788 195.503 mo
309.788 193.847 308.443 192.503 306.788 192.503 cv
305.132 192.503 303.788 193.847 303.788 195.503 cv
303.788 197.16 305.132 198.503 306.788 198.503 cv
308.443 198.503 309.788 197.16 309.788 195.503 cv
ef
305.348 195.263 mo
305.348 193.607 304.004 192.263 302.348 192.263 cv
300.691 192.263 299.348 193.607 299.348 195.263 cv
299.348 196.919 300.691 198.263 302.348 198.263 cv
304.004 198.263 305.348 196.919 305.348 195.263 cv
ef
300.668 195.023 mo
300.668 193.368 299.323 192.023 297.668 192.023 cv
296.012 192.023 294.668 193.368 294.668 195.023 cv
294.668 196.679 296.012 198.023 297.668 198.023 cv
299.323 198.023 300.668 196.679 300.668 195.023 cv
ef
296.107 195.023 mo
296.107 193.368 294.764 192.023 293.107 192.023 cv
291.451 192.023 290.107 193.368 290.107 195.023 cv
290.107 196.679 291.451 198.023 293.107 198.023 cv
294.764 198.023 296.107 196.679 296.107 195.023 cv
ef
291.308 194.784 mo
291.308 193.127 289.964 191.784 288.308 191.784 cv
286.651 191.784 285.308 193.127 285.308 194.784 cv
285.308 196.439 286.651 197.784 288.308 197.784 cv
289.964 197.784 291.308 196.439 291.308 194.784 cv
ef
286.508 194.303 mo
286.508 192.647 285.164 191.303 283.508 191.303 cv
281.852 191.303 280.508 192.647 280.508 194.303 cv
280.508 195.959 281.852 197.303 283.508 197.303 cv
285.164 197.303 286.508 195.959 286.508 194.303 cv
ef
282.188 194.303 mo
282.188 192.647 280.844 191.303 279.188 191.303 cv
277.532 191.303 276.188 192.647 276.188 194.303 cv
276.188 195.959 277.532 197.303 279.188 197.303 cv
280.844 197.303 282.188 195.959 282.188 194.303 cv
ef
277.388 194.063 mo
277.388 192.408 276.043 191.063 274.388 191.063 cv
272.731 191.063 271.388 192.408 271.388 194.063 cv
271.388 195.719 272.731 197.063 274.388 197.063 cv
276.043 197.063 277.388 195.719 277.388 194.063 cv
ef
272.828 194.063 mo
272.828 192.408 271.483 191.063 269.828 191.063 cv
268.172 191.063 266.828 192.408 266.828 194.063 cv
266.828 195.719 268.172 197.063 269.828 197.063 cv
271.483 197.063 272.828 195.719 272.828 194.063 cv
ef
268.028 194.063 mo
268.028 192.408 266.684 191.063 265.028 191.063 cv
263.372 191.063 262.028 192.408 262.028 194.063 cv
262.028 195.719 263.372 197.063 265.028 197.063 cv
266.684 197.063 268.028 195.719 268.028 194.063 cv
ef
263.348 193.824 mo
263.348 192.167 262.004 190.824 260.348 190.824 cv
258.691 190.824 257.348 192.167 257.348 193.824 cv
257.348 195.479 258.691 196.824 260.348 196.824 cv
262.004 196.824 263.348 195.479 263.348 193.824 cv
ef
258.908 192.624 mo
258.908 190.967 257.563 189.624 255.908 189.624 cv
254.251 189.624 252.908 190.967 252.908 192.624 cv
252.908 194.28 254.251 195.624 255.908 195.624 cv
257.563 195.624 258.908 194.28 258.908 192.624 cv
ef
254.107 192.624 mo
254.107 190.967 252.764 189.624 251.107 189.624 cv
249.452 189.624 248.107 190.967 248.107 192.624 cv
248.107 194.28 249.452 195.624 251.107 195.624 cv
252.764 195.624 254.107 194.28 254.107 192.624 cv
ef
249.548 191.664 mo
249.548 190.007 248.204 188.664 246.548 188.664 cv
244.892 188.664 243.548 190.007 243.548 191.664 cv
243.548 193.32 244.892 194.664 246.548 194.664 cv
248.204 194.664 249.548 193.32 249.548 191.664 cv
ef
244.748 190.463 mo
244.748 188.807 243.404 187.463 241.748 187.463 cv
240.092 187.463 238.748 188.807 238.748 190.463 cv
238.748 192.12 240.092 193.463 241.748 193.463 cv
243.404 193.463 244.748 192.12 244.748 190.463 cv
ef
240.188 189.023 mo
240.188 187.368 238.844 186.023 237.188 186.023 cv
235.532 186.023 234.188 187.368 234.188 189.023 cv
234.188 190.679 235.532 192.023 237.188 192.023 cv
238.844 192.023 240.188 190.679 240.188 189.023 cv
ef
235.627 185.664 mo
235.627 184.007 234.284 182.664 232.627 182.664 cv
230.972 182.664 229.627 184.007 229.627 185.664 cv
229.627 187.32 230.972 188.664 232.627 188.664 cv
234.284 188.664 235.627 187.32 235.627 185.664 cv
ef
230.828 178.944 mo
230.828 177.288 229.483 175.944 227.828 175.944 cv
226.172 175.944 224.828 177.288 224.828 178.944 cv
224.828 180.599 226.172 181.944 227.828 181.944 cv
229.483 181.944 230.828 180.599 230.828 178.944 cv
ef
226.268 166.463 mo
226.268 164.807 224.924 163.463 223.268 163.463 cv
221.612 163.463 220.268 164.807 220.268 166.463 cv
220.268 168.12 221.612 169.463 223.268 169.463 cv
224.924 169.463 226.268 168.12 226.268 166.463 cv
ef
221.708 147.263 mo
221.708 145.607 220.364 144.263 218.708 144.263 cv
217.052 144.263 215.708 145.607 215.708 147.263 cv
215.708 148.919 217.052 150.263 218.708 150.263 cv
220.364 150.263 221.708 148.919 221.708 147.263 cv
ef
217.147 122.783 mo
217.147 121.127 215.804 119.783 214.147 119.783 cv
212.492 119.783 211.147 121.127 211.147 122.783 cv
211.147 124.439 212.492 125.783 214.147 125.783 cv
215.804 125.783 217.147 124.439 217.147 122.783 cv
ef
212.348 157.104 mo
212.348 155.447 211.004 154.104 209.348 154.104 cv
207.691 154.104 206.348 155.447 206.348 157.104 cv
206.348 158.759 207.691 160.103 209.348 160.103 cv
211.004 160.103 212.348 158.759 212.348 157.104 cv
ef
207.098 195.463 mo
299.848 195.463 li
0 0 0 1 cmyk
@
212.348 143.903 mo
212.348 142.248 211.004 140.903 209.348 140.903 cv
207.691 140.903 206.348 142.248 206.348 143.903 cv
206.348 145.56 207.691 146.903 209.348 146.903 cv
211.004 146.903 212.348 145.56 212.348 143.903 cv
217.147 153.503 mo
217.147 151.847 215.804 150.503 214.147 150.503 cv
212.492 150.503 211.147 151.847 211.147 153.503 cv
211.147 155.159 212.492 156.503 214.147 156.503 cv
215.804 156.503 217.147 155.159 217.147 153.503 cv
221.708 161.664 mo
221.708 160.007 220.364 158.664 218.708 158.664 cv
217.052 158.664 215.708 160.007 215.708 161.664 cv
215.708 163.32 217.052 164.664 218.708 164.664 cv
220.364 164.664 221.708 163.32 221.708 161.664 cv
226.268 171.023 mo
226.268 169.368 224.924 168.023 223.268 168.023 cv
221.612 168.023 220.268 169.368 220.268 171.023 cv
220.268 172.679 221.612 174.023 223.268 174.023 cv
224.924 174.023 226.268 172.679 226.268 171.023 cv
230.828 178.463 mo
230.828 176.807 229.483 175.463 227.828 175.463 cv
226.172 175.463 224.828 176.807 224.828 178.463 cv
224.828 180.12 226.172 181.463 227.828 181.463 cv
229.483 181.463 230.828 180.12 230.828 178.463 cv
235.627 183.263 mo
235.627 181.607 234.284 180.263 232.627 180.263 cv
230.972 180.263 229.627 181.607 229.627 183.263 cv
229.627 184.919 230.972 186.263 232.627 186.263 cv
234.284 186.263 235.627 184.919 235.627 183.263 cv
240.188 185.664 mo
240.188 184.007 238.844 182.664 237.188 182.664 cv
235.532 182.664 234.188 184.007 234.188 185.664 cv
234.188 187.32 235.532 188.664 237.188 188.664 cv
238.844 188.664 240.188 187.32 240.188 185.664 cv
244.748 187.824 mo
244.748 186.167 243.404 184.824 241.748 184.824 cv
240.092 184.824 238.748 186.167 238.748 187.824 cv
238.748 189.479 240.092 190.824 241.748 190.824 cv
243.404 190.824 244.748 189.479 244.748 187.824 cv
249.548 189.023 mo
249.548 187.368 248.204 186.023 246.548 186.023 cv
244.892 186.023 243.548 187.368 243.548 189.023 cv
243.548 190.679 244.892 192.023 246.548 192.023 cv
248.204 192.023 249.548 190.679 249.548 189.023 cv
254.107 189.744 mo
254.107 188.087 252.764 186.744 251.107 186.744 cv
249.452 186.744 248.107 188.087 248.107 189.744 cv
248.107 191.399 249.452 192.744 251.107 192.744 cv
252.764 192.744 254.107 191.399 254.107 189.744 cv
258.908 190.463 mo
258.908 188.807 257.563 187.463 255.908 187.463 cv
254.251 187.463 252.908 188.807 252.908 190.463 cv
252.908 192.12 254.251 193.463 255.908 193.463 cv
257.563 193.463 258.908 192.12 258.908 190.463 cv
263.348 190.704 mo
263.348 189.047 262.004 187.704 260.348 187.704 cv
258.691 187.704 257.348 189.047 257.348 190.704 cv
257.348 192.36 258.691 193.704 260.348 193.704 cv
262.004 193.704 263.348 192.36 263.348 190.704 cv
268.028 191.183 mo
268.028 189.528 266.684 188.183 265.028 188.183 cv
263.372 188.183 262.028 189.528 262.028 191.183 cv
262.028 192.839 263.372 194.183 265.028 194.183 cv
266.684 194.183 268.028 192.839 268.028 191.183 cv
272.828 191.423 mo
272.828 189.767 271.483 188.423 269.828 188.423 cv
268.172 188.423 266.828 189.767 266.828 191.423 cv
266.828 193.08 268.172 194.423 269.828 194.423 cv
271.483 194.423 272.828 193.08 272.828 191.423 cv
277.388 191.664 mo
277.388 190.007 276.043 188.664 274.388 188.664 cv
272.731 188.664 271.388 190.007 271.388 191.664 cv
271.388 193.32 272.731 194.664 274.388 194.664 cv
276.043 194.664 277.388 193.32 277.388 191.664 cv
282.188 191.904 mo
282.188 190.248 280.844 188.904 279.188 188.904 cv
277.532 188.904 276.188 190.248 276.188 191.904 cv
276.188 193.559 277.532 194.904 279.188 194.904 cv
280.844 194.904 282.188 193.559 282.188 191.904 cv
286.508 192.143 mo
286.508 190.488 285.164 189.143 283.508 189.143 cv
281.852 189.143 280.508 190.488 280.508 192.143 cv
280.508 193.799 281.852 195.143 283.508 195.143 cv
285.164 195.143 286.508 193.799 286.508 192.143 cv
291.308 192.864 mo
291.308 191.208 289.964 189.864 288.308 189.864 cv
286.651 189.864 285.308 191.208 285.308 192.864 cv
285.308 194.519 286.651 195.864 288.308 195.864 cv
289.964 195.864 291.308 194.519 291.308 192.864 cv
296.107 193.824 mo
296.107 192.167 294.764 190.824 293.107 190.824 cv
291.451 190.824 290.107 192.167 290.107 193.824 cv
290.107 195.479 291.451 196.824 293.107 196.824 cv
294.764 196.824 296.107 195.479 296.107 193.824 cv
300.668 194.303 mo
300.668 192.647 299.323 191.303 297.668 191.303 cv
296.012 191.303 294.668 192.647 294.668 194.303 cv
294.668 195.959 296.012 197.303 297.668 197.303 cv
299.323 197.303 300.668 195.959 300.668 194.303 cv
305.348 194.543 mo
305.348 192.887 304.004 191.543 302.348 191.543 cv
300.691 191.543 299.348 192.887 299.348 194.543 cv
299.348 196.2 300.691 197.543 302.348 197.543 cv
304.004 197.543 305.348 196.2 305.348 194.543 cv
309.788 195.023 mo
309.788 193.368 308.443 192.023 306.788 192.023 cv
305.132 192.023 303.788 193.368 303.788 195.023 cv
303.788 196.679 305.132 198.023 306.788 198.023 cv
308.443 198.023 309.788 196.679 309.788 195.023 cv
314.588 195.263 mo
314.588 193.607 313.244 192.263 311.588 192.263 cv
309.932 192.263 308.588 193.607 308.588 195.263 cv
308.588 196.919 309.932 198.263 311.588 198.263 cv
313.244 198.263 314.588 196.919 314.588 195.263 cv
319.147 195.263 mo
319.147 193.607 317.804 192.263 316.147 192.263 cv
314.491 192.263 313.147 193.607 313.147 195.263 cv
313.147 196.919 314.491 198.263 316.147 198.263 cv
317.804 198.263 319.147 196.919 319.147 195.263 cv
323.947 195.503 mo
323.947 193.847 322.604 192.503 320.947 192.503 cv
319.292 192.503 317.947 193.847 317.947 195.503 cv
317.947 197.16 319.292 198.503 320.947 198.503 cv
322.604 198.503 323.947 197.16 323.947 195.503 cv
328.508 195.503 mo
328.508 193.847 327.164 192.503 325.508 192.503 cv
323.852 192.503 322.508 193.847 322.508 195.503 cv
322.508 197.16 323.852 198.503 325.508 198.503 cv
327.164 198.503 328.508 197.16 328.508 195.503 cv
333.067 195.503 mo
333.067 193.847 331.724 192.503 330.067 192.503 cv
328.412 192.503 327.067 193.847 327.067 195.503 cv
327.067 197.16 328.412 198.503 330.067 198.503 cv
331.724 198.503 333.067 197.16 333.067 195.503 cv
337.867 195.503 mo
337.867 193.847 336.523 192.503 334.867 192.503 cv
333.212 192.503 331.867 193.847 331.867 195.503 cv
331.867 197.16 333.212 198.503 334.867 198.503 cv
336.523 198.503 337.867 197.16 337.867 195.503 cv
342.428 195.503 mo
342.428 193.847 341.084 192.503 339.428 192.503 cv
337.771 192.503 336.428 193.847 336.428 195.503 cv
336.428 197.16 337.771 198.503 339.428 198.503 cv
341.084 198.503 342.428 197.16 342.428 195.503 cv
346.987 195.503 mo
346.987 193.847 345.644 192.503 343.987 192.503 cv
342.332 192.503 340.987 193.847 340.987 195.503 cv
340.987 197.16 342.332 198.503 343.987 198.503 cv
345.644 198.503 346.987 197.16 346.987 195.503 cv
351.788 195.503 mo
351.788 193.847 350.443 192.503 348.788 192.503 cv
347.132 192.503 345.788 193.847 345.788 195.503 cv
345.788 197.16 347.132 198.503 348.788 198.503 cv
350.443 198.503 351.788 197.16 351.788 195.503 cv
356.348 195.503 mo
356.348 193.847 355.004 192.503 353.348 192.503 cv
351.691 192.503 350.348 193.847 350.348 195.503 cv
350.348 197.16 351.691 198.503 353.348 198.503 cv
355.004 198.503 356.348 197.16 356.348 195.503 cv
361.147 195.503 mo
361.147 193.847 359.804 192.503 358.147 192.503 cv
356.491 192.503 355.147 193.847 355.147 195.503 cv
355.147 197.16 356.491 198.503 358.147 198.503 cv
359.804 198.503 361.147 197.16 361.147 195.503 cv
.878019 .337896 1 .281529 cmyk
@
361.147 195.503 mo
361.147 193.847 359.804 192.503 358.147 192.503 cv
356.491 192.503 355.147 193.847 355.147 195.503 cv
355.147 197.16 356.491 198.503 358.147 198.503 cv
359.804 198.503 361.147 197.16 361.147 195.503 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.348 195.503 mo
356.348 193.847 355.004 192.503 353.348 192.503 cv
351.691 192.503 350.348 193.847 350.348 195.503 cv
350.348 197.16 351.691 198.503 353.348 198.503 cv
355.004 198.503 356.348 197.16 356.348 195.503 cv
ef
351.788 195.503 mo
351.788 193.847 350.443 192.503 348.788 192.503 cv
347.132 192.503 345.788 193.847 345.788 195.503 cv
345.788 197.16 347.132 198.503 348.788 198.503 cv
350.443 198.503 351.788 197.16 351.788 195.503 cv
ef
346.987 195.503 mo
346.987 193.847 345.644 192.503 343.987 192.503 cv
342.332 192.503 340.987 193.847 340.987 195.503 cv
340.987 197.16 342.332 198.503 343.987 198.503 cv
345.644 198.503 346.987 197.16 346.987 195.503 cv
ef
342.428 195.744 mo
342.428 194.087 341.084 192.744 339.428 192.744 cv
337.771 192.744 336.428 194.087 336.428 195.744 cv
336.428 197.399 337.771 198.744 339.428 198.744 cv
341.084 198.744 342.428 197.399 342.428 195.744 cv
ef
337.867 195.744 mo
337.867 194.087 336.523 192.744 334.867 192.744 cv
333.212 192.744 331.867 194.087 331.867 195.744 cv
331.867 197.399 333.212 198.744 334.867 198.744 cv
336.523 198.744 337.867 197.399 337.867 195.744 cv
ef
333.067 195.503 mo
333.067 193.847 331.724 192.503 330.067 192.503 cv
328.412 192.503 327.067 193.847 327.067 195.503 cv
327.067 197.16 328.412 198.503 330.067 198.503 cv
331.724 198.503 333.067 197.16 333.067 195.503 cv
ef
328.508 195.503 mo
328.508 193.847 327.164 192.503 325.508 192.503 cv
323.852 192.503 322.508 193.847 322.508 195.503 cv
322.508 197.16 323.852 198.503 325.508 198.503 cv
327.164 198.503 328.508 197.16 328.508 195.503 cv
ef
323.947 195.503 mo
323.947 193.847 322.604 192.503 320.947 192.503 cv
319.292 192.503 317.947 193.847 317.947 195.503 cv
317.947 197.16 319.292 198.503 320.947 198.503 cv
322.604 198.503 323.947 197.16 323.947 195.503 cv
ef
319.147 195.503 mo
319.147 193.847 317.804 192.503 316.147 192.503 cv
314.491 192.503 313.147 193.847 313.147 195.503 cv
313.147 197.16 314.491 198.503 316.147 198.503 cv
317.804 198.503 319.147 197.16 319.147 195.503 cv
ef
314.588 195.503 mo
314.588 193.847 313.244 192.503 311.588 192.503 cv
309.932 192.503 308.588 193.847 308.588 195.503 cv
308.588 197.16 309.932 198.503 311.588 198.503 cv
313.244 198.503 314.588 197.16 314.588 195.503 cv
ef
309.788 195.503 mo
309.788 193.847 308.443 192.503 306.788 192.503 cv
305.132 192.503 303.788 193.847 303.788 195.503 cv
303.788 197.16 305.132 198.503 306.788 198.503 cv
308.443 198.503 309.788 197.16 309.788 195.503 cv
ef
305.348 195.263 mo
305.348 193.607 304.004 192.263 302.348 192.263 cv
300.691 192.263 299.348 193.607 299.348 195.263 cv
299.348 196.919 300.691 198.263 302.348 198.263 cv
304.004 198.263 305.348 196.919 305.348 195.263 cv
ef
300.668 195.023 mo
300.668 193.368 299.323 192.023 297.668 192.023 cv
296.012 192.023 294.668 193.368 294.668 195.023 cv
294.668 196.679 296.012 198.023 297.668 198.023 cv
299.323 198.023 300.668 196.679 300.668 195.023 cv
ef
296.107 195.023 mo
296.107 193.368 294.764 192.023 293.107 192.023 cv
291.451 192.023 290.107 193.368 290.107 195.023 cv
290.107 196.679 291.451 198.023 293.107 198.023 cv
294.764 198.023 296.107 196.679 296.107 195.023 cv
ef
291.308 194.784 mo
291.308 193.127 289.964 191.784 288.308 191.784 cv
286.651 191.784 285.308 193.127 285.308 194.784 cv
285.308 196.439 286.651 197.784 288.308 197.784 cv
289.964 197.784 291.308 196.439 291.308 194.784 cv
ef
286.508 194.303 mo
286.508 192.647 285.164 191.303 283.508 191.303 cv
281.852 191.303 280.508 192.647 280.508 194.303 cv
280.508 195.959 281.852 197.303 283.508 197.303 cv
285.164 197.303 286.508 195.959 286.508 194.303 cv
ef
282.188 194.303 mo
282.188 192.647 280.844 191.303 279.188 191.303 cv
277.532 191.303 276.188 192.647 276.188 194.303 cv
276.188 195.959 277.532 197.303 279.188 197.303 cv
280.844 197.303 282.188 195.959 282.188 194.303 cv
ef
277.388 194.063 mo
277.388 192.408 276.043 191.063 274.388 191.063 cv
272.731 191.063 271.388 192.408 271.388 194.063 cv
271.388 195.719 272.731 197.063 274.388 197.063 cv
276.043 197.063 277.388 195.719 277.388 194.063 cv
ef
272.828 194.063 mo
272.828 192.408 271.483 191.063 269.828 191.063 cv
268.172 191.063 266.828 192.408 266.828 194.063 cv
266.828 195.719 268.172 197.063 269.828 197.063 cv
271.483 197.063 272.828 195.719 272.828 194.063 cv
ef
268.028 194.063 mo
268.028 192.408 266.684 191.063 265.028 191.063 cv
263.372 191.063 262.028 192.408 262.028 194.063 cv
262.028 195.719 263.372 197.063 265.028 197.063 cv
266.684 197.063 268.028 195.719 268.028 194.063 cv
ef
263.348 193.824 mo
263.348 192.167 262.004 190.824 260.348 190.824 cv
258.691 190.824 257.348 192.167 257.348 193.824 cv
257.348 195.479 258.691 196.824 260.348 196.824 cv
262.004 196.824 263.348 195.479 263.348 193.824 cv
ef
258.908 192.624 mo
258.908 190.967 257.563 189.624 255.908 189.624 cv
254.251 189.624 252.908 190.967 252.908 192.624 cv
252.908 194.28 254.251 195.624 255.908 195.624 cv
257.563 195.624 258.908 194.28 258.908 192.624 cv
ef
254.107 192.624 mo
254.107 190.967 252.764 189.624 251.107 189.624 cv
249.452 189.624 248.107 190.967 248.107 192.624 cv
248.107 194.28 249.452 195.624 251.107 195.624 cv
252.764 195.624 254.107 194.28 254.107 192.624 cv
ef
249.548 191.664 mo
249.548 190.007 248.204 188.664 246.548 188.664 cv
244.892 188.664 243.548 190.007 243.548 191.664 cv
243.548 193.32 244.892 194.664 246.548 194.664 cv
248.204 194.664 249.548 193.32 249.548 191.664 cv
ef
244.748 190.463 mo
244.748 188.807 243.404 187.463 241.748 187.463 cv
240.092 187.463 238.748 188.807 238.748 190.463 cv
238.748 192.12 240.092 193.463 241.748 193.463 cv
243.404 193.463 244.748 192.12 244.748 190.463 cv
ef
240.188 189.023 mo
240.188 187.368 238.844 186.023 237.188 186.023 cv
235.532 186.023 234.188 187.368 234.188 189.023 cv
234.188 190.679 235.532 192.023 237.188 192.023 cv
238.844 192.023 240.188 190.679 240.188 189.023 cv
ef
235.627 185.664 mo
235.627 184.007 234.284 182.664 232.627 182.664 cv
230.972 182.664 229.627 184.007 229.627 185.664 cv
229.627 187.32 230.972 188.664 232.627 188.664 cv
234.284 188.664 235.627 187.32 235.627 185.664 cv
ef
230.828 178.944 mo
230.828 177.288 229.483 175.944 227.828 175.944 cv
226.172 175.944 224.828 177.288 224.828 178.944 cv
224.828 180.599 226.172 181.944 227.828 181.944 cv
229.483 181.944 230.828 180.599 230.828 178.944 cv
ef
226.268 166.463 mo
226.268 164.807 224.924 163.463 223.268 163.463 cv
221.612 163.463 220.268 164.807 220.268 166.463 cv
220.268 168.12 221.612 169.463 223.268 169.463 cv
224.924 169.463 226.268 168.12 226.268 166.463 cv
ef
221.708 147.263 mo
221.708 145.607 220.364 144.263 218.708 144.263 cv
217.052 144.263 215.708 145.607 215.708 147.263 cv
215.708 148.919 217.052 150.263 218.708 150.263 cv
220.364 150.263 221.708 148.919 221.708 147.263 cv
ef
217.147 122.783 mo
217.147 121.127 215.804 119.783 214.147 119.783 cv
212.492 119.783 211.147 121.127 211.147 122.783 cv
211.147 124.439 212.492 125.783 214.147 125.783 cv
215.804 125.783 217.147 124.439 217.147 122.783 cv
ef
212.348 157.104 mo
212.348 155.447 211.004 154.104 209.348 154.104 cv
207.691 154.104 206.348 155.447 206.348 157.104 cv
206.348 158.759 207.691 160.103 209.348 160.103 cv
211.004 160.103 212.348 158.759 212.348 157.104 cv
ef
358.088 206.463 mo
359.088 205.463 li
359.088 109.963 li
508.588 109.963 li
509.588 108.963 li
358.088 108.963 li
358.088 206.463 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
358.088 206.463 mo
509.588 206.463 li
358.088 206.463 mo
358.088 108.963 li
509.588 108.963 li
509.588 206.463 li
358.088 206.463 li
cp
0 0 0 1 cmyk
@
503.838 204.963 mo
503.838 206.463 li
497.838 203.463 mo
497.838 206.463 li
497.838 203.463 mo
497.838 206.463 li
492.088 204.963 mo
492.088 206.463 li
486.338 204.963 mo
486.338 206.463 li
480.338 204.963 mo
480.338 206.463 li
474.588 203.463 mo
474.588 206.463 li
468.838 204.963 mo
468.838 206.463 li
463.088 204.963 mo
463.088 206.463 li
457.088 204.963 mo
457.088 206.463 li
451.338 203.463 mo
451.338 206.463 li
445.588 204.963 mo
445.588 206.463 li
439.588 204.963 mo
439.588 206.463 li
433.838 204.963 mo
433.838 206.463 li
428.088 203.463 mo
428.088 206.463 li
422.088 204.963 mo
422.088 206.463 li
416.338 204.963 mo
416.338 206.463 li
410.588 204.963 mo
410.588 206.463 li
404.588 203.463 mo
404.588 206.463 li
398.838 204.963 mo
398.838 206.463 li
393.088 204.963 mo
393.088 206.463 li
387.338 204.963 mo
387.338 206.463 li
381.338 203.463 mo
381.338 206.463 li
375.588 204.963 mo
375.588 206.463 li
369.838 204.963 mo
369.838 206.463 li
363.838 204.963 mo
363.838 206.463 li
358.088 203.463 mo
358.088 206.463 li
@
358.088 206.463 mo
358.088 108.963 li
@
362.588 108.963 mo
358.088 108.963 li
362.588 206.463 mo
358.088 206.463 li
362.588 108.963 mo
358.088 108.963 li
360.338 111.713 mo
358.088 111.713 li
360.338 114.463 mo
358.088 114.463 li
360.338 116.963 mo
358.088 116.963 li
362.588 119.713 mo
358.088 119.713 li
360.338 122.463 mo
358.088 122.463 li
360.338 125.213 mo
358.088 125.213 li
360.338 127.963 mo
358.088 127.963 li
362.588 130.713 mo
358.088 130.713 li
360.338 133.213 mo
358.088 133.213 li
360.338 135.963 mo
358.088 135.963 li
360.338 138.713 mo
358.088 138.713 li
362.588 141.463 mo
358.088 141.463 li
360.338 144.213 mo
358.088 144.213 li
360.338 146.963 mo
358.088 146.963 li
360.338 149.463 mo
358.088 149.463 li
362.588 152.213 mo
358.088 152.213 li
360.338 154.963 mo
358.088 154.963 li
360.338 157.713 mo
358.088 157.713 li
360.338 160.463 mo
358.088 160.463 li
362.588 163.213 mo
358.088 163.213 li
360.338 165.713 mo
358.088 165.713 li
360.338 168.463 mo
358.088 168.463 li
360.338 171.213 mo
358.088 171.213 li
362.588 173.963 mo
358.088 173.963 li
360.338 176.713 mo
358.088 176.713 li
360.338 179.213 mo
358.088 179.213 li
360.338 181.963 mo
358.088 181.963 li
362.588 184.713 mo
358.088 184.713 li
360.338 187.463 mo
358.088 187.463 li
360.338 190.213 mo
358.088 190.213 li
360.338 192.963 mo
358.088 192.963 li
362.588 195.463 mo
358.088 195.463 li
360.338 198.213 mo
358.088 198.213 li
360.338 200.963 mo
358.088 200.963 li
360.338 203.713 mo
358.088 203.713 li
362.588 206.463 mo
358.088 206.463 li
@
512.508 195.502 mo
512.508 193.846 511.164 192.502 509.508 192.502 cv
507.852 192.502 506.508 193.846 506.508 195.502 cv
506.508 197.159 507.852 198.502 509.508 198.502 cv
511.164 198.502 512.508 197.159 512.508 195.502 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
507.948 195.502 mo
507.948 193.846 506.604 192.502 504.948 192.502 cv
503.292 192.502 501.948 193.846 501.948 195.502 cv
501.948 197.159 503.292 198.502 504.948 198.502 cv
506.604 198.502 507.948 197.159 507.948 195.502 cv
ef
503.388 195.502 mo
503.388 193.846 502.044 192.502 500.388 192.502 cv
498.731 192.502 497.388 193.846 497.388 195.502 cv
497.388 197.159 498.731 198.502 500.388 198.502 cv
502.044 198.502 503.388 197.159 503.388 195.502 cv
ef
498.588 195.502 mo
498.588 193.846 497.244 192.502 495.588 192.502 cv
493.932 192.502 492.588 193.846 492.588 195.502 cv
492.588 197.159 493.932 198.502 495.588 198.502 cv
497.244 198.502 498.588 197.159 498.588 195.502 cv
ef
493.788 195.502 mo
493.788 193.846 492.444 192.502 490.788 192.502 cv
489.132 192.502 487.788 193.846 487.788 195.502 cv
487.788 197.159 489.132 198.502 490.788 198.502 cv
492.444 198.502 493.788 197.159 493.788 195.502 cv
ef
489.228 195.502 mo
489.228 193.846 487.884 192.502 486.228 192.502 cv
484.572 192.502 483.228 193.846 483.228 195.502 cv
483.228 197.159 484.572 198.502 486.228 198.502 cv
487.884 198.502 489.228 197.159 489.228 195.502 cv
ef
484.668 195.502 mo
484.668 193.846 483.324 192.502 481.668 192.502 cv
480.012 192.502 478.668 193.846 478.668 195.502 cv
478.668 197.159 480.012 198.502 481.668 198.502 cv
483.324 198.502 484.668 197.159 484.668 195.502 cv
ef
479.868 195.502 mo
479.868 193.846 478.523 192.502 476.868 192.502 cv
475.212 192.502 473.868 193.846 473.868 195.502 cv
473.868 197.159 475.212 198.502 476.868 198.502 cv
478.523 198.502 479.868 197.159 479.868 195.502 cv
ef
475.308 195.502 mo
475.308 193.846 473.964 192.502 472.308 192.502 cv
470.652 192.502 469.308 193.846 469.308 195.502 cv
469.308 197.159 470.652 198.502 472.308 198.502 cv
473.964 198.502 475.308 197.159 475.308 195.502 cv
ef
470.508 195.502 mo
470.508 193.846 469.164 192.502 467.508 192.502 cv
465.852 192.502 464.508 193.846 464.508 195.502 cv
464.508 197.159 465.852 198.502 467.508 198.502 cv
469.164 198.502 470.508 197.159 470.508 195.502 cv
ef
466.188 195.502 mo
466.188 193.846 464.844 192.502 463.188 192.502 cv
461.532 192.502 460.188 193.846 460.188 195.502 cv
460.188 197.159 461.532 198.502 463.188 198.502 cv
464.844 198.502 466.188 197.159 466.188 195.502 cv
ef
461.388 195.502 mo
461.388 193.846 460.044 192.502 458.388 192.502 cv
456.731 192.502 455.388 193.846 455.388 195.502 cv
455.388 197.159 456.731 198.502 458.388 198.502 cv
460.044 198.502 461.388 197.159 461.388 195.502 cv
ef
456.588 195.262 mo
456.588 193.606 455.244 192.262 453.588 192.262 cv
451.932 192.262 450.588 193.606 450.588 195.262 cv
450.588 196.918 451.932 198.262 453.588 198.262 cv
455.244 198.262 456.588 196.918 456.588 195.262 cv
ef
452.028 195.022 mo
452.028 193.368 450.684 192.022 449.028 192.022 cv
447.372 192.022 446.028 193.368 446.028 195.022 cv
446.028 196.678 447.372 198.022 449.028 198.022 cv
450.684 198.022 452.028 196.678 452.028 195.022 cv
ef
447.228 195.022 mo
447.228 193.368 445.884 192.022 444.228 192.022 cv
442.572 192.022 441.228 193.368 441.228 195.022 cv
441.228 196.678 442.572 198.022 444.228 198.022 cv
445.884 198.022 447.228 196.678 447.228 195.022 cv
ef
442.668 194.543 mo
442.668 192.887 441.324 191.543 439.668 191.543 cv
438.012 191.543 436.668 192.887 436.668 194.543 cv
436.668 196.2 438.012 197.543 439.668 197.543 cv
441.324 197.543 442.668 196.2 442.668 194.543 cv
ef
438.107 194.063 mo
438.107 192.407 436.764 191.063 435.107 191.063 cv
433.452 191.063 432.107 192.407 432.107 194.063 cv
432.107 195.719 433.452 197.063 435.107 197.063 cv
436.764 197.063 438.107 195.719 438.107 194.063 cv
ef
433.308 194.063 mo
433.308 192.407 431.964 191.063 430.308 191.063 cv
428.652 191.063 427.308 192.407 427.308 194.063 cv
427.308 195.719 428.652 197.063 430.308 197.063 cv
431.964 197.063 433.308 195.719 433.308 194.063 cv
ef
428.508 193.823 mo
428.508 192.167 427.164 190.823 425.508 190.823 cv
423.852 190.823 422.508 192.167 422.508 193.823 cv
422.508 195.479 423.852 196.823 425.508 196.823 cv
427.164 196.823 428.508 195.479 428.508 193.823 cv
ef
424.188 193.102 mo
424.188 191.448 422.844 190.102 421.188 190.102 cv
419.532 190.102 418.188 191.448 418.188 193.102 cv
418.188 194.758 419.532 196.102 421.188 196.102 cv
422.844 196.102 424.188 194.758 424.188 193.102 cv
ef
419.388 193.102 mo
419.388 191.448 418.044 190.102 416.388 190.102 cv
414.731 190.102 413.388 191.448 413.388 193.102 cv
413.388 194.758 414.731 196.102 416.388 196.102 cv
418.044 196.102 419.388 194.758 419.388 193.102 cv
ef
414.588 192.864 mo
414.588 191.208 413.244 189.864 411.588 189.864 cv
409.932 189.864 408.588 191.208 408.588 192.864 cv
408.588 194.518 409.932 195.864 411.588 195.864 cv
413.244 195.864 414.588 194.518 414.588 192.864 cv
ef
410.028 192.143 mo
410.028 190.487 408.684 189.143 407.028 189.143 cv
405.372 189.143 404.028 190.487 404.028 192.143 cv
404.028 193.799 405.372 195.143 407.028 195.143 cv
408.684 195.143 410.028 193.799 410.028 192.143 cv
ef
405.228 192.383 mo
405.228 190.727 403.884 189.383 402.228 189.383 cv
400.572 189.383 399.228 190.727 399.228 192.383 cv
399.228 194.04 400.572 195.383 402.228 195.383 cv
403.884 195.383 405.228 194.04 405.228 192.383 cv
ef
400.908 191.422 mo
400.908 189.766 399.563 188.422 397.908 188.422 cv
396.252 188.422 394.908 189.766 394.908 191.422 cv
394.908 193.079 396.252 194.422 397.908 194.422 cv
399.563 194.422 400.908 193.079 400.908 191.422 cv
ef
396.107 190.463 mo
396.107 188.807 394.764 187.463 393.107 187.463 cv
391.452 187.463 390.107 188.807 390.107 190.463 cv
390.107 192.12 391.452 193.463 393.107 193.463 cv
394.764 193.463 396.107 192.12 396.107 190.463 cv
ef
391.308 188.063 mo
391.308 186.407 389.964 185.063 388.308 185.063 cv
386.652 185.063 385.308 186.407 385.308 188.063 cv
385.308 189.719 386.652 191.063 388.308 191.063 cv
389.964 191.063 391.308 189.719 391.308 188.063 cv
ef
386.748 184.704 mo
386.748 183.047 385.404 181.704 383.748 181.704 cv
382.092 181.704 380.748 183.047 380.748 184.704 cv
380.748 186.36 382.092 187.704 383.748 187.704 cv
385.404 187.704 386.748 186.36 386.748 184.704 cv
ef
382.188 178.704 mo
382.188 177.047 380.844 175.704 379.188 175.704 cv
377.532 175.704 376.188 177.047 376.188 178.704 cv
376.188 180.36 377.532 181.704 379.188 181.704 cv
380.844 181.704 382.188 180.36 382.188 178.704 cv
ef
377.388 167.182 mo
377.388 165.528 376.044 164.182 374.388 164.182 cv
372.731 164.182 371.388 165.528 371.388 167.182 cv
371.388 168.838 372.731 170.182 374.388 170.182 cv
376.044 170.182 377.388 168.838 377.388 167.182 cv
ef
372.828 147.983 mo
372.828 146.327 371.484 144.983 369.828 144.983 cv
368.172 144.983 366.828 146.327 366.828 147.983 cv
366.828 149.639 368.172 150.983 369.828 150.983 cv
371.484 150.983 372.828 149.639 372.828 147.983 cv
ef
368.028 128.543 mo
368.028 126.887 366.684 125.543 365.028 125.543 cv
363.372 125.543 362.028 126.887 362.028 128.543 cv
362.028 130.199 363.372 131.543 365.028 131.543 cv
366.684 131.543 368.028 130.199 368.028 128.543 cv
ef
363.228 158.543 mo
363.228 156.887 361.884 155.543 360.228 155.543 cv
358.572 155.543 357.228 156.887 357.228 158.543 cv
357.228 160.2 358.572 161.543 360.228 161.543 cv
361.884 161.543 363.228 160.2 363.228 158.543 cv
ef
358.088 195.463 mo
451.338 195.463 li
0 0 0 1 cmyk
@
363.228 146.063 mo
363.228 144.407 361.884 143.063 360.228 143.063 cv
358.572 143.063 357.228 144.407 357.228 146.063 cv
357.228 147.719 358.572 149.063 360.228 149.063 cv
361.884 149.063 363.228 147.719 363.228 146.063 cv
368.028 152.783 mo
368.028 151.127 366.684 149.783 365.028 149.783 cv
363.372 149.783 362.028 151.127 362.028 152.783 cv
362.028 154.439 363.372 155.783 365.028 155.783 cv
366.684 155.783 368.028 154.439 368.028 152.783 cv
372.828 161.903 mo
372.828 160.247 371.484 158.903 369.828 158.903 cv
368.172 158.903 366.828 160.247 366.828 161.903 cv
366.828 163.559 368.172 164.903 369.828 164.903 cv
371.484 164.903 372.828 163.559 372.828 161.903 cv
377.388 171.262 mo
377.388 169.606 376.044 168.262 374.388 168.262 cv
372.731 168.262 371.388 169.606 371.388 171.262 cv
371.388 172.918 372.731 174.262 374.388 174.262 cv
376.044 174.262 377.388 172.918 377.388 171.262 cv
382.188 178.223 mo
382.188 176.567 380.844 175.223 379.188 175.223 cv
377.532 175.223 376.188 176.567 376.188 178.223 cv
376.188 179.879 377.532 181.223 379.188 181.223 cv
380.844 181.223 382.188 179.879 382.188 178.223 cv
386.748 183.022 mo
386.748 181.368 385.404 180.022 383.748 180.022 cv
382.092 180.022 380.748 181.368 380.748 183.022 cv
380.748 184.678 382.092 186.022 383.748 186.022 cv
385.404 186.022 386.748 184.678 386.748 183.022 cv
391.308 185.903 mo
391.308 184.247 389.964 182.903 388.308 182.903 cv
386.652 182.903 385.308 184.247 385.308 185.903 cv
385.308 187.559 386.652 188.903 388.308 188.903 cv
389.964 188.903 391.308 187.559 391.308 185.903 cv
396.107 188.063 mo
396.107 186.407 394.764 185.063 393.107 185.063 cv
391.452 185.063 390.107 186.407 390.107 188.063 cv
390.107 189.719 391.452 191.063 393.107 191.063 cv
394.764 191.063 396.107 189.719 396.107 188.063 cv
400.908 189.262 mo
400.908 187.606 399.563 186.262 397.908 186.262 cv
396.252 186.262 394.908 187.606 394.908 189.262 cv
394.908 190.918 396.252 192.262 397.908 192.262 cv
399.563 192.262 400.908 190.918 400.908 189.262 cv
405.228 190.223 mo
405.228 188.567 403.884 187.223 402.228 187.223 cv
400.572 187.223 399.228 188.567 399.228 190.223 cv
399.228 191.879 400.572 193.223 402.228 193.223 cv
403.884 193.223 405.228 191.879 405.228 190.223 cv
410.028 190.704 mo
410.028 189.047 408.684 187.704 407.028 187.704 cv
405.372 187.704 404.028 189.047 404.028 190.704 cv
404.028 192.36 405.372 193.704 407.028 193.704 cv
408.684 193.704 410.028 192.36 410.028 190.704 cv
414.588 190.944 mo
414.588 189.288 413.244 187.944 411.588 187.944 cv
409.932 187.944 408.588 189.288 408.588 190.944 cv
408.588 192.598 409.932 193.944 411.588 193.944 cv
413.244 193.944 414.588 192.598 414.588 190.944 cv
419.388 191.182 mo
419.388 189.528 418.044 188.182 416.388 188.182 cv
414.731 188.182 413.388 189.528 413.388 191.182 cv
413.388 192.838 414.731 194.182 416.388 194.182 cv
418.044 194.182 419.388 192.838 419.388 191.182 cv
424.188 191.422 mo
424.188 189.766 422.844 188.422 421.188 188.422 cv
419.532 188.422 418.188 189.766 418.188 191.422 cv
418.188 193.079 419.532 194.422 421.188 194.422 cv
422.844 194.422 424.188 193.079 424.188 191.422 cv
428.508 191.663 mo
428.508 190.006 427.164 188.663 425.508 188.663 cv
423.852 188.663 422.508 190.006 422.508 191.663 cv
422.508 193.319 423.852 194.663 425.508 194.663 cv
427.164 194.663 428.508 193.319 428.508 191.663 cv
433.308 191.903 mo
433.308 190.247 431.964 188.903 430.308 188.903 cv
428.652 188.903 427.308 190.247 427.308 191.903 cv
427.308 193.559 428.652 194.903 430.308 194.903 cv
431.964 194.903 433.308 193.559 433.308 191.903 cv
438.107 192.383 mo
438.107 190.727 436.764 189.383 435.107 189.383 cv
433.452 189.383 432.107 190.727 432.107 192.383 cv
432.107 194.04 433.452 195.383 435.107 195.383 cv
436.764 195.383 438.107 194.04 438.107 192.383 cv
442.668 192.864 mo
442.668 191.208 441.324 189.864 439.668 189.864 cv
438.012 189.864 436.668 191.208 436.668 192.864 cv
436.668 194.518 438.012 195.864 439.668 195.864 cv
441.324 195.864 442.668 194.518 442.668 192.864 cv
447.228 193.823 mo
447.228 192.167 445.884 190.823 444.228 190.823 cv
442.572 190.823 441.228 192.167 441.228 193.823 cv
441.228 195.479 442.572 196.823 444.228 196.823 cv
445.884 196.823 447.228 195.479 447.228 193.823 cv
452.028 194.303 mo
452.028 192.647 450.684 191.303 449.028 191.303 cv
447.372 191.303 446.028 192.647 446.028 194.303 cv
446.028 195.959 447.372 197.303 449.028 197.303 cv
450.684 197.303 452.028 195.959 452.028 194.303 cv
456.588 194.784 mo
456.588 193.127 455.244 191.784 453.588 191.784 cv
451.932 191.784 450.588 193.127 450.588 194.784 cv
450.588 196.438 451.932 197.784 453.588 197.784 cv
455.244 197.784 456.588 196.438 456.588 194.784 cv
461.388 195.022 mo
461.388 193.368 460.044 192.022 458.388 192.022 cv
456.731 192.022 455.388 193.368 455.388 195.022 cv
455.388 196.678 456.731 198.022 458.388 198.022 cv
460.044 198.022 461.388 196.678 461.388 195.022 cv
466.188 195.262 mo
466.188 193.606 464.844 192.262 463.188 192.262 cv
461.532 192.262 460.188 193.606 460.188 195.262 cv
460.188 196.918 461.532 198.262 463.188 198.262 cv
464.844 198.262 466.188 196.918 466.188 195.262 cv
470.508 195.502 mo
470.508 193.846 469.164 192.502 467.508 192.502 cv
465.852 192.502 464.508 193.846 464.508 195.502 cv
464.508 197.159 465.852 198.502 467.508 198.502 cv
469.164 198.502 470.508 197.159 470.508 195.502 cv
475.308 195.502 mo
475.308 193.846 473.964 192.502 472.308 192.502 cv
470.652 192.502 469.308 193.846 469.308 195.502 cv
469.308 197.159 470.652 198.502 472.308 198.502 cv
473.964 198.502 475.308 197.159 475.308 195.502 cv
479.868 195.502 mo
479.868 193.846 478.523 192.502 476.868 192.502 cv
475.212 192.502 473.868 193.846 473.868 195.502 cv
473.868 197.159 475.212 198.502 476.868 198.502 cv
478.523 198.502 479.868 197.159 479.868 195.502 cv
484.668 195.502 mo
484.668 193.846 483.324 192.502 481.668 192.502 cv
480.012 192.502 478.668 193.846 478.668 195.502 cv
478.668 197.159 480.012 198.502 481.668 198.502 cv
483.324 198.502 484.668 197.159 484.668 195.502 cv
489.228 195.502 mo
489.228 193.846 487.884 192.502 486.228 192.502 cv
484.572 192.502 483.228 193.846 483.228 195.502 cv
483.228 197.159 484.572 198.502 486.228 198.502 cv
487.884 198.502 489.228 197.159 489.228 195.502 cv
493.788 195.502 mo
493.788 193.846 492.444 192.502 490.788 192.502 cv
489.132 192.502 487.788 193.846 487.788 195.502 cv
487.788 197.159 489.132 198.502 490.788 198.502 cv
492.444 198.502 493.788 197.159 493.788 195.502 cv
498.588 195.502 mo
498.588 193.846 497.244 192.502 495.588 192.502 cv
493.932 192.502 492.588 193.846 492.588 195.502 cv
492.588 197.159 493.932 198.502 495.588 198.502 cv
497.244 198.502 498.588 197.159 498.588 195.502 cv
503.388 195.502 mo
503.388 193.846 502.044 192.502 500.388 192.502 cv
498.731 192.502 497.388 193.846 497.388 195.502 cv
497.388 197.159 498.731 198.502 500.388 198.502 cv
502.044 198.502 503.388 197.159 503.388 195.502 cv
507.948 195.502 mo
507.948 193.846 506.604 192.502 504.948 192.502 cv
503.292 192.502 501.948 193.846 501.948 195.502 cv
501.948 197.159 503.292 198.502 504.948 198.502 cv
506.604 198.502 507.948 197.159 507.948 195.502 cv
512.508 195.502 mo
512.508 193.846 511.164 192.502 509.508 192.502 cv
507.852 192.502 506.508 193.846 506.508 195.502 cv
506.508 197.159 507.852 198.502 509.508 198.502 cv
511.164 198.502 512.508 197.159 512.508 195.502 cv
.878019 .337896 1 .281529 cmyk
@
512.508 195.502 mo
512.508 193.846 511.164 192.502 509.508 192.502 cv
507.852 192.502 506.508 193.846 506.508 195.502 cv
506.508 197.159 507.852 198.502 509.508 198.502 cv
511.164 198.502 512.508 197.159 512.508 195.502 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
507.948 195.502 mo
507.948 193.846 506.604 192.502 504.948 192.502 cv
503.292 192.502 501.948 193.846 501.948 195.502 cv
501.948 197.159 503.292 198.502 504.948 198.502 cv
506.604 198.502 507.948 197.159 507.948 195.502 cv
ef
503.388 195.502 mo
503.388 193.846 502.044 192.502 500.388 192.502 cv
498.731 192.502 497.388 193.846 497.388 195.502 cv
497.388 197.159 498.731 198.502 500.388 198.502 cv
502.044 198.502 503.388 197.159 503.388 195.502 cv
ef
498.588 195.502 mo
498.588 193.846 497.244 192.502 495.588 192.502 cv
493.932 192.502 492.588 193.846 492.588 195.502 cv
492.588 197.159 493.932 198.502 495.588 198.502 cv
497.244 198.502 498.588 197.159 498.588 195.502 cv
ef
493.788 195.502 mo
493.788 193.846 492.444 192.502 490.788 192.502 cv
489.132 192.502 487.788 193.846 487.788 195.502 cv
487.788 197.159 489.132 198.502 490.788 198.502 cv
492.444 198.502 493.788 197.159 493.788 195.502 cv
ef
489.228 195.502 mo
489.228 193.846 487.884 192.502 486.228 192.502 cv
484.572 192.502 483.228 193.846 483.228 195.502 cv
483.228 197.159 484.572 198.502 486.228 198.502 cv
487.884 198.502 489.228 197.159 489.228 195.502 cv
ef
484.668 195.502 mo
484.668 193.846 483.324 192.502 481.668 192.502 cv
480.012 192.502 478.668 193.846 478.668 195.502 cv
478.668 197.159 480.012 198.502 481.668 198.502 cv
483.324 198.502 484.668 197.159 484.668 195.502 cv
ef
479.868 195.502 mo
479.868 193.846 478.523 192.502 476.868 192.502 cv
475.212 192.502 473.868 193.846 473.868 195.502 cv
473.868 197.159 475.212 198.502 476.868 198.502 cv
478.523 198.502 479.868 197.159 479.868 195.502 cv
ef
475.308 195.502 mo
475.308 193.846 473.964 192.502 472.308 192.502 cv
470.652 192.502 469.308 193.846 469.308 195.502 cv
469.308 197.159 470.652 198.502 472.308 198.502 cv
473.964 198.502 475.308 197.159 475.308 195.502 cv
ef
470.508 195.502 mo
470.508 193.846 469.164 192.502 467.508 192.502 cv
465.852 192.502 464.508 193.846 464.508 195.502 cv
464.508 197.159 465.852 198.502 467.508 198.502 cv
469.164 198.502 470.508 197.159 470.508 195.502 cv
ef
466.188 195.502 mo
466.188 193.846 464.844 192.502 463.188 192.502 cv
461.532 192.502 460.188 193.846 460.188 195.502 cv
460.188 197.159 461.532 198.502 463.188 198.502 cv
464.844 198.502 466.188 197.159 466.188 195.502 cv
ef
461.388 195.502 mo
461.388 193.846 460.044 192.502 458.388 192.502 cv
456.731 192.502 455.388 193.846 455.388 195.502 cv
455.388 197.159 456.731 198.502 458.388 198.502 cv
460.044 198.502 461.388 197.159 461.388 195.502 cv
ef
456.588 195.262 mo
456.588 193.606 455.244 192.262 453.588 192.262 cv
451.932 192.262 450.588 193.606 450.588 195.262 cv
450.588 196.918 451.932 198.262 453.588 198.262 cv
455.244 198.262 456.588 196.918 456.588 195.262 cv
ef
452.028 195.022 mo
452.028 193.368 450.684 192.022 449.028 192.022 cv
447.372 192.022 446.028 193.368 446.028 195.022 cv
446.028 196.678 447.372 198.022 449.028 198.022 cv
450.684 198.022 452.028 196.678 452.028 195.022 cv
ef
447.228 195.022 mo
447.228 193.368 445.884 192.022 444.228 192.022 cv
442.572 192.022 441.228 193.368 441.228 195.022 cv
441.228 196.678 442.572 198.022 444.228 198.022 cv
445.884 198.022 447.228 196.678 447.228 195.022 cv
ef
442.668 194.543 mo
442.668 192.887 441.324 191.543 439.668 191.543 cv
438.012 191.543 436.668 192.887 436.668 194.543 cv
436.668 196.2 438.012 197.543 439.668 197.543 cv
441.324 197.543 442.668 196.2 442.668 194.543 cv
ef
438.107 194.063 mo
438.107 192.407 436.764 191.063 435.107 191.063 cv
433.452 191.063 432.107 192.407 432.107 194.063 cv
432.107 195.719 433.452 197.063 435.107 197.063 cv
436.764 197.063 438.107 195.719 438.107 194.063 cv
ef
433.308 194.063 mo
433.308 192.407 431.964 191.063 430.308 191.063 cv
428.652 191.063 427.308 192.407 427.308 194.063 cv
427.308 195.719 428.652 197.063 430.308 197.063 cv
431.964 197.063 433.308 195.719 433.308 194.063 cv
ef
428.508 193.823 mo
428.508 192.167 427.164 190.823 425.508 190.823 cv
423.852 190.823 422.508 192.167 422.508 193.823 cv
422.508 195.479 423.852 196.823 425.508 196.823 cv
427.164 196.823 428.508 195.479 428.508 193.823 cv
ef
424.188 193.102 mo
424.188 191.448 422.844 190.102 421.188 190.102 cv
419.532 190.102 418.188 191.448 418.188 193.102 cv
418.188 194.758 419.532 196.102 421.188 196.102 cv
422.844 196.102 424.188 194.758 424.188 193.102 cv
ef
419.388 193.102 mo
419.388 191.448 418.044 190.102 416.388 190.102 cv
414.731 190.102 413.388 191.448 413.388 193.102 cv
413.388 194.758 414.731 196.102 416.388 196.102 cv
418.044 196.102 419.388 194.758 419.388 193.102 cv
ef
414.588 192.864 mo
414.588 191.208 413.244 189.864 411.588 189.864 cv
409.932 189.864 408.588 191.208 408.588 192.864 cv
408.588 194.518 409.932 195.864 411.588 195.864 cv
413.244 195.864 414.588 194.518 414.588 192.864 cv
ef
410.028 192.143 mo
410.028 190.487 408.684 189.143 407.028 189.143 cv
405.372 189.143 404.028 190.487 404.028 192.143 cv
404.028 193.799 405.372 195.143 407.028 195.143 cv
408.684 195.143 410.028 193.799 410.028 192.143 cv
ef
405.228 192.383 mo
405.228 190.727 403.884 189.383 402.228 189.383 cv
400.572 189.383 399.228 190.727 399.228 192.383 cv
399.228 194.04 400.572 195.383 402.228 195.383 cv
403.884 195.383 405.228 194.04 405.228 192.383 cv
ef
400.908 191.422 mo
400.908 189.766 399.563 188.422 397.908 188.422 cv
396.252 188.422 394.908 189.766 394.908 191.422 cv
394.908 193.079 396.252 194.422 397.908 194.422 cv
399.563 194.422 400.908 193.079 400.908 191.422 cv
ef
396.107 190.463 mo
396.107 188.807 394.764 187.463 393.107 187.463 cv
391.452 187.463 390.107 188.807 390.107 190.463 cv
390.107 192.12 391.452 193.463 393.107 193.463 cv
394.764 193.463 396.107 192.12 396.107 190.463 cv
ef
391.308 188.063 mo
391.308 186.407 389.964 185.063 388.308 185.063 cv
386.652 185.063 385.308 186.407 385.308 188.063 cv
385.308 189.719 386.652 191.063 388.308 191.063 cv
389.964 191.063 391.308 189.719 391.308 188.063 cv
ef
386.748 184.704 mo
386.748 183.047 385.404 181.704 383.748 181.704 cv
382.092 181.704 380.748 183.047 380.748 184.704 cv
380.748 186.36 382.092 187.704 383.748 187.704 cv
385.404 187.704 386.748 186.36 386.748 184.704 cv
ef
382.188 178.704 mo
382.188 177.047 380.844 175.704 379.188 175.704 cv
377.532 175.704 376.188 177.047 376.188 178.704 cv
376.188 180.36 377.532 181.704 379.188 181.704 cv
380.844 181.704 382.188 180.36 382.188 178.704 cv
ef
377.388 167.182 mo
377.388 165.528 376.044 164.182 374.388 164.182 cv
372.731 164.182 371.388 165.528 371.388 167.182 cv
371.388 168.838 372.731 170.182 374.388 170.182 cv
376.044 170.182 377.388 168.838 377.388 167.182 cv
ef
372.828 147.983 mo
372.828 146.327 371.484 144.983 369.828 144.983 cv
368.172 144.983 366.828 146.327 366.828 147.983 cv
366.828 149.639 368.172 150.983 369.828 150.983 cv
371.484 150.983 372.828 149.639 372.828 147.983 cv
ef
368.028 128.543 mo
368.028 126.887 366.684 125.543 365.028 125.543 cv
363.372 125.543 362.028 126.887 362.028 128.543 cv
362.028 130.199 363.372 131.543 365.028 131.543 cv
366.684 131.543 368.028 130.199 368.028 128.543 cv
ef
363.228 158.543 mo
363.228 156.887 361.884 155.543 360.228 155.543 cv
358.572 155.543 357.228 156.887 357.228 158.543 cv
357.228 160.2 358.572 161.543 360.228 161.543 cv
361.884 161.543 363.228 160.2 363.228 158.543 cv
ef
56.7681 303.963 mo
57.7681 302.963 li
57.7681 207.463 li
206.768 207.463 li
207.768 206.463 li
56.7681 206.463 li
56.7681 303.963 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
56.7681 303.963 mo
207.768 303.963 li
56.7681 303.963 mo
56.7681 206.463 li
207.768 206.463 li
207.768 303.963 li
56.7681 303.963 li
cp
0 0 0 1 cmyk
@
201.768 302.463 mo
201.768 303.963 li
196.018 301.213 mo
196.018 303.963 li
196.018 301.213 mo
196.018 303.963 li
190.268 302.463 mo
190.268 303.963 li
184.518 302.463 mo
184.518 303.963 li
178.518 302.463 mo
178.518 303.963 li
172.768 301.213 mo
172.768 303.963 li
167.018 302.463 mo
167.018 303.963 li
161.268 302.463 mo
161.268 303.963 li
155.518 302.463 mo
155.518 303.963 li
149.518 301.213 mo
149.518 303.963 li
143.768 302.463 mo
143.768 303.963 li
138.018 302.463 mo
138.018 303.963 li
132.268 302.463 mo
132.268 303.963 li
126.268 301.213 mo
126.268 303.963 li
120.518 302.463 mo
120.518 303.963 li
114.768 302.463 mo
114.768 303.963 li
109.018 302.463 mo
109.018 303.963 li
103.018 301.213 mo
103.018 303.963 li
97.2681 302.463 mo
97.2681 303.963 li
91.5181 302.463 mo
91.5181 303.963 li
85.7681 302.463 mo
85.7681 303.963 li
79.7681 301.213 mo
79.7681 303.963 li
74.0181 302.463 mo
74.0181 303.963 li
68.2681 302.463 mo
68.2681 303.963 li
62.5181 302.463 mo
62.5181 303.963 li
56.7681 301.213 mo
56.7681 303.963 li
@
56.7681 303.963 mo
56.7681 206.463 li
@
61.2681 206.463 mo
56.7681 206.463 li
61.2681 303.963 mo
56.7681 303.963 li
61.2681 206.463 mo
56.7681 206.463 li
59.0181 209.213 mo
56.7681 209.213 li
59.0181 211.963 mo
56.7681 211.963 li
59.0181 214.713 mo
56.7681 214.713 li
61.2681 217.463 mo
56.7681 217.463 li
59.0181 219.963 mo
56.7681 219.963 li
59.0181 222.713 mo
56.7681 222.713 li
59.0181 225.463 mo
56.7681 225.463 li
61.2681 228.213 mo
56.7681 228.213 li
59.0181 230.963 mo
56.7681 230.963 li
59.0181 233.713 mo
56.7681 233.713 li
59.0181 236.213 mo
56.7681 236.213 li
61.2681 238.963 mo
56.7681 238.963 li
59.0181 241.713 mo
56.7681 241.713 li
59.0181 244.463 mo
56.7681 244.463 li
59.0181 247.213 mo
56.7681 247.213 li
61.2681 249.963 mo
56.7681 249.963 li
59.0181 252.463 mo
56.7681 252.463 li
59.0181 255.213 mo
56.7681 255.213 li
59.0181 257.963 mo
56.7681 257.963 li
61.2681 260.713 mo
56.7681 260.713 li
59.0181 263.463 mo
56.7681 263.463 li
59.0181 266.213 mo
56.7681 266.213 li
59.0181 268.713 mo
56.7681 268.713 li
61.2681 271.463 mo
56.7681 271.463 li
59.0181 274.213 mo
56.7681 274.213 li
59.0181 276.963 mo
56.7681 276.963 li
59.0181 279.713 mo
56.7681 279.713 li
61.2681 282.463 mo
56.7681 282.463 li
59.0181 284.963 mo
56.7681 284.963 li
59.0181 287.713 mo
56.7681 287.713 li
59.0181 290.463 mo
56.7681 290.463 li
61.2681 293.213 mo
56.7681 293.213 li
59.0181 295.963 mo
56.7681 295.963 li
59.0181 298.713 mo
56.7681 298.713 li
59.0181 301.213 mo
56.7681 301.213 li
61.2681 303.963 mo
56.7681 303.963 li
@
.697627 .675227 .638575 .739559 cmyk
LSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf45.5259 297.963 mo(0)shLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf29.7681 265.213 mo(0.)[10.0107 0 ]xshLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf45.7212 265.213 mo(6)shLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf29.7681 233.463 mo(1.)[10.0107 0 ]xshLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf45.7212 233.463 mo(2)sh210.688 293.173 mo
210.688 291.517 209.344 290.173 207.688 290.173 cv
206.032 290.173 204.688 291.517 204.688 293.173 cv
204.688 294.83 206.032 296.173 207.688 296.173 cv
209.344 296.173 210.688 294.83 210.688 293.173 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
206.128 293.173 mo
206.128 291.517 204.784 290.173 203.128 290.173 cv
201.472 290.173 200.128 291.517 200.128 293.173 cv
200.128 294.83 201.472 296.173 203.128 296.173 cv
204.784 296.173 206.128 294.83 206.128 293.173 cv
ef
201.328 293.173 mo
201.328 291.517 199.984 290.173 198.328 290.173 cv
196.672 290.173 195.328 291.517 195.328 293.173 cv
195.328 294.83 196.672 296.173 198.328 296.173 cv
199.984 296.173 201.328 294.83 201.328 293.173 cv
ef
196.768 293.173 mo
196.768 291.517 195.424 290.173 193.768 290.173 cv
192.112 290.173 190.768 291.517 190.768 293.173 cv
190.768 294.83 192.112 296.173 193.768 296.173 cv
195.424 296.173 196.768 294.83 196.768 293.173 cv
ef
191.968 293.173 mo
191.968 291.517 190.624 290.173 188.968 290.173 cv
187.312 290.173 185.968 291.517 185.968 293.173 cv
185.968 294.83 187.312 296.173 188.968 296.173 cv
190.624 296.173 191.968 294.83 191.968 293.173 cv
ef
187.408 293.173 mo
187.408 291.517 186.064 290.173 184.408 290.173 cv
182.752 290.173 181.408 291.517 181.408 293.173 cv
181.408 294.83 182.752 296.173 184.408 296.173 cv
186.064 296.173 187.408 294.83 187.408 293.173 cv
ef
182.848 293.173 mo
182.848 291.517 181.504 290.173 179.848 290.173 cv
178.192 290.173 176.848 291.517 176.848 293.173 cv
176.848 294.83 178.192 296.173 179.848 296.173 cv
181.504 296.173 182.848 294.83 182.848 293.173 cv
ef
178.288 293.173 mo
178.288 291.517 176.944 290.173 175.288 290.173 cv
173.632 290.173 172.288 291.517 172.288 293.173 cv
172.288 294.83 173.632 296.173 175.288 296.173 cv
176.944 296.173 178.288 294.83 178.288 293.173 cv
ef
173.488 293.173 mo
173.488 291.517 172.144 290.173 170.488 290.173 cv
168.832 290.173 167.488 291.517 167.488 293.173 cv
167.488 294.83 168.832 296.173 170.488 296.173 cv
172.144 296.173 173.488 294.83 173.488 293.173 cv
ef
168.688 292.933 mo
168.688 291.278 167.344 289.933 165.688 289.933 cv
164.032 289.933 162.688 291.278 162.688 292.933 cv
162.688 294.589 164.032 295.933 165.688 295.933 cv
167.344 295.933 168.688 294.589 168.688 292.933 cv
ef
164.368 292.933 mo
164.368 291.278 163.024 289.933 161.368 289.933 cv
159.712 289.933 158.368 291.278 158.368 292.933 cv
158.368 294.589 159.712 295.933 161.368 295.933 cv
163.024 295.933 164.368 294.589 164.368 292.933 cv
ef
159.568 292.933 mo
159.568 291.278 158.224 289.933 156.568 289.933 cv
154.912 289.933 153.568 291.278 153.568 292.933 cv
153.568 294.589 154.912 295.933 156.568 295.933 cv
158.224 295.933 159.568 294.589 159.568 292.933 cv
ef
155.008 292.694 mo
155.008 291.038 153.664 289.694 152.008 289.694 cv
150.352 289.694 149.008 291.038 149.008 292.694 cv
149.008 294.349 150.352 295.694 152.008 295.694 cv
153.664 295.694 155.008 294.349 155.008 292.694 cv
ef
150.208 292.694 mo
150.208 291.038 148.864 289.694 147.208 289.694 cv
145.552 289.694 144.208 291.038 144.208 292.694 cv
144.208 294.349 145.552 295.694 147.208 295.694 cv
148.864 295.694 150.208 294.349 150.208 292.694 cv
ef
145.408 291.973 mo
145.408 290.317 144.064 288.973 142.408 288.973 cv
140.752 288.973 139.408 290.317 139.408 291.973 cv
139.408 293.629 140.752 294.973 142.408 294.973 cv
144.064 294.973 145.408 293.629 145.408 291.973 cv
ef
141.088 291.733 mo
141.088 290.078 139.744 288.733 138.088 288.733 cv
136.432 288.733 135.088 290.078 135.088 291.733 cv
135.088 293.389 136.432 294.733 138.088 294.733 cv
139.744 294.733 141.088 293.389 141.088 291.733 cv
ef
136.288 291.253 mo
136.288 289.597 134.944 288.253 133.288 288.253 cv
131.632 288.253 130.288 289.597 130.288 291.253 cv
130.288 292.91 131.632 294.253 133.288 294.253 cv
134.944 294.253 136.288 292.91 136.288 291.253 cv
ef
131.728 290.773 mo
131.728 289.118 130.384 287.773 128.728 287.773 cv
127.072 287.773 125.728 289.118 125.728 290.773 cv
125.728 292.429 127.072 293.773 128.728 293.773 cv
130.384 293.773 131.728 292.429 131.728 290.773 cv
ef
126.928 290.534 mo
126.928 288.877 125.584 287.534 123.928 287.534 cv
122.272 287.534 120.928 288.877 120.928 290.534 cv
120.928 292.189 122.272 293.534 123.928 293.534 cv
125.584 293.534 126.928 292.189 126.928 290.534 cv
ef
122.368 290.773 mo
122.368 289.118 121.024 287.773 119.368 287.773 cv
117.712 287.773 116.368 289.118 116.368 290.773 cv
116.368 292.429 117.712 293.773 119.368 293.773 cv
121.024 293.773 122.368 292.429 122.368 290.773 cv
ef
117.808 289.813 mo
117.808 288.158 116.464 286.813 114.808 286.813 cv
113.152 286.813 111.808 288.158 111.808 289.813 cv
111.808 291.469 113.152 292.813 114.808 292.813 cv
116.464 292.813 117.808 291.469 117.808 289.813 cv
ef
113.008 290.053 mo
113.008 288.397 111.664 287.053 110.008 287.053 cv
108.352 287.053 107.008 288.397 107.008 290.053 cv
107.008 291.709 108.352 293.053 110.008 293.053 cv
111.664 293.053 113.008 291.709 113.008 290.053 cv
ef
108.448 290.293 mo
108.448 288.637 107.104 287.293 105.448 287.293 cv
103.792 287.293 102.448 288.637 102.448 290.293 cv
102.448 291.95 103.792 293.293 105.448 293.293 cv
107.104 293.293 108.448 291.95 108.448 290.293 cv
ef
103.768 289.813 mo
103.768 288.158 102.424 286.813 100.768 286.813 cv
99.1118 286.813 97.7681 288.158 97.7681 289.813 cv
97.7681 291.469 99.1118 292.813 100.768 292.813 cv
102.424 292.813 103.768 291.469 103.768 289.813 cv
ef
99.3281 287.893 mo
99.3281 286.238 97.9839 284.893 96.3281 284.893 cv
94.6719 284.893 93.3281 286.238 93.3281 287.893 cv
93.3281 289.549 94.6719 290.893 96.3281 290.893 cv
97.9839 290.893 99.3281 289.549 99.3281 287.893 cv
ef
94.5278 287.414 mo
94.5278 285.757 93.1841 284.414 91.5278 284.414 cv
89.8721 284.414 88.5278 285.757 88.5278 287.414 cv
88.5278 289.07 89.8721 290.414 91.5278 290.414 cv
93.1841 290.414 94.5278 289.07 94.5278 287.414 cv
ef
89.728 285.253 mo
89.728 283.597 88.3843 282.253 86.728 282.253 cv
85.0723 282.253 83.728 283.597 83.728 285.253 cv
83.728 286.91 85.0723 288.253 86.728 288.253 cv
88.3843 288.253 89.728 286.91 89.728 285.253 cv
ef
85.168 281.654 mo
85.168 279.998 83.8242 278.654 82.168 278.654 cv
80.5122 278.654 79.168 279.998 79.168 281.654 cv
79.168 283.309 80.5122 284.654 82.168 284.654 cv
83.8242 284.654 85.168 283.309 85.168 281.654 cv
ef
80.6079 275.414 mo
80.6079 273.757 79.2642 272.414 77.6079 272.414 cv
75.9521 272.414 74.6079 273.757 74.6079 275.414 cv
74.6079 277.07 75.9521 278.414 77.6079 278.414 cv
79.2642 278.414 80.6079 277.07 80.6079 275.414 cv
ef
76.0479 264.374 mo
76.0479 262.717 74.7041 261.374 73.0479 261.374 cv
71.3921 261.374 70.0479 262.717 70.0479 264.374 cv
70.0479 266.03 71.3921 267.374 73.0479 267.374 cv
74.7041 267.374 76.0479 266.03 76.0479 264.374 cv
ef
71.248 247.813 mo
71.248 246.158 69.9038 244.813 68.248 244.813 cv
66.5923 244.813 65.248 246.158 65.248 247.813 cv
65.248 249.469 66.5923 250.813 68.248 250.813 cv
69.9038 250.813 71.248 249.469 71.248 247.813 cv
ef
66.4482 231.494 mo
66.4482 229.837 65.104 228.494 63.4482 228.494 cv
61.792 228.494 60.4482 229.837 60.4482 231.494 cv
60.4482 233.149 61.792 234.494 63.4482 234.494 cv
65.104 234.494 66.4482 233.149 66.4482 231.494 cv
ef
62.1279 257.173 mo
62.1279 255.517 60.7842 254.173 59.1279 254.173 cv
57.4722 254.173 56.1279 255.517 56.1279 257.173 cv
56.1279 258.83 57.4722 260.173 59.1279 260.173 cv
60.7842 260.173 62.1279 258.83 62.1279 257.173 cv
ef
56.7681 293.213 mo
149.518 293.213 li
0 0 0 1 cmyk
@
62.1279 242.534 mo
62.1279 240.877 60.7842 239.534 59.1279 239.534 cv
57.4722 239.534 56.1279 240.877 56.1279 242.534 cv
56.1279 244.189 57.4722 245.534 59.1279 245.534 cv
60.7842 245.534 62.1279 244.189 62.1279 242.534 cv
66.4482 250.694 mo
66.4482 249.038 65.104 247.694 63.4482 247.694 cv
61.792 247.694 60.4482 249.038 60.4482 250.694 cv
60.4482 252.349 61.792 253.694 63.4482 253.694 cv
65.104 253.694 66.4482 252.349 66.4482 250.694 cv
71.248 260.773 mo
71.248 259.118 69.9038 257.773 68.248 257.773 cv
66.5923 257.773 65.248 259.118 65.248 260.773 cv
65.248 262.429 66.5923 263.773 68.248 263.773 cv
69.9038 263.773 71.248 262.429 71.248 260.773 cv
76.0479 269.414 mo
76.0479 267.757 74.7041 266.414 73.0479 266.414 cv
71.3921 266.414 70.0479 267.757 70.0479 269.414 cv
70.0479 271.07 71.3921 272.414 73.0479 272.414 cv
74.7041 272.414 76.0479 271.07 76.0479 269.414 cv
80.6079 276.374 mo
80.6079 274.717 79.2642 273.374 77.6079 273.374 cv
75.9521 273.374 74.6079 274.717 74.6079 276.374 cv
74.6079 278.03 75.9521 279.374 77.6079 279.374 cv
79.2642 279.374 80.6079 278.03 80.6079 276.374 cv
85.168 281.173 mo
85.168 279.517 83.8242 278.173 82.168 278.173 cv
80.5122 278.173 79.168 279.517 79.168 281.173 cv
79.168 282.83 80.5122 284.173 82.168 284.173 cv
83.8242 284.173 85.168 282.83 85.168 281.173 cv
89.728 283.574 mo
89.728 281.917 88.3843 280.574 86.728 280.574 cv
85.0723 280.574 83.728 281.917 83.728 283.574 cv
83.728 285.229 85.0723 286.574 86.728 286.574 cv
88.3843 286.574 89.728 285.229 89.728 283.574 cv
94.5278 285.253 mo
94.5278 283.597 93.1841 282.253 91.5278 282.253 cv
89.8721 282.253 88.5278 283.597 88.5278 285.253 cv
88.5278 286.91 89.8721 288.253 91.5278 288.253 cv
93.1841 288.253 94.5278 286.91 94.5278 285.253 cv
99.3281 286.694 mo
99.3281 285.038 97.9839 283.694 96.3281 283.694 cv
94.6719 283.694 93.3281 285.038 93.3281 286.694 cv
93.3281 288.349 94.6719 289.694 96.3281 289.694 cv
97.9839 289.694 99.3281 288.349 99.3281 286.694 cv
103.768 287.173 mo
103.768 285.517 102.424 284.173 100.768 284.173 cv
99.1118 284.173 97.7681 285.517 97.7681 287.173 cv
97.7681 288.83 99.1118 290.173 100.768 290.173 cv
102.424 290.173 103.768 288.83 103.768 287.173 cv
108.448 288.374 mo
108.448 286.717 107.104 285.374 105.448 285.374 cv
103.792 285.374 102.448 286.717 102.448 288.374 cv
102.448 290.03 103.792 291.374 105.448 291.374 cv
107.104 291.374 108.448 290.03 108.448 288.374 cv
113.008 288.133 mo
113.008 286.477 111.664 285.133 110.008 285.133 cv
108.352 285.133 107.008 286.477 107.008 288.133 cv
107.008 289.79 108.352 291.133 110.008 291.133 cv
111.664 291.133 113.008 289.79 113.008 288.133 cv
117.808 288.614 mo
117.808 286.958 116.464 285.614 114.808 285.614 cv
113.152 285.614 111.808 286.958 111.808 288.614 cv
111.808 290.269 113.152 291.614 114.808 291.614 cv
116.464 291.614 117.808 290.269 117.808 288.614 cv
122.368 289.213 mo
122.368 287.557 121.024 286.213 119.368 286.213 cv
117.712 286.213 116.368 287.557 116.368 289.213 cv
116.368 290.87 117.712 292.213 119.368 292.213 cv
121.024 292.213 122.368 290.87 122.368 289.213 cv
126.928 289.574 mo
126.928 287.917 125.584 286.574 123.928 286.574 cv
122.272 286.574 120.928 287.917 120.928 289.574 cv
120.928 291.229 122.272 292.574 123.928 292.574 cv
125.584 292.574 126.928 291.229 126.928 289.574 cv
131.728 289.813 mo
131.728 288.158 130.384 286.813 128.728 286.813 cv
127.072 286.813 125.728 288.158 125.728 289.813 cv
125.728 291.469 127.072 292.813 128.728 292.813 cv
130.384 292.813 131.728 291.469 131.728 289.813 cv
136.288 290.053 mo
136.288 288.397 134.944 287.053 133.288 287.053 cv
131.632 287.053 130.288 288.397 130.288 290.053 cv
130.288 291.709 131.632 293.053 133.288 293.053 cv
134.944 293.053 136.288 291.709 136.288 290.053 cv
141.088 290.534 mo
141.088 288.877 139.744 287.534 138.088 287.534 cv
136.432 287.534 135.088 288.877 135.088 290.534 cv
135.088 292.189 136.432 293.534 138.088 293.534 cv
139.744 293.534 141.088 292.189 141.088 290.534 cv
145.408 291.253 mo
145.408 289.597 144.064 288.253 142.408 288.253 cv
140.752 288.253 139.408 289.597 139.408 291.253 cv
139.408 292.91 140.752 294.253 142.408 294.253 cv
144.064 294.253 145.408 292.91 145.408 291.253 cv
150.208 291.733 mo
150.208 290.078 148.864 288.733 147.208 288.733 cv
145.552 288.733 144.208 290.078 144.208 291.733 cv
144.208 293.389 145.552 294.733 147.208 294.733 cv
148.864 294.733 150.208 293.389 150.208 291.733 cv
155.008 292.454 mo
155.008 290.797 153.664 289.454 152.008 289.454 cv
150.352 289.454 149.008 290.797 149.008 292.454 cv
149.008 294.11 150.352 295.454 152.008 295.454 cv
153.664 295.454 155.008 294.11 155.008 292.454 cv
159.568 292.454 mo
159.568 290.797 158.224 289.454 156.568 289.454 cv
154.912 289.454 153.568 290.797 153.568 292.454 cv
153.568 294.11 154.912 295.454 156.568 295.454 cv
158.224 295.454 159.568 294.11 159.568 292.454 cv
164.368 292.694 mo
164.368 291.038 163.024 289.694 161.368 289.694 cv
159.712 289.694 158.368 291.038 158.368 292.694 cv
158.368 294.349 159.712 295.694 161.368 295.694 cv
163.024 295.694 164.368 294.349 164.368 292.694 cv
168.688 292.933 mo
168.688 291.278 167.344 289.933 165.688 289.933 cv
164.032 289.933 162.688 291.278 162.688 292.933 cv
162.688 294.589 164.032 295.933 165.688 295.933 cv
167.344 295.933 168.688 294.589 168.688 292.933 cv
173.488 293.173 mo
173.488 291.517 172.144 290.173 170.488 290.173 cv
168.832 290.173 167.488 291.517 167.488 293.173 cv
167.488 294.83 168.832 296.173 170.488 296.173 cv
172.144 296.173 173.488 294.83 173.488 293.173 cv
178.288 293.173 mo
178.288 291.517 176.944 290.173 175.288 290.173 cv
173.632 290.173 172.288 291.517 172.288 293.173 cv
172.288 294.83 173.632 296.173 175.288 296.173 cv
176.944 296.173 178.288 294.83 178.288 293.173 cv
182.848 293.173 mo
182.848 291.517 181.504 290.173 179.848 290.173 cv
178.192 290.173 176.848 291.517 176.848 293.173 cv
176.848 294.83 178.192 296.173 179.848 296.173 cv
181.504 296.173 182.848 294.83 182.848 293.173 cv
187.408 293.173 mo
187.408 291.517 186.064 290.173 184.408 290.173 cv
182.752 290.173 181.408 291.517 181.408 293.173 cv
181.408 294.83 182.752 296.173 184.408 296.173 cv
186.064 296.173 187.408 294.83 187.408 293.173 cv
191.968 293.173 mo
191.968 291.517 190.624 290.173 188.968 290.173 cv
187.312 290.173 185.968 291.517 185.968 293.173 cv
185.968 294.83 187.312 296.173 188.968 296.173 cv
190.624 296.173 191.968 294.83 191.968 293.173 cv
196.768 293.173 mo
196.768 291.517 195.424 290.173 193.768 290.173 cv
192.112 290.173 190.768 291.517 190.768 293.173 cv
190.768 294.83 192.112 296.173 193.768 296.173 cv
195.424 296.173 196.768 294.83 196.768 293.173 cv
201.328 293.173 mo
201.328 291.517 199.984 290.173 198.328 290.173 cv
196.672 290.173 195.328 291.517 195.328 293.173 cv
195.328 294.83 196.672 296.173 198.328 296.173 cv
199.984 296.173 201.328 294.83 201.328 293.173 cv
206.128 293.173 mo
206.128 291.517 204.784 290.173 203.128 290.173 cv
201.472 290.173 200.128 291.517 200.128 293.173 cv
200.128 294.83 201.472 296.173 203.128 296.173 cv
204.784 296.173 206.128 294.83 206.128 293.173 cv
210.688 293.173 mo
210.688 291.517 209.344 290.173 207.688 290.173 cv
206.032 290.173 204.688 291.517 204.688 293.173 cv
204.688 294.83 206.032 296.173 207.688 296.173 cv
209.344 296.173 210.688 294.83 210.688 293.173 cv
.878019 .337896 1 .281529 cmyk
@
210.688 293.173 mo
210.688 291.517 209.344 290.173 207.688 290.173 cv
206.032 290.173 204.688 291.517 204.688 293.173 cv
204.688 294.83 206.032 296.173 207.688 296.173 cv
209.344 296.173 210.688 294.83 210.688 293.173 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
206.128 293.173 mo
206.128 291.517 204.784 290.173 203.128 290.173 cv
201.472 290.173 200.128 291.517 200.128 293.173 cv
200.128 294.83 201.472 296.173 203.128 296.173 cv
204.784 296.173 206.128 294.83 206.128 293.173 cv
ef
201.328 293.173 mo
201.328 291.517 199.984 290.173 198.328 290.173 cv
196.672 290.173 195.328 291.517 195.328 293.173 cv
195.328 294.83 196.672 296.173 198.328 296.173 cv
199.984 296.173 201.328 294.83 201.328 293.173 cv
ef
196.768 293.173 mo
196.768 291.517 195.424 290.173 193.768 290.173 cv
192.112 290.173 190.768 291.517 190.768 293.173 cv
190.768 294.83 192.112 296.173 193.768 296.173 cv
195.424 296.173 196.768 294.83 196.768 293.173 cv
ef
191.968 293.173 mo
191.968 291.517 190.624 290.173 188.968 290.173 cv
187.312 290.173 185.968 291.517 185.968 293.173 cv
185.968 294.83 187.312 296.173 188.968 296.173 cv
190.624 296.173 191.968 294.83 191.968 293.173 cv
ef
187.408 293.173 mo
187.408 291.517 186.064 290.173 184.408 290.173 cv
182.752 290.173 181.408 291.517 181.408 293.173 cv
181.408 294.83 182.752 296.173 184.408 296.173 cv
186.064 296.173 187.408 294.83 187.408 293.173 cv
ef
182.848 293.173 mo
182.848 291.517 181.504 290.173 179.848 290.173 cv
178.192 290.173 176.848 291.517 176.848 293.173 cv
176.848 294.83 178.192 296.173 179.848 296.173 cv
181.504 296.173 182.848 294.83 182.848 293.173 cv
ef
178.288 293.173 mo
178.288 291.517 176.944 290.173 175.288 290.173 cv
173.632 290.173 172.288 291.517 172.288 293.173 cv
172.288 294.83 173.632 296.173 175.288 296.173 cv
176.944 296.173 178.288 294.83 178.288 293.173 cv
ef
173.488 293.173 mo
173.488 291.517 172.144 290.173 170.488 290.173 cv
168.832 290.173 167.488 291.517 167.488 293.173 cv
167.488 294.83 168.832 296.173 170.488 296.173 cv
172.144 296.173 173.488 294.83 173.488 293.173 cv
ef
168.688 292.933 mo
168.688 291.278 167.344 289.933 165.688 289.933 cv
164.032 289.933 162.688 291.278 162.688 292.933 cv
162.688 294.589 164.032 295.933 165.688 295.933 cv
167.344 295.933 168.688 294.589 168.688 292.933 cv
ef
164.368 292.933 mo
164.368 291.278 163.024 289.933 161.368 289.933 cv
159.712 289.933 158.368 291.278 158.368 292.933 cv
158.368 294.589 159.712 295.933 161.368 295.933 cv
163.024 295.933 164.368 294.589 164.368 292.933 cv
ef
159.568 292.933 mo
159.568 291.278 158.224 289.933 156.568 289.933 cv
154.912 289.933 153.568 291.278 153.568 292.933 cv
153.568 294.589 154.912 295.933 156.568 295.933 cv
158.224 295.933 159.568 294.589 159.568 292.933 cv
ef
155.008 292.694 mo
155.008 291.038 153.664 289.694 152.008 289.694 cv
150.352 289.694 149.008 291.038 149.008 292.694 cv
149.008 294.349 150.352 295.694 152.008 295.694 cv
153.664 295.694 155.008 294.349 155.008 292.694 cv
ef
150.208 292.694 mo
150.208 291.038 148.864 289.694 147.208 289.694 cv
145.552 289.694 144.208 291.038 144.208 292.694 cv
144.208 294.349 145.552 295.694 147.208 295.694 cv
148.864 295.694 150.208 294.349 150.208 292.694 cv
ef
145.408 291.973 mo
145.408 290.317 144.064 288.973 142.408 288.973 cv
140.752 288.973 139.408 290.317 139.408 291.973 cv
139.408 293.629 140.752 294.973 142.408 294.973 cv
144.064 294.973 145.408 293.629 145.408 291.973 cv
ef
141.088 291.733 mo
141.088 290.078 139.744 288.733 138.088 288.733 cv
136.432 288.733 135.088 290.078 135.088 291.733 cv
135.088 293.389 136.432 294.733 138.088 294.733 cv
139.744 294.733 141.088 293.389 141.088 291.733 cv
ef
136.288 291.253 mo
136.288 289.597 134.944 288.253 133.288 288.253 cv
131.632 288.253 130.288 289.597 130.288 291.253 cv
130.288 292.91 131.632 294.253 133.288 294.253 cv
134.944 294.253 136.288 292.91 136.288 291.253 cv
ef
131.728 290.773 mo
131.728 289.118 130.384 287.773 128.728 287.773 cv
127.072 287.773 125.728 289.118 125.728 290.773 cv
125.728 292.429 127.072 293.773 128.728 293.773 cv
130.384 293.773 131.728 292.429 131.728 290.773 cv
ef
126.928 290.534 mo
126.928 288.877 125.584 287.534 123.928 287.534 cv
122.272 287.534 120.928 288.877 120.928 290.534 cv
120.928 292.189 122.272 293.534 123.928 293.534 cv
125.584 293.534 126.928 292.189 126.928 290.534 cv
ef
122.368 290.773 mo
122.368 289.118 121.024 287.773 119.368 287.773 cv
117.712 287.773 116.368 289.118 116.368 290.773 cv
116.368 292.429 117.712 293.773 119.368 293.773 cv
121.024 293.773 122.368 292.429 122.368 290.773 cv
ef
117.808 289.813 mo
117.808 288.158 116.464 286.813 114.808 286.813 cv
113.152 286.813 111.808 288.158 111.808 289.813 cv
111.808 291.469 113.152 292.813 114.808 292.813 cv
116.464 292.813 117.808 291.469 117.808 289.813 cv
ef
113.008 290.053 mo
113.008 288.397 111.664 287.053 110.008 287.053 cv
108.352 287.053 107.008 288.397 107.008 290.053 cv
107.008 291.709 108.352 293.053 110.008 293.053 cv
111.664 293.053 113.008 291.709 113.008 290.053 cv
ef
108.448 290.293 mo
108.448 288.637 107.104 287.293 105.448 287.293 cv
103.792 287.293 102.448 288.637 102.448 290.293 cv
102.448 291.95 103.792 293.293 105.448 293.293 cv
107.104 293.293 108.448 291.95 108.448 290.293 cv
ef
103.768 289.813 mo
103.768 288.158 102.424 286.813 100.768 286.813 cv
99.1118 286.813 97.7681 288.158 97.7681 289.813 cv
97.7681 291.469 99.1118 292.813 100.768 292.813 cv
102.424 292.813 103.768 291.469 103.768 289.813 cv
ef
99.3281 287.893 mo
99.3281 286.238 97.9839 284.893 96.3281 284.893 cv
94.6719 284.893 93.3281 286.238 93.3281 287.893 cv
93.3281 289.549 94.6719 290.893 96.3281 290.893 cv
97.9839 290.893 99.3281 289.549 99.3281 287.893 cv
ef
94.5278 287.414 mo
94.5278 285.757 93.1841 284.414 91.5278 284.414 cv
89.8721 284.414 88.5278 285.757 88.5278 287.414 cv
88.5278 289.07 89.8721 290.414 91.5278 290.414 cv
93.1841 290.414 94.5278 289.07 94.5278 287.414 cv
ef
89.728 285.253 mo
89.728 283.597 88.3843 282.253 86.728 282.253 cv
85.0723 282.253 83.728 283.597 83.728 285.253 cv
83.728 286.91 85.0723 288.253 86.728 288.253 cv
88.3843 288.253 89.728 286.91 89.728 285.253 cv
ef
85.168 281.654 mo
85.168 279.998 83.8242 278.654 82.168 278.654 cv
80.5122 278.654 79.168 279.998 79.168 281.654 cv
79.168 283.309 80.5122 284.654 82.168 284.654 cv
83.8242 284.654 85.168 283.309 85.168 281.654 cv
ef
80.6079 275.414 mo
80.6079 273.757 79.2642 272.414 77.6079 272.414 cv
75.9521 272.414 74.6079 273.757 74.6079 275.414 cv
74.6079 277.07 75.9521 278.414 77.6079 278.414 cv
79.2642 278.414 80.6079 277.07 80.6079 275.414 cv
ef
76.0479 264.374 mo
76.0479 262.717 74.7041 261.374 73.0479 261.374 cv
71.3921 261.374 70.0479 262.717 70.0479 264.374 cv
70.0479 266.03 71.3921 267.374 73.0479 267.374 cv
74.7041 267.374 76.0479 266.03 76.0479 264.374 cv
ef
71.248 247.813 mo
71.248 246.158 69.9038 244.813 68.248 244.813 cv
66.5923 244.813 65.248 246.158 65.248 247.813 cv
65.248 249.469 66.5923 250.813 68.248 250.813 cv
69.9038 250.813 71.248 249.469 71.248 247.813 cv
ef
66.4482 231.494 mo
66.4482 229.837 65.104 228.494 63.4482 228.494 cv
61.792 228.494 60.4482 229.837 60.4482 231.494 cv
60.4482 233.149 61.792 234.494 63.4482 234.494 cv
65.104 234.494 66.4482 233.149 66.4482 231.494 cv
ef
62.1279 257.173 mo
62.1279 255.517 60.7842 254.173 59.1279 254.173 cv
57.4722 254.173 56.1279 255.517 56.1279 257.173 cv
56.1279 258.83 57.4722 260.173 59.1279 260.173 cv
60.7842 260.173 62.1279 258.83 62.1279 257.173 cv
ef
207.198 303.963 mo
208.198 302.963 li
208.198 207.463 li
357.197 207.463 li
358.197 206.463 li
207.198 206.463 li
207.198 303.963 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
207.198 303.963 mo
358.197 303.963 li
207.198 303.963 mo
207.198 206.463 li
358.197 206.463 li
358.197 303.963 li
207.198 303.963 li
cp
0 0 0 1 cmyk
@
352.447 302.463 mo
352.447 303.963 li
346.447 301.213 mo
346.447 303.963 li
346.447 301.213 mo
346.447 303.963 li
340.697 302.463 mo
340.697 303.963 li
334.947 302.463 mo
334.947 303.963 li
329.197 302.463 mo
329.197 303.963 li
323.197 301.213 mo
323.197 303.963 li
317.448 302.463 mo
317.448 303.963 li
311.698 302.463 mo
311.698 303.963 li
305.948 302.463 mo
305.948 303.963 li
299.948 301.213 mo
299.948 303.963 li
294.198 302.463 mo
294.198 303.963 li
288.448 302.463 mo
288.448 303.963 li
282.698 302.463 mo
282.698 303.963 li
276.698 301.213 mo
276.698 303.963 li
270.948 302.463 mo
270.948 303.963 li
265.198 302.463 mo
265.198 303.963 li
259.448 302.463 mo
259.448 303.963 li
253.698 301.213 mo
253.698 303.963 li
247.698 302.463 mo
247.698 303.963 li
241.948 302.463 mo
241.948 303.963 li
236.198 302.463 mo
236.198 303.963 li
230.448 301.213 mo
230.448 303.963 li
224.448 302.463 mo
224.448 303.963 li
218.698 302.463 mo
218.698 303.963 li
212.948 302.463 mo
212.948 303.963 li
207.198 301.213 mo
207.198 303.963 li
@
207.198 303.963 mo
207.198 206.463 li
@
211.698 206.463 mo
207.198 206.463 li
211.698 303.963 mo
207.198 303.963 li
211.698 206.463 mo
207.198 206.463 li
209.448 209.213 mo
207.198 209.213 li
209.448 211.963 mo
207.198 211.963 li
209.448 214.713 mo
207.198 214.713 li
211.698 217.463 mo
207.198 217.463 li
209.448 219.963 mo
207.198 219.963 li
209.448 222.713 mo
207.198 222.713 li
209.448 225.463 mo
207.198 225.463 li
211.698 228.213 mo
207.198 228.213 li
209.448 230.963 mo
207.198 230.963 li
209.448 233.713 mo
207.198 233.713 li
209.448 236.213 mo
207.198 236.213 li
211.698 238.963 mo
207.198 238.963 li
209.448 241.713 mo
207.198 241.713 li
209.448 244.463 mo
207.198 244.463 li
209.448 247.213 mo
207.198 247.213 li
211.698 249.963 mo
207.198 249.963 li
209.448 252.463 mo
207.198 252.463 li
209.448 255.213 mo
207.198 255.213 li
209.448 257.963 mo
207.198 257.963 li
211.698 260.713 mo
207.198 260.713 li
209.448 263.463 mo
207.198 263.463 li
209.448 266.213 mo
207.198 266.213 li
209.448 268.713 mo
207.198 268.713 li
211.698 271.463 mo
207.198 271.463 li
209.448 274.213 mo
207.198 274.213 li
209.448 276.963 mo
207.198 276.963 li
209.448 279.713 mo
207.198 279.713 li
211.698 282.463 mo
207.198 282.463 li
209.448 284.963 mo
207.198 284.963 li
209.448 287.713 mo
207.198 287.713 li
209.448 290.463 mo
207.198 290.463 li
211.698 293.213 mo
207.198 293.213 li
209.448 295.963 mo
207.198 295.963 li
209.448 298.713 mo
207.198 298.713 li
209.448 301.213 mo
207.198 301.213 li
211.698 303.963 mo
207.198 303.963 li
@
361.248 293.173 mo
361.248 291.517 359.904 290.173 358.248 290.173 cv
356.592 290.173 355.248 291.517 355.248 293.173 cv
355.248 294.83 356.592 296.173 358.248 296.173 cv
359.904 296.173 361.248 294.83 361.248 293.173 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.447 293.173 mo
356.447 291.517 355.104 290.173 353.447 290.173 cv
351.791 290.173 350.447 291.517 350.447 293.173 cv
350.447 294.83 351.791 296.173 353.447 296.173 cv
355.104 296.173 356.447 294.83 356.447 293.173 cv
ef
351.889 293.173 mo
351.889 291.517 350.543 290.173 348.889 290.173 cv
347.232 290.173 345.889 291.517 345.889 293.173 cv
345.889 294.83 347.232 296.173 348.889 296.173 cv
350.543 296.173 351.889 294.83 351.889 293.173 cv
ef
347.088 293.173 mo
347.088 291.517 345.744 290.173 344.088 290.173 cv
342.432 290.173 341.088 291.517 341.088 293.173 cv
341.088 294.83 342.432 296.173 344.088 296.173 cv
345.744 296.173 347.088 294.83 347.088 293.173 cv
ef
342.527 293.173 mo
342.527 291.517 341.184 290.173 339.527 290.173 cv
337.871 290.173 336.527 291.517 336.527 293.173 cv
336.527 294.83 337.871 296.173 339.527 296.173 cv
341.184 296.173 342.527 294.83 342.527 293.173 cv
ef
337.967 293.173 mo
337.967 291.517 336.623 290.173 334.967 290.173 cv
333.313 290.173 331.967 291.517 331.967 293.173 cv
331.967 294.83 333.313 296.173 334.967 296.173 cv
336.623 296.173 337.967 294.83 337.967 293.173 cv
ef
333.168 293.173 mo
333.168 291.517 331.824 290.173 330.168 290.173 cv
328.512 290.173 327.168 291.517 327.168 293.173 cv
327.168 294.83 328.512 296.173 330.168 296.173 cv
331.824 296.173 333.168 294.83 333.168 293.173 cv
ef
328.607 293.173 mo
328.607 291.517 327.264 290.173 325.607 290.173 cv
323.951 290.173 322.607 291.517 322.607 293.173 cv
322.607 294.83 323.951 296.173 325.607 296.173 cv
327.264 296.173 328.607 294.83 328.607 293.173 cv
ef
324.047 292.933 mo
324.047 291.278 322.703 289.933 321.047 289.933 cv
319.392 289.933 318.047 291.278 318.047 292.933 cv
318.047 294.589 319.392 295.933 321.047 295.933 cv
322.703 295.933 324.047 294.589 324.047 292.933 cv
ef
319.248 292.933 mo
319.248 291.278 317.904 289.933 316.248 289.933 cv
314.591 289.933 313.248 291.278 313.248 292.933 cv
313.248 294.589 314.591 295.933 316.248 295.933 cv
317.904 295.933 319.248 294.589 319.248 292.933 cv
ef
314.688 292.933 mo
314.688 291.278 313.344 289.933 311.688 289.933 cv
310.032 289.933 308.688 291.278 308.688 292.933 cv
308.688 294.589 310.032 295.933 311.688 295.933 cv
313.344 295.933 314.688 294.589 314.688 292.933 cv
ef
309.888 292.933 mo
309.888 291.278 308.543 289.933 306.888 289.933 cv
305.232 289.933 303.888 291.278 303.888 292.933 cv
303.888 294.589 305.232 295.933 306.888 295.933 cv
308.543 295.933 309.888 294.589 309.888 292.933 cv
ef
305.448 292.694 mo
305.448 291.038 304.104 289.694 302.448 289.694 cv
300.792 289.694 299.448 291.038 299.448 292.694 cv
299.448 294.349 300.792 295.694 302.448 295.694 cv
304.104 295.694 305.448 294.349 305.448 292.694 cv
ef
300.768 292.454 mo
300.768 290.797 299.423 289.454 297.768 289.454 cv
296.112 289.454 294.768 290.797 294.768 292.454 cv
294.768 294.11 296.112 295.454 297.768 295.454 cv
299.423 295.454 300.768 294.11 300.768 292.454 cv
ef
296.208 291.973 mo
296.208 290.317 294.864 288.973 293.208 288.973 cv
291.551 288.973 290.208 290.317 290.208 291.973 cv
290.208 293.629 291.551 294.973 293.208 294.973 cv
294.864 294.973 296.208 293.629 296.208 291.973 cv
ef
291.408 291.494 mo
291.408 289.837 290.064 288.494 288.408 288.494 cv
286.751 288.494 285.408 289.837 285.408 291.494 cv
285.408 293.149 286.751 294.494 288.408 294.494 cv
290.064 294.494 291.408 293.149 291.408 291.494 cv
ef
286.608 291.013 mo
286.608 289.357 285.264 288.013 283.608 288.013 cv
281.952 288.013 280.608 289.357 280.608 291.013 cv
280.608 292.669 281.952 294.013 283.608 294.013 cv
285.264 294.013 286.608 292.669 286.608 291.013 cv
ef
282.288 290.534 mo
282.288 288.877 280.944 287.534 279.288 287.534 cv
277.632 287.534 276.288 288.877 276.288 290.534 cv
276.288 292.189 277.632 293.534 279.288 293.534 cv
280.944 293.534 282.288 292.189 282.288 290.534 cv
ef
277.488 290.293 mo
277.488 288.637 276.144 287.293 274.488 287.293 cv
272.832 287.293 271.488 288.637 271.488 290.293 cv
271.488 291.95 272.832 293.293 274.488 293.293 cv
276.144 293.293 277.488 291.95 277.488 290.293 cv
ef
272.928 290.053 mo
272.928 288.397 271.583 287.053 269.928 287.053 cv
268.272 287.053 266.928 288.397 266.928 290.053 cv
266.928 291.709 268.272 293.053 269.928 293.053 cv
271.583 293.053 272.928 291.709 272.928 290.053 cv
ef
268.128 289.574 mo
268.128 287.917 266.784 286.574 265.128 286.574 cv
263.472 286.574 262.128 287.917 262.128 289.574 cv
262.128 291.229 263.472 292.574 265.128 292.574 cv
266.784 292.574 268.128 291.229 268.128 289.574 cv
ef
263.448 289.813 mo
263.448 288.158 262.104 286.813 260.448 286.813 cv
258.792 286.813 257.448 288.158 257.448 289.813 cv
257.448 291.469 258.792 292.813 260.448 292.813 cv
262.104 292.813 263.448 291.469 263.448 289.813 cv
ef
259.008 289.574 mo
259.008 287.917 257.664 286.574 256.008 286.574 cv
254.352 286.574 253.008 287.917 253.008 289.574 cv
253.008 291.229 254.352 292.574 256.008 292.574 cv
257.664 292.574 259.008 291.229 259.008 289.574 cv
ef
254.208 287.893 mo
254.208 286.238 252.864 284.893 251.208 284.893 cv
249.552 284.893 248.208 286.238 248.208 287.893 cv
248.208 289.549 249.552 290.893 251.208 290.893 cv
252.864 290.893 254.208 289.549 254.208 287.893 cv
ef
249.648 287.173 mo
249.648 285.517 248.304 284.173 246.648 284.173 cv
244.992 284.173 243.648 285.517 243.648 287.173 cv
243.648 288.83 244.992 290.173 246.648 290.173 cv
248.304 290.173 249.648 288.83 249.648 287.173 cv
ef
244.848 286.694 mo
244.848 285.038 243.504 283.694 241.848 283.694 cv
240.192 283.694 238.848 285.038 238.848 286.694 cv
238.848 288.349 240.192 289.694 241.848 289.694 cv
243.504 289.694 244.848 288.349 244.848 286.694 cv
ef
240.288 284.293 mo
240.288 282.637 238.944 281.293 237.288 281.293 cv
235.632 281.293 234.288 282.637 234.288 284.293 cv
234.288 285.95 235.632 287.293 237.288 287.293 cv
238.944 287.293 240.288 285.95 240.288 284.293 cv
ef
235.728 280.454 mo
235.728 278.797 234.384 277.454 232.728 277.454 cv
231.072 277.454 229.728 278.797 229.728 280.454 cv
229.728 282.11 231.072 283.454 232.728 283.454 cv
234.384 283.454 235.728 282.11 235.728 280.454 cv
ef
230.928 274.694 mo
230.928 273.038 229.583 271.694 227.928 271.694 cv
226.272 271.694 224.928 273.038 224.928 274.694 cv
224.928 276.349 226.272 277.694 227.928 277.694 cv
229.583 277.694 230.928 276.349 230.928 274.694 cv
ef
226.368 265.574 mo
226.368 263.917 225.024 262.574 223.368 262.574 cv
221.712 262.574 220.368 263.917 220.368 265.574 cv
220.368 267.229 221.712 268.574 223.368 268.574 cv
225.024 268.574 226.368 267.229 226.368 265.574 cv
ef
221.808 251.173 mo
221.808 249.517 220.464 248.173 218.808 248.173 cv
217.152 248.173 215.808 249.517 215.808 251.173 cv
215.808 252.83 217.152 254.173 218.808 254.173 cv
220.464 254.173 221.808 252.83 221.808 251.173 cv
ef
217.248 239.173 mo
217.248 237.517 215.904 236.173 214.248 236.173 cv
212.592 236.173 211.248 237.517 211.248 239.173 cv
211.248 240.83 212.592 242.173 214.248 242.173 cv
215.904 242.173 217.248 240.83 217.248 239.173 cv
ef
212.448 259.574 mo
212.448 257.917 211.104 256.574 209.448 256.574 cv
207.792 256.574 206.448 257.917 206.448 259.574 cv
206.448 261.229 207.792 262.574 209.448 262.574 cv
211.104 262.574 212.448 261.229 212.448 259.574 cv
ef
207.198 293.213 mo
299.948 293.213 li
0 0 0 1 cmyk
@
212.448 242.773 mo
212.448 241.118 211.104 239.773 209.448 239.773 cv
207.792 239.773 206.448 241.118 206.448 242.773 cv
206.448 244.429 207.792 245.773 209.448 245.773 cv
211.104 245.773 212.448 244.429 212.448 242.773 cv
217.248 251.414 mo
217.248 249.757 215.904 248.414 214.248 248.414 cv
212.592 248.414 211.248 249.757 211.248 251.414 cv
211.248 253.07 212.592 254.414 214.248 254.414 cv
215.904 254.414 217.248 253.07 217.248 251.414 cv
221.808 260.534 mo
221.808 258.877 220.464 257.534 218.808 257.534 cv
217.152 257.534 215.808 258.877 215.808 260.534 cv
215.808 262.189 217.152 263.534 218.808 263.534 cv
220.464 263.534 221.808 262.189 221.808 260.534 cv
226.368 270.133 mo
226.368 268.477 225.024 267.133 223.368 267.133 cv
221.712 267.133 220.368 268.477 220.368 270.133 cv
220.368 271.79 221.712 273.133 223.368 273.133 cv
225.024 273.133 226.368 271.79 226.368 270.133 cv
230.928 276.374 mo
230.928 274.717 229.583 273.374 227.928 273.374 cv
226.272 273.374 224.928 274.717 224.928 276.374 cv
224.928 278.03 226.272 279.374 227.928 279.374 cv
229.583 279.374 230.928 278.03 230.928 276.374 cv
235.728 280.694 mo
235.728 279.038 234.384 277.694 232.728 277.694 cv
231.072 277.694 229.728 279.038 229.728 280.694 cv
229.728 282.349 231.072 283.694 232.728 283.694 cv
234.384 283.694 235.728 282.349 235.728 280.694 cv
240.288 283.574 mo
240.288 281.917 238.944 280.574 237.288 280.574 cv
235.632 280.574 234.288 281.917 234.288 283.574 cv
234.288 285.229 235.632 286.574 237.288 286.574 cv
238.944 286.574 240.288 285.229 240.288 283.574 cv
244.848 285.494 mo
244.848 283.837 243.504 282.494 241.848 282.494 cv
240.192 282.494 238.848 283.837 238.848 285.494 cv
238.848 287.149 240.192 288.494 241.848 288.494 cv
243.504 288.494 244.848 287.149 244.848 285.494 cv
249.648 286.454 mo
249.648 284.797 248.304 283.454 246.648 283.454 cv
244.992 283.454 243.648 284.797 243.648 286.454 cv
243.648 288.11 244.992 289.454 246.648 289.454 cv
248.304 289.454 249.648 288.11 249.648 286.454 cv
254.208 287.654 mo
254.208 285.998 252.864 284.654 251.208 284.654 cv
249.552 284.654 248.208 285.998 248.208 287.654 cv
248.208 289.309 249.552 290.654 251.208 290.654 cv
252.864 290.654 254.208 289.309 254.208 287.654 cv
259.008 288.374 mo
259.008 286.717 257.664 285.374 256.008 285.374 cv
254.352 285.374 253.008 286.717 253.008 288.374 cv
253.008 290.03 254.352 291.374 256.008 291.374 cv
257.664 291.374 259.008 290.03 259.008 288.374 cv
263.448 288.614 mo
263.448 286.958 262.104 285.614 260.448 285.614 cv
258.792 285.614 257.448 286.958 257.448 288.614 cv
257.448 290.269 258.792 291.614 260.448 291.614 cv
262.104 291.614 263.448 290.269 263.448 288.614 cv
268.128 288.853 mo
268.128 287.198 266.784 285.853 265.128 285.853 cv
263.472 285.853 262.128 287.198 262.128 288.853 cv
262.128 290.509 263.472 291.853 265.128 291.853 cv
266.784 291.853 268.128 290.509 268.128 288.853 cv
272.928 288.853 mo
272.928 287.198 271.583 285.853 269.928 285.853 cv
268.272 285.853 266.928 287.198 266.928 288.853 cv
266.928 290.509 268.272 291.853 269.928 291.853 cv
271.583 291.853 272.928 290.509 272.928 288.853 cv
277.488 289.574 mo
277.488 287.917 276.144 286.574 274.488 286.574 cv
272.832 286.574 271.488 287.917 271.488 289.574 cv
271.488 291.229 272.832 292.574 274.488 292.574 cv
276.144 292.574 277.488 291.229 277.488 289.574 cv
282.288 289.813 mo
282.288 288.158 280.944 286.813 279.288 286.813 cv
277.632 286.813 276.288 288.158 276.288 289.813 cv
276.288 291.469 277.632 292.813 279.288 292.813 cv
280.944 292.813 282.288 291.469 282.288 289.813 cv
286.608 290.293 mo
286.608 288.637 285.264 287.293 283.608 287.293 cv
281.952 287.293 280.608 288.637 280.608 290.293 cv
280.608 291.95 281.952 293.293 283.608 293.293 cv
285.264 293.293 286.608 291.95 286.608 290.293 cv
291.408 290.534 mo
291.408 288.877 290.064 287.534 288.408 287.534 cv
286.751 287.534 285.408 288.877 285.408 290.534 cv
285.408 292.189 286.751 293.534 288.408 293.534 cv
290.064 293.534 291.408 292.189 291.408 290.534 cv
296.208 291.494 mo
296.208 289.837 294.864 288.494 293.208 288.494 cv
291.551 288.494 290.208 289.837 290.208 291.494 cv
290.208 293.149 291.551 294.494 293.208 294.494 cv
294.864 294.494 296.208 293.149 296.208 291.494 cv
300.768 291.973 mo
300.768 290.317 299.423 288.973 297.768 288.973 cv
296.112 288.973 294.768 290.317 294.768 291.973 cv
294.768 293.629 296.112 294.973 297.768 294.973 cv
299.423 294.973 300.768 293.629 300.768 291.973 cv
305.448 292.213 mo
305.448 290.557 304.104 289.213 302.448 289.213 cv
300.792 289.213 299.448 290.557 299.448 292.213 cv
299.448 293.87 300.792 295.213 302.448 295.213 cv
304.104 295.213 305.448 293.87 305.448 292.213 cv
309.888 292.454 mo
309.888 290.797 308.543 289.454 306.888 289.454 cv
305.232 289.454 303.888 290.797 303.888 292.454 cv
303.888 294.11 305.232 295.454 306.888 295.454 cv
308.543 295.454 309.888 294.11 309.888 292.454 cv
314.688 292.694 mo
314.688 291.038 313.344 289.694 311.688 289.694 cv
310.032 289.694 308.688 291.038 308.688 292.694 cv
308.688 294.349 310.032 295.694 311.688 295.694 cv
313.344 295.694 314.688 294.349 314.688 292.694 cv
319.248 292.933 mo
319.248 291.278 317.904 289.933 316.248 289.933 cv
314.591 289.933 313.248 291.278 313.248 292.933 cv
313.248 294.589 314.591 295.933 316.248 295.933 cv
317.904 295.933 319.248 294.589 319.248 292.933 cv
324.047 292.933 mo
324.047 291.278 322.703 289.933 321.047 289.933 cv
319.392 289.933 318.047 291.278 318.047 292.933 cv
318.047 294.589 319.392 295.933 321.047 295.933 cv
322.703 295.933 324.047 294.589 324.047 292.933 cv
328.607 293.173 mo
328.607 291.517 327.264 290.173 325.607 290.173 cv
323.951 290.173 322.607 291.517 322.607 293.173 cv
322.607 294.83 323.951 296.173 325.607 296.173 cv
327.264 296.173 328.607 294.83 328.607 293.173 cv
333.168 293.173 mo
333.168 291.517 331.824 290.173 330.168 290.173 cv
328.512 290.173 327.168 291.517 327.168 293.173 cv
327.168 294.83 328.512 296.173 330.168 296.173 cv
331.824 296.173 333.168 294.83 333.168 293.173 cv
337.967 293.173 mo
337.967 291.517 336.623 290.173 334.967 290.173 cv
333.313 290.173 331.967 291.517 331.967 293.173 cv
331.967 294.83 333.313 296.173 334.967 296.173 cv
336.623 296.173 337.967 294.83 337.967 293.173 cv
342.527 293.173 mo
342.527 291.517 341.184 290.173 339.527 290.173 cv
337.871 290.173 336.527 291.517 336.527 293.173 cv
336.527 294.83 337.871 296.173 339.527 296.173 cv
341.184 296.173 342.527 294.83 342.527 293.173 cv
347.088 293.173 mo
347.088 291.517 345.744 290.173 344.088 290.173 cv
342.432 290.173 341.088 291.517 341.088 293.173 cv
341.088 294.83 342.432 296.173 344.088 296.173 cv
345.744 296.173 347.088 294.83 347.088 293.173 cv
351.889 293.173 mo
351.889 291.517 350.543 290.173 348.889 290.173 cv
347.232 290.173 345.889 291.517 345.889 293.173 cv
345.889 294.83 347.232 296.173 348.889 296.173 cv
350.543 296.173 351.889 294.83 351.889 293.173 cv
356.447 293.173 mo
356.447 291.517 355.104 290.173 353.447 290.173 cv
351.791 290.173 350.447 291.517 350.447 293.173 cv
350.447 294.83 351.791 296.173 353.447 296.173 cv
355.104 296.173 356.447 294.83 356.447 293.173 cv
361.248 293.173 mo
361.248 291.517 359.904 290.173 358.248 290.173 cv
356.592 290.173 355.248 291.517 355.248 293.173 cv
355.248 294.83 356.592 296.173 358.248 296.173 cv
359.904 296.173 361.248 294.83 361.248 293.173 cv
.878019 .337896 1 .281529 cmyk
@
361.248 293.173 mo
361.248 291.517 359.904 290.173 358.248 290.173 cv
356.592 290.173 355.248 291.517 355.248 293.173 cv
355.248 294.83 356.592 296.173 358.248 296.173 cv
359.904 296.173 361.248 294.83 361.248 293.173 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
356.447 293.173 mo
356.447 291.517 355.104 290.173 353.447 290.173 cv
351.791 290.173 350.447 291.517 350.447 293.173 cv
350.447 294.83 351.791 296.173 353.447 296.173 cv
355.104 296.173 356.447 294.83 356.447 293.173 cv
ef
351.889 293.173 mo
351.889 291.517 350.543 290.173 348.889 290.173 cv
347.232 290.173 345.889 291.517 345.889 293.173 cv
345.889 294.83 347.232 296.173 348.889 296.173 cv
350.543 296.173 351.889 294.83 351.889 293.173 cv
ef
347.088 293.173 mo
347.088 291.517 345.744 290.173 344.088 290.173 cv
342.432 290.173 341.088 291.517 341.088 293.173 cv
341.088 294.83 342.432 296.173 344.088 296.173 cv
345.744 296.173 347.088 294.83 347.088 293.173 cv
ef
342.527 293.173 mo
342.527 291.517 341.184 290.173 339.527 290.173 cv
337.871 290.173 336.527 291.517 336.527 293.173 cv
336.527 294.83 337.871 296.173 339.527 296.173 cv
341.184 296.173 342.527 294.83 342.527 293.173 cv
ef
337.967 293.173 mo
337.967 291.517 336.623 290.173 334.967 290.173 cv
333.313 290.173 331.967 291.517 331.967 293.173 cv
331.967 294.83 333.313 296.173 334.967 296.173 cv
336.623 296.173 337.967 294.83 337.967 293.173 cv
ef
333.168 293.173 mo
333.168 291.517 331.824 290.173 330.168 290.173 cv
328.512 290.173 327.168 291.517 327.168 293.173 cv
327.168 294.83 328.512 296.173 330.168 296.173 cv
331.824 296.173 333.168 294.83 333.168 293.173 cv
ef
328.607 293.173 mo
328.607 291.517 327.264 290.173 325.607 290.173 cv
323.951 290.173 322.607 291.517 322.607 293.173 cv
322.607 294.83 323.951 296.173 325.607 296.173 cv
327.264 296.173 328.607 294.83 328.607 293.173 cv
ef
324.047 292.933 mo
324.047 291.278 322.703 289.933 321.047 289.933 cv
319.392 289.933 318.047 291.278 318.047 292.933 cv
318.047 294.589 319.392 295.933 321.047 295.933 cv
322.703 295.933 324.047 294.589 324.047 292.933 cv
ef
319.248 292.933 mo
319.248 291.278 317.904 289.933 316.248 289.933 cv
314.591 289.933 313.248 291.278 313.248 292.933 cv
313.248 294.589 314.591 295.933 316.248 295.933 cv
317.904 295.933 319.248 294.589 319.248 292.933 cv
ef
314.688 292.933 mo
314.688 291.278 313.344 289.933 311.688 289.933 cv
310.032 289.933 308.688 291.278 308.688 292.933 cv
308.688 294.589 310.032 295.933 311.688 295.933 cv
313.344 295.933 314.688 294.589 314.688 292.933 cv
ef
309.888 292.933 mo
309.888 291.278 308.543 289.933 306.888 289.933 cv
305.232 289.933 303.888 291.278 303.888 292.933 cv
303.888 294.589 305.232 295.933 306.888 295.933 cv
308.543 295.933 309.888 294.589 309.888 292.933 cv
ef
305.448 292.694 mo
305.448 291.038 304.104 289.694 302.448 289.694 cv
300.792 289.694 299.448 291.038 299.448 292.694 cv
299.448 294.349 300.792 295.694 302.448 295.694 cv
304.104 295.694 305.448 294.349 305.448 292.694 cv
ef
300.768 292.454 mo
300.768 290.797 299.423 289.454 297.768 289.454 cv
296.112 289.454 294.768 290.797 294.768 292.454 cv
294.768 294.11 296.112 295.454 297.768 295.454 cv
299.423 295.454 300.768 294.11 300.768 292.454 cv
ef
296.208 291.973 mo
296.208 290.317 294.864 288.973 293.208 288.973 cv
291.551 288.973 290.208 290.317 290.208 291.973 cv
290.208 293.629 291.551 294.973 293.208 294.973 cv
294.864 294.973 296.208 293.629 296.208 291.973 cv
ef
291.408 291.494 mo
291.408 289.837 290.064 288.494 288.408 288.494 cv
286.751 288.494 285.408 289.837 285.408 291.494 cv
285.408 293.149 286.751 294.494 288.408 294.494 cv
290.064 294.494 291.408 293.149 291.408 291.494 cv
ef
286.608 291.013 mo
286.608 289.357 285.264 288.013 283.608 288.013 cv
281.952 288.013 280.608 289.357 280.608 291.013 cv
280.608 292.669 281.952 294.013 283.608 294.013 cv
285.264 294.013 286.608 292.669 286.608 291.013 cv
ef
282.288 290.534 mo
282.288 288.877 280.944 287.534 279.288 287.534 cv
277.632 287.534 276.288 288.877 276.288 290.534 cv
276.288 292.189 277.632 293.534 279.288 293.534 cv
280.944 293.534 282.288 292.189 282.288 290.534 cv
ef
277.488 290.293 mo
277.488 288.637 276.144 287.293 274.488 287.293 cv
272.832 287.293 271.488 288.637 271.488 290.293 cv
271.488 291.95 272.832 293.293 274.488 293.293 cv
276.144 293.293 277.488 291.95 277.488 290.293 cv
ef
272.928 290.053 mo
272.928 288.397 271.583 287.053 269.928 287.053 cv
268.272 287.053 266.928 288.397 266.928 290.053 cv
266.928 291.709 268.272 293.053 269.928 293.053 cv
271.583 293.053 272.928 291.709 272.928 290.053 cv
ef
268.128 289.574 mo
268.128 287.917 266.784 286.574 265.128 286.574 cv
263.472 286.574 262.128 287.917 262.128 289.574 cv
262.128 291.229 263.472 292.574 265.128 292.574 cv
266.784 292.574 268.128 291.229 268.128 289.574 cv
ef
263.448 289.813 mo
263.448 288.158 262.104 286.813 260.448 286.813 cv
258.792 286.813 257.448 288.158 257.448 289.813 cv
257.448 291.469 258.792 292.813 260.448 292.813 cv
262.104 292.813 263.448 291.469 263.448 289.813 cv
ef
259.008 289.574 mo
259.008 287.917 257.664 286.574 256.008 286.574 cv
254.352 286.574 253.008 287.917 253.008 289.574 cv
253.008 291.229 254.352 292.574 256.008 292.574 cv
257.664 292.574 259.008 291.229 259.008 289.574 cv
ef
254.208 287.893 mo
254.208 286.238 252.864 284.893 251.208 284.893 cv
249.552 284.893 248.208 286.238 248.208 287.893 cv
248.208 289.549 249.552 290.893 251.208 290.893 cv
252.864 290.893 254.208 289.549 254.208 287.893 cv
ef
249.648 287.173 mo
249.648 285.517 248.304 284.173 246.648 284.173 cv
244.992 284.173 243.648 285.517 243.648 287.173 cv
243.648 288.83 244.992 290.173 246.648 290.173 cv
248.304 290.173 249.648 288.83 249.648 287.173 cv
ef
244.848 286.694 mo
244.848 285.038 243.504 283.694 241.848 283.694 cv
240.192 283.694 238.848 285.038 238.848 286.694 cv
238.848 288.349 240.192 289.694 241.848 289.694 cv
243.504 289.694 244.848 288.349 244.848 286.694 cv
ef
240.288 284.293 mo
240.288 282.637 238.944 281.293 237.288 281.293 cv
235.632 281.293 234.288 282.637 234.288 284.293 cv
234.288 285.95 235.632 287.293 237.288 287.293 cv
238.944 287.293 240.288 285.95 240.288 284.293 cv
ef
235.728 280.454 mo
235.728 278.797 234.384 277.454 232.728 277.454 cv
231.072 277.454 229.728 278.797 229.728 280.454 cv
229.728 282.11 231.072 283.454 232.728 283.454 cv
234.384 283.454 235.728 282.11 235.728 280.454 cv
ef
230.928 274.694 mo
230.928 273.038 229.583 271.694 227.928 271.694 cv
226.272 271.694 224.928 273.038 224.928 274.694 cv
224.928 276.349 226.272 277.694 227.928 277.694 cv
229.583 277.694 230.928 276.349 230.928 274.694 cv
ef
226.368 265.574 mo
226.368 263.917 225.024 262.574 223.368 262.574 cv
221.712 262.574 220.368 263.917 220.368 265.574 cv
220.368 267.229 221.712 268.574 223.368 268.574 cv
225.024 268.574 226.368 267.229 226.368 265.574 cv
ef
221.808 251.173 mo
221.808 249.517 220.464 248.173 218.808 248.173 cv
217.152 248.173 215.808 249.517 215.808 251.173 cv
215.808 252.83 217.152 254.173 218.808 254.173 cv
220.464 254.173 221.808 252.83 221.808 251.173 cv
ef
217.248 239.173 mo
217.248 237.517 215.904 236.173 214.248 236.173 cv
212.592 236.173 211.248 237.517 211.248 239.173 cv
211.248 240.83 212.592 242.173 214.248 242.173 cv
215.904 242.173 217.248 240.83 217.248 239.173 cv
ef
212.448 259.574 mo
212.448 257.917 211.104 256.574 209.448 256.574 cv
207.792 256.574 206.448 257.917 206.448 259.574 cv
206.448 261.229 207.792 262.574 209.448 262.574 cv
211.104 262.574 212.448 261.229 212.448 259.574 cv
ef
358.188 303.963 mo
359.188 302.963 li
359.188 207.463 li
508.688 207.463 li
509.688 206.463 li
358.188 206.463 li
358.188 303.963 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
358.188 303.963 mo
509.688 303.963 li
358.188 303.963 mo
358.188 206.463 li
509.688 206.463 li
509.688 303.963 li
358.188 303.963 li
cp
0 0 0 1 cmyk
@
503.938 302.463 mo
503.938 303.963 li
497.938 301.213 mo
497.938 303.963 li
497.938 301.213 mo
497.938 303.963 li
492.188 302.463 mo
492.188 303.963 li
486.438 302.463 mo
486.438 303.963 li
480.438 302.463 mo
480.438 303.963 li
474.688 301.213 mo
474.688 303.963 li
468.938 302.463 mo
468.938 303.963 li
463.188 302.463 mo
463.188 303.963 li
457.188 302.463 mo
457.188 303.963 li
451.438 301.213 mo
451.438 303.963 li
445.688 302.463 mo
445.688 303.963 li
439.688 302.463 mo
439.688 303.963 li
433.938 302.463 mo
433.938 303.963 li
428.188 301.213 mo
428.188 303.963 li
422.188 302.463 mo
422.188 303.963 li
416.438 302.463 mo
416.438 303.963 li
410.688 302.463 mo
410.688 303.963 li
404.688 301.213 mo
404.688 303.963 li
398.938 302.463 mo
398.938 303.963 li
393.188 302.463 mo
393.188 303.963 li
387.438 302.463 mo
387.438 303.963 li
381.438 301.213 mo
381.438 303.963 li
375.688 302.463 mo
375.688 303.963 li
369.938 302.463 mo
369.938 303.963 li
363.938 302.463 mo
363.938 303.963 li
358.188 301.213 mo
358.188 303.963 li
@
358.188 303.963 mo
358.188 206.463 li
@
362.688 206.463 mo
358.188 206.463 li
362.688 303.963 mo
358.188 303.963 li
362.688 206.463 mo
358.188 206.463 li
360.438 209.213 mo
358.188 209.213 li
360.438 211.963 mo
358.188 211.963 li
360.438 214.713 mo
358.188 214.713 li
362.688 217.463 mo
358.188 217.463 li
360.438 219.963 mo
358.188 219.963 li
360.438 222.713 mo
358.188 222.713 li
360.438 225.463 mo
358.188 225.463 li
362.688 228.213 mo
358.188 228.213 li
360.438 230.963 mo
358.188 230.963 li
360.438 233.713 mo
358.188 233.713 li
360.438 236.213 mo
358.188 236.213 li
362.688 238.963 mo
358.188 238.963 li
360.438 241.713 mo
358.188 241.713 li
360.438 244.463 mo
358.188 244.463 li
360.438 247.213 mo
358.188 247.213 li
362.688 249.963 mo
358.188 249.963 li
360.438 252.463 mo
358.188 252.463 li
360.438 255.213 mo
358.188 255.213 li
360.438 257.963 mo
358.188 257.963 li
362.688 260.713 mo
358.188 260.713 li
360.438 263.463 mo
358.188 263.463 li
360.438 266.213 mo
358.188 266.213 li
360.438 268.713 mo
358.188 268.713 li
362.688 271.463 mo
358.188 271.463 li
360.438 274.213 mo
358.188 274.213 li
360.438 276.963 mo
358.188 276.963 li
360.438 279.713 mo
358.188 279.713 li
362.688 282.463 mo
358.188 282.463 li
360.438 284.963 mo
358.188 284.963 li
360.438 287.713 mo
358.188 287.713 li
360.438 290.463 mo
358.188 290.463 li
362.688 293.213 mo
358.188 293.213 li
360.438 295.963 mo
358.188 295.963 li
360.438 298.713 mo
358.188 298.713 li
360.438 301.213 mo
358.188 301.213 li
362.688 303.963 mo
358.188 303.963 li
@
512.607 293.172 mo
512.607 291.516 511.264 290.172 509.607 290.172 cv
507.951 290.172 506.607 291.516 506.607 293.172 cv
506.607 294.829 507.951 296.172 509.607 296.172 cv
511.264 296.172 512.607 294.829 512.607 293.172 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
508.049 293.172 mo
508.049 291.516 506.703 290.172 505.049 290.172 cv
503.393 290.172 502.049 291.516 502.049 293.172 cv
502.049 294.829 503.393 296.172 505.049 296.172 cv
506.703 296.172 508.049 294.829 508.049 293.172 cv
ef
503.488 293.172 mo
503.488 291.516 502.145 290.172 500.488 290.172 cv
498.832 290.172 497.488 291.516 497.488 293.172 cv
497.488 294.829 498.832 296.172 500.488 296.172 cv
502.145 296.172 503.488 294.829 503.488 293.172 cv
ef
498.688 293.172 mo
498.688 291.516 497.344 290.172 495.688 290.172 cv
494.031 290.172 492.688 291.516 492.688 293.172 cv
492.688 294.829 494.031 296.172 495.688 296.172 cv
497.344 296.172 498.688 294.829 498.688 293.172 cv
ef
493.889 293.172 mo
493.889 291.516 492.545 290.172 490.889 290.172 cv
489.232 290.172 487.889 291.516 487.889 293.172 cv
487.889 294.829 489.232 296.172 490.889 296.172 cv
492.545 296.172 493.889 294.829 493.889 293.172 cv
ef
489.328 293.172 mo
489.328 291.516 487.984 290.172 486.328 290.172 cv
484.672 290.172 483.328 291.516 483.328 293.172 cv
483.328 294.829 484.672 296.172 486.328 296.172 cv
487.984 296.172 489.328 294.829 489.328 293.172 cv
ef
484.768 293.172 mo
484.768 291.516 483.424 290.172 481.768 290.172 cv
480.111 290.172 478.768 291.516 478.768 293.172 cv
478.768 294.829 480.111 296.172 481.768 296.172 cv
483.424 296.172 484.768 294.829 484.768 293.172 cv
ef
479.969 293.172 mo
479.969 291.516 478.623 290.172 476.969 290.172 cv
475.313 290.172 473.969 291.516 473.969 293.172 cv
473.969 294.829 475.313 296.172 476.969 296.172 cv
478.623 296.172 479.969 294.829 479.969 293.172 cv
ef
475.408 293.172 mo
475.408 291.516 474.064 290.172 472.408 290.172 cv
470.752 290.172 469.408 291.516 469.408 293.172 cv
469.408 294.829 470.752 296.172 472.408 296.172 cv
474.064 296.172 475.408 294.829 475.408 293.172 cv
ef
470.607 293.172 mo
470.607 291.516 469.264 290.172 467.607 290.172 cv
465.951 290.172 464.607 291.516 464.607 293.172 cv
464.607 294.829 465.951 296.172 467.607 296.172 cv
469.264 296.172 470.607 294.829 470.607 293.172 cv
ef
466.287 292.932 mo
466.287 291.278 464.943 289.932 463.287 289.932 cv
461.633 289.932 460.287 291.278 460.287 292.932 cv
460.287 294.588 461.633 295.932 463.287 295.932 cv
464.943 295.932 466.287 294.588 466.287 292.932 cv
ef
461.488 292.694 mo
461.488 291.038 460.145 289.694 458.488 289.694 cv
456.832 289.694 455.488 291.038 455.488 292.694 cv
455.488 294.348 456.832 295.694 458.488 295.694 cv
460.145 295.694 461.488 294.348 461.488 292.694 cv
ef
456.688 292.454 mo
456.688 290.797 455.344 289.454 453.688 289.454 cv
452.031 289.454 450.688 290.797 450.688 292.454 cv
450.688 294.11 452.031 295.454 453.688 295.454 cv
455.344 295.454 456.688 294.11 456.688 292.454 cv
ef
452.129 292.694 mo
452.129 291.038 450.783 289.694 449.129 289.694 cv
447.473 289.694 446.129 291.038 446.129 292.694 cv
446.129 294.348 447.473 295.694 449.129 295.694 cv
450.783 295.694 452.129 294.348 452.129 292.694 cv
ef
447.328 291.493 mo
447.328 289.836 445.984 288.493 444.328 288.493 cv
442.672 288.493 441.328 289.836 441.328 291.493 cv
441.328 293.149 442.672 294.493 444.328 294.493 cv
445.984 294.493 447.328 293.149 447.328 291.493 cv
ef
442.768 291.493 mo
442.768 289.836 441.424 288.493 439.768 288.493 cv
438.111 288.493 436.768 289.836 436.768 291.493 cv
436.768 293.149 438.111 294.493 439.768 294.493 cv
441.424 294.493 442.768 293.149 442.768 291.493 cv
ef
438.207 290.772 mo
438.207 289.118 436.863 287.772 435.207 287.772 cv
433.553 287.772 432.207 289.118 432.207 290.772 cv
432.207 292.428 433.553 293.772 435.207 293.772 cv
436.863 293.772 438.207 292.428 438.207 290.772 cv
ef
433.408 290.293 mo
433.408 288.637 432.064 287.293 430.408 287.293 cv
428.752 287.293 427.408 288.637 427.408 290.293 cv
427.408 291.95 428.752 293.293 430.408 293.293 cv
432.064 293.293 433.408 291.95 433.408 290.293 cv
ef
428.607 289.573 mo
428.607 287.917 427.264 286.573 425.607 286.573 cv
423.951 286.573 422.607 287.917 422.607 289.573 cv
422.607 291.229 423.951 292.573 425.607 292.573 cv
427.264 292.573 428.607 291.229 428.607 289.573 cv
ef
424.287 289.573 mo
424.287 287.917 422.943 286.573 421.287 286.573 cv
419.633 286.573 418.287 287.917 418.287 289.573 cv
418.287 291.229 419.633 292.573 421.287 292.573 cv
422.943 292.573 424.287 291.229 424.287 289.573 cv
ef
419.488 289.573 mo
419.488 287.917 418.145 286.573 416.488 286.573 cv
414.832 286.573 413.488 287.917 413.488 289.573 cv
413.488 291.229 414.832 292.573 416.488 292.573 cv
418.145 292.573 419.488 291.229 419.488 289.573 cv
ef
414.688 289.573 mo
414.688 287.917 413.344 286.573 411.688 286.573 cv
410.031 286.573 408.688 287.917 408.688 289.573 cv
408.688 291.229 410.031 292.573 411.688 292.573 cv
413.344 292.573 414.688 291.229 414.688 289.573 cv
ef
410.129 288.852 mo
410.129 287.198 408.783 285.852 407.129 285.852 cv
405.473 285.852 404.129 287.198 404.129 288.852 cv
404.129 290.508 405.473 291.852 407.129 291.852 cv
408.783 291.852 410.129 290.508 410.129 288.852 cv
ef
405.328 287.893 mo
405.328 286.237 403.984 284.893 402.328 284.893 cv
400.672 284.893 399.328 286.237 399.328 287.893 cv
399.328 289.549 400.672 290.893 402.328 290.893 cv
403.984 290.893 405.328 289.549 405.328 287.893 cv
ef
401.008 285.973 mo
401.008 284.317 399.664 282.973 398.008 282.973 cv
396.352 282.973 395.008 284.317 395.008 285.973 cv
395.008 287.629 396.352 288.973 398.008 288.973 cv
399.664 288.973 401.008 287.629 401.008 285.973 cv
ef
396.207 285.733 mo
396.207 284.077 394.863 282.733 393.207 282.733 cv
391.553 282.733 390.207 284.077 390.207 285.733 cv
390.207 287.389 391.553 288.733 393.207 288.733 cv
394.863 288.733 396.207 287.389 396.207 285.733 cv
ef
391.408 282.852 mo
391.408 281.198 390.064 279.852 388.408 279.852 cv
386.752 279.852 385.408 281.198 385.408 282.852 cv
385.408 284.508 386.752 285.852 388.408 285.852 cv
390.064 285.852 391.408 284.508 391.408 282.852 cv
ef
386.848 280.213 mo
386.848 278.557 385.504 277.213 383.848 277.213 cv
382.191 277.213 380.848 278.557 380.848 280.213 cv
380.848 281.87 382.191 283.213 383.848 283.213 cv
385.504 283.213 386.848 281.87 386.848 280.213 cv
ef
382.287 273.493 mo
382.287 271.836 380.943 270.493 379.287 270.493 cv
377.633 270.493 376.287 271.836 376.287 273.493 cv
376.287 275.149 377.633 276.493 379.287 276.493 cv
380.943 276.493 382.287 275.149 382.287 273.493 cv
ef
377.488 264.133 mo
377.488 262.477 376.145 261.133 374.488 261.133 cv
372.832 261.133 371.488 262.477 371.488 264.133 cv
371.488 265.79 372.832 267.133 374.488 267.133 cv
376.145 267.133 377.488 265.79 377.488 264.133 cv
ef
372.928 254.534 mo
372.928 252.877 371.584 251.534 369.928 251.534 cv
368.271 251.534 366.928 252.877 366.928 254.534 cv
366.928 256.188 368.271 257.534 369.928 257.534 cv
371.584 257.534 372.928 256.188 372.928 254.534 cv
ef
368.129 243.733 mo
368.129 242.077 366.783 240.733 365.129 240.733 cv
363.473 240.733 362.129 242.077 362.129 243.733 cv
362.129 245.389 363.473 246.733 365.129 246.733 cv
366.783 246.733 368.129 245.389 368.129 243.733 cv
ef
363.328 258.852 mo
363.328 257.198 361.984 255.852 360.328 255.852 cv
358.672 255.852 357.328 257.198 357.328 258.852 cv
357.328 260.508 358.672 261.852 360.328 261.852 cv
361.984 261.852 363.328 260.508 363.328 258.852 cv
ef
358.188 293.213 mo
451.438 293.213 li
0 0 0 1 cmyk
@
363.328 242.534 mo
363.328 240.877 361.984 239.534 360.328 239.534 cv
358.672 239.534 357.328 240.877 357.328 242.534 cv
357.328 244.188 358.672 245.534 360.328 245.534 cv
361.984 245.534 363.328 244.188 363.328 242.534 cv
368.129 251.413 mo
368.129 249.756 366.783 248.413 365.129 248.413 cv
363.473 248.413 362.129 249.756 362.129 251.413 cv
362.129 253.069 363.473 254.413 365.129 254.413 cv
366.783 254.413 368.129 253.069 368.129 251.413 cv
372.928 260.534 mo
372.928 258.877 371.584 257.534 369.928 257.534 cv
368.271 257.534 366.928 258.877 366.928 260.534 cv
366.928 262.188 368.271 263.534 369.928 263.534 cv
371.584 263.534 372.928 262.188 372.928 260.534 cv
377.488 268.694 mo
377.488 267.038 376.145 265.694 374.488 265.694 cv
372.832 265.694 371.488 267.038 371.488 268.694 cv
371.488 270.348 372.832 271.694 374.488 271.694 cv
376.145 271.694 377.488 270.348 377.488 268.694 cv
382.287 276.133 mo
382.287 274.477 380.943 273.133 379.287 273.133 cv
377.633 273.133 376.287 274.477 376.287 276.133 cv
376.287 277.79 377.633 279.133 379.287 279.133 cv
380.943 279.133 382.287 277.79 382.287 276.133 cv
386.848 280.932 mo
386.848 279.278 385.504 277.932 383.848 277.932 cv
382.191 277.932 380.848 279.278 380.848 280.932 cv
380.848 282.588 382.191 283.932 383.848 283.932 cv
385.504 283.932 386.848 282.588 386.848 280.932 cv
391.408 283.813 mo
391.408 282.157 390.064 280.813 388.408 280.813 cv
386.752 280.813 385.408 282.157 385.408 283.813 cv
385.408 285.469 386.752 286.813 388.408 286.813 cv
390.064 286.813 391.408 285.469 391.408 283.813 cv
396.207 285.493 mo
396.207 283.836 394.863 282.493 393.207 282.493 cv
391.553 282.493 390.207 283.836 390.207 285.493 cv
390.207 287.149 391.553 288.493 393.207 288.493 cv
394.863 288.493 396.207 287.149 396.207 285.493 cv
401.008 286.694 mo
401.008 285.038 399.664 283.694 398.008 283.694 cv
396.352 283.694 395.008 285.038 395.008 286.694 cv
395.008 288.348 396.352 289.694 398.008 289.694 cv
399.664 289.694 401.008 288.348 401.008 286.694 cv
405.328 287.413 mo
405.328 285.756 403.984 284.413 402.328 284.413 cv
400.672 284.413 399.328 285.756 399.328 287.413 cv
399.328 289.069 400.672 290.413 402.328 290.413 cv
403.984 290.413 405.328 289.069 405.328 287.413 cv
410.129 288.852 mo
410.129 287.198 408.783 285.852 407.129 285.852 cv
405.473 285.852 404.129 287.198 404.129 288.852 cv
404.129 290.508 405.473 291.852 407.129 291.852 cv
408.783 291.852 410.129 290.508 410.129 288.852 cv
414.688 289.213 mo
414.688 287.557 413.344 286.213 411.688 286.213 cv
410.031 286.213 408.688 287.557 408.688 289.213 cv
408.688 290.87 410.031 292.213 411.688 292.213 cv
413.344 292.213 414.688 290.87 414.688 289.213 cv
419.488 289.213 mo
419.488 287.557 418.145 286.213 416.488 286.213 cv
414.832 286.213 413.488 287.557 413.488 289.213 cv
413.488 290.87 414.832 292.213 416.488 292.213 cv
418.145 292.213 419.488 290.87 419.488 289.213 cv
424.287 289.213 mo
424.287 287.557 422.943 286.213 421.287 286.213 cv
419.633 286.213 418.287 287.557 418.287 289.213 cv
418.287 290.87 419.633 292.213 421.287 292.213 cv
422.943 292.213 424.287 290.87 424.287 289.213 cv
428.607 289.813 mo
428.607 288.157 427.264 286.813 425.607 286.813 cv
423.951 286.813 422.607 288.157 422.607 289.813 cv
422.607 291.469 423.951 292.813 425.607 292.813 cv
427.264 292.813 428.607 291.469 428.607 289.813 cv
433.408 289.573 mo
433.408 287.917 432.064 286.573 430.408 286.573 cv
428.752 286.573 427.408 287.917 427.408 289.573 cv
427.408 291.229 428.752 292.573 430.408 292.573 cv
432.064 292.573 433.408 291.229 433.408 289.573 cv
438.207 290.293 mo
438.207 288.637 436.863 287.293 435.207 287.293 cv
433.553 287.293 432.207 288.637 432.207 290.293 cv
432.207 291.95 433.553 293.293 435.207 293.293 cv
436.863 293.293 438.207 291.95 438.207 290.293 cv
442.768 290.534 mo
442.768 288.877 441.424 287.534 439.768 287.534 cv
438.111 287.534 436.768 288.877 436.768 290.534 cv
436.768 292.188 438.111 293.534 439.768 293.534 cv
441.424 293.534 442.768 292.188 442.768 290.534 cv
447.328 291.493 mo
447.328 289.836 445.984 288.493 444.328 288.493 cv
442.672 288.493 441.328 289.836 441.328 291.493 cv
441.328 293.149 442.672 294.493 444.328 294.493 cv
445.984 294.493 447.328 293.149 447.328 291.493 cv
452.129 291.733 mo
452.129 290.077 450.783 288.733 449.129 288.733 cv
447.473 288.733 446.129 290.077 446.129 291.733 cv
446.129 293.389 447.473 294.733 449.129 294.733 cv
450.783 294.733 452.129 293.389 452.129 291.733 cv
456.688 292.213 mo
456.688 290.557 455.344 289.213 453.688 289.213 cv
452.031 289.213 450.688 290.557 450.688 292.213 cv
450.688 293.87 452.031 295.213 453.688 295.213 cv
455.344 295.213 456.688 293.87 456.688 292.213 cv
461.488 292.454 mo
461.488 290.797 460.145 289.454 458.488 289.454 cv
456.832 289.454 455.488 290.797 455.488 292.454 cv
455.488 294.11 456.832 295.454 458.488 295.454 cv
460.145 295.454 461.488 294.11 461.488 292.454 cv
466.287 292.932 mo
466.287 291.278 464.943 289.932 463.287 289.932 cv
461.633 289.932 460.287 291.278 460.287 292.932 cv
460.287 294.588 461.633 295.932 463.287 295.932 cv
464.943 295.932 466.287 294.588 466.287 292.932 cv
470.607 292.932 mo
470.607 291.278 469.264 289.932 467.607 289.932 cv
465.951 289.932 464.607 291.278 464.607 292.932 cv
464.607 294.588 465.951 295.932 467.607 295.932 cv
469.264 295.932 470.607 294.588 470.607 292.932 cv
475.408 292.932 mo
475.408 291.278 474.064 289.932 472.408 289.932 cv
470.752 289.932 469.408 291.278 469.408 292.932 cv
469.408 294.588 470.752 295.932 472.408 295.932 cv
474.064 295.932 475.408 294.588 475.408 292.932 cv
479.969 293.172 mo
479.969 291.516 478.623 290.172 476.969 290.172 cv
475.313 290.172 473.969 291.516 473.969 293.172 cv
473.969 294.829 475.313 296.172 476.969 296.172 cv
478.623 296.172 479.969 294.829 479.969 293.172 cv
484.768 293.172 mo
484.768 291.516 483.424 290.172 481.768 290.172 cv
480.111 290.172 478.768 291.516 478.768 293.172 cv
478.768 294.829 480.111 296.172 481.768 296.172 cv
483.424 296.172 484.768 294.829 484.768 293.172 cv
489.328 293.172 mo
489.328 291.516 487.984 290.172 486.328 290.172 cv
484.672 290.172 483.328 291.516 483.328 293.172 cv
483.328 294.829 484.672 296.172 486.328 296.172 cv
487.984 296.172 489.328 294.829 489.328 293.172 cv
493.889 293.172 mo
493.889 291.516 492.545 290.172 490.889 290.172 cv
489.232 290.172 487.889 291.516 487.889 293.172 cv
487.889 294.829 489.232 296.172 490.889 296.172 cv
492.545 296.172 493.889 294.829 493.889 293.172 cv
498.688 293.172 mo
498.688 291.516 497.344 290.172 495.688 290.172 cv
494.031 290.172 492.688 291.516 492.688 293.172 cv
492.688 294.829 494.031 296.172 495.688 296.172 cv
497.344 296.172 498.688 294.829 498.688 293.172 cv
503.488 293.172 mo
503.488 291.516 502.145 290.172 500.488 290.172 cv
498.832 290.172 497.488 291.516 497.488 293.172 cv
497.488 294.829 498.832 296.172 500.488 296.172 cv
502.145 296.172 503.488 294.829 503.488 293.172 cv
508.049 293.172 mo
508.049 291.516 506.703 290.172 505.049 290.172 cv
503.393 290.172 502.049 291.516 502.049 293.172 cv
502.049 294.829 503.393 296.172 505.049 296.172 cv
506.703 296.172 508.049 294.829 508.049 293.172 cv
512.607 293.172 mo
512.607 291.516 511.264 290.172 509.607 290.172 cv
507.951 290.172 506.607 291.516 506.607 293.172 cv
506.607 294.829 507.951 296.172 509.607 296.172 cv
511.264 296.172 512.607 294.829 512.607 293.172 cv
.878019 .337896 1 .281529 cmyk
@
512.607 293.172 mo
512.607 291.516 511.264 290.172 509.607 290.172 cv
507.951 290.172 506.607 291.516 506.607 293.172 cv
506.607 294.829 507.951 296.172 509.607 296.172 cv
511.264 296.172 512.607 294.829 512.607 293.172 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
508.049 293.172 mo
508.049 291.516 506.703 290.172 505.049 290.172 cv
503.393 290.172 502.049 291.516 502.049 293.172 cv
502.049 294.829 503.393 296.172 505.049 296.172 cv
506.703 296.172 508.049 294.829 508.049 293.172 cv
ef
503.488 293.172 mo
503.488 291.516 502.145 290.172 500.488 290.172 cv
498.832 290.172 497.488 291.516 497.488 293.172 cv
497.488 294.829 498.832 296.172 500.488 296.172 cv
502.145 296.172 503.488 294.829 503.488 293.172 cv
ef
498.688 293.172 mo
498.688 291.516 497.344 290.172 495.688 290.172 cv
494.031 290.172 492.688 291.516 492.688 293.172 cv
492.688 294.829 494.031 296.172 495.688 296.172 cv
497.344 296.172 498.688 294.829 498.688 293.172 cv
ef
493.889 293.172 mo
493.889 291.516 492.545 290.172 490.889 290.172 cv
489.232 290.172 487.889 291.516 487.889 293.172 cv
487.889 294.829 489.232 296.172 490.889 296.172 cv
492.545 296.172 493.889 294.829 493.889 293.172 cv
ef
489.328 293.172 mo
489.328 291.516 487.984 290.172 486.328 290.172 cv
484.672 290.172 483.328 291.516 483.328 293.172 cv
483.328 294.829 484.672 296.172 486.328 296.172 cv
487.984 296.172 489.328 294.829 489.328 293.172 cv
ef
484.768 293.172 mo
484.768 291.516 483.424 290.172 481.768 290.172 cv
480.111 290.172 478.768 291.516 478.768 293.172 cv
478.768 294.829 480.111 296.172 481.768 296.172 cv
483.424 296.172 484.768 294.829 484.768 293.172 cv
ef
479.969 293.172 mo
479.969 291.516 478.623 290.172 476.969 290.172 cv
475.313 290.172 473.969 291.516 473.969 293.172 cv
473.969 294.829 475.313 296.172 476.969 296.172 cv
478.623 296.172 479.969 294.829 479.969 293.172 cv
ef
475.408 293.172 mo
475.408 291.516 474.064 290.172 472.408 290.172 cv
470.752 290.172 469.408 291.516 469.408 293.172 cv
469.408 294.829 470.752 296.172 472.408 296.172 cv
474.064 296.172 475.408 294.829 475.408 293.172 cv
ef
470.607 293.172 mo
470.607 291.516 469.264 290.172 467.607 290.172 cv
465.951 290.172 464.607 291.516 464.607 293.172 cv
464.607 294.829 465.951 296.172 467.607 296.172 cv
469.264 296.172 470.607 294.829 470.607 293.172 cv
ef
466.287 292.932 mo
466.287 291.278 464.943 289.932 463.287 289.932 cv
461.633 289.932 460.287 291.278 460.287 292.932 cv
460.287 294.588 461.633 295.932 463.287 295.932 cv
464.943 295.932 466.287 294.588 466.287 292.932 cv
ef
461.488 292.694 mo
461.488 291.038 460.145 289.694 458.488 289.694 cv
456.832 289.694 455.488 291.038 455.488 292.694 cv
455.488 294.348 456.832 295.694 458.488 295.694 cv
460.145 295.694 461.488 294.348 461.488 292.694 cv
ef
456.688 292.454 mo
456.688 290.797 455.344 289.454 453.688 289.454 cv
452.031 289.454 450.688 290.797 450.688 292.454 cv
450.688 294.11 452.031 295.454 453.688 295.454 cv
455.344 295.454 456.688 294.11 456.688 292.454 cv
ef
452.129 292.694 mo
452.129 291.038 450.783 289.694 449.129 289.694 cv
447.473 289.694 446.129 291.038 446.129 292.694 cv
446.129 294.348 447.473 295.694 449.129 295.694 cv
450.783 295.694 452.129 294.348 452.129 292.694 cv
ef
447.328 291.493 mo
447.328 289.836 445.984 288.493 444.328 288.493 cv
442.672 288.493 441.328 289.836 441.328 291.493 cv
441.328 293.149 442.672 294.493 444.328 294.493 cv
445.984 294.493 447.328 293.149 447.328 291.493 cv
ef
442.768 291.493 mo
442.768 289.836 441.424 288.493 439.768 288.493 cv
438.111 288.493 436.768 289.836 436.768 291.493 cv
436.768 293.149 438.111 294.493 439.768 294.493 cv
441.424 294.493 442.768 293.149 442.768 291.493 cv
ef
438.207 290.772 mo
438.207 289.118 436.863 287.772 435.207 287.772 cv
433.553 287.772 432.207 289.118 432.207 290.772 cv
432.207 292.428 433.553 293.772 435.207 293.772 cv
436.863 293.772 438.207 292.428 438.207 290.772 cv
ef
433.408 290.293 mo
433.408 288.637 432.064 287.293 430.408 287.293 cv
428.752 287.293 427.408 288.637 427.408 290.293 cv
427.408 291.95 428.752 293.293 430.408 293.293 cv
432.064 293.293 433.408 291.95 433.408 290.293 cv
ef
428.607 289.573 mo
428.607 287.917 427.264 286.573 425.607 286.573 cv
423.951 286.573 422.607 287.917 422.607 289.573 cv
422.607 291.229 423.951 292.573 425.607 292.573 cv
427.264 292.573 428.607 291.229 428.607 289.573 cv
ef
424.287 289.573 mo
424.287 287.917 422.943 286.573 421.287 286.573 cv
419.633 286.573 418.287 287.917 418.287 289.573 cv
418.287 291.229 419.633 292.573 421.287 292.573 cv
422.943 292.573 424.287 291.229 424.287 289.573 cv
ef
419.488 289.573 mo
419.488 287.917 418.145 286.573 416.488 286.573 cv
414.832 286.573 413.488 287.917 413.488 289.573 cv
413.488 291.229 414.832 292.573 416.488 292.573 cv
418.145 292.573 419.488 291.229 419.488 289.573 cv
ef
414.688 289.573 mo
414.688 287.917 413.344 286.573 411.688 286.573 cv
410.031 286.573 408.688 287.917 408.688 289.573 cv
408.688 291.229 410.031 292.573 411.688 292.573 cv
413.344 292.573 414.688 291.229 414.688 289.573 cv
ef
410.129 288.852 mo
410.129 287.198 408.783 285.852 407.129 285.852 cv
405.473 285.852 404.129 287.198 404.129 288.852 cv
404.129 290.508 405.473 291.852 407.129 291.852 cv
408.783 291.852 410.129 290.508 410.129 288.852 cv
ef
405.328 287.893 mo
405.328 286.237 403.984 284.893 402.328 284.893 cv
400.672 284.893 399.328 286.237 399.328 287.893 cv
399.328 289.549 400.672 290.893 402.328 290.893 cv
403.984 290.893 405.328 289.549 405.328 287.893 cv
ef
401.008 285.973 mo
401.008 284.317 399.664 282.973 398.008 282.973 cv
396.352 282.973 395.008 284.317 395.008 285.973 cv
395.008 287.629 396.352 288.973 398.008 288.973 cv
399.664 288.973 401.008 287.629 401.008 285.973 cv
ef
396.207 285.733 mo
396.207 284.077 394.863 282.733 393.207 282.733 cv
391.553 282.733 390.207 284.077 390.207 285.733 cv
390.207 287.389 391.553 288.733 393.207 288.733 cv
394.863 288.733 396.207 287.389 396.207 285.733 cv
ef
391.408 282.852 mo
391.408 281.198 390.064 279.852 388.408 279.852 cv
386.752 279.852 385.408 281.198 385.408 282.852 cv
385.408 284.508 386.752 285.852 388.408 285.852 cv
390.064 285.852 391.408 284.508 391.408 282.852 cv
ef
386.848 280.213 mo
386.848 278.557 385.504 277.213 383.848 277.213 cv
382.191 277.213 380.848 278.557 380.848 280.213 cv
380.848 281.87 382.191 283.213 383.848 283.213 cv
385.504 283.213 386.848 281.87 386.848 280.213 cv
ef
382.287 273.493 mo
382.287 271.836 380.943 270.493 379.287 270.493 cv
377.633 270.493 376.287 271.836 376.287 273.493 cv
376.287 275.149 377.633 276.493 379.287 276.493 cv
380.943 276.493 382.287 275.149 382.287 273.493 cv
ef
377.488 264.133 mo
377.488 262.477 376.145 261.133 374.488 261.133 cv
372.832 261.133 371.488 262.477 371.488 264.133 cv
371.488 265.79 372.832 267.133 374.488 267.133 cv
376.145 267.133 377.488 265.79 377.488 264.133 cv
ef
372.928 254.534 mo
372.928 252.877 371.584 251.534 369.928 251.534 cv
368.271 251.534 366.928 252.877 366.928 254.534 cv
366.928 256.188 368.271 257.534 369.928 257.534 cv
371.584 257.534 372.928 256.188 372.928 254.534 cv
ef
368.129 243.733 mo
368.129 242.077 366.783 240.733 365.129 240.733 cv
363.473 240.733 362.129 242.077 362.129 243.733 cv
362.129 245.389 363.473 246.733 365.129 246.733 cv
366.783 246.733 368.129 245.389 368.129 243.733 cv
ef
363.328 258.852 mo
363.328 257.198 361.984 255.852 360.328 255.852 cv
358.672 255.852 357.328 257.198 357.328 258.852 cv
357.328 260.508 358.672 261.852 360.328 261.852 cv
361.984 261.852 363.328 260.508 363.328 258.852 cv
ef
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B59F85E959DC9E62959B5B049387399C5A88EDF2D5DFBD776DAFCB889B62AC98B872299D239B948311090C1C069798A7F20A8D7BE29B8C384DB55F663943C1B42044C054991C856F3C3AA085C2B4902C8215DC2701EFD5FA664B5C9C44640813B5AC440B37B70CE58EFC65A9AFC0BCC84F3CDC68795E4995966F74639212F5372957A607AD4B6B94BBB7C36A3A6EF325381FE12C0468B5DD1F216D01C174551A50AC78A5328CDA24DAC0484DFF3993D32A7CA064F169906996AA1E2F6A555998F55A1AFCE2776BEE589EC3162F968A180A5713C4537EF11B8529CE22F8373BC7632472323D1F8491B48E948870255C9E830736EE70F30EE309DFBBB8294CCC2BB5ECB81667BEB60155> |-/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 37 /percent putdup 45 /hyphen putdup 53 /five putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two 2{/.notdef}rp /five /six 201{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf169.476 22.8286 mo(0-5%)shLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf313.455 22.8286 mo(5-10%)shLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf457.205 22.8286 mo(10-20%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /.notdef /five /six 201{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf153.904 121.079 mo(20-30%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six 201{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf305.668 121.079 mo(30-40%)shLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf457.205 121.079 mo(40-50%)shLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf153.904 219.829 mo(50-60%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf305.668 219.829 mo(60-70%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 199{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf457.205 219.829 mo(70-80%)sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/G <1C60D8A8C9B6FF86FAE761919412E75DCB56A17E0B647886E974BE0CD2DDC55247C89172C0F24B317CED95A1845F91927547B6F787BE4A81523EC6B90B7AF23F6F8A8BDDC51D0AA285D7E086AD8E028BD7D16A89F17742D556071D7D56166C6C8A71E0DFC3DA3B4DBE27EC4E6BE207A1EAF47A71BE409951D1C5060119CDD071AF7E9076F56846B6D62E52B2CB6390635FC230> |-/V <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/q <1C60D8A8C9B7EF322B184929E0B5A459DE86988030EB871CF3F1F89AAC255B947849C923A72862C0838E4FFEC50337DF57FDE0D1CE7785FE949AC8FB2E0B82EA2B25BFCED172F24897135D17C32C6271FDB42F40BD8C6A01481DBC256FA4B3B7E705812CCA623C287DE372412A7902B7DF3795B3A648430010B3D7196447674F9A7D49829AF453196CED7F5B3C2C0A202C> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 47 /slash putdup 71 /G putdup 86 /V putdup 99 /c putdup 101 /e putdup 111 /o putdup 113 /q putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 14{/.notdef}rp /G 14{/.notdef}rp /V 12{/.notdef}rp /c /.notdef /e 9{/.notdef}rp /o /.notdef /q 2{/.notdef}rp /t /u 138{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf234.705 336.579 mo(q)shLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf244.715 340.579 mo(out)shLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf264.177 336.579 mo( \(GeV/c\))sh0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 80 /P putdup 105 /i putdup 110 /n putdup 115 /s putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 14{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 12{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s /t /u 138{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf70.7046 22.8286 mo(Pions)sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/bracketleft <1C60D8A8C9B854D0C97CA7C2B861B9C1CD90AFF85F3BEFAF029B3E54E0FAF2> |-/bracketright <1C60D8A8C9B854D0A1BD118E81B093B97270F6CD267A737E85B9D694D4125D54> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 66 /B putdup 91 /bracketleft putdup 93 /bracketright putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 5{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s /t /u 138{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4551 224.328 mo(B\(q)[-12.0059 -5.99414 0 ]yshLSNQKM+Helvetica*1 [0 -14 -14 0 0 0 ]msf25.4551 196.317 mo(out)[-7.78613 -7.78613 0 ]yshLSNQKM+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4551 176.855 mo(\) [\(GeV/c\))[-5.99414 -5.00098 -5.00098 -5.99414 -14.001 -10.0107 -12.0059 -5.00098 -9 0 ]yshLSNQKM+Helvetica*1 [0 -14 -14 0 0 0 ]msf15.4551 98.8525 mo(-1)[-4.66211 0 ]yshLSNQKM+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4551 86.4043 mo(])shLSNQKM+Helvetica*1 [18 0 0 -18 0 0 ]msf51.9546 318.329 mo(0)sh90.4546 318.329 mo(0.4)sh136.705 318.329 mo(0.8)sh202.955 318.329 mo(0)sh241.455 318.329 mo(0.4)sh287.705 318.329 mo(0.8)sh353.955 318.329 mo(0)sh392.455 318.329 mo(0.4)sh438.705 318.329 mo(0.8)sh485.205 318.329 mo(1.2)sh146.83 135.495 mo
146.83 133.839 145.485 132.495 143.83 132.495 cv
142.174 132.495 140.83 133.839 140.83 135.495 cv
140.83 137.151 142.174 138.495 143.83 138.495 cv
145.485 138.495 146.83 137.151 146.83 135.495 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
146.83 152.663 mo
146.83 151.006 145.485 149.663 143.83 149.663 cv
142.173 149.663 140.83 151.006 140.83 152.663 cv
140.83 154.319 142.173 155.663 143.83 155.663 cv
145.485 155.663 146.83 154.319 146.83 152.663 cv
.878019 .337896 1 .281529 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 68 /D putdup 97 /a putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s /t /u 138{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf148.904 140.579 mo(Data)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKM+Helvetica /Encoding getdup 83 /S putdup 100 /d putdup 102 /f putdup 104 /h putdup 108 /l putpop%ADOEndSubsetFont
/LSNQKM+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 8{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /.notdef /q /.notdef /s /t /u 138{/.notdef}rp]LSNQKM+Helvetica nfLSNQKM+Helvetica*1 [14 0 0 -14 0 0 ]msf148.904 157.579 mo(Shuffled)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/LSNQKM+Helvetica*1 uf/LSNQKM+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Gary Westfall) ()%%Title: (fig14.eps)%%CreationDate: 2/23/10 4:40 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&GCT1n&h*[,!PSX]+bA!V3eSbXP<q=pQ!t"*/X5(>c6)ee^GD&7L)YgESTF8+RfmPQAi(E#PK*0>Mkg*Ph&CNqUOTT;&>+&7%UM4p7PBJ<OBp[Fue@QKo\i,Ca+q5!S@5siN-(oB1SD[=;GU+#!nZb&9=!"d3"*$<4S;^Y2FBTUU8!@Z<?2E"e]$D:#\C5C]MZ*P<%Dg/JDBRQp&&OsYU1d)KKIu1L<X.d+I1EV\T4gD]QUi;iK(OCL,(ek3oR@EBV*+%^$n&9RUh`dYCRc5UYN[7VK3VH2R\t&mK5SS[E%Q]Hp(rk'gh!_HkuGQ>4NGU)lV52V1&)6a,qo0?:>m."'2]r[\2V\37!LVLr1-CKmV%pUq0Kb#&]:WD5)kA.?WS'E@?=`6-Eoh34s%7cQdEndU+0pb0`Zh5O)4hQ)QeEPF4A$1DA/dN-LVfjC]^FIV(I@Gj+h+qo0u;K7"Y)$]W7T(mLFGi.cqB;=]=jhPH27<qt%b\hb,%!G:ik360G(oZm-B02?D?4_-OG.751?)n!XKiIpj9cu4$&*WQ3%2f2B09Y03lKPAr.A)FW\1rB<G;eu:C-W:=Tk5Aa?%dTlO6?+En%a284-1''`(Nk1uj,2q\[%.B3'.?5YY(ZR8WT)GP%&JP:U(h!9TQS=^AP?t^WbY%N(hQ)iH>8c<te=EJO8/K-WePCqu:g0RIZ^Ee;%BEs)=SLJM;/pqh0&_'$2#)A0ZndMBt)ZBt>MBEDHEb![NX'@!oJP?+(0)h94gi;g:(;o%O,lZ)"n9:kMY/XrG2\s<CYo)>W`TUSn%^o-EqaX";e-Lk:qM62q4Cm@[$!eZo_@%0gogLT4a5+Tf'X%W_%i@"P_X\'mU<@ZskV%VW6Q*?5ji*AW>-Lke9_#&^KT:lrtH7:uk%,JB"2ZMUnobDX-?(%qr`@k6mZlRBN&4i6+/#()$<Z/:KRoNCMorl/m/,Q*O_.%_nulk06:IcFeJML@g]Pa`@O[_dLPDepX(G`@[n%;GML2\Oa8a^ZgrhkEL9b4/IpG8'9L%YnlsR[_i%&DhLMKOS5."UEbMCYnctnNA0H$I2;^8^[W9:NfH@'VNg*Ur/Ih_J,#Ln,*`e`%=,J(S1)W@"RJa9DU\%Ed@k5\\`Y[?M8j-'Il(WDOA2[c$"oF'lY]ibrZ$5t"m5;S8rPROFMTRmOO7IrfMncM+p<Mc2P0N,!jW)6)%V45R\P8,E]83)qL.LU'!YVDu%VpnSH;nS?583%V$ei-2_[URl<FS\,5:]F;7l-,sO9ZN[oL-cHm5:XFjCo>Uh]PP#+1Q1cpOaS_8%9^WYk_l"4e@P_:-A]A:m*0;Aa8UO_##,@I2bOAE>oLYY;a?TSq[3@:&MalqOjY-RfedML,J*B1a2j'b7PeZit.Rh*&J*F^iRXS&1%)=Fm(Y>Cm9PeZitYt2V[J*B1a[p5e3PeZitV*_pIJ*B0mr^ZWANZJ+rj%@(mDtG^T0,cL_'1/*[$UQ"rf*^bA)*X<a"[RsAn6.#.%rfSem*aD:%;e6f61)J")Ga1Bsk/hhWStaiq8jU%OTTJ\.r9j.H7='[e5`6ms5tY$Hg'[?qU.A:a*)/k#n/:.lH^'CSgAE<19gfA'%U`=ja\j33Vmb9n,r^"2U(Ao.@O"cQtSO-.d67BorKSPdhqC#.4B4]56g0aag>Mrj\"1/W$Ed!NCVUQ@/V&8\?Gt7:aeo;#tn!=BX%!o\D;E=b=R(&5-NH)AMn/LF)p!r5O[+kPpbUdO)gNXm/rF?Gg>EeoKHZ28d,p'J9!+_>-%,d^.KHW5$I*[Z:<7uBX2G<qhZI^+jY%UJXSmbL&:I$?I8l`X(ZoI\`ke3Q7o$-2gNlO\]shJL#<BA1MjQ(A]lY/=KCS0PVEYCGAY"O[h@PBLRBl4]!8&"<e4hO(^:(@StX?%`O&<!m2LVnbOdUCE#n%jgu1#%1Z1?1RfjTX`JPYs+R99o'S05?Q4&se&k<2]j*2s"n8sLPi35ogk@R?+Tc#:?b:(]cJ@eWdA!N(N%A!Hs\VGL]nfs=X-ka]WTYr1e^qCIg8MN;_I6I=Xl@*go'gD*Vn*J"5e&W1f_1PIZ:'%KS`reF9J9Ze#J3ae89H,L*59J,bQ;Q7a?%&`'1Lah[EZjdma^FF;1FWnRl[Ute2rC$?[6'Bs3\E<RD17BoEFVum!qnJ]qn'FWA&Cj[WgjAQ,,`E*b25f-o*&N;?sW_g^`<.bQP%8goH?*KXZtK%Ud$X],UOL:!0Z%3Pqq6me3j92l[,o9s(4A.iU@(.)#`omfXI)dP@c\N&OrQV((J3'ujhl$!<<'gd_]H&-<q8a&MC%,nSeMOTIk':_:]DRHLOaV#;`_`C)2<NZi3GRID!Nb,lP*R23U6NKU?dUeIK'V+[3nr'Z`&A!3*V!p0sfJcCleK6[<Fs01B7Scuim%JY*#CP[`!kN>7BQbf3O!rhGRj?P;imr0p</Ub[0@KS'49-o'he,Y*g%(t+/c:cmTRJ/P+9OZJR+Ul6N_"qV/)o+>NHQ=.%Z=nr,]%dS.;U.OIEME:B&>-3X7d+nd*.'pk87;Z0uVl/+JQ&aBfJ?JoE%`s$t>Eo:;k2dHVN<mnl^_b-9U7@Ye>70lJZ#\!c?%f@VlN@@`=%B8AaK2@B=UAW'/8OWCI(V-0Sk:ji@lMo&6sq+!7sHmJ;5VR/aIFStYHnjD+UFAr:J*V"gq@U-Jt\"htMkDl:#RF\)sKQ9.-L%\2J%F+hYq4Pgk"Wpcu3'I8`4O[J7g=@/r7T4QfbLD!QE7g_r$W=M;W-1d"]hkKg$NIUG3k&&Kfk2e??b4uR#Kt+,>W-DLh^gWH`%h638%KhfW\ffMk^Mo_eEf2t-"^J[4[Lf3WZVs1P3K401@G+;Ze2"eLq)u;D_)APsppR1l;`4CMtR@ke!GaO_RoK/a3dd6<-jZ2=oPS5!%%=u"6Y:J?&-n3C_?#dUP:I\@k,]M1u71PBM7qDG97Or[I`,3kXpS"sntI&8aJcSRPQnkJeNj;%5FA!r<PAC(is^5(,=AX9QGb@2cn%Oc?lrA!K/IctpXL97E-W(Y"UE]?OjlUGT2t?uhV\7p:c4Ojn^!`&!B'<3j#+j\l^m-/rVofq8sR,<DBncMUq(Dj&n=I\Z?\Gul_T%;59H`X9>a#I1s9ST<"Pk1Ih(26'ItuQcG4j/G'4`[W4d6&nhDtSG9h(/Z8MU3X+mWB\Oa&""8&OE6;H0c";/dp09B\Xl.eH39FFD%C8nrp`Ek$B%=UecI2q6f7#<"SVQh2k:A>_'SJ%=Y_.R:#)a/;.O"Ep>ou87=/`7VDo:#6'O0_m0*%dsh</0p58Pm'=@_YP>eJ5J+%;`s]UbX(B0o<Kr6J"3E<^b?So^,!!O5"F7IVCNQ&]fkid'3`^!quPJT9orTkpu\++Y>_C*O"<^ab_seXZsGe\e[3=h#JZ\Jg&c\%%d\Kpr.tM/okc3!SKpQlhb8\56o.%n=h3DVS;XL`U$CMb&mM1d']U+6,?\eYmQkZ:S7H;j;b?-(qIVt\Nb9]#F\<E'7K+cW5*0"Dn%_EbC0G":j%Z-T^5OJ!>^.i;E^2bgr:$FAFoSiZXL8MVrqQE4(QU7?Pn$#G=d:#Z=V/#CQcpX9$s.nH:&WBoF3q7FRpL0+M*DP.0q%2e"G.pe3HV'G>`?Aa2J^"9p<k+r..@'@Vt1iXJh9>SSKJcjQc&?VQNBa.sYe.17<<^s)\8iogE?1@r8KpPcg=7OmXX]ag[X.fUJm%-7"('6$tGZGkU>])u/:n$C<B?LJ=?m;[=(U-:YY7,k]1a77i=c7N%m*Unu!R-nW^90D!5`7?_PD_uo9\l*r!aMdThJdSGGJA+7$=%kc\M(1sX0m2(4dL;]2bQ9/I:1_ij/N"HRli'Gg>167OYf296SK]NCnr8/-U26)Fq_bD\3E64"]k_IUb`Z2>N0LIus>T^/i0qsn)s%\*0Gcg(h$F;Ys#R9/.$*,.6'd5fdX+&W9VEouESWg4)jO4&122oj*lEUjm*nBl9<ih,i;\hBDJS3QXd'Su?,1Qk+j+QuPRL6Ce^"%Sc\ML=W<YU@C^BT5@fUF1VK[[E2aAnEl/65V%$TrP+@M/+&DIGdV=9#5#5gI63Fhm4\[M(#bE<*/*<s4T14YOO;9;t8h7l%^qM81%@+Q:XZiuBMBTM?q"']PK<hB#PNIcE40^i<c's0>kCKQ&%CY*<3N@,2#N/j<hU"+LmP+8G89GmG@M@#I+Md#81WS`<sA*PU'_kt`]%1Z',o-ImPpZa[6dbOU@$G*QTT-3#WUg+95ua:*5XTNQO)O.j4d]]s0]e&3Wtj_F>m;SG@B[H"5NSLOplp)Ug%\E(t)-(_.mGu@V0%b/=XsW2.`2noCTdM;E<bV"@m][$Ycgd""&0`=ms^-E,80EnFbU&8k+*lQpsfZ\#;6V.8RhRcako7t$/O3o:=?:oHVZOO3ceRVXW>%=^Z\(8;h"0[/"%ncUiR2)f%a*(s/PL>Q_,Y4tZ@Gd2E^5#'Z12oLoBJQRbSIPp3.#(X\;qpkpmR'R-DSQ3Mc<ZJ%Z>Jb:=N=I*-r%]c!!rk0",_*bApVJaZV_q.o9%AMc<#8,o8J,A7^j1$_.]WA,;Ib;!7!d8Q2m<hOmLqGN[o7;o9CA*bdo;2W,e[nVIuF30;:Y70qn%3Dkh!BiTF,[:PQn/X#SJ';#X'Le6MJLRcR&BZ?B$?dV#0G[?JYL9e#XF-M.s2)(5^YD(:GFZ:/XH'$N8qCgPEn<>f`?]m)'M^@Xe%V29\XcnM)l^`kuW6CIgAmmZ5VOj\hXcrXcW)ZE75Y*:Cf*Vc8t?0\2L/"f"kI$Xt=ha!SQR:l/D#Sf'\1We6`I6lk,QGFa+=gj"_%L"Jl'^]5f5A[8;%(FNO#&i8Iia-?QIr;]QsgDYn5g`0+1\_sAWr/*5TR7]"&V!26;XK"&A8Td)AaGE?fYN.:s#X#AZ)+7'HH91<#%\cp:M/:'t/),\)^V#OjeLAGUoaqe^=@pplmW[skijj`0R*jB<Paq+l:QS7)+bnGtn9:70e:FOhkbUHiFN%4\MpdsR.o1neH3]"jM%BJZ@S3qKWannPaN[mZBJB/2YbrIeL@T?FH^"XtBUG7DnW9#RM"dF-m-Jdb;p+]'V\*]BM*8hNYdP`R`4+D^V,Z?FM>=dD\M!u]W?%'<=q]lRgf@;dWBpZf51eRcW`jWGmo=T4qgna&tVDbnB`-9YKeJX)^?0Ar@MP(hP'0:qU?8"P[]8n+Il"a:V$:aiR.1R8hb!;6R6?%MY%;<\Eou*m%RZ!bK7,s>=-V^7TCA#JCg"UWj`n,inZE:?f<o<+dleZ#kR!gZKI+u9U6Pq7f_U1Q%.([&i?2h'Shj[niAC0(N?ia%3A1+ChTE'^>?L-fdV+.mNi-]7lfD[,+*Hg2q(oR&,L5F]f<ZunM>YRf1ND+fG5J!qPDjT2NP@m:-6"D@Hf>1r9I#5tgl@V&@_:7\%2^4MVCH`CVkHeL0/Oh?p1KWX<I\K,t1^LHZUXbj@k(?E9r$Tohg<f"%"F,h*(WhlDLe&U&<KE%.UHJsu8)*Z8D0g5l+T_%hN+grX%D*(Y'*Q`.gPa"1F3i>^88lJf%0"5[V\m9:gB`ip\(hj#c,L`&?l!lBD@LG+s8"0$u?^sR)N<sW5r#(&5#*!''f`s-(a>S-jerI+,%j$/`6pN%+<9c@j\2kiej%5PNaE&;?gSOfFe\X<(0dnc<XC##=V#JK)$BuL#M&VlLb>^tG7d#S&F:"gU"5kTjUINC>CXa)#'YQbQH%/n+dJMc8tQHh@%d,6$'V2[8=f86<"FkedMn;k<mn#'Z2gmMpsb*/nKXYqo=m;,2rGIW(0.T8jjB0iFZs;36H*qGW60:e$1V+=SKE%a<)VI^g[A0IA&@:2s!*6f^A^g6NN=;-M..4rm[>mk_N:%P7aLQbS6I_nr80@763TqYTt9?3ALe$UG`Gb)/EfT2&fIk-BNV+VR+Ur%HjV(WMA0#6>#B]#:s#ZW`)S4$Np64H[C@:$NK._J$ejf2"cr?RK!r1c/T0*HDX"8]Nmr1)Ml<5E"#4Jr-7J<rOZ%!^aFp3bRa,SJ%jE!NO2CA#]^G2@s4<+gLmmsJ[cai<U;CR\eH*:$,"#9+*LRYYuJuGZkYVj;_Q`U'i/iZ^nSifN-b7UQO/Oua(;*^fO(`7IF1)K8+%`hMde:\)pJG4V\8"BZiHbSu!*P)T$f*LI2?5H5$Eh'WXs5Dfmi;#K>4dlbo3R-1e^UYkK^3YCSrJ5hn(`fj8Hh?#:U",Jb_B)k,d%M-LJ-DStl$1PlB2HCQd/5*Lj\`pgc.&f$gVUb)4P%<n%t97dKalp'L6/%VKq%NG..FPh$9%%<sjH\DCKoK5EBp^SjgK^ljX#hSkh%n"ehoqfB8ISW)^kj'cT]neKlRV?lP)&s]WsUA4tMbjY6s(R.]SoA3.L2gSuK,p8o=R##X+'-8K-fjFWSb@5*@)(:QpX-MXN@Xg48%JX*FSZuOt^-=_DLQi4q.0l`EC1?;UL/Daq?Gbi,UXuQL9R!lQ(IF(G^)(,<^Kh&?"_n0Vk=j+`hSBRn'meUVHQbdETaj?m-j=7V<%hnX5'*Z/2l.>&Bj8Ib<Z$Bs0C*#<4)NWF%s01.BM^n_T-Ut7@g?uTJm7.2]P=@<hqV?98Y<*(\L;muP^bocG*#$0*4)k_r?+G`GM%.+F7]@k<LZhg@?%,(VcO'M-Cd).3Nr^0:2`6In2;km'!9%MnNXrd]9578AWr#*CS,/9#)Y!rbX6)["J.F@C(n"45]e0'BrfET(FT%Q&MS2V'8A?p`YquU_6eR(s=0;=R!iG;UGVRiM1cE8ZkGpnVm@=iF8($SGV7UHoZ`g?Z>7JGMIW/IX^D6D7KF]:"ha\?U6R)T$%S?%V#u2V#^46uS2J^^m^hpP_puc>5C9fs(+Eh4!`.8UoKU21^i!?f.eTLn\3mo#LPRd;paEFU.o;QAL^tWP6)9iAa2I7Y=@p3f_gbo!%[B5cIf4@f+K4.tRTPFO&4ZEh_,RmeB3BTfM;8%Kfr]fX&!7G.0!A;dB8o/2Er#T;(6"]UjO1=V;aWL*0pO!/Tl$VDi$=QfmDMLAo%%RJ[mB*B;sbk#]i%LJ?T;OJtIU.b!T`L.[ae.6TbI8;1&Z%P2Z$uOtNN#U8NF4?Sah(>_WKu%Ksk>G7(*@ZREPu+h*MXTN&of\bi%gg03/=>]CGh;EV]9TdhXe&Hb:RU:u45,I12"SI3!^]:_8+!M2p%aud<d<IKb:3>!FDR%[!&DGKs0ht*V`I'Ru?<L2><C$iJ*C@h+%&VmJQ5XDU@T(`..3i#)NZgERI3bR2JmMrDJ&L%DmE"M?p5;P5$A@"b3f8#/J*^0nkU+Fh5_sY/<?Mrnub_A4ME)o%*))N&^4h'mP%!CYIT0a(B6kqsVTRnD!A-BeXNol#Ib"+4+LegCT]'2^+[ln8:+r>A8gl.[7Shu@FbVL(""fdp,^rMq*&4h3a6BfD8(X[L91oBlQU%mXW\#*AF?$8d8k[ShmJ0RKR]^IPlI?`UOH7#/UC^Ms=jMri',*C&!2"$/UgYNr%XKJ5'u,ppQsoJ($g3roJC)A(1I`6t>spoBC'J%q!Vt'InpQ\dg!DNk`*CmF"34MqRcf3reF&?IpnX<4+I8@>N>bS1mmu`XoI-uZ2C=Fae:X6@7R*ihc@G]gTkXAo>aF@rqs6PPMfqZ%SkI&iHLl?a4o9?L,H9XO[o]hZ-6/!kCaJLJ`5OV^h-qu9]D[lp8$`[_7l,)jC1:gF?]4$ACQ$O:&"%j@pMNIl8P:<^Xo#<VJ$;iN%D%['4XO.5rkdPYEIS%R,b98m./lgr)_/tg';iQ6%'!Jf5?>J&_cmpP'/)'#i=IS2?2Rg_d[Q^fK*KOgDgt/2RrK_.I*4lUMfgnjc%/`tP<mVu_f:>F=T@,>fM.43n.^S=NSi/7RC'<tDbcMf+B9H,):B)hC0qIUj!nI-L;R4.s"jQ2GOnsK&D@D()7)'>T7857+P0pu:4%3%?e?Il4)^Eh@VPQ!`P+*B?,?+hS-[-+7E\M7_I)2hio:gnX_.d<p]'4P\E=AG"-2"`Mi!eaJKKF6MW`j2OeEUS5pGA!SJ]r?Y4Y%R),=SULtqQ,Dh&6O,&:A._5L1*"2@eT<[QSS4nJH\8*Xu>1IgAp5^+JGd]MF2>W[DR&UA+V!To)i&E?i>H2VndBc?ElkYD&CG]a`%m6uW^On6soF.66hn8P2-b2"!LDNCZ*ontNA3/+KW>t<^);_7LilB*9-9/rjrBi)"`K:5[nUU2J@H]^B>?U_AMBl_S-FVXX/@,;P5%k@mgtQi,AZN9N\e*.2#[`.pm(<WA.D$[?mWo#<*hBOc*1/@N6R7.`r3A^nAeboANt2IDbSoI5-1fa+3^nP-J*&lG0T#jBGqh:e`7%,O)MFh/q3Y[ja]h_kJt:IFd?H0r_iqM4?[aD@bZKJ*<8uESE3eR]DRCi+:M>h/GKJKR<KCg+[CNF4P@iP4JVI\ld.A'?,Su-)/t-%WD=qCf>XU=D#<t*e!Z(L]4R\HAd^a")E!)Ddp@6s1:9uCL1FteP##`pOYe&#H@=1,]>h52Rgg9Gl__&66oQ]V>.=?lE,.95ofGNZ%`.Cs).BD\[^-^MImA(aD9lOi+CsYPe%d9V4dH!NTGaPi^(-rDQ?k<o#:tT]F_k.FnrFJaY\3'HqK9HRacIr+=&'tWYN2DeO@)urn%R6:K-BYmU2Ypi@\<5bg#eWf\\9T\,81U:^Q;6?PH1aNWBZS@kO0UFU!QAKIG9e-,"TWtRB*4/]p#m[T_C*IBGS@fG<9=9Dl1=Zlg%Wi1*f>"uDeMV%QA4r(mc/)jWg=kjn?_X7>IdMWLr-Mr$+7PAS0qd1qo@N#H1M6?1VR]:2t6HakuiJCka&YHk;A_2e(Jp*=>;B0<o%2C\$l_f$$)d[j.?1S-ND-.7a_n'e6rk11[!Jq;M2O-RFY)NJF%il$H-@&Kr\Z&f?,,FO!Pep(+LW_t)Rc^D1=B9dl&4Fm]O]:4<*%jU">7',qAccRZ/UKosrb1c#dsC?GI=,I%j6;rL:EU92qlAn^kagTiU_PHMU@JMr"WU06MW;i&dg#0XHGL&%I&`r4I1$NVPj>/R<S%9;0V3f9^^<Qs,7omZ4Yf6aW,LQ'j=cC.'gW@%&5nCbqV@=g);SMQ8E0-2&p&d1k@a$m@10hb`YtPgkPh.Kp&qB\fQ3UV^k%P)T\f%ea7"ENC=<mqIrX2PG4OE7SX\s78:5/9Qbr2AuUDQj-GCW5oNEK\kX0NkE^+j`=.LAXX>f&f(3=nO[:1m)oEiBb:,1>67Y,L$p%[V%;Vu?d-LAG_Rh0NtAtV7nHoLd9QS3g^?W!:8'MX303\Un"TFHX<]qLsT@6:nOUJbJ/h+G7JaUbZW?^Ifs8=:<,!'%;cFkItn-\<n$%SUTI2(e?`-E^AN*/VFt19tu$bLfoHJ2Ahol6-j'k,'ai;J;c[X>]jq&fFoa7c,d^(6t7P^%I2'6M*&_:LQi:&7J9TJe56ECe`Nb!%QZr]U6uUis$ee@Q;VEZ>d,MbViuh.R9#`bem'/i0gm!h[dttAdI)2<B_i*pF5jj)NB<Uh:4Gdo^KSoRsFmtgd%Qu1k-g9;6obufR%<q>s_P2+:DDlX+Un\]21A`kU/RC?'\-$kmNo'uK%a%a`aj_g17b4!#tGOrB'Gab7r7O'O(I]qn%YXU"H@e])dQI!OhRo42)TN)JW%GIe0\C@+O,QRWC"D!Iu\.t>5Jj%l@V@5+]UJLRqO^d3!^/sPC#pVj?8cFqD*mVjOJ6XX,t9IFt,p&%^dQbmt/8Cd+5YPHt_n=%Zu%_h137ka`*qC:iNs&nVFlmhbS9kOh#=m-"6VfhV'Y<r,KQnJZRuCmS@Rm3eMfgps>%JE1G/Xnt#.:YS+qj7]aU(eT9p'lH@-6V>6`%UHNgH1LIj]X3sUFq+@:LpUshJ)qti:c\!<jHthbE.#IQOK=d>lcb3A[nVs/eJP)j68MTgAUlh,<[Q_"1\!)!?mlfG49`d!>6LAC^%#O2!GpJ*pBV87M&YPH&>[5/*TTC#'FK9uOC.M\@p@YID>Qk+RWGo:(lHnrA;[\\/ce:!9kB7$IG"3-Zlg\6DR@^2Q:*7,`hf"Ch,%EGkB^'$MVu0J:Dlaj#H;C%N1^h6il]dH9RA!IHNm6AH&6]:1c*ccQ(FeI_Ou;#L#76]u->[;-c^\p7>:1ih?&-h&rY/4mME7\Ghi%/hbi330'3KJHI&CIELAI:20;tYjt)273A;F+M&(gi8C7@N0Y!dq\#FrrS1`Vlhla$UeEJX]-o!O/C:>?+qsIG&A\2:YHa3,-eB!&%@elS!\h$Sej2n4[=0#.NIg*ucaQZKsdFd,%-C_JGR7m"dD;h3g]I\8EH9_4tf50(#/]Jmun!'59anAZpSIaKjit$hOU&9'5?Kuqb%,C>u4[k!\(]0%e:i$4MuDN>KZl'n<]C#PepHRb9Ym8M.H`b6k!0`&+qpaU6-fD)$[3_6+eq7ZW@UJO1Cbnn!hj/e+KC`jcG*X:m6%B$NhZk42QEg>6`>,Bm8PKU7(FLd:AQ-^6nXG(YA*..a;X.kPDa"3Un#9$ZDYFAB=KI8TV#UfK([TC>6XEe3c;LZ%KgL'q7hrY5$D%^#^Xc>';1Sf,7HTD3+XlcfFbC,u=sWMPS)lGT<E3\Z)r56Lun1#2@M49n0/>=dc/\>.<+;e5Q!G56dHErAtJTNG9aRChAW\,kEUZ%Q<`95rN%">%<IU[(Mf)h7b!TeWclq5<!OaE--AZWnZt[+R9^1!bPn)0:-:rI#M"lsbH(7CHI_9dQ#\'K9SP1fLr'Ji7s@7NZlJlY%mhWZMm6S!A]GhUNT+>-+i\Vb[(fu<ao;Jl68j*un4.eV(f^!]8)5qs]D<W]tG)h_NmHBaK_91TO&Q@Y=i:ODu'CsuX#?:17j_"G^%^2WCT9ssAs$eP(7Iep)eaq9W1(]qLIg`N)+\`1):g_4^.hP\fh:Y32f2,D#RW0B0c2<P_3rm/8eBlnPbP'sZ9(W[8.(@J(b!dhu:%%VY4[AtmAmqp0tcO->`K2cKLmkDi/CB_$-J>+i<0jIbT'Kq!?NY1t=_6'&j96%78)DU[!2cd0[BmdQr-9VkK'S(u-P3R=8m"r6p`%/omk;]0JTO4RQk?e&)2kCZO$tphl3V!Edi')q'A:^2Acjp][;fR7mC8oJAp#iD<ol!SSQ#_l'[nD'ChY;_0\LfLQI,?l>4%+B6;&%:RlgAb7Z[s,UAC8!?)LWm3[C?7/;a"oU5oAoSR%mVtDU(8_,,gjWr[_4OTSZ6e0X5Z\oe[\ik^RcNQ0V$$tK5SoHK/V.'JekL7^:%KCW&>3"&iq"(aU%b792C(h>0p:R*XB#aLiC+##lmfKn7@?`C[La[+./1mmpSacMT*cqb(EFBA&K`<+*!6ng11ilP+tpIZ$_7:qZ$%LrG0Q[',,rN#eo^@q.m''%p+S=^n&J0n$7a)$uoD6;*;QP1&b^+)$`[4GrdiJBSg@['ZT#H%urFF5V`!<08LQ5)'_9/YiO"(EF=)%^FZF&jb9r:JTabM0mV]BBBV2=Q<"Vc1*fbA$-1+\7bn"("oC\KK\`:ah0IDZI_1=1h<@bWmtc,UoK,pX_8m=F?n8iHiT'8Z.sQ6T%@)Y+1R8#JQ+5-eBV>Qn!hn8?BH>i9J9'c@eS!l*t4->n9RYN\6[j,if_AS0KZiLUZ[+l,d&#nl=H0g#XCn)j+i\pCP42+DQF+4'e%5!AinW]O1-(CSj4njWQ?D:/Ot[\"Z2=tB[e4(Q[Jrd-9i+cQ&;,9-Vp#X\""Pub+1.40\pO=G//Mp6-BgoVPF^(krd-hE;6(s*/4%8RJD_2mj;"Tde!iRD(B?;"nc,^dB(_$]Q?Cf.R<'$Toa)ee:io#u2In-KloW1,s7bRRgbW/>46R)@`)lZ1$GV&tu,uiQ73=#.NH-%aZk)2.2"R?iKF?.s/j@o"O\im3dN6I(6^h1^u$\Lje$aT=5MOHEJM)g.\AKSP<'I&@XjJ%%@<-j;@S=s&6U.9,k`%/8#a+LX^8NI%4U#h\fh$lr+iGq1T_poC-?nPX:bDC)h.PaGisXM,s1_+'GYtVmHUX<.=#irh[,=l%<ZQ*81RZ$br*0W<AeLp#G,U.p(2j!E!'K*9%iEOoh(X`/_-R2'[oj&/soc:LJqP-jDS#+FI:DO4bIqPPV)M[[7@I=rHcN4Z6>^#,t"Nb+\n5fIImX(0;ZESE'p7Taj0V)ldjCD-/%<F3NtPa(\2]"9CjL3&`I;/^'.VNM\LMEIe8XkHA:l8!i,ofir3,spdUhSRh=boOgXm)K!*9]GSURnJ1US!RAs*:?n+(ZIi<=dkU:%h!;uHo#`.*j<p/;gN`GYrfA8TistfI0Y/cSSP89M"oDb64=\A67?.o8:-G%#G^_/Rp.e!GNI(LMgaeIgX:i`Q2GT9c?%4O<lKTGM%Rp^RKf'-?LhYj$AltJ#CCVC8LpK)q5lt>7R#KAFg7H@^MSJMnU8"oLqAG:`!fV6</.L3>W4F]6(SB]o(ZER%S+Qd,!k&3pb3a0j9%'d5P`+VYo=9"eplM-5PZ1\_KGT99\YK.((1p<!K'S'Be,?S.iB8Wt]tp70%UpHN!0$E&r4Rh"KXl$9nr*b9jrpj="lV]Ts@da9C!%7\Pt-+A<FL1jaD\T?)m3gS2WaUWZ35+26k<kfo4!*A0"aG^c-2Xh;DoT7Qd?-i[+mo>qd6;jKMl]#cNWE$B@^2Q'bn7\4p0+,4Iq%B+hgLp:AfY:FUF92SRSmDV?k2McI^<gI:]SI$6]m3$!LF(#WC*EF7i8eDG\Cq>q<+fOd<kGe76F*qZ%^M7\O^iG/+m>I^g@"ILk!%l>*Epc*o'8=+qQWrCHbZ\[IFA`\hH3g,X@e7!uS[]lbR4Df.e*42A%/5J7d_TD8=JinVUrT6LuSml/<UAn/$NFn9<t1_*"IH<LXA%-9Gu6L1<)i0>?Q:[Uq<5Et*l6lUfB:!^qFT6p2O<gtM:;a3W;+"@BQ#,XZqPe`gUk4'-(QdKL"Fq=/.MW,%iFM1Ed]pH!VLZ"eBi%RlYKT?0IaDM/WB3P"3]eGP?EKi96"&c'[Ds2[SHN3gf=&@(S(h@2>YPEsfA:m#sIcLWP<dl+D+^W07[)ojZp+#.OEk)?r5%U[em@%:g=jiHTu\!aT@:7(kc=HSgKZu_Tu)^goi"<-Wh;*[nTZ/F7V+9oes5k+P?4B_XQK.A0aN%/gtfXUXhDGeqrmMMeqK3^K2DU4`?1_%S1d)5A`fqTo7b\0qn1_+HpfG[ibVi>cck!OV[dnMmBJAA]\!CJBn]!!QcRbpKm4a*n5pt_#Q)W1OapuV$^H#]Q+85Zj*S=X2$Jn3%<J<j.dAB_i]QT!,^3b:8[Efp216M$WEKe9-=8o@Og^nMfR>Mp0`1%_Am(M&rVoP!FP*]Fl;Mk6oa]O*.?%+j%.<Y6h:ib+cfcY6q%WZH_>q0C\@PQrZBMR#"V2#S.[a4GM6Y#Csn?lpXik2l)T4-\'_IsnAfF8/a2D@".C[.GP<f:PC:#,=B_l_e1k:-\:u^3q\9MfCU9%N\9JUUUTKp*,GtIS:A_/$aTR&;]K$^,SoM'C'2]3pChjFHb9m]>hf^i>!5dOe0bgoELhYq"s-QI5H8&+F./_;^<Ofkd3NNNYSj[6%>sGLZ4:%e/@8*(Q;Z)-l5me:1eAW'/*klr*2"CNIXr_gVE%s+>RY,J54\]LlH\1^rI?25+$gNP'ZC$!V:gkDA!^O3:'AN3Udtu3'%4a9EGYJLHMN'WhZpmo_ON&T:.Oh!dIW?"iUOdcQIOpAJd8g+d-]g>0(04H)a#bc0'Zu0Q@2MBegdRjoKF"$B6@+J'rF`SnF(d)+?%7YQlK(^k<^1i3H6#Mp-Gc(5)J?qK\=*_/"d,PH4abQM9J^2l)t`:[PiM]N4,+B0FfV=cf>Pk.E*+4`D26AI0b"f_?cmurGmah%iF%T0/[C\-#dp[Fe::[n%nj/S$2JE?V_O7t#BJ%<Z\)\Yn^,`7^9F/,&l#%p]1=aI(+d2_.TT\"iZT-&>-=UX3q8\14b?M`"buH;pB!%K,6ahjsb`)AZF;SKj`T:Zo4)N&BT/D67%&.Uj"_GNim.C:u:LH[^RDrs%4cTOF[XU"rb)d-A)b0/:<>gqb#dU-NFR&$X'l!3.kpi%\cnITYRtK6=2oZ\ch.IVg'?43].oq%3/)iSkEX6r0dqU*ku1&KNh@u/9DcFRs!'u]kE4V52CCMlXHE#/O!I"]-N!Vg6aora=/RiZ%q@3hGPL*Tl^E$#B`9d0tqL%[3@m9Z*&2+Z=nmP2@C<LlGh&LW=-@mT#VlRfLpj+0&Y;6tBHIY+2/Orc9a:#mRBO'ET&"gB5J,;\H%nm)gtRsD\a0>C'koFa>q*,l,AEutR8,^3;!$0GZ$]":<e(*]96epQMkO:Ht'cll*J`!af::b9W$g[4(XmH\%=F]^[SI6P,!0Z)Pb%kH894jjV]6L:gWiIgl60Ts7nFn%IS0gR5V[E7*T>$afi\2qZp2\8^8"ghW-niupY[5AZQ[:LYI?S&MXp6=m4kQVXUWqg@Vu6Hdf+%\XQ--jFZui?Lm#e[fTFRmZ3GC>*:_bqFO^^9IEDXCaoT'QeR)iHtoEMp'q'GYGK`CH^"VNI(]+f;NdO&G.Uc#7N8t+`I<WH=!+"T%L+k6dU6<cr:!VXbF5c/%re\6=G"?E`)@#MI1(``ek3s[7F>Q%@cohg8XfjEpG,MW`dm/;=%YtQnmBP#g]`[HjD%6u%oR^8YRO`T]%N85<8\#HsU]?GKuWs1^/ghTfRaQ8J00Mu=t>2XGa@oZ9g0WV^IX-\$WO]F+0GZlYoK?"79]*Ea-F&dC>bW*oQ8+Q.!i(OkiKo=D)%>V>D-+s3NtP--^Y3/Gn-NVh*>7'D`qQWL+r7_Qt!_riU"SC"#so8hu"`UfFl@;<Z;.;ZgbgDa-r8UmIZk4eUJ_rIct7cO8\oG-$W%1LUO,H0_FBH;&O@nbZEZ2>Y"q@(/rc:Nr!eViATBLlHfo>ig2^4rMN250T@*p3XRPg3_US$(;9XK_8_o#%eue=/F5j4&eE3QgSuC%T8R$hC^Ro*+s)8^q%OgJqQJ"n-Y:QL_tZ#bC"=d@75J[45G@+Ve0YK;Q6COrOIQZta>'j"c+.@8NK:8N@<h"H'L$oJ;4J%JjV(FF%;oiIQhr"-f0933!fn\</oL0H>(D0&0dM=38(IfM%4?js5;<R5.g!*Sg>Dj,^pH[gkOF^ON#f7R]:FiQ",62ku4l4?:<h?cUh0Xs?%J[-NEbD4s^p!;1tC&C1#nkM=7^:,ksG:-SpV>'GE"fVb@bBl^cRD*K;%7-sJ>[bgOj.^+S%>m[k;#X5I@u)GH_q??lIX:Fh7SsPg%1`EeoiRVuf@.cQDX.>M6kV#I)T%/"-gt@LET8eT#f&pR#&Bgi`L\1O=VnHNnrlOH$nY`/s^0Jo%apS]S;58!Xl6d<_a&nm7BTE'i%=2-eD<aX*d7;iJ_ZHNSL0(GUO*p[^,k>puJmU="Bhk^NW%j>hI*[+XIDBY(($m#p`rAeoAJKRE^>fPbJLQCs>*N]JpZmMP[@odCC%&LS?*7ZLenO>&46E;8j#_dYJmm00JX'jtPZPM+iganN2@UD%i.TS@Ks*6t!qae%a<7D$]-djOI_8nIgm"U7mTf8'7Q;CF$GV#J:%%.qT5@5+KAJ_tSQ6#>)t9:q3piC3dLSX"`KoAH?\J0rAlTm>9Cl+%J;lkY]c7$!XN5LREObI[Q)B#rPZMP;egB6;:0[phEN!;(eeQ%c*/hnC`/;=U#kV'Q?>!B`;68g35^VQo3*W?2d!lF;nj%!g31kH&+dp"?Khm)F)/Lk#GAD#%M>D)1hL4qF$=7I)nisSBrsMn@J\f<%c+BSB[o8tu.97s6VuZOmMI#:7#WD2)Z:8)sX6Q_Z<SLFrf:^cc8sNeac(m_3Q<j^oa&](4<2LVpZ)S;]L@%FAQV;'rbBAHGFD#LR%9sc:CiTqIED9nlE=_$*%9J!1k=j,R!8;`)cWiAd/]nd=jWtp-V:JfAT4O@^6.Cu?r@Q0C-)LC]JqbnKGViAH16lJG%g0C;KjDIZ]%Z4[ML[qg]R5TPH0hcaE;7W\;@ClfU[R7Ibf5u#1<)ndE/)b>Z2kQYSgUI/G&HT"2%/^`B!0+r$0qi*i8Q?bSPW7Rc@E]S,e,'h5H%13o.?!et/'_W]9r\kts`hj_4?_f%ZQ+m`=U[O/\mFTFSa4p\>a_cff:qRRM[?'eoOB(iqE]`u5QeP8I;$b*(d;3DAI]=/>l.]5FC%%j+%NoM>Uj+_17O"L\)`@1cW"+RtR$*8WOt>U48(#TS<=@e_AjcWt*lnr50q'=k@a406bcj\D]LIC+:5hnZXu"8QgkY^`5Ao_>#%%[lhL5LI[]_'53(Q4i+'nnc\MD%i<oKoFk11:W\)$T15_k5Y1]4IX(C&&1aVfl/Yc`n3f0?OCX)dQTKL099[I`@p&-UI5Qp)B30dR%E$PQkhTC7\iurGBGWIDr,nEX8r@n54O3DWCGktsd*IV1YA>C$+:spl>^QlfJL.S@CIIS"(hWhR:XqLbDIBH9lPN]C4#sA#YYV4P!%"-9Y1Kfu-!_`LXB*TB2tc`ao-<.'X7f6lkd`Ile;WQ=ND?4*JI#FV?h03s@1T%BNRFQ[&,9Q%AQ8u$?9R]]*j2ilhRCUMKr[i`e.%b4_]VPF$apP`*Iu-tX4HFOg7"b?t'mn/+AhFW<omjdj&MG4XZp/NjUa<'B!Y5S0a]dIkc2%-cO-p&4L%"R5nUib*JZ&Yq%_%di=/%q/g>*oOtSgN'%t&c$>nYRs0p[7S$hAC&2Rok9*uT4u)><@':<kR354ADVdOI-]F2-+.kNdR(OP4@D:t%\flHt[t_0$9-^7&ctOMg%,2J:!+"KfO@9`eLS#]R;O2_SDIVtpWHIE64`^b@K^?uE8'%4so*Sm+&-?kSJK%/lcO_e(*U\[)u/`.-Eq\Ma[rYhD_DaVN8a%%LH%86oPR2L3U8D%a2[86_:e2#gsBoXqKAq3.>@)'PPgNf*s)ML'*4Y=FAq+oc)32"#i%m.G;C%?YN6NJ%mA>j<T0H?rRJ@;p89Rn+n:%9oqQQF2Fk^2b%!,g>B&iT=6Gj;<=fZkrZ4K4k^Bk_K8cQb0.8eR5>l^ktXE%7ARO&;SYWH*k`*:>YU4N88H9/Y7f:(OAFKW<$E<2%1.E13.WVr5<=5sDd7Qrj2s0AY@k2DPoV*u[R3Fd's,;RkUkj`!I1C3T[@auadaQiQ9b7dtL.LXN]jk!:2eU8/#I0O`I=3_hGMHEB%(hkS/=`;(DmMR4^HeY1XO:j)Wg,kr%4uPcS`ncC[M^CtFJbsh@;DLZ:'Wf'cX>K8/f1*GS1dUu$jB`cI!Fqqg\%V73pH5AsFa6u#%hqfF29p(IS6XSFRko'4mWKiI*$Fd[k]C@Se3]?9hA9&aFP`Re5Ibge+A9KIXMR9WCX(j4\Fu#,D3(+Z184gA)N:p`<p[_F2a90lh%M;HZk7uoqBl$$`@LXb((hWPNHdGcC#XAod5SlIe#Xs2THU+/890hYH6ksr-Zq$L&rLV?AWK/E,/dgeo0.CPKnSY?itX$SPFT0@`o%Ule*A8aj[uj3\G]4n7`tHD8B::C1b/.]hs8bPO0NYC'9ULUX[[QGHth^-5'*]Le]_b1W3m4ONN"Bl\F3m>84UA'#oJglM>@dMsN#%j/:r:#meFOcf?^'(R<cEL#/*>ZD(d!p:4?j(+&\k(&ZN(=1^YTS)#Z8[J"=_ln8&egmR=hD0E\2?*oWqc0i;e2l5u2akc,&GB:7X%OZ6rl5Kq[LB0NZ"'AT_Q-Z"/H]_T\)PEP>Pl/X)Wmae^?n*;?)*5&\kDWoI6DN29caqW(fScb;UA>Ng[s,q`_9YHnNrSh-*Sp!ir%^8/9jY>11!D"2t/Hb8*lR6@,(hNRCGPIp8s5.l62d+q\]f'r3tO6E"Re'1V$\G[bAh7_cCY;T-Lm^>U3Qh0ZZcfBQ0cTclLDB%J-%]FF1R\_32:h<=LZZf=81QT,2SN:0;a^YfD?jU]H2"l0ucof]k\ad;PR\Gmk:Mfu:GG86/6?N[jP_6rQW.C=FBT>n=BLdjHCqqC^.%EAThVg?W-rlrAaOPo$]=)Od?YI`QjZOPI[61A+au&g$B#Vb/QMf/TI'%(Aj*@cT?G&)N8A#=#kLUaAS$WA&81G"=SbK:Ub:s&j45%,A69"%`FG>Et[nkEp_rKd!IRsgMcps#&[B_fZ@H7PkAQ3]!Hl(@_p@/R7^W*8;T9sptYQ)4<m:#X-(CD+3]jb#jmEs;GO/,Y;CE0%h,eQS07%7?1Sc*.8?8GC$>Fj6H]oS;]^a*#)jncrNTh9"J,$,40r3@6L:nNi2:D9EQ@a36s5:d5].]qU$q=qe5ml!b`""H?8E5cW%7S&A2-4Cq`NVY+Z(h*_KU_l2#c&decWGM;dI0CR>ojEdor=N!%U-J4O6]/3J6@6*oWgh\7KV!RSj?2b4h4E&Tb^Hg`nX#[hLiNG@%D+D!&[$K4=\Y<X3]KC=j3CN-ocQu0Z)qRO<s&%mp3319u4<M5tKCZ3YFf6tTLW3NTnfohV&D*qhgVN"F#g#G@r[+gL9o/coiUr@@%31T_X#?mVZ!c#k77M\N>L@=2";L?sK9DH*cQ$tS3<;s<Y7gG$GbC&Do>#f]H-5a!-<7nD4fna[(qYX#-.m3k=/85qLV\"F?@cUH=%HgqmXj<8`KO@4.^HD9IiHD266Pp$#OnWW*NXsCU./>&+Q,SIRo3r()pO2U+6rO_](pWqrd]6S6VK'6d<fo=ndI$aMe`^@+_MU*p^%Ps!,7b]5gpHN?Q!,qETJ/.5iO#K#nL,4:#7lJm,7a\q1ll3i_*Y/>0?Y/kl/hfV8c*LA'4cT0Mag>%BOq61?_7gl?[0f[`,OF(o?%HGGE+N(*u_;,r1/8_0g]s#-!3A)9?QB=_6V5S)90jHmeHP&rS>?011nA#?]ZAgIn6%(^W'T@R'0)RX&,\^72U<cd83Gl(n8c]*p0%>eM*oonlp-7HV'nYDdW$>D3`ghtP<<81Ve)4'ER81R@Xtl*el=f*kS<U19*t/!jbi]=F3h`7\uqOrT`4e+goo=ED%f0J+^'X<Y7`%I_7B'RaIb(k+12,'/0H0/BrV'Z$`24J?O/4PdQ\#6nB6CoQ=J&2'#GOh3Wqq8aOEa%/nXi5n1&+d3k'PVCQ%hpDX1c.>=Bg3dG^V%jFs!3#n0B&LM!YG6h6e>=R0.gWX!kC5fH5N?_Ya=N6:oroib@6Q=+eh&pH+Fm4.#Gg,W?aHd^4<mu5;I=o1pc"-TCtVp(!cXd&'i%imN6f2GHb@L5u1PH#6(@HcsjBfQ8fr<$tc7>WTpsZX)\2`qukJPiBS3%I?a#F%R7>035lq#%b2;igMh.lg4O3XGLEk?JXldlXYE>%CZCdWUFk(h.BfT/@:fa/]"g1,I!D.[`]Ie^FH=f71C47%**QhSI>"XW8(R+996%0FI0Ji]pVrY6jUnYhS1YI')fB72gkfn8S^qnq%OhEr6gfYif;t3?E.04YL_iE1OAplC3$JP;b6Ah'?a&.a]#kUPUMN&Bj6qC9ILp:l4_\8MRYE'*u5I(fp1JtK2WQsAR7>>>E;b:sB%nWBCK8RA$Pcj"g1N^4%0.aAWn,W2="e"Oh;LG;[KAeX7kfZrlGHqPhTbr1'H!1:3Jk/V79!+3c-"^iG@S+^b9fQ!prWI6KKb/dYg%P$2?k*rFqIchQ>UQ`psnqUA;33D)%7Hq\#?@rU:2I[2^,IVEG]+g[K)i[/(EZ3n87jefPB=kY;G?C]r+'/IDgkZ^L3[b7M0<d%uj%8VY/=QS:D(M"@.5A=9P^jCt@(/jj*?P(g(/41_Sok.\_ial"FfGZR+6._VP34\/,cr,BEqqj[YP]91Mbe`\[<+h^UXbkmc0Ys\M$%Y1;_djF*+A$+jH7?58jgCJHGP2/5_>eE%TjcEoE6Z^3J=.ig^ap"CZ)$$_EID4Kk\l*#/?/hbShHS+K%iX',T;nX&JGtQ6u_XXVV%&?[ou%WD+?p8k]eoC8g*po.>?*+u%_-22*?SkY!eK/Ja4OIc/b'u6eXm8PUKX"["UkR?,GL<em\]NJ2$BFUN7*Er)H<M%VKi836d%/]GT)&mY#GVRr0%@>Q6ogoOq4U3\gR[<?S6e7lW(JQ_,>NO#ZuOTb_hIe)_K'djIZ81.Wa.ZTtTk<S$4%cH^QG35#[#2UHs2&q8^%1kjr[/d!K.>jbt-H^Zu'"t[D2Yf3uZh_2*jBKXRq3a#rp`sMp!P0Jullc*TV3\WK`Qc5\[fc$K>'7gRNl;s_HgeXfp,V,a7hKL)a%8bdEH%Ba84.r$nHL?.<:*?+<?[ose.LgD*;1]ZZ7UUb2BO9!q:2&^4sl$)LGEuu4Xbr(XT\\GZO_)XBQpk?M'U-n:Hd4:7mem8ZQ%Lf%8MQX2jGJUJk4OtV?o;WA4bNR7;Z?kG]*QOY6p5)Q_p9A\KU1!d"O;\r\[1(a-eYU-S"in-^0fm76@GLfBPk/NslffN-9hHJ#>%Xh>p_eTX6^ao",!@VI=6X#MLeC>)BVk"r"20o**"CMsPK^G<)E*:&./jVX$6r\uEp>Vl*\YdNSmGJNQG"2ksioN5Uup@E)"*ej5m%B+%dupb9]k.[rl2Qs)iW[^:O&P(Q22^\@1Yr'k-9<iiQG[MC@tE1Ankp=-0P#8)Nn>bXuY:Y*A@Qa2A.[L`WoA=65"_AZ%T0^B*!%fYX^CXS?;?Z\C`do?;=B'`)=^jsajdNG8F!52MMV%4`1Ve9pouJq[RpWYJ>a/o-m2"ISH/2VW"a_6N(lnY!-4_cYbUO&Sgfo7N4;%2U#DdfM8=ha[RIZ?L-jP1JH3U_dc4RUb1r'Yg4\d)Q$$*+O+feg-WF_P^SuIU@V#QY#76fY2-MlbhTS0ClcKa)[*U$&=[\+EFX>5%(F*<BP&0`l9b*Hj1R[USWR^-8[7$ro'.eud0m01[lrDTu/jAgU0Z(Gq3(maHhp$33=mb*(hTMDUGt#ejjkkaf_.CTmK$NI`:CUUF%Z@YiS)#@eQSTP)VI<Wa#CZlOrW[m9AWWcJ(TsLnpU[RXGI1;_Z;Peu*7=;kPTsLnpPMb3db8NE/UiHX0EOF`q20@CaFEE62pGI'D%'m/LW&Sn>=Z`]rGp14[jFA-6_=4$1o=ITcA(1hEM>@!3]^meC,rN&PQ0%11rfkoM.)`apbd\N8Ob/fH%CS/dRn(/gFi$d'$\[0dl%Eq;0&kH]9K`p.s"<S;&$7>m=g=+slp`F+`"j(Y=2/:IV-G5JK`p[<+gnf%1?q>ONTVJ@'DhQ=shbt2*;I'h(%=cd0#18e)lfbMal%dku%YUYMQZc=*1DWXI:+gO(N-@Dl5M0l:aV2%n<jmo$LVg<6@G]Xl:%=6ug?$+WrBiY_"UJ!i%2@Q0d0Qch[pWab5a4'?MFg(G64%Yo,qMLtIG*#\pV.9A)7A%nsS=l_#+9l'r%.<:SBt\J^smc/-F4f6D3E&G9qIL!jCdW?C;eee?eJ%PheQ8XqF\WAE#A+aU^cD478X%N2`aaCRg6X<ik"T$d3-^"X]:gdel0i>?`-*gY?BO][M:P<W2LFU?Aqbh#hRjP\=5'j.s%YQ%?,Bm=E$^2CQs0+$]WcnBU@pCd%S?%lM,H=bZ0<^g7=8>C^P!EOK:PBMYY,X`A55Fl>;jIR/-$d$61kWn%W$RA&%&k2XsFI0WEahe3,SXe[>CD,@C/c^1_^l<tD1S>M@ZO%/V7()Yc)O5Q&fI!o<u!;HfR$9;tA%B_;=P*EL^nN@,(+o/[cc3VOYo3;:mjter1H4at5V?$S*G;0op%*S*b</bcn$<F.?SkAVTPD%.W7@'@u$?4JfT_1k`Aqb>dp!U=.\WV@UH%hRF<k=8s7#4/sWk!YLLEJ;(Rpf0s?D=E\WmNa1dS#Rdg`O(B#uGe+S+_Uu+JF3hK*o%4$!tXc!39.N3age`\5C+mkW<\2c_1A8<];RZf';1)&^oZkt'<E)&WlTg5O8TD"6=%=H^%ON6L3JaiLQr9.dT;okc_6a@J2$AmrU!%H876$hB/9cH3Y%(/abF^RVK%6>oD?L1,;J0i5toK)&Xtm1Ya%a:m#KsT=7E^7[N;YqE/EP3HiA%^`-k%=\>up>nW8gB6em)Fd<L2%NB;-G:RBeSDPgjJ=#M"bS-Bn:_qW\$GogRsUs>t4c<6Lc8a[2%k5W[Q3GMnr:#?r!A6kbJecf?eTP[ujC7Ahc&KfTSfk`Zg<`cb,%6=O%GCqi7=MsJSo;RJ3*M/R+9<=a34Nde#M>dG"HSY7j!?e/BkB:7pi><UasmiPcI*_qo!O=T>A>n=Ee%b9\,iJdO(Xh,YBpXOjj%Fr@k2<.b.a*_oq#bUVW'>n<jo@FQ$3^KbhaW/!0Y9>EUSiEV*PEJ?=N/(MQ%@kk<$Sa,$E%@-U"i,!`,GY]T81/o<Q^86HFOT<UQ%7;%J5l+;Wg#:ij+[7[ogG=($$\T:RVBsYZLi+Rc+Q)Ki1/CqWXo=.r4#MrLV=hb'k[%'Cp?E'QOQ'[,/rA:UgPcPa9\@-.Vq?@&,%QAR(jT/COG?"%O>cB"0Wj)VRcH,hmN>g=9A3SiCs=#.:G[fI.%Ni&LmoLe'>IN%)--K0jN\fl%ZWl+LJdk]`kICJ^')8!@P).o`,%[l$J_(\TQB2/Pmt>!Q@;D`5><.:BAmi;G\e;X`4?Oa=d&MU[ub[8`sm)kjZ=U]R&D<2>\'Yr1`PUh1V^W;sutCS2-;f<dOaS0/S#%9jN(/&Z>pi$$BA,-gR1T\l(N$*a?'Va&si2X+%A"&,s!ODLl<t8h&OFGtTa0S5^(\MCX0^$:iu>oO)BIIpWP\c71fP1gR@#:7iVL%[d=RkVhJS`Hm?:`7=Na)OBD49n/?dmiRPdq^JGA*rTKSt$o<bN'$(>pjrbK-aG5&j^LVSs`<?l#@1eu],oitpo:d^qR$p.3a)$['%[Gn$4f=1^%<c*"Z1(T8c?6jI_0YjSH!r[EqKkH%qGed[diDJS&T&%jYh@hGIhg9s!D`9;P-huQ$HZn_/,_!>CQ6f>joKC#Z*kkR9%3SGR'X%?n@-Z-,Xca3Z\:WL2.E,%"@lHZ7g>9ih"WS1f??ZYQ0gZ7ERs,0m2h1kD71.=fqeM]^^gshQW/QUN;=V\Po'';aT:i.)L%^(sA@3g8Pq/V@C^9#.V#f.*T-@Q-Dag'B,hO"Z!t4#SSiHaG8GlZ/jn3T9YPWl!'Y*P#sS+`1=(X`@PhV"/eYh31PH"t)>m0:U'f%P?L:Kd&O"agY*&uN%.TT&0ZRO@^UIP[Vk_sgKeWQVX;/p<a'BGm!B^;SBTm*e`F*hk64A?9jDp$kgQ%SLDntuW3Y<$X7K^P[g-Gt%88\);19)jkp5F-.-^-Cq<S#+d*36aFX.&^.Y0;a.4eou!Q(MgkR+[4Y,u9[[,"_B$(&R?\rCM$)ZZ)6m)scIH@ce^!lZ76*S.S<s%=h)umOgFJJp=qU=_a^0i:VSpF@"5ILVV@[uU*9p@ZMOB:cK>SeWPr3a&Z*d!/p@;d=f-E9C:Y__0Ip2Q)7])Lo&fkX<n!K4am6(+%1Wg"Ro4;4XF@M;jns,8ZeT=9kGl:D7hcJ8Ee^E^=5IQ;]3[7JHG!Rc[9t.Ju?E'C=GjTY0eTBq(,O;G.1TI:XgY9&^24[UIh/mS]%b11T'[<2-2<EQ\ucH*PYhP[a#C-&+n\qRW<s14Xo7FK&BNRq6+BB5TJ1;.J%VDB,Tbm@<aWMVJOV)(;6pc$`F7\F#CF][$PiRmV"%l&9BAIa9`s2;OE8>HsXBUrI/oeT;0!R^"*>Dn1mC3\:>89;f):CT=6f=tPk"V6s=P=[]H/XJRdZ)-L`4SV;Jp@l9f[DLB.JF@OJ^%k9R46Ra0!41cUQbpAnZFWXAg'o>T9Z+D,pjV9<YaEbf"VjL"V]PKd8&/q/.RSVe[cn)AQSeJZK,Al[?F:UVY*)Y-JY&uu[qSUT92%E+^A&F:PFelIgn?R3^P8FU^p.VopY56G".-n`AVJB#,k<dq9+HN!3)#'i\d:3\Q=%(#-lY8$ilUM*<+egh,q!1["<i39\XRc'n<S%$((7BnLop51H8ZXnY!MU];@[PcKtI$]0a(d]KKJKd+sR";KBA"Vp&8/.4oP`SOH"F3Tt@gM?FZ4Um:\>?Y8WjQogek2b/cr?l(`'%qs<B,=/Ti8ZP]=;Bo<UGD%3m8ViLI[B]RX8Z9EWsEOtnk>WuT?A%K0j`BlWKH[eb,-.^G2DrP_B?YEf3k%k\KE[Ts>Or^-uj]`.X%YnGC6ctVAHARapY2?0_o/nm6Y&/r%"%QiJU7=>)Wm=lh8s1ajSi:kZ`c`"R>/;.^!bGoO*?O&2LEB/WWbh9.r41c'LDeC2H@T(=N%XVA4IAZ*>0.'2MGc@F7Xep`IiKu2Osd:OuP.(<gd<^6fMa;8kpp@Ta"lLud\gFcE*h@*+]Bn"p>jW<^!`?eg&B"!?G,SE&j6bT^F%A@9REg\%+FGe;67$u[.#1,tZuGGF71Wa:LEaMDZ,FsdP0b?^[^_"mq5![sSrSlSPrV:0<!dRHgOm8\iHiinN\i<h75?Am8DXuS%D%YfX\IeoS\K@Th;>1dBr:q/`T<3T88no't>\:j9e4mnV#H>#/[U;VkSP\C84SCfNIGqtAP5`NDC8ob6aec?ki&\5UYBAN!_2<c9k!%^AP(/Yfj%YABD\lI`##7/<,hZ$>]Hs?_<KV.j%4GQZ"mbI'e3&Nmm`-&ND:RZW-CL\6hm;mCgn:-c9'1*f`[;]29.R)&JM5p4^aK%9-0Ft9L?<?\mqtT#)f<qXUUZ8+sq\-pJPQrQ6eO%VF=1sME*>"@\%>(*Y)d![Zc,3-=ok4qk"A,$T\UKd>-ETFtbEe*5_AV)S7XE%=2%Ir04J,+^m!4\/M-:0NZjL;dC3gj@JLhnVLHLL?:2c[qQ3K;C0ZZ-mCCoc;H;XY1aj+edOhrS:19u]5Lu@-mC5XdL$<+EN1uLS%fB1TZePs`e0Vu!JHI=W1BlpfA]CU4oREWuIS]S4>HFC"s"d5BHKZflge3#,hd6Zc.BS]G&KA(E&M9`Q*'"sLQ,M)S=nQ4T/o`SIW%'.iK#Om9Z"XHqP&#B*g:T(GTQRPpT)hMHQ-C.ct7)prIkS\*7?_mXDc%l]o+K[#GE!kDuGJ)VHq0^Kc;o@*BlO&&fsgjS^i83*Ab%I\W#[h)T<Laa;2>C"qnm[c38R.BVZ/<B4rGMM_JbfDZfgC^oHslK[@+k!aO1hYjBBoBXTh17Ve?+0BRr*^no0MX^9"L32=,bi!3j%*,.;*EG(/N8+`WAc&2#-g2l0DAU(U';l#WAm=E:lW@.]aWiL>e!Eq4q#U#b8Jaf"tg&oU`S$[O3%u/[&8:>&ioB37HE+',/nL;SN%A1"QLk,"_l3a"ql2c*2G]]2bS:WsQ:D!2jVS(+VG8Z.q9h)K+_S')Xa#t??jo*gJpWH`#ZX%Z)?>i.1f\[BSmYXt59]fG!/&lmWM%&/96sej1YI\a3^>Q0HYp@^5Ke>H9:^^ijk:e`p.K2EN`QdR<K:'sPZ*>0HXNcf?SBg$VFU>'4J`91tj0cC)DrDRNi95IO+IeNU*H%8E,oWPf5>Gd^-GB<i`A3?AA8V1!25SE+V^Rq:F"4q#$2hRC*:c1q<d#hKbX(iQsjj>Zo6"cXY%.99"@KX<Oe9rk@%0Elm%gH`]jS%i%G_3db[j&!d+"%;VMlX*7p,%74f7t?!<9ZA(jX%r8QF*1\tT/kKYnX6WdEKgl-+61sF+ChO"t`H.eJ1IS7#K$8>,BkBEH%P<#M`%WdL_bqI=+/$-":h&Ubp22>,aj0-o#=B<h;[%_gESml=La`i?SnHO^f^P3pG:`r%t)%_Qcj8Y>j]qC6u2fht);^:,ZTUn3`<.A5LZ%`fA'"XM(JY[Y6c&Kjj!!X>K+UCerG]W33N0Af%L!__KnL*p9(N>.In+A%(Rb/Aj3#K!^5P@8lVK-tTM^X9,d$%TPB:p?s00WWI;'%8t53CG?b=8Zj'?j*F1OpCg.#*qGe9'di(K<f2fH7QG(u'!6U_dQ)XhTec7b7Z8#pGK,R"AALcN=$IEJrTZd5%.R9mhJ98Kqep*;.%Fsru8'A:rU-m.]sfC?V'.%_uin1Pj*B6kcV=qB`$e738UP`Oo$SXk<*MaR;>?JiMB.%fm@=_g$^chdR^?QI:e,)KhF7+:t$VtAW,%#4Kn1;6KUl^Yc[C8q!l"b'W*53nM\55WDp,]:gcNolIk%f(rW9Vu)^-GHRR<lL+E8L,(pDcT3SPO2P*_f?a:m5M`rF<^,-]6B[1L%@K4J_-g1>/.g=];[>o>,N4[8.os;^g3=YK"\UN*Sl#N6>[5ljb\ngm4Q+oH5O&b#<i<0^MF8`1%Up4CD37gq^9FIcpX]/Z<bi'Y^%kI%B_>djQ$2<NWP,HS4Ra16Y2qet\tIVYlSF-%/\p]`5&F8`1-?/7-sQ-]-PEnbaRoSVi.=[Oo.O)MRMrQLo;S7UV!T'L"u`O2Ra%rN$f7P`!uJSa31n2&B$\USfpGr`h[5)B,44VgT)tlKA"H01E0MT&6.*B76ePC0(?!>X.N`f-IY(_mt6IVu"LMgqPu'c[);.XB'Gr%F8ZM+dEAHarVAW?8#sN;cK"fp><J_QpssDeT=#@$\=1=t>X.O#ie?3s/"Z'>k/l(Nr>+6J^Z)eQ7^[+0Q,MRPlY#V1bONb/ch4VN%De<X%rq9S]`bja;/2)Joh^Y*PN6^J\rA<#rlM$e>pmfCQk&50?4P+MNU\GTS;V,okT<p2cjA\A9a4>7'R.[G-b>b=?mcN_ECt3V*%%-`qMlIFeGUcm=Jj]p\@kPA=K_**\A37lL1$$(J9hf#N6ASntsY+Km^Gc@.0Ki@rkrin>Nl_hS)E2oOI#2\=LIMU\Me5kq&kPA>"%FHWu*^HC+Da"^lPDY@Br-T+]bF8].]>A?1\jBOo>ETOCMofKB?eSg/tK8/Rc=Z_?tpXaDfT=&0BZBD`i\UKh[q2tC4pZMCX:)]bi%Vt.lWFfq?N&C,=VCH:"mQ=F\jf.UNWWh3^Bm0`%Q=W7V+.aI/%os6C`if&2f>4Wl^/:9:r/f;=@<:sRsc>>J6,^*a'H(24/cINs'%F_-ILBc9W"VE/\_ki8tE9RBLV.kjpYJWpJ^,uBS\@7fH+"!p,(/s[iJKBo,PRubd6-Nu\^IhUWufI2qQ=AO&RW*_G0*q)a0gOk>*%cd(:mV^K.W<=%q3r+#l>^$E^(^%X\L.[@1C=8<273T9V1bR(%NNN6As6<rpQr10kt3aL[r7:5uRDU)]/Y(#0<j)1ce*U\rWosq]D%rAf'D](9o;_-9.ug>'3rhVK;7h"u51`dPcHG.<Shhpl6mWC/)^QdOZ#c4B@joCoV1\s(i;LZ!K5Q(9uhDlD8O\i;asFRjXZ:L2<7%[eJa$/%sOfH7s3:-ek9NhMmLgjP75tDg@E(RI,ppf0_R-b=VduoADTWr]u9lQG"#dHJQb]M/BbG3?fAP1".Y4$`PeM:9gJ!jp;bE%j/O=HV/ldG72'9Ej1pWL&,235o1p^rTn(=%dFYo.+cqWLj>ioY>3(?3l\)<FS.DKdDoj>,Y'M@@#="KhIeru1M[8bmX@^(a.X.k9%El]==\IaB$VdsP?caH<iHik\PWp6$^IFNY3D0u2ko=-.^ft##cg4Sk"B<.P_G_5pB*j;/[!`p?(=E]%O2\&!E6EKP\Sin'=G(2ED%Vi@=U,h'UMFa#ZmH?5#%/b+1a?6d<sYMSkt2:$paNlrqPU1\38Ho'o;h<k;k])*XZ4W!qN#a;/r>FE<dj*]ekq2.el-[kh(GN"B'%5<Z0UZh"jGY6!m'eec3,GYTHr:l@sh5RYdcXm_kj(J,TfKu']G/Y(\T^Od5gAL'SQ;L[_^\d&K;!S*1L<b\2]5Ws9e$7WHY`M_HX%p<7ME\H0EG\%lldnFDPt(bfm#McBFpQ"t-YeImhTlB[AJDB4L`hn`SPAM4(7Zg!Ob:;>q1j-h?&@u%N7pj/?0@)!?k&ZuF+CpFF4%[TJd\$`_'#B[^-''[d-nmH$b>1Wr'nGi@s?!P:u0-Z]#&Mk&UNa5H2CY^\I<M0B&P+?\R+O#;VC*t6=_)TO0"'IlTk\a=3W\8s1]%.e,0Wb,!2^eV>Yti6%cqApnG4VD:Ba7e"p<EMjA9<[A=U-g@[*\glcb`-V6h/KIOl]mAV)o[_EF.0mP-_0:!K*;0'`2^S!?CrGG<%2q6j;]Ef[=K##mc&AI!j,dD8OE.#!8m"\B_4S<tEc*un&ju>Cg)/D->j>20u`sE#cBYU_W`"4Z]nF[qK4oP?'Yto:qZo,[Ked`s?%^=tC(L<CNao>KL>GQ78Ko],;Y9DYBjZmGC6.7gREc,a)(;U'`H5t*$!R2gZ:_-_ssf*$TC(WL2ZInFWi)a!JOU)#Ec;Kje`D2i)G%K2KD:--RR5$/^r,B8@lo![;f4?YPViU2gR8ddYZE4N6PD*i<tb.qoQD,8)S`ScbWEp4I2RWJ1G_"Kn'-kQX2sQlUYO-#Ymh7#Y%u%TRW=o@O?f*;a<.WI2FHL[.a=$MMB69DYX"L>PjhMbQhnae8qN266iGVrCH`02r^L8&6<S;b]ghSh\Z]JB^>GW.H,>4)'%pg<,3F]%(k(,UC-I1.H\O=#"g^)trMp8KWa'`@YCE'8`6=Ru8VD8j6?G:%olV49f_04FPe$//@BSP$[``c1BG8-ca!]s+<u:T7eT^d5mk-2r%0jLh]nq\[K8N!-ZQf'-`ro]h7+eD]*T*uLc"!*^nU_f!Q@YKXd#.1g3I-^P]A$V,rlWQ=@`Po9,k;=#og3&CYQEIQapg#BPR3uFi%#M7nO-lCQr06fQ2`4#.#QXj0qK^ms;LSt+ADhg#W4/`*"5*n`@ZHkNO8(WAh>'\^-Vq;]hKVRkL-fn`13?##E\8nt35(r-4o-aaI%H<cJZPeWYVOfE/KcaIJeJlncF;(>P0hf$(*(e;a.,WsXIdj1Ktq&<AG]LrQ(jD:($H2_&R$6RR9Q%Ur6IW0]H/O.:U%e/`TQp2Y`%[WeHrn*&74+%]g::Pi0Z@^.gA&O,]Th'6#E@dbAUfAhL^5<7gGBGasL`_9*<@b\TI3HfF%qL6r=44Q$I/77Kl6F#o[jW`-bI,H`%%E[s$#J%SX&:!R*u<(9\6/+fY+!8kBE"bZEW<AVp+W)Conk?-^'&>ebU)?$KRSi@9ZCA0[&dr1SJn*Sq0j>%PI*/4,-:5^lu(;\<n%-2J4%q_2KZk!Wp`Ao??,aX/Tn06_k7n:@2-.S(T\l^sC^240+;BY[6FmIMRhhdO;\^>6pL8V&?,=*b+6S_2HPHdU"(iDJsG5")/o%Hf0/:UP6b!^Qa^Zn^Dd`W.pEoHIAn^R?$4Bgtrh>5nt`-agA:lVr"8Ik,9Y,=^kRq+P(l*SrcME2"4Wg5;dd&%"5"Ln3(pr0^Uq<%i6\<K9)jiOGYJX$6Sm]==^D9@\U-`g'#p3^$rcfY^4(bY6@A8M=`liUBD#461edQX?iH3#3Plt%iUlT8@te2a(ka5;G4*6ZA1OG/%c(-k^"YNfipu](<+K@,#MsoEcc*&JGH2BWj$]tGt&NViCFLCRnGb953`_`)hgkF1=ZWD's-KK"Kln[")NfO3T5/WpRQ80#?2"K)k%08KtkWF@>.)b;PKh2h:o7pW`D=(?sU>RdSt%'9*'!)@)e7TZZ2be#QhFNAQDhRmX%quAmVO53Jul.d2h`Wrij`MieJhppt!n?bP!%N:[b[3LJf1EF;9cCK;7N`'_S</IU`s`E8g856eOb(]sr6/?Tqa\rr!0P8JP6"cele-&;6set]*&n+G`?rY.6M;/G!:Olh:mLHW)Q%jM2)G+$bT"`:3+a)\MIZZ@=M0T%eAk!pO?bij#8Z,n.W#?`-OnP3oW5#2^'I.rq6&jtI&cojXDUOQi463BsQSqBcCoqugjc@s!T(%n\UgME2G55K0i=QDN1d.[,=7`IL5t[?siT1KHlC+^p3j-8t0UCLZQWg^SON4P=:qq.:#t$c(h+]1TpA2>hf0JcHd>X&$I%i]Qs<?%h?oXAP@Xd@p/CTO,m*.rBE)te(/h$=RMS>#Sh9qdW<SG$$$lTVj6$GGIA7p&-jXN)%<t4f8MiRZ]^J8eK451/C-KB.f&\RnkEi>/%IWhQ'h]%.1la3&c<:1ff0^[@:.3CJBBtb((4o`Uo!VnU']D;?[#,n,D5i8,hCBNXPhfnkN="W^F[t?m//Xh$=C\_P(ptj$7#*''s%Zai4h68o\:,KU.SN5:-Z'WKGjUe1+HRB7SX5(1\XlPI:?&[)6nHs!/A_]skFF-!VGj,$R(\(R40rrI%S.b(CuqjPnE@mN;U@Y$K$%q-Yb07u0)V0`gP7efRshR8BL3a@ph%9TY@]T.a^j4D7k/<*8)LRPH%P^[h1G-8Z2c1e]%T`mR;X(Y.4S*Kii,5[SV,393l4P4TRh%V_SpG?Gd^h[gqI!Jr^cs$$#7iS$9]i`?F3j9P@_%RE<8TVD3:Z(UE<oaV98O2*igR97YB-eMdInk.WV_\C&rN7TdtAkmd%PTS-Zo%6S4CX!9@9s$%cuN=fiVG!;L&sGJ_,Z#!MTX.o\Ql6:nTg@3Co[8>VA<-0*WMZeMCD8h0loY:0ab>cpJI,*gLk%1&l,iDWCG.0)g>%cM^0CMHlU2`aSRfaCs6!l2diZ&k!'e[VRmgQV*U9$:QR!3+6Ch'WL/Rau<$t>K.b?g6R1V.<7bg-r[0p0/BtW,%JtMQ&Os`nseo.%LRe%,bEu3_od_f[@(I9!R,;*A3Tu3$`h3tp)0=RB7E1j4*PIF-c",$Q%?<!FB;bZJ-%UmOs6RG`H<%G[/pmi:#Ff+?4$>DW>/3&a%9bTRCd"U&4KHpago:3MoI+S@s,ZUVf[$g@-fm>I*H5=]17]Dj(8>UW*d[(cLLcII>+2\:;,1#e+H0CeYg4htA^2ub,i_I_>&c&qT%6l;'L7X6YJlF>tO4sG=rpYB3FQ6L?"98cCsGIY#-k>f+P^.p9LF7HT!c1cnG>6O50*^lZMqrMWB'RG2dVXK3#OX5XXc(!IsQgNN(%qe`Ei$$CF*DCAK>7D!2$jW7[gH)8Zon@\)1eFUkQ*nlpV9Q&/8fC5(QPS1&^Id-00QI&)L(2ut/m-=8Ed,lg*%.!T<HPbT,4Fd4i%YP!CVT/uK@-[=`Z:G'5,qodL+lZs[k.T@_hPpt$;_A(SG=i3.Q`Oi<4Y.IL-jeDWtE%@nSr5HU2f&Pa;RbOuDjYt'Fp#%V%Cd.Y9%k/finVF++/mjHrOf:A:pEH>tM_QJ*k]CP[[l4^a)O$\b6p0q*j)jdc)F)V!uW]P8H,tGfcgA;!phge<%r*?u(+!&YAI6#TVr`1ZJ%$X@W705[$#f.6Gc5Q<LrRJh=!VXGB'2_*"qK<8A:e&7^3$cVR9*it[6&"9-.P?^!&CcVC$ht91"lVHncX<$t??[[Cmng;smK!h:'%KF;MlmH95<=o6h4h3HqkGOAffDVf/1h5u!5T^K\Okj(YYs8D9]b.T14f_4XTPPbW&h-,.)e+SN%qt&8o]Cop]rUp!NrUTd9REhsB%\ppKbAR\ifY5Wb1Q;?C'#6)m%D83s5/GqN9Aeq9\+\hOj2=otLh(+SR^,`r3/mKi4mXD`R^-!gFYDb*jc9-=aCLk0WI9F,^jY;/O%<pEmF^>eS01aQ9gAQ?*)/dt=,qFP,#Fm[.Q\QYCt-R_i`msW=:=mc,#]:%b.TlAAl#AZNQT#4?Kmo*cM\MD>s0CD3m_ML;?13brt%G$`+N4lF:d83XR\2#[@k.+sT7*]3LCjnb2:/Z]q8"6%DJqa%;co(g,ujk"0UD7oE1>Y-<CeCO&+4PRMk@qs=Qe)fE3T3%?9Cp)(P%rN`u=qqH2&Q7%WVR'?RhpjM9^oR/sMRg&D.4&gs\hRFno-rKO^o6-3End?MCKK8D!;/s=fb\]Ih$Lc8=m'qe?bjoMBN%Y8Y99W]?%DKGj6`Kfqpl*%D+o6PO>[/PO*SoaVa9>/"9pl"RWb#][/no'$V_66*#OtcQOpUa58_,A(VflH59(E;e#\CUK80K]5VDV'A%@1\Dh%s0]D6p[tuTgOF$&]X@B\kJ7X9iZ$?Bo$6YpmtGcMm9a?&_T'_NkkVPsp#7[%mN$@`CM2j`CM)Q!JRoeZVEac-")Rem7,3.`-1-">%a)(3jKZ.8dC:;qgZ*@;HhVW#5g8k,*XrlDKqtYF>f^#)D>OLp,]T[G$l-l#FltlI+pt9eb5PO:+ieqBSoC2-.J2sa<nCb5`]3?B2%ome]NF?X?ioscsVeY>@kLNPdnf_&Ve_2ut*%(i)B>7U%JcEQW&Qp.nK3Q&"TpJ0$qT9FC\`NZMc]uc%P5&&VI*"*-S>n=rs6TUhq%m!9ugmsNEblgY_G_`OLZG<MFGnL]0ulaaM/,P&P"2huN>AnPWNqKKNBRl_Qjb?&nZ58_iAPjU\A%UDk8q09!NkP/=YH@fQDpH[>?%0)b[E3`4LMCS!')Td&L/+rBZ0HupOCO#TEd10-C6kN]H+bTA?983b`%&SbN:%l6h2E12j;NFF,%#cIJh4dIp&KQ)m21nC)"Q^3$T%\1b8F]t<q"n+5.=?F!hkI'`4SZ0'L^/@+X/g=G8+Sn%Tb;r7N<@]R$7pOf%+1%2PL4)S*iloGh$?A7C;C[mFUo;=%"pN-*d@oP.%%dOE;CU4V%8SE@^1+Y!cTrX#GIa,13Hl9!CXjB14HcRTgU.CpC<FAr6;hqns2c2P%b43*eQ*37!IEUl\u,ff1h-DjQu,ro"]6YAOm%N=4ld\mB#]AQVo.cE@/SibnDbN?b0L-]bICcKaAs?RN#:!Z+t+NTHq5,ff1rY_P74Pbe6AUE-lDk?r;gT6KUfO7%M]9g1$d33!M"%roL4o(=20hG%S!?oCf//rl[0'h"YacX6<9j^8)g2$c^c@fr'0qH<FHS_<joS2n03L,sjq>602>"XTIKF=h4:m#@%oPKl#a!\G$,=%I/YH<>mfAbh93O??Ej)!bKCid$uSHV'JAWU*1e>p3jT[W\]il5K8"0K`Oi>*40qb2R"_BCf#?;@m&-D"Oh=)J3VYW'=Wl2ZpTRM(%hgb5f-M6i"HsQP,ee1.FqfQ"gL+cPi5^oq^/S)]88r6n-eF(eu53K;cH#\&=gp3"!7#1N5HY`X:ge3<Qli"MLcP^pgrp<@iI_aP`%Y/17M/$=MO]i)RlgYW;R5eO9>?Z/3rDqU\2EkQO"ds>pcfkW3H=h(b8gq<MgiHk#5^"In^h^%^P!7qufZg<8?g!7,>knC.Kf_M:G%1^fZMS/l$qOC$!Yja>&#ns]kWqbL9#mLS<;#NqU$ouMrI8H/NHE$&)$Aau_U,j]/fJr)s%_0sTX;V/gVELoM:,IkoaS6;@5:GE\D%*f3%0)NbG_6mSJI^A**Y[WRRfTLY#/-Do*L1$YNq@Ik9MLC?A<-8>j"/(aC)394iEqsD/B&TNWj=%%Ibm3X4(X(Hi8<P"[roSs;J%0!s``Ir9I*hNr@SG22gibRC'i$N^+kV=uK!f$435[Y>@2FZ<J%g@^`YjXY+jGeTDd/e[B"g?lbXo)$5+bc>lr,BYe0C;^5442:b]%!P\Bpg@G;lU$'1=GL_+^G8EC&HS0h%`%VMYHS0he&h/Mt1<opi"YC&A4#5a[\$R"bn:`e]JU@J0S]LoigZpR\T:<I/7GgU*0&5bP%/L*Y98bfu\K\q6n#JZ>Zk@r<W_/%,!H-#YA8\<IW;4+:%G42Va=#"lI%(Ge"g2-X_V1=K;W>bNWh$jfO?XAG/;D52.PG.?^X'7Nf%h#?8YKM4;<XM^872E(O,MOU%s==\%=!moY(f442tg(;!r2Ir@I#@W_[Ad0'\iSe$]rQhl5`@Wn79`"YVWk4/ogULO?RA&FGB%)dG%o[knZ?t94!J$spPbPTc=S^%$q18-kBeP8YU7eEmO!Zefd7(NuKClj8+bKf[K$d.7`Dtj+9S'VTr`*"$Ahs_ElbOh&^#ZhNeJ5O!'%BR0OM]^2*bDD0PsN-fdSMstmCL(/'%+("GVc"5ZpjmIZ6`TH.MQ&W2,Q`beII^StDUA*Nj%-rE"]Y3B8R&A\7B9J`AEtAR>+!`G>%carkHWF>8,*Zh82%Il>)"VGrD=ar@(6Gt*_-]><45@L7c,QE=j_9]^J*Xj-bftDWY-#Qukb@/=*IIG#d^.YK;UKm<E)RNfhZ=40h%MRQtJfM_#^leAK4K_f-9$,eE>`7b?o2Ao\Q![[-Do@\>,AZ"Un+ITY,Yl"ucNg7Sj]&W"RP-ajM;l0:"<cA;OIkF"mdZgqI+(%V1%3I@B+A^t]KO@a@u?,!sknMYb%*CM]m>po:2AiY5<G40>JQW7-@G&@1In-,R)hplY0YO:1[h&L/Eg:Z7\dZgXgmJ>8Oq[fFMjlYtQ%>?mV;BLide\iH]LqiGFccDsdnGBakWfn;1:;ED1Bm;,*-R.21s`HF-_NN_V0U5J>S65jiEg<_=X;+$eVJ`L5_NSj-aLak<M!+*r<%)CiRt27uG61a0<OVG_%Hd_mVeFR!o/+cUulP"=lZO9T_oMciT'"_`?`(,pkPgng*EUYL6?m;?&#$?[J0\&]?tdYOa"Z\pK>;b1u[%h1D%02jsWFF:SU;+jonl<ub;<rT<t.V99P$ajd\gP>fqqC*n=dUI?toXjXl\-%%B?VCl\d>rZR,^-$rb/l[1aj!K(fSR8c]Mr3m7%O0S"j"(p?Ob3Z50gGh3CgkC3tNQ=oP0>R8f2dfIOpR=.])TBbC50N;GhhrT('$dh^a@k*FEU4E<0^-NQOA>ZNiENj^T@gmHYBOsD%b:`tn_(GWXjkBXMX.T@!D%kC&ESJN9Y5RVD-.ngZ(KeoVQ'^4KMlkc@I_0-6#FBX_7L$`^b&>L>p7FNqI;$oMim<eT6oj-Pmlh9*%q>,u)R.WTdkNc<P7G0D;[s&n':2$PI*R=&Q['j-cBQ,SIDWN*,oRWD0Ud3?*LJ\^A\0((!'Fh_CN=-d+-kE:^S+l)/4<&GGTgN+@%:rN+f='VQ^ig!5bl-=]Jkk76Q?KpDaqXX2m*Yg8kmQUShPG4d7fAb^HUcWADm*g]FM.lbHk:a_#:hMb9OslB\5lLS9-W"G8IF:4A%M$_ZL:7m[X8KN5LdI_-^qToPu),?f/5BbZ^l;Z61SPN=QH2<c"4NR_@kk*!)*ZVcM"@W:ZR8n=./74oY1J2*T$-VmRf;?q&o1rJS%O-RU-(?Xdkq78gCh1VKTn`;DX9?IV5Ha@tebF0o2;,NJ/fm'ra<A:F(J#T_hEu-dG"pX)JF"L4HoDM#ao?XYETfUi$Ou:;GC](.D%BjX4TIXZ4,GH/A(^10Y\CJN^;q"%i&:Y*a\^9:[ad4S3gO-$F\g=Njc]!!!W,uMb3^fYk]T&sjp1q:QjYWU1o=dg]G*tHQD,^o6F%4:Pk9.L(cbB5)PGIFUb>&N*bdCO(B_hMetlUK^s*can/Q)0O9:+R.kXI/OSLI1O*._Ooh"R!67>j5DljGo+=;UDEifH^Jd`F07[M%mJ3f\k[AAT0-&EXA:]]CloO89_rCtWi\ZkJ"Yu2-4>`-knGOR5R90"0.4f%]bg&FOYUP$h,\V/O4buFPN?Z@cmYcT9F<@XrM*isU%ZZTms]$[gnq=V`BZTl-J4/?HEh5d^2[9'Pt@?[^`h:ku4F'?T>Yr"1V/nl3YK1LBEjd0?#3\<.]'/Sg7QBC?h*81dl3\BB`I[ZWa%Qa@0#W#eiqG8=n\h`bKaoO5^`8#9dGq`$,Y_s'\'^@^W%:<WE[np)i)L^<I;eaFQAQ;Ql#&X>.BVI_[MJ@9+.DP42C/(UD%pQeV!%^f5('m'bLg/Q;!s/a`3SBc3ABc?=a3D.)VQo3:W'>@&m?p[@ff@HR*;Rm-eY8X73N`O/L*QJkhX,8KF5YWNFP]uO;1E:!/.U`SY\%((>H;_:L-,kCN_ASgRT\N)60kWc^l@VcYXW+CB[ep;!NT*2AeFS.KCd55?&W1Z(]kB'4pl9bZ!r.\?`/YJpQQ(t*O%cT)f&I@-1G%NJg=)F'16ZX/X9XSH"9f<j%*Z^J":OrF+Lj`fUY6LP^lFkI99KbH/T0#*Yp5kC6)7Zh!5DqNbF`ASqJHf#G`$Rm6;C/KA$lrV.Cn%+"Kie+`MMfXD<,X]L(P<Rbfi,+lF\X[r8=?,h=E(*gY_(q,fGE=P!e$?]o-p+fD6.U5qk:aerA`E9P^Mk6pHN<j1<UHCDeR!!9@6%T'5a*=rIt7@QVl^Q`[kq/!nGGh]?l'l/?r>l#5\,rG=:d&KB$pDOrH7oh1p\4.<jno_utem8,8+qo7A*f9\<<Ig\!Td"]f*qtBJr%gIn$>YH!=%//(j<"MVKWBZ02IV;:Hu#D]H&OpLM*f+'B^5."s!F0Tdi4#A\jST*R^H3T3N]3@+uHci``:Hk?O7s;!F47&ndcg(&s%Tb)6BD0tW[MMp3ChT',$m(4ISkNP6l/5)?-44_[Ja)H,E"?&&?4T7fC:i..5Ud[7<A]lX;3&'u94\N)^Dn\I`WD8ch4bYEk6i`R4%Rk8Q[qANO>Pe?-fL@lL7hg(hk1i"MeLCT(rgqWX<"$mHF_k^F9R_ngJ^!h=I-<IjTB=bcJoDZ_(J%,<I?JbB9<g^QA2p2PZbSrT9%m-m+dIi0*r*M_V3BV%%%P'9Hg'ZS:*Pg+)0h1"q<Hs]n2b^)MJ3,q(EHQ[KKVt)]0mN5VrT6>`4.:9\\4oYiN'9MJWhRR9n5SdBa%ScSJ(H0NZ4Vn3N=dpT9O+[IG>EKqdBdBeZ)@C(buEsVeNL35\fMd0:(Cqq3>N=8X23qVZ45F#I7+3Wd;Y8=>^dM:!C9&O?2E=Pt&%mX0>mliN5:kR;&B-n.0X/!(2@dTs8I*pjGO2P`r>FU%$W(&4>[%Mi>hE-K%K]!a>96Ib,\rZE(/T7=OpoCunh,P23q6ZSVNq@WRV%M<SG3_GU9J`n08F#9$7H9[f'_Dp%9&BjF>C%e1r#+2QAS67:ZOnIW'\f'rOk,6t]q@X7u0)5WD>@)?7B8Hs6FHGm4@fEpqP1/O6`%dpB[BDadJh=U!FjXUVNMXY'609^!Fe6O%T^*UU$r^#&F&p-sNb+72GA0YH*,ihuHibAQ,W(0u;@9K6J,nD2nqr!&,;rn=l&U?#mU%02,&hGK+S+)\L&WGaa.Fo8SPCXe,R<9)kYqoh,MrEp:T$>;LK,LTbatn*L9bATNU`@YS.9b*3S,NB.caoTPh&@)r517c#*WhX:iV%DqZ[W)e9IH/kqf(]*[@&m-a!5CAf;F&V>[q^#%RL?4NH`>e5+YFojth:lVs!.pq_Y^$ZP_cnF7/7<h!X=?0QimW02>09nV-_J`n0%Pf`k&ZPS8C%+Q$?,6[JB&b&AICAqP&+pULXD-Bmm0CHbuM@(UY8p)"!fXk7^iJ4%fHHt8t9h_2:DET?a.nAEtLUI_Aq(J'dWKUH1%BmVO`p63%1cJ*t?r8i8-k1+h?3KKHig8K'7/!E;Q'98@?dtu+;3&KkaF0$?ZY'fT@o&t+*2ccr\qY1ceoNStPj'"ITp_Gd:H.*c%%>?ogj]4MiX?/4PDqS[.@s-L?2Sk8GJT=Kklp$[`%aM5>_7t6Wq>gE(r'YBp+A+5A`4m*csqU!bo&=mJ'l9j2'!GM./"Kt"2p$^OY%#-[s<S7h?V*KMF#D*`CDi)O^c1u@!\Pel[H\$ta=K@^^Tatj<0O#'h.4F#t+s2p[lNg6Y$S"K^Ja3)<Ng)Xh-4AkV5^I607T53rm%5@aZ8f`\MXEtiseT24r[`:GM*2gBJ.QbS8PlpMp@S3HiK%s%Z!iL5nHK%K%a)**!3l9eYIm@S=dMYefnDt(oMT?]6;oq<n,Q??NM%Wt/LRWe#4"?K6ih$@l%CQp*'GrSP02ieZ&^7UB_Idbsf&CsUc=YQ%P,4_GA>*^*Pq<U`'/=F&'IeOc@'Trdnnb(sYBraW^co3_Hl%2Pms`i(;S)0+O0LI&:[Fc7t*r\P5"VhVEqZ4cL@,j4PF84A>T;1?L3P'a`Ld=!%@HpCAehHoACBAp4Hub`0A<Rct?t:<bo2ps[_t%0lqhZrr.Vk?24.\n`n6@ValfI_fqb7<[f4PfcIi[e^/"-H`JWOXs[,p6R"2/pkDEu@(1LP90[orBoXj9-&Z&tO0WrlhEel&g$".C%@4&\keU6u+]<K\a4keI`4*ifUip<@Eil(K`42omS;k.W@j&gSHD$5Z>BYENTS`6.YBs5%/FF'tXr>65.YFPQoJ8s%k@h`/Yfsg/$%a/(#XohRbI_$UG]b:c5]10Zap015KCIRaMj^]-F(iFhl`9]7piF(8rbmYO,BL_8K/lHa$Ylm@D)/&(cNqi0L#`?9D-'kpg^*q[Hp%]=.OFeQ&EGjhd7qo`!ibq>B"D/TRsf](`<G8abU4QZJX>rR1;L4qoMS?0aGFJ+Rp-Fj1:9gs*A+fgkTV<Yp[Or(n-.e7,]A&Y$b;%ql8LI<oV5&h!Eqf/,oG#ZKBP_Nebhb=(aTR3:=0>;O*V?rq[4aesnBTHQUJ$:Sr.gm2bDIrqog2I!U4_9csAgVAn1bh&6fARY@(E%C\<S[K8eUqr;Aend9Y"'OC:'Zc6F3I""079kW2/$%#mAkVB<mbR'Wp]4Bcb,DK!Afb&;2kpJ*i?5Oq74GO-8QYVs=0jiW&"_W=#<%?a1142d#+M>J@DT^9k3QQ,?[5Qsa4ls1VfGZ'VUW]AblN`Q]Z%TP@HZ7fo,umiu@.9\;Y^h9$W#2h1@)c@gEU7c(gEXm)"jR)ct-%05o)%\Ce*cIG`#sdG\@N9T-%f[l3E\+T^5uHcQ`3Du^)Tc>L2%mB9g1)6qkE0XlckfYSA16ZV:Wft[RV.VrCp->l]5kdXm]h,F2\%c'tV<_o:kU]B/0ZHQtq'LV8FO0=B6Cm][eXJfjAI\MEVn*.<:E8["g?!Bp'm6_&O9S!_'!)5!cAb3cgFn*acC2$6p#NP'2Lb49og%[3%PXEQ$-=?WZFPM:./s8NM/C&L+5"G.pLkD>N\G(K2,/gM^#W[N@,uHXL*qVZqKU]Xfpoa/[pUqck/MREjgV2q-Gcgg5umlNoJu%ENKV>(r_b6V:dR62uiWS)-N=km@"X]@6)T7$ULf*'E7mtcfM4.Dm-t]47:oX]4mga#qL(pk13t([M*E7TH:bWk3hVh7<b``J7YIE%6#>n"ZA-)]lZum=RQ(8`#adMCPG.4]K7HMJf!F2cq!0f-h7:pGmZ3G'g>AOIrH.GSpAY$V^]3m$jbYqK_2\S3'T_Z3G+P5r>cFK6%iSm>nppHM#VjS\'l&gHJ>F0B`@I&o:aj+_qH`*e-nkZXfm-*J;^9`%[Cj$eWM!oP+NHu5]ER1jfRp!7WCM&6_]ntdc/.h[&*Ikp%%K\H@ma<MT5?H@9R1qDE;oC=4S@dA(._!].cf?5JmL@iWoX<KWfG\iGbCj785cGF!sZh)M+ftW"3Q?r_c(=Ze3H`;DFgP].W9&^cU%]tACaWkT'VkL6>/p(,`fDQVb*P7I'n3l!UM,p<]90bBYgbkof09a7K/iKafEic,Y$1jg)[;[742kj/%?3IP/%>J/pm-60=kiC*)l%mur6=1AGEnkZ0$7^MUP`pW]>&@:R@s?Bo\_Flr!+Y]_b3GH5qRhS8l%Vqh4Dm&GOoGfR8-)md<Sa#4>?2u2i3GAOnU-J''Qe2%Ph%@:A.1=R1>D,2HJ43$fI9[D"c!e!U%3N8YPu(QJ\,P-=G8f/o9on(k6A]@UC/GK8!G]jl)ckddg>jOK9q*p-_Y47[.,M/uqjW-8<X%I#<UtZd@s_%U8DchW_/SI^S4He;]6[N%=U2s7_]6%tW@$&)RuXGl&XHs70dd6rc1U+2Yfgmsj#4+8bKVHp<9s:F!rq0dr^\EDm?g%lN6fA*_F$9Eu9oQ?;@W7/nO]gLk"`$dGmR^hU%$^LFdaVJAXPLfW^_1lo+Rces;N/Yd"X0)`L3XgAkdF(e:Ttn3GO!.ocOsjEcPn%ZbEIWiNVE2JOT=HN3m"cqRmk-N0SJF'5j0m_KIBr\X_JV8njV?[S-.Yh@V\?g%k$2<U:cRrU&K0%pLq"IkGVuHJ%f1p/<^W[h#&'%*c'1C7V&+a/ri![4etlb=tRGfl,n.iA2!PM2k4:m[_R[+d%uX=hUK9SE,j]f$NfN+G>\&Gf"ChNm(/*P?JdfFO*CjjkK!1_)]-0)%.dU!$[nsssLT@WsIKKo$T+@ImO"gO/;=&C-Z%l8Eju6nM0"q7ZS@\La_nD8*O]n0T(K[d8cMYa._$3Jo85uLJG0]?6,Jb-c4VA0<%HU^!Xo]?)$WCqH-fr7UPn$hB:?sXor%OU2ri#;%,30BIkXNkW6S/1KrU_r`t54riI&r=L8mDJn:Np\.i=*aA-)+X$<4I1)@eCa<f%#cNOrXd?geilu-$,H@Gc"R\c)^@I@-X*h5##:TF1fD./5I[dA[MORuQg+^.fet;1:JOQn6-b>5A,foSpHp_^bGPPT5S(]G.B6).f%o-Kn_GkY>q2>tf/TW=G@F[Acu_dM7q'4U5#E]0?W\Ba+/LNsmjF3ZeuiOSQt1?WALpq=n^c];YJF,2u_ST#NoBY0XDcC]l_NOSiM%i!IbSV@sE+mtXI/4?$</Qp/fhlD&3tZ8'%K)lnXP_OgfP2dN0"K%N.6h,n7PQ:o,bdDdZpCr,RV\od4s<CU.>%Wh$6V;:GJ(JgEM%Lil<7Do-\''Z:S2(E^<sg[S&l505-fa%AY=e``dj_<JCfS:Z9^o.^OPe+L[:%h;I?0B>3#cS02&>INeEWI"iaoAoX(>rm,S&>F12%)u?`GfJgJ@QT&3ET&CP]&8Kiud03p=VH1sYmFTPCm)?__+iiB'S+dFO.2)IdpP5GfM;5)\qD0R4<dju+J&kBen+M/&_=nPZZ4C)t%ii%RUa3$Rk[0l**?)rIq7`mrc-Mp']T'te`Nfebbo:*ldE6S@\<V4$!iu!,"AnTbe$f9/[i6/Z+.cd#7UJ35T->\-/@?-jWLn;FW%$Q]C&p<%:/4g],eUnO/Oe7l7*R01Y[-Do+04qYf)[GTQt&_WWCOClT*c\N*9,S0=Wq[g@i2b$'+p]:uQOO/\Hor!B@B#T!8U?sXT%Rh*66MeI^7CA:ZFs,>uDI=3jJN(9fEFP1!5G3r;>*UX74Japf5Br8L$YNWi.ZIb(p@;[[<2@n&:\hK3^r`K/j/em<^il)jd;E-KP%Z_ML-qJ2h*:2umY/BS?mY/#<'G:4bXVsp=PfkkWE.[)q;WF=YrR"!;,&_mo\,Et%%a)IXUs,1;%>Xo_9QMkCtjP2Ed,%7gmHe8:V%@eZKY1L\/.oOQ\cl$InaLijJPkBo5KV&PWB^rh0#VRI?;fbYK<*Hq@IpPSrA,-%IrDg;O"Md^\FM<SX6@<H4bIK"CZFk=q)B-kfI%?h*Fc[?H*8j,_-Z;JtnT6cn>_n91.f:N(pXmU?(nrnTV_!h93P/E:*pSct@lgmWZi1B(;Q;1jZcLj8af3_4WZnB!#m@uJ_-jgPI\%2W3/9o$`(l$@?)bIJXg!qQutW`Z+L1WB[.H:UoYjQXM8Ti2V@Dj?@DSo>tW)@;?(INWss.V+g)a?g.nPb^<*C_R>*"GFFSf_39q4%pfUsrH60iXNPU4Mm^T`&56#fn`mXb)?O'u]V5<noDGC4\T8/#M%J3H+!%Z+,>>,"k[%#OmIP-peg0&a!ci*-4W1mBsSk"u_Ka"RI%fn1regrJ%G]"@Ltn$TWBpj9LhHb#Er78^h1"lo8-,JRB0dalHpMU$s:1^rIh_<P^;0ALO<J=RWY6hBF>>FB0:Xrc)V?/;pVs-=^R%qrceu]:\!\nc$Ge_Sju]V6q8^4T+^Bj7_Y[ms]QV?XG`VmXI<CpYkH!Q-#l1]o<si\pEu(rl;M:-5T!*^e]2=)A!.%He9=^O-/at%^\9g>n,Dreq=Wn=`KM#OHVMc=h;tWTV99ArVPiQXrk:9JHfo*-[IE@+GNmZHK;nZb=8&L,IX\pi[93?3L6,^'<b9o$AnXu0K;[<:%?Yt:/+5,YU$7hh,b6;Bk$_QkB]RHp]ZI8,HHSjCSppBm?lgo$j$U9-q?=$jmpJ4cl>9(U%3p#uDbrss-irS4s*`"BcqI7Vcs60"&%bi7pri879(k:3PX]'$`?oO;S/rBDf2M]_Be2Dr66kTLYbf"/Yalm!-<SL(&Vl\c"_Khgb#nrl,ZKJ-fqqV.>n0n*9&aLAq_"2d?6%RWcS\#`u])n53'LWSrbeGBnBt%@9'5i4bRSlhFL^1]2C*pgW@m?FVc2(Z]8EEd`ME1[YlC_X>kG5[8R5mDX5IG5-Yg^N3u;IhkrR%c?3-B-X_i!7D>nl#!R.dpWi.P4GN-=iK(IS(]/igmcVL9G@GI\o!OM[g_U2H$aCMXG@Qc]1B06K5F$T)#G*@kbO7Ro=S`IX5^s/+%*s](=Hhf?$cYrO:?l$f-)[g)SiSpf:;<a:V"1]'DlFRk=^Mj&'Cu:4k"p5Y1BN)]5G'3quGd'"uhSf'.,sEl7j@rrtr7Ts'[._\s%LI_3*nQW4EiB9U3Q<paro(g#1]g*+pF\L2qGn:JMJuYU!nCQt6^\Zl+JW<6+Lp[CMrqD%ss!p:e2h0?VH\m$:^E3q.l8<Z?iZ\h?%Msc5P=H:u1rL/N92nj4&R)VdK<&bp]XbYt\YdfRR\"]PgaNPEA1TlLaN^e4KY4J07hXi/eS+iSZfpu<6?2\>*2fitl&Nbq4q<;^.%4(?7.n&Oed)mNrbF+,?WfZ@oh4</@Zrr*k!i.=<k\=j`t6$BF63:SRe3;(=/JH1%#^i?@Z?i<9bNqrEbW]'^sX;%r/IS5Nbhmg2-%jXgitBf#]$bJUW`\Z+u]:@WN(_rg..b9,nX.bTm(?S6/5:U>l:h1^/HM0SsnhAV5q5Ee>Yma\/QIdX>O\d5?hN4[-"$SX/a=6erp%5Va>0NJkO]!qlAUQe%4Up^0:K?/57J/dMEZQ%.S5T>fi/T0HD`cf*'X&2%5D^\]h2<%l%@-iVs/V#2u.o]P$&7rtliHZ3EZo=%fE%0K].,K>0*%Zhj%!1UPkU(X+#DZ,=0@n6E\%J^UOe"KF-$i9Zl.m?^bEp+]hK.GFC>_`Ql:_",']a4=mAq=qe`b3+BbIm%oJBn"ec%*PclHmiu!,&)[+X^G6mL_WI1J\d?-nS+,gu?+L?'P8D:^Fb.$[fk:0dDo!1+[pWZkG2qiA(O-U&Ae/e]I(G*g"M=nZ(W@t.h>$`>%/968HX5Fc'2`[lI2^(AJn)"7TrYCaPp?pi.(6m_#YkJ.3(OQn[-7n\FrHRVfdT3jaT@]\tj-qaok2M$N%XAT_ecg:7Vlrh.o(.k-%<B=$rX:d7>!4>&1m+h,"U]T\6I1Q=fN;>ue/tC8mc8,8@Lf:i=3:sPKQlaY7V:4)THiD^XZnI\)>/8)KG==(,Npq05okcA+9h_0[%`9DW9KnVl^N;?!pKNBY[YsUr*2J<\T&K[j`IXbtLpW4Q;p$1@4`2R&m&AYK6]433%@7Iblr+5YA?]-=07.V(A?=,>OgtG<oQKFS'%iWji'?KBj)-r[kUOl!@<]NQ5Mf9r!i;T.QDht*[qGfNSQ`@m5KK$ZTFM'u-bL?Nb,VGH>DGq9p44/T-ahuDDRX6#u0[,0R,H)7s+%J5Z,&4<fi4-d%/'gRq$so!C&M3>hHZA0^YB:SSmU\FCT+lF(q*/rNTa94^IYY:a,TH^_)FKIJ+S@t\QT0T?[A0u>b:R*H"H\iMPT%+O\H8%rWbE1bh/\.!tEsIY3g,)thDIGCR:*E;T<X^\^-%-Gt<@pL!^)m3bW]9pTqhIagWrrFTNYo1kb-akL\WnoAI3o@M7]qd861%r:'RSInsAOdc6s<5J46]H"Ac#^3%"h-YJr,`Cn8=0$OH4p!R"<Eh\q+F8pUbJ)!84-]14KraVMe_uC#BIJeDcLmGX's6Y9jFFX5M%8H3>.Rf%I%g%/\DX`N^rK8I`E<_Yf(0N"+!<Ei/r"+Sfp4_SX*\*8nM!EY`ZUGBsK+QK)Nm>8Al:>#aD^RY[09`>I?9-'a(+q8u(%&L?ZM2rgrc'6=[M#@)!QZp!=_HP;Y\kM-pL$fP1"<gNp&'Rnu*DGZ3`iE*\C<3-B)Nb!@/O<=HiC+[uV?h%<4K_k0?YI$TDe.R8N%MnPCa`F!klk6jFM9i4J4n0_O"`BYi05NuW%N/YO@>$4Hjn0_N/`2/LYecoV\?i3Wbqo%(\'<bHE1ai4<CUHaXM*L6>.s/W=][2n"%_YB=tG3RO0\_:*4SF?oiF[bj4nb8uK)jUk]o=I3Ye(O>b!8`b.$a>I3r_DOn$N;\boRG&B/RE,n3BVq#aQo,(XrQ@Ws/3M/Z`<N(%]\)2.:8mFc<YbTL:##t=f5.IeDt$)WO?4Vg,B9BV/dt>[Ir_m,i-Q1<Q5<c<dO&M=8b$_"A`t1h5=I@q(K,:sd_ao$@TedPs!K<H%/K5c1QH^>\dNiA;8+CM;dIL#;-;e?n4gOo*fnO(l7a(.$AtRq>Waqg^DcTufKsZ]H;jG'q2;bCE86+4"<n0*.<S&e.Y-lK6ATk&s%`j!\V\%Gi%PtIui`1>m@r/f8%L_d/&n:`S.caZN@Qs>76(atSfnV$r8qV^1h%r^A(Qi#T60(")cq"_\ppXP+Waq**A^j\Am9[:jW%5(7S^Gp\l%@Th5!ast.V91;m0DgU(X,pAOlnN+T]VQU3;nO%4ZBWArEp]P;K?n_E2"btAc[8#n47*js=.HH>MIFlaR"&1)P\kYmB%$L2^"R+;cDc@S6Ee2CJP;Eu=-`EZCi8c-!c_E*csC[F"-f[bLJR)V[H>3'+qh*B=&<PhaIOt*:=g(=d2,t[/.kn@Be<U=k%-"[($%YFu<*.88_YdA3n@WB9??M*/XjpML^HE]Kgc&lF>69I$`<&poW7Ut98pF4H[(m9f?d3NOcJlGcFL]#7=@buUg5[;93JcIKcMC.]8N%?/cJGB9s6LZm1U5/;c4QL1kC$2<a<p)JkO)\E/IZb4_"!a935M*OI%0H&7^:9@P=pNCGX$P6o[o"eSNaOnamB`)QMah/T];jC+tB%f]#m;Y$+IBMK#"uBIcXuIn62R)QdJPNL#h)kIkce6.%-bM'd(VD=XAY(%MX6b<],TDm12%[3VO>5s(g'f-lKh7X`-hZAQ3H9To*&%GjR]lo^.YQBrCjJUb?j438!-"*HY$8Dr%3eic!d+;U@Uj5s@\"dSI6(r@Ckrarg)IPMDJh)^_#\d'iKaXt+#pNnQc"F*M:PR2i!/%m8"!+GoHplZ`$U.M^C/WS&s'l"cphh^`])Q<!=+=T*H35VZVmXd?9;0HtF;N8s77;dO1SD3l#-AaD:18pY*`-$NH)#I^2a6:$D1C%"aL^;A\jEG03`@t*V<deJSSiJZt.k*NBc1C%62W\DXSpc/DL+'DUe!UF]m0gb22j#[!gho,P4o:;q6ka`YNgP45sj>VQ.KZgZk(u%nUAh\1'X4p;c.RW"1@u@<k";oHT.InZLZmB&Ml65V_G"6RqQPh=+_=>T^L/7Rl.Q(H%1EqZ59c+=A"a/(T>hjlEc5YPe?AmEC4S=%:=)dF9@5\01tCMqmmZK<n6Hd4\S8<`aqX:Kr?Q0W]f-^<7mBhR^K0TrdVeMEg#KU.*T<X-RQ-tXNs76B7k,LuiL8#[>*]WQplc`7%p0]Gn%ZZWWJ$%%cp/3e.;@fi8mo]q+%j\7cJNDH1\)@u,>``i^4HT]VMa>fkP0<K$&lT-P7l4kUT0BKT[ak59'(/GtMRi"GP4gPR%?%`6d#^sYm;p*ItJ5($V[XlJd2K6Ul@!@S42=XX<8sSUk2M'lSo,SgoE'>Onn9;B,EM,dmBIueQrcfNUAD\E3O%9l625Vh!rFOmu%5+7$S.`kW]W>,9T5"5nVLbdW'TL\j7[P1LZUsr#_[^XO=TnB&JQYH6?3I<e#^;]l='HQc6gKV0!Wiue2SOoiH5%o^.HKRg3]pGNj%]Y.hjEKT?..J(l4mH!:=8'dK8oNZ,LTCL$+)Pm13)&fK:X2lP$8ftDjGi0%WLEt7\,^nZ4P?#iWA<O<L_/&cV.c3tsaSUK:AVesO%9tgR=@oV@[JKb$JTBP+5m]>J_&eXof:kM#POcc7q:jZiUe:9dDNU]I\%F%9Yg(A;Lae_9`HH.;<XcDF'RU.->]3!!l*a+Gf@?_hb%#"dlc'LFEQ4KN%^BF;#O>))ak46aVp/eWT)HltskkfTGRf(t`A$9VUT*0IHid5e>*Prt%h_?<5cO9@j%$nW_.`l:C[')]ELef]h9%74FX#i+Np96m'/aKO6V?HXK8_hb\g5X8-[HUr?RJ?7n\$P,14jcm_5%8ZeZ?5b[ssn@Ypcjc5gR;W]kS5T)74T1EJtB%PDN!]e=6%pll0NM#5n).81lW9FAe%&2G4?$0TYPij#JEbTh'?R-PTTpcf5kab>&<!W1gT!$q1.[`7Y'%qff<0`FF/Q;WPfPnqu)8B/,-&K\fQ%>*.\2MDp2j3[I,iiZ5CYfN%^*e,^.rT>bh_`.>Z4$uHS/a.N5B9om2@,W2\<JA3SnD_W[0\MS2A;?[7DYR/BZ'+)e`E!h9l4pZ(G%fOIeqL6]c,e[64J#G.eYNZQ6(`k@S$%o\V2C+31tEfGlSKi*`(=KREL=1/<YH7_S_j;k?,0"cCheFbFKWaSd?64mj+eO/]hqI7e"%)!%VM<+t&7crG[qmZ\D4Ph:d`70l4NMS!/n-7&Au'<E@K8k[PqGt3cYffC=M]ftt,+@t(]CRdDuD*6tH3U.B`7tS(W*].FS==PVk%;Hd<=+r*:_'Ld73>&#44^Frt#;:s5<,4bsXFE/m%EYGme.kDC@6p_p,EhC+K>PG`=%!<F?a.H+B1$D4X!('T69*+gg6@L2EnWmQu%PKGg0T.E6f3Y>1=q:f;>+7\XMcX[LgTo%6_5)bqQ*G7-Ph>c8c1*AgPiq5pQY7_;I!>.p_=fU7O+:0CF?t'5D^_>A;fO"@RDE3j<%'7n(e(Q+J%_1l/nea],[A:V#7icY:M.5g'Ya6SFs?R-Op"!kBJ\UR9u!HJuC6hn2V5o.E)NGdW%%GQZfIUVmT<<H*<`8%g.1V#O)%hOE)MD>g7ddC'VP!WH96q+B<BqDtPTJR/-r_:Q@B&q&O4+i2dDrtOsFmfru&pO5[&Fmk(g?hYCP/Q1@]jO>&k[1'VBA3?Wh<W]Cs%)?)68"icG1FN.EeL0*-O"BfRZ7)`bSkC0@g7Ei*b:b(-0TN!F=e6k?>W&DUi@me.s'A/Nh5hNH/LhSq"_9uAYU;CspGu);NKgnSS%Q5BX)$&f(mO>'P$_P%R5CKPb3KF5XNNqTRX6/0Kas(j".8WK$5p0N>s;F6dcQj+>QB2%+gr0%c+!X(rp16YZeI0pGnBj^ssC4.;"%/:^UYl7trb^Ygu%NFA-=i1sqOgI[nlE(R8j:_L]'1,2=WJcoo4bm6Du_fSgbVck$;;A9kVX;7%G[i[-V&Xt&<R3kUeTIP9*a=>q>%n1$3H9TE-,&tkLp-D4@S'.u*%MG/FF8,F&a(2.L-^C".<SI,KXAlf-E9.<to`?H,9Y:)t/[+(+4fpG#>W,/C)E?\HAZc#jX8XY(b%CC/8*Pbt+mCnuSsA&;,O[Zo;V^b'QZ9TiEP,_R,#OoiJeZoZKL$7qORH7_[7(OVMKDO!Q"cBLMebRr:*JO]^Orc\G,"qHB*;+:WU%<g+0=L&Rp,ct%fMqc$AdS\VatUX!E"9$a(3Ch![9-mAI;&DWXP,m9Pi\,sJmSgkIQ-!D/$NS.BahtF#bcJT'-(4"9V-q*mjrBn(N%FqOkjXo.oHd+d2E&:,:F-g3/Q+Bf_<i(m!?OCET=,U='r9>OfQ'&olh+gob(-Xg3;+jnrTLtn0lK\Wl"N8,%IXTd6IRfmWV9U8Uf%g'W+XU.s^N;1^R\]Z1Frg5obV'PE;?8dX30^`suV-DY_d?lM+`9Lb0.O^P:IctA5hPX=U`YRO_J3LWW2U\*n-,g4LJ.JP"kUQ*S,%0j8mnN6rh>,:28$]!I@K_S,-`74MY,5Vdm3F"'Ok-bqG@1d*H7iRp9)quk>(^qem0s!aVoE7sI+-BTrh=k>+t&!-o.WVdt2U\\r?%eZE%%InsIUESQdtC_MP-L1AuR_f0E;82qB1)C:(D'f?VcXWROFMU@k$2I^GG8]&MS9'-dHg3(iaY"K33E%IGa-_:niMjL8=WB\fG%C1`,u,@(gPnT$!qK<h'+b8R;L9PQq>^jp7F+tt.oiV]&DfgoSV2+h:D9oT9hlbaI';JJpj0jndYa!rO+:Z*Y=Qjnf19^4qY9pf`=%=;[7h1!Cq;(0O6]UJuOb-sMK%R=n\ELLP]f"^*l<6i5o7N1ad<E"EY.O6.!#g.*hDU8C)i22&"S$$"Q>!.T.0hdStRBF^fCFWqoW%8lQQdX;%>o#F>_3KTEGM==')GJ3O>EFhO*U6;T*D"=Qo*<_K\iP6>Iod$d8R:2*%H"D*^nf2AtOhGJj>HJFDb&[u4?ejk6!a@=sC%iE/l`TJa0Ek\M7_8&@q_DT*5^WZgA.CdGR;l1UCjYU:UH"FVjhp4_I,M7cSUcrK#)fSBR[8]Fpa2\Q"h$\PPoB:Y7u/"rrl8D4An%7qAphnZ@]P(OGnT9>ID4=$9',54PP$<fn*$;j7iCU'AJ8M`/3oe@oT/%JWkPX2Il5&o+7OO24dSMm-cCN/?''GnQj@DVF#o#ld;E%^fZGkdS_Qk8`6[&?4V*8Pi<nb<"flIeqt`]2bM2>g(-847.@M!#oo.td('eEfuCaj!7;Q08dq+3:SEFU8rpnrD<U.SL=(;U[38b9%Vbodf5PnjmDujY;a=CG&amXISlOO0#N`WV(s-nSinZ(.^"]ueKC1X$XX'2:pnZ(0^nZ(11Wn*3c(p@ZpYA,)]C7Q?JC)sKm*Ns2u%YA0>c`iE:`X'3QE>5Riif(#cknZ(11Wn-^?f(#cknZ(11Wn*B8C-BkY$NO%)A`*(3"nAKT>_.@PW=$'h)23>!GQ`()jiE&j10_,Q%>SU+f@&<%E(9,sVHj8`-/alV(Yc>*RDecd:@HVt]6k8ti&,K1C0S)3p6.7/#83dZP'"?:#VBCedpK*1i+qR8.R`YcoE%ak!.M7K3%71M/-.*1E)e^PN^&4`ot,m&+sc6bE6#fu!$=Chb8Lo!u*&-4d6njq7AJN,]%.M7c[%GrL\1djVF2t3[#&:lfUAL\99LNPsU@O`%I%UK&rt;inuNe/K_G8"Z6m"QY)l@j6O2aC,JLZ81N$/<+\;#lK[2[q>t^oB"4:q@-Y?NW/D^=$/3&E7)2sJu_UKg3B0[FJ%g_F'W'3%8=;M$G<t`Jg)`GR6?%&r9;h-m'.]H(c`LS(n`U=rA2AR[WOLf!o^sice?Pla%j#N&c]epK+A$[hKj`&q6oaBsYdF8<IM1Yq$b"*S%-c%0<YU#u'ZKnXD`+NO5='6qGF>sJ/K*Pom-C]?g2CV:oYNmPZ%aJH7X.P&&R6<HT&pD?[^uI6S=#36OYP%SAS]1aiR#-mW@&kcr%P"Ece7lB@QeG=I?7:o>d4ce=Zp>C39Ju]reYLE?Z9HTkQ+hBe"hf"!DLL@*G4\bW4RO3CQ&+)5EOlD;pNa9_=?$P\H6W&nd+D?Rk%gFCKN#XS3)>i6cqh,Z6$Yl\RImX7urLr-[2TLEsm,p@lcqA<jXX-fs5,\d9$5R7+)lk!JJ:"gNWU?#+nUBOfhk=(ZsW\R/2dKf/q%L:36jnqZiDYK89f]$QTqs1HrY^+"u95)<q$f!_[oIk:-rYMC/Mf]:m'RA<16gRf$6nergZf;MJkNE.c8P=a4%"g<?;fVVt"NGNad%\\==4E45+pLV3oI[uj+K2F*giUg!#8G!n]%8J:hdqLmI2'mjf)Us)'lFkL_3'>5`]Zo'+6aW8Q]9erF_R)7F;X2kDY8fb8`)EEe?%fP/h_SW6/o;j.O9h?BOBpqAC[T91HpmG)@tgk!O.n?C@A#UcI/ehgPC;2!Cl6X*+pq*Y"SdqBJC?"us!J)4rh>OVG=nX=.>etPoc%E)Rp@n@HR9.WLkMP#;(K*RVrDPf-n'52eA%`E[7,8c'=:/n8WpHAsaqCJ9kb5=LVqlnnd^SX#g5d:c*>&RI7&D'_d7&*]9aUK-Z'%W?l-TH*<e:Z;l;jdA3nX:#9ghJ6UQj!Dm%DDS@MT6)@Hac%nha7mZJtC(idp:!D.!K!]a<B:DC>7$FLJ#c/rT#c2XlT/8lS6'RPN%'Xg?TU9,u'r@.:CKre`9X!<kQ5O]TPlhX,K8R'[?8"\('ooCDLac1-`Q`d,pMY((R/[?YoL\7q(C__$UV&Hmo_<WS/:m`SH9d>nN%`PX`'.D&nT-tV"E8OO.s1C\1I8aMM[+r%JC\LK0[o?VamOB@;T$_Pu73ILJ<BjagI7,\A_B7*uh$+jPtn.VtXXJoda^eICa=IdCu%gK)DhF`"53?gG%q]p&tdeDs!!CiH_fBOXQ!(C7Z8E\"-s_[g[(gIltI^me8cPpkLQlbk_j>639-C`r[eV1YMGgLs??QbB?u&U1[B%f;bod`Nk%6J!(u)*_[j4_0j\sbqF0;Bt&<)a`9%E.*@E4V4bf%.BihG+Tn(W\Ct%u(;[d!&E5=T4HZ]/[3VVG3>BrHBSn*E@28+g%ngh/+\`ukOp+LYri.t)(+UM?-`sD$hj*b2->W+2)d,J`[:<2mr\>i5#V=['cMT97gcE\_Nm>1H*Q:Pg,EKT?..J(l4mGukG4FBQS%"YH$tPteC'-=%^Q49US/J064nPE<i:Op\%(ItDB:.`RXUS;d,\d2?0->YQP:q\Qn'K@Y^)Kq:0NkR"fOUTJ>%'^H6SpfZ59TP//Y%<GP0"iFbkAH9rm6Sg*E_cPiqF2o96"R=F(/-f<FYmuEZ:Jej9G^oku4U"mk5Q%11d*\,_jiOn_J<bmu.aWqb#&)&099<D;/<b&Bu%0%j^7R&eIWC&`e:,qaN)B?`8Z6H4.;[JXL7*dRN`6V=US^2!ja=V=[.=VHdd&4rUo8G^92-EHp$.(,kp5OWaFni.X_%g=Q9%=5Xj%0$eU('kN]0r")-.(]Y,6aWqb#&)%oH&c)8hQ@pQ=XH1O9fdc-!1J-<8i3aSi2SSq<RkYBL+D4d-f:q^`WrdRV2m_>5m]>KTXd6m>%m`gPWI1SuEIZ!cShMeOF/up:0rct\aa5MWRME?nV)bTA1Xr)RdJZH.8njEgeD]t-3\B7KCWUrJ<Uq%l6bPPD)ZX2l`9"8([2Bf4U%PGJ-b?Fs";NF/9\=:pcI$k-NDD<k$Vk'0L&+@dG%7*;eWPbhrOZIL^t;IUT>'VY#LV6kZN-i=JK-Wks?<m+>=GTWL3U5c4'%ckqc%`eCY^5:j3Y-D:Vd?>dED'eZ_DCGosC=Z16J:D;bTDI5rf7D&e$D_W]bU8GVg^$TZn__CIF,\V0f+g<,E)0*EbZ8BWiRhD!`a"RV+%9W'0kV;cY=#:"]:OH=!.IC*:BY_oq?/Lg;;HgTn+=>X-@""r'^4qqC+A*O'BL7ujKOU!=CI6DN_q1Qq'P-!(:m>)O%UL6YMFH\mC%^lqdBeRt&PJ&1G3%`<]dSM8NmfQB6e_LUL`Fb$;;Of,'Od1e;p+KhHjP*f-F4/NatlQf&(*m4>hL6SfLXu_cBr<lpnq0h/q9jiA*%iBYhkOKSYr][:j6ZPmE&,#>"bolX(W\>i5#V=[&8U7&6CPU+('19!I3KY%t"D\*^hNfl0t][ql7i*\#\FtjT9YQG3!jk!8S*[PB+%ObG\K.@hg##X`PG>#:p"5r56hI7T#2PA)i.N,0]@7LRYY"clAKVEnK4p1-k_@fPJi$3cf>+1U+XJNQ*h&>j@g`KtPo8s5i(gl?&J%k^S72S*@9/PHe,M-7k4@ErX"j,Rp%WoX'H+d/[PF>JEKjZ7jRHUKuNUPm[Ubg==`%2EhB\>X^!=;#8$]/l_,opO4DS!7mt2O:lG3%gb">l)D+L,2uM_J?/?gl_qL<G+S$c:j*O!95/-bYio>AM,X/s:"6/?f59rG,pI!s#HP-]>1c4VJQi\28&f%m>#p=+a/3Gb#8hlaL%i"<:,0R,)[n9-Pf^KZP8@oI*NGN=O3]_<\a?"gT,4on!^XTZ4`WdlgAS&3o'Z+uT51-r>\E+3@iQ(W:^RGcc#"Kq"">:Fnp,1_]Q%0b"^A7^3PZ@MG<:.Rp\"X3;iS8md0Z,JqAIG,t9BXGTkkip&9jg:uQ'+kE1HA/]&-)9'T(-DT4`k@>8G\JW:T8PJ)*-_o=]SR`GH%ebV\*P>Q/UWjJSG5OZ!FK.3#11sE]B-p-S8"eJGVFTH5%Qd$dYV([D/1&ilaD66TEncdC">^[qjq\Qn?'>'gZ`%pb?g"Nqd2l9Xo%!CqmQ([WFoNneJ)ZEB.?G=&`/h(gHT$o2TKm1,-fc5[AV&<qF4L4IADOW+?JO,%`]TKI6oR>`WC,N3Z*:d`%[IB'44Yml9HJO?*k%;24Y^q^>nDOHa>a-BoB-%k2.GbqUZlTR#I'J/i,k&3[C_+F6R,1LT(;H715e@!Uh31E!UKZ^6:'R.F`i=<oP=o!nC!i8h8p?Jsn_%<G=aadO&Dn\6*(1jLs-a9C;sUNa-CD'U8F%+'5'HfH$#q&@?C-K>>Rg?<RCTVm@BH7S[3B(/u]!&gEB,1^H*1VQJcgA.rr?>*/G0%G\e5\XqWu>O4b*6\3Gd:JE-0u%KVPZN`sV6MT%JAM8sE<.>?1`O6R:B":hjTALN&@Nsli"O%^/Z`I)XsJ=plPZ/i5mWWWMR)(*`U%6#cP&jHEYC4U'`0BM%8u1E!=CZR:<A`a+sdBF0=KLo<$&c+".6ho+&Y8PERJ77-&Ya2jE;VN5^5[L0PjC`ap6rct[b*0,f>#YI3t%6pTZ/5S=*F`res;llA)[-Gq*T,ime#F%:nJ6Kor'%9X<(g.Xu:o^#.OS"D7\k]m`h:!\ckDLSl"FX%\)gF.n-r+%)r*hEU017:=T%Z>:7q=Y2)oc[3o5E83PuJ\'m$'Ms#/69mflOchuc`)UE48u5<Mh45#P'aRAXdq?02=[cS$-;"(N]XA5Qa5-^uXUVn)#d?C^lQG,'%3rD8DhT3ZT2G.FNc0^=!6XE&L.PlKpaFLLP\?)!\q<,G'&@nY$QYCjV@0qeYj#044<?jqAiQPjh8QP(K;"6T$[>]uE>+^V_)':6/%5*Mf@$XOL0gei/^1hXK4M?oC5&\TCH\n?t[i,.Ht#TO"&-JiaKN\P`"'JW9fCMb8]A!idr.O?M7c$N,417t3`B^tR*JWe(F;$9Kd%LStKCS@EA^aXV]F8fj$Y&L_q&onfl/;0([]1J-<8i-!:X2o_(UCI0Gj+F+d`2[7AcMXhT07kTP2UECo5e;S*"KRtbQbd<Y:NGKfA%=prcm"cih=N$FWVa<P^T&FtWS$A=q29S&9qXt#W7.=DLh?6J)R&FrdB;%u><CJG3g.J(l49dm=+3BYc0,#3*a_>]$OCW!gm6/0U`%A<I:r:L`Ag:<lF/d:n"4cg]%+k%ZYCg:uQ'U<(]LPR0fc(3'gWBQWLJo3oSKN;NQ-Wf8"+P/3BU7q1NHF7jTVQ=B,YO2:WM=V<."%qC"`.j,a%He@6R<I1h@aL'UY,cQ2L#bOp9/-U@%>;.MG>6r/Df=!9mE;G*d``&;-tjCg:dNRDm:o36Z3=F7^Iqo=8qa322H'Nf^p%m/+hS[E$J)IhW<=]^1!Xm!HD3HbA]l]^1!Xm!HD3HbA]L5,%MPn+!^PjB7P1I?0_C91e/ThrA;*j(7-.A`)NZhrA;*j(7-.A`)NZ%hu?!c^5m?BN^o.Y[a@ggh)0\lKo=L`XXsVA+/X`:FZceC/8.AV88F;V3el$Qn"D,s$o]mW3D;<XKUQ>L^C8XJX>M'>_u0L5Nmt(^%hc=^;C:p)pg5iUo'./g0P@uBmSZ+5$q]XPE"pR5%-d`Q%a3\Me6q]OEIR/dr*Tjtl]eb_*Q?#mWS*_J)_W_9Ob]fdQc3hiZ<SEk,%E]0=U9M7?>rnNp-Eot]=BaJEd1QRohEot]=BaL]^T0(L7:,jgub9U96R6Pnm-(K,WgmOIKk0KT4$"m2u:QoGuB051b[mQd7463r]%6_CsuR>nqQ6ouj\O>isSp4g(@B@Lg<0D&#!\q>e4:0$.8A:9s,KEtV"7[i=QF6uL+S.1*V\b:K>G*llVR7L8HF`&ST'PEceM6tc-%Ih%V#6s;&RC.Yg,UaaS9f8_],faZ?c8aXo#ImB-F8W]7Z%&XeRc='MT0(Po31rYkI9qnJ-Rf$k4/X>Rt0:@!Z.F'j'NjP%W/9:,K%9C;@!)JMr.ln4S!dj1CAbb$60;GK=7Bj*=::-7NNg7_<k2S""c%+X2FdG>C\7fM0f`JLtOc>(GLXG/p`C<4l*L-Ek.aO@5K@<U3h%Sn;hpficq;p:;<F]c3]Z)lDG`NheaU1[H!ii@XN`X!.ES%02.m$HF"r7[88)o9=Vo^F8#SI&*<t'f@/J+q'VRhg*?G---h<'LW]b%Kf(Yi;PE_K]7Rl?^8o+[!*Ps?ocXLmeOb<i1F]s[8_QCYN[lY=n-A&IYE:/KPm'd"F\gq(Y@5*\(F]*tW>7l9iAB$1<"qaWO>c?E%OVB3$PJS,UpU%MKD^PR5kVLV^WGii_n>9Y7P&.U`<YCb@"<"$Gg)3@(UX(?FSOS%EBf(^8g.[V%0)1s&$T0[8'1G@;<*>e,o'<SD%aW&WN8U42f7nIG7V/LiMd*PgV7/i93l*O%)PJT+QOu!'Mf54\DjLoGpU7u=:gG\WAD<mu[.9LMPng*-C1J+Fk#OP,d<91a$8U6KK%-bLe,R&eCUC&`e:/tB!&L'6Qpd\NudIhM_paMV=CDU)0[i]F?4<_FWon="').nO3":nR@uX^Wo`-"[(0'<0HI]BN6%4\?s3:i9<9%g-c@TgM5.XX-%f=2'n0Me0S#<%._Y[oLnKQQ:4ZJhB7eP.[-lGOD9l4rMoaj.b\mQZ!U'HMXZ^ABI6;[02S;5[7mTpRn;Ru\7&Ru%[^VKEd6OmlQIspCM*DI$5EYURpBm&+As07D[m)$Lj>BORIn64$R]Ku$5*Mf@$XQn[cr!k*<.Ome)KaIU%m!rhWIg/1duoM2]Oi)8%>3MW3oLZ6g%Q`5]EW:ar*OVhL_PAO-I$(!>'<7Y)Uc]G=Ff7pT;o&5j*cfS3<@4\CqOh-5[7r9Z"YQ$mW;tM)'PQ*>PuQZcb=PUo%TD,o0<D2Ou-$JAm>=7%/mZ^s%77J+HOpYH3ihHW2Kq0P/4)MJu9'MO78#)HNc3.kMK$OU=ZUI%o*%[2N[#J10Vr_d6aS:M!&W9mo%-E0o>TH,=jd8lDurfB>&1g.e((Ks`!TD.'][nT^G?8IRWXgpnN>%*O`G\od8V;NgY8VPRtm?#=oUEoOOogu?&Y*"TH9dWI/(VDXC%(dumZP3/fD)fKL#4&C4U+]"mn/'8(6%cXLr,c2:2%V_Ut't@'Q<3W7rO:pt^$p0Q//14#WJ)9LSb(kB-?",r1%/A,:(j=QI:mDdq%!-:f5W($t9gDcFfgpiUg\3itXI8cAi5JjOY@0\NoZ@+67DgP]%,;/PABP\:r>t:lk(E8&sh2p1hpeu,h=qXcd6_]^2,`0/VIF;1a%-/%KtW?l-TH*<cdhO:JpX@GW]%Op0=(TaOoCsQ+LMMnf(A`)N"1ma,*-Bhu)5%nRg1b]r_C*X)m'iTNO$$V;bZQiP@8^dSAYBd<H%p:B=HJo'Q.CbK/^2G.#+/Otr(d?;G^UYJW*,D*%,o22VcH>Q&iG4<)mOu!'Mf1!`t14!5^.]-lpb@*oJU?8\4XLB0m7'8;/<%<=C%%Vb:;jfh,:'4-l&bgg9f["#o-bE7?-UXtf1)1<H@%:MaAQiN5,/<R5&@J_+`N_$L)Wrr`diH?t&d8[o8P$gsTocYX:X:TOdP?!3T%n,*eT\aZV:6EZDa:jCXrj($_="YRuVYp*c:A%48[+KdJ`<%<=C:1PXJ#fMlmEMh6@P]3s<fKibJ-;"(N]WO4J+Km:*.AEp[_[c7X%+:if.]<$[i"1_fV;(@DOlo!23<g(E#(_.t8CUAu0.P3+@c[5'?F'qfJYF4N3YO&p(1$kh@QgG^PM%m2._Q\[&CaR7RIJX\0#+J_@%Y>LJ?jtb>>P]4*@fKibj-;"(N]T,(hq!k^A3q"rRm%Cg^YWe@bf7D+g-1XG2=Aek\AXLSBUBE<JUh3:N+C,B?U7esHg5ls8<@l?@%Xu[5l]aI#^D,&jJf)&,t^WU+@2+Augi3L!R/5j:Y)C#sUW\R/2dKf0X=u,7kE06q?doUKMZ3n/'K!ldNo?Vb82`g>!+'&bQ"._lb%5"6r;i3L"C/5j9@Js4-(M\h;F,e5?R[UYb[qF0"eZQtb!1TZY=,-EtjV#:[-a)qZ<GLpDW<Bl&c__sC!"$*ts$c-@l!gdabjG=ST%^;3OdLo\fHeOn`uKV8/.C>dsA,[]E"kX.tP>JVfK@W,(@k+DC:Q<1n!&\i(Xea[.FKj&Am#[\,pk<]MX@:EKX>X^!=;#6h*dE;5A%Z6YXu1Yf.q^!e0,P=a4%"g9-f!qj)`DDA8QUQ&WZ7JeJn@CVba.*`*'o-Ln]/Vki5[j.?$K+1I'1OURW,GU?Wm7'C0GMZt7>h->*%%a&ium,PiqVY.0i>2r?E9EV\n7GnMqGJJhF0Kq,b&mQcIA<]8k8$j3.IK2!b"H+!mI7OZ'.p0bqD'hjO(VDB<#S,ChAJ'6-VRadV%DM%OF(4\GPcXgN>=5\oLfM&4QEJ<=cZm;M*gl?&#ZDf>3,"X]AB;lnUKj8FS9$7&>RhnLE`"u`]iE7t]=!e1<I4PBEb]<gA*dJr@%h]q"W[1Z^kP@TnABLamdRG:OE8N,%1\K+gA>\tfZq`"G?Vn@URf)EdkWad+CoHQ]sHTrWp^\7gspNo+MFMIQ;6MGgk,]pfqT*!j;%8XQ*#*spa.\;$](KQJ'BBAeQ=HfU@:I?;A]#(@E#-TI9^qc<"r^^ig,`)UMCR=F(/L?Sl3/"h6t'm&TdT8)N\A:5abe\G`P8QP(K%TR67@iZ,PX-bO'TT"+VjP4gPR/N+S7\>pD"Op$l(TmHpJ(qO@iMkPLY@d"jZ0nnR=L@,YL@d(PVq?5TmcolAKR3_0,n6/*3jL*X+%,ha`@qrj)km`BbUh++UtP>iuZ$G$bV9'BUG'4+>q5'gLJ8XY(bCC+l'2HGZO8HPV4T_e^U8a%4h.LFo9/dCT<OG*&,SV6D5TI$:Y%V,'?d!kOFdFXBY+(OQuPIF1KU$P"UPMM%W".W>^X5#N$WT"(do;Pj"3col2E!Oab*he@L08YCFk@d"jZAc?tY,tsA5$.BG;@H\ck%&r,f\/eQGnE>=n;6Kq.9HUKk2]'m!i!LGK^:L$U@8c'=:2B3QU7J,;Qk1b$L[=mtK^a5ZN84fJ$ii9C3VAO1ui-aSA8I=3s=s$WT%kT78[:`grorct[l<ZfeKiF`nrJHEED3P5@J;j'pApV^HMHc*-6F<@rgBI.cX$eb;"JaSAgQ0hd)HS:*;gEo$HVYL=dC'i_JJP/9&%Oci!(`78Nm'$R7s%B$O,!B6RCqd/SU8cmfn(L)o_1B5#=$uHXt+D<Kd0;/30kSMT/_#XVK-SCTS1.n0lmP0PO,Sc`]K%lDf`78I_%["%smTdPO)Xu.j(Ua*[6D-@8%2h=UepQ:V(pVbTq8PHDE:?5He&me.q<+Ph4C<'?uQeVU"8BUl%?8Js*#Ak?M2:H:WibAeU2h=Ue%pQ:V(pV^'DP"MQH6MD%]2"60#;N^2o\6[:5Kgi-sPGJ-b?<`F3qA=$'c(C<O$L#219EMedPQ\RY1]c)r6%WRVSH/G%!SKZ&<+Ph4%Cr]!WP?!3Tn,*Kl$uK(1,%b"!'>"\/[kScDd!\P9>DDR&X3;iS8tUe)TpPG/?']"VI>6L=<Q*F!P-f`9EUc#B%o!kR-5p^Yj__DQ%Ss\[Rd!_]8colD(:lgd,;K4c!n/!D'b*#GqcVQ^3MRY,f.J(l4c-UVCBL.hKpJ!mj"E`N)/cjcu8cmf^Qd$dYV([Df@1fU8]&LAZ%elQn(NcQn:X3W&*s+8i*DY'#bVR9iq/"ldL#YmYZ4\e?^\jn(Oj\ZRf)J[:!.a2m8ONk.8en03*\&_Q^K!]a<B7dQrS4j2l(T%0@%P4qE'@ON6G'"V_Y.[*g\I0k"&LFIb(mOPE#-SGP47kV4i-"[($Y8Q'^WF19j!#T+36&5]]_*>&PdZG`IHf?5GSg6$ahbuV6[90Y0%W)uPTpPg_G8E2&U:!9@D>2Pp)kt=\^#[.rip&_h/".+Q+CRf\Ykao<L9N&"b8a%32_8F2t5khtCLQhqQ7kRqd&0tidH*8Mf+6,+B%CI9p)5k6OH#q3L)GXhc%`)U?2$DfD,mVRcWKVUBP=)pC.MR]*KP4gPRD&<r,iY87i=Aj`!Go`qN(eV!2<eLKtii9C/VNfkrBI6cE%d)N8ns&PkT-k+of'AJLu1@Mm%"Do*HD$aC9,;D`,i]N*lF@3Ad#2GWiA<Mo"-_Yl#k=@/'kdA.!kB:MRF1%D]m9f?$Tku_sUOiZD%=Y;K9+?>\k&<ndS#RGB^Y!u&nMW&_L1OUf1+A&HZqN)npHf?6m8Q+]CpKGH+fU!2p(9n)gOPIkFLnSpd8EcYU9I@k0I0k#Q`#a`.%qc`;9\aO(mT"*KJP4n?dVc3PM8Gm]ErJuNJNu-4D3(Wsl&cM`E,_!C^I_:Jc]SM$LLjm!mI_:Jc]SKm7N>L!'(XXW,`f''$Ms/3>%kgTDf?:7"a7%\cg?:7"a6pE\<6pG!G5<3%<5@-`B?:7"a6pG!G5@-bXIpipP_s`B[6&0&<(:*=dmhX*NU&bR^/qA#@+p$&T('pcr%)23=H5cMsNKW+(\'=)Y*[%pqE;+Pr/m7T&kDh[@_0l*'.+?1l2ln.(k2D!NL!qF&bh+A_80Fpj]&fr5.&"JfEfY[jOJ`Fuf>teXt%>1q+&iphi.jC&,]ZtNpULC(oZAeh:P9OOGufusTY0h%pt()5n_P7a!_,Ue8F;9fITF$Y7.e]8H@eLBM^Kt6,,g#Q0?MW!d-O%`ub%Wn,`WKt1rnX_3OLC=Og\.*Mj^@Od9bJud))\t#h'[.R+$/sq!^pPUK@k%aN%@Z(*C^Ye/Jbsg.,*o8Eo93rnQQ+G\f5(a[j<5^n:%nsQ_tmr6EO[);'J,th<OG!I?Hb#;l?TJAH7Ba9O5`TjG"5Y/!@D8K\GKNd%@#UrQ9g>RNSNlmu(92EV,Or!hG<:]ec+dLC_;O/ZY%dArTV&/$$_8d>#?Z,9P?%f\V-h^TXtORSKgA8o<3X/5AE&/%&)O\&YiD27G^;EFq'iN\*b'F6.K9f;b(M(O8TV(>?DWD=B-oP.s%%*J'=CW&n?dg5`1-Y.(EZYBBK*%N*)0MuT>geB6B.8F3:eKV;$b2#<e&q)rYtm]:5J8"1i6BMod9ml%Pb)l^"[6&t8:Qe$$ko?4cG%qDro@7<hJ[TAR>/pu1V\abB6Mote6Z+5Xa/0DF3)JP1>s5CWTM,[?o07A@M&o^,%&3AWbmpsF'aQFXep$`hQL=EB5&qX;QF]dD@_%iu0n-[#[48j!/+\!+=ds7(.`Fp*nE.=C=T0)#V^!:9^5M0E[hoRRePf)-[XQ9%.T<aW_j3.<L68TEC0=L.Y+;;B=NK/q@hnCIfSc%+C/*7Cj?s;co"qbgm*JbdLn%/"'QfJ%3lJ4En!CXOV-e\Td6F_Gh6=lVY_rm@u;tBFAJNG09Ln"KC#=@%Y/n(),*?rQpM:W'QaoZ%Y_QluEn$M9>3Q&0AZ-8i,`8h0[=09)oDldLndu@#/Z"MN-DO?.5T?GjI3^+b5^LLAZ35S4>))Ugqrm+,D$Q\nHf:I.oq=.ggcJk$%P7ThM[L2PpB/6SXQ:M#YN8lN(Y!NLGPW!2E2"q<f8]E"`!_bgYLQq`D2N#&69To*%p^EQOm5*/B</@@')&R"FEk-b^@4@UZ-&)`m%1"4KEPXDU81?ibbM#B27:?Iu=f1@p/J%+*<VQlhc8c5]P6hh%7_o,oW`>GEZ=qQblNH3ZY<$qN3MjUKgjClkk^J9+DhfIa0dFcgO%p72ln!gTs;B+g!U4LM@d_UU&#9ONpLL6duFnqPXcQdI5T\^Zctn%?tAIbX`IO*qaAYb,o9<HU`YPGp(n^qL-cR]]9!@58]IdBc%\%.+lk-Ph6Y3*pTfI''*^^)6M<h5*dZr+G-gMM%j2_SONrdQUV=$@V6m9#j<<AcnZ4GD+>W5S4Oq/ZBBScZUhn=D;&M[AI=jV%]ncS%`^Rh.JXibFKa8En16YN]>+c1!aLru)]gFC4*h%Wg>pc7D>/3@86JM4^5GAGLC+EbeW^%&9coRGgnBeUI##il9VP&>_"[,+6lloVb%**16ZrcfNU>jERCi?M9SI=3V06)_!r*98?7?n4E,W81E.CnbQl6;Y`nPS-,%4ldhjJfK1cUK;cM]lg`>+[cK>pjo6O::t6iDkS,A%_cQ!2%+J7F(`%CSZ_6ZU6`&jqMTo*5;bCpt1cJ3aW/`1?c<7,1UkH>oXCA>)9?R2(?C*ebX6t&n4g6/EYV)_h]r`GeVur67-&a2E%YFYg8f.g_W-C`,^8fKUn4KoXkC6B\FLJr%\$+DC;%)gY.EjTc$j*G,1pjSFI6mG?1?Vsm]2^S##Qefog9$(Xj/VtqC1XjEGPf3Qo%53Xn-`E[O48c'=:/pM1kYiYJ-U]D#,hk0-fEbGN@0eMra$<UYFj?QsM-E0o>TO#OSHYq\&A4]4eYMaS7'lpS@-n4c6HYj[F;^/V)%iL=Et]OpXZ6=FWt^Zd(a).SdV;SWVqE47[_.PaSLd^MFaBTQkZ09IOqRD+:-O]B?MA<O<L_.sj%fbiG)f0hu1TeNmXKKDVX/F53h%Fo?PT9Q_\[<na2adEkc(<+O_8AMT*)2Hil<S+kQ,Vg&2)At#q\6lG'E72Fj%)']T".Pa#<dK[sP7NS=t,1BT6)\l$jVC%M%I1%*_%"(O"dK$DsZ,cr-;<S`!pgGXN,Su_=B,nfo!qK>[m7e/B.$kk0L,*Em1@;=(c$E^;C7`(Zd'.-40\RXR#P>76,;u8bJ8a[?0Y+p].%TFcT0JHopA"%OUrZV-6BON2#`7VQn&L]iPjVh(ZY>#R_Ha;X,R[1r"lG8/DZ3+Vl50b^(mU9S*6AZC853=[H3%G1R)r<_,,W@7Rg%UY7MtM@G@AZS1'-Z36A+0VJMOi!F4.Cp/3d[lR,%\acBaD_%#VcVV-\%.(4tj_+`l8"$)BE4/qD3$D(sV3FT9CK,=Tb!;$1;N01;%W"E0b4Iqe4II`D%c3"hf&)[SSS4NC6J;H")fEE=@705t)lqbDB3FiXF$!)a*;OC9ZUR"i;Q*nj^9.@9G&f\)5aCCL"bU7?D[emFK%kV[,@9CeJRM]h:'9WWR?U@a!Aas7$Y,WM9!38Bd^VpnU:V9(S=P.UB>#\5)Z/$dZZN'X%1$.0f>2_,kU>KjQ1WV9O.-lVd=2!j?)%/5R-s,Ie]!(el)BHmD#&V%ge]>ADW,%-#_\,Qnc=Ukl?<A.8!-8kS4X\EQC_D&:@KXTsW<!m>gn\)FE.1Pf/L%P1FHl5AUMI41uW%b#5NI-,ZT`>a%^0]?n-lK1%s6^=7bLrG;jq&503;oNKErR+@bP0:+s(OOB8.FUKMB71mKWcTo79k$m78>JX3]W=8XZ@M>KcdC(HT%DiokbQ+/-s&8%o+N(Rm=#1IDUhHdnMW:9a9O^PFk"6FJ"TJ5:IX=OFE\j_WME;%k8(:ntWWO.m^Bl]2hj;nb@LI_cRO%M5P_)4Pp%OMib>.@EuiBFTkE4fW?Qcsm])5N7CtB2<5LRD5j*%j9&HUV[;:G2H_*=sd7_P/7?SNJI]NbM)FY'W&=]BW;@FrpBo)Lo8g%ZqoQ+%+q11\PS8b%KLoGd!h;E&+9kg"o0=%hk<K)bB+P8gk,G_P8nimrdR^Co&E#E6.<VID+i3',?k&:OhC']A.I7f.!P#/26=u('f-)M@%eH*Le8go.32^r'N6fJ<-(B=KSbCs\:8Em?"/,k8.jZ`rcDA)1\ZBOiu\P]Ju<;Nh?QW-hE/6q3jULP@UoH+Gln,;DNbBlGRYe9]4%!6]^%6q/7EX;pUP>WI*qW&"0>Qu_791)WNT7fgc[7fnqP<"Jjs?uk=A1)Z)"ZR8%Knkm3DA05E;5qo(TkTXHVOeL>=R"?AO!'+.O%!-4]H@0[1_"FL0-QCrWqr\;'Cr^kb0X:)OX1nRTSnddJ8aC$b0-IJOfj6.Qd`dOk@r$/F*1:3I&<b^6NTJ60h?t-Dok#EWO8glEF%VM#OON^h3"$A#&U+==l[!lTMeLKu0E3;Q`l)9STM=F:"=%1M\O^bC@<6p`.j6Gij&&`>?06kUQ$9T>2[!+K]^&90st,Xe0f&oa(g%M$&qAMLuo9QZlKIX6;.aa@lerUBL]O-Gp]TN_F"2Vc;@aBH/%)crauq%L_2S13K!)m9B'^J?=5;l8b54%I+GO\.V"!>R>rI.1/BO%>RV1=,RGYn4/09hY_='uKTVN`UaRWOE`jtCo5?iGe"G2<Jl,3/#`/RnKUEZTAh]*.A`C"`,cgP`^bS5I/?-__0c7l1&QbSrdf'ER%$%QTKJnYKC0YiVI"9Zl,;D>nF>RVXJ,c37h_)-f]=Ak:GA"8.Q,-FO2b5Cj;1C2/h"k+$]+FlI]&-?5dTRm2V@^;CAX0a/Q1L^b<%W5u>#=@"8G;kM1Z^'0R5#)_Hj?-m'W<WL>u_^b_!8coHO)7^SF7S-:Ir2cR1,d*5.B)5-N7og4'SOq9/"g8:D*b(.(d$g%>'2WSj%h?gua;LAN]-E\h^<%35%^hcB@9LpWhI3l?IX,ouka[&hehgSf98*SQu$I>/TYUHt8&n(,0QN2CX,lsBiX2lP$8m_WR=73o?'4ONk%dq?33=[cRi-;"(N]Jb]_PLi2i>7&PCG8Tm^V[4.dVE0o>.r>U.N0]VLRqZB!aX$H0BK;K!hI?aufjglc91*5Vc4K%e4@WSCR#4R4%TsQ*G1O4q2Co5J")\l$jVC%M%I1%*_N"ed48'iG<,7rZ:h_=Ci&._.GaO;Ol9H`PQ8HGAj+]^*;LdtP\Bu8jP-?fifALQ.&WD-_I%n8^Idb.88UEZ]NCoSit[0-cP*;N0$LiT8d]k.X?O@^ROUNQ<%!BseZBPBXB-csd;7G7%Xd.h`6e%6k$/*3V<$4VM!.0@q+KY#9MT%ddV:B_TT?AQ_T9uJL.o]aSO^OQis?jh(lVO-]%g6J\FYdn1sNu>"YbN8U)*g`O`=<iT3[G6@slWOf-Z+ZqoOUb=HWS>pGNY`Wd)D%hTjqJcU4?Y&d5k+,_D%R$=h0u2'Pp;9$J2ZY*C=dO^iVRH*!0lq#l^5(u&Q:#Edqs.>!BWd=i)8GR3t2Jq02EVpnU:V+JPID(*qB%I(<+C\?pqZA`W*_'^_*.']I^$+EGLJ)_a3?R&e$?#]k^H(aI7e7.;p'@=k1B*@')8F!HLO;jrdj+_Kf7Pa'B>E0Ob`$E*ScBu5On%+m(\e&B*A`N0ti$A?ea]9sl[n%,D-#Lb-Ck/V]^U+ir(^)84V,a+,q8"m,o?8--61Bc;OVQ[sc#k4i.)b`NV0@h_4JEfVdtjBUGC%!6e03KRQRE)-JF8UXE?>"MifG<#ZM)O<nC%f;H(pnr<Gu#)0tf9"1u:%2)^E6@Ok>fMmK_%EJTH?jgIkjTE"]d&V^T\3@uBOrI`M%\m[SOFFf34?6fe9)+arGUD,')fSE,Mh=,rU7Ob1b<0AT6#'jr87Jl-d7Hh.Tc]:ZsgL2qLN8GCZ]HquUKEDl`V1_f?NrYBeq":j&%UD;0(aMpU\>8sDL*pna-A3:uM?,tD1&l+1HoT14=7+YIj"X.7N/KeV6.?oc8e\\OGm(mN:dm7*H9=<\r#q[ApULZ2bbA#6+qN$>h%a(ph;=$t!f[E+Ql[E.C9aCXZ*GV/K2/b4-<noubWGV/K2/b4-<noubWGV/K2/b4-<noubWGV/K2/b4-<ZGiHr[E.C9aQ'\LYs)U/%(4!P.H+Xo<]G>e*(4!P.H1KV.f)QFf(XQ7*@pL9)Y#?YSSQFjtjA?WNTgND8@?g5O@5H+U/M'so'G@#gr%^Z`h@@l:&\OC76_9JB%Vj,a%L4s\(QpP%h!Jb&U/jU(Si(V9^']q.cd\:$!_H`1`82W.kE&Gda6")BMC?q93\2pFZ>te\0b%`#d,.Mr94]@`k*t=<N0nm0n%&?"l(MVr6WO%`t7IkfnkMW!d,oh8dH5<DI'@L@2PP1rA?;Zp0sX_.u\\\VHP0.;FQ<U[Vo0UK&e7mR_l]s:s@Qj`JeW@Xo#QTmMU%Z&:'Ok%aOZ@#F:U7d5lK:(HQ<+4aZC]3_<bQ+l*_DaH!sb)P<da4pqI4QhIdTe.[KM79-c8U/aEi2UgGnZWtKe.+;G*d>LqI,5<:%jU]!9/65EC[68p"NSs)d4`orunUtCjpo25RDo`PPpdVL?9G8Iq,FFp);m0O?55g5Hr:)_i'$n=$Hf>&cJtpIFi=S&$WQd<r6ZAD=%Sq82iQeHLE#D_]'#N5rc3jT'P_@]IID@[eC_d%R-No738+.\2)2W93HJuKW^Y>8;IFWD"3@2;$A7r[_U;,s#Ira6_^d:sPIVQ%m!%`PZ\_M,))'4LOmQcc9I@quJg0V,L9\lq'$$Scg*t,IhQ=Qi/X!Ju)>QhuPdS3mLTLbu&$I1<F$m86S!/Vf%tq6C%d$U;ClbUn9tB%gt9Z+JKlA^[Xs>QD]<,%Y@TC6,//XA;.5b'E+@IOa>-tO*-EU'<dM3fFg:rn+,M3.Mb2I_6&Q`HUP1^qBpb[<A5nC,BL<K@O/,/S%8.YMeQCs:mQD+6H5(_Qr<d=t.Yci[gGOiNn#PmT?.k[$9cp<R<&iKP"JjM(Z+m:(a@1U`qjCg:\NDd+MD6nXp9+Qk'bU^>VkQ$._%JHJ%<.(eJ"%i`l!.>')5,#ciPOqKo#4mXCsJj())6i#bjFE1k$Pfh/P/Q@FT3AH^9F,[Q7S4\c$7I.rKe+qU\\-agd:thQ[d:,ri%$c9b8<la<5C_UqJR3_0*nCbA0[PmfHBP_Do\T%6H!pRM;5.`3c/JGOh;1b1N4u3X",sgT$WKTN@;=&A'-"YqYT:Pn[:#9HYi-X[h%16r<VSN,]GG8ZQs-!-U>a:Tm>-IDp4Lk>(=8Vq@8l(N<h/4#:SPL1jCgYOu`-Y4*V+KPsMenG*`hqkj8BTa@erIY"ZrNZD08A1:t%\k#U2X8rS4Yb=jEoL:BX#;cI&f@Zp:o%uMRj)Q=gLY<Vd$u;d,J`+i<P:%QS^8f>UPF(-3A:bRf*qc+D3VQ;3XC-REB7OT+&sBlH%5]N6G(70Zj>fS7pMjAOriE-SpeGAKPEjm65RbL\fFbN'/)C$mRH&=t+%']k6717U)<hX*!N-!B+6_&?F]?i84iprR"#29nS#+7["%]8f1kNhG?mXDO!e:ksp/Yf2WRAYP+r3sMB"Wc@8!;4dhnG(.qR-<o/aqTS"5<;^G$Q(pY_OU8h';[Lb*@VBaP64%:(39-r5&tSn%%%WSKDr]onbb.0`uaV;YsR`Q24-%KZS5VtP;dHjfq%j2Boe0kp/)&3Wg>^A[k?I3+9b)auUIbeDnF%=PO`o1Kt5d#Ms@?j9\KQu"L%TPl_Xq*@SB![8]*$R.+*Y!jeja&T_X*AVrd@5?t^jJ;s)#:m]F\']8b#/+P3QT6-h<!$O(fc2>KhOp\)iXcWqkE$E\D,H2`ERk#C%OQ>E/WXX$[VF-rB;U;$V<))6ASr.127B)#deBTbmeWd-VMs%+KXAJR*Q'V89eH\h2OC*MhPiXT%hMUmPZ(Ze,505/IJ]mmgRB5[:%294FS-j7K>X`Bf1D?V=l!=SG%:6m10;Hnf`F^4NMO*L12!Qk*i8kSph1.I5:<AVV6Ol_#C^4VP_e>[L?C8I#Nrc0buN4#@E-);g0%=`n1ZUY)."EZE,!/MKi(@8Nnu:mC#*9c+QoXDLhg69K!qR$F0q-oAqb2-X,$g)$Sf+'21C3qPRg#Eq/A`dpun[>c6B$l-rrR-H.t%112WAj/(X'-WZ-t5RQ3_-DSDId^I*#;.V@1AKc+p>3[&,GPte-F+I@$biO.WF4F8NY3Khu6A:X>TbP@@1W-<XCnj=,[*9[CaiRZ*%+r%*<R^:6e[?@l@6FB4jX18#IlDeDJR-a6>/nQ9o6,ruTCQN-7R4ZG4r)&W1XP=e;@U5b]HFWE04<i9`16ck@P[p$>@-).\LhoU1%H%OHd0ihJB;M[j1P5@"&_`=:9[`$qIcE]4VYpdTf\8%HS1,&Rf0GuB2H!SJc$-@.t>W:csQojk3pH<e&3MI.JL3A<nLcMAtQZtFZ%c=LRg&s\dZ7b-Tg^I"t*k&QadLt0t=j/SujFIH<W;9C'=l]]5fC/`8J]^1]FA7_i`;2Y$de`Gn-r'QbB^];J3?BeIY&eQ<\IH@a@%`KgVLq<Ac5nt^X9*<UJl;FhSnE\\r\ZGjUa6:NFj-e:/4mGb+)B:"u[%Ztn+.&/MVPT;q+42:u)3%F+6P>RTA(54M4TdGN8g.s'4%_g)h_L\Fsj9"5Xj.n"['WEk[FG,Yr"'p0m`I`guN8NA0[fZHh"k:\t&A'p_fZ]ZJ6o#P7F/eXDMF)LMQ(Z)G!X%&q^5-C>$K?t.@%^N8[Y(g)nB?_Sm$9iq>=UdI/eIT`X7HHn@PlCq6F][nNdD=Rcc-+b3LT"A_g.pOr9<*JQ+<Mq0>kNgX*h@-1,P[g,iS-hLD.ufE/%<_cdX8_6naBcC=^ON?LRKbUe2]c"&,f4n6X@;J`e%&%?tP@M!h-s"AGdtEg3rb:Gh$kkBAbLP4.UA%NjR-DK@%OL>([I%H6M%T$I%:o>_k7$6l"X%u0mF,n-;k$p3q&;'"X$DEb_haTCe#V2BmrW&8)au#@,R.*Bg14NrhMGf=[NS"li*HA/4$>gq)2,c&uo#\b%FK$75%_g4@7$ESYQMUc^kM8/#s&BChBc%bWV*o$;G&YCm7Slgi(75.5nf3t[c[-`ZZ[@lTBMKXa%_@\Uj#YJffQaE=,8hcUB.'<14;D5Wk%BR&2hSiR.Y?SjjHT@rh!eUn48h!bG4?H6a!d2d>1D,K"R4C/4^L0jL"(JV)g&pYd[VF(.<)$Aim`E@c"01rL`%rWp2#OqKh@i3Yc%M7^oXq>U-K%J\hA0Ac_X]E/'0iOs-2dC\;%T@i%!JXPCrUKQKkfG9H`MA(AUWR6+^CQ;m^_XeP_^1cjVcGP"`<hj`J/O-MP`S!,T%gUuERg.>p4]$3J5EIuMR^9-9aa19tANf//;;Ib_*Tq5-A([l9,^0H0bnHSpYa6[_;s4LgiqFqIo?qh]Op1V._bro6TfP2LSTA/'[%VjmRshWYO??lr-]\$/J$>3gMU"6JJUlUujr0%5)]*Ue;YlH],>;N<f]FuS:TQ?o+r4i_S\WV=/]F@MfW`d5iM\:3E;VI#m=_>.Sm%pVG+dKG,sbhAM$[(N.J+1TM%(G_kKE6gog=X%&eZ\kt7g@p<SVElH)a+O1^g'h"QBDX36@=56nh;(<aGjGM.G+AQWTib`@Qi[_C?%Y!jeja&Ta*&(O2QVY1g2EOEmcoQ<%"i/0#mI^^d-JW])#EONWTZn:fUU`h6u[7)Oqa&R'QDQAd"0_Gb1MQ<'D<ud5&>]F9(7B)#d%P:Ne"!L1#=*ZPDqV(D(dZdMb/W7j>kZBg'ZA/PHYij)C3F2_uR"6YOl$\#PlH(S?r!L'nsS5NPM-,e9.N78W:=<6!%$XB!6"sf*Y%3tkfK@tmp!CGn79gIO3ee2`h=`FZSk-^/&AN)l7+P+2j(3jGhbXEVHk1:>"0Sd4Z\B3CDR\^\'*]CW=f[4P!TLc;m(Q"NHGV7aai%BP1HcCL<<8IBPD#ceNC91(?oo&bs]K%2^]T^(eK.2HG`.5iAjH;elM.AVgYQ"^*8^RB+b6hl%I-EW8I5ZR8Mk>1,?1ps0arS4>aA%mJUuIUdZJ%@4!Y?^?jAFLI__KMDh_%KQ/OU7gS^*L:=;6!D$8DE0dg]_?"#t(@#l$[?:0UA&++*$Lo;Z:8Pm*[T&%*7nK#PaMb)J%WGmY(h%.;0k?-"O<qE^R$&5f2h>dd27A1Ei:&]@sFo@m2?"5i_-NDh&a.a9KH^4E>iX`(a#XhBNo9mQ%1b[R16M%73!Cp?OJ>c?/%ST)"Di-O!8N]Df4]S04W7]>KMAi@hRfG7n8(b_N`>?R:pJbb7I=C>!YQ(q.cd3c&$<`*jCGE(Q8+i&BZ`]=p4=<6"pShSqsL!7t%%CY<N"oq.d6C*keXe0F1EYmk?qq;GdqRb-@^/GG;/YM2Soket&%Z1*N%lUVp`TA<$3ceRq>4Z<)kg%ojRGT3V53[I1`>jkTPJ*)(G%0q.F9Re(BlCXJ!HEQ.'^4!3*/F`65fX2>>>g\JYII[^jq7O921qml4;f`sG0qhjqAkQu=FNE)b%;W"N+MBM>km>0^TfhTPths/P(%rJ$48pY/em;5terjF5:L(/?;1nIjPY<m'u>2_-KQNN1qJ?g7bUn!e7!n@g]*Yi^=G\TOA0blmK]S!iW\"OGh]>kYi).>n%Mo"0V'%(5WgD4Ii`PCDG"J$J6f:)7,b(Rf]*nI!IEPg.6A6W?L!VH8iC^Qr$q['f=C(P_?,<B;o`ID#SB?D]+r9EQr2mHDQuNST$`[CCSk'%-uC-!pV2pcEM6?tGj$_(.q@t);QPq[<e"3flZ%_3\-&@k(Z^,`XXj+\Y?"+#)@ib#`Xl:!a/PjG8(R*JR1.$q.N5R`=./Dk'B.7_%WtuW(pmhl.EnQlBVS*Ash/9I*7;3/"]\?/u*uaO"$DhTr\"T@(AZU;WMY6pjHea#E#5132qb&WImg7dqpB9o2!r($\i4^RXs/Z[t%HNNq)Jc#99T"mK<h%R<e$/G7XmX#$04b<M+oq&sI:Z+G"UN]Ml^*dmW'=dcsf6[Sn4b<L%^jT#:^*dmW'=dK;h"Ls>HNNr^:>l,9%STr4)Y2b_Fm7U@\OI=o3n>88d5ug+e:/DPd<(NiM!<(DJ4<MXZdJ?*rKhQrPpZ!a:1t$es^oVSiIQrnID`j;G(2rAE!''U_3,o@G%*8PSj3*4>(m/9C[I6Ijce,T$,@N")`LRhl4*(sQodX'=r^iAGi\`I<$3*-Q3).4G1qFrsPE1D@%)#uWFS1al&'@%BoE,q@f#2hIB%j=KJP7_2:V$NN0b7;B!K!67)DB/s>Z7QArKQLdQBSk\AU!'#<7kJ@4<Nd/9uom@eMHl_PKUA*^4p_`LWS9RfTjdc#pqIAqB&&.IU%Iou]oFg$Rs:4sPb]'EWf$+?0134tLd.(YV&je8_m(^5h8R#5dV"&<,GaX0'A*%ul:>Ncn-46Td)@fm__8l01E&+#kic8k&rHflf0%\'D8M,<P(%#.AL]#URL;D0%tqQP`g!).:c1j,>R2N$(4E=<=bV%fTdE%,EN@P[fQ4a$Y,].5^WOs%5F-j+hDQd4RFV:S:jO]$,^Q%d)6l-jifi@AmSX".Q$6G2TuK?rBkS.jgZ]qn]$?rRA\EUX%RmK:&3=LM6#")GHGkg&&b:T`Bd:nRFdbbU<o-34.#jZRe6=H]^6e%%De!RR^agKd+8`dj<G9NNn"tTs#5`Caf8nDWbBDaAQQQ(0?)%qoLW:CA.;JGVCc9u^[C@A<)g/Qf)sdd^%+5o6[Q,,2g>"BMg0`?'%Asi?WQ3,R9q8"tAZq$ZM`d0Ra/FBN[[>%hQaUbp*p%)&kl5cK6D:m*@m84/q.L)cLRZ^Z\nU/U'&&/u>kGYc;2l\5'bEdY:We%]c%CTCAs'c*0J?e!pf<a(_cLe$hF9JEGLPu+m.F&cFF?lb/'XH0FU"(n?B5H%%,Fi/5jrOCXu*)>HPrQq'#g4R\Uc`pfK!,7`GA!L^Y%?Z,F%F@Nf$ket&%Z,\\ML9!J7;)XU"fkU,D1d=r01,!OLc624;.#2ck/GmgQUZ18;lqGf3`Kh0>k9:V@j-j[LHC=PE2&k[UQ&Y15%S4u#BH)J?fZb+$;D*B?K6.*J)=&VFK)UDKe=b0SIdS_1UPO&M%B[s_!#JtLEaDH"klkm6BfiJU;&QW&!8r-")$J(9"W[e;AKQsY7%b6k=d;2Y$debtKj36PR7@?t^&lW"DmU`<@i0#)!5Z$M`[-ilWa^bf+k69Q75=.T<D<J+;HdSeu$]"*q[>'4nE5$4uLn>Ekb(q=(t%e(BZH0E(lF*/-ujp\Nr).pA4>*/j!;etbRB(84hNf3F[A8?8F+d?=q9&c*=_qBKj8rK2C1*<T-A6'gUJq]d$&='K-``,[c,qLSW:%ZU$CM=uWr\d_&sd8L4Vc/Bb]>>]mW3e[d0Z&<GOF%*IO.:!'E?GckZ%$8la!BrQ#M?/+'TW@dffC5r1SRb.O0J%H$cOoAZ$P^oEA%?rhE-r=OtNX0/]lK$<'@q`oXaAgPQ?]DmQT-s@c4)qqJ2b0$i3PplCEXa-3&8:C5J?4Bel3d$HOXfD%=NiQL4O;VOuI4PQs0Y''E%Lh&NH:984F>K2aB*lu*'WK%L<L<8pUq?/36A/_e/F2T%a.#6Z%4EL4tD,K"R4DJLG%?G=)TIPpEPZ'\5?D!;o=Sng,lf4uYT%I)O%@4kXIOg'9ud3I$inr=cJYZb!-JuXB9Y,5b&=?Ks`L)u1NSYFP1hl&RXkVL:`?Oi87\gT5rOiT"Y1u$GZ]ok7[kTc+iH6oZ".&@K9%g*I.-*\2=mV/;'uTq,b+XCG+bol8N"fSg52Eu9l`gNaR7Xa2j,1qV?DjiF)Jq@Ii<\Tl[HQ%0RUgG&\QN$ra>gChheVR`dmL!3P2%WGba11Qf)oTN))8\T3bLb,JLhb*"F3,;E5&KMi(Gm1Mkg9@9WD/b(`KY_pY*&^moi`TjsF2rEiQG4AIH_5Q4#*JrKHi^'S&#t]Z=%!N%"XBb*7RAs0TC+#<&Xl=@=?CU7&484e:0dEm_mNFFgc8lK*jPfds3:(.f]H_Z+Hp.,[*d6r7!3&;,g]P*AE=F!cd+We&7kVZVI%V.Z]jQ?W`'/1Y5$Mc-X;X"IL%b,R'2->^4bO2U>:Yb%,Yd=MYP,8#l(R*8/4WG(J/@Z4Q_;Hi'+J$^IOA!N^oei0I<\Ks1G"ZnuT%mTdTH-!?_?f[M3O^oh)9P*'e7a`B"JKs*5qC?=-jU_kVUPpKt:1[:Jbf"7'>odjYD3eu+_F#soBOrfH29K1Pu@#cgG7g#Zb8"qQ'%LbgO^BkV.HX?>[1ne097Y]EqbX%&q^^/6biAu%SJ;V4PB7NI,PZ^2`TafKJX/i)^/+I%<)*f7/EU/XIlf-c@Hs0-'r==Gon1>5l3%`juq^=<CW#s,g'*!9K,s2M`,YPF9'=CA/XB&V__C:^[/(Z0)6bmi2KK+M5&`6n>QCGmprQM6VrWZ@%nc(7>qJ]c/uc_GN)Z@)M3d%0taU?g`a*[Mp3p'&Z0-`6)'Bl1?tT2V`<2G0?qU%Al[e5UkkdU9Tb/cVM.?Z\GR?0h8i>4ba3K7JFtF)oG3<Z(@!iE5q4df8<MLY%"GAiE`j3-H-A:&EQaHp=E,PbLg4;OPFE8u^OP1lmX5fXq-]J?h(1"r*@<JY87p2BmIe^<,WU-N\G$Q2md/9:`HW#b_/HgEKE`h>/%kFf.5_)=-VPa$m'<G8@K<,C$2Y0/:qN#mD9l$1:uF&.rI9$'UJEJMB8[OAM:B[k816VA1<GO0DaP<ZiDM$^83;2WnDc/OX\)TGrM%cbj1Z=&^_\\r_#V#HR'a,"$Yl3q^S!>#YR/Tq,Z+F*,jsHP>[-WXqo;5$4>>Yq0l0>,iN!O%DNJn#5;r9bhh.%AW#9cM\TJSlbq4%dFcj_)C*4g,7*DV1QNM)/OCn>ULo7OrT10p98$tMN]EOPI&&_LY`;.#<l[(1IQZ(lZZP[WbcnP'X"C51*qX!#%p%YG71BO)??:(`%_6N^4A;J6PI<$1\Q>=5>9WA%@`)D="(2%20<23&YICs$LfH^#(.\?oqAXD_-d*k(SA5SWPWm9C6E3-DpV%A^A)0YKW4d;+WA3df7%URc!#f!-XBqEDQ):`-7o#/=U9dO4H"oS.bja.)_g+)fT:J%R)brp^2@qo>2um2p8p[su%^hu<-MIJ_&ho'IO*Dm*b*0Qgg;D_L7P%oBk(;otJ,DlCq6F]\qP&'C1&C&C4LjhR@-`p[)*tWGbc'I;QANX5BsdR$-=8B-Yh$p1cO4hd5Zh.k5i%hJC=B?bk?ZoY,a0kNkq3%gC(&69!LR_)ZI/rT&Y7r0u7f!m0Cc1p9H*kjP('A7\)T\o"I9CTj""8q`,GCc'`s+-<\Wo'C-RU_Ul5]A/lr^^Gt+Weqe=[]r`R?%I!]@?Mp`C#"lFd1s5K9O-/OB"%1@%ZCL<<8I9^o8I0QtOJ>kI4hd5\3q"?E;i7f3O73s(\q7N'?rZ%02,p&"/A>LjGd^.A"hl(kl%kh5uUQl%d-+W#(;q<6r@3OdgHBi.JGhW3FLH/k.;&hfrLAS%rQ;2Y$de_['68&Siq@lT6K]FO,"Rj6qJG%9o:Bl`dPSbM\(N)Rkl%4EEnq<m$k9qOt:G2lcQmrL()Pqt@B#d=+.6ra_2`d05qcHXim@."uW(D_F0`3MjC,b@meF)<k7V@Wek0"&^07X_m7^gXDYhiGJIM%3O$p8Qu%*omB_cMHUf<7BQ4U[@L/536PXBjI$A.ZX%oa2PWChs_sh].3*"6FB/@_Vk\>?&UKom*Oi_[GaflSZb3>--X&pmq7lf`V%F2h=CfpJ+%jpmSLLn$&G1!?!JQ[Qc+`@dOaiC.Idn#`-:nAgl5#aH^+IA(jV)6:tJCNX-V;!6$F_Ae##?7s,UitmneT3o1&L%ErV%PbV!F@sP,h]qj/`\*?VF<RAl$1=@%_c5>k%g[aV3!TSTpi/*rJABq_AUWd(((-HgRo%(K3F65Wt2_aN4%#5:^S5F4+)O6WR7a3Wm%Bf\'=!t1':>W_,m&,T\Y@)4g(`#JAWPsq[*G`u"^Dki#GBBaus(f$48V`30AKjo10Ze=$0^-r(g\W:qVpu5f(Q,I$nKTl&q":i&K%b_7u%q!t>joCi--pMjMfMt-;fk1k8m[7)Oqa&SVD%56HiGhM63S!e,b]ed">[5V,lP\Q"53VUgOSqeF(^HJL&]>AO,afT3PV7og7%GO)(-iip;u"uuCC8^>/UqIFd[^9Z\TX-!)J[2lK2q[Lie5@ZftGi7L!W@^HA\lW$`!\QRL00="5[p8*_+3\c.qP!AOYhkAh(82M\%9cecBQWsfm-!EVkb=Pj#@m>X4l:0%Tjjs;G4T$IK+)g01/]4(QH=QIl^9G%7BaaH_Ma))DhSc&()%oVj@I6o?<l[(emCh8&bZj%R%pOQU&hd)bODI7%HokpiHQ%847B3:G2&!Y3LY?3ksV(?/[8kXT-C@f!"]i$g`h?;c(-bXiM=&6?Ee9hKM/OCn>o.GKT2ZX3G-!Ebo%bK3l,+r%*<RapNF@pu3DEq(q;pI)X$RpV`tB#.JK`4PePm840\76ABoYCPu(dLn394(P0=A?JNtIA:Ou\`l2-4L'DOH-Vda?E-+,%bZ.`_]D,d174Eq8hSgR0bD`\62BLe8nJ(LG5$5k"'^PY^p-O'mf).\-rp<hZpQYM-gmZ!UeA!#>rgm$f<il+D9)UoLrgm#;:T4S>%:T;+,eDF3imj[r(Pko`!rB7"VSl1&6WP>@\H_l']rB7"VSl1&6WP>@\hc&h/.J<G"qYpt&l9Ahr-i3,\:Vh*9MJbqZJ8>=^5WN@F%O*%3%0oi?R?dkVJ,gN%<^M1q?.]pMq1%?RDO/qd(9"/^?Q+$fte7c#IbEYl[Ngpn70Yf[H-b1=j!rs;Z7m(c"0[="fFRX4DoFm@a%:]S:F+_:YnTi\`q#66`=B#s5phaX<%Ki9B"i*7F:!6.T7%66KQXKb]rbK'^E["m'L!nR-]2mIlmeerLP#["IOWBX2hE25!b#R%6_%@e)e"lM&D^4:oOok+@h>5U+NnQ3-&JkJB8]ekorJ5es+>B[b?1n>W3HSfJsQ9)n-[bueX)*9e!k%a(<nHj?&WfC\fQrp,quk6VRd%-<u_S=m$W7NA:'"$l%GYa>hf6$2n6&?ZX;@JLQY\Kd[AR3p/mjVnX#DS2;72#%gVUR476/cD/-0c$9RKX'?<H53dhc<r0RlJ'X&l%@PBLtOcG9;"GJAUb.trhDr.'@r]N'S0c+6?,9J'A"-ZL5k"+Oi1S]Uo%*Y5i,4'@ljU?Dg0IbLjjQgjICRtH2_dE-LU[IYr8mTT-%ElAkILK[ngC2GaMr\YbgFt@q*>DTS'99d+`KG+:<6Bo/87s$uYCA0Mj0=H;jHFs'QHeh3UoXjG@^\W(Fs76/MIsCt)hR!+Uh%/u3%s6FmdIfK=)r3($fs8LX-IJa#)rSQf0f8i.Ds21K$hgbY_L51eOU>J0%cbK8:o=t=[-g:6T]LD<C(JCB!XF3RCm3f;*IQ6a4MG*id%DV(<OM,Hh[foZ19^&$';pRCPO+[&_,*BV[VA,Mg?Xf_6765_TlFOgFiV%&OaEh<50c`*]O-YXRD6l9dgBHb[5O^0JYNJ=t@dRBX1%CB]JKZppLaF_8[mMaj8s:`DbY5H(@h-fMR+-;rk>2*sI$`fj*XZa^p)\GXM2:/Y,EQ.THTV<^C"j,+1/ZpGm9To,WW-/kM9)FA+q%646ZINRZ>HiVEt&fq"rtjKBSG/!.>SfbN-TM)L']-AH2[-B^][KOZ3O8;/KbKPEu1#C4:$FVOstl#!9.!fAb7_VTL\^;Om9fVUXX%`XjZJ<)SO9E*+A!@I/ol*oagOfpui[d1DXO4fVe5oQhYhX`<e_0B?pdUI>V7=sFU'%k9$H8N8>cM:@oe7]9tL\5U.h\e9S(r.]i9%'i\aHNVR/CI#Vjf85gLC@u/ZK.Oi;-3%gAN0TJT^#]\^@G1Ugn!ce%$L:[nS>J6nlOnPJj^ZDmo"X$tl&C&Kg;M^KT:cJo`01U^m%bG_W=jN_Q;SH<fa[H@(ab-1q];e:/)p,DTAOet+A:CaW:9dPKQ#tIE>&]V(h*$NV>Oe"WaO)p];%\q@Y]u*M=fX$(3;VU^5+%X_N%Sp:5jM`*klQ%2i@1T\6bhVJR8-![`f8BP$\#VFSdR_/K;aDY3s#3I\CV']PD;i[ohp.0I<j[CVRGgt"mXkABU&h`uI,tT!?N'ad1%Y*hE/F"UT=Qfh[in[31"6,DZ/l#3Jk7"[EG*<T-@6'<Km;@Jig0p6pC<+_P#eL7h@fA:l<BR`(>90]Nb7\BZ`^DP+4:$?UXR?_Gr%-$'3_]Y![)-WXB78r36<jKSX-gaaBk;p%bGN-:MPZ*$MEf#Le>pmQ1)F&a1AEZJ'q>s1b>W1'U]mFegZgub[@"B>QQ>bRCKGhF/j%ai[^C.P:=QWq3'J?<Se&bbK@6dCYc-B.o>8P?B@'aq9<4DqYp[<`tYZLe$h>*rfIEIj^JIE#HnO.:ZX\-s"AG\$8O\J_.I&7qdUt%'l$6W.2-g&Q9cErZNio!b$]QVC\FQG"W[]6[5+\)i;4b`fu`:l.jL?+A>Bu`>)`,ljCnLC\rU#(l!<_+S4Ab?E5.3ld\2?an(7*C%T=Y=pW/F!5U/7&2r]n6)d%O9u&u$(WU1l:^H)a30A^j3c?P2Y)_jtoe%2g.`@E^Ih&dKq`U)ZHIJb2jd4L)=`BaaH;T,cEgHF@oX%9W9T5$JJW``nD6*=<CW#]448^XT"r9N2d?Q?1?:FkHnMW9I8-h'#[Ds.3(d&(0eNuSU"\P7B(uceBY;LhrK)$:nlVOF$)miSRuFa%A?JNtIA?)1D`n1cf>."eot9>tY@j!;:bi:=HHY#J0\3Z\D'9t.1JH++PfaULk8IJ@CL<<8I9\X(7?Lp*[7So'?+n]:\Xj%ufKm)$%@4:XAFS5Y)SfMAQ+oi*g@o32dg@JAX)@/=A;1O_Ta@.8=Y,JEj;5mi**mFT>Y`FPO+<$ZWO/2RPIr3E'd?B3V5YjF6=2?jFWh^3*%2bN;#Cg4HA9n`fA9p$,,LI\opauQ1gXD&C&h^Frk]PAF<.fdsJb'i@+Oq]r:r=@+Ki:VrH=`/9E11q+I!"NdT:k'n]rP!"r['7sm%8V(l'3#dR5YGa!0;5'obFsOh.5k:tNI#@g_T),Dl^Kas^/3Dq:;'UiU]hQLJWUZHV&cG_$mN\"*O]79[7ZCNr.'i&l[XR$&GW.=4%IT8nm.DbP^NfF`LBFYdk"F,>U0)jk.aDh=l"#Nbk@o,s;mg6!"<AMNj?lU$_E2]!61mWHdaJ3s!qE$C%Jp\#GdZF*A[67B5m2A4A%_A!n70aR@=So3q>]'Lk+B]M0GD^#H=UK1#P#V&-[XH0+U*X@B41!1@jc5>X`V8gj7IeZDt#sdTI%Lj!j:[>%nK*FXXnSUj0AA@2n%cN"EYSD"(dd_LBm4#j+Qr@El"r@lD[ra%th:]m!5,ob*Zb&jOrA#95KRPWE"7=$"b>"PUMNPqO\Nm&'mPt'&(3I=MX.O@LJN=>)2%NNID2Ti,?q@Z;oXj]kY/ehd`1[i1_#78F]uJH@>!le6(>3DDd&&*(LZZSJ!K')&HB04i1<=&8pZ[1T'kIpo?DLMMcX^c4A")fSt[%M)C8ZC$b!X>^D12'Wt@HRO?5ap9%s[J`]Z=V&_maJ+nV#s2E@G"f'S?;<K@@M'DosoBaRb@LH$kCLW,+A=8<EXG,s*])*=P9Wu2.%a=sR-qi9EZc_]!'@3m^`L5.K,lYW%Z5&T%nl4l\qcp4s9MaAfKmnJLJ@SW%"(^FXuA!@`t@R['9N?=KsY[SM6GX+df5OF]nGik1V%4t)(?5lb)_J=kZUe0%XV*1@29;!iZk)A?m1,mGjMaH@,@fo!pM&MO1"-<oa'DW;BaJBVA=CLa-BA6O'8\JG-jiGYeTZ.5b%hdZJ"%MEoXj"JAc/cEZZ>.&:@1OQ6eUAKZK[A,ADWps@kjo9^^dABb;rIH&gN?bWN;GQXi6isRf2+()[[r-/=@o&C1Hb)\Jh.R1Xd;u,qf%9]a;61mK0>5_f=$9kALmi8:Q@#+$/*)n]Qgj[CVRGem?kf*k8sM$O%i=W-O1P[]&G[2Q8+(jWd=H!C):]6BN9k.p6s?uhNtjBUdi%A,gF["B0U'9(T3+NhNbd69[jg5po_+.e>OAG1Bd0Xisp/='=g-Y-KAA>\.?/-r`O??n+gcc;]h_:pDsEKlnt>Yr]&@RBGg4!`P<0%S'(*bGuNB95\DR)"*d9]D^nsQ_osNNVK.V#a3gC!_Q$IIWGb`FgXSF,$[+6dL2_(a;hW&hVB]>R@?a3U9Q>ZL/=rQ7PRp?%7q<g&%CXKXYSB'\-WrZjp\n:*XR^8m2Y-[$0rAB`U`2_j&ASpOVATl:*,1dCL=`6!VNRX[tMm4>[1,`X^@H+8RJ#f^[/7)F7joU07(S)J=%9m3i;.^5+PN!=V5QEl[dL!2SND6G_X9tn<XF9AD;Ri/_N9YfeEGl]]<XDLhg6G1E@<n@bgEfKUZr<?KZ=Sng,lf5"9L"u-1qeRe3%\pLccS=&DSAO.YIfiW)gC*DGE/,+thS8I@'j!cb:b0!'5WjL87Wh(d&a\s6"02Q<.gfs?cSA@;dl.onGqmHcTF8:+POo#Te;F_9^%EgpNsIngJ/s*\5Wp,U-&p5-8::T.\<9c4nJ6+u=&,^@?23:BruHP#^ZZF4arEio;KA)?_si[E`u@t>u)Gc7]4;5rD#DWb+Sa.S?V%%-V=)hJm-;]OLuTGH@;K<DnY6^#OQ!jaJi?*Ub/7!o?">c4O&c9qtNt'T3!"&D^aXlTMo@bT(lJ=hh>]4''WJ<4nX#NLZP%^>Qmj%hF"*fbQ`=4!dUhkW%9f'U#raho'%!AI/5_`G^LB`D_,7Ubr+WJkL_gkqVErm&&76D+-XFQ7%.?(Im.B.1[%%M>?Ka%!+gU60rMN:%"\s'fpBG\r"bBT')W!O+2U4E+0-oZoT-4^$UWb/f8dQD/4]J5fX(nHq^XYh3T9t%+Fc"(,Kh'@:cCoCSlL9S"#:f`BjjhUB2/el^%I"p58XT"T(@"'@&CA]'(1OLk]hXI5b)7[Qc_>P+6aY5@!lk!fYJjC^%8G;+52Ti!bAZ:LnordSig]3jl_0DT^1V?@CIc'!,VSAJM%^.],NIs>3RhB/=5a;+*UiDq==R+ksk_S_eWao#%LX,\,>I,QP=V>7u.mmll$"nFRUg9,KBpqh,@eF4/Zpm`QHi-f%q[&=UQ)MO'8%8o%+,P:oTmUGhqb8Z_<slrZ-Nc.#`c%2sAL!ah=@C"<*tAtVd2GjL`Pq=*.?&Sn*:bXG5ap^`IFfMa:Yad>85CQf5*1IkLio6aO@%J;qDJ,X_6t;IUmjnn6&mV+$MKd3qq!<*Ho"*ta#u^:g!P>;kW2?`S]5L5f-,8e$oQ1Ygjh`spm)EXe/:4cM!3KoiL:/2b-33\]p#%QDSTIJ9HD52.s@fbVAQe!Tst4B8\6DLu^\X;Y[pA.QKu@f#Y-oc5otp9n1t/5@;,,Hqu9lq)cCd[,NaT!PYHHIi/ac4g"MBmf;7o%MXP8uF.W-5id4l!4g"LN<d[[n^8D_'du*U.`V6b!HWor&Xk<YsmqKc8[,QF9nNF#LSlU57/&%nrhp[I4T$rQ]AcEY%9P31BCYkCH%&D;WS&DM/9CoXh$rS7q)MV,'c8R"XEV`(7E:f:/,%;:R>Y5s.NJG.\l2kk:sg$`A^UtNeq_q2\G^C)1(l<P.YS(k1fi`Q/d[[C\4%=K*diBfQ/=qB.Kt"QEO18DYLtd9)**$]&;`MFgtO5jH,R:a$Cj\mk4q_!3k^O?=)Yp(YpVi(-A>&-uB.Nl_BCX>;16">'C+2P!59%+SFSiW"=bpm4il/`hIHZF7Kf\X@"WF:<NY\V4s>L!HB[eAi?t(!K0.?c<<KK.WbdeB`\!.d]StW"6-NaO1>SeEX^o7s1-lPR4m95%Es\@PAmF<`\k`b`fVf#MkUI2feKrXhkY95k[TO&AA%*@QA@icSpDie@L,I'8C,$L4XDqG,9KD:NgTECn*S@g?Z-#]^Q'[Snm9J[B%qiVKY?/m?l>j1T5@+b01N`0F5Cg_mC`XXneE^Z0C<fTmj^lhu>5dG6C*%.<a[uh-jd@G(nlWE2h?8`qZAi>ZJ@Q\I>j&l1Pfg@s7%UQ)%=CHaVIO1LpD>%^<aJ)=`]Ci"`OA7liO\s>mu[gbm\gr?T#Abl4D-JG`eUH@7]Ke7282>4P"PS4#Q@Ou>:j&frmh);i15.X,+%LMiV(He804XYDg+P6XRC.doPZ"N2H=I"P`J9#?+bd8t.5N!oTqqJ2H1aqZ4QaN+dFaQO(hU_"hd'[&i\D38KT%.1g/cTbBBLeDZ&%An_Dgb0UJ']n.P3@U1hU'SkBZUA7)$KfBBo75BuD\#9o())[R0SSQ^\`8u3NP#+GAL=Oq+<Aj5QCl?:k`HclPLt-/g.E"e;/s;&F%p-iI%ESc]Ae4u8A'l_i_"j?_*!IabFaec0)"JGu&BA#n8Ak"Fd#)P1W82q`TKG9c)_Hb,0NP8)NUUf*/\C?sr7id/=19A&\CL=XC%[maeri_UR]X?]]U+\om/O\CG50,f1no58)/]>V8n'sR'$oj8%Y1$U//LF]UDrZ=/\.]%&nPC`g=ScP8t,gm[MMR+S(\/Z4F3_!iU%=lSoQY8uV#j0,>KHW>f#8"3_[$]MH+UaZe]0uODUPn`4'*#$F^(rr@jKK/G?]?Nf,d^pD,EV]!Wqh_1E)-S9<c+Ek0DF`1VU,<#"%r1K3>S:ooHR0]QUNDRs"Z0Tu\VcJP6!Ks-`PYFchN=M`Pd%/U8:sOd0]fK1pQ73\LdEXEes5ep^&h]lG-"SXP>BN8H>]5+!D+?#,%0UF/85'<]<9!Nu'l`_[Z&BK$^KcF"<c7i#C$)JqQo#HT.1/aN_f%R(^TcODj3m8m2%gF%D7MlOpgl<l9X0CTf;MVcF_\c,rPa6:1%+/sN>W(Ynd]4EZEanKF^R;4_)1<oGbhL.7Q3N2bdkh5Ba_cSj0<W[lAJOujQ8kV-FZR'1a)MFFA7a8gn+7J_X<mY81_JbAX8Uc?R%Y[!T+@g0p:O++/!XKj7>&<GN_-6rGY;I8?o['QimFY-4j5-ETJF'BI%@D&,V8?3H6$;gH&[:R1FHu@r_/*XQq%KK_1a'l9@%s7@T%/0gOYA?<3F`S.i]IW%d;._!ff%[/W,PZE:)ij1[Jq)FUKUEf#%fX7XB=`mTA+We$IN!D4$TtH'%BP'gb$]0eg;Ve;ITICrQlP!dN%@;IDj;RS"#+H;Gh9JLH8PC^E.+,.#o.gQ/0e&YtW/30E0KI[=0Ys+8Rg7f:^j-l1AZQ21e50q#jGG$l9\[#X:bG'qsao,2!+I)h"%]nb(Cg7m(`4DJM2s,Tcb%SC;h=4#6u;AM#hV5:n'ohNt$NbN2QLWRn-b"ENY)Pg'@oq5\$@4$>*`[V:/>BI:bNLC_3"92%c`s*_+%7M&`q+RP(^XGna-Bd*'=PAsY6P9Ekh<GV5eXJ;e94,&<\=1K>)\Yb56U(WOim0o20;c(oI<JZD2=NJWeaBY!rqF9"@^D&tF=Im??%6lb<2>uL?'AMU]P<%UJh1ATfg=B&C:;+_uQ[51Lr`Bd(Nc647Kf-)ZKN^YDJa&QcChJ#V.3D:2HU:cYL5T21/_3fk/)D_-IB:;qL%<!%*7h2]UZ@mL>Jl/G3hLF&+FQ*HF].P:=QWeYXKa$N6k3(ufbNP'@LiF(cImNr.oO_Mo8$*_jPPX7KIQdC4""!F84"7$L/KC=m:%=N@-Mlf5"cCm!s])eA-0hcZ!0qmLRU0u]\sqUW>-:F\l]0`\-)+?_Y1K<m,6ge"r-5Uo&Iehr=:V`qP+\03OH.nD\jo3[7dk0fK(%6OkoSID2V9Po$8:ik7N99Z@K-8V\$)*ek^[/$R;f.FuO>pJ+@Cq8P3S&3*'IJl#K<)E!SL,.St1aB4UqYEugH0_-)=J8Eq/&R@$q%.f>\8EV)U$1/UN#)PNa"A(U*,1]Bi.CBZCp1+;<Qk*kS868Y2t34@C*c;j#.JlNS_'&lbM`H:>e.+nuc`H/4;Q5*NRU(lqRWiPh@%MER2T20kG[]XSodbL8*lV<mo7baW]APa'Il"/K$T?qDE8-F>APci^M:N)UUa=;t=8o0pYVG1_]eY`iFEH;_d`fQlSfQ?4h"&5'Y/%>=Fu_2%%kFmIeS09jW?LBY<k1i=+Zi23J"KH)o@kh5E=kIRqqS'E)bMX7D1E-!9AN:F7grMGdL#DSNTdERt5mm>=M$MR<PPj;/-!%D2G_FSn2K7[OB,k\8%HaEq"9OI51gRnjr"jNO^4>i!_gV[R3'"?M%^I4;5c8Mc(#SW1@@d4B>.T#7g8<iM4@p)%2k5dSeu$RN2<K%n:u>(<s+R2VC3s`,=5lako/95&nI!%hHq*59oQ;.$JQ8KRM[6l9L5J-./H351k`(d$@@U"DPT0SrfK&jodS=]o9S2L'j>2EO])Rp%#g4sh80bL7!/.,[4um0*2,$E65AR/Fr,4bE4ArV-I46S_>'Qm1>mE`)F\uPX->:^pQ4q\h6S\36X,H\,c05!af!ZuD+Wdh@,FGV?%C.e@"GCqfX\u90Df"NQOqEDPj9Gl7=LQC+2T245lk"GHd+)eq*J%PeHr:/nFiK#qULHiLX5Q($Ur:%`GnA?>dbR]393C!H#]l3\A%h@JdN2-A3$kl:oF4tsdl2HEtF8r+;]E.1f>;I8A!-Uh(U\e_,E+'3<N0mlmfLl]#cGgC,U_P)-:WVP3/VOg'Z!/shELPro]6?rkB%V\D]?X%&q^\l#eXN.W."nB1Tk*?Ml_`<`)@E"aW`7^0\Kb5.;**rPKGr!q#]#[DG0a)$*l$1*rpBC".GhVu"*hcjAhkBi,0HUT)r%Hoj.9VQ-\>X1icd"q0)\hSO#)-e?9PDtn@R(9k9]f`F'afdu%`+)]>e27)"=2%%kF/XYC,gknp2_Dr"VP#@Ti]if'KDUe#)DDae4%WJP=)ZPf<G6p!?WltY1H=&e`c\G;SJWJq5E]>f*@%u'OjXL9OrqRC8rL1,l>1IG+nB)C"j7^W%4C3DI:D,G$k?80+4`\c_f`d$>O%2<.nDhY:]ZV7og72i#p/"/aY81VVP%o#A.b<mLIUd^J@U+kgISX0LcFmh!`(ABsrcd_=q`g0S?>Sf#@aaLq&f?OpRmX8<(\)]flU%De$2R"9^=p0XEIXphhgXo>tBf.gqcGdSeu$)TH`_h>'/P7_VN1]/RG;Z^gP;aCKZ;.kO@B`1)_S?L1-o#f_(HnJ%CMDdsfG;QPq[%G/gadXdIGbN,R;A`j]R=NGi7m;99d7eo&O>c^_$p^-b"i[55Onl5Z(TqF9#ljH^6sJEboLcM3^mELcQ9>Ne',gK8/e8g3&%I*3!Z%cM67+]Q6TT*W)uFlWBB\IBPET=5@Rn%)O.C*6&lRZ@<:ADqedA);e%a;qlDa'5jodP3l\Jn\'][Vl`,@N,Kr+TG-X;Q+>4M9lIV/%a^fd[AOr?]/aJ0Oj4b=eEQ5JmntM@9]O6,J`CQNhIDgAf9ZFQHc:'25a&SU+SEt+0>MnHe!7&(MEq$g%hSK.Kp[/GV!"t`g!Ih#e%B*S,K_mu*MR,Gua;/*"IeEfnJm=56ggi%iVhP@=[+1ta;&3dV/8e``uR^^,t2E/4,YedL[cLlBiK,a,[P[\c?ZWY8UJ'DMVo7PRU%BA&fp):Q$H%GY_FGoN8rJCr.&%[69m+I&1*kRUcf7]MAAXR0"g:GAQrL-%@6>V'=HK8]QjHuQE*SI[?S\gZ)?0,WY[jI-ZEa7I2!%]Fcd6*O_oRe2OD!XCJeR"-Y<OSE2<6fJmBp[^pJP[Ba1[X3tO)90:+/UDd(:]kf6kg[N4gEic\t`VR)Z22\k1GC=Pb`>c6G,CF!e%1Vu*,=j7iC`i=qp%Iq(C^,=cUbo,It``$D'_Nfi!<GAFN<,Lc;_Fl1/I2+RL>2L*(;raFsS89EeMp<*4GtU9aMkCER)P\Uk;//]G%m>F`@N@S$kR;S%t%%"jA?9ub>kq">l_77e!4I19I+LRm&O<)RSX1X<*KZXqP<i/5V!kGC$B<CQ$Al$UoqJ(qO!o%98;7!*5+n)]6%-YDE][Rd?"ggFuWdMChfZ^f7SZ'6Z$dLn4,SRlB6I8PmprH2?+I-D.94X9mJE5:o[iBM)_r14N"ZZa.Q)<"qo"+JQ%^Lr5s9^`kX%pPeTg7ef+kr14LLcNq9uK\nT&mht*YN:;0`pcTl"Se6Ft#et#*h_W.<)<(=Kn9[Y"4X9n)hi.&#g#RqDj*&gE%X[%H7:_T(6YoDf%3kika86*Uq\^Na$r7!&X+%e#?XT8kcq).)k+4+?KkpAWT/%^NeJi%QHHn"_Jgo_ec^nQ%iR0<_pIFD/["iR\BRs4O>!<B)@Q?*NA%`3Be(aB6Jd,(37X[=C6fV5['j!'m:Xb8_(LYpsV03X'V]A*kFbLObZ,8T]J-`KTKsY]:2p3s;Vt:SL2r/"B!4J40.]=UKsp`KTKs%YZa/G%WSRh&fgu#?K:8N!nOWH`8^qInQ8QGnUZlp]73RG$c&['Q8<rlB=_IM+*/*An6P%@NmOE1:"4.0c8V**\RrhrriVagJ:^LE%OH6LCiCJ*JF<5bW16QMF"4l,c#8GkPa8J0AI'C^'o!qq_Kh[#dei?[Sq<tc6%o*?fq/NM,&kM+1jC=\W37>P%_jgQ`8iRWuaU]5s%acGK3(^Z]0+J5p\O/![ljbf=5P97#>P95m&P97i%B>SNVK7%d)+3-FnGd>F%8@HX$j-1AkS,>7s5#_0:O)FOK.-I$pNT[(>kG-Ur%;<-R.(^Z]0+<T:ta-!MNP&Bgm&iTQ*X?]qf^7:%'XSM',5@@o`+)$X.IN53&^UG$fS,>7s)/?WTIZTV.bk%MIkJuF:5=XrlgZ58=%dh%s)\q8BjS"i)IH<%d`Sb,$jM\rN_,Gltc5/LtRihT!ic*=445r@/iT$L.Z`E:5c2*YQ*36*4a`)uItNjW.kXbsV.D91"aVYut<%jXVXdF0h!?7+m3K!EQ*ARNFpqLm-W!Z%4r@AI]oXSl$^=?YB%#!ceUU<db9S.4DO[S8-?0P89QCa.cT==f&!Z@]\W#O6!(+A!&c\%XEPmZ4QWDAK3X^4/!hbSH_Mq^3,)J(lL1'`PW=aa(:>ngZ\2)2Z'%1:P)jWUP_jOB@ZT!!Eui4$Z7Pa:X0q!qBn#+qVd95I?/jp6%-I8rq<V?N58$U#DhOS+YZ,fEqk9=ue=RS_>ZB7;-299?3/fSS$igWiIfY)Lb:\QBrO/N,uC'CD)RS8U$OukplNH.WjM,j((b;9cB%rXf6Q8Y3p"55/>#W3eM0aW6AS/1P3@7BI!(;GAOX=NMR+:.HbbU2n4Lmm`2A`84In5qY_f[$S^p;QSIK6KUc3G"t,o$kTHSOCefi%'OrG5K\S!5o^#J!LFgAi2f_%0Hm]-ZZE-Q=f4*L"Jn!J-g9\Dgq`ASX.<DTB-O3eZVNYJjj:7=5URZ+^\RMXa,KJGt!9CGUq[kD5%rJ7n9IRNX#"rSOa/0N,V$iL@L9(!88r<T4cNnN-IBOdirN[%5/<,7k[D5<[o.ltm3;<!@O"JO'6Q`V$!Wf'[_iM`/Q1q&N;Wfr`V%$*>a)AKbp<=_\ljf;;>N)^FT$);.PPa^\Rl_qI2P_D-+o^>;D95[!3+8jI4:U;LYTA'<1n.513Hi`T=%C5YukO/l%P(q)/^%cagR%Pa4GWAb]d&04[DS0p8s2g+b9^MaB!`H[Tq%N,<Z'GmThbcB;'@nlDT`\kt7X<\)e/m[(iXr%o>@;Z/U,b/'Ju]eaoqe$HJOBaaH;%T,a`k#>08uLGOpkN3t<2Ys,<OTi[?IG)WF73YQ-j:6_&,i%HG-Hn%RHSjYc<VdQ;9F9(Z@eQgFN"uelH/A[3$6V>Kfege&V2CcuW%3X8hC0P&=eH)mbk_\J]L^L4,WF]&K7c'%B8E5a/'Q>jeb.F-%+a!)45j,1l2(E&K3QdG1aG4HVI8uo^RF3T>;e"n$MH4oIe\b:Dr%efL*,ltC$6^ZJ;f4[Q,!nVX_A<m!bkWjL87Wp]`7T9''k%[4/WPSZRXFne=B0-#q5W2W;m!j&aWV%A^A)(&i4Tqp]j&J(W^OVM!=%U(lqRWboc$q3($OO/`X6X)dCiq>!gig;L!L4%PL*L!:_q(1nG`&s*doginuk<C2NHM9YQ)iM.^4&n@3*[+%%7hG/KBUM=0h=7-3a%SgGFaFliT*89kfi+WNA_Y4oe%Mi^qKd9Oq^'3OEA'W^8_$[NXjZXGIdmK9,P9fT)^>aP(1'J%cIPT4_<Sbp2XEeP.kg!IWU#>9@i%`[X8gX`)G'\h8(ZUhY[q>e(Z$H?Q\>>h)i#'O[1pWJ#NGc@'DhW`;XV5s/,+XMDC_V-"g@?.$\PpX/F6VMeVT?JGo*$X\$Ws0H_K%GoaUMpF(th2sshj&<03I%&67n>'bqO=SQWgV[+@rl'iNj7\urq;)OmIm:=9L;.*mAkK^VY:I#/7(7H;[*#g)*W7,g":F_9!$/o3_%*%'],9h:%g+rUZA+t'Ut74;3W2)cK!.oUQj'qSc2B]dJm`q<=YQ/:n<9%>@EjkOqdY`b"skSTD_PsO/l>QY_3mUMqE-OBNue:LAP%Oku'+q6Ac'leHa3J76-t?M7kSaW5n<a']XR-^90YhG$$E@+@]FL3V4nYhl"r1uQB<H8-S7,(,oV>G<ZZY"D?8UZsRVkN$s];?jSQ%"iumXp+cE*0:FUqkc@$Ua-[A$Q7-O`U(WQ&m=5q^!25XCGdql=.q>tU.FuO>-QP!i]]a;K!A7\-Q]`7SDop@C_bh<Tr[0#JH]VH]%?.?Wu7A0GnY>5XA]MbnH:i\/ms-!tP%8(Na/kHeFlPQJg*1\hhD9Da/_qK>G-tBDUiL/)G<-Ul/!CGc:kV5'F(3R%sm.JJ/R9p&h%PEoS_bq(/Nm>FfBN@PdFK*H/7\k!<H]UD\81O\OC#-887)=rF)$D_;hAe!kg=Y2*(.;3?rimj!Xd^I*#FdQE7b!P6j[+%%7f(h<_%aAV/g3NVfLYVKhed'#FtbUPXqa:QLcAe!.+)6C1nV%A^A):fn:RHEj'Bj9S6BP1HclWBB\I9^pW-Snp!HBSQajOVI0I<^ke^)`70%5_HDt9lnMsb,8n>;$fcZ42\AZ>+r;TnMY0<XH\F_<GAFn=2PUhA?8]U2eg18p6'`.j!ddEODfo^.L.oW>"4:`OjYG<69&:&820EV%WDI=a>!d/NEWYQ/KOT'GhF]2T*:ea3Cad[YDC+q0>kc8XE8;USa`W*G-.i+cQ<a1)gMu$kDo[!M]Hu2.0tZl9brXUM/QH`$M\56%%GI:)WnLgoK.$Y?^ZJO,2Fj>=B#C"aGn%uZ1:oo[mFsaWIm+cg.eG9h&n*G6k_YNY0,[XEj)t;-V((<[<FX^e0j:@Mu.YQ?H:oo[m%ITmlkA+nj*NHQB@0Tj$P0?13%i7/nB(;-$U<tOp4]Q9@_2`D9#*;C?\DR=WGL"-s8=P^%%rNPb23q^C:&`\5YjM/1WHtQC13Ub5)%lmC),N*s5Xmi@VVhIaf6LF/DEhI`s^"m.j8C#4Z3=%\5gr$"*<m=R86mII88)=>;p(8WV$RuI'`07oD8*ogh=F%3dGp-gF]a&Tl+%U\up:lLMd0@BuPd\_=XW%]jS"bQEJ;XL&80&8nf-)h6sg<dThrYVZllFsA#c:oo[m2Cf]C1GH4oc.%K=I,XCrRD<R!K=+2q+GVn:%boesG=MAM$(seVqYhGB(X`d`Kl5Na@MKYl'ZeEB?hXU8@m+mP;b[pnmI#/V>>*Mp@2d,On.[Ie=Mt+IECf\0QN^YDJa&Npt,%Qh)%a_Ga2hn@PmbKi/Kh%lu0<kGZMe]pcP%^^:!:WCg<c>'O;*Yt_p<kGV/<*JQ+<I6O59g1XES)_'=IJ,Rgm,KGX*;8O=FL9@X7.Ae'%Z/WFh2B1uL3On?k[a_/P3JVk'IX7L-FJ"qgl"tUl`s5+QUGqA'X2*ei\*%.lZbt]1oJX>EH7[9$DmO@7V3O'\@lDTdjI#hgbV=%B%?-\9fYIll"*!0^>IS;B)Pic6A2I#6g0[(VWZT2pDAr?,'PKrs@]AWYP]PV;'`b?9U1WBfdS1uXP2o^hVU.u$2JhOi>qVH&&p^r--%1ATqL\e^uA)cmFQ=U&L?P(eE5?[RsJ0.oU5-XWB8k'="fo>S,&6=UV#Q=j]TNeLo7P;+\c(3Nf>p$aSY2G;FZj224W1#Bj`K/)6,%jb#:*X;Ze-L_bAX[K>EG?SNP3VTouZQM8@$BrQ""m%%[4RQ@P?1XJ//40tGQ^$AV>\_5,Wj/kr1"4q_31-Yl3d^I*K&?fOSTs37F%'^L+2FW/1ohXtI:@AbY/%9r[<Q?02^I8P1M[^"P\e3^fUPLEaG'.QYbJnC=5ZFjI,KU1mmbqPCrlsmqjg;df$=#F_#b\4>(e`f!?%[Kp^nS?pH(:l4A)V,),dBSJLigp-QA-s"AGX/3I7G5m0=]ZH-<k-PQWFr%Lqp3&p7Z!(*^7,rR9S9d]ck$q#p!Ys^'SLS/]/6&B:%97<RMZ]q_[OMfA_1B.k:m+(;pMc'oP]Od[<[*3Zf+N2086HBM8@o8-VEReeQkM73)^^bglRQ$cjGnQQuXb_2F_:jMQJ/ulCX7B)@%:g(Z/07]j_KtLE"WU<buC9sa1+%YHd"5Dr8QoSGI3MpCs/)gtYOO>>;69&nNds%:$H;#_?d5%.n:<#=1Tig,X\"1kbEl%4Tk?jSa%Ia:1W;I/d=meN45K&:Xqn%%WUh"./3msWMF^ZV3GF3hTH9DkB.Ia:0lkFURPcgSF-^?0e1q*"KM5F]Q>cTT&+T&4V8n%%WUh",m\%q*"KMSpPq44o^!np\a>arApd)H2koL4TF6dpAFTq+5Xd4fC-HPrqUL-?f1e\rNF!5pAH*1^O(1_lc1*]s5?`\r;@:)<Z`C[[nlnm%07N`pn,N(fMX<c_J"]oS5,26U@&\XTf`!nM53FZdf>qS=/"]`kInm9@3Q8GQ.$d*eU]'I:?iTDH5Q$l*^&Hu7hgbCF%tEjg?iB+'%rGI%"rRLP,eDQ,>IJ;LZ?i7f+r9EtJJ,TA=^]2217/^\8rmbrd^AmZ*aQNJk`I6$i."BO#."BO#."BO#."BO#."BO#."BO#."BO#%kbesEa,^lQA&M:04l\k-cY@pNkp.4l@:eg"Qnl3nNQnk+.NLO7,09(KU-0TFQdV""e7g'C[5*[FDYKd(l'.)t#c7kbe!,fFXArr5%D=#k6#1NPB8$=4kKkd:4F5GV/+01uU^MCAi20M=CI/8`aYppEf7A1Kkq1D*\-`IX;K^oa.UR`^-/EEp*96E)fn.Ri/+1RroETmDM%?Hu@(#63p0T"b'OYM4!pn[i`>l'joNs5@nrp?AW]rnBBHIK(rbI.OuMnc"<Ahu<Dqs*k"Gc$/'mKB)q1m!j<[m18Z8m&KNHJ,Jcm%ruXRR';^3OeNa&bG>J5TrcuMU~>%AI9_PrivateDataEnd