%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fig15.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Gary Westfall
%%CreationDate: 2/23/10
%%BoundingBox: 0 0 517 351
%%HiResBoundingBox: 0 0 516.2812 350.2461
%%CropBox: 0 0 516.2812 350.2461
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 12712 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FFA87DFFFFA87DFD79FFA85252A8A8F852FD79FFA87D7DA87D%7D52A87DFD1EA8FFA8FFA8A8A87D7DFD1EA8FFA8FFA8A87DFD20A8FFFD05%A8FD08FF52527DA8527D527DA8A8527D7DFD06A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA87DA8FF527D52A8A8A852FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FF7D52A8A87DA8527D52A8FF7D7DFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA87DA8A8FD067DA8A8A8FD0E%FFA8A8FFA8FD04527D527D27A8FD0FFFA8527D7DFD0452FFFF7DFD19FF7D%52A8A87D7D7D52527DFF7DA8FD17FF7D527D7DA87D52527D5252A8FFA8FD%0EFF7DA8FFA852FF5252277D7D2752FD0FFF7D527D7D527DA82752FF52FD%19FF7D527DA87D7D52A85227A87D7DFD17FFA87D527D7D5252527DFF2752%A8A8FD0EFF7D7DFD05FFA8FFFFFFA8FD11FFA8FFFFA8FFFFA8FFA87DFD1A%FFA8FD07FFA8FF7DA8FD1CFFA8FFA8FFFFFFA8FFA8FD08FFA8FD05FF77B0%CAFD22FFA852FD24FF7DA8FD23FFA8A8FD08FF7D52FFFF7D52A18DFD23FF%A87DFD24FF7DA8FD24FFA8FD07FFA852A87DFFF8527DA8FD24FF52FD24FF%7D7DFD23FFA8A8FD07FFA85252A8A852277D7DBCCAFD21FFA858AFFD23FF%7DA8FD24FFA8FD08FF7D7DA8FFFFA87DA1B5C3FD22FF93B59AFD07FFCACA%AFFD18FF7DA8CA8CB5A1FD04FFC3FCA1AEFD17FFA8A8FD0EFF7DA8FFB0C3%FD05FFCAFFAEA8FD18FF94B6B5B0BDBCFFFFFFBCB09383A8FD17FF7DFFFF%C3B6B0C3FFFFC3FCBC8383FD18FFA8FD0EFF7D7DFFCABCB5B5FFFFFFB0B5%7C83A8FD17FF52FFCABCFCB6FFFFC3BC9AA78383A8FD16FF7D76BDFFFFBC%BDBCB5FCCA839A5283FD16FFA8A8FD0EFF7D7DFFFFBCB5FFFFFFC3CAB5C3%8483AEFD15FFA87DFD05FFCABDB0C3AF76B6A783A8FD15FF7DA1B5FFFFFF%B6B0BCFFAEA8B0CA83A7FD16FFA8FD08FF5252A8A8525252A8FD04FFCAC3%B5B07C8393C38383A8FD14FFA852FD04FFCAFCB09AFFA8A1B5FF837CA8FD%14FF9A94FD05FFCBFF8383A8FFC3A15983FD14FFA8A8FD07FFA87D7DA8FF%A87D7DA8FD04FFC3FCB67D8383BDBCFF8383A8FD13FFA87DFD05FFCAA783%58A8FFFFCAFF83A8FD14FF9ABCFFFFAEFFA8AE7C8383FFFFB5BDFF83AEFD%14FFA8FD07FFA852527DA827FF7D7DA8FF83A87D83588383FFFFC3B5FF83%83A8FD13FF52A8A8A77C83588383AEA8FFC3B0C4FF7D83A8FD12FF7D2D83%5858587C58A7A8FD04FFC3BDAE58A8FD12FFA8A8FD08FFA87DFF7D7D7D83%51825883588383AEAEFD04FFC3B0FF8383A8FD11FFA8585883588383AEAE%FD05FFC3B0CAFF8383AEFD11FF7D83A7A8A8FFAEFD07FFBCB6FFAE7DA8FD%12FFA8FFFF527D527DA8FD07FF587DA8AEA8FFA8FD07FFCABCBCFF835883%FD11FF52FFA8FD0BFF9BB5CAFF7D83A8FD10FF7DA8FD0DFFBDB0A8AE58A7%FD10FFA8A8FFA87D7DA87DFD08FFA2A2FD0DFFCAB0C3FFAE8383FD0FFFA8%7DFD0EFFB6BCFFFF8383A8FD0FFF7DA8FD0EFFB5B5C4AF5EA8FD10FFA8FF%7D52A8FD0AFF7D7DFD0EFFCAB0B5CAA8835883A8FD0DFF52FD0FFFB0B0C3%CF83837DFD0EFF7D7DFD0FFF94B0B6A85F8383FD0DFFA8A8FFFFA8A8FD08%FF7DA87D7DFD0FFFCABCFCB5C3AE838383FD0BFFA87DFD10FFB6FCFCC3A8%8358AEAEFD0BFF7DA8FD10FFC4B5BCCA838383AEAEFD0BFFA8FFFFA87D7D%FD06FF7D527D52A8FD11FFCABCB0B5BC767C588383AEAFFFAFFFAFFFFFAF%52FD11FFCABD8CB69AA158837C83A8FFAFFFAFFD04FF7DA8FD12FFB5FCB5%937C58837DAEAEFFAFFFAFFFAFFFAEA8FFFFA8527D7DFD05FF7DA87D7D7D%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFF9BB58DB08CB58C936F9993%9A93BC93BC9376A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFCB93B0FC%B08C8D68936F9493BC94BC93BC6FA1FD04FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFCACA94B5FCFC8C8C8C936F9A939A9ABCB6BC9AFFFFFD047DFD05FFA8%277D7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8C3BDC3%B6B6B5BCB5B693B5939327FD14A8AFA2A2A1C3BDC3B5B6B5B693B593B5B5%6F58FD12A8AFA8AFA1CAA1C3BDBDB5B6B5BCB5B593B59394FFFFA8527DA8%FD08FF7D52A87DA87D7D7DA87DA87DA87DA87DA87D7D7DA87DA87DA884A8%84A87DA87DA883A87DA87D527DA87DA87DA8A8A87DA87DA87DA87DA87DA8%7DA87DA87DA884A8A8837DA87DA87D847DA8527DA8A87DA87DA87DA87DA8%7DA87DA87DA87DA87DA8A8847DA884A87D7D7DA87DA8FD047DA8FFFF7D52%52FD09FF7D7DA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFFD05%A8FFA8FFA8AFFD04A852FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8%A8A8FFFD05A8FFA8FFFD04A8AF7D7DFFA8A8A8FFA8A8A8FFA8FFA8FFA8A8%A8FFA8A8A8FFA8A8A8FFFD07A8AFFD04A8FFFFA87DA8A8FD08FF7DA8FD17%FF527D52A8FF52527D52527DFFFF7DFD17FFA8527D52FFFF7D7D7D5252A8%FF7DFD18FFA8527D7DFF527D527D527DFFFFA8FFFFA87D52A8FD08FF7DA8%FD16FFA87D527D52A852277D7D52277DFF52FD17FF7D52277D527DF8527D%7D2752A87DA8FD17FF2727527D527D527D7D7D277DA8A8FFFFA87D7DA8FD%08FF7D7DFD17FF52A87DA8A87DA87DA8FF7DA8A87DFD17FFA87DA87DFFFF%A87D7DFFA852FF7DA8FD18FF7D7DA8FF7DA87DA8FFA87DFFA8FFFF7D7DA8%FFFFFFA8FD05FF7D7DFD23FFA852FD24FF7D7DFD23FFA8A8FFFFFF27527D%FFFF7D52FFFF7D52A8A8FD15FFAF7D7DFFFFA8A8FD07FFA87DFD24FF7DA8%FD08FFCBC3CAFD19FFA8FFFFFF5252A8FFA852A87DFFF8527DA8FD14FFB6%A17D7DFD045227FD07FF52FD09FFC3BCFD19FF7D7DFD09FF8CCAFD18FFA8%A8FFFFFF7D52A8FFA85252A8A852277D7DFD09FFC3CAFD08FFCABDA17D7D%5227522752A8FD05FFA87DA8FD07FFC3B5938AFD18FF7DA8FD08FFC3FF9A%CAFD18FFA8FFFF527D527DFFFF7D7DA8FFFFA87DA8FFC49AB6BCFFFFFFB5%FC758AFD0AFFA8FFFD05A8FD07FF52FFFFCAC3CACACBC3B5BCCA75A7FD17%FF7DA8FD07FFA1B0A19376FD17FFA8A8FFFF7DA87D7DFD08FF7DA8FFB5B5%B5BCC3C4B0B5CAC375AEFD10FFA8FD05FFA87DFFFFBCB0FCB5FCB0C3FFA1%B57DFD17FF7DA8FFFFBDBCBCC3B5B5CAFFAE8A84FD17FFA8FFFF7D7D7DA8%A8FD07FF7DA8FFFFCAFFBDFC8CBDFF8493BC83A8FD06FFA7A8277D527DA8%A8F82752A8A87D52FF52FFB6B5CACAC3C4CAFF8383A8A883FD16FF7D7DFF%CAB593B5FCB5C4FF58AE9AC3AFFD15FFA8A8FFFFA87D7D7DFD08FF7D7DFD%05FFCAFFFFFF83AECAA183AEFD04FFA8837D7D527D275252275227272752%7DFF7DFFCAC3FD06FFAEAECAFC8384FD15FF7DA8FD08FFA8AEFFB66FAEFD%16FFA8FFFFFD04527DFF5252A8A8525252A8FD06FFA8A858A8FFBC8DAE58%CFFD04FFA8FF7D7DA8A8527D7DA8FD057DFF52FD07FF838383FFCAC3A17C%83FD14FF7DA8CA8CCAFFFFA8AF7C83A8FFFFB668A8FD14FFA8A8FD07FFA8%7D7DA8FFA87D7D7DC3CAFFA8AE838258A8FFFFCBCAC3AEA8FD13FFA87DFF%CFA8AEA8A87D8383FD04FFB09AAEA8FD13FF7DA8CAC3A8AE7C835883A8FF%FFFFC3C383AEFD14FFA8FFFFFFA87DFFFFA852527DA827FF7D2D687C587C%5883A8AEFD04FFC3B0A88383FD13FF2D7C5858587C5883A8FD05FFCAFF83%83A8FD12FF7D2D835882588383AEFD06FFC49383FD13FFA8A8FFFFA87D7D%27FFFFA87DFFFD047D58A883A8A8FD09FFC3B5A18383FD11FFA858A8AFAE%FFA8FD09FFB5BC8383AEFD11FF5883A8AEA8FD0AFFCAFCB683FD13FFA8FF%FFA8FF52277DFD07FF7DA8FD0EFF93B0A1837CFD11FF52CAC3FD0CFFC3FC%BC8383A8FD10FF7DA8FD0EFFCA8D9A58AEFD10FFA8A8FFFFFFA85227A8FD%07FFA19AFD0FFFBCC3A8837CFD0FFFA87DB5BCFD0EFFB5B68383A8FD0FFF%7DAFFD10FFB0A083AEFD10FFA8FD04FF527D7DFD07FF76FCC4FD0FFFB0B0%A18A58A8A8FD0DFF52FD10FFCAB0B6838383FD0EFF7D76C3FD0FFFCBFC93%5884AEFD0DFFA8A8FD04FFA852FD08FF7D7DFD11FFBCB5C3AE5F83A8FD0B%FFA87DFD11FFCAB5B67D835FAEFD0CFF7D9AB0FD10FFCAFC937C8384FD0D%FFA8FD04FF27277DFD04FFA8277D7DA8FD12FFBCFCB5C37C7C58A8A8FFAF%FD07FF8CC3FD11FFCAB5B0939A51837DA8AEFD08FF7DA8FD12FFCAB5FC8C%75588383FFAEFFAFFD05FFAFA8FD04FF7D27A8FD04FF7DA87D7D7DFFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8B6FCB08C938C936FFD049AC3BC%C39A93C3FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFA1B58CB08C8C68%99939A9AC39AC39AC393BCFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A1BC8CB08C936F93939A9AC39AC3BCBC9AFFFFA8525252A8FD04FF7D527D%527DFD15A8A2A1C39ABCB5B5B0B08C938D8D8C9327FD14A8AFA8A8A1C3BD%BDB0B593B58CB08D938C8D94FD17A8A1BDB6B6B5B58DB58C938CB08C93FF%FFA8527D7DFD06FF7DA87D7DFFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8A8A8%FFA8FFA8FFAFFFA8FFA8A8A8CAA8A87DA8A87DA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFAFA8A8FFFD05A8FF52A8FFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFAFAFA8A8A8FFFD07A8FFFF%A87D7DA8A8FD07FF52527DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA8A8A884A8A8A87D8427847DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DFD08A85252A87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DFD05A87DA8A8A884A8A8A87DA8FFFFA87D7D%7DFD08FF7DA8FD17FF7DFF7DFFFFFD06A8FFFF7DFD18FF7DFF7DFFA87DA8%A87DA8A8FF7DFD18FFA87DA8A8FFA8A87DA87DA8FFFFA8FFFF7D5227A8FD%08FF7DA8FD16FFA852527D527D27527D522752A8FF52FD17FF5227527D7D%A8527D7D52277DFF7DA8FD17FF7D52527D7D52277D525227A8A8A8FFA852%527D7DFD08FF7D7DFD17FF527D527D7D52527D7DA8277DFF7DFD17FF7D52%7D52A87DA87D7DA87D27FF7DA8FD17FFFD057D525252A8A85252FFA8FFFF%525227A8FD08FF7DA8FD09FFCACAFD0CFFA8A8A8FFFFA8FFA8FFA8FFA8FF%52FD09FFC3BCFD0CFFFD04A8FD04FFA8FFA8FFFF7D7DFD09FFCAFD0DFFA8%FFA8FFFFFFA8FFA8FFA8FFA8A8FD08FFA87DFFFFFFA87DA8FD09FFB0C3FD%18FFA87DFD09FFC4B5FD19FF7DA8FD08FFCAB5B5CAFD18FFA8FD07FFA852%527DFF27527DA8FD09FFCAC4FD19FF52FD0AFFC3FCFD18FF7DA8FD09FFC3%B6C3FD17FFA8A8FD07FFA87D7DA8A827277D7DFD08FFBCCABCB5FD17FFA8%7DA8FD07FFCACBA8A0AFFD17FF7DA8FD08FFBCFF84B6C3FD17FFA8FD08FF%52527DFF7D527DA8FD08FFB5C37CA0CAFD17FF52FD08FFB6B5AF7DC3CAFD%16FF7D7DFD07FFA8B5A88375CAFD16FFA8A8FD0EFF7DA8FFFFFFCAFFFFCA%B0CBFFFFBCB6FD16FFA87DFD07FFCBCAFFFFC98CCAFD16FF7DA8FD06FFCA%C3FFFFFF83AEFD17FFA8FD0EFF7DA8FFFFFFBDFCB08CBCCA8383A776FD17%FF52FD06FFC3FCC384A7A883AEFD16FF7D7DFD06FFC3B0CF83AEA8A7A7FD%15FFA8A8FD0EFF7D7DFFFFC4C3C3B6CAFFAE83FFFFA876FD15FFA87DFD04%FFC3B0FCC3838383FFCAB6CAFD15FF7DA8FD05FFBDBCFF8383FFFF93FCC3%FD15FFA8FD08FF7D7DFFFF52A87DA8FFFFB5BCFFFFAF8358AEFFFF9B8C83%FD14FFA852FFFFFFA1FCBCFF8483A8FFFFCA687CAEFD14FF7DA8FD04FFB6%8CC38483A8FFFFFF93B5FD14FFA8A8FD07FFA87D52A8A8A8527DA8FFAEFF%A8A883837CAEFD04FFA19AA8FD13FFA87DAEFFC3B6A1FFA883A8FD05FF6F%B5C3FD13FF7DA8FFFFA8C3937D5F83AEFD04FFAE7CBDFD14FFA8FD07FFA8%527D7DFF7DFF7D5758936F5E588383FD06FFCA8C7DA8FD13FF2D7C587668%83587C83FD06FFBC8CA0FD13FF7D58835883689A8383A8FD05FFAEA08CFD%13FFA8A8FD08FF5252A87D527D7D58A8C3CAAEFD0BFF937CA8FD11FFA858%A8A883AEA8AEAEFD08FFAE99BCFD12FF585883A893A1AEFD09FFAE7DB5CA%FD12FFA8FD08FFA8FFA8FFA8FF77A8FD0EFFCAB68C76AEFD11FF52FFB6B5%FD0DFF9A6FFD12FF7D7DFFCBB5C3FD0BFFA7938CC4FD10FFA8A8FD0EFF7D%A8FD10FFCA99A1AEFD0FFFA87DFFCAC3FD0EFFC393A8FD10FF7DFD11FFAE%9A76FD11FFA8FD0EFF7D7DFD11FFBC8C7C84FD0FFF52FD11FFA1B58C83AE%FD0EFF7D7DCAFCCAFD0EFFAE8C93FD0FFFA8A8FD0EFF7D7DFD12FFBC8C7C%5FAEFD0CFFA87DFD12FFCABC937C84FD0DFF7DA8FFC3CAFD0FFFCA8D93A8%FD0EFFA8FD0CFF52A87DA1B5CAFD11FFBC8C9A757C7CAEAFFD09FF52C4C3%FD11FFCAB58C6F7C8483AFAFFD08FF7D7DCAFD12FFA8B58C937DA8A8FD09%FFAFA8FD0BFF7D7D527D7DBCC3FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8C3FCB08C8D6F9A75A19BC3A1CAA1CAA17D93BCAFFFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFBD8DFC8C926F9AA0A7A1C3A1CAA1CA769A8CFFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFCAC3938C8CB093A1A1CAA1CAA1CA%A1C3A1FD0BFF7D7D7D768CA1AFFD15A8A19AB6B0B58CB08C8C8CFC8C8C20%FD17A89ABDB6B58CB08C8C8CFC8C8C8CFC8DFD17A8A1C39BB6FC8C8CB08C%8C8CFC8C93FD0BFFA8527DA18DCAAFFFFFFFA8FFFFFFA8FFFFFFA8FFA8FF%A8FFFFFFA8FFFFFFA8FFA8CAA8CAA2A87DA8A8B5C3FFFFFFA8FD05FFA8FD%05FFA8FD05FFA8FFFFFFA8A8A2CAA1A8A1A1A1CA76A1FFFFA8FFA8FFA8FF%FFFFA8FFFFFFA8FFA8FD04FFA8FD04FFA8A8A8CAA1CAA1A1A2CAA1FD0CFF%A8FF2759A8A87DA87DA87D7D277D7DA852A87DA87DA87D2752A852277DA8%7DA87DA87DA884A8847D44A17DA87DA87DA87D2752A8A85252A87DA87DA8%52277DA827527DA87DA87DA884A87DA87D2752A87DA87DA87DA852527DA8%7D527DA87DA87D7D277DA852277D7DA87DA8A87D52A87D5227AFFD0DFF7D%7D7DFD07FF527D7DFF7D52FD05FFA8527DFF7D277DFD0AFF527D7DFD06FF%A8527DFFFF27A8FD05FF7D52A8A85252FD0AFF7D527DFD06FFA87D52A8FF%5252FD05FF7D7D52FF52527DFD05FFA852FFFF7D52A8FD0DFF7D7D7DA8FD%05FFA87D7D7DA82727FD05FF52A852FF52527DFD09FFA87D7D7DFD06FF52%7D52FF52F852FD05FF52A87DA85252A8FD09FF52A852FD06FFA8527D7DA8%F827FD05FF527D7DFF7D277DFD06FF52FFFFA87DFD0EFFA8527DFD07FF52%527DFFA852FD05FFA8277DA87D527DFD0AFF5252A8FD06FFA8277DA8FF52%7DFD05FF7D52A87D7D52FD0AFFA8277DFD07FF5252A8A8A852FD05FF7D52%7DFF52527DFD06FF7DA8A8277DA8FD0EFFA8FD09FFA8FFA8FFA8FD07FFA8%FFFFA8FD0CFFA8FD13FFA8FFFFFFA8FFFFFFA8FD11FFA8FFA8FD09FFA8FF%A8FFA8FD09FFA8FFA8FD3CFFA8FD09FF7DA8527DA8FFFFA8A8A87DA8FFFF%7DFD66FFA85227FD07FFA87D52A87D7D52527D7D52A827527D52A8FD65FF%A852FD057D527DA8FF527D527D275227A8277DA85252A852FD66FFA87D27%27F8525252F87DFF52A87D52A87D7DFFFD04A87D7D7DFD69FFFD067DA8FF%A8FD0DFFA8FDFCFFFDAFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2010-01-20T14:44:15-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-01-20T14:44:15-05:00</xmp:MetadataDate>
         <xmp:CreateDate>2010-01-20T14:44:14-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q1IXCMUHJwDxXpU9h&#xA;irw38r/NurNBeyjV7jUb2TQ7d9Qgvrh5hF5md7kyWUSys3pSUQA20YAUBfhFd1Vv5P8AnjU7KC6S&#xA;9vL3ze1+2lxWsllI9xwv7q0uJ7q3b69cERvAtvWbjIiLUUij+LFXpOu/mPpWgG3XXLWXTWug7W4u&#xA;rjT4+Qi4+oRyuuieovI9BUYqmdv5iuriL1YNFvJYiWUOkliRVGKsKi67MCMVVP0zqP8A1Yb7/g7H&#xA;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&#xA;2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:33255C8C22206811B005DCFDD4A218DC</stEvt:instanceID>
                  <stEvt:when>2010-01-20T14:44:15-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>xmp.did:33255C8C22206811B005DCFDD4A218DC</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:33255C8C22206811B005DCFDD4A218DC</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:33255C8C22206811B005DCFDD4A218DC</xmpMM:DocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -350.246 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 350.246 li
516.281 350.246 li
516.281 0 li
cp
clp
[1 0 0 1 0 0 ]ct
60.2012 108.567 mo
61.2012 107.567 li
61.2012 11.8174 li
210.201 11.8174 li
211.201 10.8174 li
60.2012 10.8174 li
60.2012 108.567 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
60.2012 108.567 mo
211.201 108.567 li
60.2012 108.567 mo
60.2012 10.8174 li
211.201 10.8174 li
211.201 108.567 li
60.2012 108.567 li
cp
0 0 0 1 cmyk
@
205.201 107.067 mo
205.201 108.567 li
199.451 105.817 mo
199.451 108.567 li
199.451 105.817 mo
199.451 108.567 li
193.701 107.067 mo
193.701 108.567 li
187.951 107.067 mo
187.951 108.567 li
181.951 107.067 mo
181.951 108.567 li
176.201 105.817 mo
176.201 108.567 li
170.451 107.067 mo
170.451 108.567 li
164.701 107.067 mo
164.701 108.567 li
158.951 107.067 mo
158.951 108.567 li
152.951 105.817 mo
152.951 108.567 li
147.201 107.067 mo
147.201 108.567 li
141.451 107.067 mo
141.451 108.567 li
135.701 107.067 mo
135.701 108.567 li
129.701 105.817 mo
129.701 108.567 li
123.951 107.067 mo
123.951 108.567 li
118.201 107.067 mo
118.201 108.567 li
112.451 107.067 mo
112.451 108.567 li
106.451 105.817 mo
106.451 108.567 li
100.701 107.067 mo
100.701 108.567 li
94.9512 107.067 mo
94.9512 108.567 li
89.2012 107.067 mo
89.2012 108.567 li
83.2012 105.817 mo
83.2012 108.567 li
77.4512 107.067 mo
77.4512 108.567 li
71.7012 107.067 mo
71.7012 108.567 li
65.9512 107.067 mo
65.9512 108.567 li
60.2012 105.817 mo
60.2012 108.567 li
@
60.2012 108.567 mo
60.2012 10.8174 li
@
64.7012 10.8174 mo
60.2012 10.8174 li
62.4512 107.067 mo
60.2012 107.067 li
62.4512 104.067 mo
60.2012 104.067 li
64.7012 101.067 mo
60.2012 101.067 li
64.7012 10.8174 mo
60.2012 10.8174 li
62.4512 13.8174 mo
60.2012 13.8174 li
62.4512 16.8174 mo
60.2012 16.8174 li
62.4512 19.8174 mo
60.2012 19.8174 li
62.4512 22.8174 mo
60.2012 22.8174 li
64.7012 25.8174 mo
60.2012 25.8174 li
62.4512 28.8174 mo
60.2012 28.8174 li
62.4512 31.8174 mo
60.2012 31.8174 li
62.4512 34.8174 mo
60.2012 34.8174 li
62.4512 37.8174 mo
60.2012 37.8174 li
64.7012 40.8174 mo
60.2012 40.8174 li
62.4512 43.8174 mo
60.2012 43.8174 li
62.4512 47.0674 mo
60.2012 47.0674 li
62.4512 50.0674 mo
60.2012 50.0674 li
62.4512 53.0674 mo
60.2012 53.0674 li
64.7012 56.0674 mo
60.2012 56.0674 li
62.4512 59.0674 mo
60.2012 59.0674 li
62.4512 62.0674 mo
60.2012 62.0674 li
62.4512 65.0674 mo
60.2012 65.0674 li
62.4512 68.0674 mo
60.2012 68.0674 li
64.7012 71.0674 mo
60.2012 71.0674 li
62.4512 74.0674 mo
60.2012 74.0674 li
62.4512 77.0674 mo
60.2012 77.0674 li
62.4512 80.0674 mo
60.2012 80.0674 li
62.4512 83.0674 mo
60.2012 83.0674 li
64.7012 86.0674 mo
60.2012 86.0674 li
62.4512 89.0674 mo
60.2012 89.0674 li
62.4512 92.0674 mo
60.2012 92.0674 li
62.4512 95.0674 mo
60.2012 95.0674 li
62.4512 98.0674 mo
60.2012 98.0674 li
64.7012 101.067 mo
60.2012 101.067 li
@
214.121 101.047 mo
214.121 99.3916 212.777 98.0474 211.121 98.0474 cv
209.465 98.0474 208.121 99.3916 208.121 101.047 cv
208.121 102.703 209.465 104.047 211.121 104.047 cv
212.777 104.047 214.121 102.703 214.121 101.047 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 101.047 mo
209.561 99.3916 208.217 98.0474 206.561 98.0474 cv
204.905 98.0474 203.561 99.3916 203.561 101.047 cv
203.561 102.703 204.905 104.047 206.561 104.047 cv
208.217 104.047 209.561 102.703 209.561 101.047 cv
ef
204.761 101.047 mo
204.761 99.3916 203.417 98.0474 201.761 98.0474 cv
200.105 98.0474 198.761 99.3916 198.761 101.047 cv
198.761 102.703 200.105 104.047 201.761 104.047 cv
203.417 104.047 204.761 102.703 204.761 101.047 cv
ef
200.201 101.047 mo
200.201 99.3916 198.857 98.0474 197.201 98.0474 cv
195.545 98.0474 194.201 99.3916 194.201 101.047 cv
194.201 102.703 195.545 104.047 197.201 104.047 cv
198.857 104.047 200.201 102.703 200.201 101.047 cv
ef
195.401 101.047 mo
195.401 99.3916 194.057 98.0474 192.401 98.0474 cv
190.745 98.0474 189.401 99.3916 189.401 101.047 cv
189.401 102.703 190.745 104.047 192.401 104.047 cv
194.057 104.047 195.401 102.703 195.401 101.047 cv
ef
190.841 101.047 mo
190.841 99.3916 189.497 98.0474 187.841 98.0474 cv
186.185 98.0474 184.841 99.3916 184.841 101.047 cv
184.841 102.703 186.185 104.047 187.841 104.047 cv
189.497 104.047 190.841 102.703 190.841 101.047 cv
ef
186.281 101.047 mo
186.281 99.3916 184.937 98.0474 183.281 98.0474 cv
181.625 98.0474 180.281 99.3916 180.281 101.047 cv
180.281 102.703 181.625 104.047 183.281 104.047 cv
184.937 104.047 186.281 102.703 186.281 101.047 cv
ef
181.721 101.287 mo
181.721 99.6313 180.377 98.2871 178.721 98.2871 cv
177.065 98.2871 175.721 99.6313 175.721 101.287 cv
175.721 102.943 177.065 104.287 178.721 104.287 cv
180.377 104.287 181.721 102.943 181.721 101.287 cv
ef
176.921 101.047 mo
176.921 99.3916 175.577 98.0474 173.921 98.0474 cv
172.265 98.0474 170.921 99.3916 170.921 101.047 cv
170.921 102.703 172.265 104.047 173.921 104.047 cv
175.577 104.047 176.921 102.703 176.921 101.047 cv
ef
172.121 100.567 mo
172.121 98.9111 170.777 97.5674 169.121 97.5674 cv
167.465 97.5674 166.121 98.9111 166.121 100.567 cv
166.121 102.223 167.465 103.567 169.121 103.567 cv
170.777 103.567 172.121 102.223 172.121 100.567 cv
ef
167.801 100.087 mo
167.801 98.4312 166.457 97.0874 164.801 97.0874 cv
163.145 97.0874 161.801 98.4312 161.801 100.087 cv
161.801 101.743 163.145 103.087 164.801 103.087 cv
166.457 103.087 167.801 101.743 167.801 100.087 cv
ef
163.001 99.8472 mo
163.001 98.1914 161.657 96.8472 160.001 96.8472 cv
158.345 96.8472 157.001 98.1914 157.001 99.8472 cv
157.001 101.503 158.345 102.847 160.001 102.847 cv
161.657 102.847 163.001 101.503 163.001 99.8472 cv
ef
158.441 98.4072 mo
158.441 96.7515 157.097 95.4072 155.441 95.4072 cv
153.785 95.4072 152.441 96.7515 152.441 98.4072 cv
152.441 100.063 153.785 101.407 155.441 101.407 cv
157.097 101.407 158.441 100.063 158.441 98.4072 cv
ef
153.641 96.9673 mo
153.641 95.3115 152.297 93.9673 150.641 93.9673 cv
148.985 93.9673 147.641 95.3115 147.641 96.9673 cv
147.641 98.6235 148.985 99.9673 150.641 99.9673 cv
152.297 99.9673 153.641 98.6235 153.641 96.9673 cv
ef
148.841 96.7275 mo
148.841 95.0713 147.497 93.7275 145.841 93.7275 cv
144.185 93.7275 142.841 95.0713 142.841 96.7275 cv
142.841 98.3833 144.185 99.7275 145.841 99.7275 cv
147.497 99.7275 148.841 98.3833 148.841 96.7275 cv
ef
144.521 93.1274 mo
144.521 91.4712 143.177 90.1274 141.521 90.1274 cv
139.865 90.1274 138.521 91.4712 138.521 93.1274 cv
138.521 94.7832 139.865 96.1274 141.521 96.1274 cv
143.177 96.1274 144.521 94.7832 144.521 93.1274 cv
ef
139.721 90.9673 mo
139.721 89.3115 138.377 87.9673 136.721 87.9673 cv
135.065 87.9673 133.721 89.3115 133.721 90.9673 cv
133.721 92.6235 135.065 93.9673 136.721 93.9673 cv
138.377 93.9673 139.721 92.6235 139.721 90.9673 cv
ef
135.161 89.2871 mo
135.161 87.6313 133.817 86.2871 132.161 86.2871 cv
130.505 86.2871 129.161 87.6313 129.161 89.2871 cv
129.161 90.9434 130.505 92.2871 132.161 92.2871 cv
133.817 92.2871 135.161 90.9434 135.161 89.2871 cv
ef
130.361 86.4072 mo
130.361 84.7515 129.017 83.4072 127.361 83.4072 cv
125.705 83.4072 124.361 84.7515 124.361 86.4072 cv
124.361 88.0635 125.705 89.4072 127.361 89.4072 cv
129.017 89.4072 130.361 88.0635 130.361 86.4072 cv
ef
125.801 81.8472 mo
125.801 80.1914 124.457 78.8472 122.801 78.8472 cv
121.145 78.8472 119.801 80.1914 119.801 81.8472 cv
119.801 83.5034 121.145 84.8472 122.801 84.8472 cv
124.457 84.8472 125.801 83.5034 125.801 81.8472 cv
ef
121.241 75.8472 mo
121.241 74.1914 119.897 72.8472 118.241 72.8472 cv
116.585 72.8472 115.241 74.1914 115.241 75.8472 cv
115.241 77.5034 116.585 78.8472 118.241 78.8472 cv
119.897 78.8472 121.241 77.5034 121.241 75.8472 cv
ef
116.441 71.0474 mo
116.441 69.3916 115.097 68.0474 113.441 68.0474 cv
111.785 68.0474 110.441 69.3916 110.441 71.0474 cv
110.441 72.7031 111.785 74.0474 113.441 74.0474 cv
115.097 74.0474 116.441 72.7031 116.441 71.0474 cv
ef
111.881 64.5674 mo
111.881 62.9111 110.537 61.5674 108.881 61.5674 cv
107.225 61.5674 105.881 62.9111 105.881 64.5674 cv
105.881 66.2231 107.225 67.5674 108.881 67.5674 cv
110.537 67.5674 111.881 66.2231 111.881 64.5674 cv
ef
107.201 57.3672 mo
107.201 55.7114 105.857 54.3672 104.201 54.3672 cv
102.545 54.3672 101.201 55.7114 101.201 57.3672 cv
101.201 59.0234 102.545 60.3672 104.201 60.3672 cv
105.857 60.3672 107.201 59.0234 107.201 57.3672 cv
ef
102.761 54.0073 mo
102.761 52.3516 101.417 51.0073 99.7612 51.0073 cv
98.105 51.0073 96.7612 52.3516 96.7612 54.0073 cv
96.7612 55.6631 98.105 57.0073 99.7612 57.0073 cv
101.417 57.0073 102.761 55.6631 102.761 54.0073 cv
ef
97.9609 61.5674 mo
97.9609 59.9111 96.6172 58.5674 94.9609 58.5674 cv
93.3052 58.5674 91.9609 59.9111 91.9609 61.5674 cv
91.9609 63.2236 93.3052 64.5674 94.9609 64.5674 cv
96.6172 64.5674 97.9609 63.2236 97.9609 61.5674 cv
ef
93.1611 65.0474 mo
93.1611 63.3916 91.8174 62.0474 90.1611 62.0474 cv
88.5054 62.0474 87.1611 63.3916 87.1611 65.0474 cv
87.1611 66.7031 88.5054 68.0474 90.1611 68.0474 cv
91.8174 68.0474 93.1611 66.7031 93.1611 65.0474 cv
ef
88.6011 65.5273 mo
88.6011 63.8711 87.2573 62.5273 85.6011 62.5273 cv
83.9453 62.5273 82.6011 63.8711 82.6011 65.5273 cv
82.6011 67.1836 83.9453 68.5273 85.6011 68.5273 cv
87.2573 68.5273 88.6011 67.1836 88.6011 65.5273 cv
ef
84.041 54.9673 mo
84.041 53.3115 82.6973 51.9673 81.041 51.9673 cv
79.3853 51.9673 78.041 53.3115 78.041 54.9673 cv
78.041 56.6235 79.3853 57.9673 81.041 57.9673 cv
82.6973 57.9673 84.041 56.6235 84.041 54.9673 cv
ef
79.481 56.8872 mo
79.481 55.2314 78.1372 53.8872 76.481 53.8872 cv
74.8252 53.8872 73.481 55.2314 73.481 56.8872 cv
73.481 58.5435 74.8252 59.8872 76.481 59.8872 cv
78.1372 59.8872 79.481 58.5435 79.481 56.8872 cv
ef
74.6812 50.8872 mo
74.6812 49.2314 73.3369 47.8872 71.6812 47.8872 cv
70.0254 47.8872 68.6812 49.2314 68.6812 50.8872 cv
68.6812 52.5435 70.0254 53.8872 71.6812 53.8872 cv
73.3369 53.8872 74.6812 52.5435 74.6812 50.8872 cv
ef
69.8813 44.6475 mo
69.8813 42.9912 68.5371 41.6475 66.8813 41.6475 cv
65.2251 41.6475 63.8813 42.9912 63.8813 44.6475 cv
63.8813 46.3032 65.2251 47.6475 66.8813 47.6475 cv
68.5371 47.6475 69.8813 46.3032 69.8813 44.6475 cv
ef
65.561 32.1675 mo
65.561 30.5112 64.2173 29.1675 62.561 29.1675 cv
60.9053 29.1675 59.561 30.5112 59.561 32.1675 cv
59.561 33.8232 60.9053 35.1675 62.561 35.1675 cv
64.2173 35.1675 65.561 33.8232 65.561 32.1675 cv
ef
60.2012 101.067 mo
211.201 101.067 li
0 0 0 1 cmyk
@
214.121 101.047 mo
214.121 99.3916 212.777 98.0474 211.121 98.0474 cv
209.465 98.0474 208.121 99.3916 208.121 101.047 cv
208.121 102.703 209.465 104.047 211.121 104.047 cv
212.777 104.047 214.121 102.703 214.121 101.047 cv
.878019 .337896 1 .281529 cmyk
@
209.561 101.047 mo
209.561 99.3916 208.217 98.0474 206.561 98.0474 cv
204.905 98.0474 203.561 99.3916 203.561 101.047 cv
203.561 102.703 204.905 104.047 206.561 104.047 cv
208.217 104.047 209.561 102.703 209.561 101.047 cv
@
204.761 101.047 mo
204.761 99.3916 203.417 98.0474 201.761 98.0474 cv
200.105 98.0474 198.761 99.3916 198.761 101.047 cv
198.761 102.703 200.105 104.047 201.761 104.047 cv
203.417 104.047 204.761 102.703 204.761 101.047 cv
@
200.201 101.047 mo
200.201 99.3916 198.857 98.0474 197.201 98.0474 cv
195.545 98.0474 194.201 99.3916 194.201 101.047 cv
194.201 102.703 195.545 104.047 197.201 104.047 cv
198.857 104.047 200.201 102.703 200.201 101.047 cv
@
195.401 101.047 mo
195.401 99.3916 194.057 98.0474 192.401 98.0474 cv
190.745 98.0474 189.401 99.3916 189.401 101.047 cv
189.401 102.703 190.745 104.047 192.401 104.047 cv
194.057 104.047 195.401 102.703 195.401 101.047 cv
@
190.841 100.567 mo
190.841 98.9111 189.497 97.5674 187.841 97.5674 cv
186.185 97.5674 184.841 98.9111 184.841 100.567 cv
184.841 102.223 186.185 103.567 187.841 103.567 cv
189.497 103.567 190.841 102.223 190.841 100.567 cv
@
186.281 100.327 mo
186.281 98.6714 184.937 97.3271 183.281 97.3271 cv
181.625 97.3271 180.281 98.6714 180.281 100.327 cv
180.281 101.983 181.625 103.327 183.281 103.327 cv
184.937 103.327 186.281 101.983 186.281 100.327 cv
@
181.721 99.8472 mo
181.721 98.1914 180.377 96.8472 178.721 96.8472 cv
177.065 96.8472 175.721 98.1914 175.721 99.8472 cv
175.721 101.503 177.065 102.847 178.721 102.847 cv
180.377 102.847 181.721 101.503 181.721 99.8472 cv
@
176.921 98.4072 mo
176.921 96.7515 175.577 95.4072 173.921 95.4072 cv
172.265 95.4072 170.921 96.7515 170.921 98.4072 cv
170.921 100.063 172.265 101.407 173.921 101.407 cv
175.577 101.407 176.921 100.063 176.921 98.4072 cv
@
172.121 97.2075 mo
172.121 95.5513 170.777 94.2075 169.121 94.2075 cv
167.465 94.2075 166.121 95.5513 166.121 97.2075 cv
166.121 98.8633 167.465 100.208 169.121 100.208 cv
170.777 100.208 172.121 98.8633 172.121 97.2075 cv
@
167.801 96.0073 mo
167.801 94.3516 166.457 93.0073 164.801 93.0073 cv
163.145 93.0073 161.801 94.3516 161.801 96.0073 cv
161.801 97.6636 163.145 99.0073 164.801 99.0073 cv
166.457 99.0073 167.801 97.6636 167.801 96.0073 cv
@
163.001 94.0874 mo
163.001 92.4312 161.657 91.0874 160.001 91.0874 cv
158.345 91.0874 157.001 92.4312 157.001 94.0874 cv
157.001 95.7432 158.345 97.0874 160.001 97.0874 cv
161.657 97.0874 163.001 95.7432 163.001 94.0874 cv
@
158.441 91.5674 mo
158.441 89.9111 157.097 88.5674 155.441 88.5674 cv
153.785 88.5674 152.441 89.9111 152.441 91.5674 cv
152.441 93.2231 153.785 94.5674 155.441 94.5674 cv
157.097 94.5674 158.441 93.2231 158.441 91.5674 cv
@
153.641 89.0474 mo
153.641 87.3916 152.297 86.0474 150.641 86.0474 cv
148.985 86.0474 147.641 87.3916 147.641 89.0474 cv
147.641 90.7031 148.985 92.0474 150.641 92.0474 cv
152.297 92.0474 153.641 90.7031 153.641 89.0474 cv
@
148.841 87.1274 mo
148.841 85.4712 147.497 84.1274 145.841 84.1274 cv
144.185 84.1274 142.841 85.4712 142.841 87.1274 cv
142.841 88.7832 144.185 90.1274 145.841 90.1274 cv
147.497 90.1274 148.841 88.7832 148.841 87.1274 cv
@
144.521 83.7676 mo
144.521 82.1113 143.177 80.7676 141.521 80.7676 cv
139.865 80.7676 138.521 82.1113 138.521 83.7676 cv
138.521 85.4233 139.865 86.7676 141.521 86.7676 cv
143.177 86.7676 144.521 85.4233 144.521 83.7676 cv
@
139.721 79.2075 mo
139.721 77.5513 138.377 76.2075 136.721 76.2075 cv
135.065 76.2075 133.721 77.5513 133.721 79.2075 cv
133.721 80.8633 135.065 82.2075 136.721 82.2075 cv
138.377 82.2075 139.721 80.8633 139.721 79.2075 cv
@
135.161 77.0474 mo
135.161 75.3916 133.817 74.0474 132.161 74.0474 cv
130.505 74.0474 129.161 75.3916 129.161 77.0474 cv
129.161 78.7031 130.505 80.0474 132.161 80.0474 cv
133.817 80.0474 135.161 78.7031 135.161 77.0474 cv
@
130.361 72.4873 mo
130.361 70.8315 129.017 69.4873 127.361 69.4873 cv
125.705 69.4873 124.361 70.8315 124.361 72.4873 cv
124.361 74.1436 125.705 75.4873 127.361 75.4873 cv
129.017 75.4873 130.361 74.1436 130.361 72.4873 cv
@
125.801 66.9673 mo
125.801 65.3115 124.457 63.9673 122.801 63.9673 cv
121.145 63.9673 119.801 65.3115 119.801 66.9673 cv
119.801 68.6235 121.145 69.9673 122.801 69.9673 cv
124.457 69.9673 125.801 68.6235 125.801 66.9673 cv
@
121.241 63.3672 mo
121.241 61.7114 119.897 60.3672 118.241 60.3672 cv
116.585 60.3672 115.241 61.7114 115.241 63.3672 cv
115.241 65.0234 116.585 66.3672 118.241 66.3672 cv
119.897 66.3672 121.241 65.0234 121.241 63.3672 cv
@
116.441 57.8472 mo
116.441 56.1914 115.097 54.8472 113.441 54.8472 cv
111.785 54.8472 110.441 56.1914 110.441 57.8472 cv
110.441 59.5034 111.785 60.8472 113.441 60.8472 cv
115.097 60.8472 116.441 59.5034 116.441 57.8472 cv
@
111.881 52.5674 mo
111.881 50.9111 110.537 49.5674 108.881 49.5674 cv
107.225 49.5674 105.881 50.9111 105.881 52.5674 cv
105.881 54.2236 107.225 55.5674 108.881 55.5674 cv
110.537 55.5674 111.881 54.2236 111.881 52.5674 cv
@
107.201 62.6475 mo
107.201 60.9912 105.857 59.6475 104.201 59.6475 cv
102.545 59.6475 101.201 60.9912 101.201 62.6475 cv
101.201 64.3032 102.545 65.6475 104.201 65.6475 cv
105.857 65.6475 107.201 64.3032 107.201 62.6475 cv
@
102.761 66.2476 mo
102.761 64.5913 101.417 63.2471 99.7612 63.2471 cv
98.105 63.2471 96.7612 64.5913 96.7612 66.2476 cv
96.7612 67.9033 98.105 69.2476 99.7612 69.2476 cv
101.417 69.2476 102.761 67.9033 102.761 66.2476 cv
@
97.9609 69.3672 mo
97.9609 67.7114 96.6172 66.3672 94.9609 66.3672 cv
93.3052 66.3672 91.9609 67.7114 91.9609 69.3672 cv
91.9609 71.0234 93.3052 72.3672 94.9609 72.3672 cv
96.6172 72.3672 97.9609 71.0234 97.9609 69.3672 cv
@
93.1611 72.2476 mo
93.1611 70.5913 91.8174 69.2476 90.1611 69.2476 cv
88.5054 69.2476 87.1611 70.5913 87.1611 72.2476 cv
87.1611 73.9033 88.5054 75.2476 90.1611 75.2476 cv
91.8174 75.2476 93.1611 73.9033 93.1611 72.2476 cv
@
88.6011 71.2871 mo
88.6011 69.6313 87.2573 68.2871 85.6011 68.2871 cv
83.9453 68.2871 82.6011 69.6313 82.6011 71.2871 cv
82.6011 72.9434 83.9453 74.2871 85.6011 74.2871 cv
87.2573 74.2871 88.6011 72.9434 88.6011 71.2871 cv
@
84.041 74.1675 mo
84.041 72.5112 82.6973 71.1675 81.041 71.1675 cv
79.3853 71.1675 78.041 72.5112 78.041 74.1675 cv
78.041 75.8232 79.3853 77.1675 81.041 77.1675 cv
82.6973 77.1675 84.041 75.8232 84.041 74.1675 cv
@
79.481 73.2075 mo
79.481 71.5513 78.1372 70.2075 76.481 70.2075 cv
74.8252 70.2075 73.481 71.5513 73.481 73.2075 cv
73.481 74.8633 74.8252 76.2075 76.481 76.2075 cv
78.1372 76.2075 79.481 74.8633 79.481 73.2075 cv
@
74.6812 74.8872 mo
74.6812 73.2314 73.3369 71.8872 71.6812 71.8872 cv
70.0254 71.8872 68.6812 73.2314 68.6812 74.8872 cv
68.6812 76.5435 70.0254 77.8872 71.6812 77.8872 cv
73.3369 77.8872 74.6812 76.5435 74.6812 74.8872 cv
@
69.8813 74.4072 mo
69.8813 72.7515 68.5371 71.4072 66.8813 71.4072 cv
65.2251 71.4072 63.8813 72.7515 63.8813 74.4072 cv
63.8813 76.0635 65.2251 77.4072 66.8813 77.4072 cv
68.5371 77.4072 69.8813 76.0635 69.8813 74.4072 cv
@
65.561 76.0874 mo
65.561 74.4312 64.2173 73.0874 62.561 73.0874 cv
60.9053 73.0874 59.561 74.4312 59.561 76.0874 cv
59.561 77.7432 60.9053 79.0874 62.561 79.0874 cv
64.2173 79.0874 65.561 77.7432 65.561 76.0874 cv
@
214.121 101.047 mo
214.121 99.3916 212.777 98.0474 211.121 98.0474 cv
209.465 98.0474 208.121 99.3916 208.121 101.047 cv
208.121 102.703 209.465 104.047 211.121 104.047 cv
212.777 104.047 214.121 102.703 214.121 101.047 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 101.047 mo
209.561 99.3916 208.217 98.0474 206.561 98.0474 cv
204.905 98.0474 203.561 99.3916 203.561 101.047 cv
203.561 102.703 204.905 104.047 206.561 104.047 cv
208.217 104.047 209.561 102.703 209.561 101.047 cv
ef
204.761 101.047 mo
204.761 99.3916 203.417 98.0474 201.761 98.0474 cv
200.105 98.0474 198.761 99.3916 198.761 101.047 cv
198.761 102.703 200.105 104.047 201.761 104.047 cv
203.417 104.047 204.761 102.703 204.761 101.047 cv
ef
200.201 101.047 mo
200.201 99.3916 198.857 98.0474 197.201 98.0474 cv
195.545 98.0474 194.201 99.3916 194.201 101.047 cv
194.201 102.703 195.545 104.047 197.201 104.047 cv
198.857 104.047 200.201 102.703 200.201 101.047 cv
ef
195.401 101.047 mo
195.401 99.3916 194.057 98.0474 192.401 98.0474 cv
190.745 98.0474 189.401 99.3916 189.401 101.047 cv
189.401 102.703 190.745 104.047 192.401 104.047 cv
194.057 104.047 195.401 102.703 195.401 101.047 cv
ef
190.841 101.047 mo
190.841 99.3916 189.497 98.0474 187.841 98.0474 cv
186.185 98.0474 184.841 99.3916 184.841 101.047 cv
184.841 102.703 186.185 104.047 187.841 104.047 cv
189.497 104.047 190.841 102.703 190.841 101.047 cv
ef
186.281 101.047 mo
186.281 99.3916 184.937 98.0474 183.281 98.0474 cv
181.625 98.0474 180.281 99.3916 180.281 101.047 cv
180.281 102.703 181.625 104.047 183.281 104.047 cv
184.937 104.047 186.281 102.703 186.281 101.047 cv
ef
181.721 101.287 mo
181.721 99.6313 180.377 98.2871 178.721 98.2871 cv
177.065 98.2871 175.721 99.6313 175.721 101.287 cv
175.721 102.943 177.065 104.287 178.721 104.287 cv
180.377 104.287 181.721 102.943 181.721 101.287 cv
ef
176.921 101.047 mo
176.921 99.3916 175.577 98.0474 173.921 98.0474 cv
172.265 98.0474 170.921 99.3916 170.921 101.047 cv
170.921 102.703 172.265 104.047 173.921 104.047 cv
175.577 104.047 176.921 102.703 176.921 101.047 cv
ef
172.121 100.567 mo
172.121 98.9111 170.777 97.5674 169.121 97.5674 cv
167.465 97.5674 166.121 98.9111 166.121 100.567 cv
166.121 102.223 167.465 103.567 169.121 103.567 cv
170.777 103.567 172.121 102.223 172.121 100.567 cv
ef
167.801 100.087 mo
167.801 98.4312 166.457 97.0874 164.801 97.0874 cv
163.145 97.0874 161.801 98.4312 161.801 100.087 cv
161.801 101.743 163.145 103.087 164.801 103.087 cv
166.457 103.087 167.801 101.743 167.801 100.087 cv
ef
163.001 99.8472 mo
163.001 98.1914 161.657 96.8472 160.001 96.8472 cv
158.345 96.8472 157.001 98.1914 157.001 99.8472 cv
157.001 101.503 158.345 102.847 160.001 102.847 cv
161.657 102.847 163.001 101.503 163.001 99.8472 cv
ef
158.441 98.4072 mo
158.441 96.7515 157.097 95.4072 155.441 95.4072 cv
153.785 95.4072 152.441 96.7515 152.441 98.4072 cv
152.441 100.063 153.785 101.407 155.441 101.407 cv
157.097 101.407 158.441 100.063 158.441 98.4072 cv
ef
153.641 96.9673 mo
153.641 95.3115 152.297 93.9673 150.641 93.9673 cv
148.985 93.9673 147.641 95.3115 147.641 96.9673 cv
147.641 98.6235 148.985 99.9673 150.641 99.9673 cv
152.297 99.9673 153.641 98.6235 153.641 96.9673 cv
ef
148.841 96.7275 mo
148.841 95.0713 147.497 93.7275 145.841 93.7275 cv
144.185 93.7275 142.841 95.0713 142.841 96.7275 cv
142.841 98.3833 144.185 99.7275 145.841 99.7275 cv
147.497 99.7275 148.841 98.3833 148.841 96.7275 cv
ef
144.521 93.1274 mo
144.521 91.4712 143.177 90.1274 141.521 90.1274 cv
139.865 90.1274 138.521 91.4712 138.521 93.1274 cv
138.521 94.7832 139.865 96.1274 141.521 96.1274 cv
143.177 96.1274 144.521 94.7832 144.521 93.1274 cv
ef
139.721 90.9673 mo
139.721 89.3115 138.377 87.9673 136.721 87.9673 cv
135.065 87.9673 133.721 89.3115 133.721 90.9673 cv
133.721 92.6235 135.065 93.9673 136.721 93.9673 cv
138.377 93.9673 139.721 92.6235 139.721 90.9673 cv
ef
135.161 89.2871 mo
135.161 87.6313 133.817 86.2871 132.161 86.2871 cv
130.505 86.2871 129.161 87.6313 129.161 89.2871 cv
129.161 90.9434 130.505 92.2871 132.161 92.2871 cv
133.817 92.2871 135.161 90.9434 135.161 89.2871 cv
ef
130.361 86.4072 mo
130.361 84.7515 129.017 83.4072 127.361 83.4072 cv
125.705 83.4072 124.361 84.7515 124.361 86.4072 cv
124.361 88.0635 125.705 89.4072 127.361 89.4072 cv
129.017 89.4072 130.361 88.0635 130.361 86.4072 cv
ef
125.801 81.8472 mo
125.801 80.1914 124.457 78.8472 122.801 78.8472 cv
121.145 78.8472 119.801 80.1914 119.801 81.8472 cv
119.801 83.5034 121.145 84.8472 122.801 84.8472 cv
124.457 84.8472 125.801 83.5034 125.801 81.8472 cv
ef
121.241 75.8472 mo
121.241 74.1914 119.897 72.8472 118.241 72.8472 cv
116.585 72.8472 115.241 74.1914 115.241 75.8472 cv
115.241 77.5034 116.585 78.8472 118.241 78.8472 cv
119.897 78.8472 121.241 77.5034 121.241 75.8472 cv
ef
111.881 64.5674 mo
111.881 62.9111 110.537 61.5674 108.881 61.5674 cv
107.225 61.5674 105.881 62.9111 105.881 64.5674 cv
105.881 66.2231 107.225 67.5674 108.881 67.5674 cv
110.537 67.5674 111.881 66.2231 111.881 64.5674 cv
ef
107.201 57.3672 mo
107.201 55.7114 105.857 54.3672 104.201 54.3672 cv
102.545 54.3672 101.201 55.7114 101.201 57.3672 cv
101.201 59.0234 102.545 60.3672 104.201 60.3672 cv
105.857 60.3672 107.201 59.0234 107.201 57.3672 cv
ef
102.761 54.0073 mo
102.761 52.3516 101.417 51.0073 99.7612 51.0073 cv
98.105 51.0073 96.7612 52.3516 96.7612 54.0073 cv
96.7612 55.6631 98.105 57.0073 99.7612 57.0073 cv
101.417 57.0073 102.761 55.6631 102.761 54.0073 cv
ef
97.9609 61.5674 mo
97.9609 59.9111 96.6172 58.5674 94.9609 58.5674 cv
93.3052 58.5674 91.9609 59.9111 91.9609 61.5674 cv
91.9609 63.2236 93.3052 64.5674 94.9609 64.5674 cv
96.6172 64.5674 97.9609 63.2236 97.9609 61.5674 cv
ef
93.1611 65.0474 mo
93.1611 63.3916 91.8174 62.0474 90.1611 62.0474 cv
88.5054 62.0474 87.1611 63.3916 87.1611 65.0474 cv
87.1611 66.7031 88.5054 68.0474 90.1611 68.0474 cv
91.8174 68.0474 93.1611 66.7031 93.1611 65.0474 cv
ef
88.6011 65.5273 mo
88.6011 63.8711 87.2573 62.5273 85.6011 62.5273 cv
83.9453 62.5273 82.6011 63.8711 82.6011 65.5273 cv
82.6011 67.1836 83.9453 68.5273 85.6011 68.5273 cv
87.2573 68.5273 88.6011 67.1836 88.6011 65.5273 cv
ef
84.041 54.9673 mo
84.041 53.3115 82.6973 51.9673 81.041 51.9673 cv
79.3853 51.9673 78.041 53.3115 78.041 54.9673 cv
78.041 56.6235 79.3853 57.9673 81.041 57.9673 cv
82.6973 57.9673 84.041 56.6235 84.041 54.9673 cv
ef
79.481 56.8872 mo
79.481 55.2314 78.1372 53.8872 76.481 53.8872 cv
74.8252 53.8872 73.481 55.2314 73.481 56.8872 cv
73.481 58.5435 74.8252 59.8872 76.481 59.8872 cv
78.1372 59.8872 79.481 58.5435 79.481 56.8872 cv
ef
74.6812 50.8872 mo
74.6812 49.2314 73.3369 47.8872 71.6812 47.8872 cv
70.0254 47.8872 68.6812 49.2314 68.6812 50.8872 cv
68.6812 52.5435 70.0254 53.8872 71.6812 53.8872 cv
73.3369 53.8872 74.6812 52.5435 74.6812 50.8872 cv
ef
69.8813 44.6475 mo
69.8813 42.9912 68.5371 41.6475 66.8813 41.6475 cv
65.2251 41.6475 63.8813 42.9912 63.8813 44.6475 cv
63.8813 46.3032 65.2251 47.6475 66.8813 47.6475 cv
68.5371 47.6475 69.8813 46.3032 69.8813 44.6475 cv
ef
65.561 32.1675 mo
65.561 30.5112 64.2173 29.1675 62.561 29.1675 cv
60.9053 29.1675 59.561 30.5112 59.561 32.1675 cv
59.561 33.8232 60.9053 35.1675 62.561 35.1675 cv
64.2173 35.1675 65.561 33.8232 65.561 32.1675 cv
ef
210.631 108.622 mo
211.631 107.622 li
211.631 11.8721 li
360.631 11.8721 li
361.631 10.8721 li
210.631 10.8721 li
210.631 108.622 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
210.631 108.622 mo
361.631 108.622 li
210.631 108.622 mo
210.631 10.8721 li
361.631 10.8721 li
361.631 108.622 li
210.631 108.622 li
cp
0 0 0 1 cmyk
@
355.881 107.122 mo
355.881 108.622 li
349.881 105.872 mo
349.881 108.622 li
349.881 105.872 mo
349.881 108.622 li
344.131 107.122 mo
344.131 108.622 li
338.381 107.122 mo
338.381 108.622 li
332.631 107.122 mo
332.631 108.622 li
326.631 105.872 mo
326.631 108.622 li
320.881 107.122 mo
320.881 108.622 li
315.131 107.122 mo
315.131 108.622 li
309.381 107.122 mo
309.381 108.622 li
303.381 105.872 mo
303.381 108.622 li
297.631 107.122 mo
297.631 108.622 li
291.881 107.122 mo
291.881 108.622 li
286.131 107.122 mo
286.131 108.622 li
280.131 105.872 mo
280.131 108.622 li
274.381 107.122 mo
274.381 108.622 li
268.631 107.122 mo
268.631 108.622 li
262.881 107.122 mo
262.881 108.622 li
257.131 105.872 mo
257.131 108.622 li
251.131 107.122 mo
251.131 108.622 li
245.381 107.122 mo
245.381 108.622 li
239.631 107.122 mo
239.631 108.622 li
233.881 105.872 mo
233.881 108.622 li
227.881 107.122 mo
227.881 108.622 li
222.131 107.122 mo
222.131 108.622 li
216.381 107.122 mo
216.381 108.622 li
210.631 105.872 mo
210.631 108.622 li
@
210.631 108.622 mo
210.631 10.8721 li
@
215.131 10.8721 mo
210.631 10.8721 li
212.881 107.122 mo
210.631 107.122 li
212.881 104.122 mo
210.631 104.122 li
215.131 101.122 mo
210.631 101.122 li
215.131 10.8721 mo
210.631 10.8721 li
212.881 13.8721 mo
210.631 13.8721 li
212.881 16.8721 mo
210.631 16.8721 li
212.881 19.8721 mo
210.631 19.8721 li
212.881 22.8721 mo
210.631 22.8721 li
215.131 25.8721 mo
210.631 25.8721 li
212.881 28.8721 mo
210.631 28.8721 li
212.881 31.8721 mo
210.631 31.8721 li
212.881 34.8721 mo
210.631 34.8721 li
212.881 37.8721 mo
210.631 37.8721 li
215.131 40.8721 mo
210.631 40.8721 li
212.881 43.8721 mo
210.631 43.8721 li
212.881 47.1221 mo
210.631 47.1221 li
212.881 50.1221 mo
210.631 50.1221 li
212.881 53.1221 mo
210.631 53.1221 li
215.131 56.1221 mo
210.631 56.1221 li
212.881 59.1221 mo
210.631 59.1221 li
212.881 62.1221 mo
210.631 62.1221 li
212.881 65.1221 mo
210.631 65.1221 li
212.881 68.1221 mo
210.631 68.1221 li
215.131 71.1221 mo
210.631 71.1221 li
212.881 74.1221 mo
210.631 74.1221 li
212.881 77.1221 mo
210.631 77.1221 li
212.881 80.1221 mo
210.631 80.1221 li
212.881 83.1221 mo
210.631 83.1221 li
215.131 86.1221 mo
210.631 86.1221 li
212.881 89.1221 mo
210.631 89.1221 li
212.881 92.1221 mo
210.631 92.1221 li
212.881 95.1221 mo
210.631 95.1221 li
212.881 98.1221 mo
210.631 98.1221 li
215.131 101.122 mo
210.631 101.122 li
@
364.681 101.102 mo
364.681 99.4463 363.337 98.1021 361.681 98.1021 cv
360.024 98.1021 358.681 99.4463 358.681 101.102 cv
358.681 102.758 360.024 104.102 361.681 104.102 cv
363.337 104.102 364.681 102.758 364.681 101.102 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 101.102 mo
359.881 99.4463 358.537 98.1021 356.881 98.1021 cv
355.225 98.1021 353.881 99.4463 353.881 101.102 cv
353.881 102.758 355.225 104.102 356.881 104.102 cv
358.537 104.102 359.881 102.758 359.881 101.102 cv
ef
355.321 101.102 mo
355.321 99.4463 353.977 98.1021 352.321 98.1021 cv
350.665 98.1021 349.321 99.4463 349.321 101.102 cv
349.321 102.758 350.665 104.102 352.321 104.102 cv
353.977 104.102 355.321 102.758 355.321 101.102 cv
ef
350.521 101.102 mo
350.521 99.4463 349.177 98.1021 347.521 98.1021 cv
345.865 98.1021 344.521 99.4463 344.521 101.102 cv
344.521 102.758 345.865 104.102 347.521 104.102 cv
349.177 104.102 350.521 102.758 350.521 101.102 cv
ef
345.961 101.102 mo
345.961 99.4463 344.617 98.1021 342.961 98.1021 cv
341.305 98.1021 339.961 99.4463 339.961 101.102 cv
339.961 102.758 341.305 104.102 342.961 104.102 cv
344.617 104.102 345.961 102.758 345.961 101.102 cv
ef
341.4 101.102 mo
341.4 99.4463 340.057 98.1021 338.4 98.1021 cv
336.745 98.1021 335.4 99.4463 335.4 101.102 cv
335.4 102.758 336.745 104.102 338.4 104.102 cv
340.057 104.102 341.4 102.758 341.4 101.102 cv
ef
336.601 100.862 mo
336.601 99.2061 335.257 97.8623 333.601 97.8623 cv
331.945 97.8623 330.601 99.2061 330.601 100.862 cv
330.601 102.518 331.945 103.862 333.601 103.862 cv
335.257 103.862 336.601 102.518 336.601 100.862 cv
ef
332.041 101.102 mo
332.041 99.4463 330.697 98.1021 329.041 98.1021 cv
327.385 98.1021 326.041 99.4463 326.041 101.102 cv
326.041 102.758 327.385 104.102 329.041 104.102 cv
330.697 104.102 332.041 102.758 332.041 101.102 cv
ef
327.48 101.102 mo
327.48 99.4463 326.137 98.1021 324.48 98.1021 cv
322.825 98.1021 321.48 99.4463 321.48 101.102 cv
321.48 102.758 322.825 104.102 324.48 104.102 cv
326.137 104.102 327.48 102.758 327.48 101.102 cv
ef
322.681 99.9019 mo
322.681 98.2461 321.337 96.9019 319.681 96.9019 cv
318.024 96.9019 316.681 98.2461 316.681 99.9019 cv
316.681 101.558 318.024 102.902 319.681 102.902 cv
321.337 102.902 322.681 101.558 322.681 99.9019 cv
ef
318.121 100.142 mo
318.121 98.4858 316.777 97.1421 315.121 97.1421 cv
313.465 97.1421 312.121 98.4858 312.121 100.142 cv
312.121 101.798 313.465 103.142 315.121 103.142 cv
316.777 103.142 318.121 101.798 318.121 100.142 cv
ef
313.321 99.9019 mo
313.321 98.2461 311.977 96.9019 310.321 96.9019 cv
308.665 96.9019 307.321 98.2461 307.321 99.9019 cv
307.321 101.558 308.665 102.902 310.321 102.902 cv
311.977 102.902 313.321 101.558 313.321 99.9019 cv
ef
308.881 98.7021 mo
308.881 97.0459 307.537 95.7021 305.881 95.7021 cv
304.225 95.7021 302.881 97.0459 302.881 98.7021 cv
302.881 100.358 304.225 101.702 305.881 101.702 cv
307.537 101.702 308.881 100.358 308.881 98.7021 cv
ef
304.201 98.2222 mo
304.201 96.5659 302.856 95.2222 301.201 95.2222 cv
299.545 95.2222 298.201 96.5659 298.201 98.2222 cv
298.201 99.8779 299.545 101.222 301.201 101.222 cv
302.856 101.222 304.201 99.8779 304.201 98.2222 cv
ef
299.641 96.542 mo
299.641 94.8862 298.297 93.542 296.641 93.542 cv
294.984 93.542 293.641 94.8862 293.641 96.542 cv
293.641 98.1982 294.984 99.542 296.641 99.542 cv
298.297 99.542 299.641 98.1982 299.641 96.542 cv
ef
294.841 93.6621 mo
294.841 92.0059 293.497 90.6621 291.841 90.6621 cv
290.185 90.6621 288.841 92.0059 288.841 93.6621 cv
288.841 95.3179 290.185 96.6621 291.841 96.6621 cv
293.497 96.6621 294.841 95.3179 294.841 93.6621 cv
ef
290.041 91.022 mo
290.041 89.3662 288.697 88.022 287.041 88.022 cv
285.385 88.022 284.041 89.3662 284.041 91.022 cv
284.041 92.6782 285.385 94.022 287.041 94.022 cv
288.697 94.022 290.041 92.6782 290.041 91.022 cv
ef
285.721 89.8223 mo
285.721 88.166 284.377 86.8223 282.721 86.8223 cv
281.065 86.8223 279.721 88.166 279.721 89.8223 cv
279.721 91.478 281.065 92.8223 282.721 92.8223 cv
284.377 92.8223 285.721 91.478 285.721 89.8223 cv
ef
280.921 86.4619 mo
280.921 84.8062 279.577 83.4619 277.921 83.4619 cv
276.265 83.4619 274.921 84.8062 274.921 86.4619 cv
274.921 88.1182 276.265 89.4619 277.921 89.4619 cv
279.577 89.4619 280.921 88.1182 280.921 86.4619 cv
ef
276.361 80.9419 mo
276.361 79.2861 275.017 77.9419 273.361 77.9419 cv
271.705 77.9419 270.361 79.2861 270.361 80.9419 cv
270.361 82.5981 271.705 83.9419 273.361 83.9419 cv
275.017 83.9419 276.361 82.5981 276.361 80.9419 cv
ef
271.561 75.4219 mo
271.561 73.7661 270.217 72.4219 268.561 72.4219 cv
266.905 72.4219 265.561 73.7661 265.561 75.4219 cv
265.561 77.0781 266.905 78.4219 268.561 78.4219 cv
270.217 78.4219 271.561 77.0781 271.561 75.4219 cv
ef
266.881 70.6221 mo
266.881 68.9658 265.537 67.6221 263.881 67.6221 cv
262.225 67.6221 260.881 68.9658 260.881 70.6221 cv
260.881 72.2778 262.225 73.6221 263.881 73.6221 cv
265.537 73.6221 266.881 72.2778 266.881 70.6221 cv
ef
262.441 60.542 mo
262.441 58.8862 261.097 57.542 259.441 57.542 cv
257.785 57.542 256.441 58.8862 256.441 60.542 cv
256.441 62.1982 257.785 63.542 259.441 63.542 cv
261.097 63.542 262.441 62.1982 262.441 60.542 cv
ef
257.641 50.4619 mo
257.641 48.8062 256.297 47.4619 254.641 47.4619 cv
252.985 47.4619 251.641 48.8062 251.641 50.4619 cv
251.641 52.1182 252.985 53.4619 254.641 53.4619 cv
256.297 53.4619 257.641 52.1182 257.641 50.4619 cv
ef
253.081 51.6621 mo
253.081 50.0059 251.737 48.6621 250.081 48.6621 cv
248.425 48.6621 247.081 50.0059 247.081 51.6621 cv
247.081 53.3179 248.425 54.6621 250.081 54.6621 cv
251.737 54.6621 253.081 53.3179 253.081 51.6621 cv
ef
248.281 57.6621 mo
248.281 56.0059 246.937 54.6621 245.281 54.6621 cv
243.625 54.6621 242.281 56.0059 242.281 57.6621 cv
242.281 59.3179 243.625 60.6621 245.281 60.6621 cv
246.937 60.6621 248.281 59.3179 248.281 57.6621 cv
ef
243.721 61.6221 mo
243.721 59.9658 242.377 58.6221 240.721 58.6221 cv
239.065 58.6221 237.721 59.9658 237.721 61.6221 cv
237.721 63.2783 239.065 64.6221 240.721 64.6221 cv
242.377 64.6221 243.721 63.2783 243.721 61.6221 cv
ef
239.161 62.4619 mo
239.161 60.8062 237.817 59.4619 236.161 59.4619 cv
234.505 59.4619 233.161 60.8062 233.161 62.4619 cv
233.161 64.1182 234.505 65.4619 236.161 65.4619 cv
237.817 65.4619 239.161 64.1182 239.161 62.4619 cv
ef
234.361 52.8623 mo
234.361 51.2061 233.017 49.8623 231.361 49.8623 cv
229.705 49.8623 228.361 51.2061 228.361 52.8623 cv
228.361 54.5181 229.705 55.8623 231.361 55.8623 cv
233.017 55.8623 234.361 54.5181 234.361 52.8623 cv
ef
229.801 53.1021 mo
229.801 51.4463 228.457 50.1021 226.801 50.1021 cv
225.145 50.1021 223.801 51.4463 223.801 53.1021 cv
223.801 54.7578 225.145 56.1021 226.801 56.1021 cv
228.457 56.1021 229.801 54.7578 229.801 53.1021 cv
ef
225.241 50.7021 mo
225.241 49.0459 223.897 47.7021 222.241 47.7021 cv
220.585 47.7021 219.241 49.0459 219.241 50.7021 cv
219.241 52.3579 220.585 53.7021 222.241 53.7021 cv
223.897 53.7021 225.241 52.3579 225.241 50.7021 cv
ef
220.681 48.3018 mo
220.681 46.646 219.337 45.3018 217.681 45.3018 cv
216.025 45.3018 214.681 46.646 214.681 48.3018 cv
214.681 49.958 216.025 51.3018 217.681 51.3018 cv
219.337 51.3018 220.681 49.958 220.681 48.3018 cv
ef
215.881 48.3018 mo
215.881 46.646 214.537 45.3018 212.881 45.3018 cv
211.225 45.3018 209.881 46.646 209.881 48.3018 cv
209.881 49.958 211.225 51.3018 212.881 51.3018 cv
214.537 51.3018 215.881 49.958 215.881 48.3018 cv
ef
210.631 101.122 mo
361.631 101.122 li
0 0 0 1 cmyk
@
364.681 101.102 mo
364.681 99.4463 363.337 98.1021 361.681 98.1021 cv
360.024 98.1021 358.681 99.4463 358.681 101.102 cv
358.681 102.758 360.024 104.102 361.681 104.102 cv
363.337 104.102 364.681 102.758 364.681 101.102 cv
.878019 .337896 1 .281529 cmyk
@
359.881 101.102 mo
359.881 99.4463 358.537 98.1021 356.881 98.1021 cv
355.225 98.1021 353.881 99.4463 353.881 101.102 cv
353.881 102.758 355.225 104.102 356.881 104.102 cv
358.537 104.102 359.881 102.758 359.881 101.102 cv
@
355.321 101.102 mo
355.321 99.4463 353.977 98.1021 352.321 98.1021 cv
350.665 98.1021 349.321 99.4463 349.321 101.102 cv
349.321 102.758 350.665 104.102 352.321 104.102 cv
353.977 104.102 355.321 102.758 355.321 101.102 cv
@
350.521 101.102 mo
350.521 99.4463 349.177 98.1021 347.521 98.1021 cv
345.865 98.1021 344.521 99.4463 344.521 101.102 cv
344.521 102.758 345.865 104.102 347.521 104.102 cv
349.177 104.102 350.521 102.758 350.521 101.102 cv
@
345.961 101.102 mo
345.961 99.4463 344.617 98.1021 342.961 98.1021 cv
341.305 98.1021 339.961 99.4463 339.961 101.102 cv
339.961 102.758 341.305 104.102 342.961 104.102 cv
344.617 104.102 345.961 102.758 345.961 101.102 cv
@
341.4 100.622 mo
341.4 98.9658 340.057 97.6221 338.4 97.6221 cv
336.745 97.6221 335.4 98.9658 335.4 100.622 cv
335.4 102.278 336.745 103.622 338.4 103.622 cv
340.057 103.622 341.4 102.278 341.4 100.622 cv
@
336.601 100.622 mo
336.601 98.9658 335.257 97.6221 333.601 97.6221 cv
331.945 97.6221 330.601 98.9658 330.601 100.622 cv
330.601 102.278 331.945 103.622 333.601 103.622 cv
335.257 103.622 336.601 102.278 336.601 100.622 cv
@
332.041 99.4219 mo
332.041 97.7661 330.697 96.4219 329.041 96.4219 cv
327.385 96.4219 326.041 97.7661 326.041 99.4219 cv
326.041 101.078 327.385 102.422 329.041 102.422 cv
330.697 102.422 332.041 101.078 332.041 99.4219 cv
@
327.48 98.9419 mo
327.48 97.2861 326.137 95.9419 324.48 95.9419 cv
322.825 95.9419 321.48 97.2861 321.48 98.9419 cv
321.48 100.598 322.825 101.942 324.48 101.942 cv
326.137 101.942 327.48 100.598 327.48 98.9419 cv
@
322.681 97.6221 mo
322.681 95.9658 321.337 94.6221 319.681 94.6221 cv
318.024 94.6221 316.681 95.9658 316.681 97.6221 cv
316.681 99.2778 318.024 100.622 319.681 100.622 cv
321.337 100.622 322.681 99.2778 322.681 97.6221 cv
@
318.121 95.582 mo
318.121 93.9258 316.777 92.582 315.121 92.582 cv
313.465 92.582 312.121 93.9258 312.121 95.582 cv
312.121 97.2383 313.465 98.582 315.121 98.582 cv
316.777 98.582 318.121 97.2383 318.121 95.582 cv
@
313.321 94.3818 mo
313.321 92.7261 311.977 91.3818 310.321 91.3818 cv
308.665 91.3818 307.321 92.7261 307.321 94.3818 cv
307.321 96.0381 308.665 97.3818 310.321 97.3818 cv
311.977 97.3818 313.321 96.0381 313.321 94.3818 cv
@
308.881 92.2222 mo
308.881 90.5659 307.537 89.2222 305.881 89.2222 cv
304.225 89.2222 302.881 90.5659 302.881 92.2222 cv
302.881 93.8779 304.225 95.2222 305.881 95.2222 cv
307.537 95.2222 308.881 93.8779 308.881 92.2222 cv
@
304.201 90.062 mo
304.201 88.4063 302.856 87.062 301.201 87.062 cv
299.545 87.062 298.201 88.4063 298.201 90.062 cv
298.201 91.7183 299.545 93.062 301.201 93.062 cv
302.856 93.062 304.201 91.7183 304.201 90.062 cv
@
299.641 86.4619 mo
299.641 84.8062 298.297 83.4619 296.641 83.4619 cv
294.984 83.4619 293.641 84.8062 293.641 86.4619 cv
293.641 88.1182 294.984 89.4619 296.641 89.4619 cv
298.297 89.4619 299.641 88.1182 299.641 86.4619 cv
@
294.841 84.062 mo
294.841 82.4063 293.497 81.062 291.841 81.062 cv
290.185 81.062 288.841 82.4063 288.841 84.062 cv
288.841 85.7183 290.185 87.062 291.841 87.062 cv
293.497 87.062 294.841 85.7183 294.841 84.062 cv
@
290.041 79.2622 mo
290.041 77.606 288.697 76.2622 287.041 76.2622 cv
285.385 76.2622 284.041 77.606 284.041 79.2622 cv
284.041 80.918 285.385 82.2622 287.041 82.2622 cv
288.697 82.2622 290.041 80.918 290.041 79.2622 cv
@
285.721 73.6221 mo
285.721 71.9658 284.377 70.6221 282.721 70.6221 cv
281.065 70.6221 279.721 71.9658 279.721 73.6221 cv
279.721 75.2778 281.065 76.6221 282.721 76.6221 cv
284.377 76.6221 285.721 75.2778 285.721 73.6221 cv
@
280.921 70.6221 mo
280.921 68.9658 279.577 67.6221 277.921 67.6221 cv
276.265 67.6221 274.921 68.9658 274.921 70.6221 cv
274.921 72.2778 276.265 73.6221 277.921 73.6221 cv
279.577 73.6221 280.921 72.2778 280.921 70.6221 cv
@
276.361 64.6221 mo
276.361 62.9658 275.017 61.6221 273.361 61.6221 cv
271.705 61.6221 270.361 62.9658 270.361 64.6221 cv
270.361 66.2778 271.705 67.6221 273.361 67.6221 cv
275.017 67.6221 276.361 66.2778 276.361 64.6221 cv
@
271.561 60.542 mo
271.561 58.8862 270.217 57.542 268.561 57.542 cv
266.905 57.542 265.561 58.8862 265.561 60.542 cv
265.561 62.1982 266.905 63.542 268.561 63.542 cv
270.217 63.542 271.561 62.1982 271.561 60.542 cv
@
266.881 55.022 mo
266.881 53.3662 265.537 52.022 263.881 52.022 cv
262.225 52.022 260.881 53.3662 260.881 55.022 cv
260.881 56.6782 262.225 58.022 263.881 58.022 cv
265.537 58.022 266.881 56.6782 266.881 55.022 cv
@
262.441 51.6621 mo
262.441 50.0059 261.097 48.6621 259.441 48.6621 cv
257.785 48.6621 256.441 50.0059 256.441 51.6621 cv
256.441 53.3179 257.785 54.6621 259.441 54.6621 cv
261.097 54.6621 262.441 53.3179 262.441 51.6621 cv
@
257.641 58.3818 mo
257.641 56.7261 256.297 55.3818 254.641 55.3818 cv
252.985 55.3818 251.641 56.7261 251.641 58.3818 cv
251.641 60.0381 252.985 61.3818 254.641 61.3818 cv
256.297 61.3818 257.641 60.0381 257.641 58.3818 cv
@
253.081 67.022 mo
253.081 65.3662 251.737 64.022 250.081 64.022 cv
248.425 64.022 247.081 65.3662 247.081 67.022 cv
247.081 68.6782 248.425 70.022 250.081 70.022 cv
251.737 70.022 253.081 68.6782 253.081 67.022 cv
@
248.281 67.022 mo
248.281 65.3662 246.937 64.022 245.281 64.022 cv
243.625 64.022 242.281 65.3662 242.281 67.022 cv
242.281 68.6782 243.625 70.022 245.281 70.022 cv
246.937 70.022 248.281 68.6782 248.281 67.022 cv
@
243.721 70.1421 mo
243.721 68.4858 242.377 67.1421 240.721 67.1421 cv
239.065 67.1421 237.721 68.4858 237.721 70.1421 cv
237.721 71.7979 239.065 73.1421 240.721 73.1421 cv
242.377 73.1421 243.721 71.7979 243.721 70.1421 cv
@
239.161 70.6221 mo
239.161 68.9658 237.817 67.6221 236.161 67.6221 cv
234.505 67.6221 233.161 68.9658 233.161 70.6221 cv
233.161 72.2778 234.505 73.6221 236.161 73.6221 cv
237.817 73.6221 239.161 72.2778 239.161 70.6221 cv
@
234.361 72.7822 mo
234.361 71.126 233.017 69.7822 231.361 69.7822 cv
229.705 69.7822 228.361 71.126 228.361 72.7822 cv
228.361 74.438 229.705 75.7822 231.361 75.7822 cv
233.017 75.7822 234.361 74.438 234.361 72.7822 cv
@
229.801 72.3022 mo
229.801 70.646 228.457 69.3022 226.801 69.3022 cv
225.145 69.3022 223.801 70.646 223.801 72.3022 cv
223.801 73.958 225.145 75.3022 226.801 75.3022 cv
228.457 75.3022 229.801 73.958 229.801 72.3022 cv
@
225.241 74.4619 mo
225.241 72.8062 223.897 71.4619 222.241 71.4619 cv
220.585 71.4619 219.241 72.8062 219.241 74.4619 cv
219.241 76.1182 220.585 77.4619 222.241 77.4619 cv
223.897 77.4619 225.241 76.1182 225.241 74.4619 cv
@
220.681 73.6221 mo
220.681 71.9658 219.337 70.6221 217.681 70.6221 cv
216.025 70.6221 214.681 71.9658 214.681 73.6221 cv
214.681 75.2778 216.025 76.6221 217.681 76.6221 cv
219.337 76.6221 220.681 75.2778 220.681 73.6221 cv
@
215.881 75.1821 mo
215.881 73.5259 214.537 72.1821 212.881 72.1821 cv
211.225 72.1821 209.881 73.5259 209.881 75.1821 cv
209.881 76.8379 211.225 78.1821 212.881 78.1821 cv
214.537 78.1821 215.881 76.8379 215.881 75.1821 cv
@
364.681 101.102 mo
364.681 99.4463 363.337 98.1021 361.681 98.1021 cv
360.024 98.1021 358.681 99.4463 358.681 101.102 cv
358.681 102.758 360.024 104.102 361.681 104.102 cv
363.337 104.102 364.681 102.758 364.681 101.102 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 101.102 mo
359.881 99.4463 358.537 98.1021 356.881 98.1021 cv
355.225 98.1021 353.881 99.4463 353.881 101.102 cv
353.881 102.758 355.225 104.102 356.881 104.102 cv
358.537 104.102 359.881 102.758 359.881 101.102 cv
ef
355.321 101.102 mo
355.321 99.4463 353.977 98.1021 352.321 98.1021 cv
350.665 98.1021 349.321 99.4463 349.321 101.102 cv
349.321 102.758 350.665 104.102 352.321 104.102 cv
353.977 104.102 355.321 102.758 355.321 101.102 cv
ef
350.521 101.102 mo
350.521 99.4463 349.177 98.1021 347.521 98.1021 cv
345.865 98.1021 344.521 99.4463 344.521 101.102 cv
344.521 102.758 345.865 104.102 347.521 104.102 cv
349.177 104.102 350.521 102.758 350.521 101.102 cv
ef
345.961 101.102 mo
345.961 99.4463 344.617 98.1021 342.961 98.1021 cv
341.305 98.1021 339.961 99.4463 339.961 101.102 cv
339.961 102.758 341.305 104.102 342.961 104.102 cv
344.617 104.102 345.961 102.758 345.961 101.102 cv
ef
341.4 101.102 mo
341.4 99.4463 340.057 98.1021 338.4 98.1021 cv
336.745 98.1021 335.4 99.4463 335.4 101.102 cv
335.4 102.758 336.745 104.102 338.4 104.102 cv
340.057 104.102 341.4 102.758 341.4 101.102 cv
ef
336.601 100.862 mo
336.601 99.2061 335.257 97.8623 333.601 97.8623 cv
331.945 97.8623 330.601 99.2061 330.601 100.862 cv
330.601 102.518 331.945 103.862 333.601 103.862 cv
335.257 103.862 336.601 102.518 336.601 100.862 cv
ef
332.041 101.102 mo
332.041 99.4463 330.697 98.1021 329.041 98.1021 cv
327.385 98.1021 326.041 99.4463 326.041 101.102 cv
326.041 102.758 327.385 104.102 329.041 104.102 cv
330.697 104.102 332.041 102.758 332.041 101.102 cv
ef
327.48 101.102 mo
327.48 99.4463 326.137 98.1021 324.48 98.1021 cv
322.825 98.1021 321.48 99.4463 321.48 101.102 cv
321.48 102.758 322.825 104.102 324.48 104.102 cv
326.137 104.102 327.48 102.758 327.48 101.102 cv
ef
322.681 99.9019 mo
322.681 98.2461 321.337 96.9019 319.681 96.9019 cv
318.024 96.9019 316.681 98.2461 316.681 99.9019 cv
316.681 101.558 318.024 102.902 319.681 102.902 cv
321.337 102.902 322.681 101.558 322.681 99.9019 cv
ef
318.121 100.142 mo
318.121 98.4858 316.777 97.1421 315.121 97.1421 cv
313.465 97.1421 312.121 98.4858 312.121 100.142 cv
312.121 101.798 313.465 103.142 315.121 103.142 cv
316.777 103.142 318.121 101.798 318.121 100.142 cv
ef
313.321 99.9019 mo
313.321 98.2461 311.977 96.9019 310.321 96.9019 cv
308.665 96.9019 307.321 98.2461 307.321 99.9019 cv
307.321 101.558 308.665 102.902 310.321 102.902 cv
311.977 102.902 313.321 101.558 313.321 99.9019 cv
ef
308.881 98.7021 mo
308.881 97.0459 307.537 95.7021 305.881 95.7021 cv
304.225 95.7021 302.881 97.0459 302.881 98.7021 cv
302.881 100.358 304.225 101.702 305.881 101.702 cv
307.537 101.702 308.881 100.358 308.881 98.7021 cv
ef
304.201 98.2222 mo
304.201 96.5659 302.856 95.2222 301.201 95.2222 cv
299.545 95.2222 298.201 96.5659 298.201 98.2222 cv
298.201 99.8779 299.545 101.222 301.201 101.222 cv
302.856 101.222 304.201 99.8779 304.201 98.2222 cv
ef
299.641 96.542 mo
299.641 94.8862 298.297 93.542 296.641 93.542 cv
294.984 93.542 293.641 94.8862 293.641 96.542 cv
293.641 98.1982 294.984 99.542 296.641 99.542 cv
298.297 99.542 299.641 98.1982 299.641 96.542 cv
ef
294.841 93.6621 mo
294.841 92.0059 293.497 90.6621 291.841 90.6621 cv
290.185 90.6621 288.841 92.0059 288.841 93.6621 cv
288.841 95.3179 290.185 96.6621 291.841 96.6621 cv
293.497 96.6621 294.841 95.3179 294.841 93.6621 cv
ef
290.041 91.022 mo
290.041 89.3662 288.697 88.022 287.041 88.022 cv
285.385 88.022 284.041 89.3662 284.041 91.022 cv
284.041 92.6782 285.385 94.022 287.041 94.022 cv
288.697 94.022 290.041 92.6782 290.041 91.022 cv
ef
285.721 89.8223 mo
285.721 88.166 284.377 86.8223 282.721 86.8223 cv
281.065 86.8223 279.721 88.166 279.721 89.8223 cv
279.721 91.478 281.065 92.8223 282.721 92.8223 cv
284.377 92.8223 285.721 91.478 285.721 89.8223 cv
ef
280.921 86.4619 mo
280.921 84.8062 279.577 83.4619 277.921 83.4619 cv
276.265 83.4619 274.921 84.8062 274.921 86.4619 cv
274.921 88.1182 276.265 89.4619 277.921 89.4619 cv
279.577 89.4619 280.921 88.1182 280.921 86.4619 cv
ef
276.361 80.9419 mo
276.361 79.2861 275.017 77.9419 273.361 77.9419 cv
271.705 77.9419 270.361 79.2861 270.361 80.9419 cv
270.361 82.5981 271.705 83.9419 273.361 83.9419 cv
275.017 83.9419 276.361 82.5981 276.361 80.9419 cv
ef
271.561 75.4219 mo
271.561 73.7661 270.217 72.4219 268.561 72.4219 cv
266.905 72.4219 265.561 73.7661 265.561 75.4219 cv
265.561 77.0781 266.905 78.4219 268.561 78.4219 cv
270.217 78.4219 271.561 77.0781 271.561 75.4219 cv
ef
266.881 70.6221 mo
266.881 68.9658 265.537 67.6221 263.881 67.6221 cv
262.225 67.6221 260.881 68.9658 260.881 70.6221 cv
260.881 72.2778 262.225 73.6221 263.881 73.6221 cv
265.537 73.6221 266.881 72.2778 266.881 70.6221 cv
ef
262.441 60.542 mo
262.441 58.8862 261.097 57.542 259.441 57.542 cv
257.785 57.542 256.441 58.8862 256.441 60.542 cv
256.441 62.1982 257.785 63.542 259.441 63.542 cv
261.097 63.542 262.441 62.1982 262.441 60.542 cv
ef
257.641 50.4619 mo
257.641 48.8062 256.297 47.4619 254.641 47.4619 cv
252.985 47.4619 251.641 48.8062 251.641 50.4619 cv
251.641 52.1182 252.985 53.4619 254.641 53.4619 cv
256.297 53.4619 257.641 52.1182 257.641 50.4619 cv
ef
253.081 51.6621 mo
253.081 50.0059 251.737 48.6621 250.081 48.6621 cv
248.425 48.6621 247.081 50.0059 247.081 51.6621 cv
247.081 53.3179 248.425 54.6621 250.081 54.6621 cv
251.737 54.6621 253.081 53.3179 253.081 51.6621 cv
ef
248.281 57.6621 mo
248.281 56.0059 246.937 54.6621 245.281 54.6621 cv
243.625 54.6621 242.281 56.0059 242.281 57.6621 cv
242.281 59.3179 243.625 60.6621 245.281 60.6621 cv
246.937 60.6621 248.281 59.3179 248.281 57.6621 cv
ef
243.721 61.6221 mo
243.721 59.9658 242.377 58.6221 240.721 58.6221 cv
239.065 58.6221 237.721 59.9658 237.721 61.6221 cv
237.721 63.2783 239.065 64.6221 240.721 64.6221 cv
242.377 64.6221 243.721 63.2783 243.721 61.6221 cv
ef
239.161 62.4619 mo
239.161 60.8062 237.817 59.4619 236.161 59.4619 cv
234.505 59.4619 233.161 60.8062 233.161 62.4619 cv
233.161 64.1182 234.505 65.4619 236.161 65.4619 cv
237.817 65.4619 239.161 64.1182 239.161 62.4619 cv
ef
234.361 52.8623 mo
234.361 51.2061 233.017 49.8623 231.361 49.8623 cv
229.705 49.8623 228.361 51.2061 228.361 52.8623 cv
228.361 54.5181 229.705 55.8623 231.361 55.8623 cv
233.017 55.8623 234.361 54.5181 234.361 52.8623 cv
ef
229.801 53.1021 mo
229.801 51.4463 228.457 50.1021 226.801 50.1021 cv
225.145 50.1021 223.801 51.4463 223.801 53.1021 cv
223.801 54.7578 225.145 56.1021 226.801 56.1021 cv
228.457 56.1021 229.801 54.7578 229.801 53.1021 cv
ef
225.241 50.7021 mo
225.241 49.0459 223.897 47.7021 222.241 47.7021 cv
220.585 47.7021 219.241 49.0459 219.241 50.7021 cv
219.241 52.3579 220.585 53.7021 222.241 53.7021 cv
223.897 53.7021 225.241 52.3579 225.241 50.7021 cv
ef
220.681 48.3018 mo
220.681 46.646 219.337 45.3018 217.681 45.3018 cv
216.025 45.3018 214.681 46.646 214.681 48.3018 cv
214.681 49.958 216.025 51.3018 217.681 51.3018 cv
219.337 51.3018 220.681 49.958 220.681 48.3018 cv
ef
215.881 48.3018 mo
215.881 46.646 214.537 45.3018 212.881 45.3018 cv
211.225 45.3018 209.881 46.646 209.881 48.3018 cv
209.881 49.958 211.225 51.3018 212.881 51.3018 cv
214.537 51.3018 215.881 49.958 215.881 48.3018 cv
ef
361.361 108.622 mo
362.361 107.622 li
362.361 11.8721 li
511.861 11.8721 li
512.861 10.8721 li
361.361 10.8721 li
361.361 108.622 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
361.361 108.622 mo
512.861 108.622 li
361.361 108.622 mo
361.361 10.8721 li
512.861 10.8721 li
512.861 108.622 li
361.361 108.622 li
cp
0 0 0 1 cmyk
@
507.111 107.122 mo
507.111 108.622 li
501.111 105.872 mo
501.111 108.622 li
501.111 105.872 mo
501.111 108.622 li
495.361 107.122 mo
495.361 108.622 li
489.611 107.122 mo
489.611 108.622 li
483.611 107.122 mo
483.611 108.622 li
477.861 105.872 mo
477.861 108.622 li
472.111 107.122 mo
472.111 108.622 li
466.361 107.122 mo
466.361 108.622 li
460.361 107.122 mo
460.361 108.622 li
454.611 105.872 mo
454.611 108.622 li
448.861 107.122 mo
448.861 108.622 li
442.861 107.122 mo
442.861 108.622 li
437.111 107.122 mo
437.111 108.622 li
431.361 105.872 mo
431.361 108.622 li
425.361 107.122 mo
425.361 108.622 li
419.611 107.122 mo
419.611 108.622 li
413.861 107.122 mo
413.861 108.622 li
407.861 105.872 mo
407.861 108.622 li
402.111 107.122 mo
402.111 108.622 li
396.361 107.122 mo
396.361 108.622 li
390.611 107.122 mo
390.611 108.622 li
384.611 105.872 mo
384.611 108.622 li
378.861 107.122 mo
378.861 108.622 li
373.111 107.122 mo
373.111 108.622 li
367.111 107.122 mo
367.111 108.622 li
361.361 105.872 mo
361.361 108.622 li
@
361.361 108.622 mo
361.361 10.8721 li
@
365.861 10.8721 mo
361.361 10.8721 li
363.611 107.122 mo
361.361 107.122 li
363.611 104.122 mo
361.361 104.122 li
365.861 101.122 mo
361.361 101.122 li
365.861 10.8721 mo
361.361 10.8721 li
363.611 13.8721 mo
361.361 13.8721 li
363.611 16.8721 mo
361.361 16.8721 li
363.611 19.8721 mo
361.361 19.8721 li
363.611 22.8721 mo
361.361 22.8721 li
365.861 25.8721 mo
361.361 25.8721 li
363.611 28.8721 mo
361.361 28.8721 li
363.611 31.8721 mo
361.361 31.8721 li
363.611 34.8721 mo
361.361 34.8721 li
363.611 37.8721 mo
361.361 37.8721 li
365.861 40.8721 mo
361.361 40.8721 li
363.611 43.8721 mo
361.361 43.8721 li
363.611 47.1221 mo
361.361 47.1221 li
363.611 50.1221 mo
361.361 50.1221 li
363.611 53.1221 mo
361.361 53.1221 li
365.861 56.1221 mo
361.361 56.1221 li
363.611 59.1221 mo
361.361 59.1221 li
363.611 62.1221 mo
361.361 62.1221 li
363.611 65.1221 mo
361.361 65.1221 li
363.611 68.1221 mo
361.361 68.1221 li
365.861 71.1221 mo
361.361 71.1221 li
363.611 74.1221 mo
361.361 74.1221 li
363.611 77.1221 mo
361.361 77.1221 li
363.611 80.1221 mo
361.361 80.1221 li
363.611 83.1221 mo
361.361 83.1221 li
365.861 86.1221 mo
361.361 86.1221 li
363.611 89.1221 mo
361.361 89.1221 li
363.611 92.1221 mo
361.361 92.1221 li
363.611 95.1221 mo
361.361 95.1221 li
363.611 98.1221 mo
361.361 98.1221 li
365.861 101.122 mo
361.361 101.122 li
@
515.781 101.102 mo
515.781 99.4463 514.438 98.1021 512.781 98.1021 cv
511.125 98.1021 509.781 99.4463 509.781 101.102 cv
509.781 102.758 511.125 104.102 512.781 104.102 cv
514.438 104.102 515.781 102.758 515.781 101.102 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 101.102 mo
511.222 99.4463 509.877 98.1021 508.222 98.1021 cv
506.565 98.1021 505.222 99.4463 505.222 101.102 cv
505.222 102.758 506.565 104.102 508.222 104.102 cv
509.877 104.102 511.222 102.758 511.222 101.102 cv
ef
506.661 101.102 mo
506.661 99.4463 505.317 98.1021 503.661 98.1021 cv
502.005 98.1021 500.661 99.4463 500.661 101.102 cv
500.661 102.758 502.005 104.102 503.661 104.102 cv
505.317 104.102 506.661 102.758 506.661 101.102 cv
ef
501.861 101.102 mo
501.861 99.4463 500.518 98.1021 498.861 98.1021 cv
497.205 98.1021 495.861 99.4463 495.861 101.102 cv
495.861 102.758 497.205 104.102 498.861 104.102 cv
500.518 104.102 501.861 102.758 501.861 101.102 cv
ef
497.062 101.342 mo
497.062 99.686 495.718 98.3418 494.062 98.3418 cv
492.405 98.3418 491.062 99.686 491.062 101.342 cv
491.062 102.998 492.405 104.342 494.062 104.342 cv
495.718 104.342 497.062 102.998 497.062 101.342 cv
ef
492.501 100.862 mo
492.501 99.2061 491.157 97.8623 489.501 97.8623 cv
487.846 97.8623 486.501 99.2061 486.501 100.862 cv
486.501 102.518 487.846 103.862 489.501 103.862 cv
491.157 103.862 492.501 102.518 492.501 100.862 cv
ef
487.941 101.102 mo
487.941 99.4463 486.598 98.1021 484.941 98.1021 cv
483.285 98.1021 481.941 99.4463 481.941 101.102 cv
481.941 102.758 483.285 104.102 484.941 104.102 cv
486.598 104.102 487.941 102.758 487.941 101.102 cv
ef
483.142 101.102 mo
483.142 99.4463 481.797 98.1021 480.142 98.1021 cv
478.485 98.1021 477.142 99.4463 477.142 101.102 cv
477.142 102.758 478.485 104.102 480.142 104.102 cv
481.797 104.102 483.142 102.758 483.142 101.102 cv
ef
478.581 100.862 mo
478.581 99.2061 477.237 97.8623 475.581 97.8623 cv
473.926 97.8623 472.581 99.2061 472.581 100.862 cv
472.581 102.518 473.926 103.862 475.581 103.862 cv
477.237 103.862 478.581 102.518 478.581 100.862 cv
ef
473.781 100.142 mo
473.781 98.4858 472.438 97.1421 470.781 97.1421 cv
469.125 97.1421 467.781 98.4858 467.781 100.142 cv
467.781 101.798 469.125 103.142 470.781 103.142 cv
472.438 103.142 473.781 101.798 473.781 100.142 cv
ef
469.461 99.9019 mo
469.461 98.2461 468.117 96.9019 466.461 96.9019 cv
464.806 96.9019 463.461 98.2461 463.461 99.9019 cv
463.461 101.558 464.806 102.902 466.461 102.902 cv
468.117 102.902 469.461 101.558 469.461 99.9019 cv
ef
464.661 99.1821 mo
464.661 97.5259 463.317 96.1821 461.661 96.1821 cv
460.005 96.1821 458.661 97.5259 458.661 99.1821 cv
458.661 100.838 460.005 102.182 461.661 102.182 cv
463.317 102.182 464.661 100.838 464.661 99.1821 cv
ef
459.861 98.4619 mo
459.861 96.8062 458.518 95.4619 456.861 95.4619 cv
455.205 95.4619 453.861 96.8062 453.861 98.4619 cv
453.861 100.118 455.205 101.462 456.861 101.462 cv
458.518 101.462 459.861 100.118 459.861 98.4619 cv
ef
455.302 96.7822 mo
455.302 95.126 453.957 93.7822 452.302 93.7822 cv
450.646 93.7822 449.302 95.126 449.302 96.7822 cv
449.302 98.438 450.646 99.7822 452.302 99.7822 cv
453.957 99.7822 455.302 98.438 455.302 96.7822 cv
ef
450.501 95.582 mo
450.501 93.9258 449.157 92.582 447.501 92.582 cv
445.846 92.582 444.501 93.9258 444.501 95.582 cv
444.501 97.2383 445.846 98.582 447.501 98.582 cv
449.157 98.582 450.501 97.2383 450.501 95.582 cv
ef
445.941 94.1421 mo
445.941 92.4858 444.598 91.1421 442.941 91.1421 cv
441.285 91.1421 439.941 92.4858 439.941 94.1421 cv
439.941 95.7979 441.285 97.1421 442.941 97.1421 cv
444.598 97.1421 445.941 95.7979 445.941 94.1421 cv
ef
441.381 89.582 mo
441.381 87.9263 440.037 86.582 438.381 86.582 cv
436.726 86.582 435.381 87.9263 435.381 89.582 cv
435.381 91.2383 436.726 92.582 438.381 92.582 cv
440.037 92.582 441.381 91.2383 441.381 89.582 cv
ef
436.581 86.4619 mo
436.581 84.8062 435.237 83.4619 433.581 83.4619 cv
431.926 83.4619 430.581 84.8062 430.581 86.4619 cv
430.581 88.1182 431.926 89.4619 433.581 89.4619 cv
435.237 89.4619 436.581 88.1182 436.581 86.4619 cv
ef
431.781 83.582 mo
431.781 81.9263 430.438 80.582 428.781 80.582 cv
427.125 80.582 425.781 81.9263 425.781 83.582 cv
425.781 85.2383 427.125 86.582 428.781 86.582 cv
430.438 86.582 431.781 85.2383 431.781 83.582 cv
ef
427.461 79.2622 mo
427.461 77.606 426.117 76.2622 424.461 76.2622 cv
422.806 76.2622 421.461 77.606 421.461 79.2622 cv
421.461 80.918 422.806 82.2622 424.461 82.2622 cv
426.117 82.2622 427.461 80.918 427.461 79.2622 cv
ef
422.661 73.2622 mo
422.661 71.606 421.317 70.2622 419.661 70.2622 cv
418.005 70.2622 416.661 71.606 416.661 73.2622 cv
416.661 74.918 418.005 76.2622 419.661 76.2622 cv
421.317 76.2622 422.661 74.918 422.661 73.2622 cv
ef
417.861 65.8223 mo
417.861 64.166 416.518 62.8223 414.861 62.8223 cv
413.205 62.8223 411.861 64.166 411.861 65.8223 cv
411.861 67.478 413.205 68.8223 414.861 68.8223 cv
416.518 68.8223 417.861 67.478 417.861 65.8223 cv
ef
413.302 57.4219 mo
413.302 55.7661 411.957 54.4219 410.302 54.4219 cv
408.646 54.4219 407.302 55.7661 407.302 57.4219 cv
407.302 59.0781 408.646 60.4219 410.302 60.4219 cv
411.957 60.4219 413.302 59.0781 413.302 57.4219 cv
ef
408.501 46.8623 mo
408.501 45.2061 407.157 43.8623 405.501 43.8623 cv
403.846 43.8623 402.501 45.2061 402.501 46.8623 cv
402.501 48.5181 403.846 49.8623 405.501 49.8623 cv
407.157 49.8623 408.501 48.5181 408.501 46.8623 cv
ef
404.182 50.2222 mo
404.182 48.5659 402.837 47.2222 401.182 47.2222 cv
399.525 47.2222 398.182 48.5659 398.182 50.2222 cv
398.182 51.8779 399.525 53.2222 401.182 53.2222 cv
402.837 53.2222 404.182 51.8779 404.182 50.2222 cv
ef
399.381 54.3018 mo
399.381 52.646 398.037 51.3018 396.381 51.3018 cv
394.726 51.3018 393.381 52.646 393.381 54.3018 cv
393.381 55.958 394.726 57.3018 396.381 57.3018 cv
398.037 57.3018 399.381 55.958 399.381 54.3018 cv
ef
394.581 56.9419 mo
394.581 55.2861 393.237 53.9419 391.581 53.9419 cv
389.926 53.9419 388.581 55.2861 388.581 56.9419 cv
388.581 58.5981 389.926 59.9419 391.581 59.9419 cv
393.237 59.9419 394.581 58.5981 394.581 56.9419 cv
ef
390.021 57.6621 mo
390.021 56.0059 388.678 54.6621 387.021 54.6621 cv
385.365 54.6621 384.021 56.0059 384.021 57.6621 cv
384.021 59.3179 385.365 60.6621 387.021 60.6621 cv
388.678 60.6621 390.021 59.3179 390.021 57.6621 cv
ef
385.461 51.9019 mo
385.461 50.2461 384.117 48.9019 382.461 48.9019 cv
380.806 48.9019 379.461 50.2461 379.461 51.9019 cv
379.461 53.5581 380.806 54.9019 382.461 54.9019 cv
384.117 54.9019 385.461 53.5581 385.461 51.9019 cv
ef
380.661 48.3018 mo
380.661 46.646 379.317 45.3018 377.661 45.3018 cv
376.005 45.3018 374.661 46.646 374.661 48.3018 cv
374.661 49.958 376.005 51.3018 377.661 51.3018 cv
379.317 51.3018 380.661 49.958 380.661 48.3018 cv
ef
376.102 47.3418 mo
376.102 45.686 374.758 44.3418 373.102 44.3418 cv
371.445 44.3418 370.102 45.686 370.102 47.3418 cv
370.102 48.998 371.445 50.3418 373.102 50.3418 cv
374.758 50.3418 376.102 48.998 376.102 47.3418 cv
ef
371.302 56.9419 mo
371.302 55.2861 369.957 53.9419 368.302 53.9419 cv
366.646 53.9419 365.302 55.2861 365.302 56.9419 cv
365.302 58.5981 366.646 59.9419 368.302 59.9419 cv
369.957 59.9419 371.302 58.5981 371.302 56.9419 cv
ef
366.501 64.8623 mo
366.501 63.2061 365.157 61.8623 363.501 61.8623 cv
361.846 61.8623 360.501 63.2061 360.501 64.8623 cv
360.501 66.5181 361.846 67.8623 363.501 67.8623 cv
365.157 67.8623 366.501 66.5181 366.501 64.8623 cv
ef
361.361 101.122 mo
512.861 101.122 li
0 0 0 1 cmyk
@
515.781 101.102 mo
515.781 99.4463 514.438 98.1021 512.781 98.1021 cv
511.125 98.1021 509.781 99.4463 509.781 101.102 cv
509.781 102.758 511.125 104.102 512.781 104.102 cv
514.438 104.102 515.781 102.758 515.781 101.102 cv
.878019 .337896 1 .281529 cmyk
@
511.222 101.102 mo
511.222 99.4463 509.877 98.1021 508.222 98.1021 cv
506.565 98.1021 505.222 99.4463 505.222 101.102 cv
505.222 102.758 506.565 104.102 508.222 104.102 cv
509.877 104.102 511.222 102.758 511.222 101.102 cv
@
506.661 101.102 mo
506.661 99.4463 505.317 98.1021 503.661 98.1021 cv
502.005 98.1021 500.661 99.4463 500.661 101.102 cv
500.661 102.758 502.005 104.102 503.661 104.102 cv
505.317 104.102 506.661 102.758 506.661 101.102 cv
@
501.861 101.102 mo
501.861 99.4463 500.518 98.1021 498.861 98.1021 cv
497.205 98.1021 495.861 99.4463 495.861 101.102 cv
495.861 102.758 497.205 104.102 498.861 104.102 cv
500.518 104.102 501.861 102.758 501.861 101.102 cv
@
497.062 100.862 mo
497.062 99.2061 495.718 97.8623 494.062 97.8623 cv
492.405 97.8623 491.062 99.2061 491.062 100.862 cv
491.062 102.518 492.405 103.862 494.062 103.862 cv
495.718 103.862 497.062 102.518 497.062 100.862 cv
@
492.501 100.622 mo
492.501 98.9658 491.157 97.6221 489.501 97.6221 cv
487.846 97.6221 486.501 98.9658 486.501 100.622 cv
486.501 102.278 487.846 103.622 489.501 103.622 cv
491.157 103.622 492.501 102.278 492.501 100.622 cv
@
487.941 100.142 mo
487.941 98.4858 486.598 97.1421 484.941 97.1421 cv
483.285 97.1421 481.941 98.4858 481.941 100.142 cv
481.941 101.798 483.285 103.142 484.941 103.142 cv
486.598 103.142 487.941 101.798 487.941 100.142 cv
@
483.142 99.4219 mo
483.142 97.7661 481.797 96.4219 480.142 96.4219 cv
478.485 96.4219 477.142 97.7661 477.142 99.4219 cv
477.142 101.078 478.485 102.422 480.142 102.422 cv
481.797 102.422 483.142 101.078 483.142 99.4219 cv
@
478.581 98.9419 mo
478.581 97.2861 477.237 95.9419 475.581 95.9419 cv
473.926 95.9419 472.581 97.2861 472.581 98.9419 cv
472.581 100.598 473.926 101.942 475.581 101.942 cv
477.237 101.942 478.581 100.598 478.581 98.9419 cv
@
473.781 97.6221 mo
473.781 95.9658 472.438 94.6221 470.781 94.6221 cv
469.125 94.6221 467.781 95.9658 467.781 97.6221 cv
467.781 99.2778 469.125 100.622 470.781 100.622 cv
472.438 100.622 473.781 99.2778 473.781 97.6221 cv
@
469.461 96.062 mo
469.461 94.4063 468.117 93.062 466.461 93.062 cv
464.806 93.062 463.461 94.4063 463.461 96.062 cv
463.461 97.7183 464.806 99.062 466.461 99.062 cv
468.117 99.062 469.461 97.7183 469.461 96.062 cv
@
464.661 94.1421 mo
464.661 92.4858 463.317 91.1421 461.661 91.1421 cv
460.005 91.1421 458.661 92.4858 458.661 94.1421 cv
458.661 95.7979 460.005 97.1421 461.661 97.1421 cv
463.317 97.1421 464.661 95.7979 464.661 94.1421 cv
@
459.861 92.4619 mo
459.861 90.8062 458.518 89.4619 456.861 89.4619 cv
455.205 89.4619 453.861 90.8062 453.861 92.4619 cv
453.861 94.1182 455.205 95.4619 456.861 95.4619 cv
458.518 95.4619 459.861 94.1182 459.861 92.4619 cv
@
455.302 89.3418 mo
455.302 87.686 453.957 86.3418 452.302 86.3418 cv
450.646 86.3418 449.302 87.686 449.302 89.3418 cv
449.302 90.998 450.646 92.3418 452.302 92.3418 cv
453.957 92.3418 455.302 90.998 455.302 89.3418 cv
@
450.501 86.7021 mo
450.501 85.0459 449.157 83.7021 447.501 83.7021 cv
445.846 83.7021 444.501 85.0459 444.501 86.7021 cv
444.501 88.3579 445.846 89.7021 447.501 89.7021 cv
449.157 89.7021 450.501 88.3579 450.501 86.7021 cv
@
445.941 83.3418 mo
445.941 81.686 444.598 80.3418 442.941 80.3418 cv
441.285 80.3418 439.941 81.686 439.941 83.3418 cv
439.941 84.998 441.285 86.3418 442.941 86.3418 cv
444.598 86.3418 445.941 84.998 445.941 83.3418 cv
@
441.381 78.7822 mo
441.381 77.126 440.037 75.7822 438.381 75.7822 cv
436.726 75.7822 435.381 77.126 435.381 78.7822 cv
435.381 80.438 436.726 81.7822 438.381 81.7822 cv
440.037 81.7822 441.381 80.438 441.381 78.7822 cv
@
436.581 74.9419 mo
436.581 73.2861 435.237 71.9419 433.581 71.9419 cv
431.926 71.9419 430.581 73.2861 430.581 74.9419 cv
430.581 76.5981 431.926 77.9419 433.581 77.9419 cv
435.237 77.9419 436.581 76.5981 436.581 74.9419 cv
@
431.781 69.9019 mo
431.781 68.2461 430.438 66.9019 428.781 66.9019 cv
427.125 66.9019 425.781 68.2461 425.781 69.9019 cv
425.781 71.5581 427.125 72.9019 428.781 72.9019 cv
430.438 72.9019 431.781 71.5581 431.781 69.9019 cv
@
427.461 64.1421 mo
427.461 62.4863 426.117 61.1421 424.461 61.1421 cv
422.806 61.1421 421.461 62.4863 421.461 64.1421 cv
421.461 65.7979 422.806 67.1421 424.461 67.1421 cv
426.117 67.1421 427.461 65.7979 427.461 64.1421 cv
@
422.661 59.1021 mo
422.661 57.4463 421.317 56.1021 419.661 56.1021 cv
418.005 56.1021 416.661 57.4463 416.661 59.1021 cv
416.661 60.7578 418.005 62.1021 419.661 62.1021 cv
421.317 62.1021 422.661 60.7578 422.661 59.1021 cv
@
417.861 54.062 mo
417.861 52.4063 416.518 51.062 414.861 51.062 cv
413.205 51.062 411.861 52.4063 411.861 54.062 cv
411.861 55.7178 413.205 57.062 414.861 57.062 cv
416.518 57.062 417.861 55.7178 417.861 54.062 cv
@
413.302 49.9819 mo
413.302 48.3262 411.957 46.9819 410.302 46.9819 cv
408.646 46.9819 407.302 48.3262 407.302 49.9819 cv
407.302 51.6382 408.646 52.9819 410.302 52.9819 cv
411.957 52.9819 413.302 51.6382 413.302 49.9819 cv
@
408.501 55.9819 mo
408.501 54.3262 407.157 52.9819 405.501 52.9819 cv
403.846 52.9819 402.501 54.3262 402.501 55.9819 cv
402.501 57.6382 403.846 58.9819 405.501 58.9819 cv
407.157 58.9819 408.501 57.6382 408.501 55.9819 cv
@
404.182 63.4219 mo
404.182 61.7661 402.837 60.4219 401.182 60.4219 cv
399.525 60.4219 398.182 61.7661 398.182 63.4219 cv
398.182 65.0781 399.525 66.4219 401.182 66.4219 cv
402.837 66.4219 404.182 65.0781 404.182 63.4219 cv
@
399.381 66.062 mo
399.381 64.4063 398.037 63.062 396.381 63.062 cv
394.726 63.062 393.381 64.4063 393.381 66.062 cv
393.381 67.7183 394.726 69.062 396.381 69.062 cv
398.037 69.062 399.381 67.7183 399.381 66.062 cv
@
394.581 68.7021 mo
394.581 67.0459 393.237 65.7021 391.581 65.7021 cv
389.926 65.7021 388.581 67.0459 388.581 68.7021 cv
388.581 70.3579 389.926 71.7021 391.581 71.7021 cv
393.237 71.7021 394.581 70.3579 394.581 68.7021 cv
@
390.021 69.4219 mo
390.021 67.7661 388.678 66.4219 387.021 66.4219 cv
385.365 66.4219 384.021 67.7661 384.021 69.4219 cv
384.021 71.0781 385.365 72.4219 387.021 72.4219 cv
388.678 72.4219 390.021 71.0781 390.021 69.4219 cv
@
385.461 70.6221 mo
385.461 68.9658 384.117 67.6221 382.461 67.6221 cv
380.806 67.6221 379.461 68.9658 379.461 70.6221 cv
379.461 72.2778 380.806 73.6221 382.461 73.6221 cv
384.117 73.6221 385.461 72.2778 385.461 70.6221 cv
@
380.661 71.1021 mo
380.661 69.4463 379.317 68.1021 377.661 68.1021 cv
376.005 68.1021 374.661 69.4463 374.661 71.1021 cv
374.661 72.7578 376.005 74.1021 377.661 74.1021 cv
379.317 74.1021 380.661 72.7578 380.661 71.1021 cv
@
376.102 71.582 mo
376.102 69.9263 374.758 68.582 373.102 68.582 cv
371.445 68.582 370.102 69.9263 370.102 71.582 cv
370.102 73.2383 371.445 74.582 373.102 74.582 cv
374.758 74.582 376.102 73.2383 376.102 71.582 cv
@
371.302 71.8223 mo
371.302 70.166 369.957 68.8223 368.302 68.8223 cv
366.646 68.8223 365.302 70.166 365.302 71.8223 cv
365.302 73.478 366.646 74.8223 368.302 74.8223 cv
369.957 74.8223 371.302 73.478 371.302 71.8223 cv
@
366.501 71.3418 mo
366.501 69.686 365.157 68.3418 363.501 68.3418 cv
361.846 68.3418 360.501 69.686 360.501 71.3418 cv
360.501 72.998 361.846 74.3418 363.501 74.3418 cv
365.157 74.3418 366.501 72.998 366.501 71.3418 cv
@
515.781 101.102 mo
515.781 99.4463 514.438 98.1021 512.781 98.1021 cv
511.125 98.1021 509.781 99.4463 509.781 101.102 cv
509.781 102.758 511.125 104.102 512.781 104.102 cv
514.438 104.102 515.781 102.758 515.781 101.102 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 101.102 mo
511.222 99.4463 509.877 98.1021 508.222 98.1021 cv
506.565 98.1021 505.222 99.4463 505.222 101.102 cv
505.222 102.758 506.565 104.102 508.222 104.102 cv
509.877 104.102 511.222 102.758 511.222 101.102 cv
ef
506.661 101.102 mo
506.661 99.4463 505.317 98.1021 503.661 98.1021 cv
502.005 98.1021 500.661 99.4463 500.661 101.102 cv
500.661 102.758 502.005 104.102 503.661 104.102 cv
505.317 104.102 506.661 102.758 506.661 101.102 cv
ef
501.861 101.102 mo
501.861 99.4463 500.518 98.1021 498.861 98.1021 cv
497.205 98.1021 495.861 99.4463 495.861 101.102 cv
495.861 102.758 497.205 104.102 498.861 104.102 cv
500.518 104.102 501.861 102.758 501.861 101.102 cv
ef
497.062 101.342 mo
497.062 99.686 495.718 98.3418 494.062 98.3418 cv
492.405 98.3418 491.062 99.686 491.062 101.342 cv
491.062 102.998 492.405 104.342 494.062 104.342 cv
495.718 104.342 497.062 102.998 497.062 101.342 cv
ef
492.501 100.862 mo
492.501 99.2061 491.157 97.8623 489.501 97.8623 cv
487.846 97.8623 486.501 99.2061 486.501 100.862 cv
486.501 102.518 487.846 103.862 489.501 103.862 cv
491.157 103.862 492.501 102.518 492.501 100.862 cv
ef
487.941 101.102 mo
487.941 99.4463 486.598 98.1021 484.941 98.1021 cv
483.285 98.1021 481.941 99.4463 481.941 101.102 cv
481.941 102.758 483.285 104.102 484.941 104.102 cv
486.598 104.102 487.941 102.758 487.941 101.102 cv
ef
483.142 101.102 mo
483.142 99.4463 481.797 98.1021 480.142 98.1021 cv
478.485 98.1021 477.142 99.4463 477.142 101.102 cv
477.142 102.758 478.485 104.102 480.142 104.102 cv
481.797 104.102 483.142 102.758 483.142 101.102 cv
ef
478.581 100.862 mo
478.581 99.2061 477.237 97.8623 475.581 97.8623 cv
473.926 97.8623 472.581 99.2061 472.581 100.862 cv
472.581 102.518 473.926 103.862 475.581 103.862 cv
477.237 103.862 478.581 102.518 478.581 100.862 cv
ef
473.781 100.142 mo
473.781 98.4858 472.438 97.1421 470.781 97.1421 cv
469.125 97.1421 467.781 98.4858 467.781 100.142 cv
467.781 101.798 469.125 103.142 470.781 103.142 cv
472.438 103.142 473.781 101.798 473.781 100.142 cv
ef
469.461 99.9019 mo
469.461 98.2461 468.117 96.9019 466.461 96.9019 cv
464.806 96.9019 463.461 98.2461 463.461 99.9019 cv
463.461 101.558 464.806 102.902 466.461 102.902 cv
468.117 102.902 469.461 101.558 469.461 99.9019 cv
ef
464.661 99.1821 mo
464.661 97.5259 463.317 96.1821 461.661 96.1821 cv
460.005 96.1821 458.661 97.5259 458.661 99.1821 cv
458.661 100.838 460.005 102.182 461.661 102.182 cv
463.317 102.182 464.661 100.838 464.661 99.1821 cv
ef
459.861 98.4619 mo
459.861 96.8062 458.518 95.4619 456.861 95.4619 cv
455.205 95.4619 453.861 96.8062 453.861 98.4619 cv
453.861 100.118 455.205 101.462 456.861 101.462 cv
458.518 101.462 459.861 100.118 459.861 98.4619 cv
ef
455.302 96.7822 mo
455.302 95.126 453.957 93.7822 452.302 93.7822 cv
450.646 93.7822 449.302 95.126 449.302 96.7822 cv
449.302 98.438 450.646 99.7822 452.302 99.7822 cv
453.957 99.7822 455.302 98.438 455.302 96.7822 cv
ef
450.501 95.582 mo
450.501 93.9258 449.157 92.582 447.501 92.582 cv
445.846 92.582 444.501 93.9258 444.501 95.582 cv
444.501 97.2383 445.846 98.582 447.501 98.582 cv
449.157 98.582 450.501 97.2383 450.501 95.582 cv
ef
445.941 94.1421 mo
445.941 92.4858 444.598 91.1421 442.941 91.1421 cv
441.285 91.1421 439.941 92.4858 439.941 94.1421 cv
439.941 95.7979 441.285 97.1421 442.941 97.1421 cv
444.598 97.1421 445.941 95.7979 445.941 94.1421 cv
ef
441.381 89.582 mo
441.381 87.9263 440.037 86.582 438.381 86.582 cv
436.726 86.582 435.381 87.9263 435.381 89.582 cv
435.381 91.2383 436.726 92.582 438.381 92.582 cv
440.037 92.582 441.381 91.2383 441.381 89.582 cv
ef
436.581 86.4619 mo
436.581 84.8062 435.237 83.4619 433.581 83.4619 cv
431.926 83.4619 430.581 84.8062 430.581 86.4619 cv
430.581 88.1182 431.926 89.4619 433.581 89.4619 cv
435.237 89.4619 436.581 88.1182 436.581 86.4619 cv
ef
431.781 83.582 mo
431.781 81.9263 430.438 80.582 428.781 80.582 cv
427.125 80.582 425.781 81.9263 425.781 83.582 cv
425.781 85.2383 427.125 86.582 428.781 86.582 cv
430.438 86.582 431.781 85.2383 431.781 83.582 cv
ef
427.461 79.2622 mo
427.461 77.606 426.117 76.2622 424.461 76.2622 cv
422.806 76.2622 421.461 77.606 421.461 79.2622 cv
421.461 80.918 422.806 82.2622 424.461 82.2622 cv
426.117 82.2622 427.461 80.918 427.461 79.2622 cv
ef
422.661 73.2622 mo
422.661 71.606 421.317 70.2622 419.661 70.2622 cv
418.005 70.2622 416.661 71.606 416.661 73.2622 cv
416.661 74.918 418.005 76.2622 419.661 76.2622 cv
421.317 76.2622 422.661 74.918 422.661 73.2622 cv
ef
417.861 65.8223 mo
417.861 64.166 416.518 62.8223 414.861 62.8223 cv
413.205 62.8223 411.861 64.166 411.861 65.8223 cv
411.861 67.478 413.205 68.8223 414.861 68.8223 cv
416.518 68.8223 417.861 67.478 417.861 65.8223 cv
ef
413.302 57.4219 mo
413.302 55.7661 411.957 54.4219 410.302 54.4219 cv
408.646 54.4219 407.302 55.7661 407.302 57.4219 cv
407.302 59.0781 408.646 60.4219 410.302 60.4219 cv
411.957 60.4219 413.302 59.0781 413.302 57.4219 cv
ef
408.501 46.8623 mo
408.501 45.2061 407.157 43.8623 405.501 43.8623 cv
403.846 43.8623 402.501 45.2061 402.501 46.8623 cv
402.501 48.5181 403.846 49.8623 405.501 49.8623 cv
407.157 49.8623 408.501 48.5181 408.501 46.8623 cv
ef
404.182 50.2222 mo
404.182 48.5659 402.837 47.2222 401.182 47.2222 cv
399.525 47.2222 398.182 48.5659 398.182 50.2222 cv
398.182 51.8779 399.525 53.2222 401.182 53.2222 cv
402.837 53.2222 404.182 51.8779 404.182 50.2222 cv
ef
399.381 54.3018 mo
399.381 52.646 398.037 51.3018 396.381 51.3018 cv
394.726 51.3018 393.381 52.646 393.381 54.3018 cv
393.381 55.958 394.726 57.3018 396.381 57.3018 cv
398.037 57.3018 399.381 55.958 399.381 54.3018 cv
ef
394.581 56.9419 mo
394.581 55.2861 393.237 53.9419 391.581 53.9419 cv
389.926 53.9419 388.581 55.2861 388.581 56.9419 cv
388.581 58.5981 389.926 59.9419 391.581 59.9419 cv
393.237 59.9419 394.581 58.5981 394.581 56.9419 cv
ef
390.021 57.6621 mo
390.021 56.0059 388.678 54.6621 387.021 54.6621 cv
385.365 54.6621 384.021 56.0059 384.021 57.6621 cv
384.021 59.3179 385.365 60.6621 387.021 60.6621 cv
388.678 60.6621 390.021 59.3179 390.021 57.6621 cv
ef
385.461 51.9019 mo
385.461 50.2461 384.117 48.9019 382.461 48.9019 cv
380.806 48.9019 379.461 50.2461 379.461 51.9019 cv
379.461 53.5581 380.806 54.9019 382.461 54.9019 cv
384.117 54.9019 385.461 53.5581 385.461 51.9019 cv
ef
380.661 48.3018 mo
380.661 46.646 379.317 45.3018 377.661 45.3018 cv
376.005 45.3018 374.661 46.646 374.661 48.3018 cv
374.661 49.958 376.005 51.3018 377.661 51.3018 cv
379.317 51.3018 380.661 49.958 380.661 48.3018 cv
ef
376.102 47.3418 mo
376.102 45.686 374.758 44.3418 373.102 44.3418 cv
371.445 44.3418 370.102 45.686 370.102 47.3418 cv
370.102 48.998 371.445 50.3418 373.102 50.3418 cv
374.758 50.3418 376.102 48.998 376.102 47.3418 cv
ef
371.302 56.9419 mo
371.302 55.2861 369.957 53.9419 368.302 53.9419 cv
366.646 53.9419 365.302 55.2861 365.302 56.9419 cv
365.302 58.5981 366.646 59.9419 368.302 59.9419 cv
369.957 59.9419 371.302 58.5981 371.302 56.9419 cv
ef
366.501 64.8623 mo
366.501 63.2061 365.157 61.8623 363.501 61.8623 cv
361.846 61.8623 360.501 63.2061 360.501 64.8623 cv
360.501 66.5181 361.846 67.8623 363.501 67.8623 cv
365.157 67.8623 366.501 66.5181 366.501 64.8623 cv
ef
60.2012 206.067 mo
61.2012 205.067 li
61.2012 109.567 li
210.201 109.567 li
211.201 108.567 li
60.2012 108.567 li
60.2012 206.067 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
60.2012 206.067 mo
211.201 206.067 li
60.2012 206.067 mo
60.2012 108.567 li
211.201 108.567 li
211.201 206.067 li
60.2012 206.067 li
cp
0 0 0 1 cmyk
@
205.201 204.567 mo
205.201 206.067 li
199.451 203.067 mo
199.451 206.067 li
199.451 203.067 mo
199.451 206.067 li
193.701 204.567 mo
193.701 206.067 li
187.951 204.567 mo
187.951 206.067 li
181.951 204.567 mo
181.951 206.067 li
176.201 203.067 mo
176.201 206.067 li
170.451 204.567 mo
170.451 206.067 li
164.701 204.567 mo
164.701 206.067 li
158.951 204.567 mo
158.951 206.067 li
152.951 203.067 mo
152.951 206.067 li
147.201 204.567 mo
147.201 206.067 li
141.451 204.567 mo
141.451 206.067 li
135.701 204.567 mo
135.701 206.067 li
129.701 203.067 mo
129.701 206.067 li
123.951 204.567 mo
123.951 206.067 li
118.201 204.567 mo
118.201 206.067 li
112.451 204.567 mo
112.451 206.067 li
106.451 203.067 mo
106.451 206.067 li
100.701 204.567 mo
100.701 206.067 li
94.9512 204.567 mo
94.9512 206.067 li
89.2012 204.567 mo
89.2012 206.067 li
83.2012 203.067 mo
83.2012 206.067 li
77.4512 204.567 mo
77.4512 206.067 li
71.7012 204.567 mo
71.7012 206.067 li
65.9512 204.567 mo
65.9512 206.067 li
60.2012 203.067 mo
60.2012 206.067 li
@
60.2012 206.067 mo
60.2012 108.567 li
@
64.7012 108.567 mo
60.2012 108.567 li
62.4512 204.567 mo
60.2012 204.567 li
62.4512 201.567 mo
60.2012 201.567 li
64.7012 198.567 mo
60.2012 198.567 li
64.7012 108.567 mo
60.2012 108.567 li
62.4512 111.567 mo
60.2012 111.567 li
62.4512 114.567 mo
60.2012 114.567 li
62.4512 117.567 mo
60.2012 117.567 li
62.4512 120.567 mo
60.2012 120.567 li
64.7012 123.567 mo
60.2012 123.567 li
62.4512 126.567 mo
60.2012 126.567 li
62.4512 129.567 mo
60.2012 129.567 li
62.4512 132.567 mo
60.2012 132.567 li
62.4512 135.567 mo
60.2012 135.567 li
64.7012 138.567 mo
60.2012 138.567 li
62.4512 141.567 mo
60.2012 141.567 li
62.4512 144.567 mo
60.2012 144.567 li
62.4512 147.567 mo
60.2012 147.567 li
62.4512 150.567 mo
60.2012 150.567 li
64.7012 153.567 mo
60.2012 153.567 li
62.4512 156.567 mo
60.2012 156.567 li
62.4512 159.567 mo
60.2012 159.567 li
62.4512 162.567 mo
60.2012 162.567 li
62.4512 165.567 mo
60.2012 165.567 li
64.7012 168.567 mo
60.2012 168.567 li
62.4512 171.567 mo
60.2012 171.567 li
62.4512 174.567 mo
60.2012 174.567 li
62.4512 177.567 mo
60.2012 177.567 li
62.4512 180.567 mo
60.2012 180.567 li
64.7012 183.567 mo
60.2012 183.567 li
62.4512 186.567 mo
60.2012 186.567 li
62.4512 189.567 mo
60.2012 189.567 li
62.4512 192.567 mo
60.2012 192.567 li
62.4512 195.567 mo
60.2012 195.567 li
64.7012 198.567 mo
60.2012 198.567 li
@
214.121 198.468 mo
214.121 196.812 212.777 195.468 211.121 195.468 cv
209.465 195.468 208.121 196.812 208.121 198.468 cv
208.121 200.123 209.465 201.468 211.121 201.468 cv
212.777 201.468 214.121 200.123 214.121 198.468 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 198.468 mo
209.561 196.812 208.217 195.468 206.561 195.468 cv
204.905 195.468 203.561 196.812 203.561 198.468 cv
203.561 200.123 204.905 201.468 206.561 201.468 cv
208.217 201.468 209.561 200.123 209.561 198.468 cv
ef
204.761 198.468 mo
204.761 196.812 203.417 195.468 201.761 195.468 cv
200.105 195.468 198.761 196.812 198.761 198.468 cv
198.761 200.123 200.105 201.468 201.761 201.468 cv
203.417 201.468 204.761 200.123 204.761 198.468 cv
ef
200.201 198.468 mo
200.201 196.812 198.857 195.468 197.201 195.468 cv
195.545 195.468 194.201 196.812 194.201 198.468 cv
194.201 200.123 195.545 201.468 197.201 201.468 cv
198.857 201.468 200.201 200.123 200.201 198.468 cv
ef
195.401 198.228 mo
195.401 196.571 194.057 195.228 192.401 195.228 cv
190.745 195.228 189.401 196.571 189.401 198.228 cv
189.401 199.884 190.745 201.228 192.401 201.228 cv
194.057 201.228 195.401 199.884 195.401 198.228 cv
ef
190.841 198.468 mo
190.841 196.812 189.497 195.468 187.841 195.468 cv
186.185 195.468 184.841 196.812 184.841 198.468 cv
184.841 200.123 186.185 201.468 187.841 201.468 cv
189.497 201.468 190.841 200.123 190.841 198.468 cv
ef
186.281 198.468 mo
186.281 196.812 184.937 195.468 183.281 195.468 cv
181.625 195.468 180.281 196.812 180.281 198.468 cv
180.281 200.123 181.625 201.468 183.281 201.468 cv
184.937 201.468 186.281 200.123 186.281 198.468 cv
ef
181.721 198.468 mo
181.721 196.812 180.377 195.468 178.721 195.468 cv
177.065 195.468 175.721 196.812 175.721 198.468 cv
175.721 200.123 177.065 201.468 178.721 201.468 cv
180.377 201.468 181.721 200.123 181.721 198.468 cv
ef
176.921 197.987 mo
176.921 196.331 175.577 194.987 173.921 194.987 cv
172.265 194.987 170.921 196.331 170.921 197.987 cv
170.921 199.644 172.265 200.987 173.921 200.987 cv
175.577 200.987 176.921 199.644 176.921 197.987 cv
ef
172.121 197.508 mo
172.121 195.852 170.777 194.508 169.121 194.508 cv
167.465 194.508 166.121 195.852 166.121 197.508 cv
166.121 199.163 167.465 200.508 169.121 200.508 cv
170.777 200.508 172.121 199.163 172.121 197.508 cv
ef
167.801 196.787 mo
167.801 195.132 166.457 193.787 164.801 193.787 cv
163.145 193.787 161.801 195.132 161.801 196.787 cv
161.801 198.443 163.145 199.787 164.801 199.787 cv
166.457 199.787 167.801 198.443 167.801 196.787 cv
ef
163.001 196.308 mo
163.001 194.651 161.657 193.308 160.001 193.308 cv
158.345 193.308 157.001 194.651 157.001 196.308 cv
157.001 197.964 158.345 199.308 160.001 199.308 cv
161.657 199.308 163.001 197.964 163.001 196.308 cv
ef
158.441 196.067 mo
158.441 194.411 157.097 193.067 155.441 193.067 cv
153.785 193.067 152.441 194.411 152.441 196.067 cv
152.441 197.724 153.785 199.067 155.441 199.067 cv
157.097 199.067 158.441 197.724 158.441 196.067 cv
ef
153.641 195.348 mo
153.641 193.691 152.297 192.348 150.641 192.348 cv
148.985 192.348 147.641 193.691 147.641 195.348 cv
147.641 197.003 148.985 198.348 150.641 198.348 cv
152.297 198.348 153.641 197.003 153.641 195.348 cv
ef
148.841 192.707 mo
148.841 191.052 147.497 189.707 145.841 189.707 cv
144.185 189.707 142.841 191.052 142.841 192.707 cv
142.841 194.363 144.185 195.707 145.841 195.707 cv
147.497 195.707 148.841 194.363 148.841 192.707 cv
ef
144.521 190.067 mo
144.521 188.411 143.177 187.067 141.521 187.067 cv
139.865 187.067 138.521 188.411 138.521 190.067 cv
138.521 191.724 139.865 193.067 141.521 193.067 cv
143.177 193.067 144.521 191.724 144.521 190.067 cv
ef
139.721 185.747 mo
139.721 184.092 138.377 182.747 136.721 182.747 cv
135.065 182.747 133.721 184.092 133.721 185.747 cv
133.721 187.403 135.065 188.747 136.721 188.747 cv
138.377 188.747 139.721 187.403 139.721 185.747 cv
ef
135.161 182.867 mo
135.161 181.211 133.817 179.867 132.161 179.867 cv
130.505 179.867 129.161 181.211 129.161 182.867 cv
129.161 184.523 130.505 185.867 132.161 185.867 cv
133.817 185.867 135.161 184.523 135.161 182.867 cv
ef
130.361 176.867 mo
130.361 175.211 129.017 173.867 127.361 173.867 cv
125.705 173.867 124.361 175.211 124.361 176.867 cv
124.361 178.523 125.705 179.867 127.361 179.867 cv
129.017 179.867 130.361 178.523 130.361 176.867 cv
ef
125.801 172.787 mo
125.801 171.132 124.457 169.787 122.801 169.787 cv
121.145 169.787 119.801 171.132 119.801 172.787 cv
119.801 174.443 121.145 175.787 122.801 175.787 cv
124.457 175.787 125.801 174.443 125.801 172.787 cv
ef
121.241 166.787 mo
121.241 165.132 119.897 163.787 118.241 163.787 cv
116.585 163.787 115.241 165.132 115.241 166.787 cv
115.241 168.443 116.585 169.787 118.241 169.787 cv
119.897 169.787 121.241 168.443 121.241 166.787 cv
ef
116.441 159.107 mo
116.441 157.451 115.097 156.107 113.441 156.107 cv
111.785 156.107 110.441 157.451 110.441 159.107 cv
110.441 160.764 111.785 162.107 113.441 162.107 cv
115.097 162.107 116.441 160.764 116.441 159.107 cv
ef
111.881 149.748 mo
111.881 148.091 110.537 146.748 108.881 146.748 cv
107.225 146.748 105.881 148.091 105.881 149.748 cv
105.881 151.403 107.225 152.748 108.881 152.748 cv
110.537 152.748 111.881 151.403 111.881 149.748 cv
ef
107.201 141.827 mo
107.201 140.171 105.857 138.827 104.201 138.827 cv
102.545 138.827 101.201 140.171 101.201 141.827 cv
101.201 143.483 102.545 144.827 104.201 144.827 cv
105.857 144.827 107.201 143.483 107.201 141.827 cv
ef
102.761 145.188 mo
102.761 143.531 101.417 142.188 99.7612 142.188 cv
98.105 142.188 96.7612 143.531 96.7612 145.188 cv
96.7612 146.843 98.105 148.188 99.7612 148.188 cv
101.417 148.188 102.761 146.843 102.761 145.188 cv
ef
97.9609 148.547 mo
97.9609 146.892 96.6172 145.547 94.9609 145.547 cv
93.3052 145.547 91.9609 146.892 91.9609 148.547 cv
91.9609 150.203 93.3052 151.547 94.9609 151.547 cv
96.6172 151.547 97.9609 150.203 97.9609 148.547 cv
ef
93.1611 150.708 mo
93.1611 149.051 91.8174 147.708 90.1611 147.708 cv
88.5054 147.708 87.1611 149.051 87.1611 150.708 cv
87.1611 152.363 88.5054 153.708 90.1611 153.708 cv
91.8174 153.708 93.1611 152.363 93.1611 150.708 cv
ef
88.6011 150.708 mo
88.6011 149.051 87.2573 147.708 85.6011 147.708 cv
83.9453 147.708 82.6011 149.051 82.6011 150.708 cv
82.6011 152.363 83.9453 153.708 85.6011 153.708 cv
87.2573 153.708 88.6011 152.363 88.6011 150.708 cv
ef
84.041 145.188 mo
84.041 143.531 82.6973 142.188 81.041 142.188 cv
79.3853 142.188 78.041 143.531 78.041 145.188 cv
78.041 146.843 79.3853 148.188 81.041 148.188 cv
82.6973 148.188 84.041 146.843 84.041 145.188 cv
ef
79.481 145.667 mo
79.481 144.011 78.1372 142.667 76.481 142.667 cv
74.8252 142.667 73.481 144.011 73.481 145.667 cv
73.481 147.323 74.8252 148.667 76.481 148.667 cv
78.1372 148.667 79.481 147.323 79.481 145.667 cv
ef
74.6812 146.387 mo
74.6812 144.731 73.3369 143.387 71.6812 143.387 cv
70.0254 143.387 68.6812 144.731 68.6812 146.387 cv
68.6812 148.043 70.0254 149.387 71.6812 149.387 cv
73.3369 149.387 74.6812 148.043 74.6812 146.387 cv
ef
69.8813 166.067 mo
69.8813 164.411 68.5371 163.067 66.8813 163.067 cv
65.2251 163.067 63.8813 164.411 63.8813 166.067 cv
63.8813 167.724 65.2251 169.067 66.8813 169.067 cv
68.5371 169.067 69.8813 167.724 69.8813 166.067 cv
ef
65.561 182.867 mo
65.561 181.211 64.2173 179.867 62.561 179.867 cv
60.9053 179.867 59.561 181.211 59.561 182.867 cv
59.561 184.523 60.9053 185.867 62.561 185.867 cv
64.2173 185.867 65.561 184.523 65.561 182.867 cv
ef
60.2012 198.567 mo
211.201 198.567 li
0 0 0 1 cmyk
@
214.121 198.468 mo
214.121 196.812 212.777 195.468 211.121 195.468 cv
209.465 195.468 208.121 196.812 208.121 198.468 cv
208.121 200.123 209.465 201.468 211.121 201.468 cv
212.777 201.468 214.121 200.123 214.121 198.468 cv
.878019 .337896 1 .281529 cmyk
@
209.561 198.468 mo
209.561 196.812 208.217 195.468 206.561 195.468 cv
204.905 195.468 203.561 196.812 203.561 198.468 cv
203.561 200.123 204.905 201.468 206.561 201.468 cv
208.217 201.468 209.561 200.123 209.561 198.468 cv
@
204.761 198.468 mo
204.761 196.812 203.417 195.468 201.761 195.468 cv
200.105 195.468 198.761 196.812 198.761 198.468 cv
198.761 200.123 200.105 201.468 201.761 201.468 cv
203.417 201.468 204.761 200.123 204.761 198.468 cv
@
200.201 198.468 mo
200.201 196.812 198.857 195.468 197.201 195.468 cv
195.545 195.468 194.201 196.812 194.201 198.468 cv
194.201 200.123 195.545 201.468 197.201 201.468 cv
198.857 201.468 200.201 200.123 200.201 198.468 cv
@
195.401 198.228 mo
195.401 196.571 194.057 195.228 192.401 195.228 cv
190.745 195.228 189.401 196.571 189.401 198.228 cv
189.401 199.884 190.745 201.228 192.401 201.228 cv
194.057 201.228 195.401 199.884 195.401 198.228 cv
@
190.841 197.987 mo
190.841 196.331 189.497 194.987 187.841 194.987 cv
186.185 194.987 184.841 196.331 184.841 197.987 cv
184.841 199.644 186.185 200.987 187.841 200.987 cv
189.497 200.987 190.841 199.644 190.841 197.987 cv
@
186.281 197.508 mo
186.281 195.852 184.937 194.508 183.281 194.508 cv
181.625 194.508 180.281 195.852 180.281 197.508 cv
180.281 199.163 181.625 200.508 183.281 200.508 cv
184.937 200.508 186.281 199.163 186.281 197.508 cv
@
181.721 196.787 mo
181.721 195.132 180.377 193.787 178.721 193.787 cv
177.065 193.787 175.721 195.132 175.721 196.787 cv
175.721 198.443 177.065 199.787 178.721 199.787 cv
180.377 199.787 181.721 198.443 181.721 196.787 cv
@
176.921 196.067 mo
176.921 194.411 175.577 193.067 173.921 193.067 cv
172.265 193.067 170.921 194.411 170.921 196.067 cv
170.921 197.724 172.265 199.067 173.921 199.067 cv
175.577 199.067 176.921 197.724 176.921 196.067 cv
@
172.121 195.348 mo
172.121 193.691 170.777 192.348 169.121 192.348 cv
167.465 192.348 166.121 193.691 166.121 195.348 cv
166.121 197.003 167.465 198.348 169.121 198.348 cv
170.777 198.348 172.121 197.003 172.121 195.348 cv
@
167.801 193.907 mo
167.801 192.251 166.457 190.907 164.801 190.907 cv
163.145 190.907 161.801 192.251 161.801 193.907 cv
161.801 195.563 163.145 196.907 164.801 196.907 cv
166.457 196.907 167.801 195.563 167.801 193.907 cv
@
163.001 191.747 mo
163.001 190.092 161.657 188.747 160.001 188.747 cv
158.345 188.747 157.001 190.092 157.001 191.747 cv
157.001 193.403 158.345 194.747 160.001 194.747 cv
161.657 194.747 163.001 193.403 163.001 191.747 cv
@
158.441 189.348 mo
158.441 187.691 157.097 186.348 155.441 186.348 cv
153.785 186.348 152.441 187.691 152.441 189.348 cv
152.441 191.003 153.785 192.348 155.441 192.348 cv
157.097 192.348 158.441 191.003 158.441 189.348 cv
@
153.641 186.468 mo
153.641 184.812 152.297 183.468 150.641 183.468 cv
148.985 183.468 147.641 184.812 147.641 186.468 cv
147.641 188.123 148.985 189.468 150.641 189.468 cv
152.297 189.468 153.641 188.123 153.641 186.468 cv
@
148.841 183.587 mo
148.841 181.932 147.497 180.587 145.841 180.587 cv
144.185 180.587 142.841 181.932 142.841 183.587 cv
142.841 185.243 144.185 186.587 145.841 186.587 cv
147.497 186.587 148.841 185.243 148.841 183.587 cv
@
144.521 179.508 mo
144.521 177.852 143.177 176.508 141.521 176.508 cv
139.865 176.508 138.521 177.852 138.521 179.508 cv
138.521 181.163 139.865 182.508 141.521 182.508 cv
143.177 182.508 144.521 181.163 144.521 179.508 cv
@
139.721 176.147 mo
139.721 174.491 138.377 173.147 136.721 173.147 cv
135.065 173.147 133.721 174.491 133.721 176.147 cv
133.721 177.804 135.065 179.147 136.721 179.147 cv
138.377 179.147 139.721 177.804 139.721 176.147 cv
@
135.161 171.827 mo
135.161 170.171 133.817 168.827 132.161 168.827 cv
130.505 168.827 129.161 170.171 129.161 171.827 cv
129.161 173.483 130.505 174.827 132.161 174.827 cv
133.817 174.827 135.161 173.483 135.161 171.827 cv
@
130.361 167.268 mo
130.361 165.611 129.017 164.268 127.361 164.268 cv
125.705 164.268 124.361 165.611 124.361 167.268 cv
124.361 168.924 125.705 170.268 127.361 170.268 cv
129.017 170.268 130.361 168.924 130.361 167.268 cv
@
125.801 159.587 mo
125.801 157.932 124.457 156.587 122.801 156.587 cv
121.145 156.587 119.801 157.932 119.801 159.587 cv
119.801 161.243 121.145 162.587 122.801 162.587 cv
124.457 162.587 125.801 161.243 125.801 159.587 cv
@
121.241 155.027 mo
121.241 153.371 119.897 152.027 118.241 152.027 cv
116.585 152.027 115.241 153.371 115.241 155.027 cv
115.241 156.684 116.585 158.027 118.241 158.027 cv
119.897 158.027 121.241 156.684 121.241 155.027 cv
@
116.441 149.027 mo
116.441 147.371 115.097 146.027 113.441 146.027 cv
111.785 146.027 110.441 147.371 110.441 149.027 cv
110.441 150.684 111.785 152.027 113.441 152.027 cv
115.097 152.027 116.441 150.684 116.441 149.027 cv
@
111.881 143.748 mo
111.881 142.091 110.537 140.748 108.881 140.748 cv
107.225 140.748 105.881 142.091 105.881 143.748 cv
105.881 145.403 107.225 146.748 108.881 146.748 cv
110.537 146.748 111.881 145.403 111.881 143.748 cv
@
107.201 152.867 mo
107.201 151.211 105.857 149.867 104.201 149.867 cv
102.545 149.867 101.201 151.211 101.201 152.867 cv
101.201 154.523 102.545 155.867 104.201 155.867 cv
105.857 155.867 107.201 154.523 107.201 152.867 cv
@
102.761 159.827 mo
102.761 158.171 101.417 156.827 99.7612 156.827 cv
98.105 156.827 96.7612 158.171 96.7612 159.827 cv
96.7612 161.483 98.105 162.827 99.7612 162.827 cv
101.417 162.827 102.761 161.483 102.761 159.827 cv
@
97.9609 163.067 mo
97.9609 161.411 96.6172 160.067 94.9609 160.067 cv
93.3052 160.067 91.9609 161.411 91.9609 163.067 cv
91.9609 164.724 93.3052 166.067 94.9609 166.067 cv
96.6172 166.067 97.9609 164.724 97.9609 163.067 cv
@
93.1611 163.667 mo
93.1611 162.012 91.8174 160.667 90.1611 160.667 cv
88.5054 160.667 87.1611 162.012 87.1611 163.667 cv
87.1611 165.323 88.5054 166.667 90.1611 166.667 cv
91.8174 166.667 93.1611 165.323 93.1611 163.667 cv
@
88.6011 166.067 mo
88.6011 164.411 87.2573 163.067 85.6011 163.067 cv
83.9453 163.067 82.6011 164.411 82.6011 166.067 cv
82.6011 167.724 83.9453 169.067 85.6011 169.067 cv
87.2573 169.067 88.6011 167.724 88.6011 166.067 cv
@
84.041 166.548 mo
84.041 164.892 82.6973 163.548 81.041 163.548 cv
79.3853 163.548 78.041 164.892 78.041 166.548 cv
78.041 168.203 79.3853 169.548 81.041 169.548 cv
82.6973 169.548 84.041 168.203 84.041 166.548 cv
@
79.481 168.228 mo
79.481 166.571 78.1372 165.228 76.481 165.228 cv
74.8252 165.228 73.481 166.571 73.481 168.228 cv
73.481 169.884 74.8252 171.228 76.481 171.228 cv
78.1372 171.228 79.481 169.884 79.481 168.228 cv
@
74.6812 169.067 mo
74.6812 167.411 73.3369 166.067 71.6812 166.067 cv
70.0254 166.067 68.6812 167.411 68.6812 169.067 cv
68.6812 170.724 70.0254 172.067 71.6812 172.067 cv
73.3369 172.067 74.6812 170.724 74.6812 169.067 cv
@
69.8813 168.468 mo
69.8813 166.812 68.5371 165.468 66.8813 165.468 cv
65.2251 165.468 63.8813 166.812 63.8813 168.468 cv
63.8813 170.123 65.2251 171.468 66.8813 171.468 cv
68.5371 171.468 69.8813 170.123 69.8813 168.468 cv
@
65.561 168.228 mo
65.561 166.571 64.2173 165.228 62.561 165.228 cv
60.9053 165.228 59.561 166.571 59.561 168.228 cv
59.561 169.884 60.9053 171.228 62.561 171.228 cv
64.2173 171.228 65.561 169.884 65.561 168.228 cv
@
214.121 198.468 mo
214.121 196.812 212.777 195.468 211.121 195.468 cv
209.465 195.468 208.121 196.812 208.121 198.468 cv
208.121 200.123 209.465 201.468 211.121 201.468 cv
212.777 201.468 214.121 200.123 214.121 198.468 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 198.468 mo
209.561 196.812 208.217 195.468 206.561 195.468 cv
204.905 195.468 203.561 196.812 203.561 198.468 cv
203.561 200.123 204.905 201.468 206.561 201.468 cv
208.217 201.468 209.561 200.123 209.561 198.468 cv
ef
204.761 198.468 mo
204.761 196.812 203.417 195.468 201.761 195.468 cv
200.105 195.468 198.761 196.812 198.761 198.468 cv
198.761 200.123 200.105 201.468 201.761 201.468 cv
203.417 201.468 204.761 200.123 204.761 198.468 cv
ef
200.201 198.468 mo
200.201 196.812 198.857 195.468 197.201 195.468 cv
195.545 195.468 194.201 196.812 194.201 198.468 cv
194.201 200.123 195.545 201.468 197.201 201.468 cv
198.857 201.468 200.201 200.123 200.201 198.468 cv
ef
195.401 198.228 mo
195.401 196.571 194.057 195.228 192.401 195.228 cv
190.745 195.228 189.401 196.571 189.401 198.228 cv
189.401 199.884 190.745 201.228 192.401 201.228 cv
194.057 201.228 195.401 199.884 195.401 198.228 cv
ef
190.841 198.468 mo
190.841 196.812 189.497 195.468 187.841 195.468 cv
186.185 195.468 184.841 196.812 184.841 198.468 cv
184.841 200.123 186.185 201.468 187.841 201.468 cv
189.497 201.468 190.841 200.123 190.841 198.468 cv
ef
186.281 198.468 mo
186.281 196.812 184.937 195.468 183.281 195.468 cv
181.625 195.468 180.281 196.812 180.281 198.468 cv
180.281 200.123 181.625 201.468 183.281 201.468 cv
184.937 201.468 186.281 200.123 186.281 198.468 cv
ef
181.721 198.468 mo
181.721 196.812 180.377 195.468 178.721 195.468 cv
177.065 195.468 175.721 196.812 175.721 198.468 cv
175.721 200.123 177.065 201.468 178.721 201.468 cv
180.377 201.468 181.721 200.123 181.721 198.468 cv
ef
176.921 197.987 mo
176.921 196.331 175.577 194.987 173.921 194.987 cv
172.265 194.987 170.921 196.331 170.921 197.987 cv
170.921 199.644 172.265 200.987 173.921 200.987 cv
175.577 200.987 176.921 199.644 176.921 197.987 cv
ef
172.121 197.508 mo
172.121 195.852 170.777 194.508 169.121 194.508 cv
167.465 194.508 166.121 195.852 166.121 197.508 cv
166.121 199.163 167.465 200.508 169.121 200.508 cv
170.777 200.508 172.121 199.163 172.121 197.508 cv
ef
167.801 196.787 mo
167.801 195.132 166.457 193.787 164.801 193.787 cv
163.145 193.787 161.801 195.132 161.801 196.787 cv
161.801 198.443 163.145 199.787 164.801 199.787 cv
166.457 199.787 167.801 198.443 167.801 196.787 cv
ef
163.001 196.308 mo
163.001 194.651 161.657 193.308 160.001 193.308 cv
158.345 193.308 157.001 194.651 157.001 196.308 cv
157.001 197.964 158.345 199.308 160.001 199.308 cv
161.657 199.308 163.001 197.964 163.001 196.308 cv
ef
158.441 196.067 mo
158.441 194.411 157.097 193.067 155.441 193.067 cv
153.785 193.067 152.441 194.411 152.441 196.067 cv
152.441 197.724 153.785 199.067 155.441 199.067 cv
157.097 199.067 158.441 197.724 158.441 196.067 cv
ef
153.641 195.348 mo
153.641 193.691 152.297 192.348 150.641 192.348 cv
148.985 192.348 147.641 193.691 147.641 195.348 cv
147.641 197.003 148.985 198.348 150.641 198.348 cv
152.297 198.348 153.641 197.003 153.641 195.348 cv
ef
148.841 192.707 mo
148.841 191.052 147.497 189.707 145.841 189.707 cv
144.185 189.707 142.841 191.052 142.841 192.707 cv
142.841 194.363 144.185 195.707 145.841 195.707 cv
147.497 195.707 148.841 194.363 148.841 192.707 cv
ef
144.521 190.067 mo
144.521 188.411 143.177 187.067 141.521 187.067 cv
139.865 187.067 138.521 188.411 138.521 190.067 cv
138.521 191.724 139.865 193.067 141.521 193.067 cv
143.177 193.067 144.521 191.724 144.521 190.067 cv
ef
139.721 185.747 mo
139.721 184.092 138.377 182.747 136.721 182.747 cv
135.065 182.747 133.721 184.092 133.721 185.747 cv
133.721 187.403 135.065 188.747 136.721 188.747 cv
138.377 188.747 139.721 187.403 139.721 185.747 cv
ef
135.161 182.867 mo
135.161 181.211 133.817 179.867 132.161 179.867 cv
130.505 179.867 129.161 181.211 129.161 182.867 cv
129.161 184.523 130.505 185.867 132.161 185.867 cv
133.817 185.867 135.161 184.523 135.161 182.867 cv
ef
130.361 176.867 mo
130.361 175.211 129.017 173.867 127.361 173.867 cv
125.705 173.867 124.361 175.211 124.361 176.867 cv
124.361 178.523 125.705 179.867 127.361 179.867 cv
129.017 179.867 130.361 178.523 130.361 176.867 cv
ef
125.801 172.787 mo
125.801 171.132 124.457 169.787 122.801 169.787 cv
121.145 169.787 119.801 171.132 119.801 172.787 cv
119.801 174.443 121.145 175.787 122.801 175.787 cv
124.457 175.787 125.801 174.443 125.801 172.787 cv
ef
121.241 166.787 mo
121.241 165.132 119.897 163.787 118.241 163.787 cv
116.585 163.787 115.241 165.132 115.241 166.787 cv
115.241 168.443 116.585 169.787 118.241 169.787 cv
119.897 169.787 121.241 168.443 121.241 166.787 cv
ef
116.441 159.107 mo
116.441 157.451 115.097 156.107 113.441 156.107 cv
111.785 156.107 110.441 157.451 110.441 159.107 cv
110.441 160.764 111.785 162.107 113.441 162.107 cv
115.097 162.107 116.441 160.764 116.441 159.107 cv
ef
111.881 149.748 mo
111.881 148.091 110.537 146.748 108.881 146.748 cv
107.225 146.748 105.881 148.091 105.881 149.748 cv
105.881 151.403 107.225 152.748 108.881 152.748 cv
110.537 152.748 111.881 151.403 111.881 149.748 cv
ef
107.201 141.827 mo
107.201 140.171 105.857 138.827 104.201 138.827 cv
102.545 138.827 101.201 140.171 101.201 141.827 cv
101.201 143.483 102.545 144.827 104.201 144.827 cv
105.857 144.827 107.201 143.483 107.201 141.827 cv
ef
102.761 145.188 mo
102.761 143.531 101.417 142.188 99.7612 142.188 cv
98.105 142.188 96.7612 143.531 96.7612 145.188 cv
96.7612 146.843 98.105 148.188 99.7612 148.188 cv
101.417 148.188 102.761 146.843 102.761 145.188 cv
ef
97.9609 148.547 mo
97.9609 146.892 96.6172 145.547 94.9609 145.547 cv
93.3052 145.547 91.9609 146.892 91.9609 148.547 cv
91.9609 150.203 93.3052 151.547 94.9609 151.547 cv
96.6172 151.547 97.9609 150.203 97.9609 148.547 cv
ef
93.1611 150.708 mo
93.1611 149.051 91.8174 147.708 90.1611 147.708 cv
88.5054 147.708 87.1611 149.051 87.1611 150.708 cv
87.1611 152.363 88.5054 153.708 90.1611 153.708 cv
91.8174 153.708 93.1611 152.363 93.1611 150.708 cv
ef
88.6011 150.708 mo
88.6011 149.051 87.2573 147.708 85.6011 147.708 cv
83.9453 147.708 82.6011 149.051 82.6011 150.708 cv
82.6011 152.363 83.9453 153.708 85.6011 153.708 cv
87.2573 153.708 88.6011 152.363 88.6011 150.708 cv
ef
84.041 145.188 mo
84.041 143.531 82.6973 142.188 81.041 142.188 cv
79.3853 142.188 78.041 143.531 78.041 145.188 cv
78.041 146.843 79.3853 148.188 81.041 148.188 cv
82.6973 148.188 84.041 146.843 84.041 145.188 cv
ef
79.481 145.667 mo
79.481 144.011 78.1372 142.667 76.481 142.667 cv
74.8252 142.667 73.481 144.011 73.481 145.667 cv
73.481 147.323 74.8252 148.667 76.481 148.667 cv
78.1372 148.667 79.481 147.323 79.481 145.667 cv
ef
74.6812 146.387 mo
74.6812 144.731 73.3369 143.387 71.6812 143.387 cv
70.0254 143.387 68.6812 144.731 68.6812 146.387 cv
68.6812 148.043 70.0254 149.387 71.6812 149.387 cv
73.3369 149.387 74.6812 148.043 74.6812 146.387 cv
ef
69.8813 166.067 mo
69.8813 164.411 68.5371 163.067 66.8813 163.067 cv
65.2251 163.067 63.8813 164.411 63.8813 166.067 cv
63.8813 167.724 65.2251 169.067 66.8813 169.067 cv
68.5371 169.067 69.8813 167.724 69.8813 166.067 cv
ef
65.561 182.867 mo
65.561 181.211 64.2173 179.867 62.561 179.867 cv
60.9053 179.867 59.561 181.211 59.561 182.867 cv
59.561 184.523 60.9053 185.867 62.561 185.867 cv
64.2173 185.867 65.561 184.523 65.561 182.867 cv
ef
210.631 206.122 mo
211.631 205.122 li
211.631 109.622 li
360.631 109.622 li
361.631 108.622 li
210.631 108.622 li
210.631 206.122 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
210.631 206.122 mo
361.631 206.122 li
210.631 206.122 mo
210.631 108.622 li
361.631 108.622 li
361.631 206.122 li
210.631 206.122 li
cp
0 0 0 1 cmyk
@
355.881 204.622 mo
355.881 206.122 li
349.881 203.122 mo
349.881 206.122 li
349.881 203.122 mo
349.881 206.122 li
344.131 204.622 mo
344.131 206.122 li
338.381 204.622 mo
338.381 206.122 li
332.631 204.622 mo
332.631 206.122 li
326.631 203.122 mo
326.631 206.122 li
320.881 204.622 mo
320.881 206.122 li
315.131 204.622 mo
315.131 206.122 li
309.381 204.622 mo
309.381 206.122 li
303.381 203.122 mo
303.381 206.122 li
297.631 204.622 mo
297.631 206.122 li
291.881 204.622 mo
291.881 206.122 li
286.131 204.622 mo
286.131 206.122 li
280.131 203.122 mo
280.131 206.122 li
274.381 204.622 mo
274.381 206.122 li
268.631 204.622 mo
268.631 206.122 li
262.881 204.622 mo
262.881 206.122 li
257.131 203.122 mo
257.131 206.122 li
251.131 204.622 mo
251.131 206.122 li
245.381 204.622 mo
245.381 206.122 li
239.631 204.622 mo
239.631 206.122 li
233.881 203.122 mo
233.881 206.122 li
227.881 204.622 mo
227.881 206.122 li
222.131 204.622 mo
222.131 206.122 li
216.381 204.622 mo
216.381 206.122 li
210.631 203.122 mo
210.631 206.122 li
@
210.631 206.122 mo
210.631 108.622 li
@
215.131 108.622 mo
210.631 108.622 li
212.881 204.622 mo
210.631 204.622 li
212.881 201.622 mo
210.631 201.622 li
215.131 198.622 mo
210.631 198.622 li
215.131 108.622 mo
210.631 108.622 li
212.881 111.622 mo
210.631 111.622 li
212.881 114.622 mo
210.631 114.622 li
212.881 117.622 mo
210.631 117.622 li
212.881 120.622 mo
210.631 120.622 li
215.131 123.622 mo
210.631 123.622 li
212.881 126.622 mo
210.631 126.622 li
212.881 129.622 mo
210.631 129.622 li
212.881 132.622 mo
210.631 132.622 li
212.881 135.622 mo
210.631 135.622 li
215.131 138.622 mo
210.631 138.622 li
212.881 141.622 mo
210.631 141.622 li
212.881 144.622 mo
210.631 144.622 li
212.881 147.622 mo
210.631 147.622 li
212.881 150.622 mo
210.631 150.622 li
215.131 153.622 mo
210.631 153.622 li
212.881 156.622 mo
210.631 156.622 li
212.881 159.622 mo
210.631 159.622 li
212.881 162.622 mo
210.631 162.622 li
212.881 165.622 mo
210.631 165.622 li
215.131 168.622 mo
210.631 168.622 li
212.881 171.622 mo
210.631 171.622 li
212.881 174.622 mo
210.631 174.622 li
212.881 177.622 mo
210.631 177.622 li
212.881 180.622 mo
210.631 180.622 li
215.131 183.622 mo
210.631 183.622 li
212.881 186.622 mo
210.631 186.622 li
212.881 189.622 mo
210.631 189.622 li
212.881 192.622 mo
210.631 192.622 li
212.881 195.622 mo
210.631 195.622 li
215.131 198.622 mo
210.631 198.622 li
@
364.681 198.522 mo
364.681 196.866 363.337 195.522 361.681 195.522 cv
360.024 195.522 358.681 196.866 358.681 198.522 cv
358.681 200.178 360.024 201.522 361.681 201.522 cv
363.337 201.522 364.681 200.178 364.681 198.522 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 198.522 mo
359.881 196.866 358.537 195.522 356.881 195.522 cv
355.225 195.522 353.881 196.866 353.881 198.522 cv
353.881 200.178 355.225 201.522 356.881 201.522 cv
358.537 201.522 359.881 200.178 359.881 198.522 cv
ef
355.321 198.522 mo
355.321 196.866 353.977 195.522 352.321 195.522 cv
350.665 195.522 349.321 196.866 349.321 198.522 cv
349.321 200.178 350.665 201.522 352.321 201.522 cv
353.977 201.522 355.321 200.178 355.321 198.522 cv
ef
350.521 198.522 mo
350.521 196.866 349.177 195.522 347.521 195.522 cv
345.865 195.522 344.521 196.866 344.521 198.522 cv
344.521 200.178 345.865 201.522 347.521 201.522 cv
349.177 201.522 350.521 200.178 350.521 198.522 cv
ef
345.961 198.522 mo
345.961 196.866 344.617 195.522 342.961 195.522 cv
341.305 195.522 339.961 196.866 339.961 198.522 cv
339.961 200.178 341.305 201.522 342.961 201.522 cv
344.617 201.522 345.961 200.178 345.961 198.522 cv
ef
341.4 198.282 mo
341.4 196.626 340.057 195.282 338.4 195.282 cv
336.745 195.282 335.4 196.626 335.4 198.282 cv
335.4 199.938 336.745 201.282 338.4 201.282 cv
340.057 201.282 341.4 199.938 341.4 198.282 cv
ef
336.601 198.282 mo
336.601 196.626 335.257 195.282 333.601 195.282 cv
331.945 195.282 330.601 196.626 330.601 198.282 cv
330.601 199.938 331.945 201.282 333.601 201.282 cv
335.257 201.282 336.601 199.938 336.601 198.282 cv
ef
332.041 198.042 mo
332.041 196.386 330.697 195.042 329.041 195.042 cv
327.385 195.042 326.041 196.386 326.041 198.042 cv
326.041 199.698 327.385 201.042 329.041 201.042 cv
330.697 201.042 332.041 199.698 332.041 198.042 cv
ef
327.48 198.042 mo
327.48 196.386 326.137 195.042 324.48 195.042 cv
322.825 195.042 321.48 196.386 321.48 198.042 cv
321.48 199.698 322.825 201.042 324.48 201.042 cv
326.137 201.042 327.48 199.698 327.48 198.042 cv
ef
322.681 197.082 mo
322.681 195.426 321.337 194.082 319.681 194.082 cv
318.024 194.082 316.681 195.426 316.681 197.082 cv
316.681 198.738 318.024 200.082 319.681 200.082 cv
321.337 200.082 322.681 198.738 322.681 197.082 cv
ef
318.121 196.603 mo
318.121 194.946 316.777 193.603 315.121 193.603 cv
313.465 193.603 312.121 194.946 312.121 196.603 cv
312.121 198.258 313.465 199.603 315.121 199.603 cv
316.777 199.603 318.121 198.258 318.121 196.603 cv
ef
313.321 196.603 mo
313.321 194.946 311.977 193.603 310.321 193.603 cv
308.665 193.603 307.321 194.946 307.321 196.603 cv
307.321 198.258 308.665 199.603 310.321 199.603 cv
311.977 199.603 313.321 198.258 313.321 196.603 cv
ef
308.881 194.922 mo
308.881 193.266 307.537 191.922 305.881 191.922 cv
304.225 191.922 302.881 193.266 302.881 194.922 cv
302.881 196.578 304.225 197.922 305.881 197.922 cv
307.537 197.922 308.881 196.578 308.881 194.922 cv
ef
304.201 194.442 mo
304.201 192.786 302.856 191.442 301.201 191.442 cv
299.545 191.442 298.201 192.786 298.201 194.442 cv
298.201 196.098 299.545 197.442 301.201 197.442 cv
302.856 197.442 304.201 196.098 304.201 194.442 cv
ef
299.641 192.042 mo
299.641 190.386 298.297 189.042 296.641 189.042 cv
294.984 189.042 293.641 190.386 293.641 192.042 cv
293.641 193.698 294.984 195.042 296.641 195.042 cv
298.297 195.042 299.641 193.698 299.641 192.042 cv
ef
294.841 189.162 mo
294.841 187.506 293.497 186.162 291.841 186.162 cv
290.185 186.162 288.841 187.506 288.841 189.162 cv
288.841 190.818 290.185 192.162 291.841 192.162 cv
293.497 192.162 294.841 190.818 294.841 189.162 cv
ef
290.041 184.842 mo
290.041 183.187 288.697 181.842 287.041 181.842 cv
285.385 181.842 284.041 183.187 284.041 184.842 cv
284.041 186.498 285.385 187.842 287.041 187.842 cv
288.697 187.842 290.041 186.498 290.041 184.842 cv
ef
285.721 180.522 mo
285.721 178.866 284.377 177.522 282.721 177.522 cv
281.065 177.522 279.721 178.866 279.721 180.522 cv
279.721 182.178 281.065 183.522 282.721 183.522 cv
284.377 183.522 285.721 182.178 285.721 180.522 cv
ef
280.921 175.722 mo
280.921 174.066 279.577 172.722 277.921 172.722 cv
276.265 172.722 274.921 174.066 274.921 175.722 cv
274.921 177.378 276.265 178.722 277.921 178.722 cv
279.577 178.722 280.921 177.378 280.921 175.722 cv
ef
276.361 172.362 mo
276.361 170.706 275.017 169.362 273.361 169.362 cv
271.705 169.362 270.361 170.706 270.361 172.362 cv
270.361 174.019 271.705 175.362 273.361 175.362 cv
275.017 175.362 276.361 174.019 276.361 172.362 cv
ef
271.561 163.122 mo
271.561 161.466 270.217 160.122 268.561 160.122 cv
266.905 160.122 265.561 161.466 265.561 163.122 cv
265.561 164.778 266.905 166.122 268.561 166.122 cv
270.217 166.122 271.561 164.778 271.561 163.122 cv
ef
266.881 155.802 mo
266.881 154.146 265.537 152.802 263.881 152.802 cv
262.225 152.802 260.881 154.146 260.881 155.802 cv
260.881 157.458 262.225 158.802 263.881 158.802 cv
265.537 158.802 266.881 157.458 266.881 155.802 cv
ef
262.441 146.202 mo
262.441 144.546 261.097 143.202 259.441 143.202 cv
257.785 143.202 256.441 144.546 256.441 146.202 cv
256.441 147.858 257.785 149.202 259.441 149.202 cv
261.097 149.202 262.441 147.858 262.441 146.202 cv
ef
257.641 137.322 mo
257.641 135.666 256.297 134.322 254.641 134.322 cv
252.985 134.322 251.641 135.666 251.641 137.322 cv
251.641 138.978 252.985 140.322 254.641 140.322 cv
256.297 140.322 257.641 138.978 257.641 137.322 cv
ef
253.081 141.642 mo
253.081 139.986 251.737 138.642 250.081 138.642 cv
248.425 138.642 247.081 139.986 247.081 141.642 cv
247.081 143.298 248.425 144.642 250.081 144.642 cv
251.737 144.642 253.081 143.298 253.081 141.642 cv
ef
248.281 145.962 mo
248.281 144.306 246.937 142.962 245.281 142.962 cv
243.625 142.962 242.281 144.306 242.281 145.962 cv
242.281 147.618 243.625 148.962 245.281 148.962 cv
246.937 148.962 248.281 147.618 248.281 145.962 cv
ef
243.721 147.642 mo
243.721 145.986 242.377 144.642 240.721 144.642 cv
239.065 144.642 237.721 145.986 237.721 147.642 cv
237.721 149.298 239.065 150.642 240.721 150.642 cv
242.377 150.642 243.721 149.298 243.721 147.642 cv
ef
239.161 147.642 mo
239.161 145.986 237.817 144.642 236.161 144.642 cv
234.505 144.642 233.161 145.986 233.161 147.642 cv
233.161 149.298 234.505 150.642 236.161 150.642 cv
237.817 150.642 239.161 149.298 239.161 147.642 cv
ef
234.361 147.642 mo
234.361 145.986 233.017 144.642 231.361 144.642 cv
229.705 144.642 228.361 145.986 228.361 147.642 cv
228.361 149.298 229.705 150.642 231.361 150.642 cv
233.017 150.642 234.361 149.298 234.361 147.642 cv
ef
229.801 146.442 mo
229.801 144.786 228.457 143.442 226.801 143.442 cv
225.145 143.442 223.801 144.786 223.801 146.442 cv
223.801 148.098 225.145 149.442 226.801 149.442 cv
228.457 149.442 229.801 148.098 229.801 146.442 cv
ef
225.241 151.722 mo
225.241 150.066 223.897 148.722 222.241 148.722 cv
220.585 148.722 219.241 150.066 219.241 151.722 cv
219.241 153.378 220.585 154.722 222.241 154.722 cv
223.897 154.722 225.241 153.378 225.241 151.722 cv
ef
220.681 178.603 mo
220.681 176.946 219.337 175.603 217.681 175.603 cv
216.025 175.603 214.681 176.946 214.681 178.603 cv
214.681 180.258 216.025 181.603 217.681 181.603 cv
219.337 181.603 220.681 180.258 220.681 178.603 cv
ef
215.881 192.762 mo
215.881 191.106 214.537 189.762 212.881 189.762 cv
211.225 189.762 209.881 191.106 209.881 192.762 cv
209.881 194.418 211.225 195.762 212.881 195.762 cv
214.537 195.762 215.881 194.418 215.881 192.762 cv
ef
210.631 198.622 mo
361.631 198.622 li
0 0 0 1 cmyk
@
364.681 198.522 mo
364.681 196.866 363.337 195.522 361.681 195.522 cv
360.024 195.522 358.681 196.866 358.681 198.522 cv
358.681 200.178 360.024 201.522 361.681 201.522 cv
363.337 201.522 364.681 200.178 364.681 198.522 cv
.878019 .337896 1 .281529 cmyk
@
359.881 198.522 mo
359.881 196.866 358.537 195.522 356.881 195.522 cv
355.225 195.522 353.881 196.866 353.881 198.522 cv
353.881 200.178 355.225 201.522 356.881 201.522 cv
358.537 201.522 359.881 200.178 359.881 198.522 cv
@
355.321 198.522 mo
355.321 196.866 353.977 195.522 352.321 195.522 cv
350.665 195.522 349.321 196.866 349.321 198.522 cv
349.321 200.178 350.665 201.522 352.321 201.522 cv
353.977 201.522 355.321 200.178 355.321 198.522 cv
@
350.521 198.522 mo
350.521 196.866 349.177 195.522 347.521 195.522 cv
345.865 195.522 344.521 196.866 344.521 198.522 cv
344.521 200.178 345.865 201.522 347.521 201.522 cv
349.177 201.522 350.521 200.178 350.521 198.522 cv
@
345.961 198.282 mo
345.961 196.626 344.617 195.282 342.961 195.282 cv
341.305 195.282 339.961 196.626 339.961 198.282 cv
339.961 199.938 341.305 201.282 342.961 201.282 cv
344.617 201.282 345.961 199.938 345.961 198.282 cv
@
341.4 198.042 mo
341.4 196.386 340.057 195.042 338.4 195.042 cv
336.745 195.042 335.4 196.386 335.4 198.042 cv
335.4 199.698 336.745 201.042 338.4 201.042 cv
340.057 201.042 341.4 199.698 341.4 198.042 cv
@
336.601 197.563 mo
336.601 195.906 335.257 194.563 333.601 194.563 cv
331.945 194.563 330.601 195.906 330.601 197.563 cv
330.601 199.218 331.945 200.563 333.601 200.563 cv
335.257 200.563 336.601 199.218 336.601 197.563 cv
@
332.041 197.322 mo
332.041 195.666 330.697 194.322 329.041 194.322 cv
327.385 194.322 326.041 195.666 326.041 197.322 cv
326.041 198.979 327.385 200.322 329.041 200.322 cv
330.697 200.322 332.041 198.979 332.041 197.322 cv
@
327.48 196.122 mo
327.48 194.466 326.137 193.122 324.48 193.122 cv
322.825 193.122 321.48 194.466 321.48 196.122 cv
321.48 197.778 322.825 199.122 324.48 199.122 cv
326.137 199.122 327.48 197.778 327.48 196.122 cv
@
322.681 195.162 mo
322.681 193.506 321.337 192.162 319.681 192.162 cv
318.024 192.162 316.681 193.506 316.681 195.162 cv
316.681 196.818 318.024 198.162 319.681 198.162 cv
321.337 198.162 322.681 196.818 322.681 195.162 cv
@
318.121 193.962 mo
318.121 192.306 316.777 190.962 315.121 190.962 cv
313.465 190.962 312.121 192.306 312.121 193.962 cv
312.121 195.618 313.465 196.962 315.121 196.962 cv
316.777 196.962 318.121 195.618 318.121 193.962 cv
@
313.321 192.042 mo
313.321 190.386 311.977 189.042 310.321 189.042 cv
308.665 189.042 307.321 190.386 307.321 192.042 cv
307.321 193.698 308.665 195.042 310.321 195.042 cv
311.977 195.042 313.321 193.698 313.321 192.042 cv
@
308.881 189.642 mo
308.881 187.986 307.537 186.642 305.881 186.642 cv
304.225 186.642 302.881 187.986 302.881 189.642 cv
302.881 191.298 304.225 192.642 305.881 192.642 cv
307.537 192.642 308.881 191.298 308.881 189.642 cv
@
304.201 187.122 mo
304.201 185.466 302.856 184.122 301.201 184.122 cv
299.545 184.122 298.201 185.466 298.201 187.122 cv
298.201 188.778 299.545 190.122 301.201 190.122 cv
302.856 190.122 304.201 188.778 304.201 187.122 cv
@
299.641 184.362 mo
299.641 182.706 298.297 181.362 296.641 181.362 cv
294.984 181.362 293.641 182.706 293.641 184.362 cv
293.641 186.019 294.984 187.362 296.641 187.362 cv
298.297 187.362 299.641 186.019 299.641 184.362 cv
@
294.841 181.122 mo
294.841 179.466 293.497 178.122 291.841 178.122 cv
290.185 178.122 288.841 179.466 288.841 181.122 cv
288.841 182.778 290.185 184.122 291.841 184.122 cv
293.497 184.122 294.841 182.778 294.841 181.122 cv
@
290.041 176.202 mo
290.041 174.546 288.697 173.202 287.041 173.202 cv
285.385 173.202 284.041 174.546 284.041 176.202 cv
284.041 177.858 285.385 179.202 287.041 179.202 cv
288.697 179.202 290.041 177.858 290.041 176.202 cv
@
285.721 170.922 mo
285.721 169.266 284.377 167.922 282.721 167.922 cv
281.065 167.922 279.721 169.266 279.721 170.922 cv
279.721 172.578 281.065 173.922 282.721 173.922 cv
284.377 173.922 285.721 172.578 285.721 170.922 cv
@
280.921 166.122 mo
280.921 164.466 279.577 163.122 277.921 163.122 cv
276.265 163.122 274.921 164.466 274.921 166.122 cv
274.921 167.778 276.265 169.122 277.921 169.122 cv
279.577 169.122 280.921 167.778 280.921 166.122 cv
@
276.361 160.122 mo
276.361 158.466 275.017 157.122 273.361 157.122 cv
271.705 157.122 270.361 158.466 270.361 160.122 cv
270.361 161.778 271.705 163.122 273.361 163.122 cv
275.017 163.122 276.361 161.778 276.361 160.122 cv
@
271.561 154.362 mo
271.561 152.706 270.217 151.362 268.561 151.362 cv
266.905 151.362 265.561 152.706 265.561 154.362 cv
265.561 156.018 266.905 157.362 268.561 157.362 cv
270.217 157.362 271.561 156.018 271.561 154.362 cv
@
266.881 146.922 mo
266.881 145.266 265.537 143.922 263.881 143.922 cv
262.225 143.922 260.881 145.266 260.881 146.922 cv
260.881 148.578 262.225 149.922 263.881 149.922 cv
265.537 149.922 266.881 148.578 266.881 146.922 cv
@
262.441 141.162 mo
262.441 139.506 261.097 138.162 259.441 138.162 cv
257.785 138.162 256.441 139.506 256.441 141.162 cv
256.441 142.818 257.785 144.162 259.441 144.162 cv
261.097 144.162 262.441 142.818 262.441 141.162 cv
@
257.641 151.122 mo
257.641 149.466 256.297 148.122 254.641 148.122 cv
252.985 148.122 251.641 149.466 251.641 151.122 cv
251.641 152.778 252.985 154.122 254.641 154.122 cv
256.297 154.122 257.641 152.778 257.641 151.122 cv
@
253.081 159.642 mo
253.081 157.986 251.737 156.642 250.081 156.642 cv
248.425 156.642 247.081 157.986 247.081 159.642 cv
247.081 161.298 248.425 162.642 250.081 162.642 cv
251.737 162.642 253.081 161.298 253.081 159.642 cv
@
248.281 162.042 mo
248.281 160.386 246.937 159.042 245.281 159.042 cv
243.625 159.042 242.281 160.386 242.281 162.042 cv
242.281 163.698 243.625 165.042 245.281 165.042 cv
246.937 165.042 248.281 163.698 248.281 162.042 cv
@
243.721 164.922 mo
243.721 163.266 242.377 161.922 240.721 161.922 cv
239.065 161.922 237.721 163.266 237.721 164.922 cv
237.721 166.578 239.065 167.922 240.721 167.922 cv
242.377 167.922 243.721 166.578 243.721 164.922 cv
@
239.161 166.122 mo
239.161 164.466 237.817 163.122 236.161 163.122 cv
234.505 163.122 233.161 164.466 233.161 166.122 cv
233.161 167.778 234.505 169.122 236.161 169.122 cv
237.817 169.122 239.161 167.778 239.161 166.122 cv
@
234.361 167.082 mo
234.361 165.426 233.017 164.082 231.361 164.082 cv
229.705 164.082 228.361 165.426 228.361 167.082 cv
228.361 168.738 229.705 170.082 231.361 170.082 cv
233.017 170.082 234.361 168.738 234.361 167.082 cv
@
229.801 166.603 mo
229.801 164.946 228.457 163.603 226.801 163.603 cv
225.145 163.603 223.801 164.946 223.801 166.603 cv
223.801 168.258 225.145 169.603 226.801 169.603 cv
228.457 169.603 229.801 168.258 229.801 166.603 cv
@
225.241 167.082 mo
225.241 165.426 223.897 164.082 222.241 164.082 cv
220.585 164.082 219.241 165.426 219.241 167.082 cv
219.241 168.738 220.585 170.082 222.241 170.082 cv
223.897 170.082 225.241 168.738 225.241 167.082 cv
@
220.681 167.802 mo
220.681 166.146 219.337 164.802 217.681 164.802 cv
216.025 164.802 214.681 166.146 214.681 167.802 cv
214.681 169.458 216.025 170.802 217.681 170.802 cv
219.337 170.802 220.681 169.458 220.681 167.802 cv
@
215.881 168.282 mo
215.881 166.626 214.537 165.282 212.881 165.282 cv
211.225 165.282 209.881 166.626 209.881 168.282 cv
209.881 169.938 211.225 171.282 212.881 171.282 cv
214.537 171.282 215.881 169.938 215.881 168.282 cv
@
364.681 198.522 mo
364.681 196.866 363.337 195.522 361.681 195.522 cv
360.024 195.522 358.681 196.866 358.681 198.522 cv
358.681 200.178 360.024 201.522 361.681 201.522 cv
363.337 201.522 364.681 200.178 364.681 198.522 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 198.522 mo
359.881 196.866 358.537 195.522 356.881 195.522 cv
355.225 195.522 353.881 196.866 353.881 198.522 cv
353.881 200.178 355.225 201.522 356.881 201.522 cv
358.537 201.522 359.881 200.178 359.881 198.522 cv
ef
355.321 198.522 mo
355.321 196.866 353.977 195.522 352.321 195.522 cv
350.665 195.522 349.321 196.866 349.321 198.522 cv
349.321 200.178 350.665 201.522 352.321 201.522 cv
353.977 201.522 355.321 200.178 355.321 198.522 cv
ef
350.521 198.522 mo
350.521 196.866 349.177 195.522 347.521 195.522 cv
345.865 195.522 344.521 196.866 344.521 198.522 cv
344.521 200.178 345.865 201.522 347.521 201.522 cv
349.177 201.522 350.521 200.178 350.521 198.522 cv
ef
345.961 198.522 mo
345.961 196.866 344.617 195.522 342.961 195.522 cv
341.305 195.522 339.961 196.866 339.961 198.522 cv
339.961 200.178 341.305 201.522 342.961 201.522 cv
344.617 201.522 345.961 200.178 345.961 198.522 cv
ef
341.4 198.282 mo
341.4 196.626 340.057 195.282 338.4 195.282 cv
336.745 195.282 335.4 196.626 335.4 198.282 cv
335.4 199.938 336.745 201.282 338.4 201.282 cv
340.057 201.282 341.4 199.938 341.4 198.282 cv
ef
336.601 198.282 mo
336.601 196.626 335.257 195.282 333.601 195.282 cv
331.945 195.282 330.601 196.626 330.601 198.282 cv
330.601 199.938 331.945 201.282 333.601 201.282 cv
335.257 201.282 336.601 199.938 336.601 198.282 cv
ef
332.041 198.042 mo
332.041 196.386 330.697 195.042 329.041 195.042 cv
327.385 195.042 326.041 196.386 326.041 198.042 cv
326.041 199.698 327.385 201.042 329.041 201.042 cv
330.697 201.042 332.041 199.698 332.041 198.042 cv
ef
327.48 198.042 mo
327.48 196.386 326.137 195.042 324.48 195.042 cv
322.825 195.042 321.48 196.386 321.48 198.042 cv
321.48 199.698 322.825 201.042 324.48 201.042 cv
326.137 201.042 327.48 199.698 327.48 198.042 cv
ef
322.681 197.082 mo
322.681 195.426 321.337 194.082 319.681 194.082 cv
318.024 194.082 316.681 195.426 316.681 197.082 cv
316.681 198.738 318.024 200.082 319.681 200.082 cv
321.337 200.082 322.681 198.738 322.681 197.082 cv
ef
318.121 196.603 mo
318.121 194.946 316.777 193.603 315.121 193.603 cv
313.465 193.603 312.121 194.946 312.121 196.603 cv
312.121 198.258 313.465 199.603 315.121 199.603 cv
316.777 199.603 318.121 198.258 318.121 196.603 cv
ef
313.321 196.603 mo
313.321 194.946 311.977 193.603 310.321 193.603 cv
308.665 193.603 307.321 194.946 307.321 196.603 cv
307.321 198.258 308.665 199.603 310.321 199.603 cv
311.977 199.603 313.321 198.258 313.321 196.603 cv
ef
308.881 194.922 mo
308.881 193.266 307.537 191.922 305.881 191.922 cv
304.225 191.922 302.881 193.266 302.881 194.922 cv
302.881 196.578 304.225 197.922 305.881 197.922 cv
307.537 197.922 308.881 196.578 308.881 194.922 cv
ef
304.201 194.442 mo
304.201 192.786 302.856 191.442 301.201 191.442 cv
299.545 191.442 298.201 192.786 298.201 194.442 cv
298.201 196.098 299.545 197.442 301.201 197.442 cv
302.856 197.442 304.201 196.098 304.201 194.442 cv
ef
299.641 192.042 mo
299.641 190.386 298.297 189.042 296.641 189.042 cv
294.984 189.042 293.641 190.386 293.641 192.042 cv
293.641 193.698 294.984 195.042 296.641 195.042 cv
298.297 195.042 299.641 193.698 299.641 192.042 cv
ef
294.841 189.162 mo
294.841 187.506 293.497 186.162 291.841 186.162 cv
290.185 186.162 288.841 187.506 288.841 189.162 cv
288.841 190.818 290.185 192.162 291.841 192.162 cv
293.497 192.162 294.841 190.818 294.841 189.162 cv
ef
290.041 184.842 mo
290.041 183.187 288.697 181.842 287.041 181.842 cv
285.385 181.842 284.041 183.187 284.041 184.842 cv
284.041 186.498 285.385 187.842 287.041 187.842 cv
288.697 187.842 290.041 186.498 290.041 184.842 cv
ef
285.721 180.522 mo
285.721 178.866 284.377 177.522 282.721 177.522 cv
281.065 177.522 279.721 178.866 279.721 180.522 cv
279.721 182.178 281.065 183.522 282.721 183.522 cv
284.377 183.522 285.721 182.178 285.721 180.522 cv
ef
280.921 175.722 mo
280.921 174.066 279.577 172.722 277.921 172.722 cv
276.265 172.722 274.921 174.066 274.921 175.722 cv
274.921 177.378 276.265 178.722 277.921 178.722 cv
279.577 178.722 280.921 177.378 280.921 175.722 cv
ef
276.361 172.362 mo
276.361 170.706 275.017 169.362 273.361 169.362 cv
271.705 169.362 270.361 170.706 270.361 172.362 cv
270.361 174.019 271.705 175.362 273.361 175.362 cv
275.017 175.362 276.361 174.019 276.361 172.362 cv
ef
271.561 163.122 mo
271.561 161.466 270.217 160.122 268.561 160.122 cv
266.905 160.122 265.561 161.466 265.561 163.122 cv
265.561 164.778 266.905 166.122 268.561 166.122 cv
270.217 166.122 271.561 164.778 271.561 163.122 cv
ef
266.881 155.802 mo
266.881 154.146 265.537 152.802 263.881 152.802 cv
262.225 152.802 260.881 154.146 260.881 155.802 cv
260.881 157.458 262.225 158.802 263.881 158.802 cv
265.537 158.802 266.881 157.458 266.881 155.802 cv
ef
262.441 146.202 mo
262.441 144.546 261.097 143.202 259.441 143.202 cv
257.785 143.202 256.441 144.546 256.441 146.202 cv
256.441 147.858 257.785 149.202 259.441 149.202 cv
261.097 149.202 262.441 147.858 262.441 146.202 cv
ef
257.641 137.322 mo
257.641 135.666 256.297 134.322 254.641 134.322 cv
252.985 134.322 251.641 135.666 251.641 137.322 cv
251.641 138.978 252.985 140.322 254.641 140.322 cv
256.297 140.322 257.641 138.978 257.641 137.322 cv
ef
253.081 141.642 mo
253.081 139.986 251.737 138.642 250.081 138.642 cv
248.425 138.642 247.081 139.986 247.081 141.642 cv
247.081 143.298 248.425 144.642 250.081 144.642 cv
251.737 144.642 253.081 143.298 253.081 141.642 cv
ef
248.281 145.962 mo
248.281 144.306 246.937 142.962 245.281 142.962 cv
243.625 142.962 242.281 144.306 242.281 145.962 cv
242.281 147.618 243.625 148.962 245.281 148.962 cv
246.937 148.962 248.281 147.618 248.281 145.962 cv
ef
243.721 147.642 mo
243.721 145.986 242.377 144.642 240.721 144.642 cv
239.065 144.642 237.721 145.986 237.721 147.642 cv
237.721 149.298 239.065 150.642 240.721 150.642 cv
242.377 150.642 243.721 149.298 243.721 147.642 cv
ef
239.161 147.642 mo
239.161 145.986 237.817 144.642 236.161 144.642 cv
234.505 144.642 233.161 145.986 233.161 147.642 cv
233.161 149.298 234.505 150.642 236.161 150.642 cv
237.817 150.642 239.161 149.298 239.161 147.642 cv
ef
234.361 147.642 mo
234.361 145.986 233.017 144.642 231.361 144.642 cv
229.705 144.642 228.361 145.986 228.361 147.642 cv
228.361 149.298 229.705 150.642 231.361 150.642 cv
233.017 150.642 234.361 149.298 234.361 147.642 cv
ef
229.801 146.442 mo
229.801 144.786 228.457 143.442 226.801 143.442 cv
225.145 143.442 223.801 144.786 223.801 146.442 cv
223.801 148.098 225.145 149.442 226.801 149.442 cv
228.457 149.442 229.801 148.098 229.801 146.442 cv
ef
225.241 151.722 mo
225.241 150.066 223.897 148.722 222.241 148.722 cv
220.585 148.722 219.241 150.066 219.241 151.722 cv
219.241 153.378 220.585 154.722 222.241 154.722 cv
223.897 154.722 225.241 153.378 225.241 151.722 cv
ef
220.681 178.603 mo
220.681 176.946 219.337 175.603 217.681 175.603 cv
216.025 175.603 214.681 176.946 214.681 178.603 cv
214.681 180.258 216.025 181.603 217.681 181.603 cv
219.337 181.603 220.681 180.258 220.681 178.603 cv
ef
215.881 192.762 mo
215.881 191.106 214.537 189.762 212.881 189.762 cv
211.225 189.762 209.881 191.106 209.881 192.762 cv
209.881 194.418 211.225 195.762 212.881 195.762 cv
214.537 195.762 215.881 194.418 215.881 192.762 cv
ef
361.361 206.122 mo
362.361 205.122 li
362.361 109.622 li
511.861 109.622 li
512.861 108.622 li
361.361 108.622 li
361.361 206.122 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
361.361 206.122 mo
512.861 206.122 li
361.361 206.122 mo
361.361 108.622 li
512.861 108.622 li
512.861 206.122 li
361.361 206.122 li
cp
0 0 0 1 cmyk
@
507.111 204.622 mo
507.111 206.122 li
501.111 203.122 mo
501.111 206.122 li
501.111 203.122 mo
501.111 206.122 li
495.361 204.622 mo
495.361 206.122 li
489.611 204.622 mo
489.611 206.122 li
483.611 204.622 mo
483.611 206.122 li
477.861 203.122 mo
477.861 206.122 li
472.111 204.622 mo
472.111 206.122 li
466.361 204.622 mo
466.361 206.122 li
460.361 204.622 mo
460.361 206.122 li
454.611 203.122 mo
454.611 206.122 li
448.861 204.622 mo
448.861 206.122 li
442.861 204.622 mo
442.861 206.122 li
437.111 204.622 mo
437.111 206.122 li
431.361 203.122 mo
431.361 206.122 li
425.361 204.622 mo
425.361 206.122 li
419.611 204.622 mo
419.611 206.122 li
413.861 204.622 mo
413.861 206.122 li
407.861 203.122 mo
407.861 206.122 li
402.111 204.622 mo
402.111 206.122 li
396.361 204.622 mo
396.361 206.122 li
390.611 204.622 mo
390.611 206.122 li
384.611 203.122 mo
384.611 206.122 li
378.861 204.622 mo
378.861 206.122 li
373.111 204.622 mo
373.111 206.122 li
367.111 204.622 mo
367.111 206.122 li
361.361 203.122 mo
361.361 206.122 li
@
361.361 206.122 mo
361.361 108.622 li
@
365.861 108.622 mo
361.361 108.622 li
363.611 204.622 mo
361.361 204.622 li
363.611 201.622 mo
361.361 201.622 li
365.861 198.622 mo
361.361 198.622 li
365.861 108.622 mo
361.361 108.622 li
363.611 111.622 mo
361.361 111.622 li
363.611 114.622 mo
361.361 114.622 li
363.611 117.622 mo
361.361 117.622 li
363.611 120.622 mo
361.361 120.622 li
365.861 123.622 mo
361.361 123.622 li
363.611 126.622 mo
361.361 126.622 li
363.611 129.622 mo
361.361 129.622 li
363.611 132.622 mo
361.361 132.622 li
363.611 135.622 mo
361.361 135.622 li
365.861 138.622 mo
361.361 138.622 li
363.611 141.622 mo
361.361 141.622 li
363.611 144.622 mo
361.361 144.622 li
363.611 147.622 mo
361.361 147.622 li
363.611 150.622 mo
361.361 150.622 li
365.861 153.622 mo
361.361 153.622 li
363.611 156.622 mo
361.361 156.622 li
363.611 159.622 mo
361.361 159.622 li
363.611 162.622 mo
361.361 162.622 li
363.611 165.622 mo
361.361 165.622 li
365.861 168.622 mo
361.361 168.622 li
363.611 171.622 mo
361.361 171.622 li
363.611 174.622 mo
361.361 174.622 li
363.611 177.622 mo
361.361 177.622 li
363.611 180.622 mo
361.361 180.622 li
365.861 183.622 mo
361.361 183.622 li
363.611 186.622 mo
361.361 186.622 li
363.611 189.622 mo
361.361 189.622 li
363.611 192.622 mo
361.361 192.622 li
363.611 195.622 mo
361.361 195.622 li
365.861 198.622 mo
361.361 198.622 li
@
515.781 198.522 mo
515.781 196.866 514.438 195.522 512.781 195.522 cv
511.125 195.522 509.781 196.866 509.781 198.522 cv
509.781 200.178 511.125 201.522 512.781 201.522 cv
514.438 201.522 515.781 200.178 515.781 198.522 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 198.522 mo
511.222 196.866 509.877 195.522 508.222 195.522 cv
506.565 195.522 505.222 196.866 505.222 198.522 cv
505.222 200.178 506.565 201.522 508.222 201.522 cv
509.877 201.522 511.222 200.178 511.222 198.522 cv
ef
506.661 198.522 mo
506.661 196.866 505.317 195.522 503.661 195.522 cv
502.005 195.522 500.661 196.866 500.661 198.522 cv
500.661 200.178 502.005 201.522 503.661 201.522 cv
505.317 201.522 506.661 200.178 506.661 198.522 cv
ef
501.861 198.522 mo
501.861 196.866 500.518 195.522 498.861 195.522 cv
497.205 195.522 495.861 196.866 495.861 198.522 cv
495.861 200.178 497.205 201.522 498.861 201.522 cv
500.518 201.522 501.861 200.178 501.861 198.522 cv
ef
497.062 198.522 mo
497.062 196.866 495.718 195.522 494.062 195.522 cv
492.405 195.522 491.062 196.866 491.062 198.522 cv
491.062 200.178 492.405 201.522 494.062 201.522 cv
495.718 201.522 497.062 200.178 497.062 198.522 cv
ef
492.501 198.522 mo
492.501 196.866 491.157 195.522 489.501 195.522 cv
487.846 195.522 486.501 196.866 486.501 198.522 cv
486.501 200.178 487.846 201.522 489.501 201.522 cv
491.157 201.522 492.501 200.178 492.501 198.522 cv
ef
487.941 198.522 mo
487.941 196.866 486.598 195.522 484.941 195.522 cv
483.285 195.522 481.941 196.866 481.941 198.522 cv
481.941 200.178 483.285 201.522 484.941 201.522 cv
486.598 201.522 487.941 200.178 487.941 198.522 cv
ef
483.142 197.802 mo
483.142 196.146 481.797 194.802 480.142 194.802 cv
478.485 194.802 477.142 196.146 477.142 197.802 cv
477.142 199.458 478.485 200.802 480.142 200.802 cv
481.797 200.802 483.142 199.458 483.142 197.802 cv
ef
478.581 198.042 mo
478.581 196.386 477.237 195.042 475.581 195.042 cv
473.926 195.042 472.581 196.386 472.581 198.042 cv
472.581 199.698 473.926 201.042 475.581 201.042 cv
477.237 201.042 478.581 199.698 478.581 198.042 cv
ef
473.781 197.563 mo
473.781 195.906 472.438 194.563 470.781 194.563 cv
469.125 194.563 467.781 195.906 467.781 197.563 cv
467.781 199.218 469.125 200.563 470.781 200.563 cv
472.438 200.563 473.781 199.218 473.781 197.563 cv
ef
469.461 197.082 mo
469.461 195.426 468.117 194.082 466.461 194.082 cv
464.806 194.082 463.461 195.426 463.461 197.082 cv
463.461 198.738 464.806 200.082 466.461 200.082 cv
468.117 200.082 469.461 198.738 469.461 197.082 cv
ef
464.661 195.882 mo
464.661 194.226 463.317 192.882 461.661 192.882 cv
460.005 192.882 458.661 194.226 458.661 195.882 cv
458.661 197.538 460.005 198.882 461.661 198.882 cv
463.317 198.882 464.661 197.538 464.661 195.882 cv
ef
459.861 194.202 mo
459.861 192.546 458.518 191.202 456.861 191.202 cv
455.205 191.202 453.861 192.546 453.861 194.202 cv
453.861 195.858 455.205 197.202 456.861 197.202 cv
458.518 197.202 459.861 195.858 459.861 194.202 cv
ef
455.302 192.762 mo
455.302 191.106 453.957 189.762 452.302 189.762 cv
450.646 189.762 449.302 191.106 449.302 192.762 cv
449.302 194.418 450.646 195.762 452.302 195.762 cv
453.957 195.762 455.302 194.418 455.302 192.762 cv
ef
450.501 191.082 mo
450.501 189.426 449.157 188.082 447.501 188.082 cv
445.846 188.082 444.501 189.426 444.501 191.082 cv
444.501 192.738 445.846 194.082 447.501 194.082 cv
449.157 194.082 450.501 192.738 450.501 191.082 cv
ef
445.941 187.722 mo
445.941 186.066 444.598 184.722 442.941 184.722 cv
441.285 184.722 439.941 186.066 439.941 187.722 cv
439.941 189.378 441.285 190.722 442.941 190.722 cv
444.598 190.722 445.941 189.378 445.941 187.722 cv
ef
441.381 183.642 mo
441.381 181.986 440.037 180.642 438.381 180.642 cv
436.726 180.642 435.381 181.986 435.381 183.642 cv
435.381 185.298 436.726 186.642 438.381 186.642 cv
440.037 186.642 441.381 185.298 441.381 183.642 cv
ef
436.581 178.603 mo
436.581 176.946 435.237 175.603 433.581 175.603 cv
431.926 175.603 430.581 176.946 430.581 178.603 cv
430.581 180.258 431.926 181.603 433.581 181.603 cv
435.237 181.603 436.581 180.258 436.581 178.603 cv
ef
431.781 173.322 mo
431.781 171.666 430.438 170.322 428.781 170.322 cv
427.125 170.322 425.781 171.666 425.781 173.322 cv
425.781 174.979 427.125 176.322 428.781 176.322 cv
430.438 176.322 431.781 174.979 431.781 173.322 cv
ef
427.461 169.482 mo
427.461 167.826 426.117 166.482 424.461 166.482 cv
422.806 166.482 421.461 167.826 421.461 169.482 cv
421.461 171.138 422.806 172.482 424.461 172.482 cv
426.117 172.482 427.461 171.138 427.461 169.482 cv
ef
422.661 160.603 mo
422.661 158.946 421.317 157.603 419.661 157.603 cv
418.005 157.603 416.661 158.946 416.661 160.603 cv
416.661 162.258 418.005 163.603 419.661 163.603 cv
421.317 163.603 422.661 162.258 422.661 160.603 cv
ef
417.861 154.122 mo
417.861 152.466 416.518 151.122 414.861 151.122 cv
413.205 151.122 411.861 152.466 411.861 154.122 cv
411.861 155.778 413.205 157.122 414.861 157.122 cv
416.518 157.122 417.861 155.778 417.861 154.122 cv
ef
413.302 141.882 mo
413.302 140.226 411.957 138.882 410.302 138.882 cv
408.646 138.882 407.302 140.226 407.302 141.882 cv
407.302 143.538 408.646 144.882 410.302 144.882 cv
411.957 144.882 413.302 143.538 413.302 141.882 cv
ef
408.501 134.202 mo
408.501 132.546 407.157 131.202 405.501 131.202 cv
403.846 131.202 402.501 132.546 402.501 134.202 cv
402.501 135.858 403.846 137.202 405.501 137.202 cv
407.157 137.202 408.501 135.858 408.501 134.202 cv
ef
404.182 142.362 mo
404.182 140.706 402.837 139.362 401.182 139.362 cv
399.525 139.362 398.182 140.706 398.182 142.362 cv
398.182 144.018 399.525 145.362 401.182 145.362 cv
402.837 145.362 404.182 144.018 404.182 142.362 cv
ef
399.381 147.642 mo
399.381 145.986 398.037 144.642 396.381 144.642 cv
394.726 144.642 393.381 145.986 393.381 147.642 cv
393.381 149.298 394.726 150.642 396.381 150.642 cv
398.037 150.642 399.381 149.298 399.381 147.642 cv
ef
394.581 150.042 mo
394.581 148.386 393.237 147.042 391.581 147.042 cv
389.926 147.042 388.581 148.386 388.581 150.042 cv
388.581 151.698 389.926 153.042 391.581 153.042 cv
393.237 153.042 394.581 151.698 394.581 150.042 cv
ef
390.021 149.802 mo
390.021 148.146 388.678 146.802 387.021 146.802 cv
385.365 146.802 384.021 148.146 384.021 149.802 cv
384.021 151.458 385.365 152.802 387.021 152.802 cv
388.678 152.802 390.021 151.458 390.021 149.802 cv
ef
385.461 149.322 mo
385.461 147.666 384.117 146.322 382.461 146.322 cv
380.806 146.322 379.461 147.666 379.461 149.322 cv
379.461 150.978 380.806 152.322 382.461 152.322 cv
384.117 152.322 385.461 150.978 385.461 149.322 cv
ef
380.661 149.802 mo
380.661 148.146 379.317 146.802 377.661 146.802 cv
376.005 146.802 374.661 148.146 374.661 149.802 cv
374.661 151.458 376.005 152.802 377.661 152.802 cv
379.317 152.802 380.661 151.458 380.661 149.802 cv
ef
376.102 160.122 mo
376.102 158.466 374.758 157.122 373.102 157.122 cv
371.445 157.122 370.102 158.466 370.102 160.122 cv
370.102 161.778 371.445 163.122 373.102 163.122 cv
374.758 163.122 376.102 161.778 376.102 160.122 cv
ef
371.302 186.762 mo
371.302 185.106 369.957 183.762 368.302 183.762 cv
366.646 183.762 365.302 185.106 365.302 186.762 cv
365.302 188.418 366.646 189.762 368.302 189.762 cv
369.957 189.762 371.302 188.418 371.302 186.762 cv
ef
366.501 197.802 mo
366.501 196.146 365.157 194.802 363.501 194.802 cv
361.846 194.802 360.501 196.146 360.501 197.802 cv
360.501 199.458 361.846 200.802 363.501 200.802 cv
365.157 200.802 366.501 199.458 366.501 197.802 cv
ef
361.361 198.622 mo
512.861 198.622 li
0 0 0 1 cmyk
@
515.781 198.522 mo
515.781 196.866 514.438 195.522 512.781 195.522 cv
511.125 195.522 509.781 196.866 509.781 198.522 cv
509.781 200.178 511.125 201.522 512.781 201.522 cv
514.438 201.522 515.781 200.178 515.781 198.522 cv
.878019 .337896 1 .281529 cmyk
@
511.222 198.522 mo
511.222 196.866 509.877 195.522 508.222 195.522 cv
506.565 195.522 505.222 196.866 505.222 198.522 cv
505.222 200.178 506.565 201.522 508.222 201.522 cv
509.877 201.522 511.222 200.178 511.222 198.522 cv
@
506.661 198.522 mo
506.661 196.866 505.317 195.522 503.661 195.522 cv
502.005 195.522 500.661 196.866 500.661 198.522 cv
500.661 200.178 502.005 201.522 503.661 201.522 cv
505.317 201.522 506.661 200.178 506.661 198.522 cv
@
501.861 198.522 mo
501.861 196.866 500.518 195.522 498.861 195.522 cv
497.205 195.522 495.861 196.866 495.861 198.522 cv
495.861 200.178 497.205 201.522 498.861 201.522 cv
500.518 201.522 501.861 200.178 501.861 198.522 cv
@
497.062 198.522 mo
497.062 196.866 495.718 195.522 494.062 195.522 cv
492.405 195.522 491.062 196.866 491.062 198.522 cv
491.062 200.178 492.405 201.522 494.062 201.522 cv
495.718 201.522 497.062 200.178 497.062 198.522 cv
@
492.501 198.282 mo
492.501 196.626 491.157 195.282 489.501 195.282 cv
487.846 195.282 486.501 196.626 486.501 198.282 cv
486.501 199.938 487.846 201.282 489.501 201.282 cv
491.157 201.282 492.501 199.938 492.501 198.282 cv
@
487.941 197.563 mo
487.941 195.906 486.598 194.563 484.941 194.563 cv
483.285 194.563 481.941 195.906 481.941 197.563 cv
481.941 199.218 483.285 200.563 484.941 200.563 cv
486.598 200.563 487.941 199.218 487.941 197.563 cv
@
483.142 197.082 mo
483.142 195.426 481.797 194.082 480.142 194.082 cv
478.485 194.082 477.142 195.426 477.142 197.082 cv
477.142 198.738 478.485 200.082 480.142 200.082 cv
481.797 200.082 483.142 198.738 483.142 197.082 cv
@
478.581 196.362 mo
478.581 194.706 477.237 193.362 475.581 193.362 cv
473.926 193.362 472.581 194.706 472.581 196.362 cv
472.581 198.019 473.926 199.362 475.581 199.362 cv
477.237 199.362 478.581 198.019 478.581 196.362 cv
@
473.781 195.402 mo
473.781 193.746 472.438 192.402 470.781 192.402 cv
469.125 192.402 467.781 193.746 467.781 195.402 cv
467.781 197.058 469.125 198.402 470.781 198.402 cv
472.438 198.402 473.781 197.058 473.781 195.402 cv
@
469.461 194.202 mo
469.461 192.546 468.117 191.202 466.461 191.202 cv
464.806 191.202 463.461 192.546 463.461 194.202 cv
463.461 195.858 464.806 197.202 466.461 197.202 cv
468.117 197.202 469.461 195.858 469.461 194.202 cv
@
464.661 192.042 mo
464.661 190.386 463.317 189.042 461.661 189.042 cv
460.005 189.042 458.661 190.386 458.661 192.042 cv
458.661 193.698 460.005 195.042 461.661 195.042 cv
463.317 195.042 464.661 193.698 464.661 192.042 cv
@
459.861 190.362 mo
459.861 188.706 458.518 187.362 456.861 187.362 cv
455.205 187.362 453.861 188.706 453.861 190.362 cv
453.861 192.019 455.205 193.362 456.861 193.362 cv
458.518 193.362 459.861 192.019 459.861 190.362 cv
@
455.302 188.202 mo
455.302 186.546 453.957 185.202 452.302 185.202 cv
450.646 185.202 449.302 186.546 449.302 188.202 cv
449.302 189.858 450.646 191.202 452.302 191.202 cv
453.957 191.202 455.302 189.858 455.302 188.202 cv
@
450.501 184.603 mo
450.501 182.946 449.157 181.603 447.501 181.603 cv
445.846 181.603 444.501 182.946 444.501 184.603 cv
444.501 186.258 445.846 187.603 447.501 187.603 cv
449.157 187.603 450.501 186.258 450.501 184.603 cv
@
445.941 181.962 mo
445.941 180.306 444.598 178.962 442.941 178.962 cv
441.285 178.962 439.941 180.306 439.941 181.962 cv
439.941 183.618 441.285 184.962 442.941 184.962 cv
444.598 184.962 445.941 183.618 445.941 181.962 cv
@
441.381 177.162 mo
441.381 175.506 440.037 174.162 438.381 174.162 cv
436.726 174.162 435.381 175.506 435.381 177.162 cv
435.381 178.818 436.726 180.162 438.381 180.162 cv
440.037 180.162 441.381 178.818 441.381 177.162 cv
@
436.581 173.322 mo
436.581 171.666 435.237 170.322 433.581 170.322 cv
431.926 170.322 430.581 171.666 430.581 173.322 cv
430.581 174.979 431.926 176.322 433.581 176.322 cv
435.237 176.322 436.581 174.979 436.581 173.322 cv
@
431.781 166.122 mo
431.781 164.466 430.438 163.122 428.781 163.122 cv
427.125 163.122 425.781 164.466 425.781 166.122 cv
425.781 167.778 427.125 169.122 428.781 169.122 cv
430.438 169.122 431.781 167.778 431.781 166.122 cv
@
427.461 161.082 mo
427.461 159.426 426.117 158.082 424.461 158.082 cv
422.806 158.082 421.461 159.426 421.461 161.082 cv
421.461 162.738 422.806 164.082 424.461 164.082 cv
426.117 164.082 427.461 162.738 427.461 161.082 cv
@
422.661 155.562 mo
422.661 153.906 421.317 152.562 419.661 152.562 cv
418.005 152.562 416.661 153.906 416.661 155.562 cv
416.661 157.218 418.005 158.563 419.661 158.563 cv
421.317 158.563 422.661 157.218 422.661 155.562 cv
@
417.861 146.682 mo
417.861 145.026 416.518 143.682 414.861 143.682 cv
413.205 143.682 411.861 145.026 411.861 146.682 cv
411.861 148.338 413.205 149.682 414.861 149.682 cv
416.518 149.682 417.861 148.338 417.861 146.682 cv
@
413.302 141.882 mo
413.302 140.226 411.957 138.882 410.302 138.882 cv
408.646 138.882 407.302 140.226 407.302 141.882 cv
407.302 143.538 408.646 144.882 410.302 144.882 cv
411.957 144.882 413.302 143.538 413.302 141.882 cv
@
408.501 151.482 mo
408.501 149.826 407.157 148.482 405.501 148.482 cv
403.846 148.482 402.501 149.826 402.501 151.482 cv
402.501 153.138 403.846 154.482 405.501 154.482 cv
407.157 154.482 408.501 153.138 408.501 151.482 cv
@
404.182 159.162 mo
404.182 157.506 402.837 156.162 401.182 156.162 cv
399.525 156.162 398.182 157.506 398.182 159.162 cv
398.182 160.818 399.525 162.162 401.182 162.162 cv
402.837 162.162 404.182 160.818 404.182 159.162 cv
@
399.381 162.042 mo
399.381 160.386 398.037 159.042 396.381 159.042 cv
394.726 159.042 393.381 160.386 393.381 162.042 cv
393.381 163.698 394.726 165.042 396.381 165.042 cv
398.037 165.042 399.381 163.698 399.381 162.042 cv
@
394.581 164.202 mo
394.581 162.546 393.237 161.202 391.581 161.202 cv
389.926 161.202 388.581 162.546 388.581 164.202 cv
388.581 165.858 389.926 167.202 391.581 167.202 cv
393.237 167.202 394.581 165.858 394.581 164.202 cv
@
390.021 163.482 mo
390.021 161.826 388.678 160.482 387.021 160.482 cv
385.365 160.482 384.021 161.826 384.021 163.482 cv
384.021 165.138 385.365 166.482 387.021 166.482 cv
388.678 166.482 390.021 165.138 390.021 163.482 cv
@
385.461 166.362 mo
385.461 164.706 384.117 163.362 382.461 163.362 cv
380.806 163.362 379.461 164.706 379.461 166.362 cv
379.461 168.019 380.806 169.362 382.461 169.362 cv
384.117 169.362 385.461 168.019 385.461 166.362 cv
@
380.661 167.563 mo
380.661 165.906 379.317 164.563 377.661 164.563 cv
376.005 164.563 374.661 165.906 374.661 167.563 cv
374.661 169.218 376.005 170.563 377.661 170.563 cv
379.317 170.563 380.661 169.218 380.661 167.563 cv
@
376.102 168.042 mo
376.102 166.386 374.758 165.042 373.102 165.042 cv
371.445 165.042 370.102 166.386 370.102 168.042 cv
370.102 169.698 371.445 171.042 373.102 171.042 cv
374.758 171.042 376.102 169.698 376.102 168.042 cv
@
371.302 168.282 mo
371.302 166.626 369.957 165.282 368.302 165.282 cv
366.646 165.282 365.302 166.626 365.302 168.282 cv
365.302 169.938 366.646 171.282 368.302 171.282 cv
369.957 171.282 371.302 169.938 371.302 168.282 cv
@
366.501 168.522 mo
366.501 166.866 365.157 165.522 363.501 165.522 cv
361.846 165.522 360.501 166.866 360.501 168.522 cv
360.501 170.178 361.846 171.522 363.501 171.522 cv
365.157 171.522 366.501 170.178 366.501 168.522 cv
@
515.781 198.522 mo
515.781 196.866 514.438 195.522 512.781 195.522 cv
511.125 195.522 509.781 196.866 509.781 198.522 cv
509.781 200.178 511.125 201.522 512.781 201.522 cv
514.438 201.522 515.781 200.178 515.781 198.522 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 198.522 mo
511.222 196.866 509.877 195.522 508.222 195.522 cv
506.565 195.522 505.222 196.866 505.222 198.522 cv
505.222 200.178 506.565 201.522 508.222 201.522 cv
509.877 201.522 511.222 200.178 511.222 198.522 cv
ef
506.661 198.522 mo
506.661 196.866 505.317 195.522 503.661 195.522 cv
502.005 195.522 500.661 196.866 500.661 198.522 cv
500.661 200.178 502.005 201.522 503.661 201.522 cv
505.317 201.522 506.661 200.178 506.661 198.522 cv
ef
501.861 198.522 mo
501.861 196.866 500.518 195.522 498.861 195.522 cv
497.205 195.522 495.861 196.866 495.861 198.522 cv
495.861 200.178 497.205 201.522 498.861 201.522 cv
500.518 201.522 501.861 200.178 501.861 198.522 cv
ef
497.062 198.522 mo
497.062 196.866 495.718 195.522 494.062 195.522 cv
492.405 195.522 491.062 196.866 491.062 198.522 cv
491.062 200.178 492.405 201.522 494.062 201.522 cv
495.718 201.522 497.062 200.178 497.062 198.522 cv
ef
492.501 198.522 mo
492.501 196.866 491.157 195.522 489.501 195.522 cv
487.846 195.522 486.501 196.866 486.501 198.522 cv
486.501 200.178 487.846 201.522 489.501 201.522 cv
491.157 201.522 492.501 200.178 492.501 198.522 cv
ef
487.941 198.522 mo
487.941 196.866 486.598 195.522 484.941 195.522 cv
483.285 195.522 481.941 196.866 481.941 198.522 cv
481.941 200.178 483.285 201.522 484.941 201.522 cv
486.598 201.522 487.941 200.178 487.941 198.522 cv
ef
483.142 197.802 mo
483.142 196.146 481.797 194.802 480.142 194.802 cv
478.485 194.802 477.142 196.146 477.142 197.802 cv
477.142 199.458 478.485 200.802 480.142 200.802 cv
481.797 200.802 483.142 199.458 483.142 197.802 cv
ef
478.581 198.042 mo
478.581 196.386 477.237 195.042 475.581 195.042 cv
473.926 195.042 472.581 196.386 472.581 198.042 cv
472.581 199.698 473.926 201.042 475.581 201.042 cv
477.237 201.042 478.581 199.698 478.581 198.042 cv
ef
473.781 197.563 mo
473.781 195.906 472.438 194.563 470.781 194.563 cv
469.125 194.563 467.781 195.906 467.781 197.563 cv
467.781 199.218 469.125 200.563 470.781 200.563 cv
472.438 200.563 473.781 199.218 473.781 197.563 cv
ef
469.461 197.082 mo
469.461 195.426 468.117 194.082 466.461 194.082 cv
464.806 194.082 463.461 195.426 463.461 197.082 cv
463.461 198.738 464.806 200.082 466.461 200.082 cv
468.117 200.082 469.461 198.738 469.461 197.082 cv
ef
464.661 195.882 mo
464.661 194.226 463.317 192.882 461.661 192.882 cv
460.005 192.882 458.661 194.226 458.661 195.882 cv
458.661 197.538 460.005 198.882 461.661 198.882 cv
463.317 198.882 464.661 197.538 464.661 195.882 cv
ef
459.861 194.202 mo
459.861 192.546 458.518 191.202 456.861 191.202 cv
455.205 191.202 453.861 192.546 453.861 194.202 cv
453.861 195.858 455.205 197.202 456.861 197.202 cv
458.518 197.202 459.861 195.858 459.861 194.202 cv
ef
455.302 192.762 mo
455.302 191.106 453.957 189.762 452.302 189.762 cv
450.646 189.762 449.302 191.106 449.302 192.762 cv
449.302 194.418 450.646 195.762 452.302 195.762 cv
453.957 195.762 455.302 194.418 455.302 192.762 cv
ef
450.501 191.082 mo
450.501 189.426 449.157 188.082 447.501 188.082 cv
445.846 188.082 444.501 189.426 444.501 191.082 cv
444.501 192.738 445.846 194.082 447.501 194.082 cv
449.157 194.082 450.501 192.738 450.501 191.082 cv
ef
445.941 187.722 mo
445.941 186.066 444.598 184.722 442.941 184.722 cv
441.285 184.722 439.941 186.066 439.941 187.722 cv
439.941 189.378 441.285 190.722 442.941 190.722 cv
444.598 190.722 445.941 189.378 445.941 187.722 cv
ef
441.381 183.642 mo
441.381 181.986 440.037 180.642 438.381 180.642 cv
436.726 180.642 435.381 181.986 435.381 183.642 cv
435.381 185.298 436.726 186.642 438.381 186.642 cv
440.037 186.642 441.381 185.298 441.381 183.642 cv
ef
436.581 178.603 mo
436.581 176.946 435.237 175.603 433.581 175.603 cv
431.926 175.603 430.581 176.946 430.581 178.603 cv
430.581 180.258 431.926 181.603 433.581 181.603 cv
435.237 181.603 436.581 180.258 436.581 178.603 cv
ef
431.781 173.322 mo
431.781 171.666 430.438 170.322 428.781 170.322 cv
427.125 170.322 425.781 171.666 425.781 173.322 cv
425.781 174.979 427.125 176.322 428.781 176.322 cv
430.438 176.322 431.781 174.979 431.781 173.322 cv
ef
427.461 169.482 mo
427.461 167.826 426.117 166.482 424.461 166.482 cv
422.806 166.482 421.461 167.826 421.461 169.482 cv
421.461 171.138 422.806 172.482 424.461 172.482 cv
426.117 172.482 427.461 171.138 427.461 169.482 cv
ef
422.661 160.603 mo
422.661 158.946 421.317 157.603 419.661 157.603 cv
418.005 157.603 416.661 158.946 416.661 160.603 cv
416.661 162.258 418.005 163.603 419.661 163.603 cv
421.317 163.603 422.661 162.258 422.661 160.603 cv
ef
417.861 154.122 mo
417.861 152.466 416.518 151.122 414.861 151.122 cv
413.205 151.122 411.861 152.466 411.861 154.122 cv
411.861 155.778 413.205 157.122 414.861 157.122 cv
416.518 157.122 417.861 155.778 417.861 154.122 cv
ef
413.302 141.882 mo
413.302 140.226 411.957 138.882 410.302 138.882 cv
408.646 138.882 407.302 140.226 407.302 141.882 cv
407.302 143.538 408.646 144.882 410.302 144.882 cv
411.957 144.882 413.302 143.538 413.302 141.882 cv
ef
408.501 134.202 mo
408.501 132.546 407.157 131.202 405.501 131.202 cv
403.846 131.202 402.501 132.546 402.501 134.202 cv
402.501 135.858 403.846 137.202 405.501 137.202 cv
407.157 137.202 408.501 135.858 408.501 134.202 cv
ef
404.182 142.362 mo
404.182 140.706 402.837 139.362 401.182 139.362 cv
399.525 139.362 398.182 140.706 398.182 142.362 cv
398.182 144.018 399.525 145.362 401.182 145.362 cv
402.837 145.362 404.182 144.018 404.182 142.362 cv
ef
399.381 147.642 mo
399.381 145.986 398.037 144.642 396.381 144.642 cv
394.726 144.642 393.381 145.986 393.381 147.642 cv
393.381 149.298 394.726 150.642 396.381 150.642 cv
398.037 150.642 399.381 149.298 399.381 147.642 cv
ef
394.581 150.042 mo
394.581 148.386 393.237 147.042 391.581 147.042 cv
389.926 147.042 388.581 148.386 388.581 150.042 cv
388.581 151.698 389.926 153.042 391.581 153.042 cv
393.237 153.042 394.581 151.698 394.581 150.042 cv
ef
390.021 149.802 mo
390.021 148.146 388.678 146.802 387.021 146.802 cv
385.365 146.802 384.021 148.146 384.021 149.802 cv
384.021 151.458 385.365 152.802 387.021 152.802 cv
388.678 152.802 390.021 151.458 390.021 149.802 cv
ef
385.461 149.322 mo
385.461 147.666 384.117 146.322 382.461 146.322 cv
380.806 146.322 379.461 147.666 379.461 149.322 cv
379.461 150.978 380.806 152.322 382.461 152.322 cv
384.117 152.322 385.461 150.978 385.461 149.322 cv
ef
380.661 149.802 mo
380.661 148.146 379.317 146.802 377.661 146.802 cv
376.005 146.802 374.661 148.146 374.661 149.802 cv
374.661 151.458 376.005 152.802 377.661 152.802 cv
379.317 152.802 380.661 151.458 380.661 149.802 cv
ef
376.102 160.122 mo
376.102 158.466 374.758 157.122 373.102 157.122 cv
371.445 157.122 370.102 158.466 370.102 160.122 cv
370.102 161.778 371.445 163.122 373.102 163.122 cv
374.758 163.122 376.102 161.778 376.102 160.122 cv
ef
371.302 186.762 mo
371.302 185.106 369.957 183.762 368.302 183.762 cv
366.646 183.762 365.302 185.106 365.302 186.762 cv
365.302 188.418 366.646 189.762 368.302 189.762 cv
369.957 189.762 371.302 188.418 371.302 186.762 cv
ef
366.501 197.802 mo
366.501 196.146 365.157 194.802 363.501 194.802 cv
361.846 194.802 360.501 196.146 360.501 197.802 cv
360.501 199.458 361.846 200.802 363.501 200.802 cv
365.157 200.802 366.501 199.458 366.501 197.802 cv
ef
60.2012 303.567 mo
61.2012 302.567 li
61.2012 207.067 li
210.201 207.067 li
211.201 206.067 li
60.2012 206.067 li
60.2012 303.567 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
60.2012 303.567 mo
211.201 303.567 li
60.2012 303.567 mo
60.2012 206.067 li
211.201 206.067 li
211.201 303.567 li
60.2012 303.567 li
cp
0 0 0 1 cmyk
@
205.201 302.067 mo
205.201 303.567 li
199.451 300.817 mo
199.451 303.567 li
199.451 300.817 mo
199.451 303.567 li
193.701 302.067 mo
193.701 303.567 li
187.951 302.067 mo
187.951 303.567 li
181.951 302.067 mo
181.951 303.567 li
176.201 300.817 mo
176.201 303.567 li
170.451 302.067 mo
170.451 303.567 li
164.701 302.067 mo
164.701 303.567 li
158.951 302.067 mo
158.951 303.567 li
152.951 300.817 mo
152.951 303.567 li
147.201 302.067 mo
147.201 303.567 li
141.451 302.067 mo
141.451 303.567 li
135.701 302.067 mo
135.701 303.567 li
129.701 300.817 mo
129.701 303.567 li
123.951 302.067 mo
123.951 303.567 li
118.201 302.067 mo
118.201 303.567 li
112.451 302.067 mo
112.451 303.567 li
106.451 300.817 mo
106.451 303.567 li
100.701 302.067 mo
100.701 303.567 li
94.9512 302.067 mo
94.9512 303.567 li
89.2012 302.067 mo
89.2012 303.567 li
83.2012 300.817 mo
83.2012 303.567 li
77.4512 302.067 mo
77.4512 303.567 li
71.7012 302.067 mo
71.7012 303.567 li
65.9512 302.067 mo
65.9512 303.567 li
60.2012 300.817 mo
60.2012 303.567 li
@
60.2012 303.567 mo
60.2012 206.067 li
@
64.7012 206.067 mo
60.2012 206.067 li
62.4512 302.067 mo
60.2012 302.067 li
62.4512 299.067 mo
60.2012 299.067 li
64.7012 296.067 mo
60.2012 296.067 li
64.7012 206.067 mo
60.2012 206.067 li
62.4512 209.067 mo
60.2012 209.067 li
62.4512 212.067 mo
60.2012 212.067 li
62.4512 215.067 mo
60.2012 215.067 li
62.4512 218.067 mo
60.2012 218.067 li
64.7012 221.067 mo
60.2012 221.067 li
62.4512 224.067 mo
60.2012 224.067 li
62.4512 227.067 mo
60.2012 227.067 li
62.4512 230.067 mo
60.2012 230.067 li
62.4512 233.067 mo
60.2012 233.067 li
64.7012 236.067 mo
60.2012 236.067 li
62.4512 239.067 mo
60.2012 239.067 li
62.4512 242.067 mo
60.2012 242.067 li
62.4512 245.067 mo
60.2012 245.067 li
62.4512 248.067 mo
60.2012 248.067 li
64.7012 251.067 mo
60.2012 251.067 li
62.4512 254.067 mo
60.2012 254.067 li
62.4512 257.067 mo
60.2012 257.067 li
62.4512 260.067 mo
60.2012 260.067 li
62.4512 263.067 mo
60.2012 263.067 li
64.7012 266.067 mo
60.2012 266.067 li
62.4512 269.067 mo
60.2012 269.067 li
62.4512 272.067 mo
60.2012 272.067 li
62.4512 275.067 mo
60.2012 275.067 li
62.4512 278.067 mo
60.2012 278.067 li
64.7012 281.067 mo
60.2012 281.067 li
62.4512 284.067 mo
60.2012 284.067 li
62.4512 287.067 mo
60.2012 287.067 li
62.4512 290.067 mo
60.2012 290.067 li
62.4512 293.067 mo
60.2012 293.067 li
64.7012 296.067 mo
60.2012 296.067 li
@
214.121 296.138 mo
214.121 294.481 212.777 293.138 211.121 293.138 cv
209.465 293.138 208.121 294.481 208.121 296.138 cv
208.121 297.793 209.465 299.138 211.121 299.138 cv
212.777 299.138 214.121 297.793 214.121 296.138 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 296.138 mo
209.561 294.481 208.217 293.138 206.561 293.138 cv
204.905 293.138 203.561 294.481 203.561 296.138 cv
203.561 297.793 204.905 299.138 206.561 299.138 cv
208.217 299.138 209.561 297.793 209.561 296.138 cv
ef
204.761 296.138 mo
204.761 294.481 203.417 293.138 201.761 293.138 cv
200.105 293.138 198.761 294.481 198.761 296.138 cv
198.761 297.793 200.105 299.138 201.761 299.138 cv
203.417 299.138 204.761 297.793 204.761 296.138 cv
ef
200.201 296.138 mo
200.201 294.481 198.857 293.138 197.201 293.138 cv
195.545 293.138 194.201 294.481 194.201 296.138 cv
194.201 297.793 195.545 299.138 197.201 299.138 cv
198.857 299.138 200.201 297.793 200.201 296.138 cv
ef
195.401 296.138 mo
195.401 294.481 194.057 293.138 192.401 293.138 cv
190.745 293.138 189.401 294.481 189.401 296.138 cv
189.401 297.793 190.745 299.138 192.401 299.138 cv
194.057 299.138 195.401 297.793 195.401 296.138 cv
ef
190.841 296.138 mo
190.841 294.481 189.497 293.138 187.841 293.138 cv
186.185 293.138 184.841 294.481 184.841 296.138 cv
184.841 297.793 186.185 299.138 187.841 299.138 cv
189.497 299.138 190.841 297.793 190.841 296.138 cv
ef
186.281 295.657 mo
186.281 294.001 184.937 292.657 183.281 292.657 cv
181.625 292.657 180.281 294.001 180.281 295.657 cv
180.281 297.313 181.625 298.657 183.281 298.657 cv
184.937 298.657 186.281 297.313 186.281 295.657 cv
ef
181.721 295.417 mo
181.721 293.762 180.377 292.417 178.721 292.417 cv
177.065 292.417 175.721 293.762 175.721 295.417 cv
175.721 297.073 177.065 298.417 178.721 298.417 cv
180.377 298.417 181.721 297.073 181.721 295.417 cv
ef
176.921 295.417 mo
176.921 293.762 175.577 292.417 173.921 292.417 cv
172.265 292.417 170.921 293.762 170.921 295.417 cv
170.921 297.073 172.265 298.417 173.921 298.417 cv
175.577 298.417 176.921 297.073 176.921 295.417 cv
ef
172.121 295.178 mo
172.121 293.521 170.777 292.178 169.121 292.178 cv
167.465 292.178 166.121 293.521 166.121 295.178 cv
166.121 296.833 167.465 298.178 169.121 298.178 cv
170.777 298.178 172.121 296.833 172.121 295.178 cv
ef
167.801 294.218 mo
167.801 292.562 166.457 291.218 164.801 291.218 cv
163.145 291.218 161.801 292.562 161.801 294.218 cv
161.801 295.873 163.145 297.218 164.801 297.218 cv
166.457 297.218 167.801 295.873 167.801 294.218 cv
ef
163.001 292.537 mo
163.001 290.882 161.657 289.537 160.001 289.537 cv
158.345 289.537 157.001 290.882 157.001 292.537 cv
157.001 294.193 158.345 295.537 160.001 295.537 cv
161.657 295.537 163.001 294.193 163.001 292.537 cv
ef
158.441 291.577 mo
158.441 289.921 157.097 288.577 155.441 288.577 cv
153.785 288.577 152.441 289.921 152.441 291.577 cv
152.441 293.233 153.785 294.577 155.441 294.577 cv
157.097 294.577 158.441 293.233 158.441 291.577 cv
ef
153.641 291.337 mo
153.641 289.682 152.297 288.337 150.641 288.337 cv
148.985 288.337 147.641 289.682 147.641 291.337 cv
147.641 292.993 148.985 294.337 150.641 294.337 cv
152.297 294.337 153.641 292.993 153.641 291.337 cv
ef
148.841 288.218 mo
148.841 286.562 147.497 285.218 145.841 285.218 cv
144.185 285.218 142.841 286.562 142.841 288.218 cv
142.841 289.873 144.185 291.218 145.841 291.218 cv
147.497 291.218 148.841 289.873 148.841 288.218 cv
ef
144.521 283.417 mo
144.521 281.762 143.177 280.417 141.521 280.417 cv
139.865 280.417 138.521 281.762 138.521 283.417 cv
138.521 285.073 139.865 286.417 141.521 286.417 cv
143.177 286.417 144.521 285.073 144.521 283.417 cv
ef
139.721 279.337 mo
139.721 277.682 138.377 276.337 136.721 276.337 cv
135.065 276.337 133.721 277.682 133.721 279.337 cv
133.721 280.993 135.065 282.337 136.721 282.337 cv
138.377 282.337 139.721 280.993 139.721 279.337 cv
ef
135.161 272.857 mo
135.161 271.201 133.817 269.857 132.161 269.857 cv
130.505 269.857 129.161 271.201 129.161 272.857 cv
129.161 274.514 130.505 275.857 132.161 275.857 cv
133.817 275.857 135.161 274.514 135.161 272.857 cv
ef
130.361 270.457 mo
130.361 268.802 129.017 267.457 127.361 267.457 cv
125.705 267.457 124.361 268.802 124.361 270.457 cv
124.361 272.113 125.705 273.457 127.361 273.457 cv
129.017 273.457 130.361 272.113 130.361 270.457 cv
ef
125.801 263.018 mo
125.801 261.361 124.457 260.018 122.801 260.018 cv
121.145 260.018 119.801 261.361 119.801 263.018 cv
119.801 264.674 121.145 266.018 122.801 266.018 cv
124.457 266.018 125.801 264.674 125.801 263.018 cv
ef
121.241 255.577 mo
121.241 253.921 119.897 252.577 118.241 252.577 cv
116.585 252.577 115.241 253.921 115.241 255.577 cv
115.241 257.233 116.585 258.577 118.241 258.577 cv
119.897 258.577 121.241 257.233 121.241 255.577 cv
ef
116.441 244.537 mo
116.441 242.882 115.097 241.537 113.441 241.537 cv
111.785 241.537 110.441 242.882 110.441 244.537 cv
110.441 246.193 111.785 247.537 113.441 247.537 cv
115.097 247.537 116.441 246.193 116.441 244.537 cv
ef
111.881 236.377 mo
111.881 234.722 110.537 233.377 108.881 233.377 cv
107.225 233.377 105.881 234.722 105.881 236.377 cv
105.881 238.033 107.225 239.377 108.881 239.377 cv
110.537 239.377 111.881 238.033 111.881 236.377 cv
ef
107.201 227.978 mo
107.201 226.321 105.857 224.978 104.201 224.978 cv
102.545 224.978 101.201 226.321 101.201 227.978 cv
101.201 229.634 102.545 230.978 104.201 230.978 cv
105.857 230.978 107.201 229.634 107.201 227.978 cv
ef
102.761 238.298 mo
102.761 236.642 101.417 235.298 99.7612 235.298 cv
98.105 235.298 96.7612 236.642 96.7612 238.298 cv
96.7612 239.953 98.105 241.298 99.7612 241.298 cv
101.417 241.298 102.761 239.953 102.761 238.298 cv
ef
97.9609 245.258 mo
97.9609 243.602 96.6172 242.258 94.9609 242.258 cv
93.3052 242.258 91.9609 243.602 91.9609 245.258 cv
91.9609 246.913 93.3052 248.258 94.9609 248.258 cv
96.6172 248.258 97.9609 246.913 97.9609 245.258 cv
ef
93.1611 248.617 mo
93.1611 246.961 91.8174 245.617 90.1611 245.617 cv
88.5054 245.617 87.1611 246.961 87.1611 248.617 cv
87.1611 250.273 88.5054 251.617 90.1611 251.617 cv
91.8174 251.617 93.1611 250.273 93.1611 248.617 cv
ef
88.6011 249.817 mo
88.6011 248.161 87.2573 246.817 85.6011 246.817 cv
83.9453 246.817 82.6011 248.161 82.6011 249.817 cv
82.6011 251.474 83.9453 252.817 85.6011 252.817 cv
87.2573 252.817 88.6011 251.474 88.6011 249.817 cv
ef
84.041 248.138 mo
84.041 246.481 82.6973 245.138 81.041 245.138 cv
79.3853 245.138 78.041 246.481 78.041 248.138 cv
78.041 249.793 79.3853 251.138 81.041 251.138 cv
82.6973 251.138 84.041 249.793 84.041 248.138 cv
ef
79.481 255.098 mo
79.481 253.441 78.1372 252.098 76.481 252.098 cv
74.8252 252.098 73.481 253.441 73.481 255.098 cv
73.481 256.753 74.8252 258.098 76.481 258.098 cv
78.1372 258.098 79.481 256.753 79.481 255.098 cv
ef
74.6812 265.178 mo
74.6812 263.521 73.3369 262.178 71.6812 262.178 cv
70.0254 262.178 68.6812 263.521 68.6812 265.178 cv
68.6812 266.833 70.0254 268.178 71.6812 268.178 cv
73.3369 268.178 74.6812 266.833 74.6812 265.178 cv
ef
69.8813 290.138 mo
69.8813 288.481 68.5371 287.138 66.8813 287.138 cv
65.2251 287.138 63.8813 288.481 63.8813 290.138 cv
63.8813 291.793 65.2251 293.138 66.8813 293.138 cv
68.5371 293.138 69.8813 291.793 69.8813 290.138 cv
ef
65.561 298.058 mo
65.561 296.401 64.2173 295.058 62.561 295.058 cv
60.9053 295.058 59.561 296.401 59.561 298.058 cv
59.561 299.714 60.9053 301.058 62.561 301.058 cv
64.2173 301.058 65.561 299.714 65.561 298.058 cv
ef
60.2012 296.067 mo
211.201 296.067 li
0 0 0 1 cmyk
@
214.121 296.138 mo
214.121 294.481 212.777 293.138 211.121 293.138 cv
209.465 293.138 208.121 294.481 208.121 296.138 cv
208.121 297.793 209.465 299.138 211.121 299.138 cv
212.777 299.138 214.121 297.793 214.121 296.138 cv
.878019 .337896 1 .281529 cmyk
@
209.561 296.138 mo
209.561 294.481 208.217 293.138 206.561 293.138 cv
204.905 293.138 203.561 294.481 203.561 296.138 cv
203.561 297.793 204.905 299.138 206.561 299.138 cv
208.217 299.138 209.561 297.793 209.561 296.138 cv
@
204.761 296.138 mo
204.761 294.481 203.417 293.138 201.761 293.138 cv
200.105 293.138 198.761 294.481 198.761 296.138 cv
198.761 297.793 200.105 299.138 201.761 299.138 cv
203.417 299.138 204.761 297.793 204.761 296.138 cv
@
200.201 296.138 mo
200.201 294.481 198.857 293.138 197.201 293.138 cv
195.545 293.138 194.201 294.481 194.201 296.138 cv
194.201 297.793 195.545 299.138 197.201 299.138 cv
198.857 299.138 200.201 297.793 200.201 296.138 cv
@
195.401 295.897 mo
195.401 294.241 194.057 292.897 192.401 292.897 cv
190.745 292.897 189.401 294.241 189.401 295.897 cv
189.401 297.554 190.745 298.897 192.401 298.897 cv
194.057 298.897 195.401 297.554 195.401 295.897 cv
@
190.841 295.897 mo
190.841 294.241 189.497 292.897 187.841 292.897 cv
186.185 292.897 184.841 294.241 184.841 295.897 cv
184.841 297.554 186.185 298.897 187.841 298.897 cv
189.497 298.897 190.841 297.554 190.841 295.897 cv
@
186.281 295.417 mo
186.281 293.762 184.937 292.417 183.281 292.417 cv
181.625 292.417 180.281 293.762 180.281 295.417 cv
180.281 297.073 181.625 298.417 183.281 298.417 cv
184.937 298.417 186.281 297.073 186.281 295.417 cv
@
181.721 294.817 mo
181.721 293.161 180.377 291.817 178.721 291.817 cv
177.065 291.817 175.721 293.161 175.721 294.817 cv
175.721 296.474 177.065 297.817 178.721 297.817 cv
180.377 297.817 181.721 296.474 181.721 294.817 cv
@
176.921 293.978 mo
176.921 292.321 175.577 290.978 173.921 290.978 cv
172.265 290.978 170.921 292.321 170.921 293.978 cv
170.921 295.634 172.265 296.978 173.921 296.978 cv
175.577 296.978 176.921 295.634 176.921 293.978 cv
@
172.121 293.258 mo
172.121 291.602 170.777 290.258 169.121 290.258 cv
167.465 290.258 166.121 291.602 166.121 293.258 cv
166.121 294.913 167.465 296.258 169.121 296.258 cv
170.777 296.258 172.121 294.913 172.121 293.258 cv
@
167.801 291.577 mo
167.801 289.921 166.457 288.577 164.801 288.577 cv
163.145 288.577 161.801 289.921 161.801 291.577 cv
161.801 293.233 163.145 294.577 164.801 294.577 cv
166.457 294.577 167.801 293.233 167.801 291.577 cv
@
163.001 289.897 mo
163.001 288.241 161.657 286.897 160.001 286.897 cv
158.345 286.897 157.001 288.241 157.001 289.897 cv
157.001 291.554 158.345 292.897 160.001 292.897 cv
161.657 292.897 163.001 291.554 163.001 289.897 cv
@
158.441 288.817 mo
158.441 287.161 157.097 285.817 155.441 285.817 cv
153.785 285.817 152.441 287.161 152.441 288.817 cv
152.441 290.474 153.785 291.817 155.441 291.817 cv
157.097 291.817 158.441 290.474 158.441 288.817 cv
@
153.641 285.337 mo
153.641 283.682 152.297 282.337 150.641 282.337 cv
148.985 282.337 147.641 283.682 147.641 285.337 cv
147.641 286.993 148.985 288.337 150.641 288.337 cv
152.297 288.337 153.641 286.993 153.641 285.337 cv
@
148.841 283.417 mo
148.841 281.762 147.497 280.417 145.841 280.417 cv
144.185 280.417 142.841 281.762 142.841 283.417 cv
142.841 285.073 144.185 286.417 145.841 286.417 cv
147.497 286.417 148.841 285.073 148.841 283.417 cv
@
144.521 279.577 mo
144.521 277.921 143.177 276.577 141.521 276.577 cv
139.865 276.577 138.521 277.921 138.521 279.577 cv
138.521 281.233 139.865 282.577 141.521 282.577 cv
143.177 282.577 144.521 281.233 144.521 279.577 cv
@
139.721 275.497 mo
139.721 273.842 138.377 272.497 136.721 272.497 cv
135.065 272.497 133.721 273.842 133.721 275.497 cv
133.721 277.153 135.065 278.497 136.721 278.497 cv
138.377 278.497 139.721 277.153 139.721 275.497 cv
@
135.161 270.218 mo
135.161 268.562 133.817 267.218 132.161 267.218 cv
130.505 267.218 129.161 268.562 129.161 270.218 cv
129.161 271.873 130.505 273.218 132.161 273.218 cv
133.817 273.218 135.161 271.873 135.161 270.218 cv
@
130.361 265.417 mo
130.361 263.762 129.017 262.417 127.361 262.417 cv
125.705 262.417 124.361 263.762 124.361 265.417 cv
124.361 267.073 125.705 268.417 127.361 268.417 cv
129.017 268.417 130.361 267.073 130.361 265.417 cv
@
125.801 259.417 mo
125.801 257.762 124.457 256.417 122.801 256.417 cv
121.145 256.417 119.801 257.762 119.801 259.417 cv
119.801 261.073 121.145 262.417 122.801 262.417 cv
124.457 262.417 125.801 261.073 125.801 259.417 cv
@
121.241 253.657 mo
121.241 252.001 119.897 250.657 118.241 250.657 cv
116.585 250.657 115.241 252.001 115.241 253.657 cv
115.241 255.313 116.585 256.657 118.241 256.657 cv
119.897 256.657 121.241 255.313 121.241 253.657 cv
@
116.441 247.178 mo
116.441 245.521 115.097 244.178 113.441 244.178 cv
111.785 244.178 110.441 245.521 110.441 247.178 cv
110.441 248.833 111.785 250.178 113.441 250.178 cv
115.097 250.178 116.441 248.833 116.441 247.178 cv
@
111.881 239.018 mo
111.881 237.361 110.537 236.018 108.881 236.018 cv
107.225 236.018 105.881 237.361 105.881 239.018 cv
105.881 240.674 107.225 242.018 108.881 242.018 cv
110.537 242.018 111.881 240.674 111.881 239.018 cv
@
107.201 248.857 mo
107.201 247.201 105.857 245.857 104.201 245.857 cv
102.545 245.857 101.201 247.201 101.201 248.857 cv
101.201 250.514 102.545 251.857 104.201 251.857 cv
105.857 251.857 107.201 250.514 107.201 248.857 cv
@
102.761 255.337 mo
102.761 253.682 101.417 252.337 99.7612 252.337 cv
98.105 252.337 96.7612 253.682 96.7612 255.337 cv
96.7612 256.993 98.105 258.337 99.7612 258.337 cv
101.417 258.337 102.761 256.993 102.761 255.337 cv
@
97.9609 258.817 mo
97.9609 257.161 96.6172 255.817 94.9609 255.817 cv
93.3052 255.817 91.9609 257.161 91.9609 258.817 cv
91.9609 260.474 93.3052 261.817 94.9609 261.817 cv
96.6172 261.817 97.9609 260.474 97.9609 258.817 cv
@
93.1611 261.577 mo
93.1611 259.921 91.8174 258.577 90.1611 258.577 cv
88.5054 258.577 87.1611 259.921 87.1611 261.577 cv
87.1611 263.233 88.5054 264.577 90.1611 264.577 cv
91.8174 264.577 93.1611 263.233 93.1611 261.577 cv
@
88.6011 261.817 mo
88.6011 260.161 87.2573 258.817 85.6011 258.817 cv
83.9453 258.817 82.6011 260.161 82.6011 261.817 cv
82.6011 263.474 83.9453 264.817 85.6011 264.817 cv
87.2573 264.817 88.6011 263.474 88.6011 261.817 cv
@
84.041 263.258 mo
84.041 261.602 82.6973 260.258 81.041 260.258 cv
79.3853 260.258 78.041 261.602 78.041 263.258 cv
78.041 264.913 79.3853 266.258 81.041 266.258 cv
82.6973 266.258 84.041 264.913 84.041 263.258 cv
@
79.481 264.457 mo
79.481 262.802 78.1372 261.457 76.481 261.457 cv
74.8252 261.457 73.481 262.802 73.481 264.457 cv
73.481 266.113 74.8252 267.457 76.481 267.457 cv
78.1372 267.457 79.481 266.113 79.481 264.457 cv
@
74.6812 264.817 mo
74.6812 263.161 73.3369 261.817 71.6812 261.817 cv
70.0254 261.817 68.6812 263.161 68.6812 264.817 cv
68.6812 266.474 70.0254 267.817 71.6812 267.817 cv
73.3369 267.817 74.6812 266.474 74.6812 264.817 cv
@
69.8813 265.417 mo
69.8813 263.762 68.5371 262.417 66.8813 262.417 cv
65.2251 262.417 63.8813 263.762 63.8813 265.417 cv
63.8813 267.073 65.2251 268.417 66.8813 268.417 cv
68.5371 268.417 69.8813 267.073 69.8813 265.417 cv
@
65.561 265.657 mo
65.561 264.001 64.2173 262.657 62.561 262.657 cv
60.9053 262.657 59.561 264.001 59.561 265.657 cv
59.561 267.313 60.9053 268.657 62.561 268.657 cv
64.2173 268.657 65.561 267.313 65.561 265.657 cv
@
214.121 296.138 mo
214.121 294.481 212.777 293.138 211.121 293.138 cv
209.465 293.138 208.121 294.481 208.121 296.138 cv
208.121 297.793 209.465 299.138 211.121 299.138 cv
212.777 299.138 214.121 297.793 214.121 296.138 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
209.561 296.138 mo
209.561 294.481 208.217 293.138 206.561 293.138 cv
204.905 293.138 203.561 294.481 203.561 296.138 cv
203.561 297.793 204.905 299.138 206.561 299.138 cv
208.217 299.138 209.561 297.793 209.561 296.138 cv
ef
204.761 296.138 mo
204.761 294.481 203.417 293.138 201.761 293.138 cv
200.105 293.138 198.761 294.481 198.761 296.138 cv
198.761 297.793 200.105 299.138 201.761 299.138 cv
203.417 299.138 204.761 297.793 204.761 296.138 cv
ef
200.201 296.138 mo
200.201 294.481 198.857 293.138 197.201 293.138 cv
195.545 293.138 194.201 294.481 194.201 296.138 cv
194.201 297.793 195.545 299.138 197.201 299.138 cv
198.857 299.138 200.201 297.793 200.201 296.138 cv
ef
195.401 296.138 mo
195.401 294.481 194.057 293.138 192.401 293.138 cv
190.745 293.138 189.401 294.481 189.401 296.138 cv
189.401 297.793 190.745 299.138 192.401 299.138 cv
194.057 299.138 195.401 297.793 195.401 296.138 cv
ef
190.841 296.138 mo
190.841 294.481 189.497 293.138 187.841 293.138 cv
186.185 293.138 184.841 294.481 184.841 296.138 cv
184.841 297.793 186.185 299.138 187.841 299.138 cv
189.497 299.138 190.841 297.793 190.841 296.138 cv
ef
186.281 295.657 mo
186.281 294.001 184.937 292.657 183.281 292.657 cv
181.625 292.657 180.281 294.001 180.281 295.657 cv
180.281 297.313 181.625 298.657 183.281 298.657 cv
184.937 298.657 186.281 297.313 186.281 295.657 cv
ef
181.721 295.417 mo
181.721 293.762 180.377 292.417 178.721 292.417 cv
177.065 292.417 175.721 293.762 175.721 295.417 cv
175.721 297.073 177.065 298.417 178.721 298.417 cv
180.377 298.417 181.721 297.073 181.721 295.417 cv
ef
176.921 295.417 mo
176.921 293.762 175.577 292.417 173.921 292.417 cv
172.265 292.417 170.921 293.762 170.921 295.417 cv
170.921 297.073 172.265 298.417 173.921 298.417 cv
175.577 298.417 176.921 297.073 176.921 295.417 cv
ef
172.121 295.178 mo
172.121 293.521 170.777 292.178 169.121 292.178 cv
167.465 292.178 166.121 293.521 166.121 295.178 cv
166.121 296.833 167.465 298.178 169.121 298.178 cv
170.777 298.178 172.121 296.833 172.121 295.178 cv
ef
167.801 294.218 mo
167.801 292.562 166.457 291.218 164.801 291.218 cv
163.145 291.218 161.801 292.562 161.801 294.218 cv
161.801 295.873 163.145 297.218 164.801 297.218 cv
166.457 297.218 167.801 295.873 167.801 294.218 cv
ef
163.001 292.537 mo
163.001 290.882 161.657 289.537 160.001 289.537 cv
158.345 289.537 157.001 290.882 157.001 292.537 cv
157.001 294.193 158.345 295.537 160.001 295.537 cv
161.657 295.537 163.001 294.193 163.001 292.537 cv
ef
158.441 291.577 mo
158.441 289.921 157.097 288.577 155.441 288.577 cv
153.785 288.577 152.441 289.921 152.441 291.577 cv
152.441 293.233 153.785 294.577 155.441 294.577 cv
157.097 294.577 158.441 293.233 158.441 291.577 cv
ef
153.641 291.337 mo
153.641 289.682 152.297 288.337 150.641 288.337 cv
148.985 288.337 147.641 289.682 147.641 291.337 cv
147.641 292.993 148.985 294.337 150.641 294.337 cv
152.297 294.337 153.641 292.993 153.641 291.337 cv
ef
148.841 288.218 mo
148.841 286.562 147.497 285.218 145.841 285.218 cv
144.185 285.218 142.841 286.562 142.841 288.218 cv
142.841 289.873 144.185 291.218 145.841 291.218 cv
147.497 291.218 148.841 289.873 148.841 288.218 cv
ef
144.521 283.417 mo
144.521 281.762 143.177 280.417 141.521 280.417 cv
139.865 280.417 138.521 281.762 138.521 283.417 cv
138.521 285.073 139.865 286.417 141.521 286.417 cv
143.177 286.417 144.521 285.073 144.521 283.417 cv
ef
139.721 279.337 mo
139.721 277.682 138.377 276.337 136.721 276.337 cv
135.065 276.337 133.721 277.682 133.721 279.337 cv
133.721 280.993 135.065 282.337 136.721 282.337 cv
138.377 282.337 139.721 280.993 139.721 279.337 cv
ef
135.161 272.857 mo
135.161 271.201 133.817 269.857 132.161 269.857 cv
130.505 269.857 129.161 271.201 129.161 272.857 cv
129.161 274.514 130.505 275.857 132.161 275.857 cv
133.817 275.857 135.161 274.514 135.161 272.857 cv
ef
130.361 270.457 mo
130.361 268.802 129.017 267.457 127.361 267.457 cv
125.705 267.457 124.361 268.802 124.361 270.457 cv
124.361 272.113 125.705 273.457 127.361 273.457 cv
129.017 273.457 130.361 272.113 130.361 270.457 cv
ef
125.801 263.018 mo
125.801 261.361 124.457 260.018 122.801 260.018 cv
121.145 260.018 119.801 261.361 119.801 263.018 cv
119.801 264.674 121.145 266.018 122.801 266.018 cv
124.457 266.018 125.801 264.674 125.801 263.018 cv
ef
121.241 255.577 mo
121.241 253.921 119.897 252.577 118.241 252.577 cv
116.585 252.577 115.241 253.921 115.241 255.577 cv
115.241 257.233 116.585 258.577 118.241 258.577 cv
119.897 258.577 121.241 257.233 121.241 255.577 cv
ef
116.441 244.537 mo
116.441 242.882 115.097 241.537 113.441 241.537 cv
111.785 241.537 110.441 242.882 110.441 244.537 cv
110.441 246.193 111.785 247.537 113.441 247.537 cv
115.097 247.537 116.441 246.193 116.441 244.537 cv
ef
111.881 236.377 mo
111.881 234.722 110.537 233.377 108.881 233.377 cv
107.225 233.377 105.881 234.722 105.881 236.377 cv
105.881 238.033 107.225 239.377 108.881 239.377 cv
110.537 239.377 111.881 238.033 111.881 236.377 cv
ef
107.201 227.978 mo
107.201 226.321 105.857 224.978 104.201 224.978 cv
102.545 224.978 101.201 226.321 101.201 227.978 cv
101.201 229.634 102.545 230.978 104.201 230.978 cv
105.857 230.978 107.201 229.634 107.201 227.978 cv
ef
102.761 238.298 mo
102.761 236.642 101.417 235.298 99.7612 235.298 cv
98.105 235.298 96.7612 236.642 96.7612 238.298 cv
96.7612 239.953 98.105 241.298 99.7612 241.298 cv
101.417 241.298 102.761 239.953 102.761 238.298 cv
ef
97.9609 245.258 mo
97.9609 243.602 96.6172 242.258 94.9609 242.258 cv
93.3052 242.258 91.9609 243.602 91.9609 245.258 cv
91.9609 246.913 93.3052 248.258 94.9609 248.258 cv
96.6172 248.258 97.9609 246.913 97.9609 245.258 cv
ef
93.1611 248.617 mo
93.1611 246.961 91.8174 245.617 90.1611 245.617 cv
88.5054 245.617 87.1611 246.961 87.1611 248.617 cv
87.1611 250.273 88.5054 251.617 90.1611 251.617 cv
91.8174 251.617 93.1611 250.273 93.1611 248.617 cv
ef
88.6011 249.817 mo
88.6011 248.161 87.2573 246.817 85.6011 246.817 cv
83.9453 246.817 82.6011 248.161 82.6011 249.817 cv
82.6011 251.474 83.9453 252.817 85.6011 252.817 cv
87.2573 252.817 88.6011 251.474 88.6011 249.817 cv
ef
84.041 248.138 mo
84.041 246.481 82.6973 245.138 81.041 245.138 cv
79.3853 245.138 78.041 246.481 78.041 248.138 cv
78.041 249.793 79.3853 251.138 81.041 251.138 cv
82.6973 251.138 84.041 249.793 84.041 248.138 cv
ef
79.481 255.098 mo
79.481 253.441 78.1372 252.098 76.481 252.098 cv
74.8252 252.098 73.481 253.441 73.481 255.098 cv
73.481 256.753 74.8252 258.098 76.481 258.098 cv
78.1372 258.098 79.481 256.753 79.481 255.098 cv
ef
74.6812 265.178 mo
74.6812 263.521 73.3369 262.178 71.6812 262.178 cv
70.0254 262.178 68.6812 263.521 68.6812 265.178 cv
68.6812 266.833 70.0254 268.178 71.6812 268.178 cv
73.3369 268.178 74.6812 266.833 74.6812 265.178 cv
ef
69.8813 290.138 mo
69.8813 288.481 68.5371 287.138 66.8813 287.138 cv
65.2251 287.138 63.8813 288.481 63.8813 290.138 cv
63.8813 291.793 65.2251 293.138 66.8813 293.138 cv
68.5371 293.138 69.8813 291.793 69.8813 290.138 cv
ef
65.561 298.058 mo
65.561 296.401 64.2173 295.058 62.561 295.058 cv
60.9053 295.058 59.561 296.401 59.561 298.058 cv
59.561 299.714 60.9053 301.058 62.561 301.058 cv
64.2173 301.058 65.561 299.714 65.561 298.058 cv
ef
210.631 303.622 mo
211.631 302.622 li
211.631 207.122 li
360.631 207.122 li
361.631 206.122 li
210.631 206.122 li
210.631 303.622 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
210.631 303.622 mo
361.631 303.622 li
210.631 303.622 mo
210.631 206.122 li
361.631 206.122 li
361.631 303.622 li
210.631 303.622 li
cp
0 0 0 1 cmyk
@
355.881 302.122 mo
355.881 303.622 li
349.881 300.872 mo
349.881 303.622 li
349.881 300.872 mo
349.881 303.622 li
344.131 302.122 mo
344.131 303.622 li
338.381 302.122 mo
338.381 303.622 li
332.631 302.122 mo
332.631 303.622 li
326.631 300.872 mo
326.631 303.622 li
320.881 302.122 mo
320.881 303.622 li
315.131 302.122 mo
315.131 303.622 li
309.381 302.122 mo
309.381 303.622 li
303.381 300.872 mo
303.381 303.622 li
297.631 302.122 mo
297.631 303.622 li
291.881 302.122 mo
291.881 303.622 li
286.131 302.122 mo
286.131 303.622 li
280.131 300.872 mo
280.131 303.622 li
274.381 302.122 mo
274.381 303.622 li
268.631 302.122 mo
268.631 303.622 li
262.881 302.122 mo
262.881 303.622 li
257.131 300.872 mo
257.131 303.622 li
251.131 302.122 mo
251.131 303.622 li
245.381 302.122 mo
245.381 303.622 li
239.631 302.122 mo
239.631 303.622 li
233.881 300.872 mo
233.881 303.622 li
227.881 302.122 mo
227.881 303.622 li
222.131 302.122 mo
222.131 303.622 li
216.381 302.122 mo
216.381 303.622 li
210.631 300.872 mo
210.631 303.622 li
@
210.631 303.622 mo
210.631 206.122 li
@
215.131 206.122 mo
210.631 206.122 li
212.881 302.122 mo
210.631 302.122 li
212.881 299.122 mo
210.631 299.122 li
215.131 296.122 mo
210.631 296.122 li
215.131 206.122 mo
210.631 206.122 li
212.881 209.122 mo
210.631 209.122 li
212.881 212.122 mo
210.631 212.122 li
212.881 215.122 mo
210.631 215.122 li
212.881 218.122 mo
210.631 218.122 li
215.131 221.122 mo
210.631 221.122 li
212.881 224.122 mo
210.631 224.122 li
212.881 227.122 mo
210.631 227.122 li
212.881 230.122 mo
210.631 230.122 li
212.881 233.122 mo
210.631 233.122 li
215.131 236.122 mo
210.631 236.122 li
212.881 239.122 mo
210.631 239.122 li
212.881 242.122 mo
210.631 242.122 li
212.881 245.122 mo
210.631 245.122 li
212.881 248.122 mo
210.631 248.122 li
215.131 251.122 mo
210.631 251.122 li
212.881 254.122 mo
210.631 254.122 li
212.881 257.122 mo
210.631 257.122 li
212.881 260.122 mo
210.631 260.122 li
212.881 263.122 mo
210.631 263.122 li
215.131 266.122 mo
210.631 266.122 li
212.881 269.122 mo
210.631 269.122 li
212.881 272.122 mo
210.631 272.122 li
212.881 275.122 mo
210.631 275.122 li
212.881 278.122 mo
210.631 278.122 li
215.131 281.122 mo
210.631 281.122 li
212.881 284.122 mo
210.631 284.122 li
212.881 287.122 mo
210.631 287.122 li
212.881 290.122 mo
210.631 290.122 li
212.881 293.122 mo
210.631 293.122 li
215.131 296.122 mo
210.631 296.122 li
@
364.681 296.192 mo
364.681 294.536 363.337 293.192 361.681 293.192 cv
360.024 293.192 358.681 294.536 358.681 296.192 cv
358.681 297.848 360.024 299.192 361.681 299.192 cv
363.337 299.192 364.681 297.848 364.681 296.192 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 296.192 mo
359.881 294.536 358.537 293.192 356.881 293.192 cv
355.225 293.192 353.881 294.536 353.881 296.192 cv
353.881 297.848 355.225 299.192 356.881 299.192 cv
358.537 299.192 359.881 297.848 359.881 296.192 cv
ef
355.321 296.192 mo
355.321 294.536 353.977 293.192 352.321 293.192 cv
350.665 293.192 349.321 294.536 349.321 296.192 cv
349.321 297.848 350.665 299.192 352.321 299.192 cv
353.977 299.192 355.321 297.848 355.321 296.192 cv
ef
350.521 296.192 mo
350.521 294.536 349.177 293.192 347.521 293.192 cv
345.865 293.192 344.521 294.536 344.521 296.192 cv
344.521 297.848 345.865 299.192 347.521 299.192 cv
349.177 299.192 350.521 297.848 350.521 296.192 cv
ef
345.961 296.192 mo
345.961 294.536 344.617 293.192 342.961 293.192 cv
341.305 293.192 339.961 294.536 339.961 296.192 cv
339.961 297.848 341.305 299.192 342.961 299.192 cv
344.617 299.192 345.961 297.848 345.961 296.192 cv
ef
341.4 295.952 mo
341.4 294.296 340.057 292.952 338.4 292.952 cv
336.745 292.952 335.4 294.296 335.4 295.952 cv
335.4 297.608 336.745 298.952 338.4 298.952 cv
340.057 298.952 341.4 297.608 341.4 295.952 cv
ef
336.601 296.192 mo
336.601 294.536 335.257 293.192 333.601 293.192 cv
331.945 293.192 330.601 294.536 330.601 296.192 cv
330.601 297.848 331.945 299.192 333.601 299.192 cv
335.257 299.192 336.601 297.848 336.601 296.192 cv
ef
332.041 295.952 mo
332.041 294.296 330.697 292.952 329.041 292.952 cv
327.385 292.952 326.041 294.296 326.041 295.952 cv
326.041 297.608 327.385 298.952 329.041 298.952 cv
330.697 298.952 332.041 297.608 332.041 295.952 cv
ef
327.48 295.232 mo
327.48 293.576 326.137 292.232 324.48 292.232 cv
322.825 292.232 321.48 293.576 321.48 295.232 cv
321.48 296.888 322.825 298.232 324.48 298.232 cv
326.137 298.232 327.48 296.888 327.48 295.232 cv
ef
322.681 295.232 mo
322.681 293.576 321.337 292.232 319.681 292.232 cv
318.024 292.232 316.681 293.576 316.681 295.232 cv
316.681 296.888 318.024 298.232 319.681 298.232 cv
321.337 298.232 322.681 296.888 322.681 295.232 cv
ef
318.121 293.792 mo
318.121 292.136 316.777 290.792 315.121 290.792 cv
313.465 290.792 312.121 292.136 312.121 293.792 cv
312.121 295.448 313.465 296.792 315.121 296.792 cv
316.777 296.792 318.121 295.448 318.121 293.792 cv
ef
313.321 294.032 mo
313.321 292.376 311.977 291.032 310.321 291.032 cv
308.665 291.032 307.321 292.376 307.321 294.032 cv
307.321 295.688 308.665 297.032 310.321 297.032 cv
311.977 297.032 313.321 295.688 313.321 294.032 cv
ef
308.881 291.632 mo
308.881 289.976 307.537 288.632 305.881 288.632 cv
304.225 288.632 302.881 289.976 302.881 291.632 cv
302.881 293.288 304.225 294.632 305.881 294.632 cv
307.537 294.632 308.881 293.288 308.881 291.632 cv
ef
304.201 289.712 mo
304.201 288.056 302.856 286.712 301.201 286.712 cv
299.545 286.712 298.201 288.056 298.201 289.712 cv
298.201 291.368 299.545 292.712 301.201 292.712 cv
302.856 292.712 304.201 291.368 304.201 289.712 cv
ef
299.641 286.832 mo
299.641 285.176 298.297 283.832 296.641 283.832 cv
294.984 283.832 293.641 285.176 293.641 286.832 cv
293.641 288.488 294.984 289.832 296.641 289.832 cv
298.297 289.832 299.641 288.488 299.641 286.832 cv
ef
294.841 281.552 mo
294.841 279.896 293.497 278.552 291.841 278.552 cv
290.185 278.552 288.841 279.896 288.841 281.552 cv
288.841 283.208 290.185 284.552 291.841 284.552 cv
293.497 284.552 294.841 283.208 294.841 281.552 cv
ef
290.041 277.712 mo
290.041 276.056 288.697 274.712 287.041 274.712 cv
285.385 274.712 284.041 276.056 284.041 277.712 cv
284.041 279.368 285.385 280.712 287.041 280.712 cv
288.697 280.712 290.041 279.368 290.041 277.712 cv
ef
285.721 270.032 mo
285.721 268.376 284.377 267.032 282.721 267.032 cv
281.065 267.032 279.721 268.376 279.721 270.032 cv
279.721 271.688 281.065 273.032 282.721 273.032 cv
284.377 273.032 285.721 271.688 285.721 270.032 cv
ef
280.921 262.112 mo
280.921 260.456 279.577 259.112 277.921 259.112 cv
276.265 259.112 274.921 260.456 274.921 262.112 cv
274.921 263.769 276.265 265.112 277.921 265.112 cv
279.577 265.112 280.921 263.769 280.921 262.112 cv
ef
276.361 262.112 mo
276.361 260.456 275.017 259.112 273.361 259.112 cv
271.705 259.112 270.361 260.456 270.361 262.112 cv
270.361 263.769 271.705 265.112 273.361 265.112 cv
275.017 265.112 276.361 263.769 276.361 262.112 cv
ef
271.561 254.192 mo
271.561 252.536 270.217 251.192 268.561 251.192 cv
266.905 251.192 265.561 252.536 265.561 254.192 cv
265.561 255.848 266.905 257.192 268.561 257.192 cv
270.217 257.192 271.561 255.848 271.561 254.192 cv
ef
266.881 243.152 mo
266.881 241.496 265.537 240.152 263.881 240.152 cv
262.225 240.152 260.881 241.496 260.881 243.152 cv
260.881 244.808 262.225 246.152 263.881 246.152 cv
265.537 246.152 266.881 244.808 266.881 243.152 cv
ef
262.441 232.592 mo
262.441 230.937 261.097 229.592 259.441 229.592 cv
257.785 229.592 256.441 230.937 256.441 232.592 cv
256.441 234.248 257.785 235.592 259.441 235.592 cv
261.097 235.592 262.441 234.248 262.441 232.592 cv
ef
257.641 225.872 mo
257.641 224.216 256.297 222.872 254.641 222.872 cv
252.985 222.872 251.641 224.216 251.641 225.872 cv
251.641 227.528 252.985 228.872 254.641 228.872 cv
256.297 228.872 257.641 227.528 257.641 225.872 cv
ef
253.081 239.792 mo
253.081 238.136 251.737 236.792 250.081 236.792 cv
248.425 236.792 247.081 238.136 247.081 239.792 cv
247.081 241.448 248.425 242.792 250.081 242.792 cv
251.737 242.792 253.081 241.448 253.081 239.792 cv
ef
248.281 248.192 mo
248.281 246.536 246.937 245.192 245.281 245.192 cv
243.625 245.192 242.281 246.536 242.281 248.192 cv
242.281 249.848 243.625 251.192 245.281 251.192 cv
246.937 251.192 248.281 249.848 248.281 248.192 cv
ef
243.721 250.832 mo
243.721 249.176 242.377 247.832 240.721 247.832 cv
239.065 247.832 237.721 249.176 237.721 250.832 cv
237.721 252.488 239.065 253.832 240.721 253.832 cv
242.377 253.832 243.721 252.488 243.721 250.832 cv
ef
239.161 253.232 mo
239.161 251.576 237.817 250.232 236.161 250.232 cv
234.505 250.232 233.161 251.576 233.161 253.232 cv
233.161 254.888 234.505 256.232 236.161 256.232 cv
237.817 256.232 239.161 254.888 239.161 253.232 cv
ef
234.361 256.112 mo
234.361 254.456 233.017 253.112 231.361 253.112 cv
229.705 253.112 228.361 254.456 228.361 256.112 cv
228.361 257.769 229.705 259.112 231.361 259.112 cv
233.017 259.112 234.361 257.769 234.361 256.112 cv
ef
229.801 261.872 mo
229.801 260.216 228.457 258.872 226.801 258.872 cv
225.145 258.872 223.801 260.216 223.801 261.872 cv
223.801 263.528 225.145 264.872 226.801 264.872 cv
228.457 264.872 229.801 263.528 229.801 261.872 cv
ef
225.241 272.912 mo
225.241 271.256 223.897 269.912 222.241 269.912 cv
220.585 269.912 219.241 271.256 219.241 272.912 cv
219.241 274.568 220.585 275.912 222.241 275.912 cv
223.897 275.912 225.241 274.568 225.241 272.912 cv
ef
220.681 291.392 mo
220.681 289.736 219.337 288.392 217.681 288.392 cv
216.025 288.392 214.681 289.736 214.681 291.392 cv
214.681 293.048 216.025 294.392 217.681 294.392 cv
219.337 294.392 220.681 293.048 220.681 291.392 cv
ef
215.881 302.192 mo
215.881 300.536 214.537 299.192 212.881 299.192 cv
211.225 299.192 209.881 300.536 209.881 302.192 cv
209.881 303.848 211.225 305.192 212.881 305.192 cv
214.537 305.192 215.881 303.848 215.881 302.192 cv
ef
210.631 296.122 mo
361.631 296.122 li
0 0 0 1 cmyk
@
364.681 296.192 mo
364.681 294.536 363.337 293.192 361.681 293.192 cv
360.024 293.192 358.681 294.536 358.681 296.192 cv
358.681 297.848 360.024 299.192 361.681 299.192 cv
363.337 299.192 364.681 297.848 364.681 296.192 cv
.878019 .337896 1 .281529 cmyk
@
359.881 296.192 mo
359.881 294.536 358.537 293.192 356.881 293.192 cv
355.225 293.192 353.881 294.536 353.881 296.192 cv
353.881 297.848 355.225 299.192 356.881 299.192 cv
358.537 299.192 359.881 297.848 359.881 296.192 cv
@
355.321 296.192 mo
355.321 294.536 353.977 293.192 352.321 293.192 cv
350.665 293.192 349.321 294.536 349.321 296.192 cv
349.321 297.848 350.665 299.192 352.321 299.192 cv
353.977 299.192 355.321 297.848 355.321 296.192 cv
@
350.521 296.192 mo
350.521 294.536 349.177 293.192 347.521 293.192 cv
345.865 293.192 344.521 294.536 344.521 296.192 cv
344.521 297.848 345.865 299.192 347.521 299.192 cv
349.177 299.192 350.521 297.848 350.521 296.192 cv
@
345.961 295.952 mo
345.961 294.296 344.617 292.952 342.961 292.952 cv
341.305 292.952 339.961 294.296 339.961 295.952 cv
339.961 297.608 341.305 298.952 342.961 298.952 cv
344.617 298.952 345.961 297.608 345.961 295.952 cv
@
341.4 295.952 mo
341.4 294.296 340.057 292.952 338.4 292.952 cv
336.745 292.952 335.4 294.296 335.4 295.952 cv
335.4 297.608 336.745 298.952 338.4 298.952 cv
340.057 298.952 341.4 297.608 341.4 295.952 cv
@
336.601 295.712 mo
336.601 294.056 335.257 292.712 333.601 292.712 cv
331.945 292.712 330.601 294.056 330.601 295.712 cv
330.601 297.368 331.945 298.712 333.601 298.712 cv
335.257 298.712 336.601 297.368 336.601 295.712 cv
@
332.041 294.872 mo
332.041 293.216 330.697 291.872 329.041 291.872 cv
327.385 291.872 326.041 293.216 326.041 294.872 cv
326.041 296.528 327.385 297.872 329.041 297.872 cv
330.697 297.872 332.041 296.528 332.041 294.872 cv
@
327.48 294.272 mo
327.48 292.616 326.137 291.272 324.48 291.272 cv
322.825 291.272 321.48 292.616 321.48 294.272 cv
321.48 295.928 322.825 297.272 324.48 297.272 cv
326.137 297.272 327.48 295.928 327.48 294.272 cv
@
322.681 293.072 mo
322.681 291.416 321.337 290.072 319.681 290.072 cv
318.024 290.072 316.681 291.416 316.681 293.072 cv
316.681 294.729 318.024 296.072 319.681 296.072 cv
321.337 296.072 322.681 294.729 322.681 293.072 cv
@
318.121 291.392 mo
318.121 289.736 316.777 288.392 315.121 288.392 cv
313.465 288.392 312.121 289.736 312.121 291.392 cv
312.121 293.048 313.465 294.392 315.121 294.392 cv
316.777 294.392 318.121 293.048 318.121 291.392 cv
@
313.321 291.152 mo
313.321 289.496 311.977 288.152 310.321 288.152 cv
308.665 288.152 307.321 289.496 307.321 291.152 cv
307.321 292.808 308.665 294.152 310.321 294.152 cv
311.977 294.152 313.321 292.808 313.321 291.152 cv
@
308.881 288.512 mo
308.881 286.856 307.537 285.512 305.881 285.512 cv
304.225 285.512 302.881 286.856 302.881 288.512 cv
302.881 290.168 304.225 291.512 305.881 291.512 cv
307.537 291.512 308.881 290.168 308.881 288.512 cv
@
304.201 285.872 mo
304.201 284.216 302.856 282.872 301.201 282.872 cv
299.545 282.872 298.201 284.216 298.201 285.872 cv
298.201 287.528 299.545 288.872 301.201 288.872 cv
302.856 288.872 304.201 287.528 304.201 285.872 cv
@
299.641 283.472 mo
299.641 281.816 298.297 280.472 296.641 280.472 cv
294.984 280.472 293.641 281.816 293.641 283.472 cv
293.641 285.128 294.984 286.472 296.641 286.472 cv
298.297 286.472 299.641 285.128 299.641 283.472 cv
@
294.841 278.912 mo
294.841 277.256 293.497 275.912 291.841 275.912 cv
290.185 275.912 288.841 277.256 288.841 278.912 cv
288.841 280.568 290.185 281.912 291.841 281.912 cv
293.497 281.912 294.841 280.568 294.841 278.912 cv
@
290.041 277.472 mo
290.041 275.816 288.697 274.472 287.041 274.472 cv
285.385 274.472 284.041 275.816 284.041 277.472 cv
284.041 279.128 285.385 280.472 287.041 280.472 cv
288.697 280.472 290.041 279.128 290.041 277.472 cv
@
285.721 271.472 mo
285.721 269.816 284.377 268.472 282.721 268.472 cv
281.065 268.472 279.721 269.816 279.721 271.472 cv
279.721 273.128 281.065 274.472 282.721 274.472 cv
284.377 274.472 285.721 273.128 285.721 271.472 cv
@
280.921 265.472 mo
280.921 263.816 279.577 262.472 277.921 262.472 cv
276.265 262.472 274.921 263.816 274.921 265.472 cv
274.921 267.128 276.265 268.472 277.921 268.472 cv
279.577 268.472 280.921 267.128 280.921 265.472 cv
@
276.361 259.472 mo
276.361 257.816 275.017 256.472 273.361 256.472 cv
271.705 256.472 270.361 257.816 270.361 259.472 cv
270.361 261.128 271.705 262.472 273.361 262.472 cv
275.017 262.472 276.361 261.128 276.361 259.472 cv
@
271.561 254.672 mo
271.561 253.016 270.217 251.672 268.561 251.672 cv
266.905 251.672 265.561 253.016 265.561 254.672 cv
265.561 256.328 266.905 257.672 268.561 257.672 cv
270.217 257.672 271.561 256.328 271.561 254.672 cv
@
266.881 245.792 mo
266.881 244.136 265.537 242.792 263.881 242.792 cv
262.225 242.792 260.881 244.136 260.881 245.792 cv
260.881 247.448 262.225 248.792 263.881 248.792 cv
265.537 248.792 266.881 247.448 266.881 245.792 cv
@
262.441 238.112 mo
262.441 236.456 261.097 235.112 259.441 235.112 cv
257.785 235.112 256.441 236.456 256.441 238.112 cv
256.441 239.769 257.785 241.112 259.441 241.112 cv
261.097 241.112 262.441 239.769 262.441 238.112 cv
@
257.641 249.392 mo
257.641 247.736 256.297 246.392 254.641 246.392 cv
252.985 246.392 251.641 247.736 251.641 249.392 cv
251.641 251.048 252.985 252.392 254.641 252.392 cv
256.297 252.392 257.641 251.048 257.641 249.392 cv
@
253.081 253.472 mo
253.081 251.816 251.737 250.472 250.081 250.472 cv
248.425 250.472 247.081 251.816 247.081 253.472 cv
247.081 255.128 248.425 256.472 250.081 256.472 cv
251.737 256.472 253.081 255.128 253.081 253.472 cv
@
248.281 258.872 mo
248.281 257.216 246.937 255.872 245.281 255.872 cv
243.625 255.872 242.281 257.216 242.281 258.872 cv
242.281 260.528 243.625 261.872 245.281 261.872 cv
246.937 261.872 248.281 260.528 248.281 258.872 cv
@
243.721 263.552 mo
243.721 261.896 242.377 260.552 240.721 260.552 cv
239.065 260.552 237.721 261.896 237.721 263.552 cv
237.721 265.208 239.065 266.552 240.721 266.552 cv
242.377 266.552 243.721 265.208 243.721 263.552 cv
@
239.161 265.232 mo
239.161 263.576 237.817 262.232 236.161 262.232 cv
234.505 262.232 233.161 263.576 233.161 265.232 cv
233.161 266.888 234.505 268.232 236.161 268.232 cv
237.817 268.232 239.161 266.888 239.161 265.232 cv
@
234.361 263.792 mo
234.361 262.136 233.017 260.792 231.361 260.792 cv
229.705 260.792 228.361 262.136 228.361 263.792 cv
228.361 265.448 229.705 266.792 231.361 266.792 cv
233.017 266.792 234.361 265.448 234.361 263.792 cv
@
229.801 264.872 mo
229.801 263.216 228.457 261.872 226.801 261.872 cv
225.145 261.872 223.801 263.216 223.801 264.872 cv
223.801 266.528 225.145 267.872 226.801 267.872 cv
228.457 267.872 229.801 266.528 229.801 264.872 cv
@
225.241 265.952 mo
225.241 264.296 223.897 262.952 222.241 262.952 cv
220.585 262.952 219.241 264.296 219.241 265.952 cv
219.241 267.608 220.585 268.952 222.241 268.952 cv
223.897 268.952 225.241 267.608 225.241 265.952 cv
@
220.681 263.792 mo
220.681 262.136 219.337 260.792 217.681 260.792 cv
216.025 260.792 214.681 262.136 214.681 263.792 cv
214.681 265.448 216.025 266.792 217.681 266.792 cv
219.337 266.792 220.681 265.448 220.681 263.792 cv
@
215.881 265.712 mo
215.881 264.056 214.537 262.712 212.881 262.712 cv
211.225 262.712 209.881 264.056 209.881 265.712 cv
209.881 267.368 211.225 268.712 212.881 268.712 cv
214.537 268.712 215.881 267.368 215.881 265.712 cv
@
364.681 296.192 mo
364.681 294.536 363.337 293.192 361.681 293.192 cv
360.024 293.192 358.681 294.536 358.681 296.192 cv
358.681 297.848 360.024 299.192 361.681 299.192 cv
363.337 299.192 364.681 297.848 364.681 296.192 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
359.881 296.192 mo
359.881 294.536 358.537 293.192 356.881 293.192 cv
355.225 293.192 353.881 294.536 353.881 296.192 cv
353.881 297.848 355.225 299.192 356.881 299.192 cv
358.537 299.192 359.881 297.848 359.881 296.192 cv
ef
355.321 296.192 mo
355.321 294.536 353.977 293.192 352.321 293.192 cv
350.665 293.192 349.321 294.536 349.321 296.192 cv
349.321 297.848 350.665 299.192 352.321 299.192 cv
353.977 299.192 355.321 297.848 355.321 296.192 cv
ef
350.521 296.192 mo
350.521 294.536 349.177 293.192 347.521 293.192 cv
345.865 293.192 344.521 294.536 344.521 296.192 cv
344.521 297.848 345.865 299.192 347.521 299.192 cv
349.177 299.192 350.521 297.848 350.521 296.192 cv
ef
345.961 296.192 mo
345.961 294.536 344.617 293.192 342.961 293.192 cv
341.305 293.192 339.961 294.536 339.961 296.192 cv
339.961 297.848 341.305 299.192 342.961 299.192 cv
344.617 299.192 345.961 297.848 345.961 296.192 cv
ef
341.4 295.952 mo
341.4 294.296 340.057 292.952 338.4 292.952 cv
336.745 292.952 335.4 294.296 335.4 295.952 cv
335.4 297.608 336.745 298.952 338.4 298.952 cv
340.057 298.952 341.4 297.608 341.4 295.952 cv
ef
336.601 296.192 mo
336.601 294.536 335.257 293.192 333.601 293.192 cv
331.945 293.192 330.601 294.536 330.601 296.192 cv
330.601 297.848 331.945 299.192 333.601 299.192 cv
335.257 299.192 336.601 297.848 336.601 296.192 cv
ef
332.041 295.952 mo
332.041 294.296 330.697 292.952 329.041 292.952 cv
327.385 292.952 326.041 294.296 326.041 295.952 cv
326.041 297.608 327.385 298.952 329.041 298.952 cv
330.697 298.952 332.041 297.608 332.041 295.952 cv
ef
327.48 295.232 mo
327.48 293.576 326.137 292.232 324.48 292.232 cv
322.825 292.232 321.48 293.576 321.48 295.232 cv
321.48 296.888 322.825 298.232 324.48 298.232 cv
326.137 298.232 327.48 296.888 327.48 295.232 cv
ef
322.681 295.232 mo
322.681 293.576 321.337 292.232 319.681 292.232 cv
318.024 292.232 316.681 293.576 316.681 295.232 cv
316.681 296.888 318.024 298.232 319.681 298.232 cv
321.337 298.232 322.681 296.888 322.681 295.232 cv
ef
318.121 293.792 mo
318.121 292.136 316.777 290.792 315.121 290.792 cv
313.465 290.792 312.121 292.136 312.121 293.792 cv
312.121 295.448 313.465 296.792 315.121 296.792 cv
316.777 296.792 318.121 295.448 318.121 293.792 cv
ef
313.321 294.032 mo
313.321 292.376 311.977 291.032 310.321 291.032 cv
308.665 291.032 307.321 292.376 307.321 294.032 cv
307.321 295.688 308.665 297.032 310.321 297.032 cv
311.977 297.032 313.321 295.688 313.321 294.032 cv
ef
308.881 291.632 mo
308.881 289.976 307.537 288.632 305.881 288.632 cv
304.225 288.632 302.881 289.976 302.881 291.632 cv
302.881 293.288 304.225 294.632 305.881 294.632 cv
307.537 294.632 308.881 293.288 308.881 291.632 cv
ef
304.201 289.712 mo
304.201 288.056 302.856 286.712 301.201 286.712 cv
299.545 286.712 298.201 288.056 298.201 289.712 cv
298.201 291.368 299.545 292.712 301.201 292.712 cv
302.856 292.712 304.201 291.368 304.201 289.712 cv
ef
299.641 286.832 mo
299.641 285.176 298.297 283.832 296.641 283.832 cv
294.984 283.832 293.641 285.176 293.641 286.832 cv
293.641 288.488 294.984 289.832 296.641 289.832 cv
298.297 289.832 299.641 288.488 299.641 286.832 cv
ef
294.841 281.552 mo
294.841 279.896 293.497 278.552 291.841 278.552 cv
290.185 278.552 288.841 279.896 288.841 281.552 cv
288.841 283.208 290.185 284.552 291.841 284.552 cv
293.497 284.552 294.841 283.208 294.841 281.552 cv
ef
290.041 277.712 mo
290.041 276.056 288.697 274.712 287.041 274.712 cv
285.385 274.712 284.041 276.056 284.041 277.712 cv
284.041 279.368 285.385 280.712 287.041 280.712 cv
288.697 280.712 290.041 279.368 290.041 277.712 cv
ef
285.721 270.032 mo
285.721 268.376 284.377 267.032 282.721 267.032 cv
281.065 267.032 279.721 268.376 279.721 270.032 cv
279.721 271.688 281.065 273.032 282.721 273.032 cv
284.377 273.032 285.721 271.688 285.721 270.032 cv
ef
280.921 262.112 mo
280.921 260.456 279.577 259.112 277.921 259.112 cv
276.265 259.112 274.921 260.456 274.921 262.112 cv
274.921 263.769 276.265 265.112 277.921 265.112 cv
279.577 265.112 280.921 263.769 280.921 262.112 cv
ef
276.361 262.112 mo
276.361 260.456 275.017 259.112 273.361 259.112 cv
271.705 259.112 270.361 260.456 270.361 262.112 cv
270.361 263.769 271.705 265.112 273.361 265.112 cv
275.017 265.112 276.361 263.769 276.361 262.112 cv
ef
271.561 254.192 mo
271.561 252.536 270.217 251.192 268.561 251.192 cv
266.905 251.192 265.561 252.536 265.561 254.192 cv
265.561 255.848 266.905 257.192 268.561 257.192 cv
270.217 257.192 271.561 255.848 271.561 254.192 cv
ef
266.881 243.152 mo
266.881 241.496 265.537 240.152 263.881 240.152 cv
262.225 240.152 260.881 241.496 260.881 243.152 cv
260.881 244.808 262.225 246.152 263.881 246.152 cv
265.537 246.152 266.881 244.808 266.881 243.152 cv
ef
262.441 232.592 mo
262.441 230.937 261.097 229.592 259.441 229.592 cv
257.785 229.592 256.441 230.937 256.441 232.592 cv
256.441 234.248 257.785 235.592 259.441 235.592 cv
261.097 235.592 262.441 234.248 262.441 232.592 cv
ef
257.641 225.872 mo
257.641 224.216 256.297 222.872 254.641 222.872 cv
252.985 222.872 251.641 224.216 251.641 225.872 cv
251.641 227.528 252.985 228.872 254.641 228.872 cv
256.297 228.872 257.641 227.528 257.641 225.872 cv
ef
253.081 239.792 mo
253.081 238.136 251.737 236.792 250.081 236.792 cv
248.425 236.792 247.081 238.136 247.081 239.792 cv
247.081 241.448 248.425 242.792 250.081 242.792 cv
251.737 242.792 253.081 241.448 253.081 239.792 cv
ef
248.281 248.192 mo
248.281 246.536 246.937 245.192 245.281 245.192 cv
243.625 245.192 242.281 246.536 242.281 248.192 cv
242.281 249.848 243.625 251.192 245.281 251.192 cv
246.937 251.192 248.281 249.848 248.281 248.192 cv
ef
243.721 250.832 mo
243.721 249.176 242.377 247.832 240.721 247.832 cv
239.065 247.832 237.721 249.176 237.721 250.832 cv
237.721 252.488 239.065 253.832 240.721 253.832 cv
242.377 253.832 243.721 252.488 243.721 250.832 cv
ef
239.161 253.232 mo
239.161 251.576 237.817 250.232 236.161 250.232 cv
234.505 250.232 233.161 251.576 233.161 253.232 cv
233.161 254.888 234.505 256.232 236.161 256.232 cv
237.817 256.232 239.161 254.888 239.161 253.232 cv
ef
234.361 256.112 mo
234.361 254.456 233.017 253.112 231.361 253.112 cv
229.705 253.112 228.361 254.456 228.361 256.112 cv
228.361 257.769 229.705 259.112 231.361 259.112 cv
233.017 259.112 234.361 257.769 234.361 256.112 cv
ef
229.801 261.872 mo
229.801 260.216 228.457 258.872 226.801 258.872 cv
225.145 258.872 223.801 260.216 223.801 261.872 cv
223.801 263.528 225.145 264.872 226.801 264.872 cv
228.457 264.872 229.801 263.528 229.801 261.872 cv
ef
225.241 272.912 mo
225.241 271.256 223.897 269.912 222.241 269.912 cv
220.585 269.912 219.241 271.256 219.241 272.912 cv
219.241 274.568 220.585 275.912 222.241 275.912 cv
223.897 275.912 225.241 274.568 225.241 272.912 cv
ef
220.681 291.392 mo
220.681 289.736 219.337 288.392 217.681 288.392 cv
216.025 288.392 214.681 289.736 214.681 291.392 cv
214.681 293.048 216.025 294.392 217.681 294.392 cv
219.337 294.392 220.681 293.048 220.681 291.392 cv
ef
215.881 302.192 mo
215.881 300.536 214.537 299.192 212.881 299.192 cv
211.225 299.192 209.881 300.536 209.881 302.192 cv
209.881 303.848 211.225 305.192 212.881 305.192 cv
214.537 305.192 215.881 303.848 215.881 302.192 cv
ef
361.361 303.622 mo
362.361 302.622 li
362.361 207.122 li
511.861 207.122 li
512.861 206.122 li
361.361 206.122 li
361.361 303.622 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
361.361 303.622 mo
512.861 303.622 li
361.361 303.622 mo
361.361 206.122 li
512.861 206.122 li
512.861 303.622 li
361.361 303.622 li
cp
0 0 0 1 cmyk
@
507.111 302.122 mo
507.111 303.622 li
501.111 300.872 mo
501.111 303.622 li
501.111 300.872 mo
501.111 303.622 li
495.361 302.122 mo
495.361 303.622 li
489.611 302.122 mo
489.611 303.622 li
483.611 302.122 mo
483.611 303.622 li
477.861 300.872 mo
477.861 303.622 li
472.111 302.122 mo
472.111 303.622 li
466.361 302.122 mo
466.361 303.622 li
460.361 302.122 mo
460.361 303.622 li
454.611 300.872 mo
454.611 303.622 li
448.861 302.122 mo
448.861 303.622 li
442.861 302.122 mo
442.861 303.622 li
437.111 302.122 mo
437.111 303.622 li
431.361 300.872 mo
431.361 303.622 li
425.361 302.122 mo
425.361 303.622 li
419.611 302.122 mo
419.611 303.622 li
413.861 302.122 mo
413.861 303.622 li
407.861 300.872 mo
407.861 303.622 li
402.111 302.122 mo
402.111 303.622 li
396.361 302.122 mo
396.361 303.622 li
390.611 302.122 mo
390.611 303.622 li
384.611 300.872 mo
384.611 303.622 li
378.861 302.122 mo
378.861 303.622 li
373.111 302.122 mo
373.111 303.622 li
367.111 302.122 mo
367.111 303.622 li
361.361 300.872 mo
361.361 303.622 li
@
361.361 303.622 mo
361.361 206.122 li
@
365.861 206.122 mo
361.361 206.122 li
363.611 302.122 mo
361.361 302.122 li
363.611 299.122 mo
361.361 299.122 li
365.861 296.122 mo
361.361 296.122 li
365.861 206.122 mo
361.361 206.122 li
363.611 209.122 mo
361.361 209.122 li
363.611 212.122 mo
361.361 212.122 li
363.611 215.122 mo
361.361 215.122 li
363.611 218.122 mo
361.361 218.122 li
365.861 221.122 mo
361.361 221.122 li
363.611 224.122 mo
361.361 224.122 li
363.611 227.122 mo
361.361 227.122 li
363.611 230.122 mo
361.361 230.122 li
363.611 233.122 mo
361.361 233.122 li
365.861 236.122 mo
361.361 236.122 li
363.611 239.122 mo
361.361 239.122 li
363.611 242.122 mo
361.361 242.122 li
363.611 245.122 mo
361.361 245.122 li
363.611 248.122 mo
361.361 248.122 li
365.861 251.122 mo
361.361 251.122 li
363.611 254.122 mo
361.361 254.122 li
363.611 257.122 mo
361.361 257.122 li
363.611 260.122 mo
361.361 260.122 li
363.611 263.122 mo
361.361 263.122 li
365.861 266.122 mo
361.361 266.122 li
363.611 269.122 mo
361.361 269.122 li
363.611 272.122 mo
361.361 272.122 li
363.611 275.122 mo
361.361 275.122 li
363.611 278.122 mo
361.361 278.122 li
365.861 281.122 mo
361.361 281.122 li
363.611 284.122 mo
361.361 284.122 li
363.611 287.122 mo
361.361 287.122 li
363.611 290.122 mo
361.361 290.122 li
363.611 293.122 mo
361.361 293.122 li
365.861 296.122 mo
361.361 296.122 li
@
515.781 296.192 mo
515.781 294.536 514.438 293.192 512.781 293.192 cv
511.125 293.192 509.781 294.536 509.781 296.192 cv
509.781 297.848 511.125 299.192 512.781 299.192 cv
514.438 299.192 515.781 297.848 515.781 296.192 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 296.192 mo
511.222 294.536 509.877 293.192 508.222 293.192 cv
506.565 293.192 505.222 294.536 505.222 296.192 cv
505.222 297.848 506.565 299.192 508.222 299.192 cv
509.877 299.192 511.222 297.848 511.222 296.192 cv
ef
506.661 296.192 mo
506.661 294.536 505.317 293.192 503.661 293.192 cv
502.005 293.192 500.661 294.536 500.661 296.192 cv
500.661 297.848 502.005 299.192 503.661 299.192 cv
505.317 299.192 506.661 297.848 506.661 296.192 cv
ef
501.861 296.192 mo
501.861 294.536 500.518 293.192 498.861 293.192 cv
497.205 293.192 495.861 294.536 495.861 296.192 cv
495.861 297.848 497.205 299.192 498.861 299.192 cv
500.518 299.192 501.861 297.848 501.861 296.192 cv
ef
497.062 296.192 mo
497.062 294.536 495.718 293.192 494.062 293.192 cv
492.405 293.192 491.062 294.536 491.062 296.192 cv
491.062 297.848 492.405 299.192 494.062 299.192 cv
495.718 299.192 497.062 297.848 497.062 296.192 cv
ef
492.501 296.192 mo
492.501 294.536 491.157 293.192 489.501 293.192 cv
487.846 293.192 486.501 294.536 486.501 296.192 cv
486.501 297.848 487.846 299.192 489.501 299.192 cv
491.157 299.192 492.501 297.848 492.501 296.192 cv
ef
487.941 295.952 mo
487.941 294.296 486.598 292.952 484.941 292.952 cv
483.285 292.952 481.941 294.296 481.941 295.952 cv
481.941 297.608 483.285 298.952 484.941 298.952 cv
486.598 298.952 487.941 297.608 487.941 295.952 cv
ef
483.142 295.952 mo
483.142 294.296 481.797 292.952 480.142 292.952 cv
478.485 292.952 477.142 294.296 477.142 295.952 cv
477.142 297.608 478.485 298.952 480.142 298.952 cv
481.797 298.952 483.142 297.608 483.142 295.952 cv
ef
478.581 295.712 mo
478.581 294.056 477.237 292.712 475.581 292.712 cv
473.926 292.712 472.581 294.056 472.581 295.712 cv
472.581 297.368 473.926 298.712 475.581 298.712 cv
477.237 298.712 478.581 297.368 478.581 295.712 cv
ef
473.781 293.072 mo
473.781 291.416 472.438 290.072 470.781 290.072 cv
469.125 290.072 467.781 291.416 467.781 293.072 cv
467.781 294.729 469.125 296.072 470.781 296.072 cv
472.438 296.072 473.781 294.729 473.781 293.072 cv
ef
469.461 293.313 mo
469.461 291.656 468.117 290.313 466.461 290.313 cv
464.806 290.313 463.461 291.656 463.461 293.313 cv
463.461 294.968 464.806 296.313 466.461 296.313 cv
468.117 296.313 469.461 294.968 469.461 293.313 cv
ef
464.661 292.832 mo
464.661 291.176 463.317 289.832 461.661 289.832 cv
460.005 289.832 458.661 291.176 458.661 292.832 cv
458.661 294.488 460.005 295.832 461.661 295.832 cv
463.317 295.832 464.661 294.488 464.661 292.832 cv
ef
459.861 289.712 mo
459.861 288.056 458.518 286.712 456.861 286.712 cv
455.205 286.712 453.861 288.056 453.861 289.712 cv
453.861 291.368 455.205 292.712 456.861 292.712 cv
458.518 292.712 459.861 291.368 459.861 289.712 cv
ef
455.302 288.512 mo
455.302 286.856 453.957 285.512 452.302 285.512 cv
450.646 285.512 449.302 286.856 449.302 288.512 cv
449.302 290.168 450.646 291.512 452.302 291.512 cv
453.957 291.512 455.302 290.168 455.302 288.512 cv
ef
450.501 285.152 mo
450.501 283.496 449.157 282.152 447.501 282.152 cv
445.846 282.152 444.501 283.496 444.501 285.152 cv
444.501 286.808 445.846 288.152 447.501 288.152 cv
449.157 288.152 450.501 286.808 450.501 285.152 cv
ef
445.941 280.592 mo
445.941 278.937 444.598 277.592 442.941 277.592 cv
441.285 277.592 439.941 278.937 439.941 280.592 cv
439.941 282.248 441.285 283.592 442.941 283.592 cv
444.598 283.592 445.941 282.248 445.941 280.592 cv
ef
441.381 273.392 mo
441.381 271.736 440.037 270.392 438.381 270.392 cv
436.726 270.392 435.381 271.736 435.381 273.392 cv
435.381 275.048 436.726 276.392 438.381 276.392 cv
440.037 276.392 441.381 275.048 441.381 273.392 cv
ef
436.581 270.032 mo
436.581 268.376 435.237 267.032 433.581 267.032 cv
431.926 267.032 430.581 268.376 430.581 270.032 cv
430.581 271.688 431.926 273.032 433.581 273.032 cv
435.237 273.032 436.581 271.688 436.581 270.032 cv
ef
431.781 262.592 mo
431.781 260.937 430.438 259.592 428.781 259.592 cv
427.125 259.592 425.781 260.937 425.781 262.592 cv
425.781 264.248 427.125 265.592 428.781 265.592 cv
430.438 265.592 431.781 264.248 431.781 262.592 cv
ef
427.461 255.152 mo
427.461 253.496 426.117 252.152 424.461 252.152 cv
422.806 252.152 421.461 253.496 421.461 255.152 cv
421.461 256.808 422.806 258.152 424.461 258.152 cv
426.117 258.152 427.461 256.808 427.461 255.152 cv
ef
422.661 252.032 mo
422.661 250.376 421.317 249.032 419.661 249.032 cv
418.005 249.032 416.661 250.376 416.661 252.032 cv
416.661 253.688 418.005 255.032 419.661 255.032 cv
421.317 255.032 422.661 253.688 422.661 252.032 cv
ef
417.861 237.392 mo
417.861 235.736 416.518 234.392 414.861 234.392 cv
413.205 234.392 411.861 235.736 411.861 237.392 cv
411.861 239.048 413.205 240.392 414.861 240.392 cv
416.518 240.392 417.861 239.048 417.861 237.392 cv
ef
413.302 230.192 mo
413.302 228.536 411.957 227.192 410.302 227.192 cv
408.646 227.192 407.302 228.536 407.302 230.192 cv
407.302 231.848 408.646 233.192 410.302 233.192 cv
411.957 233.192 413.302 231.848 413.302 230.192 cv
ef
408.501 228.512 mo
408.501 226.856 407.157 225.512 405.501 225.512 cv
403.846 225.512 402.501 226.856 402.501 228.512 cv
402.501 230.168 403.846 231.512 405.501 231.512 cv
407.157 231.512 408.501 230.168 408.501 228.512 cv
ef
404.182 238.592 mo
404.182 236.937 402.837 235.592 401.182 235.592 cv
399.525 235.592 398.182 236.937 398.182 238.592 cv
398.182 240.248 399.525 241.592 401.182 241.592 cv
402.837 241.592 404.182 240.248 404.182 238.592 cv
ef
399.381 246.872 mo
399.381 245.216 398.037 243.872 396.381 243.872 cv
394.726 243.872 393.381 245.216 393.381 246.872 cv
393.381 248.528 394.726 249.872 396.381 249.872 cv
398.037 249.872 399.381 248.528 399.381 246.872 cv
ef
394.581 253.712 mo
394.581 252.056 393.237 250.712 391.581 250.712 cv
389.926 250.712 388.581 252.056 388.581 253.712 cv
388.581 255.368 389.926 256.712 391.581 256.712 cv
393.237 256.712 394.581 255.368 394.581 253.712 cv
ef
390.021 257.072 mo
390.021 255.416 388.678 254.072 387.021 254.072 cv
385.365 254.072 384.021 255.416 384.021 257.072 cv
384.021 258.729 385.365 260.072 387.021 260.072 cv
388.678 260.072 390.021 258.729 390.021 257.072 cv
ef
385.461 262.592 mo
385.461 260.937 384.117 259.592 382.461 259.592 cv
380.806 259.592 379.461 260.937 379.461 262.592 cv
379.461 264.248 380.806 265.592 382.461 265.592 cv
384.117 265.592 385.461 264.248 385.461 262.592 cv
ef
380.661 270.512 mo
380.661 268.856 379.317 267.512 377.661 267.512 cv
376.005 267.512 374.661 268.856 374.661 270.512 cv
374.661 272.168 376.005 273.512 377.661 273.512 cv
379.317 273.512 380.661 272.168 380.661 270.512 cv
ef
376.102 281.792 mo
376.102 280.136 374.758 278.792 373.102 278.792 cv
371.445 278.792 370.102 280.136 370.102 281.792 cv
370.102 283.448 371.445 284.792 373.102 284.792 cv
374.758 284.792 376.102 283.448 376.102 281.792 cv
ef
371.302 292.112 mo
371.302 290.456 369.957 289.112 368.302 289.112 cv
366.646 289.112 365.302 290.456 365.302 292.112 cv
365.302 293.769 366.646 295.112 368.302 295.112 cv
369.957 295.112 371.302 293.769 371.302 292.112 cv
ef
366.501 296.672 mo
366.501 295.016 365.157 293.672 363.501 293.672 cv
361.846 293.672 360.501 295.016 360.501 296.672 cv
360.501 298.328 361.846 299.672 363.501 299.672 cv
365.157 299.672 366.501 298.328 366.501 296.672 cv
ef
361.361 296.122 mo
512.861 296.122 li
0 0 0 1 cmyk
@
515.781 296.192 mo
515.781 294.536 514.438 293.192 512.781 293.192 cv
511.125 293.192 509.781 294.536 509.781 296.192 cv
509.781 297.848 511.125 299.192 512.781 299.192 cv
514.438 299.192 515.781 297.848 515.781 296.192 cv
.878019 .337896 1 .281529 cmyk
@
511.222 296.192 mo
511.222 294.536 509.877 293.192 508.222 293.192 cv
506.565 293.192 505.222 294.536 505.222 296.192 cv
505.222 297.848 506.565 299.192 508.222 299.192 cv
509.877 299.192 511.222 297.848 511.222 296.192 cv
@
506.661 296.192 mo
506.661 294.536 505.317 293.192 503.661 293.192 cv
502.005 293.192 500.661 294.536 500.661 296.192 cv
500.661 297.848 502.005 299.192 503.661 299.192 cv
505.317 299.192 506.661 297.848 506.661 296.192 cv
@
501.861 296.192 mo
501.861 294.536 500.518 293.192 498.861 293.192 cv
497.205 293.192 495.861 294.536 495.861 296.192 cv
495.861 297.848 497.205 299.192 498.861 299.192 cv
500.518 299.192 501.861 297.848 501.861 296.192 cv
@
497.062 296.192 mo
497.062 294.536 495.718 293.192 494.062 293.192 cv
492.405 293.192 491.062 294.536 491.062 296.192 cv
491.062 297.848 492.405 299.192 494.062 299.192 cv
495.718 299.192 497.062 297.848 497.062 296.192 cv
@
492.501 295.712 mo
492.501 294.056 491.157 292.712 489.501 292.712 cv
487.846 292.712 486.501 294.056 486.501 295.712 cv
486.501 297.368 487.846 298.712 489.501 298.712 cv
491.157 298.712 492.501 297.368 492.501 295.712 cv
@
487.941 295.712 mo
487.941 294.056 486.598 292.712 484.941 292.712 cv
483.285 292.712 481.941 294.056 481.941 295.712 cv
481.941 297.368 483.285 298.712 484.941 298.712 cv
486.598 298.712 487.941 297.368 487.941 295.712 cv
@
483.142 295.232 mo
483.142 293.576 481.797 292.232 480.142 292.232 cv
478.485 292.232 477.142 293.576 477.142 295.232 cv
477.142 296.888 478.485 298.232 480.142 298.232 cv
481.797 298.232 483.142 296.888 483.142 295.232 cv
@
478.581 293.792 mo
478.581 292.136 477.237 290.792 475.581 290.792 cv
473.926 290.792 472.581 292.136 472.581 293.792 cv
472.581 295.448 473.926 296.792 475.581 296.792 cv
477.237 296.792 478.581 295.448 478.581 293.792 cv
@
473.781 293.072 mo
473.781 291.416 472.438 290.072 470.781 290.072 cv
469.125 290.072 467.781 291.416 467.781 293.072 cv
467.781 294.729 469.125 296.072 470.781 296.072 cv
472.438 296.072 473.781 294.729 473.781 293.072 cv
@
469.461 292.592 mo
469.461 290.937 468.117 289.592 466.461 289.592 cv
464.806 289.592 463.461 290.937 463.461 292.592 cv
463.461 294.248 464.806 295.592 466.461 295.592 cv
468.117 295.592 469.461 294.248 469.461 292.592 cv
@
464.661 290.912 mo
464.661 289.256 463.317 287.912 461.661 287.912 cv
460.005 287.912 458.661 289.256 458.661 290.912 cv
458.661 292.568 460.005 293.912 461.661 293.912 cv
463.317 293.912 464.661 292.568 464.661 290.912 cv
@
459.861 289.712 mo
459.861 288.056 458.518 286.712 456.861 286.712 cv
455.205 286.712 453.861 288.056 453.861 289.712 cv
453.861 291.368 455.205 292.712 456.861 292.712 cv
458.518 292.712 459.861 291.368 459.861 289.712 cv
@
455.302 287.552 mo
455.302 285.896 453.957 284.552 452.302 284.552 cv
450.646 284.552 449.302 285.896 449.302 287.552 cv
449.302 289.208 450.646 290.552 452.302 290.552 cv
453.957 290.552 455.302 289.208 455.302 287.552 cv
@
450.501 284.672 mo
450.501 283.016 449.157 281.672 447.501 281.672 cv
445.846 281.672 444.501 283.016 444.501 284.672 cv
444.501 286.328 445.846 287.672 447.501 287.672 cv
449.157 287.672 450.501 286.328 450.501 284.672 cv
@
445.941 279.632 mo
445.941 277.976 444.598 276.632 442.941 276.632 cv
441.285 276.632 439.941 277.976 439.941 279.632 cv
439.941 281.288 441.285 282.632 442.941 282.632 cv
444.598 282.632 445.941 281.288 445.941 279.632 cv
@
441.381 276.032 mo
441.381 274.376 440.037 273.032 438.381 273.032 cv
436.726 273.032 435.381 274.376 435.381 276.032 cv
435.381 277.688 436.726 279.032 438.381 279.032 cv
440.037 279.032 441.381 277.688 441.381 276.032 cv
@
436.581 271.472 mo
436.581 269.816 435.237 268.472 433.581 268.472 cv
431.926 268.472 430.581 269.816 430.581 271.472 cv
430.581 273.128 431.926 274.472 433.581 274.472 cv
435.237 274.472 436.581 273.128 436.581 271.472 cv
@
431.781 266.192 mo
431.781 264.536 430.438 263.192 428.781 263.192 cv
427.125 263.192 425.781 264.536 425.781 266.192 cv
425.781 267.848 427.125 269.192 428.781 269.192 cv
430.438 269.192 431.781 267.848 431.781 266.192 cv
@
427.461 261.392 mo
427.461 259.736 426.117 258.392 424.461 258.392 cv
422.806 258.392 421.461 259.736 421.461 261.392 cv
421.461 263.048 422.806 264.392 424.461 264.392 cv
426.117 264.392 427.461 263.048 427.461 261.392 cv
@
422.661 251.313 mo
422.661 249.656 421.317 248.313 419.661 248.313 cv
418.005 248.313 416.661 249.656 416.661 251.313 cv
416.661 252.968 418.005 254.313 419.661 254.313 cv
421.317 254.313 422.661 252.968 422.661 251.313 cv
@
417.861 244.832 mo
417.861 243.176 416.518 241.832 414.861 241.832 cv
413.205 241.832 411.861 243.176 411.861 244.832 cv
411.861 246.488 413.205 247.832 414.861 247.832 cv
416.518 247.832 417.861 246.488 417.861 244.832 cv
@
413.302 238.353 mo
413.302 236.696 411.957 235.353 410.302 235.353 cv
408.646 235.353 407.302 236.696 407.302 238.353 cv
407.302 240.008 408.646 241.353 410.302 241.353 cv
411.957 241.353 413.302 240.008 413.302 238.353 cv
@
408.501 249.632 mo
408.501 247.976 407.157 246.632 405.501 246.632 cv
403.846 246.632 402.501 247.976 402.501 249.632 cv
402.501 251.288 403.846 252.632 405.501 252.632 cv
407.157 252.632 408.501 251.288 408.501 249.632 cv
@
404.182 254.432 mo
404.182 252.776 402.837 251.432 401.182 251.432 cv
399.525 251.432 398.182 252.776 398.182 254.432 cv
398.182 256.088 399.525 257.432 401.182 257.432 cv
402.837 257.432 404.182 256.088 404.182 254.432 cv
@
399.381 260.672 mo
399.381 259.016 398.037 257.672 396.381 257.672 cv
394.726 257.672 393.381 259.016 393.381 260.672 cv
393.381 262.328 394.726 263.672 396.381 263.672 cv
398.037 263.672 399.381 262.328 399.381 260.672 cv
@
394.581 262.112 mo
394.581 260.456 393.237 259.112 391.581 259.112 cv
389.926 259.112 388.581 260.456 388.581 262.112 cv
388.581 263.769 389.926 265.112 391.581 265.112 cv
393.237 265.112 394.581 263.769 394.581 262.112 cv
@
390.021 260.912 mo
390.021 259.256 388.678 257.912 387.021 257.912 cv
385.365 257.912 384.021 259.256 384.021 260.912 cv
384.021 262.568 385.365 263.912 387.021 263.912 cv
388.678 263.912 390.021 262.568 390.021 260.912 cv
@
385.461 265.472 mo
385.461 263.816 384.117 262.472 382.461 262.472 cv
380.806 262.472 379.461 263.816 379.461 265.472 cv
379.461 267.128 380.806 268.472 382.461 268.472 cv
384.117 268.472 385.461 267.128 385.461 265.472 cv
@
380.661 263.552 mo
380.661 261.896 379.317 260.552 377.661 260.552 cv
376.005 260.552 374.661 261.896 374.661 263.552 cv
374.661 265.208 376.005 266.552 377.661 266.552 cv
379.317 266.552 380.661 265.208 380.661 263.552 cv
@
376.102 264.872 mo
376.102 263.216 374.758 261.872 373.102 261.872 cv
371.445 261.872 370.102 263.216 370.102 264.872 cv
370.102 266.528 371.445 267.872 373.102 267.872 cv
374.758 267.872 376.102 266.528 376.102 264.872 cv
@
371.302 266.432 mo
371.302 264.776 369.957 263.432 368.302 263.432 cv
366.646 263.432 365.302 264.776 365.302 266.432 cv
365.302 268.088 366.646 269.432 368.302 269.432 cv
369.957 269.432 371.302 268.088 371.302 266.432 cv
@
366.501 266.672 mo
366.501 265.016 365.157 263.672 363.501 263.672 cv
361.846 263.672 360.501 265.016 360.501 266.672 cv
360.501 268.328 361.846 269.672 363.501 269.672 cv
365.157 269.672 366.501 268.328 366.501 266.672 cv
@
515.781 296.192 mo
515.781 294.536 514.438 293.192 512.781 293.192 cv
511.125 293.192 509.781 294.536 509.781 296.192 cv
509.781 297.848 511.125 299.192 512.781 299.192 cv
514.438 299.192 515.781 297.848 515.781 296.192 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
511.222 296.192 mo
511.222 294.536 509.877 293.192 508.222 293.192 cv
506.565 293.192 505.222 294.536 505.222 296.192 cv
505.222 297.848 506.565 299.192 508.222 299.192 cv
509.877 299.192 511.222 297.848 511.222 296.192 cv
ef
506.661 296.192 mo
506.661 294.536 505.317 293.192 503.661 293.192 cv
502.005 293.192 500.661 294.536 500.661 296.192 cv
500.661 297.848 502.005 299.192 503.661 299.192 cv
505.317 299.192 506.661 297.848 506.661 296.192 cv
ef
501.861 296.192 mo
501.861 294.536 500.518 293.192 498.861 293.192 cv
497.205 293.192 495.861 294.536 495.861 296.192 cv
495.861 297.848 497.205 299.192 498.861 299.192 cv
500.518 299.192 501.861 297.848 501.861 296.192 cv
ef
497.062 296.192 mo
497.062 294.536 495.718 293.192 494.062 293.192 cv
492.405 293.192 491.062 294.536 491.062 296.192 cv
491.062 297.848 492.405 299.192 494.062 299.192 cv
495.718 299.192 497.062 297.848 497.062 296.192 cv
ef
492.501 296.192 mo
492.501 294.536 491.157 293.192 489.501 293.192 cv
487.846 293.192 486.501 294.536 486.501 296.192 cv
486.501 297.848 487.846 299.192 489.501 299.192 cv
491.157 299.192 492.501 297.848 492.501 296.192 cv
ef
487.941 295.952 mo
487.941 294.296 486.598 292.952 484.941 292.952 cv
483.285 292.952 481.941 294.296 481.941 295.952 cv
481.941 297.608 483.285 298.952 484.941 298.952 cv
486.598 298.952 487.941 297.608 487.941 295.952 cv
ef
483.142 295.952 mo
483.142 294.296 481.797 292.952 480.142 292.952 cv
478.485 292.952 477.142 294.296 477.142 295.952 cv
477.142 297.608 478.485 298.952 480.142 298.952 cv
481.797 298.952 483.142 297.608 483.142 295.952 cv
ef
478.581 295.712 mo
478.581 294.056 477.237 292.712 475.581 292.712 cv
473.926 292.712 472.581 294.056 472.581 295.712 cv
472.581 297.368 473.926 298.712 475.581 298.712 cv
477.237 298.712 478.581 297.368 478.581 295.712 cv
ef
473.781 293.072 mo
473.781 291.416 472.438 290.072 470.781 290.072 cv
469.125 290.072 467.781 291.416 467.781 293.072 cv
467.781 294.729 469.125 296.072 470.781 296.072 cv
472.438 296.072 473.781 294.729 473.781 293.072 cv
ef
469.461 293.313 mo
469.461 291.656 468.117 290.313 466.461 290.313 cv
464.806 290.313 463.461 291.656 463.461 293.313 cv
463.461 294.968 464.806 296.313 466.461 296.313 cv
468.117 296.313 469.461 294.968 469.461 293.313 cv
ef
464.661 292.832 mo
464.661 291.176 463.317 289.832 461.661 289.832 cv
460.005 289.832 458.661 291.176 458.661 292.832 cv
458.661 294.488 460.005 295.832 461.661 295.832 cv
463.317 295.832 464.661 294.488 464.661 292.832 cv
ef
459.861 289.712 mo
459.861 288.056 458.518 286.712 456.861 286.712 cv
455.205 286.712 453.861 288.056 453.861 289.712 cv
453.861 291.368 455.205 292.712 456.861 292.712 cv
458.518 292.712 459.861 291.368 459.861 289.712 cv
ef
455.302 288.512 mo
455.302 286.856 453.957 285.512 452.302 285.512 cv
450.646 285.512 449.302 286.856 449.302 288.512 cv
449.302 290.168 450.646 291.512 452.302 291.512 cv
453.957 291.512 455.302 290.168 455.302 288.512 cv
ef
450.501 285.152 mo
450.501 283.496 449.157 282.152 447.501 282.152 cv
445.846 282.152 444.501 283.496 444.501 285.152 cv
444.501 286.808 445.846 288.152 447.501 288.152 cv
449.157 288.152 450.501 286.808 450.501 285.152 cv
ef
445.941 280.592 mo
445.941 278.937 444.598 277.592 442.941 277.592 cv
441.285 277.592 439.941 278.937 439.941 280.592 cv
439.941 282.248 441.285 283.592 442.941 283.592 cv
444.598 283.592 445.941 282.248 445.941 280.592 cv
ef
441.381 273.392 mo
441.381 271.736 440.037 270.392 438.381 270.392 cv
436.726 270.392 435.381 271.736 435.381 273.392 cv
435.381 275.048 436.726 276.392 438.381 276.392 cv
440.037 276.392 441.381 275.048 441.381 273.392 cv
ef
436.581 270.032 mo
436.581 268.376 435.237 267.032 433.581 267.032 cv
431.926 267.032 430.581 268.376 430.581 270.032 cv
430.581 271.688 431.926 273.032 433.581 273.032 cv
435.237 273.032 436.581 271.688 436.581 270.032 cv
ef
431.781 262.592 mo
431.781 260.937 430.438 259.592 428.781 259.592 cv
427.125 259.592 425.781 260.937 425.781 262.592 cv
425.781 264.248 427.125 265.592 428.781 265.592 cv
430.438 265.592 431.781 264.248 431.781 262.592 cv
ef
427.461 255.152 mo
427.461 253.496 426.117 252.152 424.461 252.152 cv
422.806 252.152 421.461 253.496 421.461 255.152 cv
421.461 256.808 422.806 258.152 424.461 258.152 cv
426.117 258.152 427.461 256.808 427.461 255.152 cv
ef
422.661 252.032 mo
422.661 250.376 421.317 249.032 419.661 249.032 cv
418.005 249.032 416.661 250.376 416.661 252.032 cv
416.661 253.688 418.005 255.032 419.661 255.032 cv
421.317 255.032 422.661 253.688 422.661 252.032 cv
ef
417.861 237.392 mo
417.861 235.736 416.518 234.392 414.861 234.392 cv
413.205 234.392 411.861 235.736 411.861 237.392 cv
411.861 239.048 413.205 240.392 414.861 240.392 cv
416.518 240.392 417.861 239.048 417.861 237.392 cv
ef
413.302 230.192 mo
413.302 228.536 411.957 227.192 410.302 227.192 cv
408.646 227.192 407.302 228.536 407.302 230.192 cv
407.302 231.848 408.646 233.192 410.302 233.192 cv
411.957 233.192 413.302 231.848 413.302 230.192 cv
ef
408.501 228.512 mo
408.501 226.856 407.157 225.512 405.501 225.512 cv
403.846 225.512 402.501 226.856 402.501 228.512 cv
402.501 230.168 403.846 231.512 405.501 231.512 cv
407.157 231.512 408.501 230.168 408.501 228.512 cv
ef
404.182 238.592 mo
404.182 236.937 402.837 235.592 401.182 235.592 cv
399.525 235.592 398.182 236.937 398.182 238.592 cv
398.182 240.248 399.525 241.592 401.182 241.592 cv
402.837 241.592 404.182 240.248 404.182 238.592 cv
ef
399.381 246.872 mo
399.381 245.216 398.037 243.872 396.381 243.872 cv
394.726 243.872 393.381 245.216 393.381 246.872 cv
393.381 248.528 394.726 249.872 396.381 249.872 cv
398.037 249.872 399.381 248.528 399.381 246.872 cv
ef
394.581 253.712 mo
394.581 252.056 393.237 250.712 391.581 250.712 cv
389.926 250.712 388.581 252.056 388.581 253.712 cv
388.581 255.368 389.926 256.712 391.581 256.712 cv
393.237 256.712 394.581 255.368 394.581 253.712 cv
ef
390.021 257.072 mo
390.021 255.416 388.678 254.072 387.021 254.072 cv
385.365 254.072 384.021 255.416 384.021 257.072 cv
384.021 258.729 385.365 260.072 387.021 260.072 cv
388.678 260.072 390.021 258.729 390.021 257.072 cv
ef
385.461 262.592 mo
385.461 260.937 384.117 259.592 382.461 259.592 cv
380.806 259.592 379.461 260.937 379.461 262.592 cv
379.461 264.248 380.806 265.592 382.461 265.592 cv
384.117 265.592 385.461 264.248 385.461 262.592 cv
ef
380.661 270.512 mo
380.661 268.856 379.317 267.512 377.661 267.512 cv
376.005 267.512 374.661 268.856 374.661 270.512 cv
374.661 272.168 376.005 273.512 377.661 273.512 cv
379.317 273.512 380.661 272.168 380.661 270.512 cv
ef
376.102 281.792 mo
376.102 280.136 374.758 278.792 373.102 278.792 cv
371.445 278.792 370.102 280.136 370.102 281.792 cv
370.102 283.448 371.445 284.792 373.102 284.792 cv
374.758 284.792 376.102 283.448 376.102 281.792 cv
ef
371.302 292.112 mo
371.302 290.456 369.957 289.112 368.302 289.112 cv
366.646 289.112 365.302 290.456 365.302 292.112 cv
365.302 293.769 366.646 295.112 368.302 295.112 cv
369.957 295.112 371.302 293.769 371.302 292.112 cv
ef
366.501 296.672 mo
366.501 295.016 365.157 293.672 363.501 293.672 cv
361.846 293.672 360.501 295.016 360.501 296.672 cv
360.501 298.328 361.846 299.672 363.501 299.672 cv
365.157 299.672 366.501 298.328 366.501 296.672 cv
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 48 /zero putdup 54 /six putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LSNQKO+Helvetica /Helvetica findfont ct_VMDictPut/LSNQKO+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 15.4561 mo(0.6)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf46.8438 301.673 mo(0)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 3{/.notdef}rp /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 270.823 mo(0.2)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 241.806 mo(0.4)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf46.8438 203.007 mo(0)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 172.157 mo(0.2)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 143.14 mo(0.4)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf46.8438 105.339 mo(0)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 74.4893 mo(0.2)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf31.832 45.4717 mo(0.4)sh0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B59F85E959DC9E62959B5B049387399C5A88EDF2D5DFBD776DAFCB889B62AC98B872299D239B948311090C1C069798A7F20A8D7BE29B8C384DB55F663943C1B42044C054991C856F3C3AA085C2B4902C8215DC2701EFD5FA664B5C9C44640813B5AC440B37B70CE58EFC65A9AFC0BCC84F3CDC68795E4995966F74639212F5372957A607AD4B6B94BBB7C36A3A6EF325381FE12C0468B5DD1F216D01C174551A50AC78A5328CDA24DAC0484DFF3993D32A7CA064F169906996AA1E2F6A555998F55A1AFCE2776BEE589EC3162F968A180A5713C4537EF11B8529CE22F8373BC7632472323D1F8491B48E948870255C9E830736EE70F30EE309DFBBB8294CCC2BB5ECB81667BEB60155> |-/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 37 /percent putdup 45 /hyphen putdup 53 /five putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /.notdef /two /.notdef /four /five /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf171.978 23.8389 mo(0-5%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf315.956 23.8389 mo(5-10%)shLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf459.706 23.8389 mo(10-20%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six 201{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf156.405 122.089 mo(20-30%)shLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf308.17 122.089 mo(30-40%)shLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf459.706 122.089 mo(40-50%)shLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf156.405 220.839 mo(50-60%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf308.17 220.839 mo(60-70%)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 199{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf459.706 220.839 mo(70-80%)sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/q <1C60D8A8C9B7EF322B184929E0B5A459DE86988030EB871CF3F1F89AAC255B947849C923A72862C0838E4FFEC50337DF57FDE0D1CE7785FE949AC8FB2E0B82EA2B25BFCED172F24897135D17C32C6271FDB42F40BD8C6A01481DBC256FA4B3B7E705812CCA623C287DE372412A7902B7DF3795B3A648430010B3D7196447674F9A7D49829AF453196CED7F5B3C2C0A202C> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 113 /q putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 56{/.notdef}rp /q 142{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf237.206 337.589 mo(q)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 100 /d putdup 101 /e putdup 105 /i putdup 115 /s putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [37{/.notdef}rp /percent 7{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 43{/.notdef}rp /d /e 3{/.notdef}rp /i 7{/.notdef}rp /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf247.217 341.589 mo(side)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/G <1C60D8A8C9B6FF86FAE761919412E75DCB56A17E0B647886E974BE0CD2DDC55247C89172C0F24B317CED95A1845F91927547B6F787BE4A81523EC6B90B7AF23F6F8A8BDDC51D0AA285D7E086AD8E028BD7D16A89F17742D556071D7D56166C6C8A71E0DFC3DA3B4DBE27EC4E6BE207A1EAF47A71BE409951D1C5060119CDD071AF7E9076F56846B6D62E52B2CB6390635FC230> |-/V <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 47 /slash putdup 71 /G putdup 86 /V putdup 99 /c putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 14{/.notdef}rp /G 14{/.notdef}rp /V 12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 7{/.notdef}rp /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf272.899 337.589 mo( \(GeV/c\))sh0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 80 /P putdup 110 /n putdup 111 /o putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 14{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf72.2061 23.8389 mo(Pions)sh.75021 .679683 .670222 .90164 cmyk
LSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf54.4561 319.339 mo(0)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf92.9561 319.339 mo(0.4)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf139.206 319.339 mo(0.8)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf205.456 319.339 mo(0)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf243.956 319.339 mo(0.4)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf290.206 319.339 mo(0.8)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf356.456 319.339 mo(0)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf394.956 319.339 mo(0.4)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf441.206 319.339 mo(0.8)shLSNQKO+Helvetica*1 [18 0 0 -18 0 0 ]msf488.706 319.339 mo(1.2)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4561 226.339 mo(B\(q)[-12.0059 -5.99414 0 ]yshLSNQKO+Helvetica*1 [0 -14 -14 0 0 0 ]msf25.4561 198.328 mo(side)[-7 -3.11035 -7.78613 0 ]ysh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/bracketleft <1C60D8A8C9B854D0C97CA7C2B861B9C1CD90AFF85F3BEFAF029B3E54E0FAF2> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 91 /bracketleft putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 4{/.notdef}rp /bracketleft 7{/.notdef}rp /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4561 172.646 mo(\) [\(GeV/c\))[-5.99414 -5.00098 -5.00098 -5.99414 -14.001 -10.0107 -12.0059 -5.00098 -9 0 ]yshLSNQKO+Helvetica*1 [0 -14 -14 0 0 0 ]msf15.4561 94.6426 mo(-1)[-4.66211 0 ]ysh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/bracketright <1C60D8A8C9B854D0A1BD118E81B093B97270F6CD267A737E85B9D694D4125D54> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 93 /bracketright putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 5{/.notdef}rp /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s 140{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [0 -18 -18 0 0 0 ]msf21.4561 82.1943 mo(])sh150.331 137.005 mo
150.331 135.35 148.987 134.005 147.331 134.005 cv
145.675 134.005 144.331 135.35 144.331 137.005 cv
144.331 138.661 145.675 140.005 147.331 140.005 cv
148.987 140.005 150.331 138.661 150.331 137.005 cv
3.0518e-05 .993988 1 3.0518e-05 cmyk
ef
150.331 154.173 mo
150.331 152.517 148.987 151.173 147.331 151.173 cv
145.675 151.173 144.331 152.517 144.331 154.173 cv
144.331 155.829 145.675 157.173 147.331 157.173 cv
148.987 157.173 150.331 155.829 150.331 154.173 cv
.878019 .337896 1 .281529 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 68 /D putdup 97 /a putdup 116 /t putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 8{/.notdef}rp /P 5{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /.notdef /q /.notdef /s /t 139{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf152.405 142.089 mo(Data)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginLSNQKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendLSNQKO+Helvetica /Encoding getdup 83 /S putdup 102 /f putdup 104 /h putdup 108 /l putdup 117 /u putpop%ADOEndSubsetFont
/LSNQKO+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 8{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /.notdef /q /.notdef /s /t /u 138{/.notdef}rp]LSNQKO+Helvetica nfLSNQKO+Helvetica*1 [14 0 0 -14 0 0 ]msf152.405 159.089 mo(Shuffled)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/LSNQKO+Helvetica*1 uf/LSNQKO+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Gary Westfall) ()%%Title: (fig15.eps)%%CreationDate: 2/23/10 4:44 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&G@)iCdO>$B!PSZ7-qKdMK;]2e0OVo5%"poDP(\8/HN(FHrN5@VT#;n9o/k:3m_'0EHE+!GX"/>E[,54/c%hkHn=qi:GMX9q%F5D.(j%\[AhGbifnb\Anf@!XUL<i<K*$<4Ud6sL#5jM+.bAo^-P)6'aR3Xmr)7AW0BfN_pN7u^%=s!?,PA/lXrnAE=c^GqpVs/Vo%qYegV]VU(`rN1?5*"?Q-oLS9I,L(Q%VWQISHp$ikUs<E_iAgKWpA0q3RLGW@0@*'I]ZA.N9(QB(F$:\QUe0F488%F4if+Lk3sA6,%./Zgn*tR-)Gt5FKP,-Cn!,bU&7co\X^QE+a?isg!JZ/.mj/KJ6GqTuYUprAp^XJTU3h%7!\9L+G?ZI-Y:3m#gf@!0-3h%s=^!Z<q%-keBSN<d_M2ZW!u^GIW'PDdn:%;@Na2eNc^I=b+='=fss/[p7JPIl4nS)h5]>gf+X0u//$0M)69UjqKWp[-gV2O](m%UA_]P]suT%G16=1?j<5sEZG%RGHU+WBlZ<%+i=U\3VqsmW$CsA-fjI0Ie,qp!<>q\BnJlrnfc7CQq%$7p-%lh1(5irp#]Uq16nQphCcgrYVE^6%'PG(XF?5l]-G=COQ1FKnNq^QB'RUh;PtNSTH1jhg+r#^HJA]b204>\N-G>Js0JAWUH)jYc*Hc$OEGq.l&F-#nc+b7q8'-E*cXtU%%-6$KtI&=d>\EMTT7F:f4nJaB5aKBd=Rt^lnPS-O(YgT%!nS/9Jr(-[n\+Fm!,0.Mq,(ZBN1k+S-pfT5UX,-uY:*f=H,(XqO$$oYe%nS.i!3fU8iC&BKP``D=\[S!GdOho9'YY?a*D0#,u:ZlcN.[S%Rp^KHm<On'jb%5t+>fJke1:@c`]ISm(1d3LKG[D0L1R)?@0;XG5%Uj)?#G!D,Yq!f#%@A!$&>@F.+:[(%/&Un1.lk+\U^DSE_Ze-Z'`4rNHpkb(\T."7:&Un3(nMadn4s<\D9o:#s@DD:FgP@%[A)i3+%;]\ji;D-oUI?O;o;GV#)Zr-0\3?'3oK)T..llU[#,W^OafCU+)1&R$5Y^^JB.9G`>fK];P^T_p(r:,tKN`Y]`>@IR$PE$iP'$=:5%+#,Mg5g#MmYVDpF;6FCZau@<Vg2fkL;GQJNGU[/]?F0n5_)Bq--CNLJI%'bthSoKQ-aoc?NW#V7U!M^G[_^gGr(OELgnC75(oVO4%).p1kU^\cNP!W`2bmQG,Pjahtb&rT.ndR$\,Js:HBua6_4,$G%Vt]EdV4>h).a<(Z.;pU;Oo/&O<G+CA`oC^<<Lm9O:TEb[l"4t>%ar`gLaq1',l6nG@X5e^E0i$`W.Q83HN*_7*_PL'!4@aki2q<eur"G.?46gb\K8'b`eDKo=j%lN8(%jNaa^jVml>QN_c-jA5=b]!g%rs/\>U].,TV%W`2rCqc(r^qlN;1I&eC6ee#rh_oMnjE(1NZESsEM\/k^Z]V"?T_IdVSih.'h':8WSgeI]9::p[o>I)(U?A.KQ$3\%VNRq:VoPF/i*C0D<s8X+s5AI[`cr6%`&[`'n>3qCALUs(JIq@8I\Yf*4dT1mB`Fc*W.3b^#`$hqT/V,>r+YgGHX<P'?:DRf5HT]/%To_I8kr81H8tVF(<Oa=?FZ`%j(+IkshC#QM#Ru$H_r!F_N5,--[\VQK7>CMdN=W]q8!%0^WMmtA7EQjf)pdFUnI1F3-`Sla=HMhm%hXgLk%J2\uJP_GKH+YqT1t_DY5(nLI9fX>;'P)abMTQo$c*P18:Kb73RHG;;U[f5(QW9'H:G?L[(c%Klbf$deZ58jS?&9pHKQog)%%IsqU/BSqDphYZ@8'6\TW_XqKeAu\r'XO#[oKL0FZQrJs@EN7r(?9nD9P>\687_seiAP).jcONg^@A%!3C/"Y99`=7JRU#8A`+KD%iFRJ'iVueJi)-Z8IKGu-6C!P!3]78U`0F3k&e4tKU/306L-)qV.:#Q2\.VV3\R$bP\6L5I:h<J3PmM+1E/7O!Co).f>#?\/8H9/!%,?7@Xn@0*ELJ1j)LnfQ=!(NDD/!Y1-ONB8ZB`]_hW_e"(I\[J3!Dg%YS</UA]P2dY1NI8c\"!F<.I;7:$#l"_.40V1%fd@@,D^k!%NS"R*']BqUTE&ln2=^rs#46sC+iCOb)NTol4?Me`#`'FFMg`ntapFno8LD!TSVS7%88edjCa)fTo,CorKNqEP\:jS^%-X7tVfIG$%8\HB)H(o=Sjc)i&$$6tMTVJX9PL/n)Gla?_9;N9_7AW'n:cSQ*,1^L`8c`rrL#YT^9e"]?%]XqVGt45m9e+=/J/j[-_h]a`aVH"O%G\B_o]@`E"P8Pp\NT9bXKi3s2A]iAPN8"/,7AuA5Og_9UTX12(@.H.HN?]bR>?-6iBm:uNCjerfNZiOsgq$*^'1t'dXf,.CPfO75%/lq''N\g(#>#3j-7I:Vl^p6^ckK,\-"c+,faL8CkJ[FK10EVFeQT1l639W0@5JffPOf(4iQ8,Ebo-c60kqdjRkQ%;KB0WeCW7U5q%K\8]QKCOe%+>uki/!Q6LR&VoVW2.SE\\\Z125sJY8A?;=R*j/0)r)`cX\>t(Vr[#0U>%Ypg"DT<dop2Y;o]t3&[QuZ.9SHXk+I,J%:R2^L`F0k-1-2boDkp'mOcj1od+:uY?\uMF85VsdKntd\9:FOAaoNJJ19MT\T1Pdlb7O/'q&b'[n"@%kJ1X<E%cst'XD:sS,/#aC%E?#)I*CNX/$6/D4a_]PDVfJ[+>uE/E#j%(1'>d05bCYtPV95*FM)<3V(psZ1eG8047e$db?bte^&=p]VLt2RaALm!rJX7WYOq_)'%AG4@W%e3JS22,[@30%/4++XSp_*@"0)D)SI!2-=JNQ4hs47g#<r^6'?X?i:W>I9E)@bnjQ`6k#!5p"-!'6r4H>H"ZChE[;8=ocU)%[)IMWbRMuAr_"]%;_mF03eG;n<I?"UbHcRJrmP6#-Ae6?2-1FW47aJ\GAIJCC'QmaJ]aO2/Xp8l\etYLdjd!H'W"I!R#Vt'D5<6<%&h_5kNoI*TU)UGrR](tK,dLenM_%%BaH;1XD#f_'.N*";KigK2T3c>bRU;m[nJX8K0D2ViL8lth)EUbK8bMN9FaB$mq1>[_R;XJ=%!6$9>-n9[KHcu2@/P3"J",eZXI/H]]3/_bF$@tc&iHSjc_8[-m`A;a-`D.Wt\_i9.V)FS6eBHNTr)"_-A:LWl%Z?U?cQrC#N11_=%?%kV;@?Mu3S*:ho?`K6?)Q2en#P(7Z7\A8N/6V+t13kU#H>4/3ju57&$&h"AS>u21QuOjh5sMK)WsH?VUS:6;1:!Iq;?*.TXJ?;Q%bEDXT=6,l\@e-rE%l$WM'VQ1V(<)+d'KJG!S7u0Wo-k>iQ5.oj7tuQi-@s0g]OF16nnEo]n<kP8pTtRt_#+tk)%=iIkFn<EXT'L;%j3_0UB;nVOUdtWM@D7@V*^"[G4PDSc$mt8P$V%m%of7Sh-mu!\;bd>JWo=aBHm"Z>dIImm9t`2$T4S_[H:aj,18-HlUHBYBaf&)"%\3+5RCA'3e#QGeq+n=QK<L#^"SB2Z@h3ku):M8p:d5asIKbfJ`$MpQC^I6[(0jTK$Ooi$g`66$M)EasgJ<:\,dBp5`jW&`%q(9Xk%eB8Q+BEP6#:$k,J(7'THq%3Ho2$i_N72hq1PYM!T72R5g0hE\j;doi[pp=a4Nb["bXHIWfVU;"URF2?JpdcS>oM\cIKNTOchnehp%H4e1dp,iYP0MfjTC!t\W@XlN&@S:6]O&29VZWaCYB\#NCln]A3'1r3(:L&bL8d$7/c<4,&,::jkK19[q,=]?I;6/E:dY2!^N='6X%?)2eK9]BD'h`C4bBf1<l(^KL>]i48VKqjXEKWL\h!3G\t[U\j!/?pW>[47<7&fj<.3:j*58:aN4T]ma5]fcgi`3W!GWW,?T:u.L*%q'-GQ[Kh5eWflDbOni>7`e(9f/ES*9J@%oPjVkP^`*THbQ,GZG#p\"pRDjQZ4I9cP&)*_Y7&ldN8W]H7:.Sqr9r!^Pc2Ebb7e@S?%4V@(6UIqe21-`!58kbT&7XN'\'BMcA'0*PS9WKJ=N`PuZYuE`_`cGgMZ9jH1=.,u%ajFL"M9'A+QS-H9BXoCSF!UGaO0GX@p#Hu\%k*>3Ln2+'sZC[5c)dJ6jSD?[e7IqfS)R#LtBs8[!UB`McAA,fZPjqLHIt_')]LFIqP=$*kB$)Ad6+o@Bf^B6RWsK5a%O7,N:VC=+%L$I^G/6WC'2XiiJngJN08*u'uOcki%C?%9j9OnnjWP:1M`OH<<$Ak#Z''a;WcBU,!8sC!,U,ZU0+Vl=X>WJ@o'g*CW+Va_onMfg/%3;+;fV,Ya_PX,G=d)&+bQkNHtU?:U:I6c,2N&Fdc)L:H*bU#k*l"^J%/*gY$*&/(IOfTfu/K(7TK"QY1@W=slY9M#6(^$ZamjMF!%^X[H=NLsU7.a5Wmibq\@#I>^[O4Pp$[>j$3.Q,qiL&,noT%6di_bm0E->Uj!0eZ0A7G@]EN!3o@aC<J317k1ZTt@5qs)<-9cZSb1%V;1(@PSl?)>GC]hQ-?g%#N_4*2<nZF)!+ASVhrUL'n(2!qKa'.Y2W0Ves?,&ZmCVE=klF6d!i;9+<%k+HU&aR;&mQskb@UVd>+Ld%[HgFa+rGD:[^mfbAgHCS/HsXB@^DQtN,\i;1ENJ7+BD\hECa5tejVT"1C#c9_:EYVXlq+^X(H==j^GK+&[L\+1B"7A4#slM6Te)o%K#5K3PoP@[kD=UXBqc[qf.QAH3Ngm(3D!Y@IL4M&cp^s1YF).12Fq+Dd]=tW-n,`KnS[T+%r9Kl\E#NJ&j3uBD]kgOSRejd>!2F<%*AK#I$LK*F6@1/#Uphm1c-hCM@q-EY;ZC"p/\l+tLu1P0A6:KoUI4un>[7HgQ\ZH;=a;<G+nqfY\')mUDd)C$RQaGI`n1WSdOQ=j%N3Gi2<6bm[)&b*TClJiRJ[o@=+rTBS<]..GHlqPdkrK*WacLtLoR3Kt"]8A'=7,'N0HnVC>.5-1,WdbPAsKMqdAV[[V2^4-1qocJ%#sucH3_?J%V2c\9XlOCglMXWH:UB0Dkn;W@qD@fikZm%7\u(U#0hkfd=F`gM/B:8e(0SL'erm2'R]VCFqZp`%=J_=>7M6CrRFC*c%C1A?%LE%"aB<Oc@Bj;H"la/56TtEhO"gEiPGSFV\;FQFgP^&/Ke7;_.Ue!C*<L(6W=fSc==jng^:*uNt<uoZZV!ZM2&i`>g>EMNj%F+WD<is8Z$(G?G9dB/QfHRET=oH@U#Z1X!E]GAUu)oa`ZI9#El6N!E"3?lZMA8-.L9@3?Fe1.uFKt</#G?gCKX_,dfe//Aer,O-d%6q_Q<Jb[;$bke"48RjdobEqEpOS+kIH<EYbEV_[]EurhPcfJ]k7&Gb$pkarR:(oS.4g3k6"dqB`G$_5S"OLAub&IhoQ_C!'nqp6r%5CmeVYnL+m/(#<#kqKo41UnPZ8d$?Y-h7U*M*I/f.rpB&B%TL3dS%ZL_5^1O=db\jCcc1mTm%rE8B<h*))I'tP@\<*&ZlN;l^2J'%q*lTfXO8>=<2l4bG^!]%QlLaCBNlrt(f@m8m^$HSR]cC@80c@*&nXPQb(kKb7#VoBFH?t6brb,tQGB-5GUXG!BOI5`kfYbqR5E-T%ZARD.\h]+AZ6]8hZEDPBG%qSuC;2K(c/K3B;3!S[P)88L==>]'7E%:(F-mCsJOC%W/]dAfM_]g?&k6M:3=\BX86b5@PtRkGpahAg%)5ji*MKusN>QOkhCc[u(los2$,A60r=6(,6?Qj'D?HT5UdA]TrbCh)%CWX?Q(l.SurZb7=>Z8e]kK2siOm#C<Ib4JieDmBSX4\C+%`Y$<<9%`-%`[HE#Yc//6O(Qma1NcEErF:s#ol?$+X1<:/Sn"3-Hs2ZWHF>&Tb:&bn\r%Vk!V<5MN.dkG^SE=1=MA&6PZ-l4"7`8M%<I#K5F3;'(o8sn;3kJNWVd`0;apO9:dm>Q:ljA')oJnrf)H]#-*Mn>+#"73X)%DPB9!"X`@*+Y>=9E(cX(#RDPBiC)\UW:&W[`C\%\]d0P+fk1%Ng[a36!8Do1"6#YE\3npcH0i5C;,bJ1b'7V'59FiB'WSTHr\e]FL+X14Hqj!GM=Pa8&O+\p?u^(.I3[2k`nP=]gfQ9%H:6IXR.`TnNrrTt;WV($9sU0T3LEPr8S.E5j/![5`\WPYP],24/PBkA6ZT_X(.cYI%Vd_VEbrd,/=e"edM.bT?:&]h?pX:R+PR3P%FkFMC%f3:i)IThpPSJCI:.G30#JI$_-[0I(fmN.3p*=[`TD<.I9mad=^?!P8@ipos58'9=`.Ul]R_YJ.9UNW_=Lg#+HMr:K<c,;.%1F[K2lh*>;m".+d`,:hfR^>YM5`7MS]h*Q7kk:j&a-p`^qL"J,D_p;aH.!@ikbF=';+Z&?8&=q5S"?KO:MDU1i'"=WD*+J/8"-k2%V<s)%18dk0[-:h4lA<cN[[lR$LGXj1J3Z\`[=R5?ktIQ<Ynp?<NO;3[f"Bn,B!H>sJfGVW`o)\>F4b4"JP-YSJHaC]Z1_l/GLHB`%SAf*(Ak0]VX;Id"5o1Q%Af[ii'<8<qBtl\,oI-'GrV:Q^)pZu'm.Xk$(`U\YQTY`Df^I4`e!0o4D^aT=6$(bOp[JdFTF'4]lp#Q*%MOj*mr\]X+s).S#"7d2&X4M7_i;r&>DLVeA]1Br^*/7W8N+RL;4&c0RS<3UGhACT'*B2_N9V@"]aMK;(Wl@LV,Jt"Q'U&a^(D11c%0`fGrTJ4Jpl?.EXe,-%u!hqACiVB8>XZL7F&Zs>+,=3iI.14nl0*9E4lh7!hZ?QB3fGO+:3[c+]XOVUIC/-(/5k5.:SUHO\;\0O:%9[JT/<V'LhP#558X&@Lge*G%XEBR>@*RdIo[*aR3*p`P(D/i3QghO[\dT[_3WTgc+dl^>0@aJpe:u3Q4D:WNe#skIGS^F%]kC!'P%SBM6:k'RC)E&<fnA*kU*k@mmeV-N<HXYH@WUqHFADUQZnU8Fs.p';$joA2F&el#Fhq&E<da4(=#*3\m#!J0ZK@(_K@>\a0W9:fc[%c-'&<b@_GB@"n5/Dt`.NFK@Ff_Glp$eP%[`5%t#n;/5*@iZB4*bMt^;Gs:OOqjh'&)hWSJ89&3W4;i;(D9r>IJ2foE#2lhufYp,P%BR2gh/es"1O)r=ak;'=)(`rI]9LUQQX%<1ldi7J6ZCo&;q]BPI+aN*>%NG..FPh!8%U,Y,>E&R4ofPZGp]`:_K^ljX5gT6Cmpt<.%qfB8IRuHLij'd/m#md)!9*4fpFlnJRU@e\I/EdPa(Y!@^oA3/u2LFJW/Kh=US4Ht4'-8KMZJWr'=/>7t1/K'j=0'5gV#G&/!NTIV%C#cmF:<(SP0Dj"&F5eLt(!-%h=M2g(n4888??6.S3W&H7qOihF$;C;o*Zi#W%.C'QAXsKQBel<0H5iVV?NI4BV*LA#PH3@8Ig;!,%o"aa(8/\dj8T%qS,YVhMl``WiCCG1RIl$_;'20nG6[ET*"=EjX9_@0sJjhLnD`U_V8TWu+2.aBQh>@EeBOD&S\H-HT"+j(.N_8\P%0ZNhfG],d8@u8!kI>Xi^N<1efC1"%<+q]0m\F]k`H3`ceB7I`[G[dR<E.c4RhE5ae3#[+l*#J7ecC4pX)tq3fH3;OJX9Ie#J:AX^%<iaMk+9',!-h-4*0)`t_oU^?#?T;s/Y!-*SFq<LP:dqeTnUcJY_J]P5B=QZcpLc/QLngb$)IF4eq1\hBd"DW(]Aopqj?<jP42b?F%LbKW76Y3C[pfo_nh1hj/O^>J$'5Mt7!\*#Vp`Ii!>7rRCT$*9`#/dm.I+/1eG&S4C8K+ZSLce1Gd:n>Cr]g36!&@fd!%uaC?Ih@D%b-r5b)e90Ql4Hh%3Vc>I%QpA7IlAHoeQ45naP@>Qi+mnFTaM-)p6b$V$60\$HKDUO^r3qi(KHoL;+uTbVuF/I.[<PMA&lq3*mJsr%>I6lE8]TT*2a5%8[/+jS.Hc\U5U"5t3Xj"%E7Fk.c"GlDC>s*!p4.%"jT)/GhC_,6o-n@%/N*EiJhm_?iH5go[GLopER8fp5*:^M%j&p/lj'M@5h6r#.J[S6k3]\nUZSD*pSs$Sf1'm=[,,g>TD#XYGH6)I]pHOg6.TA;fNejQRNbt',n[];U@P@h4X!.Fgk(WSBenk$U%i.*>q-\GZgV0[4X0lMYBHoW+OiJp'ke^$Mc9uV;%)u0.-K%,ep!@aQ2=qL:!jl_<=Ue+ehVa7Bb^8=p-'4S5'A.Sfc(I)M]a7=HZ%[YN>@J!uSc*_]Tm9=7LoBe!UgY"pY'%@'L8;_lo%om\E7^h?@n(t/^9K<jjf):ih&K"5X2>!8V>GSbc1iIJI-Fg?)g[&qq:r4h:q%Dp&GgrU2V[-FaY8a&2fMBqjejEBVjWl$lj1Z$Ym6F>b'8G;\'':(HmE-G&U.NPQ<M.usZ"Glb;M0-]NXKipJ(rp,'=2?#7)K5&*P%rkD_T/$CLg*I>m@Fu?l2D:P]"GL<*CJ)0bZmshr..6\c3B:XD@Y?kl8l)$sk_uFVX&h,FO:SrE8?@>GUG3,T*XQ=r@?V96ieY1Q-%"ti2IlH\Tt(>X(LnX9C\k+CkNS'cW3QH8Afs6KA#XOM`hKRksqG/,-p/KMB/d]po788b4rdl;/!?'ODLZeptc.k-\6*q^oQ8qtTJ%cF=[UB6]lim;]IB9WLk-UR<;"2/#b"'q0ecY:uT.P]Y>_:+bWL2oj@b47*L>rMH#mi[sa`qIC&L;HB/U9`[<PO0gTX!h>VUa%,BP%k2aH:I*(I/lt`%k^';\hnm<m,jW5lG&;<em3g!,bjKc^$\N0Sc3PA;db]B6N''JX3aiOkJ:#mCq4W@,.X_,=.Cn'K,[?$:/1YakH%S^&RWDl,(1MoP.5D[`.'(]WB!g_2F]3]o-/H*Yg^dU\:Sgo3A]B%"G*E<u'U..C%X\)5'-3:HSZHg[]O'I\OEk2NCBI5b((W&]KC%l_AX0O'."4AcOC9*oi!2j,1:Ap3$O$Hc4'EJXEo:PE+-q,fgod+3eo:H*%>_7k1RP]clA.BM'&(#W'\'fUCT<g^>pW-=<kq.FPY`%K3FQGoiaGU))X3BS'nh`];+psd`Rn/#>JFSE2s!$4`RTn-D_0n?X:O95#fS=a5o[9La6&]%lptHpJrqch"#tR[V!BcgC%.PDmWG4%b:D;j27$ufA[t7%Eb:YjnEC_G$nEJUeVT*5^?j=>@QHE1/o039BDlM!66n<;aceJf%iugVgT-X]bqnD*!,hOdY)+'@>Q^n7)W_8h%bLj"83$(ki4ab_('R*ZiCH3?UH%153\8BEGlG7(1EVm2o-WJU]@ad6DrR\"&SOt]9AtOfi$U"A+[=G1(hT&H&C?$'=aj@J,T?n&l%BfPDOqN?b[c"X4;)`5V/9kg)R@9T&+DYGO+p1O`sGD=t1%B7uX;:@+E)8Ao#8LHQfi7)X*TSJ8-cpOG#aoBHA@F9s7">)0g5t%e>%@D=g_I_'@iO#:e7O26#SS4'T&mcG%*J5.501u17r6T48TPjsgS;l3HR9jpYh,1]/cQDBRMK(OfRO[HI3Ae!Ri.<-J7c,nIi\YLCQ%9^9E0dc^oPN>32eU9-mV\7i!E'5>YPjD4u_eLhaj<4chEU"VqN/_+G_?Jig!<!'P1KR__"ipLb$mI\G_mV$8mfuMPiH=7KB:229p%djSm'FCg6S<+E6N>5ijgSJW(SnHmECI^i6\cq`.sWoIp8-FFk:poP]73g6Ol`q*f;7%,k)I6+dUg`Ajd0[Lm=[F:IW_pRgLRb0;6%lkEGS2KAh8ACE3T)K0=Z22VOr3NH37XAT%g-dY+!DsOU914cBDih58gH.>p"1"&+JAn@\_h7R**,W6in.U6[p[$<]+9W]@^>>F<k%o&4D*TZo]iB\'iH'I#Aj_/a@)A%lWOEPMJ(7R0P7p2Fce;J7lPop)(,QI]K%qkG.b&8gN>AL:*GRZU8YQu5GggJ$c^euOJ7ip'2:%8:?t11^,fF6O6o`2j?LpC?i`8Q%FWIZu=FV;;jDNalW\dlLqR;_3tBDrA:D*8_$NQ1T(T0U+TYZV)lFSZdlmeESJLP+:Y2+>pg(B%F5&\+Ad605p(NfClhRdP8g0;Ic/FcGjjY,oTp:fW#+_nhC#Cmq'D:3T/I8kU1JjZm!]TiiQ[aVDJ)Ur(.%1?7FC5l%5T:+VHUB(s%_ffj)7R^\o]kY,Jbn%)[hiOmB8=>iW!'%#[%E0MQ-\?/dSUTI6(e?`-E^AN2fEa2iRst+O&@2d^CbRcbqO#B(6LlJs!#^29\a&&.%YU;8,>EOOELuqAd)q:'K$TDI_%k/M+S*Zn6WM9rhVThj,+6a1rLu,Wp$2RD/1AWO>d,M_Uiuh.2C;r/4lENVkDT^#?fi1C,^>R8s%iPkM3W,TMdZe'R1T-Uiu,,O:p2YbLG%"0Lt0-&UnpR9Lo<r2NgRbl7)DefSjahrN)cd#[512ggDCA]XKkEF"^Ngj(`.N`):X17mB%h(9DZj(WLZ)NT1A`P&j$_A\uh8fpQ)ojT'nh3<9`#OP,?](<1WWnr"(I$olUcY&haZc^lm.JXYa$\M<)$;?k9L(;Y$F0Un`\hAL)%GO@Wn8s_VRR0)-cjLUbkX62]6UE$tR7]L<lIjl/I`Kt%_)BFJ\@K0R@e2glrT.iocJ%M(L\hEfG;SUk6aEL:LZgqbkM:]#mICmqi%lT`A*iQaT?"!g[cY90qmppU-"3URma8s/JlQ>dMj*)[[rR[q"0TDJtKg=:B3.T$+<^?lX<IptK=3Y/u\MWLC5Yq4.D&+31N5PNn!%ju7bTKrWu*-cO;NZ"@UrgNq3??;EVY^Ai."1(!oI$h^"V+/D,'gcP>MPGIp??AcV(]e]r]TC'TQK0T7H9I;[b-A4tfQk+W.Gm.Zh%E\b<1[UjWXb^G*/jEouj'?6A'gCH]h;Q6;!*7,`hf)<SYEFJIQ)U>1V0J:Dll-4iSH1W")gi]4[n^ch1!IHNm6\c0"]:1c*cft?!%eI_Ou;#1[!,I2">Fm9tHZ?]K-2%/050D%(e/8;ce8t_7m*^A913)5Y*T`_PBIk0;U:MKE@\GAsO`?4-\+M&(gkhr*PN`Q]Tp165X%qh;`/fD-p78VLQ&G>UuS=J/OU6m:JW-%HNm?Xk<08Znn;V90`cF[_`?-IYcTYI;fVI"a'+f]c2>g"b71V-CE1\P)t?X`.,i>unNq%]q=<19E)ih0-q\ZDj6Ycl-<6#N=Xj1Oq5E`=S]OX/,-d+Z+]S@rum]?]0%e:i'!:7mYk+mfpeVMWGk_l4V]K`c7.ia@l0I!)#`,I%H5/KRC];Zj*Mg$dia--'+Z)r+o>RjM332!?)i09+O+FlnR<)5sH2Q3jNrL@'?9#$*ih'\3Ld9q4+BC`gG/L$%./.Hr.m7OQ"3Un#%9$ZDYFAB=KIF7WMUg=_k:3[s;L!Y)5>mtgNUB4M14N2qWY6@OSSfR(kF\WPOgZ)];1O]4-%Fq5J.]G*&*_3/;DQ4_Aclu/`_)?CP%1KaYOXA1QumFuD"o+\quNksgSs%WfGUK3A-><0#5aaHg[AWL23S97/k@1I=C;Z6.?N*=Y-e#rD3l,'6q`jp=GH+#+]ZV*#tg#!Gn%WMb")T_9GspsjgZYM*9e>"N9tl,^ga;)hGPkUoPj<atOXh9soV1FVpOG9`gOq61#F:.#A=EA]j>O,MbTbd29ErS2tE?FEMk;#QSm%b@%0YF-HlD8"W`g<pq)iQjO'$V_=$_=T$g$5R%0oBdH"4Kj0%RWc,?u>W88Ofrok#5W"pE#QTd/IrrOB9&G2>:Ft#jJ4@"4?10\Z%498Z\;:[k]RTBUg5PM1S1#)q(%a6[M5b<)(E'O4@g,kmL6"@A_;^HnLIhlqY:Wi7aSFBi9*0m;GjS]Rq5^g8_5L&)=Rs?6XhBe.I%O26N9ERN-Ne'ZUhce)adn=i%hA58V`gr\onaINM><VYdB\5U*dcu1:mq`4HFDueLY7I;u3UI:[R/D?Caq8(Oq8!uO8"lFpB9DXVF%1daOe:gdcFg)XM;\$$-U+u^QA/.-[T8.12\),uP;1rLn?S:#N11,Y:A,`Y+j)A!;D-@pt@"\UfHRLG/IMI=8uN@[su2Bo7>ADR;K%d[0,ac-n&HMZP`H4bSl/6-DlP54D`d>V',o=?u]XZuaNc]F$-$!K2E"b_LApJM7LbJgKic0kLH[EqAGr`[;cgBKPl_.PF21&G%(T%(4C0Y,bt\;)hTQrebt>6J`C2_(cGjnjK!'CV2ED>ZcETo@`BtQ=2G9`%S`S#YpiV.ChWYr1Jm%tZ.JK(N)'JJVa`I6Bm60[F@Zub%7J^sgk)29(qGF*%6\r*0E5HFka:f1._[2tN;M+1lNXO]NQIV#d6<O4P];E`<1@XQbF;fUm<t[kU,]\)8a2gqDgqiUdqaNW"h4Qpe%q4i04G(mrlktir!8.G(\]5asha9b5<Pok/=rTl6lqKAWA`Aji^cSB8Xf`KKrnm/oc]_s8Q?JgXjp@llk2.[\M+uR!>%VN.d8*HOt%1D#K/!uaL>jWbC#UorV:EU]$(j)iZa[opAu$097$oBW<sl01u8gS*&b,[:j1(WDlq8IIZ5IW<0hZ%P[7O?_q)DhZ9E3&9?MD$6IS%#e_0YgYkW'PRb_YR^eJ5[6?(gDY6QnXjC!-RHIPhaBmMkm"Hd.dlJ'PRUU*&l\hMjFjCg'4=&mja=)4TrC9,a^f(;Q4n\H:i5A&t%JtCCDK+f&pM<sma&fSThd?%KIqn@N[&PBJRSK,a]E9mOirM,.3&ohD]5,k4ShhisU+O/oFUHb$m;L/QZ"C%_'iq%'Pb5X4AmP&i_%j"i$0d`*J!ljqOBdE:u\VQ$j1+q%qOb^NuFPe$,3)oBS].>U(0:+Db`+]^l4jl\oj]rOhW>,e.nGUD93^8[4is,2P&(R<^`?\7Nb%<PYD")nq#=[IH^:QOE1,ch1]3(-tQ$LME3FE76Ipi9?:E^3tES&MN#;EcRu0fTgtiharTr5Q:;g=oS?Zb6,S!Df#&QU<q^Ebl,ua%=U5(kbAL4G+F+A(?;'2GI@kgQ&U#ea)>#p/VA!6oS1]YPlCY!V,pU.<lu%^2i>cH@gn,NrWFU^l@aE_$]7*Yh\h%1-K9(Y+RF(c)%?ar/3\\hO=h73JWa?1M\F.)KBl]S<0U]&p=6CJ`FbHoWIHek&PIRPO$iahV*S'7M\*te^'gu7*O7X&FHRk#Rr?sejc8#>:Z`:;g@%WD>GWc`]ZQmkgcoBI&)%4b:O\eSoN6EH3>m#/a#/=8*9`KKDQ*:=l68(A*#a:D:]6lZH=B^C"i@5=7@m0RgPc,3Km3]TBogMH!=t%]C/_=(+$t%4eOBlq5XV[DYD*!_D\ZLR"o[M^Bld^BKpi$K])3N:iOo9pSPV\AecN9i'11jap*YSU3mF&.j%l22L?*bXaJhM:%E\_%G7J[Ypine4:*99A*QJ',o1l,<aG$&O"Z@Ju5NF<UUJ5K^+sYu2PU6HFp?[5mQ'^@:-(.P!Qa'FQHHcQ=Riuc54FW1Xr&4FMI=(WO%"7[JIi_SerTNJ9k7IEG,VRQK=M;0i>S<%D8p=.Rg0LTD8PLs0LfC][DPVVuGiu>]!VCaTX6rg8$?F8S)2q^QPdg]@4+mtDQ%-4QV%rS;+c0-I#cC_dD6\(d2.61;@K\pK5?=1ae@_K@(K_L1n*?8A?q^,+0J.b(-Xa"#-Uoj)YtY"9;Rc@m2nij4X3XW-eIF8N5j"b)a5%fr]5T,S1@qk=1m:`09ucItLGU2YO^d2kMEfP@-e^Vq'.3\uR],3*,(KdVJAjCGo*Ff3sJ"I-Fd>]Z0\Q2kgo?XW8L-r*1bn+;F]F%1:1\$h/9s9F*.[>?!%XgO%6fo?.62SKfo@JQdPCH]1."VRIg./KqZV[oG[WSH*mMFa'Pqf*^0%d),n1eP7h5;KA#Z&[ejMPAjM;4%VdN0C5,fcJR!u!!cc^Nf#2,)>0.+DGE1;?[@??C3)XgK,`C5?kpLB8V/:a+H5nrJEBf`p\rYuY&rH_(YK&o:Gh=O^Y2t*M^Ddt:$%Jt9OcL'PaD1E"&L6(tn-[E#haDN#Aao$u4K?>6M6]Of4mJ`7r<S"i_2$CR7+H)7!WO&_gJfsZI(\Za+M"76$QUG2PWfEI<"Kgg!J%aIdr]idn&G@uZ]mm&(M/!g<ErWXU,8]-_FU>GZ[("cH&SKhUm]VH=U?5/_L3j8*G)T0F*3Z#@IkM6QkW]PAKG`Bn.5Ta!@Dk!h(T%07=P@j2i7^9.j\Q`e1m6X?_Xq5Mc$t\p8TMKj+Lm&3@n^NkiC,4RG9]"-ijT=e0#jrX,I]CV+iCD9OlA&(2is9(]\..H\sk^,=1r%Ho07jiijse]dVA&7u5c*oESe&FR7oLa$-?OGK+AHWFa,t`Op6`3h9<g/[8IbDY\3:(*A#uK8YB3U:a`JJGK%j6;M<V%tL6EqS?0I%`%'T_"G/e>44)3ej6=a6bqJogMj)E;=f"3K6qmeB#?LF@Lhf'_@_$iQ:oB?o^S#Y0_*fhsZ,Ec"Y9"KUI=G:4#CZtaN*Mh6@,#m$%;[)NZ(c^s=@rV5KFi6X9._K5h0Ft,`+C!r!lir'pe7A"h]V=,HE5@kR&8!#5(CLK.:$l1rD@h3]`&(`[VW"HF_/6J-U`u^<W$qF0%/>Nk$oMpi/9Pr44=<CSuW?GZ07"Zi1g(?)!B-N;Nj/"FB\cHk'_"lH\'o2j7:Y\J>/<g--g=Z,0R]/?QVrM54pe(+JS&$@f$jA84%-shI$]lV`tj!7VR*fYYOj7!<p\hk.tg1.B`((OpE,.)jjFJ@_(=IkdV5?$>]TnL(?RE!4"bjHJD`H=Am/PMD#C/Y[V7mX<-muQ?8%!PBml)RJ8"[^a27eq9;4VWeP`hir([@M9Pn38o0_T2i`E598l8IErY.[J#;^frhbBdOu0Rpa0H-H[TFH2L^[hlQf<`lOLA4+`.0N%X1j[P#B0kc],DuJ%9RFoMS8n%k[GnB%"+&e[6$@#Bm@2mR)Q!AArg<8I:"Pt`Ltce2ZgUrSp*/JJ'-s)gcI5=TnDT.:0!=I/[7tG%JZI]R7O[H)hIaJE41))OpstM&5t@gL`QZ4i<QNag1L0d:Lk1c2?(&GJ9_Y@\p&Or:*RnO^p_aVr&p<bR>LI<1\WCZf5;X^<.,:`$%jq7B7,As\HQR52P45-gT1f#M-_aJ0#rq$_n])dEY7MLb&+QPKQ7`SY\dj4-'I)%`"%)h<m%fT#X9XkBF@9c!>LKZ5s332HB`g`'L%6oWI99H1nXbgB6:-,2O4o\JoX>rHb+4t;%GG;_.lg*d`>'!ISLe&$jF=DW?nr%YIe>qPKXgk+:K\I*?Hn4t"1r6mUWh!S:Sm\fJq%9"=[nS-C&n.]4X#&Gs`#fM&!E<Vst;9]KtRo_>+kH,&p48oGE\o09q\_9[!6U7g<aYopJdBiO_gU7.HEP4dI,%Os*?6i4jH7YU1L%!((#7R@DL#!8dKqlSYC`2tNS8]9/.5G:uVf#iDRD4?X*]>\59>Rn&s<^UE:aqoemNG?aEqfI/K`2j.\o["HW^9AJ`EFCUG[)#2j9%0Pl/2(#>a>p_k4c)lVG"T`]WHcKjd9)#3;"[<=E/mnt%8(E0cNL<@-`GO_^D4WiJF;O5DcpNnSk@r<c8L%DPr-VBb+g*nj.]=h=Y%&:Q_n$/+f&_V=KE?cZJP*$QoYZb_be]IGm>V7(>_HA'J<+-4Ku\;mAc%58:?o3V$;oEEWXXSV#pX1;*2qYK],$OS9PB[ZfAI=(M^%-#8mZpr=#U(nBuQWpOm^<B:KlH^Wj_<<sgh@lF/jm/EE_"6-ud</j"P5>'&p6prj-^";b/d&9W^dm'bT_gR?#!t\]PGWe4ob3hI;%QWF*4^[fg"gscUu!f)I%?ulNQ+;.c;cXJ8"3UW7&%47^*?iAXl"/dG-PNVKc4OWk/QNp;:R\>N,B<'[#<)]f/e7!ema5Nsa'%SU$%nrt@Z'o\7g>XtE-a]Fu#?X[AfkdqPd"#"Ya%"B`S^+Q=Ha'cZqmN#XS?)R9)[k6g%,g%_`LmkCs::LfOI;ne0JDcJH=.dcV^:;m#%Pfg[nWb8"FbdpUfk"oPkD''_uW8$_0<pmEm]TrB(LDUmW42SXXoMoRP[V&.ks#Eo!ip$3N<Cjebf`ES:cF+q>7@7361SW-QAZJu?%C5q0Z>:*Vl/N[cF7&ke.2u4R_/--g;0'W)YF14#aH5PbkYX8c,N]R6AfBq8YXE6^W3U6A*[^5#>7XY,M1`Wnf-_l5l)?">Ahp6Du%)g7aDXA,.5bA-"Ze\%lqi%Q32gIA;n;T3g<eVQV.oT-HWe`F-WC0!EBb?0m<7<!R0#?CKMGEY.uC-N.<RhklR25itM8R(fm_1m%N%H'Dn0GhDH1O]sF@0s9Ij(*C)7N2PlQ/We>NN*=J/^%k`ufT[8aHG)Ve[%P4r]2MF^eJP\1UhWq`OV&qHIuPf4f4p:?da`l:b2IA#%lh2WOQHthd.K_8pCp5CSjbjlk9Y"CMmSccPW`Y2U&(e"P26HXms5o9Uo5Pit*NMNcep=CYNC'eaK^Y-/\E2k?^0.llfh6`+iNT%H%=aQtb[9`rInr<?S.W-W`9Y4*W>#GV`F`$*<4Zt*fTQW31]%"&$4;EU:YFjS#bqKbLPMY4+.oNKbWRTd4!E2ek;IFk+7;"d--YId;%0[/seq6D&l_+(t'KQ>M28WD'lTJ^QZqDP1Xb2e?BG;$AlHIBR`$C+)cg/13@Y\.&(U.dnXJ]G2ViW`]=d(HR9R1c>#`S"4*"B0(_%?&H&f,5Ap51**8Jh&MJ5FbgND00-^V6J#DG$bWT'F#.a.4W+]Af@XeM#2RLl_bP8^;a&6+hG,@p,h11?D;+;ES1&]k(he;KHM6@o%0XFQs/!gorJRm9W;t%IbV4i+er!,`f3V7(2"aWetjqKJLTb)R_<n%N,+\;CX"8b0KHcKNH]O9#1C'Y)[$LX\B)reJ\1l0"T5c-Y)%"P.p4,6ZD[]KPg0Tr,<Vr/5K]a)cKOD/(PuoCaPpG<Dsg=*^`P.(1:XmMr/EF]J(IWHUQ(`WI3TY17?8dMppWYVY^"n7je]m<#2.%Mo!sRj[Ei`mu&l7n9[ms1k`)PMg?CT`Gi/1$R)Eog4TCo!CT3a-,:ESG0`NPCTj*@JV=S3n!VP]>q<q66>*"=iTDbChr;bp<Bd,3%\5L&')gdFZ`iN/(k%`dDS(IO3>`1X>m`%WkfBH(<i-BOi(I!1jo_<j.G4a3!Nf.IUW*&P/Z2M]c6'_#+K3-0/I!Q!M<5+QO([hTc%;DsY35G\T\ACC]RAuKpaUGo/7R2e&=[Jnu`X7Uja,m`Il)"RI&pZ7BifTGZF.NG8qb@9Kcq,!$p$<)3GAAB5!?^;G&(R.bE.k\>s%`F=Qn\Qesk'/!T1[pl&"r*k)W:FDA$[-7r]"\u9T[@[P.TYj3HOdj6M?R-TLI,WDTL+cGN9OcTTg9)a>fD)Jdmg=OIdZ&n7dFOYX%6W;mc:*mVqYYcQ&4FX\81cEV0ieO!nYOH2,cZQZ<.pC*hVK\4grTksL9AWLh)R.n`ruk7P$3]9AI]2KjNf_:GGq&1tUPX;?*]g7q%[afpO8<]h7S"USFf?)4jkD]YnrV+gfm[,4i4amLea_Ub;dL,6dB"o(-1.PO;4\n$**\Yd"HMl7Yec*i[^AN@ff%88T4'AdQRbli4%HTFrj,>C?cEFLAF6'/s21%]TUr5rmd'76'X83*s05-dSf*D\k"c&ffP!87oaX%aY[)(bdB`lj@-+!++9N9kuG)<>A)QTI9`0hk@0%@\3e&`t'BIWp3+IH1FkD,7G&7Nb\,23K)``b`RpH:<\fGqugm5SD2dDBMFSs-a-\P_&V]bFa*F)4[1_i3o(dB7"Q-GfKrr+%c]qU%aW,"Mp__`Nhk$;]h%6&)1ShP18OiCFWars(oVOj<9c[C[I=1(n;57Q[['mBW?'d`n4f5!seZQ3%<hjuJ*UuS_W:JJ'hkG#:C]pXt%`UFS(m]&eY$UoF72ILS`1H$GZ+.p<h809&W6VfM;B_9CdC%A7AeH].n^nO=L,<anNBBtWGX=;SU^3!nBoJHD#%NCKR(5hfG`8/pm%k2o31'<cOU4S5$cD&i;1/Wnn[V&SmA<gr^S\\d0BY;p["ouLa?o<u8DMY-=ZIqh5@YfLMH!n,iU$L&FP+#tlT+K^CdMqL\T'^8Q+%nHuVNWiobKNI&\Jl(9g,dX2Rn,<`g/IHURl@25c^Y<i'^qXA*RF<hk25-0j;EUVG(`>kk%bBs.+&$r<HZbB0]kE/IVBe'cP9U\dq%\!is\RiA]&hU:I4o0f!6Ug\k>PfkRj0D5K4YLSCP+PiY,/PU]d(m^;5kB7;*rS?Xr/jUC/4n?X>oml.,eaqrBU5^_(_Xe&>2!(-F%<3+QQ-q/G!W.oFc;kH.BOK=WY>P[h==u!-/PX>9#o4LH0>==qRDsT\0*<FS%T)koE?FoorOlijAL7W_h?_dSb2ar(<>Hd?1$o[P>%F%"6Am$VRXXkCK+cOX4qGN[_p6t\3>/b6dWA.U*45tWn^3Z4H<0V%eemXfX[/R29>?,\@q)Wkb+WtuFhEdps&594e;lbfOK?%K&#%:=E6f_2%!pI.pdEqc3'YI=,mSpPld6J'T\65)6\<]1npA0pDK3Y#.:h=?W57DLF`Ho=Nr*:ZfBMI+M%>+)uM6^3t=b373oIXkeCn%%^#0M\biM!@!22`YhZ.WAZP]pgs]lt`Tlk-p[[g\CN9)EL3ra]L)J#In)q44gV&9jdm`[VrKae"q_mE.];I*q?'SpE!2"V!T34;4%g>ko]YG0S')ufJEj2BqpHN\aWs,Qh)mWX9\j4EP(q;'QdYd%8s4dk2e:G7,X_38r.@h?fdNqE&L?hC:A5jg;h^A+eu.jRp)bjQm2%ImSkaa-GVdb-BktW3A4jf%_oKG-@+Y`7>[NBF!Q_V\(D<VWUp**UJjcRaA/47k.YrB'>3rnpUiiG;,i:4BA&la%#0i>):$Q:+Va+%m;f`O3t9#Y2e2["GCL^68PjdQbaXG0&rtCJkB>X1f%U)T=a%:W1$$6BKKGi3]*0MQhMh.$>="X-)c[/ens;CK4kYY[lsE4aY]Ff]%;:Z(Pif0j"GPq^&86+8FUrgX^CSVnY-YA4"'-!buS__ok'cc7lhHA;7l+7DQ=sU"3g=b?>,Y2KbHnrs%VFk2/"pQFs53mP(Bs"RK%mm]R#1jQF(,+Zs8q5DU,.qgAa;;*R_68T"R_]NrqaiA$MUdQRD"qT^*I?bZYZ%F?#N#ar[80rjeZ2;,HJrRNkYXXNLLa@Dq+*fXb%`E=Xb]il9'c$WV_:VOqkSp/k*:MiVa^/`A;T=QP/al"I^8$tduT%9gMiahr!13LPr7-Zk[AQel!f-TGV;<>YSX3UJa+26jSb/^hH%e<fboA%cgV*Z?5YCJEOMi,X0tjIn5V;q.fo7":BjqoK'QkIoGteu-'/RL5%:7FI"N4#rPU?L@G!rnR4j+3b%M^MV'>60%,8?[\?n%1u2.;7P"dEp(9J-;=78QT;c>.#9\S/*<VQ@,*6&eI7b5=IXj[)ElTY$1oFk08nhf]MG[:]dgqk=1gb;Me"pXOS2;CO\.-p/LYP*,%PFM:7dV%H%O'h/6[J^B*Q[S!QIW+g`eit&`dJg+/^FW@,+BpPCp%[p.<;Dc\QkQfBJ;%87]>oo@LCS'[j5hR[Pq0Bu7'a<T^[\fX%k7)et#cW8XQK10k<\rr\(HUZq3YWSdW1M'!=GK0+]nP_P.qULS<U<1L"%"/6Vg<sL6n6H,pDBJ>B&s(W7(8?jR<Kq@C;RUJT0&[1%g:!H82"36ag*(rL?a4CrMIGZlRk@gf8XIilK5n+L2Wo)IEa[HKC;j/?hkn(BfBobA:7?Xh0Adqd,_PIID+)6Gc>0?4#%(Xp9U1ur%/W-Z8N\PJ'<go4a[kV$+1m1Pm)cL.Hku,=hTJX!8j=^5t_Rs['J!QOI<jPQ>"Os\=pW^bLD8$+dhH<t.8c]=)BSu>HH0Nh!3-BCO%-CuQh(M>Mq:TjqE^qupu9Tk^EOJUcOMHmV1ICAA#`Kci-AiV+j+NY^o[FPf/GBRH!CYc!3kg]bM+3f1i0B4jgj'+<S<MN]KdD\Z3%c1lHsHuj)dBLVA]5PMp64sst0[fS0QMO0oT-W[ZRTuW-cpRU'G,Y9";o&9+#No9YtX^eX#@f30"XuX%7Y30Gq`_"Fa>6?;(LKPPJ%QZVDV/imA+JE[NcC7W:#E<OkKq0?'Ua%X.WeN)4*#G0Md0nVr"Y*3m49?kAu%Xnh;CV9</3rP%^bc(=s6Ee]Z(gM#nbmj:WY0J$?%]@S+S_)Cs$TL7TUCRUMY\;#%89V?45R>#T-Z*edZ2t0<,qHS&RM6Kdn)m-"@gj+gh:*Wm6`Cq`EkDKKmH9tk,/Lhpj(BZ)r>/1jr%E<@BH^81p-*2^D(1<fbH5)d<GbmpTTHfl(\OsNg[`D+9@INft_I;2(fkkR7D/^UT17pqJ/LqcW=5&27[9RU#;OKW.A[mTj@h%2Hu%r/Cbcg(KhrY>#%F*?,]CF1cGE^KG6jXi@73`L822?boKPbrp@=9;"'#G=u<&3eZeI3$FP8aXZebLrk^oH2I3>N-PfR41e1S[H&%2%#^_Y5i/KBK`HBDQ:\!Z."<X.q#u4"J0'[W(/g[ss)]NZM,dt7:_21mVk:S((Culg9'*V,K''GK1FH,04FA4Rc?)C0t-],aQ`n=8S%%K5]\6;$[$qeb3Q"L-[@e.-1^J%6%,D5qI0a23]SngALl7UI>-K5=+>jnaq9^`m-,@[jRK9(Ji&f3iQpjlr5KS/GSr`8RiU+dkm:%@jLL#9TMu!SMTm4JKEZd991#f(`T(cc(N'T>1O7F:\BH][J=if],u-,[B5s[:CY<>]?9.p)\"F1:N,tI3eSQUM55dj,_)ip:/u)-%=lEY?0a:!Xaqc[Q*l%!b>&m,OkT'!:U+`S;P]d'$k)O%&(;?'m>/2uN]i581,l-D2%I4\8bCQLt;mN09o2Q(?2W&88D7,6P!8-k+%cQK2HBm<]?fiD-ne:I];'(9f@BD8kkVbAl8_9fCE+I')V'T[_]30E<Cs,,X]eQFS6d1q3aVT"0RH"BD,EBZ5#)T+U:(]]e0DU_rN%B%,+\\O!fC(4E:8pahp@A743&''82'16!Vb0tm1m"//@;B[CF3/O*E9UDYg4&%ClOBQo3]l@_b$l<9q`0UE^&j1'[D^j`E5:r>uA%'>L.9\.ES\M;6GU`SD'mWR8X;"HFEAi_5>/H*"7D9&RY3_Krfcni7'E1Du@(!OS+QDa8)kVV`Pd#[4i^(c1h^jGdKgmLG2$G)`!&%i0p-dE*e&HP8t7U%Vj)41OHX<=0aYAmT.Th=aKc79%IhG'nNL$qghK(a0?OU;b:<76,?FIDecS468a]ZS>BJ;9.7fFO]CAm#LjgH%E1HXBft$1T\PIaX/Q]UfB"&O"[SWmBRN(pl?i0RGV"Y't\5L8#1"K7U/:tjh)?R.>rHjGB/->^^J)B?H;X:Prc&K';=>>?d`d)^(%AdphX#b9uhFdd]`!=ll/270fG0OPLII.@p$:pu)R5^:*\jo\K2+8_Td"@A\mQ<U96+&b*oW>fP&qk"DgQ?;@nWB-s.X)AP#r&Ro]%Jq@uFbNpRk/EaIl?>CL?V3d5Jbp=7Io$2ZZC8%":eC:m?k/tYd3Whq`'&iB8:G7?/MO,A*,DI=X@HW;b52"@<4k^'R:-7&CidIKd%dkVM@>]OkMUPX-\[RFTTVM/T.>cup+YSDiDMIV\dgWR)D+e+U)Rr9<fYS<JDA8b302W&6q6F3+g9@P%V(Wt!/<IO;p'421n^6skb%49kH6//Oqdra#,tZItXI`S=Ma<GWX[<\5ic4T>$'d"Q9dk`gsu?e3TW=4#?=GPo10D@rkVK$L/qE2=I6q[,C\mZ-2Vd$Z%W/*L*R%pY-TIq[,CGh&X83Tef-;<7%%7$SGdRB4!qp=*T4%6YBal8)=i_L)N,M$9DX'eke`S</,Z%S\]r$fT9oJp1Cqe`G?'tFX>D\MBj&p%]g.h2`pL*pX*Q4#MM\EnXLPV1\YAhI/Wp4=1;0#99C4%7?K6C8kVm=Zc6kuENP8H#,hmQ<aCS9Yk%[,P:7A9D(BEU)&'K+q*lf>:%=V$kfT=noaQ6GP<^.d%FUkQr]Vp(D88_,2/C*f3Fd@<:(o3+#p*Lc=7Fss#pYRJ%D[t9u:I+8t\`b&L$&ZtXW22A@5flW?Xp\:;:%h=NcP="6l`A,ZB[1WEP`k)f*'\4BV"D1-jl$P#R/!b6%)K4k?!a"RW^/_4R6qo51Xl*k%@[,N<_'4I:Y?<S_cicD$N],:1/n*L.M%hAit#\h#QNjdabF@XH<b`[s9/o>MnrAskVH:H,@NPLP[K<@r$X1U5Ge<MsG=g$G`SP]9QiIqND0X5ePt47%NB]?dWl>i&]W]QWsp%i2qj!/;mokPSS!hn27g@n/'\'-(<EFkI_&VI3"rT-bi%iT-8itMD3,`dh.s7J^"gjF_=r6?WaX:#+.ckc#Of1?G0HlA#B/%=6jDV%G9#'ZId%4eFW6l8Nm)ln]g(Z%QT]@Ag>+X9K,O9HNqIFN+;Or..NDs[,FRB#j6Zb)EZ=AEq.-O6Dg(>*::C;/mI]NV7h>o(cJd;%%Cn*(m7a+NeQ5lTPPnBLQa0NY.EOmo;fMn]Xc7`9T6ZFF&2]Z&+_p3>>%OGD&a=9,dfZG;79T2uV0@PuMgG%)OP/25mQ+!p"eA=.A%/<eqqY)'B)0p_CN^5ePKnLBk@rA!6Zp3QLEgd/;.T.JDP"qbgu>e-hmF!QU^0?;B,1=AZOFsNJHPFWGpiR:[B)9^k#8CVYt)')<F%N6M9;n_G3fP-g7.bhtn6aK3$I/[:QOCq7g3a>LV2@Dg351,:-3+.W7T#8)&0)6iIrB!8U@);6`!12=5Tao'a.)(\-2h&a4*Om6&@%[n9-0OQX[\4EomI:;o6/)g0$N9!YL''!Xl<H$lW9Q;.+5]5a-4QeKDrV.&pr%NCej"r`?9gWY\#*bMCIcDgcf=c_H7mLd#Gr66QK%C0s^fh]0(8?(Jsc"[f\j@pRo*RqB&?+4et&CcQK:=1;!m@Tk5I]Kl[Yl`=Gk[4lraDeZ[\%s6lmEN:-cEtAP.TsK\beliSsS*+-_%4kqg]+'ZE":7"sW.cT#b&%B[ke`H,UbkLe4],pD7eUh[^)1#OeK)`P+:1'(+.cT#b&#\PuZk[Sq>]X,JLU2G&^cLf?4Jij5VDS?(%e\`870rnlVg>-EOQ1\hK*.%!u:F(HG<?@(4V2IL!!6faXB8PI/]>BPc'eB/bV-DP5+e@TI\Yt7)=Q(QFoYL,keAubJlemeGghbUF%n#4Y#hZ7Or:7tmr1etsRT7^G01p$[*gG@2uD:N1i%0g8n'iCD`leZNj_Ude=+#c!rj)/Z'Nd8:IS2Xbt]=#JSA8iQ-""%tl9gegA%Q,*4o1qYV<_A1sN6f9q(LE#-JA\$(^DW)<d:2cUWbt9L)CP3`]ls[hJqN-$2J@\G2CjbVH^u3GPqfPr8hQO70omRnrWIKBJ;N]+?%7+P7u$?4QmO\4oXet@MTRWVT*!Z[Q1JMsW:e)us7K%R^mFm2UiTH;0"1gkTuXCiFi9&Y_TCtWPDGGT8[qT1ocptJ]V"ciOO9&Wgm%>O"62VM`Gp>l!\`3;O,Z#?sjuqbfCj<l%5$l&)<V`r)49D0KAPD%tIY)rVegntU2W`3O<7fD/naY81I?Kk^nYa12%WRSe0h5Xo-;%(V+3\50Tel-,Zc8/s%IfMqD8ciRki7(KGb)dc;!'k#gE?(GFg\^7Da>lEd7kGu.f?&p^g=#sR/Wkgs#V4<+4<#Q@UANs^C.m@Nb9%^2W31hA<nQ^%(lGiO;S"\(_JBq!A\uQ@4nE[hKX*ps-tCBRfZV-(/>7oYk\Kb5s@[*W%V3Bt:=G4.GYSNO4J=lAOI"Xf^o-Mj)nI%J*\ZO2T44',uScb[KY+OVQMIbZ,5qZY1V!cZ:9_,C+Di7[9.1oR2f;n)>mrB!d7SVefZga]AZW9Ak:U#I)Z!=YuM+_UKt.Z#A8mX%'46dd.d[)jZ+H;:d\[K%)OEBMWgq-(EO';pi:No8cY!%)U6a.B[d32J[QXd(UP]^C63n^k==rCB@i0XcFr-X2ANTCFeWq-jq`Yf-%-hFfcD7M4kH,1)(',R5L#BZleTglL!WgpQR)EcZqm/^?5db=YRN9\Q^4_$k5a^WL]P;TU/a/WhQWb1:_.r1k!cY.<"jepcrB!idn%ackf08CG1M`AtQkI$1#S/DT@4`d7EURX(7sqV3)8B1A%U(2ie4jQucA5PNFeYS"AC1N![]fq7Vol&OqcBLp"SXF>Vgqt\*OlcDAo%LsfluQTK`C.au"U2;OF@Qkc[d9O.<AH#rsgX6H_`jRlR&RH4S%q6I/<3]"g+q8u4*C-&\+]Q'kJn#P]sC?Z/q+'V)iSJ`i"]:bLi%VH_auY>e5/^@o/+C-([GO`a^RRFT_GmHn&jRa*J9DRm5hj_?i_=utj@.P+duBBJ!jmo*D"24[l%h87q/IpGdH+_fo[`p9\&1NQ;#%RGKf#e!Z2fmY%RI<7@8cd[?^Vr0qF^1Jf.m\uY)NE:!>LFCqq&^ZUuhRVk]WX]S;1;.I#rC:XQKXi-@Y[p2E\SK7d5V:/Q-2-&+n%Xd1B,db:_cCnfN=<mt3SN3'FUcGmT"Z'rrf2nn-`3\tBPEt[)+9kWTWR[hFmqZ&<72$AI#q-rY=&@4Kpdc38l\[=&;Ea*mkbN:@%%(V`,::.(2HGO`<:lHJ<f[jl.7-c_Ef:&1T*M:IHt9KsO,\2t9V4,;Bhp$=r.6BYjC\rJ&je)_>UTj<YRjDo0!Zf.,8l*D]T`eLGa%$7`A5T9mKP8o3V'A,;#F`#'(<DR4MMRIg2Z*-CA<B$Ge>KZAM\p_V!+R@Gn=GgP:;>r*IAB6A[";^'s8hO\RHk\e?LWB"8];eBjh%Pa4;kc6f<b*d"kp7=p7Qo#gjP0=,eFbah,gS#aLQYR?roI<P4RX4&rW=c?/.Zpb;4[Y@tW;ce<#FRj-D=eEJ"\_VUG/Y=`Z#t%t.%@Nh<>]t]lA&o6^42fZ@206F?hF16u7\W_"ZaY$BA$7lD(=Gc3Skk+=uZ7pEgRf?ArQb47E#Yd?jLY_BQ,!Q%<G!hDWs'Nqdn9aEA%B3&A1(.*-7AQ:_@Y61,bG[/'fk%n,BSQuNa[kj+4Z)D3b<sh%@Z;Y.('\7:4B0[:ACVQ[\6=K8JjKOq\Q<Q.p.j+n7jU8UJqtcJ!%NI)D1D3lP!DhaRZZp*s/Fq=9%ifYp#Ze@]^&W'`ZTjHA3Z<Ch^mJ9R3]Ns\,L:8cB)-kDa]@$0S<A-a3jP[FQ]+Y=)mB4`Gi;ER+%!>Ngt:TL@Jdci\!l(b'9p8Yt4EEUB@EeP<WYJk2]f3B(H3+UsjlT*o6Z)h^Z>+]cCr41@YS8`+Iq=s8iBK4u=G:2L_XXA-O.;pdc%g_o!i[ON9oI=#/pi`%#*q?_?]kIi?XghCBG1)hf)]=46\rqrjoYfj1]ABD\lI`#/;/<,g_$>]Hs?_<KV.j$)7QZ'F8I'e6'Nna;5%&ND:RZS_-,\6hm;mCh1B-du2A)3.F>]3,^Z)&J5-p4^aK9-0Ft:-uNA\mr%V#)f<qm1#H++sq\-pJPQr[O!pEQ:4KcMRbBM@\%=<%*Y)d#[Zc,3(1g0$qk#LL$b?Z!d>-ETFtkLQ*5_AV)7qOD=2%Cp04J,+^m!4\D(P'pNZjL;dC3[f@JLhnQ>sm/?:2c[riJo_C0XCB%S[m:d;H;XX1ak70dOhrS:1^8i5Lu:+mC5XdL$<+1N1ud[f@JINePs`e0]f6#HI=Q/Bm-rCS,7CW=j52^K?:I%H?QH2"d7Y3KZBNa%e3'Z>d6[&6BSoS,KDK[FM9iWk'"sLa,M)QGn>#4;qa0]6#o<6"8TeAs;9s).K=>\?:]@4A9q+h%s$Sq5FerfoNHdXbc!BPZ@GA5l%LRZNFUXhkYTgJ[pGiB^j0^Kc;ldPNiO&'r>gjS^Y83*r%I\W)]_`;Q2a]mL,BufW][aL->.BV[Z<&niF8u_qLf)?]fC^lW#)X?:5%ejXi!hYjrZo,GmBEh$k2+0BRr*lMEfMXZSdL32=,_Vf.V)JLf$IV4LZ7g`cjXbuVBqK(PQAU*kg9;Id9m=ERrWNZ(0BkV^6!Epqm%#U&$cJI%R63Wn4%>I8aJ%u0fF8:>&qoB3OXE8_'WodS(TCaQDTk)Wnh3a"p!0MkKAZK"]M:TP:o@d%'7Rl%8PaetN:h)K+aRk#=k%M.S1`lO8WpWH_HJX"6gt?/Mh:\[BSkYXt?G]fG!3&llp=&/8skejUqM\`.(6Q0$A,@^4(=>H;QI^ig1'e`p.K%QcLidR<K:*O*M2%>0HXNcf>`4*;?8@Xh(jkV5;BPpInq/2qtLT+'U#5DP,K8,k5V\b$p`4kuld\X&i@L0>i1>RcTo<3&@DBr9J#jI/_1UbhdtpS(n'#%msK$0E9JJGY-)?$k:tu#V8bM[<g?a2Ip_PS]4C<s^"/tdn.uC*H1*.^!P3PNWT/h]Y3X&sU6_hH/hL0#1&[s]IW95&(&r9:F*AP"%.BY0jDC%1L)J8)2Dp/MK]^3dW^SOq2"dl.4o=IcN.3(-S<PGeLj0:AZ"QL-oLbTOG=aFu/(QoZ^ZWR/h#N&\MpDb_kA(=cF4U2??%.JDjbBDnD((Z)Z^Ueg#OI>pJ"Cal#`hqOH;;GYE3'[Z)8@oq\\em>Zra$Lfu_D#tL<gnACNi2(l<7fh)F,Et`iL"+,O8D\@X^&$Q%0urm-QJn3*6/"Z9YbcO\QF#-m<WUp#LRK,HkP((j<<9[OV6+p=]<23W>6ChINingHG,t`:r2L+ND%3/Yn#0J2bMJb)!0p7H8l^CZ%CB30lfiYPt71Gp12O3]0"mEB!d,Y.#'qj;"5e:9ICHfgT4-\(1M/6reP`PIulhE\l.%_ien/jcWcgjK4[3!J'X2ie7-m-S&]/p&^%(PhQq]Y=F(TmVluAZb&j55Xq%Is!03L*Vp^O=]R5Oj`8h)SA9j7_/@orI4?U..+Qo/+80rl<HR.!9%IJmtS,.e^+23>PiL?h!S,;%h78!'Wk70')p7_V5PqOD0bRjd>X/*ar=&.L>5;Df)bDC5L%?geh43eDY7tq7e2knJ1[cqXe^#S?j>Oe$kPEkmUrR==fATt!qlVC2%=8qbq5?;p9L(cggcLnO4ONra^i`n_(0J/g[[o.Y915C>jT@^LuES9n-c'[gTO0Ho=*U!9%mD#?mqQ6G@bsbggjVt-<ch4UTFUbsU%=$G53cY^^.cmt^RB+MuX4MKq&os95_EgM?$H*3c&'[N5nos8"%;(GOoGHRR`eQb)aO.OYdqfD_#BkVgmTDgu!X.S]j^D+e)H%(+C%TDba<RT]HeF8bGa>a*6<%HmT@TB`=RE<#K65Pp-eX'3n^ch0*M7'E-GpZqGG>ceLJ303O[Dt/q8j'0F3IeHOLlY6obF8bHlL_k6h%Y'@+APp]@'oil[qr/0\6RFS_`<t^"4Y+NBhYJ`*/4P.o.]pYG1q:fuh(q7asZ+U![I&h)30KY?apX@K6Wo%a?j)Z;8>JIj[nQ`i*%NoF9A86s9HIe'oIMc9T$+'Zd:@eQ_r/Q7qC\sm2oYuT-C1Sma$W`O[cPQ"h%Q#h@HSa0o!"nsFJj'4fq-cl73I(uYt<OCl)\UOB4%j/$L^(/FNIqo@9,Y+H3I_Pr!E)0hM2qUo]RdTWn_T'L%(d7MH?rpj;Y"31gY]@D8egseH#ch1KgDlMoeRreO5`Ke2%fC-NK<50/k%&"9*UBC?\sggA+4IeJeq`Cf.<kPEk8j@@pjhk05T3ba&CT>huMe[^-p5rd&IYN9"R7uj_5>ecBfWIC_p[4@d5B5\d6X#QG1f?_`%%82KPIlHOr<ZglFR]3tIJ;pBZc]!qL&Rb1VVj_`jd3nnSc2j>oZUhMC'R-)2hU\Ds;3ph&=YL$+h"B$S>PX%)bL1QdF%$^\BRoGtQ%%^(."Ik`i3S-XN9r[,@#YYcR'Yb(,.e@9<iI/Z@(D'(*VHonN%T>'OgQOqk4prS3sHe4=P7dk]B<NBI]Y5/mTF5lFaKbHti3`ir9%7C`3aq&<BWF?b:c(ObP3]/`OF\AiOWNk:j2G.B\Pf&uI-pZL=[j=\52Kl;V!95ER>H[U>+Ec9Qd)>B_If\t]5!`tT-U`,^rs,?Xu%F+/?mRD3;8e"+]@3X"%jXR+a4p`mJtdDaLYY$8PcH2@$tDYkM.\$CAZP5k*MG-_)BmGHR;`QeRTrO2_cRG5GhI6CO:];u^n2\1t5%kO2qPB\Ajt2B%$^9Bs=#b7W,EMj[ms>Y';-FG^6uF^Ls:R+*)V.A%iP03KtZT*/cMJ%56iCN)$hO+]WES%^5%&"u=!VoX^kdh4$O%gF$7nid<H9Hqh)SEn)Pt48>e0p9Wr.>YKP:@85_r=1ueiO[K,XfS(#G3$hKfIC=9M()X"G<__1Fl_ERZCtfaWS0r`IfZkL<f,f<@%Hs;kPbSLa)Mg4p5(V8<[a0OH@]Q*.n#`4QpI.hO?g\ofYSi2)(Z:p0teD9X+lHLo0\'4<+Hd*Cg]m;3seU8)d3$,h:NLse@qotK=%Is`6O\%<^peoS+bN@9'5Z'?9P3%bc%OZu\l#39]0dOmY%'VrclG'AC%ph*.s1EVG2T6O*T]hhMI+@$=YWpT8I*#D6gF2D<aT*hLj%pFi0CAiZ:+K1o+TU$]\4IRnOT\Q.K62c,PUPU#IqGj4JdO?IY);f@3Toc^OY(VFeK'aDn>k@1jt?1jX%F0,kGYIULfL0M\qi-0D^%9\H$L^tB.9?`%1O\8fcW58/g]55=`TW5=!./g=O6_q8K9Hu,c-gD<hC=jX&=/1@;%(u!/k(hT)O`:1X9[fl%M*LtdDF!>dNo::E0%)o2Ht_C"+K!J9NcM`oWk[_+CImo^WsoM_OuCDOAM+2aXRYu"/DBiHEb(8sB$B`hEP]e\nXcS:^\Si).uc&K>haL!FJ(d,oHjg$bK%\0Ej\`uXth9'Fe-c_S%$5"m9hT8S8qj5YBgs0aA7f4-V9FM4XgYLZ,F=VM(;Aqog<D+k`BecWt%lGl3cp<6I-2qE;7+68IB,F#H6%1I8am[n`*:OGEQ,RQufC!tKfE`8mi2T/lW4<L(!.f['DF9[.c/U#,;6j0-28S+mbH5)m=LrV/rkoTlqe>r)Y`eZ'KU$eVHscnMD3%'K&h)D^Y="89IZ%B7+-jArNY[`jW/4!BFlq6QgUI!oMR"Aipq'RpEl^U71R7l$.qrMBa5VL\K=Gkq4HP-n:2V4jHupIcFid8%Z&2%iAY699&qu8H=K1`7\=E4E(f,(3Jq_$"-)!m,:Ip!.5>G+JcYhf";3L>/=cj2+W8'l!N'u^OB4;5Soc3m='n&8KOd8O&##RVN=[!o%NUFh:-\W-;NQ%hslf>eWV>eJ2j<ImLT1fQ`#Kbn#hkO60Lr/B)*nH2l*8`QB&K-tD7He)QN)8WAZ[_r6?6X!4]Kmb6HPPPpZ$>3%%),"f7k"_>f/g'3_c>0=EkCu1jbB3pH*d@0\&*(,=\=L+'e[l&D$&l\6G;;6D"JijJkp\[m[k]i<O#QXVl*E#J[AP,h%U=O8g+<%5%V<q-437XmTZC8']!K$WhC6n<^]^dm2'0`ZFpQGX$n4hCp+o/R_[uYU\q"nsnLb)6h8!sLOOnrBIUAN,-+pKXIP?N6m+AHZ"Ft8JA%%I0"q?#1=FRYE5iI=8I=45\i>oATVfOkS&;iZgI[E"qs"C\9oI:LEqm%`YadBpR>0O02NQE&8Ct=\Z"'+,O=k7kbe<C]&&22u#N7%,pXfVa!=83Z/+/,`e0%RLOAkEEb$5JlK01IbA#n/#W".=_:Z46Fu9@\';:*+4$S=88!qQ]Km5;BIl<5'[1QbTgUC0OD^Gt#-rQ5'%df%33p-2-cIsnb5S'A`#&=&3XCl`MnjKB<g-+;,-a-QK9C.7gj.Kgi;d]2cThrCp//sL#84Bt*APd6J\)!CZ(;4^f+GjXEPK6Zd@%3-8;b[YosRTrUM8>2qZ4diCQ_2Lf"h^Rm`]3TGHXC_o&:ZfC"\r9\apaH^GQ9nK#ihi>_7MFG6gZ*R<4@*mRb)Z+BLN!YG"+9%3u%mJ3_E2^*@qa:t:KkJo9A:*T4#e9;7pHB^<nTJSNTM<[O2GPT#nR-O3GfVED<fq`?s)#SMg59j]a.@d#-H0OJ+"PMH.q5!>tee/l3%Fs9pE!tU%Pna0B'8@Fd#GE:X`H.VXD"Od!kjHcDlqCB&hp")Rj:;kFa65^U16M$Kj0[Dc''7VD*g?XCW)6`.7pi$I$Kqu[:!8>^%%F'pk^o%]6=IID2G?mh"rk^<0lqQkSHlLs%]-1TU0Ks0<=$h<u.dCGrdQ?a<*%k<\p%OJL-;Y/13Eq?UZl\3M>FO#MhGp&c.WVGa2%/C@(5W8LJH4$M#W$))[4!b'cc!Cr@EdH(k%@9MVUkK?=]\Be/?@LeH=nqBB=I2-$<(MBUkr!mNPkJ'W:lc43A_O2.p-2B-*ee3:t%IkJaAL!rue,`X^Rk>!XjUJ#`-4Y+e1#1dZ&ptF'^$'5tX!R.D#GbsW)rTAPF=a">tC&#$-n"7en[sn:p]_:aENWgf<Xq1:PJ,4h:%D?rPd-bn!:,NF[3>;Ugo5oL_6:9h[F`r'`PmHL[7&De@K2r;NW-7!"L^?)Gc!D\RTi1R_PT@Q.KnKU;nUg4S67J#$K5Ep6c,c?k^%:)3K#nZ?:XO2$0CmGL_Ss0+8Hm'h+??*Xr:32J-lUj9W.BI24.O_^FNl1l2!nEr4:R("\tU5=2>%c`//BA`D]r'W?Sa>MlSj+-7V%Vmj6]%q7"9q05Ira8f*_d0Lk7r(I-9r!;;:Jrj&KJ0uUP5r2p.gJ0jj-tP)L"-Lgn#P\8)pYOY)h-@_a(&/h(_;Mo,[Mlj3"p,)6%LP4LmBuG[$`]<KPhmIs&P%Ki`Cpj`3][+Jj7\%0SR[QZ<rAQ%=6I/Q(^&3(7dGCI"0i($JC0!6BH#Njd2I:$s$?8WC]`.iG(EtnS%DY`k,b:iPNPEi7p4<lCALDNUAQQH/YE22$_<u9=ONTYKRd<UCa1uN=.]^T+MrI+]90_Amu<$?_;n-pG_s0KEWObsZN+$N/UUA8<h%eZ!mkI"c[o]et,!eVD72S7A2S)&nre+!7+E=CC@o]_Dt&MYfVqS<#VQa"4`:72@GET7;Dpi7??a4PB>7]Fd;=_T'W5b(M.4#qP1&%5JBKfn0$&/eKPC<m'Xt=HhjSY`KUZ^0AX`*+^@_[EK_aO*f6M"O"AAH3\Tad5GlkYFm0ZQ_MtIWPCMD\U)_fY5CZS1&9i?TVCXEn%FZ?Lc11B@k%ssRo1U'c#L<oc;.nY-q8>g+DdWeS#+rYh^!NGL:5m5-3mU%44XUf']GtQ[iNoGdEOF%7`>.Lhm&9i*s2k\]h@#c8Q%NHhYh8>.L9bUr05@]sf4V%&>f._RKjWniT=<.7[EZt$KL=Y:4rK.N9o!9Dc5^W*!!Q-tDbHeImB5H31ki,ZC&f=5qrm5l#e>R:t<%&rT`5Z)QObjmq?+;TpX-\QnQd'Dlot>Un9`NU9ehT^KEIa-O71WNDerP-t,5]>-@")+1T:NYP#8mGIVc3G4]P/n<?Gdj6VVdoP'M%a/3PIp3/li1!Ie-@oL"UAaD[aN[SC1H^1k8D4%=nSj0ROjJO9?I!h6<=I),@6#DE@nhQQT4`b(^)tn4GW(5\l-^J>S4A:T6Q9Fft%)Qr2>pW*@cI.PsZo`PcIkS5?)%Z@5+rO)@^S*%uXLSsULYH5H>QS73FqV^9,jep]XCObcb4EomVo?r]qeadqA5P)'"0$U#32]p;:%]QWDtI_dX7M``h&#'N*:J7h,9IJ%m`JQLc<eoLND5LTYi[47Q9R&^a!2DIbH(W_Nds."a]0sNocQ1k753L%I[Ts1`<g@4>@MM@;3%Nmnp+G<"9tg<<U(<(uRuAAh8(5L)JVZOq^t)(612I'XSUI4j?"Y*L*gQq)!fp#Vjt]'T;OP;?l2SF1[]iSQEM_12!&%@6.%0f0H-%..G-HK1>-$qpV$5(R$_;m#<.B?L;UerV5s3Kb48CL(hUs=VrRtF6"JI+r#(C?+p!UO1E]2@M"fC>UK9)>:Ci_]1Zefs(o,O5Otq_%H4k-g=a>AcWd2=Z;DjE6.c6e(%\.-FkCJ?UZF9bqom><`lEu>$+[?DO.meL)_]].M?j<bd-WDo*!)ZS:"7YDgDV5e[j!52k/H5Xm%/%p/@f;n@a0<$n6meEu_5?kJdHAKY'3HJp1]"YGXAc,'2ma;D@p=-Xtn*TB$p3']`\c0X;%JB\SHe0E*)tW(eE'4L`l\"s-m"OA=%M"ls&J#(cpdOj4-f?6*N[Tmp4_&&'l<(j-8V=1OWcW71i5?\$H\!*q>Z1O^Nm65fmSdF`NrcA(IC,YI=+2$b)f?B0Kp-qAnK6-bY%0>$BjaJrCR['UB^F*X:5a:In!`jOD;^?pC"R\f`NH+gPgFrS4O%:3>ff:Tacp@S/bGLlfha'HXpG2j!t?J-QY\M'0a*NL=dekqk7%)3f%/;U#pO`4=rMCcn=r5Oq8-RK%l:/uu\VM$r3D]<JVg6*DlA267.DHOs6?_Q(K7J'Gu/f9@ouk9_@m+JH->c;%Qs#S8dgY:eZO%e8NZ/?&*[n*`hd5:^.Epqe#A]fsj!5OFal#"%,-sZ]KX<I5qD5;.*PZ>C6XJcV$G(gE0m(&XDdWjjp/mo:D&2:q`=*]W&E<YM['B%a^4f4X0;'Nh-(L"+T<_UO8.\sPE#G<iT4YDk0mmK9(')G="\sue$kXWM#=)0$[kd_>*jBQhRMfU^Usk-6>,uahuC8Y'reTBI^E=*%B6*-\^jjVKg9W;7On,j.-jog[gMRWk#U+dUAn?(I6<D)#\u@!!9A]FYs)GWXn&(gIpVRN,g">,n"f%Y($8"jtK2G"!*LZVjIWc>&%D#,tip<"T1nk#nNYNsBGd-)gU$:.l,hM+1MT24K=.\@Iu6=GGal'oERFD%8T?2`/Pm$729arg)GX:Ek,`p;S!Zqo99cMSu+^$MS&%I_=e6pm,irY2Ab<r6j[Z1ff.AUg3?cYA74P#^(3i\WX@WoD%!M2+8Rad=onX]h#DD96ldY@IGeUpFCR_bTBJX%")72IR!O8Y?6Jq%]tX1%o(o8b[kFr"J$BZ5/H0Af*`*:c@S#X`fVcqFKMY<Dia8HXfP9!X?heU$0j5L5jC>4?KKD$:5G^>,T:_gdj3Ug=2L=J_CQCDl%h43Br?h_DHT*6$;D-U8trd!PPip0+s;R6ZSfUGZ;5-aEN?Nr^`rm@cYl-]3P)3P:hWR%<X)r+o/4;dEPgj!'YJ"XNN<nEX_')-U*%@KV,gGBr?=abN\;<pC9I=Ud_HQl2Ij@U(!EU9E*fId,fIr@4)Hp]i:fK9*tZT4;L/es1b[65/Me%-lX]$u(+:]c2t_O*?([9c-uA%=bat^`"Ft7(Ae%.*7"@"#YfQu^JFXCK=<LDbTrLP?crJd8Gh_Bd>sd2p9)C.2fF+'@CUXrEm1%8D)TZ-]kiN3H2gT'^0n.9rc$Q>%ecO?K&V<,lp"Qn+(O>q?)OJi^l5H=if,rmLhuEAp(("D%[YrQ&U&DsU"8[9"b.lj+*J%FaU+(WKK%6nbRXtpnIp1`Tr)t\^+#eZ.%D(O5?(G*M/8H3UA1(l&DmF*Qm@pR'VduQ9E0<>q/6Q0!`ZQgK9NlVB7CZA3XmpgA#W7J0R)hoYS:]tI_EcP]N&SG3QQt'[ub1a.t%\B?9ekZ;,0n.agIlUR9_dVLB`M`8tPK;$?nN(b"n*N<Q-!67t\6Zn('/uXlb(hZj-i:e/XLJ!bkn/g^jKmQB*YJZ#r`mNocpE-$Z%X(NMmNm0;oQY2YE*uqq1nE@M4+*3CP2pZET^8u6X52S`X]XIh&`G6:_cD@"_V^^7:]=Sd_%_c.rP\'iR4(6>50dM4tTY>pKpp,1M%Cc>b/e(?1?CR<_G\pdC14q`9"+n'c$gEVh#&^jsqqCKB^Dsp:3<YRLlUkKV_2kQX(cT>3;"UY'QW2f=n"OS,bfCg$m^g-5!CC*%V%r*OmAHo8$W^s#-b!JE<M3.1pRh*HI/N1Ro1inEE_&7>Hn)j8p\op*Fu!N`Iu'g!>Gr6Zu!Fg56hpn:eDn7<#7%6#>W^(s%#Z:Wi*%<B5mtr#,Rb9!J^'$QKs(/r&LLXf9.@UIkfuRrP87)MM5Jd_?a00^_Dk;]"?VY'_Uo`tWZ,2OE1!33bQITZUPsE_`8,l#ns@If=&_%7f0B]lL_CN9CL`jK#!DTXOBZ[7F*RP5E>_PfD/fsMQSb#1%%0=9%V1[^=7FWQ*)pE_i-7qNHLdhm")doGU?tR6[/A7O`X+W3\e[R%oDC(DVm#uCkP8,hcFJY'o;&Nf+(Nn?p*Ii+o;cu(EBL[BKfhoXH#7j+oUSLU`qn"@L)D"T*k;5TfsC^[G!A^3(-c+)):#abq0q"L%:=juuRVDZFj@e'VqUER@J'KX)oq9@]Itfk,s&J^DarR>YCdJR.4^Up%n(P%s;`NMJ<hl;eRk8MX@oTOA>D)AKhf"1U;m'`B!frO@%bl.dR8P<74IuX9iqUMpmU$hg"a^'=$/8;e(]_=,I^>*4T'O)EZ7/Ea_;na**2@Zp!C@g4d_nBO50m'(2W%Y;?\Ip>*2]<Y:/$)dF%MR=Qhm:<ENTW-Lomf##'B3RXR[O??D+/YHN1aT36RqVoOVuC^IpbWhS=R#c>b*A%)c7V";$JT(`pC4KM(Y>=0iMGH1eqJ^`LKYEr%kok(,Wr6Fu+JZ9rfR!EX7*%T\Y3S3Vjh&g]kCOE93oM(RrT9ZM:-[Mpl`8tj5bd\XK6NlN@scE]O4JG[q!geO"f'`9Z$2b<9qHek%qG:I1fOZ9hcQdP&C<s&(DW-M;:S7K^>pnE<oYnr8Oh8oKs5b@'oO5>V\[(gsY3UK1c[i[QE;,R_4MOM?$%6BE0-5>hl!+/3o?W`q%dsI_@UYn-/pR`X-jd9OpAH/'@58?=p55.3Fs7s\_mQVR(Ps+>[rT>8p%c2]XEUoft7&K66k=0gFl2/fRb'gPpo\X5U#=YJ-)i1C/%_PD1as1J?n'@><O<2H[.1$ZaZXF;nKBrd-bAD\[[=J/j0!T!!T]u5#&0bfn`"c+XT13F;MQZ6&T0t(/J%^oQPr:Bj/hsOZ15@rs(%R1%IrkjI-%_X)E;?<-AQ+[&Yo8pbh;33;IHj!cQV`Kr2_5"?ppC@g]XWAiG$5'lnRe\D"MHLTiSaGcJWX3Y/Qm/QE7RQpcAG;F_p%p!:m!-6DhGBqsL9g^8o@Iu:5pV6`B\p@$8h(;AFnj613\U%UYZ"^!A-qSpi@M-jc"mf,,XHo8L<[:-pEn(Es7-G6S*0]?[^$9SsE%j"L,bQTp7-lU+?r1!&YIh^eQCjNKLQo[?CL=D(a-1.sR73iL(B5'^jVhE:gcYD4Wb#6/r=;q\,t"M;>WHes5TRe+7HJ>*:_[pM=K%6QjN6jJHI<]r$IB??pnBfDXOM^._Y4-_i?Rp`W%dpM;'PFN5)t7,CDg4]&e-N4#6(@WkPKKmVlDZ/2u@m9``[d?N+RqP`<>^QrNO%iSeaAGF-n-P)/)6(ra-K?^58,U1J9X`;)bi6pTJ6ir%l"4g)h&28`R3)[<@?S?"qI2`+H;(1@eaV'Sf6EYu/#h*9_Dr]Tn=Lc0dk%nQ7>+81]2HI*2!2R2Zs_Q!XL42mRY>9+]IKH1VZ1G;rb)n+ipefQV8*kJ5/QLY(2IY?nh^-(\@_\@&=7LY&:5&_!jV_=7<n^TZE,%_s89W4kKhdoYYHL\N6#[W]c-hEGr^Y"70)2%bYVaIIX:tB7XgDiO)du3r/p.T#5?"L-!faq`r&7s'8)!f]q;HrWDKh%BhJjrkJX&%!tDHK*"ao:f=CCRS*\gXMNt50lo5m#>/pEb4GoelQ9%A4=g!fc4m5lDkI$#Me+TD"9AY:f[5d=J1\NJsKA0o&5O7tskWqZ;)-XQq%oq-GX>D9JCLY"/p_NHK;QUCcZn^lLLIIk@C6R@[E$l:P7<Nj'(L$pc</3t-@pO4Z?s"^gj6\\4O(?Q/Oa'T+;\8h>\AG,CM=3mt(%keXG&ouMYn-t>bSWqoW/EObK10HnIA$93bT`C#>!:Y1@dH&qQ`6d0t,lFIM@I'u"pMc[4EG<&&.<O%_SS"=L'HU5?t2_**,.:+3W%a$)$s;`LDX?P1c6I9Qp.>.HO[b:pD%[LF):]ET;h2YH@A?(K6O\`\G7&^HB<66"CR_.i;+Jnp_NPkZdP<]@Vc.t0a*'m:jm[W!kJ%'pON6_FR#,F6_jEHf`/?HZcWoe"0e%*;*lhH\+8(bcB=W]7908^%c_oNE_(rD@\EFiq;QZ+-1X1>.+[89g5.##^`ubfe(EHCdGT-%:u=B[H]['Ja1H*tdiLXLB?pZ#Ts(7jm#Eac\_)TIcF5peI0_>>5@+2r(s^T:SgjCW]R"baK%[N8Brp$D!;#=p+Q%Zo#E`3m2[\M[%gYKpDb)8n3Bst+H?&F!H<j03LBV)s[IZ,pF!GmL*`IOP#*c1>`L#&e^Dar%L$,Yu\MsC1$:R%Iog`41F>/U*T]c#cOqiWSE]&tHr%O-fM'O7SR1ZjcLFq#/2>f014OAUq&I6,s<;D]-3R"-42jDAf$p3rAl<kPN$,43DsNQZCjRf[66[$+Q;bgU(IEK9$`-.NHZ/edjKn%^m8YC(Nr!^1S]kj6E'dBInm>+CD5?0CZ&I">:8N[T2(Rb<IAlZ3h0]l#tI?i$<<THGZp0GA7>H]')hld:2YWs[RbY-QJj6seo/!,%bA_T+?JiM/f^$J.K?YUSe2$C"Wc5IN`)t2:[rC-/Lp<6hh2]0]gG"'!i!\e@/ORmjn#-8Ep`?bt`[j8:F*WY.5V\"](2@K4B2o!q%@sD%!b]e$p]gW8eV]R8.41%C!mc'b3oA)(@Th8EjJ8nVGo"OtYPn"[F:RsXo10\9[)$oha:%RArH/B<`H>p^5Ya]iEX*"sC@mB?u%O@)h;9DI*rI:L+m(dCTXXBMD9)a_mKWr[WA6a>0ONDeNB^HTF%7^#+jgAKaC=#kFnU<JObX.gW(#"JL<,+sZ"+4VRn.G+[kf,H[j%ioc.<>HWJMnbgQ.F!'U`SU](-8+5o=L)[LKL>,m,6?]HIZ(R]rIIc1NQOc!mcH!b+ID#JO5ic%n-i4!j;_1/MB`.k_Mhg-:*%mAs%&&>*ZY\4n`>i5&leM>u:i(\KD[111*1)/n$N/^a/D],.ZVj>/X[L=iAJ@.S.(l2J?p:MJ)>eG#1NZ(AG2iFHl)3&!?r#"Sp-,A!a%!`Ydr3&7R!"YtV<=G@:_%/""Brq(i0HN)F/pU@n\e4j7L^4iL)h]<h!l=Oc/n/F?RelV,m]'INSNkBp!Xn@+Uq#o"jI#n3UjqBG<%pbfD`cmJYc"KXX@Hd='-bE1$t7U(U.);JeecR6HHYm5VGh<["kGkXju:P8c@ZmuSU_=sj7Bp][n5MA^s5^:&lI"GuEK^^%+54Rpu%'IsXSR%NLSY<MA3T4lK-btHq9BVcm>i1:jPJEo*'*gAV&Xu&,&q^=aU4/[5bpNOCH6\6%WK]N4W0nI^Jc9(jaA$H`9_$mB8=oA6m%CZ,I+H[=P+k!?3M)fEhK(EDpL'YX?jr[R;]d:RZQfJ8rikI][e0`C;1rQRJkM?9N&)qhq,8.hl=qMi\EP]%sXAo[;R;@^(U]<!Ya%T9-AA-LZ&+A\#q[]/*l%)/]Sj1Z@oZhS4%'g6MQ5cb6r<:Ao2_GS"niq>8_.di4@V*r`f-\8s$GG.bP]3?IkL'DFiOBKS?MZS!a)%Gbb&Qo,gJCj@i[0>JpoK%X9m)37N-ugKr/AqhV;U^=LL0DZ;GM;rDr*7n+s\/T,sg1[lgIo=cSMZ#e7##>7"2]44BccaI37"CF@Y%']=q.=btuKTF%!H=Y#V/01%0d[1PO7YZGb$P93hDJ+UX4[gukAri,M,MKTY&(CBI'_YV/I<Zh%F=Yd-Er3^<KrBZ53LSLq7A9SCL%]Dcc6eH`?sq1\KsUT?Z'/PNeUE0Sn.'WWq,q?)8#;hmRPWt4__V'>hOlpAAFO&6m6-'$DC6r\8s<oPNE6l_9(*qe]%C*e>DT^,Wf%rG9!VYcR"LVuG];aW]1*!n%L-;2e@gc,M@E>%6QsC!H5g]:3LH_VXbk8TSP).$=JW?l&Wo-[n*@^XfT*c`]H7]F8rC#+q<C-Y>Sf%QH/S=rtaA.&EeDAUPj)E9JP](<U\m9NJnij]].\<eaR?2;Rr5B*Pkod+E-/oIsqIr`P+#nH2.Bc;%c'0k0)<FX,;u&!9tC_3YqU?%S-Mm^BdZQSLVuAEjRAX?XrTTSRSISRGklsR-%%.V$_R;gMMYRZIZU&j-YKSm0p2@'7hanYjC,Ncak9P#D!8i>:RB#M>'2p?lMZ'X%K;69`9+n9]].[2;/X]Q"q9E"[0#",9'qE!cjr0hb[<Y^;^%gu]q5\n?1*!]M9qENto!tgI]7:jQ^N<`J.sh@'k6EuUBCC5rfAF?W%B!;,Yj#53sb'Xha[@c'1T<W<O_(!*^Oe!p3=5WIlicI@*m<t1=q\l'MSXgM.HN1DQZab/'cbL;$4tATW;e>bS"QEb%$>3uFq9e?,%=k^8frYqdXV`cOIjrNc]7`3nUpZFb2S:cjE$Jhi9r::G5=nVgJfn2p^5#QB*\(7b>hS5Bq4b)f`rRBO8bNFYkdGWs+kAq#0/>+)1%q&FeXFD9imLJTNRn%X7Ad"K(Jd$KY_3dTWKQNQpOZd]HrWct,0/^0=f'rlJNTe3XnmmFF#n']8[ppr+])\%c*kO%N142!:RY<S(u%mNPI\K[KSbm9eJ<0iK5l:X!.;m$I53-2$$PK.AVqmd^XuBdUMBZKkUYp\I/'Bh!M@5EL!0Z_@(S'kWN5%cm^g!O"W0@T43E::h3/%[klrO<&hGc\Bd2EZ_[Q"iN\nq=K]FU=SLhFN!(:J@ZS]'@%#_CYlRVuG4!*\\qO[:"!#7rNUP*=E7=QH[#fFK%<-Q]ak,>K=3QiA%dKV[Ve&7q<^eM3q<USd/!.o<:pH\>VGZH3:d-g=NQ+a0U>e&fY4K[8*ReOm1CMt\q4@_O3AW"1#Z%Y3di@e,/9ka?`GkfHQeMK_F%bk>1e[Alg]OF5TYREe\l7+J+)=q7k`($a!=Iq;u49]lHZ_Rmj^qK+?/GN<gr@19LBiJ,Bm/o\?21E4/ZXV'o1s+t8@ND'or30Cjm%LkF.T1]#83+#I.@1CCAo?f@[*.F73Ai^'?G1V+)t+fjYp=j,;0EpZ+,')*WK$@-e?r9:^$<[iC#YB-oTcB5m0_(+DEVQW")rPH5<%3"K%Mp3C40Gb*)0irW^o[@K4I+Iik+#-VtZq!)i0?M?K^i@A/J+^u2#ih[E3ePU##4Eq;UB"7U&CCXZ<LDe7ef,VFEHXF>XI8F:I%YH2Vn5"&b'Lg-O^YB9gD\+Z*-2L#[`cFs(s@iN(8RM_-KY;pk+_QJH")SCMB;WX8MY;EH\We4C(13J<K!\Cl0-qRTSVZIq0<5;u_%]`*\X$91(k/RfIo\"3pdrILM2bOgG=LMMeQ%u*eo9$i;FI?hY72fp;!0b%Ih,B%+62cocXRFu=NIa@NGPIFa$g<0Q,1XJk6?`e)B%pWk?uJ*HMY?C(B$I9mf7fTdgc63RY,l26q-f<BC>;/Bs#\i.$ZC>5:<muh7r!'te0o(Fi+-`fW!8Z4;TgFVabJ7#KUlZ^1Gn/2#O%E7A[WQ'TR:F#h<%K;5L9cIc(YcbG95:;-o1*I#ugP(p->G;&1!Z@!hhhq_J\:'Oq9Y@#bZM1"jjL#;*J&hhg2h>Dm`o.:,ArTNM,%9;9Dr3O_6mJp6G/RbT@ir[ck'oHV="ri"gMm7)FAm_\iU[Q=98ZNZNjdn4.roj1#QrFnub@8=dIE1T+I9KVW!ORnZngH9Xsg^0$5%m*;BH3X.(:5MTFFs'bf,ol#=T#N7;CB.7&6T&`'*hqJO.X2E@Ag`smmS&O3((Eib:Ep"aOO3*kq3.aOU[R7%-Gi/IEV0i&bOZ+c9%/Yqt7n?J\'h$YiAB'JpQ\*3[lX8KfX`f1?>TZ,>r2BL[JQ],eJghG3?^[IY6Ef8WGr:jE2>W.prb8c#"h]!-S6kR`e>m?.H-=KAO%T)X4C76/[Yhb19R7%$[%,9s:8EUNL,OCRO?UJ^_8o&UH?O'OcSN*F4R4Br:%Hk!_$CA]h&6U)iU/A><ba+k`Zk3B)kRBM*DS:j0W%D4rs'U+E"KK&Ip?W:AsZ_@BYqD!KtDYlQOk0$caV[J/Bc'k3e:c-t#%Dm'-9i6qf;3=W"rX(PL#87S$f6n@IsHi]A^Z..3o0Y-gZ%\ds8*hC[,6I@=bMILqPELUnR"^T[@hb:R)s\mK>[Hh$gPCHm6[IjqdG(N1hS]Xe86K3MO1frP.]^8Lf*%b/g9no#s8UTn>%j,nR*%j,tLDht6mHop[d=q"XkpSEp$cR5?;fVXOH_f'e%dqosmX+9)3:cZ^a;kK_>S?b*0/rHGIFg%t4#c-L>-n#).pG!>B/H2$RAfb<[Q%[]eN"ff'jgG5cdck/;"nM;U&"P"\F,-bEHIG)UP"phdP?p;V=N0"g!79g--kKmh\p(Zs?#ceP!oQs[E!p,p9E&+ciOr97S%ph_e$%o(hW1gh!iI^SZH6EBh#CD3d[E`8/Cng>,9^f3W:le,=%3lXJKM\(4p!nES0]q]ESfHu&M%Z+k;Xf?)T.O5)CX+.bSm@JB<CKe!s_%_KQ`9,$kH*F$ilFB_gnYDj;K/rPAEs0@)Pin\78T?X.r'')_VJrg]Hb]415TY>7BP?i'B_Mt:`QIX3caZ83A+W*8SXKM^DW/E'`@%f(Qj@[JM4-.VC@rD"9:P2*A;*ai?LnrJZ\2htm707.nFTk=3,E"%HOr@;(<A`:t5SAbj?!'!ChjgXhhe=0Y`:7BRZrp#=t6HuX=4%<#[R#^3Fp'lq)WJ-^"1*>8-Pdl/u]G\aJqpWW)bId-32Tc.=Vh)0WZXlWH-Khcf&Vobi#3fC/%7f2L^OrJlJPS/$Bcf_skQn!h[[%q8*$-+URWq%Tlb14)jrV)NDe0IpPlMjmMM-?qSno]D!!JZF'Z')BKtgZ+drbS&Fd)FDA+7rT;ATGg(ma8"E:F+5WDr2o!%O[e/=^%5ME5$BeKMU(4]2MmhV"ES_,l?Dgb;#m7oWo`;=:[ci8o=Irr0V?hsN?]3fh>DEPJm(9E8h8`KhE`Tr6U^9;FXdKb,eNYcq_04$s(%]:"YTq!7%`?c(_2Z@%!Zm77_&G@;C$\qTW(IG.c;2kds]SU>AE:LKGTqleSC#qr4b>OrTtg4a(^gR$^/^C"g>NFC`Dm]]3+e;Tnj%n30PiB^;mQ;to*,)=M,D%8GO"pr7@e>1;r6h7O,4c&MPLV+X%61c)&,kcnV.ZZi$i4?[laqKqqha4"PA(1sYo5+WfWoTf=GfmEAD%?S2rDVOWc+GT+J3CQk)nA,PMs*n'tm-.XaP/M:5<H_5ia(XN$6GnpC.V>7VH7BHL!=bp1jG3[LfYUgi-Z8atRgarcbacdMo?!"3G%hJIZ8E8dF#Gn<U3O[#Gmg0.krlHRF_]b'_l_;-Ueim5S[_8R5H0U3((DtD)]21,2TA*rl4@hkk0:o&PB#Frh5ID>R#,Z:7`Hu;<d%Ld_<([MLt(h3mKaH1Uo/^03Yor8E94H3uOmA:/B7kKXSl;`tF?*eq<@o;"2'cl^GtIpINfbJD<F&"d36JD&<\n%t!Z`Cl8aH:-M2%s$BMe'4P#!iHP)[%nc$F(N:H<T8#4dXlo;Kp&Vi&0%ojjr?'#!\bL.:?-9FQ9=Me5+_9]`aiV<cqg;T#nk(9+O73'8f)3egNb=$`%9\B-M9ptK=B#<`OG:4+GA-M1P'p/Z\5M0&)"_T]*_;)oU[7@Em@4%dKXY:E]lL'c@Qj([26l'%=p?t4dRGL_16PfH[SCGPP8>"td%RG^/^\*HnjmI%V]=^XGZZ#Tj;"\So._E&M"#P7tsDoPKGE:r1"c@j/<VsZ_$UDtg:MHjCG5Q;oq.98lO?P,qbLa`HP`):FL40XNG%^rfc-#iB4I)A0E'+3"Mi;gdu2DG9c*etM2t`f9YdfFV6c-$@^(V=tc;mpk-S`9Pbb[<o["]t->8E)[E>Ddc[JpCK&rM-,a+.co<S%+u1*0&X+Y-VnN#WiaQSb6,^r>GB+9c.T@m'&>'*L/K@N=Sg#\qAq[a&MD-HQrJmr1a-5+n?-E#oQ^R<l4+$C5inN0E3T%tYASaT7%eu*5)jqdY*Z$+'+^-3-?lu4h2IHgl#AZQN<Np;@4FljGLkCu!Y%AA`G<nK(W[N"YO%t7\(D"qtSZ'bSj[Q<1g:R`#0p#%_B4gI(_%Te_h:&lJ>CqgAo0c/9p*>Xc!<4gIr6QHR."Zme.D\TCgo9^1'T?dnAL`0cQ(@>\5\N9Rha-=#l[0rEu#R,BfQ)IkgGKIO:M'uk@N%#SWduO^h)*NA)A7Ai5H"bq4l_9ZN,H!Lctt9ZN,HKs+il9ZN,Hc$dS(.UK4a8FfhcYN"*4d(at)or8a1X[4jYWq@i,R*Nr.!/U8p%oA+0g+O)JhGfo`L:S6MH6hC6@S)=6nGPgM%]_O7Z:W.aJrtkZX_[12V';fLA6NbimYN?T&mg6[LijPJ84C>koiR>f=4.lNMkM=;l%s)[0NO<4==qu4j"'5(*/hWLL)gkeI<NI($'rMq50Xe'kIT?jJM=8[OYrf@)#B220cs2THAHiJp%5'T)cP,1A8s7hB<rK"]Ul2R8m%-[n&Fpo-=Eg,nrbhON%B>W\J.STEqHldUd+iCD?TPHOGjoq:CK]P6DYe(JZ$nb:hih"#*]m%47GqOCS6IK8E)%Zr0'"qOQ6anj*#%q!Ie1npSjcY<!,,G<*Y9S.">h)jBb85,EI_RII9PJ8b:@&[11mHIk2Y"MYW'B,'pS:S]mHI<nNSH7dXe#COuhogqf&9J6W$D+d\"%DVu<5;71Gm$@Ke$>"s[UoLLW>@:X]$GK*0Hn<)T$i`4<HCSNV_00ReM+gX$hi`k#*F5dkICNO/`HDJ$@cj:6XU,A@UoLNotr,&(>%m@6!\52j+[AKMMVVg[C,>klQTIC/9ULFNikVk%39#X:[.87cDk=$ute2tSTtPcl!SeJ,35Ib!JZ@)\f':&$.M%?=f+i`4%&]'NFl%'Y]GhjX\NXXL+^!/\c"X6j(3Ho:jWs(\+DNeaTW:Gh)Dd/2%o/GnGO`7)naI=1mhn<KS)`o>28g&Sk<kB<cDD4)?G(;8L)%K6TBj%0:h'gn[Eo!LmLj3Z551kgn'7ilh"C,Cn,b7b*SZDfbH/E`@p7iq,69L>NAR1nqSaHQYVlJ=13@Mpm%:q=dQ>K7CPGhG3Jf:=aqL(%n<\41gQ!;_p=3j'U$_TORF")0V4ZtSnH+).d<)LI2;e1AN?$o&a/AGZ;!XLdfB>O*;qdIj.;mSCcCPSFCn\nD*jR&2\4VK+oP=]s%Cm4`e'XDYE.,AY3TL04]d5PI(Ee;2/10g[]dLZTL@k"k5K0HRea[]@R./XB86M&n\/UV)dYg;O1B+GDkOH7-*.*EV"^K^tAcpssp%O!M[[H7\5PZ6XEHQ&MTe"$U>b'iq`V:9r]hE69Q5:--qHP`9d]&Jf=@b;(Y2SJ3CU1>?lVrD02Q&[jKLbj]>9Q;+a-5Yh+*hq<Q@%<$akBC*3s_a=!-[$U*Pf)Nkrk8jlm^fa>a,/h;<COld)^45bl]M$%&UD;!8D(]@%$OMMWQOXXrc9<j0l/$^I)P'kcUN5D4FA(s^W%TD?PB@:*Y9"`#-!OH4#5N$sUdY%6`i&#:?Uq++D"TuV2f,YJb?=39Y54^5b6-@T+H/";:#J^R6sgBQ\iQ!f&KdEN4?ddmqWOM(jf%n[+\qHu(f7U:<d1g^,.?(0W78@7u[e9hdq]?\3dShj^\o1'R:,gL<7IM(jB4=\W`!7"pJ&@aLACSS?cF',8Z=&n25#p]8Kq`6_Ks%\j?f"B<_!nJocZniQtbZ+gM(6rJ]SBl*Z$1)Z:3tp:fKk>:*oR(V&_7n]dk*`p#Q4AG_.L!NFt2cYL\!ddH%LQdr*434k%5_gIFl%_aN5poYK%c$0D=#big6@Hj1PWA-abHEgTIRan.h:U,8(j"M[cjch^=2I"jIk$$,['N5!ZF's-_UTb"O"-$LYP#bN3_ED7CC$;B0Q%`.F5E0[nRt#q"CAEgY3n.\a>E0TqgKQ+E%i1FQGF>df_mGo$>NdZ$mW8[m)SU3Xq/?d"(qrQp:eA74uc$!@lE/GJb,hFT%uag$Q.%SN0"-P9ORh.gbd4(YXr`o-p'F9LC,(oIYCUMh@!(/:RS(8MdWuJ5p=iFj``3D)Ll0MDrEIGua;YQg%.79Mq;iBtbdH@a("Jon>T*%`4Ut.0paC:<W30*^&6N._RK"jOKaO.1gbQ`2Hh1a@II"Md\]I)6ilUZlHG[><g%9m&(4T%>kl,^E1nQG:SA:J0t5TXJ@L>+;X%Q\%g:(WS<6LLT]9:abbQPP4/l_!dEl#n"i^jig_ImNI,aTQE8PF,gNbKhh@Ne<EqD@L_X,*gU,aJ?tY>sds]iA1KOj^-_l"u=V[%Gpf%Ehp=g0i2$%:$V28`t_KWV?bNpMG%NCA_9<[f-.SVlB'/b'`J4W^#[N_oe\'`aq2TLhNV&.<Uo\23#'ae0]4acee>*SjAA8k"<Vt_%Js80RB1RWH).d"@3G(mjKR'"k85j3T$DrM($V\H]R;""UVr!m3"4l:;/#[dTER[t)8f9IAJubjr22+4bLGYVDYsfs1I:)8,9$F&D%'lfAt,cU>fGcfCAG!eX10@RMbCO3<ra$0-pY>Z3>HKl*-:'1X];PbL9BS0h`F0XJ13Mt5:3#UC;>\tpgoIYB*-H_lmP\,CY`NkVY%Y9&Zq4o6qOpXK"k42$n!Xd"?3ReRO^"hQHGj\qD9AS!V_A>PD48ghD/0/iI9@@7o/@R:uqqeUcm4=o'0XU\^9&\ZL](^/c4?)H2@%I*YTA1_qG>2OC&Unt\I`m`O$b+b'kNC3q(;BQ*[f`Ncp3^fk(J)Vq!8-8WAPI8XD]Pd0II>9m\[e9l_nE>6]4Q&r#?_b$I]_8`9]%dT3TcpVk%GKnnLZUr/>s-u>Q$RC)2)2uMFbA)hS;^G_V3YY<AWi\EMFA5Fc5g65A2*M!U"l#eZ-p/:/k=:gdg^k2&c=-/l\?j1$l%*Lpg')a=U!*/UmU#NI%?"V2"T1FZ#%P__lE'i;VHYS:)P;OE9B5os6$WI+b;4'5/uqG9e-`D[Sr$-Z9ERmmo9!pUWZ6&4o!r#0;l%]J*n@__OA&4h:?9.&dq:D=fn>$Q^+@H7@=tD5$\2^^?;XHuuWbHC^c$$g<I.dAcoLM3Y(]@eZ8rD3q*<8!B=hUP^pnd`*%H8]KnF%oVT)U9:OTC:4TQW(]qhBaK?Z\epd*kg%pTY,Y'segZ&,"kcOH9Y=gP^]XMHuRq_?uLnJ2b9G5j:Bo%g6!EtTA%qYU2d'*[CKu%_<%%#tLZjC4J;m0H(&W!@mOe]?.rJ?)[iQqaBR0;L;<?m6qsfS,J&4VX>A%6MZMic1fZd\l$%D_\iA'cOel5r,F5m),J+.U?j04(Lkb%DfQL\ABa%*)6V?Hdicb:*1Q4="=diW#72PhJgj56>>[lO%lieW]@_W[(Qm(.ES<=A-X]GQiqn<!Wjq[e,WB6Hn?Kq888+0%PhtO@%XN6B3"*-6/KVm,#"\(pURhhN;"j*SeWZeod)dJUoN^VNN=HKJ5G[)]:'q0Lo,3cI2L/Q5lBL5&,Q"UVif\RmMnd-</U'!^bTPCF)%]7SPOb3`O>S-cFM^uHtd,_B+$,?i&KWg'4b9g0/OCi!]cMCCD#8jq5Q:KpF?I0)pZ_h/T])BsS8En)Nqk'WlfHKG#WDkcW,<!MQb%nT+sl!&clXJ<+%4#%5jGDZCR/rWZcXmJfj^FSifo(>Y9!BNJZ;&Q9hu&g.tl.O,p#3+dEePY%:kS]GbH`)IQYFV4h"Qih>rdn-bW%P=iH>,E*A7\S?\EL5(p87gMTe-AEh/+otO&d\S'lBZi*V-Hrk$"R8Tr8BG79ip'-%V/JFEZ7eM0\6+?I"K2n28=3&e-j;.h3%"7(%R1KQl.1'FX@C_#Q:mYr0J.*ZraMZA;&5r;/'13ZUf#1!AU(N35+=,nsKMr43#,+_&dZkeXBZi),"AoF<D+e^IN$2GjR(>mbl!*f4%&DA#6#ml]>gI(-J!7E\l&L_@fA5F^p[A>.G-r)-de^3+Yd'P=r+XMb:O\8$Q;,ZL_n="kt#SN/5)M2R2G9`b[(V'[9l>YQE^o>7`%.S6MaQU.W=li73bg6_YtP/40:eQ7o+s.\*N5^L$THq]cZU#1O)[Lokm>d[;1/to;-J`'E=_%_f!LnYRR/"kR#MdjJi&73rrn<?<T%hX%%7k6-%<3KBPo@i.]V,_R(.';;<:-KToH,tlGr`b_>mT]B-G[O22U)I<kQ_EgfNQ<7gm7K>jHA%C6?'+P>B^d_^snQ@'2M1Z@8%P/4YAO(jEuVZ*(TeL&nsVZe>sdj>Q+asd/o4q_&_XW^r2BEiHB`#\eI4s=m$:*N-$U!.'u8[ctnd84a_6LtIam7Md>LEqhE\;!UR%l!O'$dD@&l?&=:G9e>gn3t?,g@WW53&e-->_Dt1#;_4bTRL)tj#Z?pK`TkMmibD(OV0C>ML`HsgFYAjiYR@#'$j@:%MqEtYN09b9%(+OQ6+iS#=(^l&q$!dR?Tg!t%*dX,S..Nu/.&HD\p_`P=&4LLS$#Pnu2%9T-KQSPrP)p4V1%B\13&s,cX2LVa:iA_&@18oS6@O6D%!%>R"MY'UiJ")SG7Q#0*\1;91*'P"\#bY#P+uGH2!rWg<9dQbfoEk.'E[;-/Kd9U]1RsK,68#\d,uspJY7Vq2'jX5qR>15W#W7@%%ja`[B+A!7JIgRf.8Q(7+JU^"(7J*,rWNOaK3&62h@]m/&<;IEENo6Ta,RL"c8eYf\N.<*WPRpXqPR%:9N`Jcf-V+)k@,_<QPNuJ)%`WX/56mEq?N7&/SNA*b-Xj_rW84H*g2PH3Z_8ZUV)T%dPa!;F+LsUhkJVEAQ@_>9cD@8$e?oXBQ\jAgL95kG>7ajmr'RHki&N)^]%QNe@?68d^r>9m]FF$_"D-@q&Eed/7smA*MXTU8F,$F][@dRjnmiMhgsGmR9$f*T,alaRS_N3A43CKP>g6uAGeE&'#@C18Kcppq8U%HRX*,!DmHTFm-o7A7A>+-m[_o7Ti21OWZ>T,SAmi;OEP&#u&i-FJ7kE.DDM]*n#]EJVb##/Yl?0JYRlUqIHRJ@+#T92aN_.@PX$:%[?k8rA2/cD;eQb>.CAnI^JP3BF.!pl0PF'0I4:r`-Fand8CcXb6pdBW!!/K:k7HjQ]O`3BOV1KJ'(E0""<I49+m1l!aYaq3jCA@5%fM"Wj"1Ud-UnY)9-H2'fM.[#.M0Pmg.#EdM*a8oTKcU8rWYfj'12NqF,1kK`j;A:JV*DdfKHc[M5_hp*PXp>%8m2Pn7"TqjO[RPF%8n!=j6ql%V5F/$99o:ci29=fM.A]hV;1p0Z_f7Msg4U%a9N.e<&;!%[/X[_:8h@-0i<h^L?M.k_i`.BpQ[3>X:8T9DgR;YPrd^1=%RT-/7=+M`O=8bXOi$U\qGSNdV5",eQBF9"7gR5mYDTDf_H=V8c3LX2>;eXfq/Cf6s[&D%kL[g#=7?nYX#kV*'a@F#on[MJS.l7QW%eJf>M#>'e&2(;-cegMLb(K)`TG2gUDYs<Q:YeJ$Y)qTfMc;\4F!!/Z@m27$;1qct%HBi2P:_c/ar,P@19Q#N<oZ2P4^2M3eD4tBb%:'![BgI"$V6i,[IQHo2cr\"FJB7!0^HUqdr8>V!m*n&^_db,\ifcJSp*n&^_db,\ifcJSp*n!a1C_%tGKsNq<a0:>@[c)88iGuBc%EjjqI[c)88iGuBcEjjqI[c(-QZ/P6ra2S5Xk0*fQB#B#2Z#N\hdY:<iRqZh&]H=cebrS!S,JFq-Ugo?QHM9NrIb_kFjHs\V#rQ4m%5E9Ir98t=I1I&Y\6Z,oDYPj8ZGC`[e*86H1am$jWPJQ=M9ZoHn8_]N#8BWu$W8$EW1+hPYXdpuM'.rB`/!$'`EV_.fGso$0ZU7Kr%P@ti30E%1)7*@TGg*<>'SA&R94<dtKkrX[C:86j?D='F41/8Z>Q.h(\F8!"37*@Q:LE<^k7*@R-/rW+Dd;mO0p5!CFe,$%Jkn2Bb%cE=0;9ZoE'XaFbbc8eiF0eMF="iF4bd5"ItWd;Uj_fE2./eP4!F/EdY[q"_l?`N3GLK^cIMldZCVI>.!(up9<fod"_"_TX.fo0tF%,FlI.7$$8KabdB0k28]gh'cnp_V'of_@f;Z8[O)uNc<\aO!'7YjrF7f0_qY-a1`-Z6Rkhop5NJ&<-+(J,?Q7j3QJiGbdArr1\Qf9%$<)#+I3Z6LU#m?n7X!i3g!O_KD:NhD/bd>p,Fkms,alOUk:jm^-tLGV[">V%iG:tDq[q,&bbM$V[h(-Xl),7RV]4aa7QA"7c;rJc%81QYi^/6ugNS9M5e@$Tl#AFq=>"l;TZS$Ag4.)Ro]-tPm!oY*b)!U,81kI#W5LDsd'@pUA.(&BW'h5`r-W,&73ga\d,Ii+5/gN0J%V0#CPP?n^c#pIDkqCLqWX,*gU,aJAFC^9%!r"iZQ:"UBIf^)B]qE;2L9L#*/Eg7nOk_!tF6X*]VXn5ba>KJAc>*Y7#s+8j/^,@FC%#JF`<YdNecbTDa*_J<K_>FX`6W[+Q1hp.abOk1l#<r/oAX^i/d[?[Q9^Z]gm%UsL_M2&IU\j2V!m%SmV,7f,1M]f.NP,kQ-22+4b%7l7T<-.tm4Hd,TRf=I2Gq%p\%D-Z[t?8G=.$EM1`*K)JcBf"/Z2Ng^5JlJERdLhJ/-:tYoB4Y[DUPPnO"I7h4T=t"C*=bM%'2=kJ%2iVna7er1%SHao&A`[.*V'MqBdnE,5=d#oZ=d`F7.e;;XOt-K`f3Z03L)?o<WCDYg$dj?qC3?mi25p`i>Sb\;aHJ#[]h*!-bbZg]%]$L]HL^$N:")sAJ>NrJaNiXG-Y*)c\(VM_H9j)p\VU64.EG_/Z,/D((.,Y(IpJt;s5EIKC0nmA"e*maM,[9NnDp;<[M(kd%b.ljl%m/-(*[Z"q;f"krE*0B-^BZgBA2R8`PV@mDHFc_Pqj>74LPr:/a.bR3pI3kia0)BCh#PXctgGH`ZbG,S`F>Q1A"X)_/\1C=X!Y81P%jp^Sn&*""m)47X>Op%WAF<-DdPT#&[,sb@AXq)s9ZdK,5\83=fp(+e?q/fr%1JM+3l$7?(l?0HTK/OrU=BWK3@KH_7G8&HZ:3)ap%Ot$#h3Y@A)q17Z7Q3?0*\NZh-gqo.JjQ\6eV16m.LHRVFCI+^KAC=S1^S4Ici`l.E)HRId7"XK_R)7aLC&"f%&q3:#a5<>f@P1_S%Wr*626^.S2(]-*uZ:kA1g?<3u*;@8U1;III>kLAi=Poo/,]hX2OtH;l3hcYl%pt,<6)\P$%k06BdV+lTL.YA.?h?BZ3gUh(K$?o]%KoI`"YX0$@9Q0\,e>fkXK,D0cV!eMRmCBhC^t8m-0PT1YJ[4ehAOTG@%#ms<8D.4`(>lkSo1e7s2ai;&%NXo*prqqg6s8G'?&(P!%!g`]Zd9@j+>U@K,qB-g,^p8.1-Wj9uQhldVE[FpX>\#idWr*62HhkBNKN!FKK8L*PdpS)/p^dpF3SVUiQDeX-4:;k-69taO'3sp$%8n*[SFA2:sP(Sh5P#S8RYs,IN\=-#fl!O'D"a5KoNJl\_Bs9*,^6#fSG46&W#$e%mO=*nK_QnV1/23Ek,e65`Ua)?.d1=#]P&-u@%E]UK5\_(qe<;@?Cp@9.C8jMQ0F^^(TBO7dgTX2J@B2ms_>t*a=$<X"l'H?%0PpBAngR/^3hjF*>E1s)aQ26RDl-LpBC+DlPJ'i$p%l#^)Wegbi49_5B7)nqDP::_cY@N2gNdj%Y_GUo5#U0=%+25MRqBMO=>a;Y@kLa58NQ0Ue0bcPOnEKT?.WU_]emH*X\:a%MLHHe:&%%Y]qlgZ=2"/oDml_$Yr[M#u6IN;4_O>tNIu5"J1#2]:?-2+b*=50N33.cT_C8YppaCP1ARi@q4k[GfrR]h5a0mNioR&@_]W9K\0k%X`1uc.@Y=bV'MoT:.I.nP6/W*PQ^fKlQ]$GX^DlbZ/mC5nh57T3eRcB7#(mS2Q$7pGd&^dVG>4HEK6`H5hQHOC)AQ//mV&sKg&$t%1^HbrJ;Y]+8tY3eA/0*,Q))jCkd?ru)dnJ^qJ2u$WL*:$q<ks'nN='hF=Qf'`EQdJ8^gncA\1hQ;`[ZDZmPIO,Y>UGTB>YE=iFXS%PZ7Gp]XE7T`<#tRer4<kC4j0)@6=P:7r1,#PB`/jelrtqA6c!pA.!aHNbD.%K1M/FV*;f!-X"DnI3klb07*"9>R0BIoAM*OBjDW]%Ge4k%p"K%P4CAopoJC;:_o*BB\\*GZ&lT]D7l6RP(+dR,q@'31X,+rbOt-K`f3Z2V6Fc)A?5!c#*(O5N7SoCh>3'*B!*:s7j0Fpq%>Ng]]7-i69Pbd&3T5J4X7B;ekW$IZ-7B^"``M"VdCW<_6[6`ZPGZp_7Lq!IE,#;":M\dAZlQ\$<G0VBgV;ZMaF3k-eg;oFNV9_t!%[YhS".B2kkGR[g&,V%A\VR<B]6=Zg\fIFiY"PMNTYHaZb';B<_ALg?\cj/fkAlEPW8Z'pK3#u-j>XKg:oIkOH`*OEu6<a!qZo0O:%JmDeI!;/-e),Sg.&3)6g)QhGU+N3BRYX/t$*2R/6ND#O'P-4FkejiaQ=&V[?rJP!/q*V*+%[[1uXc9B)?rmd+"eZgEN9ZM&_hBtC%RWL#$F1Fo+/+c+gU7&N--R@qKTB:6+'lpS@.&lbjGR\<_fOPdNO"d\3M]0a7/Lk@'$P@hqOE^t5Y(-V&_DW.k;O&M-k_!tFCXSp]%9<sgHbN[(tibBu8V16m.*L?rG;Ep"PK@`Z#&3C(P,rjg0"Rl34,&h6U(FJ\u$Cm+(_I@)reJ+16K)0ZQ":a(t!Otsh\$aS<PaGZ(%Uc?bT2b?p7?TaCG`P;rRRVC4$'O+91:`tJ]g8&^6F/_cp.eL[nCFFEQH&\!>CC2b0AT"=]A)_5R8Ypps\"2"L"u<D>$T^8_odAW@%fY@AZK)OH],hTm19nN>uh]URdSV-kXH8!,60LjC(rkOeMrFlt:Jc1G+/L<umT@+<'XZ0j!J#SL[/i'XqEj=^SWU_]e/\uDu>(Z]`%.tRZ@$3Bjao`FJU>e6)o$[i32T=bqIJ#Uc:g`iseEHRPBd_G"R"SUm@S=g=29oWTS?:QUPhiT,!IcbB<8K%Gel!scZ5?J6c2l46K%<W`NXO'ER0h[^V&:\qM@?pCd319FVtrKMkUmn_kNp`1dblt7YD#r74G%.%omngT4i9rSRN);%_iI3kia0)@,LI4X8D"62bJA?\;C%Q3GpeF(tpVEDB4^5"`uUInJ>_3$tdQ1>(KMqF&#)Yb/FA+fY0R-Z"o10\kD?oPm<_BlIHOZ8I43/oh9&5>a2?T=@Q@aV=RsfFRbU%Jb93Oqtj85;DPJK\GAfql!O'$_/O=ZmL-6@&1NrurGCU.@"4n]?pAZDN),V(@Q>IVi0KK6m-drN:Jj.jJrmKI.B2kkGg4$Q_q6oq%3X!5)m-bO=-Et6tUmf)Jij+gp>Nh8Y5Q'_$Yb(r?dO.k8ZAQ/H8lFn\oK%S>NCr\b7/M'6WsjZj%k9=;5TV!mfM;nVm)SbS^p4X+%mre@W@Fpet2^6rM+MiM=BOps/b2*oL^&S>)L/8r-l3-hnpb"ftK'8WG<K^U\:P/NJj`/p<?g8;t+GV'^(IS'JWU_]e9jfrNZC8KN%di/,q#ceIfIO>9UOWqVjiZ]53,Vd893i;06EEJC(oPs,(X,*gU,aJ?tY7V1ub>M<@W_A%$GdLtb59(FJ>QhbS7=b>gb>j^1Thg:=%Y]AY7=<3/;YhkK+,DlX$M2NrU8X4ceBa8*PAk$0F=43PeE?_JZcl.K('&5j1?>ul9Ot-)1YTMfGfEJT,<U!GPNiXG-[ZXVd(VNRO%\:d2:f!DIZ<bIL-_063>,"+)oRSjbs34G90!%(@EQ+efYP#]TBQ8b=`V7pdNp'GopPr-Oi`W^,\*XI.[cj)o0JkK1.FJ2K\rS_pR%kVYulr'PlfQdI;Fl7,B%J'i$7_Z^%a1k]]Plt6;8_0uCb'A1W9D(1;j$ii)C?sAl6cn=Ss!&.PE>\lDmWr*62',YTqKe>+)V19eB%ec!EK"pkn:NYDfn1RG6iksD!FqdB[K!ffg7*_LjL6`%jRk3=EfV11R@hff.h)$"7e_R9mH,IGX%56J\0p(L-TQ'.NO!&2k-[O"MB%d`9]b>=Df*PZ7Gp]I#<P<Zh/NlrRmdbcnZMK3/?8%1RFtU*hQl8MYu`$20/'p'*%_Ibg=d1_8]i.d$"H8YppaCBVNU7nP(tBdT*<%K%2`5_%HIF3EV:aHK$+cT-Q-[EB9okQ9LU-Op%^cXq)rolt7qT8uhds?8EGD?8G=.RUC:/LVS,m2*plQALg?\cmQYYp)56>5GV)"%9ia"#:e</8Md@VFXuJV:Bc,CGYW>7f1\f8cnI3ei(W#klM('DdcSUSq-V;IGq@pujP?#ig8kG:t_.s+i`@-FS4U3<%=Ijb-!oHHH%8J"%+fh.DZoLZ9Z`YL,I<r.'*_H%9#:e</8Md@VF%VH1CE?*7\!5i4:9X)+SZ,"?:4&R?V:L"%_P9d"b9#id(.q&"nP'!NrZTb[P%\=-#fl!O'$_/RJd2MF+%X[N4,@<G[JCI@RmK'u6m?pA_C8s1^s8[(E!2]6"-P%6%jL=;8baMjI?UrpI121a_J4)'/g1m_gn"KTF?%11;M&i&ag^f[!g&P,&G5''oj^3m<IaP,e.o=<(O6>\tddoIkNM@(;SF0b%bf"KQ&"@.9`Q$UaR1eJ+/L`H"#6V4!L.UagdTk@1K2%cGc+0S?)36>hhkX38=kl2`:d8I:atl>@*'7iHDFh=@"<=,`2a%R7gPC<2!*>r<a$**uY@\@:#Pk,DlKu"]no".fDHGD*6]"G!F`[%s6X4gZ]4h=$?eYgW'B%85MN,$gSd?kW'B%85MN,d@^]-`[S_O_;1H#OJ$r4([S_O_;1H#OJ$r4([S_O_;1H#OJ$r4([S_O_;1H#O%J$r4([S^C(RVgRSJ%/AU+Lbk^&fttXQ'Xj@UsUbs6k_Lg_-F=KBGP=8<E4>ug6Za")E4o:3Mr6Y6Htn_O/#mu;WB?3bV/D$)3G>3%qn'tC""2u[6aVfYYr*oVEm>h2-96hnCMaISB43181/?0R9'o$i3BQk=E->a*_lh!W-IHkZ*^*soM3`,kY4eE"P1.7#[F!4+S?o=[%@TpdNlgN-+S?r4_9ZoDTXZU&rc<5X@VIc:+rpEJ'31[4#-X+euIs7c$S5&t<R?hpFhjnI!BC"id8[OG_)u8pXk]cJb^3_g8h-jAu%R@cl//E]P1l,QDPDf_dm#.J+.e7,Rm8$hE<(0`0/eR=,P(us[]ZC"SIOsN)W&^G!QZQJ/m,q"#W[q%4k]HrJInh"!rduABk,FmQq%Vmn%21LK"%,rk8tV]G:ugl`sCa1d\G,ti3;I3W`)(3AcGD^95B&tEIh8DK@S36/aq\0[%nc.Frf[q#fjZ#:n*aV(,=hoLh*,<Pa]%pm*JI.;iO&O8,"l_:_FUOu\J?%V)#V9,;Tk>I"BE1W%h(EqU`JrKp)L4`8AZa^UZc9:"LXUR^-GB/diP[q(=b9T=(QI%tlW)mppJ%W,5$a&(2rY[5bcE95rIY0"WEFH92X]930]Fgue^+JsN-M@&pE7XU*bigPPei+;5[C_:W(7WCi='oKbO4V(`l4a]A6hV^&6uX0!Y4%re8OV_e_q&\^s4_[^H4G,CfOjH.ZoipKG)I?#[3J,c7ft9LE#eP-+@ZR9Rc_o%K=k.fY+P4Y3pM4sNMKWHE!P0.q8NIpo=pG*5?3%;KSdKB9"D$.ESfJ*\6h0fg7f,+f-^]C^'.7[\B*V',Fd-MT@UKdF.5)=TAI/8d8[TcpCX^(A`4:":Zqo8[d&[AM,:0aCA.@Wr*62%qfu/uWYhCB9N\V42#dYs:3bIU2L`od'uWS56ilW@`2FB#RCI>b8Jh4G*RWZ<BiFA(P%6(kQICsr`77kN9)kX;5/E<^'[mDjTVZ$n%Y\RoU&PrfDCuV.m;]$Uc^=<s'D-'>=9$?ITQ@_PZ,[9N.YZ"sFES45fj^5[1]q9DL.,dk;EnNe#C+EI;rs*hZK_q1!l=Dhd9dRjp%l6$tlYZR&2>A<-gbr-/8?O83qM`q6YR_D#^9Jg0m1WV-l%W8"ab%3aq^0(,)[W-c#;+P.'43]UhPpP*UT9Yh0X<K9$8uhds?@2LV%$NZ,i^6s_Pda*9*c,t7Z+qL#Y5P457C<7-UXX)Rd+/C,"Q:dHR.t([:fdbu".S6Idd;+M#2MI\/=pc#K]40ZY!N"'P6R*+sSN8^*%E<L9l^6HR#NmeRl"cKZ3$n,\8*-TJ*0paC:<W5FjI2`d-'2[>\TVZ$nY\VT;a-4A,8n?nZ;[6f[jVl8&.RC46#O.&1@RXE4`fm\l%N]JJ]Ll(Lg6'ZZ1B@n%943+]u%Op9(YceL0MIQYM)Z0%&9]XR1n'&U;XY?%`*n\[_V5.bRj3o-INVhC27b?^I\q]mN/^2ZX;OTqu%<j7V('aYgjR^XsnRUAqXq>5h33nSV0CEs4-FKdbUN$=Y4<K^U\&(2&lMhi]QlIo-Cf5`pZMR_:XPZ7Gp]S:9"9#Y_1p,*5HM7\nd%Y-)KunSNj#_7$Dc@r]8fK?[O/7`ETJ.S6Ye#O.<SQGIHLQIL&R^96L<BGGTrQ))jCkd=1a2'6uhB^(=6=F#lh59==t9TM;XfU[Z>%=^`#\>YQND.J,neU89+"=:uZba85S841:$VfQ*3Uq%p\uNDQ=hp3'kkc*Sh*ZEX9Yo_j5@+'V4eG85C,C-R]7_['jPPos)*K4IC!%WKAJmWm\o#"5?4KD'c.Q0)Fob+<F"-?^b[2HljA&m;4nV/*89s]8HK&($0g&qSP>8eWuAcdW%=B[H[RM,UtUG:R3Q=MG'6a,uspJ%Y@/ALkcZub<R=VP.G,A^IZ-(*YjEq2:coJc+)r"2>e6)o$[n*HBc'4[Otb1Gol2f<>K'iQ-)pMiH>QQ04]qR39Pa,*l.#;8D9>j9%+AYXUYIZQJ@'6r&`"^DZLh>'O@S*TJ-d!3-7:jZ,Ot-K`f<>jea\R^+ZuiGifEGPF*W>+Cm]jkELi_N["P60s;[G453_2cJFK?EQ%U8-U:T/[r'N=np5-)gGgq@!JuYcF?X:6^LX$tB8s@jB)rOeY9((:Ien1IDf"%UCE8SfO_#'GKjI13B3[bNqg/&<G)3Pl??<CdUP2%i$>QA7k\O67_aR=U$%3PYJ=_CGX`a3CBsc:`H0F_b>aWuTb#Q`9uZ=?QDF@T+&ZQ#7B;fVY9]D47B^"`Y9?@NO'-(`:5:&]_\;'_%Cc]p&1^'giMROcd(Od(7>bOa2,V_`-3hufQ&Iq;X8\X.4oH>OC<j[ap>UcZC06lmGL]/32%,@/l1m9iH65'km5@>=J"0Cqq&eAoE%opnMg70kMM8[=%68;B#-QjfHu8J9%SYs+2(A#ku4W$IZ-7B`Ch;c/"tfd1<!gn"[m[5LGk#;-r"26('l=91c2B*;9Q*bCM%dSW'&%20$eT9/<["LQn01d44:!Q))jCkd?:22O)>u[3TE<`YsD6I23n=+u"m&,3pU9@2pH#>U@K,qB-g+FGr'iP#S8REB:B4\_(qe<;@?C%L8e:Ac7Qte`0k5cq;:&3d.]o]G\D;6OGA!sfM9D*"EUt<.>]L2dLcrJFMe.;,RNIPF+$T9\J;5UY,7@]qA6i"UIg]8Z.2OcLhO$9%:Y\>`[=oW(Ob[DH/aV5D6QcMuX!G5B+/C,bMMPk9(cBS734>9X+tiQn,uspJYJ'in["+U,2ISDD9:N0!?"$-1qR#"f[E-eFT'04Q%&IENX8rtOP5rtaNZu_Z^R7a+1FD)@C[?[E5]BF=O9gg6N;D<D.9T#SFN%hV5+#t_Vd5Gh[9e]A,91dGL&P/-#297PO9h9Ru]0Wk:%&)*(B$@dYg%28s,Ji*kH&2YC>#I(+?T\S1Q&qh+2a?s']D.)\*dum@(P#S+cdNK&DDujrd8`'/-+&ZQ#7B;fVXX'227B[0pf[t4!%%GR@AnVAI!&T6M=$+;+^it4lBC.h,liKfC8eD?94C6M2\BXu26iZcQ;;WV7JoI-CZ&64<,&uN2rNc7_XqfS,!ITW%t4:R8]+Qsu-%,FD,*P'!B.dLf3OE<Jj26`ElO_'EP+F*3bDd_G<FYj1ua))llo9<c-!/:[Pd`:CCP!A&`tS&Fm,F"Eq[D5%WB/[5/+*t'Wl:hG:?%-SA[rdY5CDbEl><P(tJt=?`Pp=FT8p.S6Idd;+;U@jJb+o##pc%*K/d)4$n<Uh*YWjH<VoPU*M]8ggk@Y^8=Hnk4D<%lhJt':19s%<W30*)=;%;PA,hL&oLJ1e:au_eSKosRE8E[9VF)Vne%N?/Dl`H"ObCo5&p7\T[LI9Zc)7k>)],NMlIUOa31P$>N[N?(kF%e7d3cJ%L@/P4M=:0FMb[B';sNBnY6:.e>dfkrq%p]0\:#:a0b&'$@alB9ZXRaAYIn<IT"/Y`aVO_./3dE?-*[<EeAmn^#qV^YL.YA.?h@O[%p/nAPL0%@]/3iMa'j*Ze:DHtqEY1o>OsIV7l$=D[`4F#lITu(NXT;r-`8sT_Q%.1s7(_EpUj/erT\4Q'$tK+tH6.Y!dj70Zb9noD%$$(a2%*KaP75+edmn8("O]Xe&aV][ZW:DS9N6".lJ4MuaNj3s7pCPM\r/\+1j?Y==V;O.^In2lDNb,.UO,+/e>DT1+UbmdsD2I#r%5%d/s.kDd)-H>ToO('Z4\6L?%(&B2AhqJdeh`l:WMD/G]D2IA\^28_]pCpiQZlqj@&o-iiq_<thY]Za4/>'IP,tSjJ,aJsR!elFq%NXBGlI7TK&5'+,sUsd$A2.GBjLn8ef$CZhKF;ZqXdb\0Ied'o[b6U4O23ju7d$J2:6enRiU&qo(+&XAM:L&k6USQ&Ii&.4aE6;M`%ekBl-(F%X^8?3ejXq.lt64c78WCi7%e4D25Z6jrA&u7$p>dE!/ibBu0V0C="`4C_q@TAL*GNf+uLT!5(G#-c%3"qnqGeqprOpJNe%I1j`tR2$r?3%CRMoFXN$q8C8/TVT`FS[?]sXt0ZYBQ>XG&ApJb5h%odYAPVo:)&9@$SG^VdY0l9jbNHXgC29Ge!`\k^qf1__LT/-%8lFp2:>1I@qJ3lY1!5Mj(`\=03M;6aU(+AMU'N;WE4)MfVJqnCdkEhC,Ulg[;]KC><Y6-PNfkmlK%Gg%#?3VSc:eU/X(EniA(O@U%^?,ooY^GRgPos#('3K^6AO?^GP#S9=4)-O.R/0EOl!<pA@c)]tVNld%!JJrJ1Xg)]3Xl-FG!7X4EHn9&;NF`F)>,\LYM4/p/BNG@%EDd<29.Z]\CaQ"N-X8)n=LY!9$O&-<368&/8[f<f[Z2&YjYN7&,aguk`:?X4ENg0[^/:.Z`TbGnip&$cV11R@-[/`sp.](i]I'*9%hg@!e=M@dtMm7E#81^CC(qE..9^+MWd2HA7@D//*!aM]8.2'g:/ltZFr!QgeqQ7kTVHL9k:ihlIfK*6Q#X!+[8s1du8Lts&\`bnC%JjY<6I7TK&5'%0uUsd$A2.GCU)o/rmVDT3-JZ(Rt8.`3^i[>(`-S@aM8J4rAV.5t1\.+Us.t)dc2d8^UY*)c\(VN;>>LWLId*f:^%;0/;*L5`6MRQrV0cWmW9j9g;Jb?&E7a-'D/l;KjD6`Z$$/14#SJ&,p;\eQ5O/.h>nE3MUPe)A.F>Gi^%"Tj`iN7+IHU*r&8=O>L4%_(8/8V*<G650)]Z`77hM9)kX;Lik5^!1mnLD*+NT=I'e.k7Yf@4E7o(Ot6/r/77ADm3E"aO(<Zdas:1[>\lDmWr*62'AC^/4pkIs%UF"P4O)niJSI^-Z"J3/',tJd9,aOK]2$up`dUtQ\)F[>:-)gGgqAcbY`Q.*c"jab-r*83+p^(G3KOZ\GcTFoS"eYV'I&,[DpFO2t%HMF^l[KUs'>*Mq['7;(,)e'gd0?(:N7^t3gY#;>]A*]!rdM[UK/lbJ@Kg(@T6einS\-bg)dUtN[=[cS4-)pMiHAu#cgi8Zi.[eka%84Z(l.=.,\FV3Y)#X!19V'MopS;q8877+:*;s?*&NibW#[N$Snrp?KpM@rBRHVO_rm1dfAo,&VoZ#u##O9g6ndZl(`k`],_8ioIq%,[9Nn3"`TV\@P:1l/**@\G?u7q:R\'s&Nf^[`s90c$m+GI^[LM[`s90c$m+GI^[LM[`s90c2PXtS,I/mrG7u%Cn(B>S,I/mrG7u%%Cn(B>S,I/mrG7u%Cn(B>S,J2s2Z)/cqq3n)ff&`\2Z'\hc2Jhe=?-Y#o*oV?;$\14"#iF^5XtY^%5YHb$YTXTeGLPgh=L=h.32?l%+<A%`-pYlM.$I4D]KOEV:q\->htloo6$"++ReRiZ_55-8<Vf:*?uC_&dVjNb3mn^k,/$o(623aqL@sSFHj>#:d]<#(hK2V-<.e!A%G-Gd'rhalA^)-uQ/&u8K"20Dm5LP9^r3dn-nMe.6\kOjJJ`$1nWg@fE^C,bjaR9@B/O%Nc?O>q-qG$Ds/aU:YIbV-Un=/87RRl]4%J`$1lD-spb'%>%rS)1uI;rK/h:B/$sal/R7o4-<!gf0NDAAFWfUt_r%jPD/fruoKdDu(e*pIO]uH-hE7J&E;(-=KB"<0o=`8F?W6%.?t>95:"o+fk0:\aXq:MC-\fk&L+S,=dtA/=f%UHg`otukY1OZI]u<%OQnU`%`t-"(4EQXNu!/NR?&,3[*hI&52+4NLH`;n7u':>%bX[FP]$/2!I;G^?%Jn^f4uVV7PPNk*O)=#hMa"S;O"L4\8fue20?!aRi3#LhRuo:cm66[DG7TXebNX._;#Q%d/jS5-Zp'I;i6KHA%CLOqn,+"#qZH/4Xnb,T(3m#qHV'Me.5+djLBmdj^!925q+U.M3<QsPS8Ypq,Y"of$UsH\C)VaOal;gQ-3oj_QHPdj8N6>4a>bM\V%&IiS'8`UEH'4-l&m'S;h<W30*^&4a-3qJeRdT3-4?M\/n7sGJ1H7QP=cpA@BK\&mBY>GpZNV]I&BGGSGQ))jCk]Pj'@A0;A=m8AI%\`pM)Qb1qloM+aY,HRT7A9$46/s10t.J'EY"G3tE14a1geIJ-*dNB>2?Rh_<m_]s(M+fs`M(-=V;!iU2BQaQGWW]:f*MapKT:5Bf%HpUE_DQXL!4*+pH1UWL@d_"_Lp2c"`a:aIs"%7YsU0?gn,ut`5(-j%4EAaR<U56"q2#K0UM7stoPM[1YiW>cG8X4eAlaE:]^@7S)%daiAC^$s&cO7:jsSB4BBX"-cQcj/fk7UDi8p)<T1YK89Vl7,B%J'i&a';,.A.FQL\<B^6-%$?2@D7XuV^#3UG.Ht"1MA3FYA<7<n%O7X*&@6[I=V=5l-kTtF"Q1=n_mL!-ii'\S0^1&)m9KE<1V)fSE@'lIQR&)O$Y2ne5gWl=^-&@`fF`")e.5?a48^,[aE_>5`a+f?L%WeoVuC#0\?e\S7B^p&qo6UY&;8JH)rlZ%G@>\tpH.>lRtXm7?0_7(RZhYKP\;IWt/!=!S,jWphr06dr8-n;<.]o!IaUA9[WS&Xd\%il1OJ`82oHX$N=F!UFU8jBcen8s1Xq5rtfq\/KRC"bk<m9H@"R)&gJ!I4;,e0)FqZK@QAdrgMJ(1!PA/=tn)V@8)s'iNuP)OsiD#%@]Z+69XZJ40L9b0Ud<>,XNqZHe+KOmUr7Y<-8Ci="]`8?O"K]5:,T1G'Db,$'+K@OfG+%6_)X^YWQ"W$#UVpGU8->K8oCJ[SN/$M%F*XG4Ta3Wh7q`0h0iNZ)l1Ik!+*%fp_'n3;a,\U30Zt1f46a@8=JggLA"1Q8+oX!t,`:2k#%'Wcj>)-,L^Ag"&P`'ESY,GW+:+I_%eKH7$:,Ij=>UcZC0),kL@`P0-MP8pm1l.iDU9/.&OWrq1#lb5oM#u6i*,#nMXX)Rd+/C,bMX2.BFJVcS3jOXQL.YA.?hCpt=<39A%(CMo1L/\5f;*tSr"1Af4J;(5K&0=+t6mt*BYD6!U;nA?J#u)n%,U6=ldXefZCe4#a8jJU+fEueUi"-pFY$IpWM<j(5K]k#O_1r0%%kn)gmcX:OP7KUfo$7RUV")/B:7DOpppj$bS#G5LtUlc,WTX?2En0e"0+ljs%f"o^YQRTYXp8'oSf)fOe_&\(sCD/_V1['Pn(FOK9%9<FG1c]6Er`Rd$cr<jLSd%a_Sfg7eq+f-X[C^'.aOh")hQUEWG@BUj>:0I4_7ioiS_\j7Kj(^&89q`*G-(8a1P,0QujB7O+S]mp<%Q,nAZ8uhds?@2LALNThoS]216CK%DY_R"jGfN!\</u=s;<p83'$SGFN;M@;*7l20sI28V/FdeMV;8h"NJkGL+c[NY>+`ohU6Ac@U%%^7lfViafs7=O$[K,CKB8rbeCJWDX*8H]bu2O#2f.OgIiM)K<j)C_D&"'gJRYX4Ri35u+5$m_3nl,(hMYYuj<2ff&GWJ[msUUS[)%4s"(s1:>EgH[[.a>T!]uF(SO'I.[>.I<s_7WOkLr(0K)[_$8f;kqLb";@#V9@$V7qYZ=16#e1<`8D'@%m@?"5o!F)b-?PK.81>s=%V"bEUf7\g=-d`hXZ+W_$jV'W-qbM(XDQDUg'_YZ5],E('2XRL/)uf5AZuPns?Q2aT=Jk8?q[+I=RM-P^dh!n+`7I."mA8#YclX%@%J2[VAlj?XJN<pi&-70-`@?;0_&n,D_@]bk04FUIq94<FG6pqBe3h?SQR%_l["NZ@/%Ir(;9'$^Gg&YkE`+7gG&](?H]J(RcLfFi;%G#&7>Ep3&@)[k&ANaA21[E7KVINkQs`@/O/RJcgs1*c37Lp-\2F^N5a0%n>X'D,#oE_,D&0;f#<6;Iq[!_90Jqt.BS#>nFH*ttX@%1(!a.;M%;MicpU7gK]BM"De0\fM"Wj"1SM$#7(<Ba-_O7q3p)0f@h!#fK"bCF^":e;Mm%_q*[V;(J0K923F)=%Isq(PgZJfW,H*\%.UoCF0e(WkDi]Nn<iT6'7LlGF&Fn42_:/%1'IHY9?rF!^,R*KKC#Z]oee!lmV3F.I8(GP"J`oN4d8;)j#i7:DiaCMKEaWTBA4QiA%17THM"H+dA\3c6P6R7p`M38EW#')jt#[%g75mlA8A5rPYP7Xc08\,EA$kc6kX7XpaU.W9"^sSPE5!=5*&96kAPMD6k^dj@j'#DA`%@u/l7l+Q%R"$VIpLc,f7P=oQr%9m4>m-Sn"]\qt[pu$nV@D[][K^8,MS<UQBFh.%E.haun*VT6(B9a5R-p8Oe`R7ak[NODbR7tN:%\a=AIF$dNa1;otFO)[l\c>Yc2/99+)h<BU/&W\E<W'V/6(-kcdaflIbC81M8>D#%T.AcZNr)Sp_,\->jE8V*l^-rTXqjR_>\%bKG%Gl,5Z"Q'+^6/_,M"@gas6!si-,R>A5.L?/$N[7!L`7:*8,R@*.":-"+/dVRqq?1[_6/]g16/X/jnh55>!FGuTR"fPrK>7bL0aQ"=%)2#`CV(5-Kd$K=!#^8!/gm.^=E5j"SEHRPBd_D=eXb^A%=p./!/cma5N,TVc^^QVc#Y[?t/k(<-R"f#-Y`-I:E0mU;:`3cYaMXB`%&5mbZ'-f@PVJUAO(Ju9kJ&?:cK>2+\S<2Y'>$&hRe<"+QM#%\FgLhE91a9:c^@&#^?*7U?@_)sd0eHfs%.bY_`%Wis7L\l$='Gr>%!eWrTq2J2]UV&sn:4PfmnfjF=FJGYS]APL*T]lrq%-;?cG"R>VVLtoPb*sdsb"H!:P%4oJ''4hm$'qB@,ZX)-S;sZpY.g&uqA6gl%/@6R:KkXi072Y5W7"^%s`]XUk74-#s;%QYE:=_.3*8qJBA1DGNP-Ia"AP5=SG<76i4/&H56_Zsf&gWp=<`jd0i$3iY8.gY21YGZb%/TaS:2dB^P@*FEH2l/9,P6cR`VP0/OH5?HJOOTbVK-mIl/[Gkp_?T$SGTfm!.1u_0/qS:=&lUWb,7lhOj:u?K?g:"9"G)uaQ'*Ws%K%C-gL;!G`aZs7d1(@/uL0MPE"0)s+/5d`!bZqT>A.*eu":cdbG\;^U<U!GPNiXG-TorCO(VN<-FQdG3_6b?p%hO?s==8:V#h'DT%TY\i@BJ2qd8l+]=eu%C,j2t)iO!kVYB!/"o<;IEE%X9JUl#^%;,)S$;clEZE$Rf$58[p?8$[c(G\3c(roE]isk=9;LJId,)U`OiJ%pb;4\*fNu(ItE^n:N_QQ$_jGliWt`j.\RO_\#!_g%l7!LIp!+B'Dt+[LeS-eVGLc)%@KOF9eN4jZtp*q=JnLd,s&-V+b5L]la0rh%d:&hAFI9V-8lAUO'Bh.2:CCAH"O>efqN)oJ@HM#M(aW2]"g84seK)%r9H-mq69qW'(.!JYnQ@'RaIt($WmE#2@GRf(L#hI)H(K.%%70:BNeQ.i*c_A/d;Y:JafYKl"^<[j(.r\p(eNHD(D<$8aK[\[698noY0rIN!kogMrab,Zp+!_[C.:cOQSJr'A0_!ge?\e^FBa&hr%'PhhfLe)B1A0a.Jen&TeaVRK%i"NpOKT_fu5%PK2dID?\VX=fegC3uUI^_^sD,VXpD2AD)2%n[[82*YEJut,BCC2>3+3_:4V:f0R%+Mk-n4(,gX<gW]>nC^8R_'Z9%pC7-<82._8SCFdeL]j3SprfYD&5'"DX:nt8,&K!0DDUeJCD?p(6lKMZcKK%)m>DQ[KafZ0\;<U5%01oY>7u<&OL3B)?KO\kp+s[FBR!<F"V"+fH,U?C14brsj`gJP*Z-^6@:9.mK(o"P1V(%TH.9h><^*=#,@S3dZfl;I7MSmWO9\S[8%[h8)ZBhphl^`#,Lqf\CC=.ONL-[6CK"TXLW"Rr,gI'f+\&^n[H:9S[I$59WQaC-k2Kb*)WJY`Zniod[j6$R1d#m+X9^(=`mhqBij%Q-oiqMl75a&"jP,:QQ7SNc0\.nW6E$Ak3a3VsC%=.'LsM&3N4fW])s-&GCtaJat"A&6tI:"HA7o"F#kl(]d4uk3&1p+AcD(EM\oJ%Vr/ttU5INlM58Tm0g_p%XX+YWWbK9e!ErrPV$pGh&LahT9>i5H[=oYj$dE>l;V:mmU[eY[9F,A-p]U,5b<jT#GVsmHKYF=85i?I'%:<5"69TP-I\nERfQnbFP=DIU_!8[FQaV-R1lLpad8(2:F&Q4<!F<[0C5R[j=$0bhk(O977`>+geZC=)e7X!NQP9Se7n_HTB([1^Q%9%,[a\tUG_#tkliW`77THPJs]nQG!OV%cpC@[*5%&P9g%7[gh@Ou:2,Q;U>INc<mo[ts+j[e"r08FC:Umsd$S458%BgWhn8cDtR3%H"YlWBA7]EgNdGdH"YlWBA7]EgNdGdH"YlWBA7]EgNdGdH"YlWBA7]EgNeS-G2CnqhV!)/fll6*G2@.G47>IQ0*'YSQ[sCo]5uqG%)Eeq5R7R4EBlGHl&8?)<6VSf>*bhE[N(/-f]E2Ns`*25hC8)"lA#_bRC)K[(=""?'=':gYlQP)W"PGdX-d`'pnM>g6jICgfEV=kJ%;0!:DEl+W`bO$!#a_;H=G*L+UN3fWK&i@_pgQTc)VIc8<;V=gB8PWVm.c6Y[E=TBH9Tu!\q5ZVeRcK,@_b3(ZQ>s@@mnAq80N9O0%1G.YRCQFi03I?P4Z^jdRS:dhiB3N=.e/g>=E*>K600KrTN3fSMOe>9@\>$4S/nc-c:jF="Ou$@(<cBfgEe_tj@40M6ak>7U`3d2%%RC4!gNi`tCQ(H_M&g3Pb7OIDQlg7;>U_TD;K[Yp$FsEO5(anZ).QNV,3RK)(BiK*+;46eWB046rN,T7OS?NE(EY>M4CdpCR&W^<*%;fdtIUTeO0jO@\s.-ubg36/a1fG@D)Nd[\,Vk`<0A)@Q(6T+&Z2hG10brPKW_M-SVkNFk1,N$S&INprFNU5jfZ6S8JNd`33nr;Gg%2f^/#aGkWn2tDs`kVm6G^/6]_NLGuJe;SjOB&jmgUYi!fq*rWm2ekjs;*4W6g6$='NddaHj;YN*#j24l`NIce[">XXLhI%"o5GML%^jTju)cFJ>F$ge\+q9'IV+nHK/PH:7p^;%p;/YGd'Y$46-C!'e/j#;\Lk>JN3i9_[3FF]i$,U(jI7OBeBGGSGQ))jCGXEMEXMSbK%8R')S;>AT`%sr02Pg`2V=%RFd5"J1#[$;o!5GV)"9ieONWg$KY(VKJ4[D;jBj>G>\X^0Ohr`J4n?3=eIZb0/#,ZX'_R1hFJ)C;Z?%W)%`!<\[Z[8Lj[s?>DfGD=0:0aB%L=\eO*?jdR<:fPA:E>GicK;b:^2I?9J&BIcXuIn64$R]Ku%FXa<\06h?f\Ge"l-CV:V(6O;4%(0Q=>E64kl,aYM6WBqW$,8rS%P1XKu-_4"%0iM9_._Ua(Hh#"8i\^LV-T'3n!nG+=W3@eXBqd\?.ua$D:SN(Y!)1F8f#6+)P)+_d%+<Akff$)tY+A!-&Rd3=5bcGImENqGNWU_]eXTAA,f.aP_7$G'Z-FMdR$AUa\CD0dQ"dcA;ks?Jf,8tieP1XR"-bLe,R&d85Q2X4U%9jBXf@=]cl@:`UQ$^+>>]NnqH3eT9jQ\Dh2RgOD5GUic)LM1,4eWuASK)-T1d3'WGn7kK,">o9;O:lUb>")]_%8*Yu$XS2UVFu%P%]dB2TFg.iu-S$+r&RO4rZ7VG;---ec+;rSJkp2(57W$"TZAH-g8l4bXo\&dP_Y)#`bG,U8P,W/K@O%4>$@*7qB?goKN_gA5&#0J'%Jtb4FdbkaZj)&@!JA^LFO:j?"NDPGS(6WG4^h]$-!MDe!Xqqd/j)\Jk?n2Dj#-P29JcW$*!nOu?J\r?.Q`26u66E!Z]Z\81AB5^S%"Q?o%5,?-PU&`f`eQ7o+s.\,*`t7=>j3\+bRRS^dO%(2a)@fo,,8B5(qbe&*fP@4DXX&c%d6.-ts4dFZ<m?fg\mJ;6Tj@pKYY09!%HWs8Y<e3MDUEa9`M;bCq"mQuS1Ua-0mi<:4'cFRDl0]uSmdiRUe;8,*MMQ]*SLZJE*A-NL(og$%/\d]2Pndu9EjWAM['SSLc'157%l&BjUPuC2$e3_Q,m>W$aDG2q_UNRB#f'Bte6829IlKV.sI'f\.C8boXMYV8CHu%l]q=Y]a6/,Mf@!]#_Y`XAfB<hK#c_T$&jQGQD%NK;8-DsY:DN,@AL?,P`JPOY)GrOMgFh=5rb;;AAJ\[AJ%Mk07n7qe<5qX_7>19/]rJ2*rcjU/!aB.Y1T2Pq8f;*2*aIYKn\ZM?"a%B2L)bOXnnHhotqi7>#4:0pSc^=L-Y`qb)"k5%BjXJ23n^aE3]q]kO/gkQ7a.TuIh8bbG+)G-KfY^q91CU-$l_:+^jtUnH774VGa#%39MRU@_0O(ms8WYn#A0L1K&\&hiG^4.cX?a=Pi4C55,V=C)^(ZrhuC@npP'4XtlmOp'UfK_T,8p5`.nhb-^7hZQ<(FI*MVDoaAXi%:@@nDd<0T+`2NS3^_jCS'Ns$81/utp;XjG[ak8`Lr/GEnijJP;$ao:K_A1SQQstN729ko`A#Zp^hNHLDDHHS]S&20qn$CG]JkA6B%,*k<HIe/T2TR%`4+etIYW5@O(d"pmfXmXEMa(be^']N/j/\@GBc(DV,1m^&n/9\J6P<8!=HH10jhW?6X6kq0^kVDQg/JNW\@TZ"Z%N@>*^eBVn)TkW]gQ3("<r"ZTFW!mfb9JJcW]'*C7BO.ju2cl`ODPmXD3\T&=;5=@&7P&`tNF`"!TLNIDV4jI5mQ9m5V_4A-jtBq#%7&;;"Y"W&K1[B5JaS:04$pN:IOYCs.j3>*@Wc=b*CPi_Iqp\DS&&Ft1`fu*?C1k!P\kEp6PUW5X)U=sYjCiPtLnTig.H\ZRf.WuG%dJ*N*Fj+c7B-ZU3Y%^k,6aq2TN%-D.7P&`tomT?%eYDCAR:+-MV`'ucP3?d?-5u_`rMbL3(.SO-ND*Q*1[BAX)nZb7mmZY\q9,&e%%,GpJ^-EnU65<\fLbWA4kc+-`/uZ'1Q/I_WWGNtTB?6J(J?8b"_FKNZ!p\R.@Xah)blFL(ShukPpGHd]Vo^sFd/A'[Q&hd`6`<>J%_Mf)M*Q<GW9;rt$7D(,a/04-%7NY<GL;6bHJ&U+b.RVb-[,j6QVD?KXiWZq`ibo+TmW1;M*D9$ie]q0*'1EWQJe8AZhfqbr6e.0q%#(P,tD,XlT#c15VN;h>D7uO,DlIqV7I[kPE^'<QW>ap`(-K?m]V2o(UomSk+#0/o7dRQ#k4sQ7oe/u(SgF6dVQq3EGrMbL3(.SO-%MbI?(1[CP1m`2J5S'B!"pRi%hcVTSDqX+ii\tJ?.<.dDMB/[q:R4KHOkH_OpJ@[Y9QlftsjXoo,<h#/8qZFp;.)ohhUi0ZiRV/l\%RDi_HS&MC$a@H4)X>MK#qSj6@j/d1u9<S0hdrXBtYSHur^#S,*0iSKPW0.Y0LkVSl1=HH+[P>2JO4pRm-;P&])i][]6W\bPiM.\L%5:Xf"2l81AR5HS:;l/pZm\eA)2/EM?SiM+"Dt.@;U#f%M6np8-7FlSt%@&iK'`:fiZSgu1K;i\d$JJW^L)M"0b`B*U1(m-1@l!nW%2X83OQkac+GtFmWW(`,S1+)=c;SE?p:G/ReR*9%=hEO$T_.-Nc6si]i5I9k,ifR!D\SQq5c];/P)&Su,e,83G[W,Y%l'em"kh!YL%V-[h=hIj[(N.)WoD+lDRj#)S0G!D5Gh7%>sH1RBMcD!)DfU-,sceIXL2$HW)WNS,Q$%(rb7",+&6gFPe+&_!GqiL[RgT'_3f'W*X%dCQ%?Ml?"7I?U7n^+ZFl&Z+D<kkbpi<Sn>d][RC=?U/*GMV3!p:B+Af'DfG#Q<rGbFk,aRVSP<A?Vht&H%"T(3IP8!>,UfoInp%9%qEC[e^<]JWIPYcCjep&K2f/6?d)ao+qit#Rh\XJ1mi*`p9KDlPo_nY2DKJlFh`mi"[4M0gToP*]k/UVoQ>^7LMnVDG*1X_rUCp>Z%\$6==mi-"0-<Lo7RD)HA%WkuCh`mjM_o==!^98r`q9$)+2m`3]^=BW\Xn##We+[Eacft<bed$W\5\2/i_;1jS?TaDUIK,8_e?\<8%L,q8fQlYAV[!Y`8S?9%+jRdj4Dk+NPM$Nmk8j#rAKkXE^Xe!r=V[ruVs,-6oZH2otW[lJgh><]UEC-MRd2LXuNNjI0h&eC)!d0"F%kR#ae6^<Y1"Fjb6TCr'Q/I&)Zq+GC6;&SZSQstN7[Ai%[9OUkj'C*;HThtKWQpTV1'XW7!Jd%#\Co28[kikKb:eVIdTiu!\ns`cL%rMGECrERm$>1?4q&\-F_o+qZ9[9Y@jh$9rt9JuTLeGUPc%B'qRd@XUT\e!;u0ua&MlTTs.8OS!,Ml_T!c;)R=9_IBrpqmL;"s=f@%g)h-@<T653omju13:7GX%7GXIFPjfZmPcNX?e*(LfU>?7-E(9=A13Yte`(.hT\@E8Jj1p[?WeX+0W!$$69C)t;2AJF[esagOS"=!%6eG-s&LR*VHCdgm^MnWqk#W7-IV"+B=?G0(S/a65boa)06tN=20ua&Ml_Nj.6RICZ`>t5n8_7N>7YQ&m32,6'g;_Wo^I@@Yif;L`%Y;<[EMq@b6"]\oc[d;j^_P,'D_hsL_4/HHn1;B.N5itQk&7g5WV2Zo-Ino.(A&T`]@&f^2MKTc#TuP(doAcoP#g_)LEjhuLV<[t.%TgIpd,-L2.5kW2$M\C))keC*&[>KMkqF`4($`cHf'P)W'g@C_9Rh2_X[28](X$pN`_<RgnW:4-_e2;LmW4XkHi6Mf0\O3<]%?F]b%kDuo<"k9e3`V_]2'uC?Mi35'Q-*X1Oo\"&tHbgBNjE[CfA:at\E7jBb9@kJWdcN4YZ3Z:Z;2AJF[esag-A9i!;Rru>.s*^N-hLKR%K1pNn\Bdj?#:aXc3VZg3r_r5SPRJPZT3AnS&(Ij=`VeS(R^WR]_ogG9467+U6GN0IS^;;gHRJG9$F7B$_(sC*5gdCG%H)s>qtNU0%e_2/r6e08bjYsM(+hZ`M%@b(A9i<Y@*]Duji,*?%4A]U!.`%_nqMW't_,N@CGZuCB6_,/pb`B)2+ZuN0%@_Nr9i<Vn$L_a"6GK3f%_D`fDd'8=B7%lh\QeD:JFK@&DTPA#kns`dO&>&D("e0u;R&$>Ho>lUZN/oBNkCKWP;[r`=d%C![#>A_#LQ<iOAZ0BSMYV8C.YMH!%8Ah<YbpKE&/UfV:4ekF!jEX+\KPsPgTL9\V/Sm<llgL3*f.4/*J813\bAV!06Fc?X^nuMfPLT!EBYqB.J!rJ1<8EpVnE5LSlWY3i%ofpZml_R]_5[>=-b`B)2+["M4%qj@*)CDFrS]YBXHcC^LPNNBd'#$*:JdEN2902%LR*lTFV$$]R.\QXX'_C@d<=$p<q>d![=>3<0%l_F^uhD;#mQokmYgR)16kCro2',HNU*RS62e-CoS:_pSrD>DGX9aGt+)E'ZE%4cPC=]FA9SSOGPJP$k[$N@]bDeI.Yln"SiGHNMI%TZ4tcoAcoHeA&MTd0onp0,47h1SLG\g'IqV?S,UJ#HA"U-iICcB==!s-XFj0M#Po`KRU8<CkQNKDf22H69&+:Z@XZddU\O;gq\nG%DUAd>XA#40W3e:Ui6M`.F5%q&R_Y.WoTod9BiI?WN@F#a8*lo@&U"!&]_mhcgV;n4^ZOXmk2jA?jhKs>^ZOXm^ZOXmk2jA?jhKs>%It#YcJ'H/Do_R1Pr7AUZc`_WiYBfrIH24Xhq6,)>YBfrIH24Xhq6,)>YBfs#htq1qrbGj>CL7!U?N.F$QiC"X_'8E=pYGMs5?5,E%5$2E<HX8S`(3Hl_[4RkFjaYJIL\JW2%WSCoEc!_tk/m;b*ka\DepXbB^26`L]A:hg'j2$EXbpLEO/-V@+qh<fH"ge!Gs+QBGM0a<%*9)Xr,O(9Q*OZ,shuYXonW`oRp5EB`OJbR/3+;F"X6mI8k)f3pMA\G/JfIuacK:775OZn++SYKqC`ZaEQBAL*aSib5Rn)'.]K;TQ%[_1c5gOe5,]<ccnhp8p@/]dn'4.Aa#[\$:H4S!_Vn&OI659A,InT`o)@V@lqYl.8V_\I2U>p8qukJoajhtZFmoE['"Z/imD:FA;W%fEVdT^CQVt[Kg>i6lll[isCQjY^lBC?m-c]KB83fO`NW-a!:/$5[Fsl[gs5a^>B1=+o;AI5@ijK_/dVpF6*&2!]!!2,I\2L6U%%c%[h"cl5+Nq-%i18gko@6^YT35u*4^L%*:i>6\UC\%o'm^MLN?E:cV]*M8+lBleVA3F+4!f23(NB+*4:QCe/lq5HT4O_nJq4WF4;;X%;1CPqrUCm#LNCrecV]0O8,_rtNJDR3*m`5Y3(N$!*0#_p1sQ?e:O"?1]D#kY/;N":>5#f/nT"Q@IB_H(B^=hbK*e$5e$](bU=A.:%&#kmG(b<gG([Y4+:QJ*e;[WN&S_9g1%SU&I#Ce/G6W?=1N@F!K[l9mc;lQs'X3J[GpT-kKkG9#+IEKk,%Q,Go=^9O^Bro<bq3XC=%[75kO94ZcIRp"4as0:W9(*@27U\J(4,@%tErbSZka5k%!(I.A\b[Qti#;TjT/l.B/Qm8gT_9^^NS_U>"9==R$CEBXU\/j9FG+%2G%G=oTHR!O%/aXf&KfJHK9Z<YVGcWHr/`[*BWq9?!Ra]`FPen4NYp,n)UV^]Vs9s\P^9lW8c`fu*?C1fHJ>+(J[qK#eD<'VHC;p:</%^A4t?VAM35lda%=:JqV,^)s33mN=U@3$OPh>h6,nXN#p@e=Y&jUB7GbVCb$hRf3/)ZuC_gc,Y-S>F0`K@U.LO903#g0ZljaJid^Z%2G750/0"3CEjh?c3]Ee#*Tp+%$p">CE<s!OVYa1l?)rc.WmP/%9s/D3D5h;Jc;kpb+-FYra+\\KPNb8=3_&acfYeq$"]UIT>CJBo%S%g"BV'm'aY\?rcIJ9W(CPo*\,oE\eC;#$U8fJgO2l7Mk;*2*U<@jNEEYeXN?]1k5\i-FQ+(sEVB978nS5!%"UU[*i+tL74SeYc$%^>7D%p.,nJcH$,]69DU>C2IA,(#@dYlb4MlTNYm[o&Hh?B7s#gOK)c&P?M@OlcQl5gB:B'?6E9JHp;tlgs=.2;/IOm_&]p^S!F,.%8]uhH%n4GQP^tB',MKGm3R_63_.Vbt8s3?FMlu/_L+3(``gB6eXp4kPpIY6,MP9iMSji\)ej_7c)(8Sb%$!F/`K1#CLI_1cL?X8c%#<uR.FOFZt>3Y!^Sa/'[*pJ^o7Zj2oR%Y6/[.](C7h!p+VAB),41"%Z,*!m?S%F>c(6kO)\.EN1c(&M);bFqX.*a0Na'@AmHNf,A%I)22%68I>EjJteIN@>$\eBVm)HT7n8q9*Ga;&O+b9JJcW3bs4RfGtCT.5r:W5'3cRjL^*Kf1W+hop2?*=POiM<8X'hn42lif&Y*Y%;r.B1Ob'GFKufNnbAUue1S;1pE+s_ECp_hqatm"GnR$u91p/'bU4n)m:X2-,5Ul9"i/Cj-m:7s#Gj[PD1UZ_7P5^T;`^UY`j,EG>%.'HEJFnlJZlb$m8KlustG(WY5FWe[4?.OU^b^+!JUIJdGV4sO6$ENi[.;f'#*Bb4(U(FjjD>DGXC"Ca\=$m?RRjki]f6lnRau`[j%@#Sg9ZQtWY&.XsaVB#M240scqCJ:VrRQm\R>>u)TCeQQJcFWMWRS%1g@a3Ref9oK@o;teeU*kh164:d_aQ=BA74-UoC.'CN)VUU]%n/A<e.<#3k[6moN6KH:rjYsNC;V=5M9Y3B+kBo#%FE^P#I2C65Wlu3MKUK6L'-RR;]Q3`IR'Nu]eJ5JIdu`tRNT^#?q@WlPV&>:Z%cAgqEY.i0mksD2g+M"H$Els),;l8cd:\PN04<t+@r;HV/<]K[h,@[G6b-TaX")Z!)q#YXX2>FF*6nT7me:f421FK80-O/4'"+mYu%R^dGed+dF.)PXiTkg6mnG>%Vp>$`JQZ8%X&O4p!RbG)LS8t3SKFr$@:cAa:8a&t?M8^l&!F>'3PTWTG.IrM*EFR&'q,8fbCc*oBL%*Isl.`6&3U7m"%7mNO]hZM?$%%T++D7A_ZORJ"fh?d_mh/)<p4P>:+:e*(r3RWKh<Wht`[mcNk3;qJjZlGceU5AFi>biQX#.;f%s%g0%C0\i-FQ+(n<+*i;,^KhN>&2C\6iC\#b;V(,CEVGbMQRkQNX];66tU+uY4#o5&LGIGZ[dlF;2q((rI;&QBN9JJcW3q8-^'d1Aj%AV9RnXEIZK3/]DL[/c?=M:m;rW4"Fgi/cT[:!*[VUnre7LB9k3ALM)a9Nus%l^ONY$</Q(;iY:uBIJL5FRFt?hZ5jQpF(Vj$Up2R%,@[Tk74)+HCBn(1WPZYC'sal)[IDT'W.=.P;p:</V?KLgSQ;.*iG9<+DP4Mn0fYe^W\alp@am`l;lN+,*n<0G(Aq#kZOIta!g?Bh%J3Q`N5ZEJ)jN=jk2m^6oq3=\+KIhiggEfMFhf6nBJ!GK.h<>MB[GK8Ye>3ZV<8*.+E(B<>2RpmO9_>TtqGRbDX@p=V(c4.FQlY?P%V%S9LeRI\g8M@m)?U)<4Z(0i<Uc/<J?Wm#>S6r\f3AD"*DrSg0>E&ef5[IS[4u5^WJQ$<Uh0Q0J-EF(C4MB),7c40?1f'(r+nYZ:%fin*JZn\E8O4p!r<`'$a:/HO,9Na\]5`LaPk/UU@))f!f%Z<;NiP>q[M[(Bmc``2*m8?X.i<Cb8jM;7t7V%)sTq)Wu>WeAS-66KF%57GFP.RRA"`jFjJ9,fn=7#(,<dfFYr(<Jt5M'@f36lHpU-fNfJ)F<JE.0k@Pc>58o%ON3\LHc4',:]@HN@F#a]Znu519d"#rlf5^%5,*H)p*&Pp[gsV=^O8ZKrp<(qpM[*[0+13#o)2hMBp%j3C6@sr!N&<"B9\bORE<YHf$;D3F*XZP^(:4I:t-]H$`Z[n/\d^]Qg.T-%KM=m,aS./h6GA5fC%Argb!o?^]1'G8:"&,",C4Fj-KKM@SJtGMNcR+X*o\M_W_#Ok<tPN)4erG+pPOQMY=u/ch=U9OLls+B+46]Z%2^.&tW^`j;^R;Krl=Er3fa<cd3;L9Cb/sBP^\44GDlC6%e_kA.mk8!p^rc=`oQQg=BC`a0Y)Omma&t@n/Fr#*H@L->MhEQ#P!20,%]P#-Vh$XER^!a\oXHc`UH^Z0JVVGOpQP^Lo?84%[`4S(_"Sl?R?.`,?2:Z#E>H%6,GG3_0Wbk-U\FZ`6BsL3m2Ko^V/LCWECuO&f%Ri/9HD/0QJ7FhW_R_>dCA=C360B=s:`Maua/GciXp#B#"Xr[U6$%>_DJliH1"%s/RhRl%%fSp9n.CYegj1<>D7!*66"K<E?[P>2J%Dpdp`ghm\j>P.)"'G0XHjf8iXC!1F,?/;EP?HZrU[<]-n5X%u%Q4?lAGZs?^C@+9_N@>$\Me[`4V1OQt,J*K#&LQ3NC.+e`*TsLG%L:"=X#XGUOOap+G2uV)[FJgm_dLK76R!S8b2>d9lY__>is5<@Yd*>W(0FEpme!An8)Z"j5[2GM%i4\`PBJ6D/376U68q:SnTX5<-%i6JCsEtZbu5'ureH7N[k$4-hm2PQQZk:EY,<7R/UJMUNhe\+WuT/mma9LUmu;sbT?6mc"Kg6l]*cK2a0BR^//Am%NK77!XaU+O!$%R7es.\l5fWB'Qd<p8UbQZ\Ni9c/)9BA'2W[e*Imqg!p&cc`,O!P!Dja`YA#kQarE`Bk-`?B9OnhTT8=l*].sIp-EBtC.'CN1>8..%03^V"c2N\$Y^(oNlkK\X?CA8"B%EhsB2fthVDU^fg1sh'<-o<$6+/^Ofn`7>kCrf7,su(?Rm6Q//LU^l)c=h>F(V\HSfC<W(/'pr%*tule#KOc]W31VsnQp&^bq"_N?-l%l8bV`J"T\I7KH^HqI.DsoJuK,Nb\->VCZ76(cZ9<\SsJPR\NB>Q(?7Ck0jQA;]EbHQ9I9I<%`-YZE8=-bpnc"@De?Xo)L,q8jR,>O"f)B@BrL4JcBi-'W=W"T"94f<1dh5&i%:9dte`+PpT^'NrK0M$Gc_ZdW.D9;i](rC?B2KQ3%g6c>uS@+7/fiITqXiS)CONEE^bm?+1/RH(KPf`L9A<q%IC-!:e]Et=fUV#=?:4iVJ7A?.ikH*)i2R@E^q$)FAY1loA9#kOE&DVhO%)cI.D]QC>]:cYDYq858LLe:O#>a`%uB%A;GB,%8ZVBmN8P%Q@.0e#8\35l#E6^]?@9X(0L"ZHA(F[TqbLY<FFAZ-Z,@Wn9J$JW*_%/Y+\?\IhOZ^J>\t+JXk2X7h9^)bjObH-Q=P=gJO^n`8ma>:YV%0F1fq@U:in;m`ljGWD7P;jfJ6jU2h"H+*0DW9cdGN@4sS?E[-[%9EcbK!>PO;:8e="d+F.`G+:ASgY#&;bp#NZd)`O%e#JG"D'Tp$4"u(odD$@KYU.ED.lbt^qFNT"Mc^B4d2G[!BBElRG/?$7d("4@%IOO7Q@"<]d`s5Re6`#bk"b0j^:V&['0r5K\,qS\,;#rO4VO/H</UFk[[g=tKD98#^gQBVMF16(OWU(*P,*Q06O-6j6p(PHA4#4Vo%p2*,qL-df@[,q$7$P2c#3k;AKe<XqR-;hc3+5R]#olIH!^##IR`fu*?Vq4kKZ@S)mV%N[&JT_qH:rgQioD9bUX87YCqePp'03*IN%c(=qpo)!4rr+l$(C\I[Nc(9F0Sq#"VJ'FR7c(9F0Sq#"VJ'FR7c(9F0Sq#"VJ'FR7c(=r[!rQj-r+l$(C\I[ApAA_"r+l$(C\I\h%fBi=bm.pZ_Zfch\AlOaJ)5"f8L%`]erL:rW,1:tI]Nt=4AC'lI;c^7);Ytrb-RnP[NMiNN1P%:Z%ZTtYmK#1p\dq>E9)Z"h'5dM-%IuqG?2qiQ0IZcqV(]#W!:\#>%2B!R[s0MMlL7eJ\C\R8i0E1@_cFs-!^DuT:]]c!cj&LMDqNq,'iJ5UX3Ahn4r@,M0epMG6J*N*4%"f[!nDl*5"lqdTQF?c>#e%W'CTDkrW?V@KsVu58[%nHV^hg/VGd6I<U_tfgPa:BO8\n:f:rd(`^T$+<]f?*t>J&uVA>#(gjr?He5%i19nWC]3M;RJRE_d?k^_hZB_Tf_?XN)h)P\VZT.(lVCIb,<oH_r)E2beXpFf<8aLcN6pe*:Y5/9V%FhAD#W&deF?HJ5FqT6oMO+S%a+F?W)Wc^G>57?t:[>9a`Jt-%fDeh?drI!S)>Icr7MgL\a.hQqe8QrgN^XDtU>f;)oiO$jM\_=A_m*n6=>V"U(61i(Z0:.KF<$4Q%*fH%gdDN6Q3#4XsMh,@m_Qaq;(*afWJR^Fc@r^F/fF@HXn".G\pqQg+Nh?.io^q`uPfXa7h<Cn&3u&S#T4t_o45cR>=8(\BqU-BJ%;44H8(aBgQ#IBBO;<Jgb@*.!FCt,RH>5J`*qj7M9C*A'F'i8aWMYZeFTo"!&?a;SZ`HlsC]@>NsF!q5qTD.Y1[0>)=VAB),41/4m%`ann45F8cHKre3`g@C_9e!/jSnrbkH0%Q3_l16?]EEUa<7J/&YCfm*56.TX8f#iZIeXt/kUB7H69JJcW3[>[h]XtH!B5oP<hCm=2%ehk!Whq-r#MoM2h`5fEaABp=cP"eW'(,&7Y/D7gN+giudh(s6U=,"/km\`OTQUdm3-j=hE:2S'MR?49Ao;P>Y!0)sdB#cppqqEE%%ZEX.$YO9l-Kk]M/*VYoc\KlSfgB/*?8D7kqX"da@k0GEW;'G6FRC<$*eq5</Lir,"q7X8n:VAL:N-0#c:\d[`Ss=#QosDBXSnBQr%604(T#Ck7KCt+0?FDR1uL4<9SC>kr,;#tfU9JJcWR]<c5)sr0IRe3%1?]r&bnf?37oY/Zr,D=22:+uD>SN>_:c;>D%=BY:bJi7(0%?ga!Pq_`(-[(qLlUOVn*iE-M`d4.f1BBFFp+!n$l_WE&T5JqmV9d).:qjO?77=asKPCp@=:X3S*$5&G$D_><)$(tegM7IWG7:3ia%b9"Fm[eg,@FPfrH)0[bqUG<RX0h*^<&FIsWL7q(IJu,-2g!Y:gdX>b%G<Wj8>522k#=D@E>a`%uB%DqW=HIlGQGS(=D0+tt`Hq"h%pP"Kpg5MaV7P#6:'hln'g/)?j.`!471Y_ki\J[RmVR6.lBP10[lJ.b9I[p*0d7rXg1Tm23bh?lc[6'8Hp"?H.)3nE(N*+s"-[K[T%Ja*i(@-M?:2Cdk%c]@U\buq;P#g#n#n8,Y[N,SF<jMnhbIT"(,g^j.qJ^TfL\P,i&6Qop4aJi4GGu3=AC@Lrrak?+]A>OsEVejWc%>%pA/\fskmN:X_iSb:tm[bTca1LIK5M;uX81L9Ti^)3-7+H8*b\RR%p7RH^FE^hBX#25L4cLeUQ*)k\k<GRAg%+QQNQJ]oT[bp5V%oOW6Qfk?54Gn8201V.L<)4c'1b_!3Y.<]p#-@H,llGceU5AFi>6gd6MZKHi8F&*=)$E.`MMYV8CpHpjf'i4D4]W5H+nrBD,Ih0,5%Y!_%SV'tK1f12OoalZIrMG162CBn(+[g\YpjtFWE7:iF30ua&MlSRMQf4ijG=t[?4B<`=K8todiGob.]2#L'fGO@aV9FECgnO%03%1?;V<N\]dH_2nQ>a+o!bL='\"-0-k'bZ#O)a*,5\o,N:G^T$p8PSr5CjhL%&7*^L9T7;u)>-Y$bpN3P)p$X5PrVO;0H_oN"I9u]T%nsb.)]nc<0iVtq`iq7WdLiVWn't0=V$B!lfV!R0\W-nW`(q!2IpS"&k_a*mSW<[q&c><H.S'Vm^9W:I1C>kr*;&K_'/(9gAbkgIo%DrE_/fWK9*_jcWLW(*A`cM.,SG9g.Z7:n!d6;_:])`UgNQr<EDmEAW!=%]<!@n_1>QdO*Q1=XsD@Xah):#PhP9=?d^>,o4_.Ai$k%:jPMBk.2DVoMnAg<bM)]Yu'YVfc#Yic*sH*cfa:1j)o5oW6M&IMO4UE7Z261,$]FoEW6=lWVEC3-!gFJf1qF..:?i(j=7J@!(`+i%3V^/>QmpA\NcClY-<V"A6m5'nLtTudWQHa]9]CHE)\j\KL8G.%B&tX>6QjVO=qZK*hEOlHYZ-Z$JH^dENRW&oDYah?Cb55fT%#HT%$qI'>McX&iS1%6<K:l)@lF\_509V@LI2c#tSZWA6#O,l)ZU+V@#?c?-#X9-W[Xe%*Q8sJEh.QSj2/<;qqL;7g3jkSUfCnj<?U)ed%!P7`u'1hdfho!s>R[TQ1c'(t]WG1`o7Yp%%'+Fu<l7g6j=NmG0mRCg"]-hg3qm3P(7s=Eu#!*A0NF?R0flEfT%hd_id&r(\9##Qs%W]T;RBat3$+ql`ned2o**AZ.m2?t[nUBEf*)`-:\MG@jmak[h=rMX-GRMguKcH$UhR7Z!*[_+\R=.df30i0+kn@p4,[r'BK3"l6D%J%gE,)R0%O<ms#D#5M1\g^V1eo`FmTAaN,t4QrF/BQ+B7W!bu6J^PajMlPF/gh+^kB"5R^2!X7Dhq`_M1[@Mh+i!W@GEd=OThSCB%J$6,*>s-mOb]#dLYPXJ>L=-hJr9)m$,EUfdf_u4!^/@dOVk-\rN-LejAfdh^j1'I#XPlmtaGMB,N(DJkB60Gh"r9"nVtWt@*BZT$%/7er[C7%MFUG5H#/2=&jB_kVeBqupo:=Mu3]heo%8GrP"-mkZ1qR[U4M#3N9RY.t4d=R^sM4)fJnS8$/EmP/>M]4Ot"#D0!$R-=G%/K7<EWm&cAT956h2991U*D*,SfU?A6l[Ip@hegH8;lq1u3GN<\_OuD4fTR4aGfna<C[mL&ONV)e6sggXnF2]pRdW?7J<W\@VMd+1%4-'-f,^#aB,TMD4"&0To[kBEeZF&PHjsI+-o>P8l3im7k0_TG4W!Vu$bE`gf`J1TTf9Q=V-CRM"V/]cu_BMWK<s=D2VPg@ZW0e8i%;Xd'F+4PC[3I@TZ,q9Cbi(+;6-Wd-1`JhkN1O@pX`0>#9M)*WXVegSJ&[g`0&#h.qI7S5Nm?aP!^TH5\(tTM1jnmk?(2\>K(2\>#%K!m5/Zk9.mc>1T[a#qs`eWthP[B/)fJAt%mZf@RHp1cTLD&K%I[`nYU>Ljq0[Oe?uRCotEmEDH4H>P\;o1;#\=gH>8C!1F,%IM^1%XA2t8V:Dqa<>V>\6\:!"CoG!$jkqe*bGLP^[X:Mn??7u@fhf`/'_?[<E_Oki&$<n=nhQo1rh:t$#cB3!DY^"Vcelds*h'CmjmUFl%r'aJ+r;9VmPNd:N:YRPm^N8Kce6X#'E44'0"]1BDX5>AJ2DbC[fg'iCahc`+,\J/f!)_I_,rF)4%!6;J0fRD1WQ+M6mVJH/[%3@2%e"*%mI-=)*;j%SI,*UWEXdrCWk81U;b+$.^m1>PW]Pbqe>CJADY8Z_O-Z#dk6F54i7OYkcPD&pNW3S.Ci,;JU72uG-g"\l(6r8V!%,>l[FF#L/nYU;5CQTS&<[&$d^jtkA[?*uX4fg&AiPmEZXc(*M3O&H^T>P.(7!t^V)<?onWh7HXbRj<ApOZH_1o4U=!<40D$XRqT.%@@.";)R9G0`_[I)Mgg&pZc3./^3[&>To$ek\2K'lG^4?[0eL*NQ/eo7jk02V;f\GoAU6"/Y;7rM;Kh/h9$W'0r-qYF+8"n8RC<$*%ekh3oL2&Wq:e`r.%Fp\QVkKQ"CoFp"e_nb(a&"sZ.<#3UL2'R'lIqV7I[kP9!j'^!fIhHtW('uiP/i2)\Roj(0i65MPmNbog;,]B%;$5de"a=Q]KO[CB8//DjS.f\Rj\%YEnjP/)m9W=>KPoQ_A%JrC^$*IjBn<*4IS;\tj3r%l?8oS65PFiG)_4CQ<L/`mbY`N7_l=j/%E_5AE.CWGqLIBnAW%Tq!f.a38.uXCT=<"YiWE=\&gf?Z9pS&iNV?`D.r4G&?32:s3S+^Tj,\t^B8i$7`:m):<2l7YoGpPIdY80b$%(&]HNO.dgL$BZjfQJ]n)9'^1o_fd2(eng7.&PUk0G]&oJ$WPiI;Xh.Da[<Bm-+QNqr[=8!CoFTn`V_]2duCcX<\7T,A"b.Y`i,%_%Zu?aPZ6I:T!F]+MLnScB/D@#P6aDkY"<fZ2;`J51PT83)Unc6i'coLr"h-5i,&c#Z?IOH?Os<I,I[l^O^Hq!!ZBCFspe_.3A:kka%,N^eG/<FYD!!6VGii30\a\ldP2;+uATI)1$";XPKV_p6Yi-GR*aZXlHK3+8UKG9)NbD?iXKpI`e(+kpa!gVK,XBT>6$u*FUWb>';%QCj%M<KrJ#jSPUr_A[31?bF7qs)\%Ar,fMN-eR8u'Gp)u_'GR-;eq<`hb;ELf#]_u=&#P".gld:j+9k6A]Bn:i$hn)cD!$e%4k^Y%Pc/;u=ZYn].+6j.\T[\dU$#$dh#q*a\]!'1iHL0!Q@?7TjM(+rl)1S/q>#uOcbTRX_Jlq:9f:#4TrGD&diph*b$Id+<KeiIb+O7<%f:EoUHP"HFlG,S5&V;4,-O:Sd;Pp_iEH!rnX]Vgk`-`h(`RP'#.^/bVA,Ei^E&o_qFGinabNbc(SQL?U@f%[#G_7E7D);AB)8\(=%2TmM(WOLQ86;6?<PA.hT!eZJ*^a+OK@*-f[%>#]@`O*]!F..rcZ:]JREG6LgNU-+.SfJ5jJig>Ec9tum[)gXH+/]h%k&"(QB-\r&%Z1:0g74a6p34=2_8Z8`^&qs(C0/0RChnMN)T%ASGLi3A0in5(SnHA0M19g!8@5'&HQLro#d7ju![XDS51D/8^SRI]\Xt$^-=];`Z%p#oB&"f=_S(-Fl![[sY,BP5s[TuUusW!Vu$bE`f[Oj+LU*=D$k_Bb>F</[Rd0eo][RK:8Z0Ia<'i!IO[KfFF/`feX*.G;'ZMoIFq%ZG`:4Ln-FfU@S2M<W$j$hq+shf<!u`XQ%j5in(9kf<!u`XQ%j5in(9koU8eXRT99S<W&:cr0gX`RT99S<W&:cr0gX`RT99S<W&:c%r0gX`RT99S<W&:cr0gX`iFWi)P^O]GM4FmMcnh*!8]b%2>@ZDP_aaMk1q$6dBt"s4X3H#Sg!&p"\[B@sLca^^CU6#[:Tf3AkiJeO%DG]<]K0Ba1W"scpA8`r$9tY3<Aol%VBOe+Yl"gaur%a:g1n."`fCuPil"hDDP"#sWfG<Q#13,:6Ub5-tKPa!rC.4YsH/sCSCq7Hl%+KmpQfKA_R/oDQCk)m%LHAiNG"Zc;3@Im%T01G?6/]`"Z#W@`+RmrGu@IqPjmCC-C+T%`BC^s$(4Y\0o>EHmK+$#f\k.9[BC^]gf%13,:6U]H+h$(FF_ml2:_BD\+<Yob:Een<9hI13j[dn.m.RISKuK%#:Mm"YJ0m/bl]OiIRpGX>_N7pbEl=W`aU,;l634<VZhkOjA<%*fr55-6g\MOSo45+-G^gnpJMl<[^FJIQBtVn)qc.!P+gIZ`V<ST-LZGjF3-5[UrM4F(D_p\Xt+QXiU?XNp>XbWXn9k5+\PGE/s5D%3GK)fW'-`Ip2H&Gj#LibkGUP8U],4mqVsU$&*KlUStl:(Nr%crl4<'V5G"Y?E/qru3>rFkBKVl]nSjN.j#K.AcI%arO?_^'GjO;3%(6El4B)?:^rk'goBIC?6>[50Ik89(4d@`(./)0+eE@SjrT7_Cj@0:@<8"Z3W!)p'l"&%3GAtj=E4Ki>X\I[?X9+9lSj"X6bBR9=D%FiGg_,:%%O(SuO.EZt`pFrL)Pi+rnP2O_)NU/oitegQMJ'/<ibf&ErF;l#7qc"(b\>bkgrP(h"HGoYWf;AFdoBqro;%nPDfdd$/s%'21qtGq<+kjc\/=$o9f1&Uf(u1#AJ/\g2&<NKX!64escPP*])jQ7V:`ULf5F)bj[f;(FM,PfBJTQnK_#nQ<(Wd_re1Z=WM:Y=fWX%(F9M),EJi1j@];Yf'Y5+@nE^OC8E9<W]ZTJqJs,=3!L6>bD<=8Eep&5C,Rhc)\-*N;NAt@T=o:i'/_l>N"O5R_GiC8fcN\Ca95.*%413n<?7)E3W^!OG[IA1qTF>C_/('[=baIVe>Z^Np(FD:"G>P:97l&?+@>LI]RdAH"[7m<ATZO5fC8E7=1WH1;c[=^L>!.O"2OYle%qDr,Vj21cu_e,emoCt(9*@^,N/n[?,Uo^22GgqOCYi#YR:!\_0fr6cOmK?`j\-ttPg9R2.ht/k%cG@<nd69d$c#eH5?("'plFa"k%"ORI,5hJ>Qf/[RT8D.+flA?LJ.Hs?Xcl?-V,R-G#*0"CPNTH,%^<R#G22kKbq?7Y1F>#J3U_$7cMH?U#_'Z0+>%sM'==Z2l)q&s^%ObBk>Nf\?9'N5+YQ5:i?gc!\o^;[h\[eg)-km;UT,^$7WhK@>gb>N=</JNL-;FWf3Wbb?TpnN#8(,aP^]oFOYrY!pf</*FmVO/H<%h9[,)Fl's[f'atkk3/Y:0c2dkZAMV]:!4QrH"g>I;<Jgb@&[g`U/,_L-PmX-;qh-qCPShseKWJ.hoqOh"LuY*q9Jclg[9]>AM.S[%^>u8;Z]<P6Kqe%iRl"+#Qtl+\mG'+K4W9!QD#Odq=]C-e2Pui`B?g=lcM-&eo&o\BkKH*HdI3,.)QT"0EPWaX2T]bP"!!YCIpCpG%d0F"^npX9"K*-#i6Oq(W%RBdU]BB/SA%CLT]X@-(q,W4:^8J0YQ1!o%4K()6,bbQ6//0Q#Y"k#lT\@E8Jj4"J2NkW]]"s?iN]$T1%b<.NmQ(]aLA(pLC=l9/O4Yc*G=3>U-F(_7DO*&WKV24eRe/VM$N*%Kc7&?g+TuIh8?l@N*[Q4/CE\sZ)q5a!t;&QBP9JJcW3lt$^%$8:M`<?$oNoAt2:`=hnCo]I`<*/Z1gSW1HK",CV1;[`T'S_6cK,aF3q?2^1FNu%IE%#&M^C!1F,IIm2\oiWoGO(HrrH'jUEKreE!%J>3Guj"X,_s"%^b.W%j.pj<&%CgA*Z`fs[!V\X$F;#rO4VO/H<S[GdqAWo:'X>;o13T%MVMX0\\p0!bA;5KnB&^)1`5JEpj(K?Gh%Y]R6.)pK0Ymh5f#ZM?$%%T+Y^OXnnHhorZ17<QZi2Ab\IHh7%i`ON"-QG+7eDbN1dUNU7UXGs2qre`pD&s]/NN@F#1=VmJ/?)i9"%3E,)O*"$IF$0^uD5U>FtAB7hCC%l[*<KA#[#*s#+bTuAinYGA!Be.+H(ketI0s@!]4*:,jIV\#4/55fema*Am:@X^Ed[EMTn30:e%fgPlfD_ub47BOcZ2/A4"7pjqQ=ZhR%2OYleqDr+;<JJ<P#g)htG5#Z"]j:&ncE$OHjZJPili0p%&>,7M#$RDWX<)L3*gg>LBP4b'%6SMojS%ie,&=&r(AD6UD=kAkpfi73M@^asge0B&,oBh%Be/;7WV-o6a./HP!M$6m;V@rf(40qdQ0D-TLM<9/erm\eTMk^@=gmDQ"%S9;LekSIU4qU#H#-(d5B>k^U7bb7f"Z.C7gL6%^BI4;"=<&l-9/-jmsD9/W81"h)Qq,7YC/WL1:)O\&3B%CO:e>/+gT3Z''ik5*6%.0n1oSY_kKXIu"JL(o'-Pf>M"JZ0S_?%#R#1EH&50ck`IRP-cN/KVf7)pK+GI@W+`X."e<UpCNb.:)!r-@Y4.<3FoV/QjfpFae%%%]%MWgeGYsG9X"r41L$1u177@h&"S&8AZ-B4[esagH&_pu=bb!b+3rAIbTbB,ULP@]3NS?u64P$STXqm;4f3*RFnJ2*bbR*>i5sAJ%[T40)@]k^QMS?gM)#4VHZLpIjX3tpZ'k-7:T!#NtY+H*09MDc6!Hg/1^VN`f_3]i^Q>Gs4G"9XP#%OsQN;7NX*fCB(^+mV)3:!(6%OsR329Zh1,4D4,mA=AE?)l_#,a]_sG"MHn*11eI%D.@=s+13n/PNOKab3#n#SOKA'7'93fIP^:XF%U!6ebnY1hV7Hg6`*q5C,5VH%G0Z`B1j?"C,dM-X.'h'k!@hq[.JTZ]Au"%[pF@4OH#o>"b^qV"LdWsZc8k38hr*\6pYJ@]DE6$6AKXq6jQ67`9e^%M2/<C*5q])W%R%.`\?&.W)T/Ve0DZ6ZEF&@e=74q8\I_8.1.lH=qPVX?XHD.PYI<(Idq&M_STSq)eX4'J*[//e$KWM1f^0VdTM8"kTZ?R'>2OY5+%4mf;VX8K]CF&Dpd_F?U/89'.V8;d<!7oJ."5*Fq)[OU\l6T`CqA8"O%,5=4Dh.0qA\dL!)6n,VRZFbt6Wk&FZ?A4.%/t`f%@W%_+%7hab:<oI<gMAPB&%du$mqa<$a]*uJ-g:O$K`fu*?YJ-Wc6X8.8i(kpjIi$V>0ua&MCX]5?<?B'/\EiAnGj,Pr"l;:q:4Y@RLeP#e%Zu`8Fm!:]!reg^)Z:OJBnqoLbD>DGX^#35"G-)s9].]@JKHH.n._Jlr$u_fE&XD9l&`PUi(*H5=[tJ?/PG-9]-t^L[=7dZi2*]NZ%mCq8"DI/;e)!0h'Yq146fUUMF9[;)5cAD1;J,ODF4S>Y)^T?g-</.E(C!Z6rc9F:^Y%uW02XS(Cs)uS"#faID:.mNFfpGD$\#AlO%i<E6:r1WG:W!mfd9JJcW\j9VgnR@k\)<cePII[(`2"F;[E$;"b#$SXe^bW"AM,'&C?&Y[N?WC;R*lYKW'D%[76EIor.Hn`q;F#;4%%:80A(4Cf#GCWl0(_9U%Qtl-"M"12'2)0PJIqi-)GXGaU;p:</k(@@=FBFgjOTL@/3rXIAr3;(J$90Zirj]`q@f3(_\.I[ra*hDF%"(JnD\o6IhpR;uU)il0r@Q_ndcX)NrTk:4AMe1;q%FlY"$f8N1J'%Jp,KcLfN-5u$U3mQ(B_!miR5:Z(dfr\!7Lqa*qG>QYitX&'%qb[e;d",)W*DDRN:M].Tq)S-L-,'V.Am(@C6hNtaZf@QMFAI(O]b!D(%s7RrLD2ds[0$p[hG>d:[GWXXn9e+V_]Q^c^T8QqgLZWo%e!Ah%bi]Y-H<AI!]&lg`n(-e2Wq_8j9KP14MF8n<>=<_La?`caGO?#H:kfl-;p:8Cc4IH:B.mghW1nHZTnauO/I3cfL?a<qL4X#L%e!n[>m,49nIu#s1*9%s+[d7VOOJksu)7I^TQ18d@>aQ^An5(jq*2jj6Eq$LCn3_7Lf[2+Wo7ts$GXEJj;p:8C2PI^dk.)o0GQ4I;%jVej%c6t&uMe1;o%5f=C/-YF2$=E'4=-\UFT%0H:]FJj.0>oZqQJ]n)MKLhn'"08F,G]5u?\(BN!>-NeU%63fK>0j8:EhS5'5d0C%qGW:gjFK?MVO68Qbb&LhR`5k,i.6iX7@&N"Xi29AaAML/+^IqVgQfl3lH`,oF+mDQAW3UKkYEd:OpA!VVCfQN[7SsDn^;=\fIlFY%S+p936"#nte`%m#TZY8RJj1p1(O=YbWV#CM/RFSFlJ.b9I[mf<ecl",fVBHtg3:qGU+,.,02C!D%:r_T'#B+t(i7oa!`@h0iR*LT%$rnP$QJKd<KPQk1]HU.Z3aIUJ6iiYRX-:ZQ>DAG]W4F_6i6SIp[-LL&AXSrcJ:g'6!ErGf>oQ_dO0_mKRNt*H#_fBR)5h3,`&:7A%9ds/%=69s'R_(;jda69U7ERU+PW+*Fg*%q5[E,`:2mYCG4-r[0cS[3D\HfN)pJ%&79\jCIlH:^L=[`JR8QYDHY"b<CbdGi'dFXjd%iA2f,^nt$:TRlEN""<8uPQ3jP;:+*`#o63,J5)pSJ15@7:sXcm%+R;6Qlft3K&XHlo5.Fgou;P\mM'indgahcVY6[eRk7-A5$cQC%]$O3I1)(qYRkjF:25+;g)mjfI)/=p4Sn0l&;L,]:HO/n%V2Zo-Iu?).A*m$Z5GPi4U7!J%L)Q1&B#coiEp^&Kf^,V3]$-IF\YbV'%leD&RL['H4=Xr-n9s.+/PW"$$^(HW:hhYO@mk);b)5\n9F=]h[E&J:F9F@\=3)Rkn&0_.BW:!Jr@nOS0PNV*Q\KikZ.@njn3mg]t%!buOF0u#q^K;/sQ\A.19s&'U+f,XP:*;<fteGbosrgMmHRcFC9j8PM-rgMmHRcFC9j8PM-rgMmHRcFC9j8PM-^1[D5j8PM-rgMmH%RcFC9j8PM-m[7C&gtuI[gg>-X?ZY"0F50!p^ZN'+a>rZQAX=bWV<<T>bN;8oD77WOg"_T_NV:9FCfP>q<_N8GZMi`fSt8=).A'k7%c+/+?rOYQQ:T\c+-\o`K/e?/_4oXlQk@qnA0!KW^h4refYV!ph,BLrl+kjJL64S"Pk)jc<U3G6*jIpi[jRJHr%Eq::fG<PId3DE=%4H_$I7IRH@A0XYkG^$S"3OXm:bp2h/hOSLLmcWEZ4L3Hg,A15Bqg!BDO0&5(G;bLuH-[M>"hC7LBCj3YT6FpPOSa<I2NJhp5F\m&%jRI3GO2pj@4Il0+n[tJsUIUiYrCl:i'llKD+nmeUa$'^bpusWr#d14sjMf,7-U!(6jiJ\#,P$(E*`#>nncYcGjiJ\3"1!6KAqXH]%*-+/^?4Y-C!U4cQ_BJTa4?6r%5k[_/q1(RL130uh!L]S*Ok]!>+eR&BgZ?O#T?`SRjU'$!FH5-/:Cd2BNnc6_%f(4,gb)A4q07qb%_`=`XkGUS7U\]4qlGGW^O6<H)S>5e&NnVB2C6.PV4e/;@G`MX<3U2[gW'?fIrcjJ"_`@"CkGUV8U],Lu`kseTO6:1=S>5V!NlJss%)NX(FGW82`IR*mcVrFt.?Zp^8a??;0Q_toIkKhoEWElmkqbeg+9N!7gmZ36'#:]nVO"1bn[qZ^r_c]cj8K1B-I8MLPBq5r_jC8M1%m"5Z8(hRS@,Pq6t^HGIdI7`!`0$5o`'/^AbPo4&Qdes!ig]=)tqC<"+QE6K*9&n;eba1t'j0<,fUksBAAEi2:I&^q#&`u359;4-@%BpLDbWeWt&5`ra@pJ5NhK$%I-Z4EaD;&J9u'Z]M!l\s#)8PRK(0".2R8cmb@?!\e$qb5*HpJNq&cl?Qgp&57EMpZc+$1m6keT`Xm%&ntf]1KiG&GpH`.ktE_P:7FZsOer[8>JHE`$6n5e2k%DUU/l"qZH?\!W\5W5nJLE@BTD<B/&uld`P'RXU:g?lM'RdWZM27cgs8Gt%`XuomZ"2*i;&YKAU:sm<)NS<AUksBe#3+g4USXg"f@cs3P@CQDE94e#IcUmUW^#a;-CrD6b!o?^4)1WNWS'*LXm1Qqe:&SeT[(Ul%F5r5D.n%[nASa7@BYU@S=6PiWOR_.p\GpY@U%KWc_1IorVP+n?Z;Gg0B+53H)MkigB$QsS+PG(H$?2M0VU<cBCT>:S$J,&MN"pZH%hS'suT$`.i)cI4FW1DUP)@`'U<A=3cg0odEW,#n#q/Osp4Tnnbb1U;G.#LYY(:$t?lWGsNU/YopFtFEYcH$,]6T_Wr3`(hcDuOQA%.2S8C>%H@Xj/h^)K2+3NIBFUQCfGYJ3Vo`)h<@TE%>P3W//3L3E^(SV8%">T"aAJACk^sYa-8N4)=97/"X.b0g9R2.dp+-3,":<E%b@!c%6B[@`PjC8reMKJ%ZG&dAT=Cqq(t,KKMuMP6NERe^OcCXk58eo$(;od[dY"0q1V08)(4$M/-8h;-&&7)2`3[jE-69kJH\r/)%AmYS;[P>2JO4p!rl8lal:BU4OSf&</Tb+aiD>DGX8]=J>I!1E\_59k3;-ZWcMe=o9fu+_34KD<g9P`1Rd`.N'5AFghR6L^!>o!hI%Y]pqX!buOF0gErEbH%)_BpuG!cIB?pLk\_$Pu"\"]kPWgO=le\N@$s9Y(L0Z7akFGeB1H?dg/(Ac5M)`>&9!b0aLor@U:indd3G3%L.SM0Z^k>E6o"6/rfT9G1sde@95AcU.GT%G-uD@$\>*YJPA+PMWggJTAepT(`^UZKj.,SaB:d,i<6]Nnc5Is^Fn/eeK2IW*3AKYm%Q&pa_HYLa"7V%+ITq0jDCQOQ*DuORP&/UV+&@jQ5q9?!47\>r*W/,RSWFMd7jpU']>oV%3RM]#BP&rE?%h=j`VB#M240qL!/"!]p%(&h#AMl;.e2Pui`B3k9i9`pu5ID[BHE"poOiR;0^?V>S]K!ALjFq\4OQE_"NLeP$0Znn1N^cA:)q6O6c(R:^+\MA$tc)bV7'&E/#%BbPrK_5,BuRadRW9U37D)k-N>#^_0Ne0sTB!)keAZFZc2B$s21n`24qb4YteE"$c)/8'(tFb\O.$,*:fEl`r*o9ng%:DHcTnW91u%nFugX9(Sde3(RlY3YiM.];(?f.UR^dUBEg#/nDn0R(BN?I-*8kldYIcU^o"hbP[a$Gij@%Wp[3,McSeHN0QbljuN;I%TPEa')YTg%[8ee)1T#IdJ+Z&gN=)V*@uC)%erAS41qG7P6".?8"t*,RRWU``$]6IZF./2n7E:["M:>rf%*b,BBj`s&Q'o"Ph0<*2^7%bW[<N,/%,#-9s-@9g[Qh(WB]3;F]ko`uhq<0D[?Q"g&F(+$aZ*%-(mpYK73)n_$C@Fa\bU+>U0XVMk[=NK>'i<N%'_C@dmt]J^qRdO'kmSO(%8ZTcjk#rU*;d;m2AW/c(.nu0VXZ4i/bo2tnUAjS(YT<X8"]Og9T3D#'EE#32N@F#1=XSJZhgJ]Z=tj0C`N\TbS#aT1/7;2k'"S(5%/ouG_kqrIk2Pq8f;*20_am*+>gR.D!?LXj.5$AqkTe(4og@C_9cXJ,uldmH4@I(5gq9e7t?Y%/PSTRU]@mQG<5EbXW$oP3/"A?.G%YfYC9a-8K3$2uJ*6hQEfk/UWRH6.p0'$u??@4SXf2U-;(#/:@e$#>t=`L(BJ?.5;m>#`>3g;_Wo5AI+)I*-K^`fuPJ0-=l*;&RM#%2l81ARJ"fXYBT;T3LfZ+-n]u/96][hlR9\4?2%4JY(NFr7[/KdC1fHh.QOB=q86^\Jhk^*LgkOto2IoPpSlJW[@Hg3*D'T:GH[F,%PPtD']kDh[p*#t4@/A$?Iii>KQ7gKej1'HZM]_ne%hH]i(l_R!69[3GS,#[5k>9?<"_ToANWI,JqqrcL-YesB0ub!!UmG#Jb:3LW%2Pq2d;*2*ASn$]Gb3#n#SOI+gYqa5q3:!<V"?+$=fjn.9I'n-clo\/;WY:=k>I.5bW^i&i"A;6HZcT:&a&FsH2S[I)V'na79NutY%>*,^.8XFC=[_`EU;QiR0*NDm4C!^!nBiG_HAH\c;H;J.p_&p).cr&rBX'd.EB_A9hpJ6SPW+0=pq)rZhZqLA3`:N/0p%3fGpU?2/%]>+;bAbWZp,eLg>,h`-5Q/,Htn@C]^&mfcp-,BuXW],1aSP`^>B-o:F><DREAlZ]`n%kXF.)#I0W#D)4r+=MdUXlN[rbf!0r\""+%rS=3'r[skL&XD;"lgI@_!dsM"EqTRIT[&NFB#cp$7]f;r/HYj?;!.t+?>djKn%'d,PMZQ(eT[mAV-#6(am9e@^0e^C/P5$1GK&'&%'D%[7HC8(8X3N%"#s%6U()q;B].HV8Uj#2VNN!,3MtAV0#s"liq+GC6;&SZQQstN7ouE9QhcAuI8,?ZCnTcLqo8pPMhK@c49CIII%)c7"2(?o+[kIpL/rF)AV8ad'Sge+qb2fj`#/i+*aEq8Q_-[/pV0hM;kq0c!r=,[LPaoX"ugH^^qBnMG?"ud97//6"oQ)"X<D]_l%%Ip5?b=fKKq19W@lKQgQ4a9h=DEf^sk%@&iK'`9Q"qoS.33T9pmrltW59R&MGfU-,sS@'$/jbn1WhWK+BU:a:O,/)0dgnMIiWc(Qo%pfl6lg$3'Ehh/]869D*[1CB6pe!An8)B/:B9;sr+`=&?,g._tK9pBAOAq:$P5\VH8_;1j$%po8E$@E6<bd&YdL)M".b`6`s:psB4%K<:#M#Hc`[h[@T8Bu?g;)eqbf=L-PC1TuX[5s_)91a9@(1Q,2iJ^VWU[,q$7;u8tV[LJiEeXH3EE)O0HF63UFgPs:rk(_$@-jO[K%r[s,43MO*qX(Z-3)=#kA@Wq2qn^2Gqq24_e2Lk]kka!kIW8[Fb"j("(,LXA:?VtE-qY=V`kmY:hI77:$MQr8&-K[1L21[gC1jN_t%amEEujpDSOL23?8=3LhJ2PLi>H0mc<gig_;2h)S01aiHs)c=h>Eu)H8=M5sOG:ldHk']g4U$CX(<Y7C[>\m/bT.K^15T?ul$4u-o%_,%H_8&Sl(]!0,#k3f0EXGbXh3a:Y@7&P-N7QEWECFu5YbmdZ2V@reYqKq?c753t00^si4@h9AOkJe5-H^>W!XAe$TR$-47$Lfn#%.CB4$GS`h0<Eq(]Ji=D)F_*=dqXYp/h7pP7$n&pLI>HfW/RF/:W^Wd:^R;J9e\tk8c6dI,8D[A'Zk16X]oF8."'%:W)Z4k(^;t((%9Vk1-V4jGL"k9q7`V_]2'rku)R4@;'B"ND3;qG$gq^1@J.81OZMq?nsAI?$^_,.6OCq?YNLskE<_4:a@W4"G"lo8XCWUK#<$66:@%,"n<]Xh2D8(<<"d&C5oB)cI.D]F:FEa:_m\Rm.0.Le:O#>a`%uB%A;-A$JF7;[LSLDd=%_Z8e-[Jp;/]'A/9N(5Q+tW<<C%ZMB-?%Kr>F12l;raB5PMnI4?mZpAE-WK"$+54'C?&Q^rA=W4"Fgi,=b:q0U^*e]hAg1CHfP#[E1olt4P)WGSi`7EdrkJq2bUZGWHd`,-Se%Vjn\U7@k3`/J>]I`sX*Y[_a%G[h]WB@j?lAEQ0P4A&g@2a=^stJsVNsPMkg1ek,@ckpq\kh9\VBZFcLaaMEr);W_FcN(0j!+eP0t%9%7bU.VFr>VbHHcV5m9&GDfUlE:-P:@nOS0PMg<,.5:#+<:G\1Wt6"B@q1DlERl=2'2IF\YSDVhW7F\Zo;b+kEO.V.hP!C]Jg$nW%g61gU"!ZGP@<JI`-bogqE?!Amh7K`g`,FqR$h+kq._t(=TRs\'?`7f/:jHQn_4MD!.FqLLVshjf0C8hR6QI+EbjUVFaQWfkl*"gf%^C3:(23%R$Wi*V/Z+m0@^S\9NVQp/NWhmJ-Z+m0@s)QW]f/33Q2"oNXp=D.pf/33Q2"oNXp=D.pf/33Q2"oNXp=D.pf/33Q2"oNX%p=D.pf/33Q2"k;32"j02MndR5n%S[chgbV9T@2meqte3Shu/o!r53G;s#^5GfAD)Pf>%-:n,DGJ]6sUa\)75ZLO[jhs83O+H_1B:%5C=BAs5Zs?s0r%)'+!n;iQpS"hiOmg6a#qg\W1ULFac]\SA$:Prg%)UfBgg0qj,iLrg"@:rg$W%rg&merg)/Prh^M!oaT$c\%Dgc%\%Dgc\%Dgc\%Dgc\%Dgc\%Dgc\%Dgc\%Dgc\%Dgc\%Dh.\%Dh.\%Dh.\%Dh.\%Dea%b\&brm1T'LYr-PIsV.n5Q1:7^]*2!DiS3'%rL`.(rLhE0s-+H"n5$gpa3T8+Q[efIn*g;JqnN*smse'Y5J<QdlL4cNrYNKJnJ.4n3\o=b,o;uIh+*l;RDMElEfRalbn)r!*;.IQ%>Y`7ojo'Z*Nr*n/AWQ*q;\/l+S_@`g.?40A9Je&.oqrR?Vbn>S+ucAN^U\j[/1(8L+2'!7epIO+\NcC`[N7*Uppqi&]P'ZO66Ufc%kjbY\Wc(Qoq")P,OMZM4nZ"-27Xka3/1O(3Eb3tqUXInhn=&1:nMZHacb*oin2'BKrpnOAro1-YhuD5Fro%dErNG,WnF-DUVdKDf%5QCR%^\bVbIf3(Br7qmUrpb3Ira4Q2rq12Y6helMs5X+?o0<6Dh=#74mlpd>^]4"WPN?\Vn6c.ZYQ!#&:]C[5B':T~>%AI9_PrivateDataEnd