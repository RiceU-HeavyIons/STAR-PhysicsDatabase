%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: sigmapt_general_log_urqmd_compare.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Gary Westfall
%%CreationDate: 9/17/18
%%BoundingBox: 0 0 597 352
%%HiResBoundingBox: 0 0 596.9639 351.6211
%%CropBox: 0 0 596.9639 351.6211
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 76 8
%%BeginData: 9584 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08FF52A8527DFD7CFF7D7D527DA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FD09FF527D527D7D7DFD07A87DA8A8A87DA8
%A87DA8A87DA87DFD07A852FD07A87DA87DFD05A87DA8A8A87DA87DFD05A8
%7D7DFD10A87DA8A8A87DA87DFD04A87D7DFD0DA87DA8A87DA8A87DA87DFD
%05A87DFD08FFA8FFA8FF7DFD08FF7D52FF527DFF7D7DA8FF527D7DA8FD05
%FFA87DFD07FF7DA87DFFA827FFA87D7DFFA8527D7DFD05FFA87DFD07FF7D
%7DA87DFF7D52FF7D7DA8FF527D7DA8FD04FF7DA8FD07FFA87D7D52FF7D52
%FF7D52A8FF7D527D7DFD04FFA8FD0CFFA8FD09FFA8FFFFA8FF7DFF27527D
%7DA8FD07FF7DFD07FF7DFF7DFFFFA8A87DA87D277D7DA8FD06FF7DA8FD08
%FF7D7D27FFFF7DA87DFF52277D7DA8FD05FFA87DFD08FFA87D52A87D52FF
%7DFF52527D7DA8FD05FFA8FD0CFF7DFD08FFA87DFF7DA8FF7D5252F8A852
%A8FD06FFA87DFD07FF527D7DA8A852FF7DFD04527D52FD06FFA87DFD07FF
%7D7DA87D7DA87DFF525252277D7D7DFD05FF7DA8FD07FFA8527D52A85252
%A87D5252F87D527DFD05FFA8FD0BFFA8A8FD0AFFA8FD11FF7DFD09FFA8FF
%A8FFFFFFA8FD0BFF7DA8FD08FFA8FFFFFFA8FFFFFFA8FD0AFFA87DFD09FF
%A8FD11FF7DFD0CFF7DFFA8A8A8FD17FFA87DFFFFA8FD18FFA87DFD1BFF7D
%7DFD1BFFA8FD0BFFA8A8FFFF7EFD19FF7DFFA8A2A8FD17FFA8A8FFFFA8FD
%18FFA87DFFA2A8FD18FFA8FD0CFF7DFD07FFA9FD13FFA87DFFFF7EFD18FF
%A87DFFA27EFD18FF7DA8FFA9A8FD18FFA8FD0CFFA8FD06FF7DA8FD14FF7D
%FD06FFA9A8FD13FF7DA8FFFFAFFFFFFFA8FD14FFA87DFD05FFA8A9FD14FF
%A8FD0CFF7DFD06FFA8A8FFFFFFA9FD0FFFA87DFD06FF7DA8FD13FFA87DFD
%05FFA8A2A8FD13FF7DA8FD05FFA877CBFD13FFA8FD0CFFA8FD0AFF7DA9FD
%10FF7DFD0AFFCBFD10FF7DA8FD06FFA8FFFFFFA9FD10FFA8A8FD1BFFA8FD
%0CFF7DFD0AFFA8A8FFA9FD0DFFA87DFD0AFF7DA8FD0FFFA87DFD09FFA8A2
%A8FD0FFF7DA8FD09FFA877FD10FFA8FD0BFFA8A8FD0DFFA877FD0DFF7DFD
%0DFFA8A9FD0CFFA8A8FD0AFFA8FFFFFFA9FD0CFFA87DFD0AFFCAFFFFA8FD
%0DFF7DFFFFA8A8A8FD07FF7DFD0DFFA8A8FFFFA2FD09FFA87DFD0DFFA87D
%FD0CFFA87DFD0DFF7DA8FFFFA8FD09FF7DA8FD0CFFA8A2A2FFA8FD0AFFA8
%FF7DA87DA87DFD04FFA8A8A8FD10FFA87EFD0AFF7DFD10FFA97EFD09FFA8
%A8FD10FF7EA8FD09FFA8A8FD0DFFA8FFFFA8A8FD09FFA8FFFFA8527DFD05
%FF52A87DFD13FF7EA8FD06FFA87DFD10FFA2A8A8A2A8FD06FFA87DFD10FF
%A8A8FF7EA9FD06FF7DA8FD10FFA1FFFFA8A8FD06FFA8FFFFA852FD06FF7D
%A87DA8FD12FFA8A8FD07FF52FD13FF7EFFA9A9FD04FF7D7DFD13FFA2A8FF
%A8FD04FFA87DFD13FF7ECBFD06FFA8FFFF27A8FFFFA8FFFFFF7DA87DFD15
%FFA87EA8FFFFFFA87DFD15FFA87DA87EFFFFA87DFD13FFA8FFA27EA8FFFF
%FF7DA8FD12FFA8FFFFA877FFA9FFFFA8FF7DA8A8A87DFD06FFA8FD16FFA2
%FD05FF7DFD17FFA2A8A9FF7DA8FD16FFA8A97EFFFFA87DFD15FFA8CA7E7E
%A8FFA8FFFFA8A8A8FD07FF7DFD17FFA87EA8FFA87DFD18FF7DA2FFA87DFD
%17FFA8A27DFF7DA8FD18FF7DA2FFA8FD0BFFA8A8FD18FFA2FFFFFF7DFD19
%FFA2FFA8A8FD18FFA8FFFFA87DFD1BFF7DA8A87DA87DA8FD06FF7DFD17FF
%CFFFFFFFA87DFD1BFFA87DFD1BFF7D7DFD1BFFA8FFA8A87DA8A8FD05FFA8
%A8FD1CFF7DFD1BFFA8A8FD1BFFA87DFD1BFFA8FFA8A8FFA8A8FD06FF7DFD
%19FFA9FFA87DFD1BFFA87DFD1BFF7DA8FD1BFFA8FFFFFFA8A87DFD06FFA8
%FFFF7DA87DFFFF7D7DA8A8FF7D7D7DFD09FFCACAFFFF7DFD1BFF7DA8FD1B
%FFA87DFD1BFFA8FFFF7D2752FD07FF7DFFFF7D7D7D52527D7D27527D5252
%7D7DFD08FFA87DFFA87DFD1BFFA87DFD1BFF7DA8FD1BFFA8FFFFFF7D7DA8
%FD06FFA8FFFFA87D7D5252A87D7D5252527D7D7DFD08FFA8AFFFFF7DFD1B
%FFA8A8FD1BFFA8A8FD1BFFA8FFA8A8FFA8A8FD06FF7DFFFFFF52A87DFF52
%277DA87D7D527DA8FD09FFA8FFA87DFD1BFFA87DFD1BFF7DA8FD1BFFA8FF
%A8A87DA8A8FD05FFA8A8FD08FF7DFD13FF7DFD1BFFA8A8FD1BFFA87DFD1B
%FF7DFD04A87DA8A8FD05FF7DFD1BFFA87DFD1BFFA87DFD1BFF7DA8FD1BFF
%A8FFFFA87DFFFFFF7DA8FFA8A8FD1DFF7DFD1BFFA8A8FD1BFFA8A8FD1BFF
%A8FFFFA8A8A8FFA8527DFF52A87DFD04A8FFA8FFA8FFFD09A8FFA8FFFD07
%A852A8FFA8FFA8A8A8FFA8A8A8FFFD04A87DFFA8FFA8A8A8FFA8FFA8A852
%A8A8FFA8A8A8FFA8FFA8FFFD07A8FFA8FFA8FFA8A8A8FF7D7DA8FFA8FFA8
%FFA8A8A8FFFD06A87DFFA8FFA8FFA8A8A8FFA87DA8FFFFA8FFFFFF527DFF
%7DA87D7DA87DA87DA87DA8FD057DA852FD067DA87DA87DA87D7D27A87DA8
%7DA87DA8FD057DA8FD077DA87DA87DA87DA852527DA87DA87DA87DA87D7D
%7DA8FD047D52A8FD057DA87DA87D7D52A87DA87D7D7DA8FD077DA8527D7D
%A87D7D7DA87D7D7DA8527DA87DFFFD04A87DA87DA87DFD08FFA852A852FF
%7D7DA8FFFD047DFD06FFA87DFD08FF527D52A8A87D7DFFA852A87DFD07FF
%7D7DFD07FFA8527D7DFFA87DFF7D7DA8FF527D7DA8FD04FF7D7DFD08FF52
%7D527D52FFA87D7DFFA852A87DFD05FFA8A8FD04FFA8FD06FF7DFD09FFA8
%FFA8A87DFF7D27A87DA8FD08FF7DFD08FFA852527DA8A8A8277D7D7DA8FD
%07FF7D7DFD07FF7D27FFA8FF5252A87DFF52277D7DA8FD05FFA87DFD09FF
%52A827A87D7DA8A8277D7D7DA8FD05FFA87DFFFFFFA87DA8FD05FF7DFD08
%FF7D52A87DFF7D5252277D7D52FD07FFA87DFD08FF527D52FFA87D525227
%A827FD08FF7D7DFD07FF7D525252A8A852FF525252277D7D7DFD05FF7D7D
%FFFFA8FD05FF527D527D52A8A852525227A827FD06FFA8A8FFFFA8A87DFD
%05FFA87DFD0EFFA8FD0DFF7DFD0DFFA8FD0DFF7D7DFD08FFA8FFA8FD05FF
%A8FD0AFF7D7DFFFFA27EFD0BFFA8FD0BFF7D7DFF7D277DFD06FFA87DFD1B
%FFA87DFFFFA8FD18FF7D7DFFCFA9A8FD17FF7D7DFFFFA8A9FFFFAFFD14FF
%A8A8FFFF2752A8FD05FFA87DFFFF7EFD19FF7DFFA8A2A8FD17FF7D7DFFFF
%7EA9FD17FFA87DFD06FFCB7DFD13FFA87DFF527D7DFD07FF7DFFA8A2A8FD
%17FFA87DFFFFA8FFFFFFAFFD14FF7D7DFD07FFA8FD13FF7D7DFD06FFA8A8
%A8FD12FFA8A8FFA87DA8FD06FFA87DFD06FFA9A9FD14FF7DFD06FFA8A8FD
%13FF7D7DFD06FFA2A2FD13FFA87DFD0AFFA97DFD0FFFA87DFFFFFF7DA8FD
%06FF7DFD06FFA87DFD13FFA87DFD06FF7DA8FD13FF7D7DFD07FFA8FFFFFF
%A8FD0FFF7D7DFD0AFFA8A8FFFF7EFD0CFFA8A8FFFFFF7D52FD05FFA8A8FD
%1CFF7DFD0AFFA9A8FD0FFF7DA8FD0AFF7EA8FD0FFFA87DFD0DFFA8A2A8FD
%0BFFA87DFF7D7DA8FD07FF7DFD0AFFA87DFD0FFFA87DFD0AFF7DA8FD0FFF
%7D7DFD0AFFCAA8FFFFA9A9FD0BFF7D7DFD0EFFA8FFA87EA8FD08FFA8A8FF
%A82752A8FD05FFA8A8FD0AFFA8FFFFFFA9FD0DFF7DFD0DFFA8A9FD0CFF7D
%7DFD0EFF7EFD0CFF7D7DFD11FFA2FFA9FD07FF7D7DFF7D5252FD07FF7DFD
%0DFFA87EA8FD0BFFA87DFD0DFFA87DFFA9FD0AFF7D7DFD0DFFA8CAFFA97E
%FD09FF7D7DFD13FF7E7DFD06FFA8A8FF7D7DA8FD05FFA8A8A8FD0EFFA8FF
%FFA9A8FD09FF7DFD10FFA87DFD09FF7DA8FD10FFA8A2FFFFA9FD06FFA87D
%FD13FFA8FFA9A9FD04FFA87DFFFFA8A8FFA8FFFFFF52A87DFD11FF7DCAA8
%A9FD06FFA87DFD10FFA8A8CFA9A8FD06FF7D7DFD11FFCFFF7EA2FD06FF7D
%7DFD15FFCB7DA87EFFFFA87D7DA8A8A87DFD04FF7D7D7DFD13FFA87DFD07
%FF52FD13FFA1A8FFA9FD04FF7D7DFD14FFCAFF7EFFAFFFFFA87DFD17FFA8
%7D7EFFA87DA8527D7DA8A8FFFFFF7DA852FD13FFA8FFA8A2A8FFFFFFA87D
%FD15FFA87DA87EFFFF7D52FD15FFA8A27E7EA8FF7D7DFD18FFA87EFFA8FF
%FFFFA87D52FD06FF7DFD16FFA8A87EFFFFFF7DFD17FFA8A2A8FF7D7DFD18
%FF7D7EFFA87DFFFFFFA8FFA8FD0DFFA8FD07FFA8FD04FF7DFD07FF7DFD17
%FFA8A177FFA87DFD18FF7D7EFF7D7DFD19FFA8FF7D7DFFFFFFA8527D7DA8
%FFA8A8A87DA87DA8A8A8527D7DA87DA8FFFFFFA8FD0BFFA87DFD19FFA9FF
%FF7DFD19FFA8FF7D7DFD1BFF7D7DFFCAFFA87D525227A8527D5227275227
%5252522752522727FFFFFF7DFD0BFFA87DFD1BFFA87DFD1BFF7D7DFD1BFF
%7D7DFFFFFFA87DA87D7DA87D7D7D52FD097D527DA8FFFFA8FD0BFFA8A8FD
%1CFF7DFD1BFF7D7DFD1BFFA87DFD1BFFA8FD0CFF7DFD1BFFA87DFD1BFF7D
%7DFD1BFF7D7DFD04FF52A87D7D7DFD04FF7D527DFD0BFFA8FD0BFFA87DFD
%1CFF7DFD1BFF7DA8FD1BFFA87DFFA8FFA827277D272752FF7D522727A8FD
%0BFFA8FD0CFF7DFD1BFFA87DFD1BFF7D7DFD1BFF7D7DFFAFA8A8275252A8
%7D277D7D2752277DA8FD0AFFA8FD0BFFA8A8FD1CFF7DFD1BFF7DA8FD1BFF
%A87DFD0DFFA8FFA8FD0BFFA8FD0CFF7DFD1BFFA87DFD1BFF7D7DFD1BFF7D
%7DFD04FFFD04A8FFFFA8FD05FFA8A8A8FD08FFA8FD0BFFA8A8FD1CFF7DFD
%1BFF7D7DFD1BFF7D7DFFA9FFA8527D52FD047D27A8FFA8522727FD09FF7D
%FD0BFFA87DFD1BFFA87DFD1BFF7D7DFD1BFF7D7DFFA9FFA827A8527D5252
%5227A8A82727277DFD09FFA8FD0BFFA8A8FD1CFF7DFD1BFF7DA8FD1BFFA8
%7DFFFFFFA87DA8A87DA87D7D7DA8FFFD047DA8FD08FFA8FD07FF527DFF52
%A87DFD1BFFA87DFD10FFA8FD0AFFA87DFD1BFF7D7DFD10FFA8FD0AFFA8FD
%07FF7DA8FFA8A87D7DA8A8A87DA8A8A87DA8A8A87DA87DA852A87DFD05A8
%7DA87D7D27FD07A87DA87DA87DA8FD047DFD04A87DA87DA8A8A852527DA8
%A8A87DFD05A87DA8FD047D52A87DFD05A87DA87D7D52FD05A87DA87DA87D
%A87DA8FD047DFD04A87DFD05A87DFD06FFA85252A852527D5252FFA8FFA8
%FFA8FFA8FFA8FFA8527D5252527DFFA8FFA8FFA8FF52A8277DFFFFA8FFA8
%FFA8FFA8FFA8FF527D275227A8A8FFA8FFA8FFA8527D527DFFA8FFA8FFA8
%FFA8FFA8FFA8527D525252A8FFA8FFA8FFA8FF52A8277DA8FFA8FFA8FFA8
%FFA8FFA8A8527D527D27A8A8FFA8FFA8FFA8FD0CFFA87D7DA8FD0CFFA87D
%7D527DA8FD07FFA87DA87DFD0CFFA87DA827A87DFD07FF7DA87DA8FD0CFF
%A87D7D527DA8FD07FFA87D7D7DFD0CFFA87DA87DA8A8FD13FF7D527D7DFD
%0CFF527D527D52A8FD07FF52A852A8FD0CFF527D527D52A8FD07FF7D7D52
%7DFD0BFFA8527D527D52A8FD07FF52A8527DFD0BFFA8527D527D52FD14FF
%A8FD0FFFA8FFFFFFA8FD23FFA8FF7DFD0FFFA8FFA8FD6BFF7D527DFD7DFF
%7D52A8FD7CFFFD04A8525227A8FD7BFFA8525252A8FD7CFFA8FD38FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-01-16T15:02:42-05:00</xmp:CreateDate>
         <xmp:MetadataDate>2018-01-16T15:02:42-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-01-16T15:02:42-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXgcv5cecrg6Elr&#xA;5efTrfT9R1CSwieSwVdLFx5hg1OG8RIZ5FI+oh4OEdWBBTjwblir1jQtf8z6vpVvqUelWMUN0vqQ&#xA;odQkduB6ciloVDeIBNPniqP+s+av+rdY/wDSdN/2SYqlL+ctSTzBHoDWEI1GUHh8d+bckR+qV+t/&#xA;o/6tz4fFw9Tl7Yqgrb8yhPpl/qf1e3gs9NaNLt7ptRtmDTU9IRxz6fG8vqc1CemrciQBWuKq58/X&#xA;I8v3uvvZwJpmmhmv2d9QSaERoHfnbNp4uBxRgzfu9h1xVX0nzfqWq3L21lY2zTR21veMJJb6FfRu&#xA;1LQtylsEUlgpqoPJaUYA4qmv1nzV/wBW6x/6Tpv+yTFUu0zzF5kv7/VrNNKskfSblLWVjfyEO0lr&#xA;DdBgBa1A43AG/hiqY/WfNX/Vusf+k6b/ALJMVSTUPPdzp09/Bd2ltHLpi2r3oEl+4VL52jt3VksG&#xA;DozxsGZCQlDy44qr3vm/ULPXbDQZ7Wz/AEtqSSy2ltHcXctY4ac3kaOxZIkFQA0hUE7CpxVQs/Pk&#xA;95rEmkW1vaSXkcsluWE16IDNCGMsSXJsPQd4+B5qrkqdjQ4qoN+ZDLeX1mbSH6zpt5bafeIDqR4X&#xA;N5T0FBGnUZXqDzUlQCCSKjFWRfWfNX/Vusf+k6b/ALJMVSw+ZvMg8zLoH6KsvXeya/E31+TjwWVY&#xA;ivH6ryrVq1Ap+GKpn9Z81f8AVusf+k6b/skxVBat5i1rSYreW+sbSOK5uYLKJ0ubqUetdSCGEP6d&#xA;k/BWkcLzaigkVOKoObz1JBBrM8o01YfLwJ1iX67cFYKR+qQSLOjEJ1C1Nduu2KqNz+Yc1tpmnajL&#xA;aQ+jqw5afCh1GS6lXjzLC1TT2uAqr8TFowFG5piqrf8Anq5sbbSbq4trU2+uSw2+mSxTX0yySXI5&#xA;RBjFYP6YYb8pOIxVGaP5i1rV7V7qxsLVoY5prZzLcXcB9W3kMUqhZrGNiFdCtQKbbYqpa75m8yaO&#xA;ti0ulWUgvr2CwTjfyLxe4birHlajYeHXw3xVM/rPmr/q3WP/AEnTf9kmKrZb3zRFE8radZFUUswS&#xA;8ndqAV2VbMsx9gK4qx+w/MlL+906ytY7NrnVYVuLJWmvowyOruiuz2CrHIywyMschVyFb4djiqsv&#xA;n52TWJQlgLfQGKardG6ulgikUEvGsxshFI6Uo6RszKaBgCRirdn56vLzSL7VobGEWumhjfRytqMN&#xA;zHwjExBtZdPS4qY2DKBH8QO1cVb0Tzzd63LBFptnbym5sotThZ5L+FGtbhisT85bBEBcqaITypvS&#xA;mKpjqer+Z7DTbu/fTLJ0tIZJ2QX0oLCNC5Arad6Yqn2KuxV2Ksc8o3cFl5K0aS7kKKbaJVLByxJS&#xA;oAUmRjt+HQAbBSBbIY5I5Y1kjYNG4DIw6EEVBGKEtvtJuptWh1KC5jjltoGgt45YjIq+tLG87HjJ&#xA;GSWjhVE/l3PxV44qlup+TGvtJvrcX5g1K61FNVh1BYwRHPbyxva8oi1JFjjt442BPxAE/CTsqw+1&#xA;/JLVm872HmvVfNMl/JBJO95pxt5XgdJ1dfRtmu7q8ltYSJT6kaOUfYUFBRVmvkbynJ5X0RdNlvm1&#xA;KRCqrdOnBvRhjWG3jNWkJKQxqCxb4mq21aYqyHFWN+WDx17zkzGiDVYTU1AAGk2NdySPuAxVkUU0&#xA;UyCSJ1kjPR0IYH6RirD/ADN5H1vVrzXLi11e2tE1eysbKJJbKScw/UbiWfmzLdQ+pz+suKALT4et&#xA;DVVNLzy9qV/q+lXt9eWzW+lXEt1DFDatHMXeOSGMes08nFVjlPMKnxkDdVqpVYb5i/JvV9XtbjTI&#xA;/NM1lobPezWdnFFOHWS/kMzJdcbpLa8gSViRHNbklfhL0rVVMfKP5VyeXr3SLltYN2thYxWt7D9X&#xA;WFLme29YW84VXKxCOO6dAgU7BPiAShVZ/irFmDf8rSjO/EaG4PWlfra0rvx+8fSN6qspxVJvNmh3&#xA;2taZDZ2d3FZSRXtlemWaBrhSLK6julTgssFOTwqCeXSu2KpJof5ct5bvtXufLt+IY9XeNnt9Q+ua&#xA;ikYiiZKL6t4v2pG5H2+HwIVWXX5dXkem6NDourLYX+k2lzp/1iSCR4Zba+9M3CCK3ns5YSJII2ia&#xA;KZTHxoCRirF9N/IG6srrVrp/Nd1eXGoWlsltc3UPrXEN/aPBNHey3DymafhNbBo42cBFZlUgHFXq&#xA;ej6cNN0u1sQ/qtBGFknIoZJOskjDf4nclj7nFUi8/hjH5f41r+nLA7V6BzX7JX/PqCNsVZTiq2QS&#xA;GNhEwWQg8GYFlDU2JUFaj2qMVedaR+Ul3Y3umalNqtvLqOj2ZgtJIrW5hglukWaO3nu7f668cywp&#xA;ctxQcXqT+8AIAVXaP+Tdpptj5itI9QCDW5IpYJbe3ELxSW9zLdwzz1eRbicSTAPIVXmiKvHviqXX&#xA;v5La/qXmPS/MOpebpZL6w1Fb+WGK3mNqYVMD+haw3d3efU2ZrduUkJHJZGTjw+HFWZeSPJo8r2Vx&#xA;afXDexmVlseUYj+r2KuzW1oKMwZYPUYBtq16Yqj/ADZ/yius/wDMDc/8mWxVNcVdirsVY35c0my1&#xA;DyPo9peQEQm0gf0w7A14A8uSkH4q1+mmShMxNjmqbanNcWGlSPYW3rywqqwwDkdqheigk8V3p3p1&#xA;HXBGr35KFazuZJNOgurqMWsjwrLPEx2iYqGZSxC/Z6VIGGrNBUQCCKjpkVdirsVdirGNBtUuNU86&#xA;wSArHPqUcburUYhtIsVNPAiuKgp1o+lR6ZZLapK8xqWeWSlSx67AAAeAHTJzlxElSbWaHrC6rZG5&#xA;ED25DcTHJStCodTt4o4P+dcEwAdjaSCOaYZFDsVdirsVYuV/5Cerca00Rhzr0rdrtT3p+GKptpWl&#xA;31nd381xfPdx3UnOCFuVIV5O3EcmcdHC/CAKKNq1yUiCBQVdaa1bXWpXFgkciyW43kZaI/EgNwNa&#xA;/CSAajExoA96aPNMMih2KuxV2KsX8+LyXy+OPP8A3N2JpWnRmNfo64qmp0C3OvLrPqyeqqcPR+Hh&#xA;Xjx5Vpy+yelad8lxDhquqb6OvtftbPVrXTZI3aW7A4uvHitSVWtSDuR2BxEbBN8kUUzyKuxV2Kux&#xA;VKvNn/KK6z/zA3P/ACZbFUymnggT1JpFiTpzchRU+5xVeCGAINQdwR0IxV2KpR5ORk8p6MGdpD9S&#xA;tzybjWhiUgfCFG3QYqm+KoTVdMt9TsJbK4LCGXjyKUDfAwcUqGHVfDCDRsJBpAalPd6DotnBpdk9&#xA;+IPTtliHIsIo4z8R4K38gWtKVP0ZKJBPqP4/H4HNatNHvrJLuOze4jW7lUvFbl1EjKOpVCeRApka&#xA;NWhWwK7FWPeWFI1zzceRIOqxUU0oP9xVj02rirIcVUfqyxW0kVmqW7ENw4KAocj7VAKdcVSyxF7o&#xA;ujzyajNJfvG5dOFHkKtxAUVEdSXqd/HrTJk8R7k8zsjtL1FL/T4bwI0IlrWNyCQwYqRVSQdxsR1w&#xA;SjRIQRSLyKuxVjJU/wDKzA3IgDRSCm1DW7G52rtTxxVk2KqaW9ukrSpEiyv9uQKAx+Z6nFUvsdP1&#xA;KHV7u7muPUtrgfDFyqF4mkfFeC8fhry+I1OSMyQB3J2VNI1y01UTG3SRPRYKfUAHIH7LLQtsafPG&#xA;UapSCOaYZFDsVYz56UsNAAYqf01Zmop2LGm4PXpirJsVdQVrTcdMVSu9stak1m1ube8EVhEoE1tt&#xA;8ZJPOo4GtRxp8QpT3OSEtiK/H4/Hcdvx+Px96sWs20usTaUqOJ4U9RpCBwNAhIBrWoEq9qfccTHa&#xA;1oo5WVhVSCKkVG+4NCPoOAhDeBUq82f8orrP/MDc/wDJlsVYF+bg0e2u7K2htbO48y6+Wg05761N&#xA;/Kpi9Mt9WWYSQqOFax/CCTz34kMqzfynoGnaTpcBtIIoJbiGFrsW0TWkDzBPjlS0JCws7ElhxDdm&#xA;rTFUH5rluYvMXlF4BfFDqMyXgtVunt/q72Fwo+tLCDDw+sGHiZuh3FN8VRHkK6luvJ+kyyIiAW0U&#xA;cfpuZKrGgSrEqlGqpqu9PHFU/wAVdirsVQcukafLqUWpPGTeQjjHIHcCgDqKoDwYgTPQkbcjTJcR&#xA;quipdZ32oaXa3Fx5iuVERlCwMqg0BrsBEtadxXcdz3yXDxECI6JPkniOroroeSMAykdwdxlaGNeV&#xA;ZpG8x+coiqiOPVLfi4YlizaVZFgy0HEDah5GvtTdVk2KuxVp0R1KOoZWFGUioI+WKpVregfpKCCG&#xA;G4aySBi6CLko5fstRGj3XqPfJRmY8kjZZLPrNpql/eXLhtEgtmkjjX0weSKjbbBq7SVJam69KEk+&#xA;mh3qqaR5j07UY4FEixXkyyMLRmUyUikMbHYnbkpp/t4ZY6sjeKEolnlX81IIERGWTRXaVmcqyql0&#xA;BVVCty+JgDuKfhlassxV2KuxVBX2kWd3p9xY8fQiuQRK0IVGqdyehFfmMMTRtUAbPWNLTSrHSFE9&#xA;jG5W9kn4lxGXU7UaID4WenFTuBtTJ8QNk8ynmi7DX7C9ubq3QtG9pL6LGTioduTp8G5/ajYUND3p&#xA;Qg4DjP2Wg7JJ+Yc8kFvoLxqryfpuxRFdiilnZlFWCvTr4ZBWWYq7FXYqpi2t1na4ESCdhxaUKOZU&#xA;di3WmKpCml3vl/R500hRc3E04kPNGYAFFQngrqWNEH7QywS4iOLkyu/JHpr1nHd22n3h9HUZoBO8&#xA;fFjGtVYkepTj/ut+/wCz8sAgSLYrPNbK3lTWGUgqbC5II3BBhbIEKlPmO28rJqLPNq91puqThWkt&#xA;7C6mEsiiihzaRmQHYAGQR1oNzTFUw8rQeXRBNcaPqB1RpWC3N492965ZK0Qszv6dKn4F4gb7Yqnm&#xA;KpH5GBHk7RgWZv8ARIt2Ein7I2pIWbbtvT+WgpiqeYq7FXYq7FVC9sLS9iEVzH6iBgyipUhhtUFS&#xA;COuKQaQGiQazDdXy3rD6mHA09AEAWMM9AoQAhfT9MUbeoJ70E5EECh+Px+rpZSgfKw/52DzjuT/u&#xA;Vh2Iag/3E2PQk8T9GQQyTFXYq7FXYq7FWO+YdAvJZoL7SHMF/HICSojpxETIPtjoCVqAemThKue4&#xA;ZiXQqDA/8rSjNTT9Bv8ADRqH/S13JB4feK+HfIMGU4q7FXYq7FXYqknmHyxb6raPHEVtrg83jmVR&#xA;VZmWiTbU/eIfst2yUJcJSDSS+aLW7tdL8swXU7TXCa5Zc5QZJCayswWteZAB41Y9PtVFcEiCdlJZ&#xA;rgQ7FXYq7FXYql+q6DpeqRst3AjSMoQXHBDKFB5cQzBtq9umEEg2Egsfk8uzaH5M162a9e7hNlcG&#xA;BXBHpgRPsKswHXotBt0yU58RtSt82HRtBjfUNUvru20++uljWy0xBbl53UtyeS3C3Lu3Bif3nxbL&#xA;xJoDBCM8ln67HLq7LcSRTBU067vlsmmltSA6SRzWhZmhkBUqJaPtU9cVZNirGdD1EaV+XdlqJtLi&#xA;dbPTo52tUaNp3VIgx4GWVU3G6hnFBtt0xVBv+a3lezl466T5fhNhb6ilzqc9lEjrdB2WGMJcSO8y&#xA;+i/JVUjbYmoqqg5/zk0azu7G21TRtV0s6jNbxwSXUdsFEV2WENw/p3EhSPkhDgjmn7aLXFV9x+bl&#xA;gNTuNP0/QdW1aW2nvLd3slsyGbT0he4aNZbqKRwPrKhQqcmNeIO1VWZaXqVnqmmWmp2Mnq2V9DHc&#xA;2stCOUUyB0ah33VhiqJxVLLm/lTXrSzUP6Ukbs7BWKVoxUFgCo+wTue23fJCQqqZcIq7+CA8rj/c&#xA;95vNGFdVh3JqD/uKsegqafdkWLIsVdirsVdirsVdirFyP+QnqeLf8cRviB+Ef6WuxWu5PY08eld1&#xA;WUYq7FXYq7FXYq7FWL+fBVfL/wALN/ubsdkPE/abetV2HUjuPHpirKMVdirsVdirsVdiqVebP+UV&#xA;1n/mBuf+TLYqx7zJq7Lc3FvqcFlPpyuPTt9at5be2r9kONQC3dsaivFDGH3ocVRPkG3hs4rm1srK&#xA;O00129eGKzspLG0jZuqx+uweYsKHnHGsdB0B6qstxVIvLNot15J0y0vKSxXGnRRShQUBjkhA4/aJ&#xA;rxNK199sVSJPyj0ljZfX9X1LUlsWUIl01oVeBLSeyS2k9O2j/drDezCq0clyWYkLRVJl/Jm+vtQv&#xA;IfMeuXWq6SIhb6bOzwLcraehJAbSdDalDxE7t9YR1lZqV3UHFUzX8nrSG49ey8y61YuDOEMD2IZY&#xA;7mGC3aNZHtHkAEVnGFfl6g68uW+Ks30zTrPTNNtNNso/SsrGGO2tohUhYolCIu/gqgYqicVUXsrZ&#xA;7uO7ZAZ4lKo1BWjd60rtuBv3Pjiikk8sB/055uqQV/SsXEAbj/cVY1qa74pZDirsVdirsVdirsVY&#xA;yQ//ACswEEcP0KeS03J+tihBr8+2KsmxV2KuxV2KuxV2KsZ89ByNA4EA/pqzqSK7Vao6jtirJsVd&#xA;irsVdirsVdiqVebP+UV1n/mBuf8Aky2KpFd63Ya5aWV7pqawb6SGOWL9G8kEYmRZKStOV0+RkDbr&#xA;IWPgMVW+Z9ZlvPKdza6fJqP16BrL9IrHBcQagbM3US3rwrEkcjObf1aNbivL7G9MVSvTL7WTB5DF&#xA;2mri9t72S31QNDf8TbyabO0RvSq+lJR5bblJJXjLyFQyyUVRXkXWPPd55S0q5g0nSpLKS1g+pF9R&#xA;uopfSEKL+9U2DjnyDH4TTwJ+0VU9+u/mDz/442k8Kf8AV1ua1/7h2KpDqv5ia/pWqLpd9p+mJfPG&#xA;86RR3mpTBkjRpWRXi0p0af042ZYQebAVCnFUO/5m+YV0aLVzpdgLe5uHs7SEzav9bknidxJEtl+i&#xA;PrRZViaoEfYnpiqrd/mH5l0/SrbW76w0o6TfSwWtnLb3epTMbieVo0DrHpcjqHbgg5IKNtX4gMVT&#xA;PTPNHnHVGuhY6RprCwupLK89W/voaTRAFwnq6YnqLVh8aVQ9jiqNa9/MT4uOjaR24V1W5+mv+47F&#xA;WOeV9R8/N5k84KmlaU0aalbh421G5UpMdMtC1H+oNzUxmPsCDyHgcVZI17+YNV46NpNK/FXVbnpQ&#xA;9P8Acd44qlGu+d/NGiTwRalpml2wvA4tp2vtQa3Dxo0jCa4TS2hi+FarzdS29K4qgl/MzXJdAbXo&#xA;bHSxpwl+rASXmpLc+uTwWH6odKFyZWdl4oI+RBqBuMVdd/mN5ltPLz+abiw0yLy/bGQXj/WdUadC&#xA;kphIe3Gl+vGY3FHDR7b1oMVTSw81+cNRub60stH043OntEl0s17qEKq00YmQBpdLRXPpsCeBPHo1&#xA;DiqYG9/MHmKaNpPChr/uVua12p/0rvnirEn1Xz9/ytG3tl0rSluv0O0s8f6RuTG0AuCvwyfUah/U&#xA;ZdivSv0Kste9/MHg3DRtJ50PGuq3NK9q007FUu8webvNWgWAv9T03SYLYyJCAuo3s0skkp4pHDDD&#xA;pkkskjNSiopPXFUHpPn/AMx6vDqEtjY6Rw0zl9ca4v7+2EYI5xyfv9Mi5RMgJ9RaoaHidjiqFvfz&#xA;I8yx6TpWqRWWkvaayY5dO9C61O6mntz+9dkt4dLaYfuaVYpRK1bFUdf+ftesbbSbq403Tjb65LDb&#xA;6ZLFe6hMsklyOUQYxaW/phhvyk4jFUVo/mfzpq9k11Y6RpjLHNJbSmW/v4P3tvIYp1VZtMjYhXRl&#xA;BpSoxVIfzE1Xz9DbaLy0rSoppdZs4rFxqNzKomkDLH6q/UUPHn1I7Yqy7675/wD+rNpX/cVuf+8d&#xA;iqjPqnn+C1mnm0nR41iV3aRtVuQiqtTVj+jugHXFWML+b90wt2+r6VEtzI0KrcXmpwvE8LqkouVk&#xA;0pDbCsiKhmChiwpWoxVWX8zdek0Ea7FY6U2nvN9WiH1vU/rLzksEiW0/RX1lnb4SFEdSvxDahxVV&#xA;m/MTzDp/lOPzHqOn6c2noFjuLmK51NmEof0XrbJpUk8f70FSGX4TscVTLTPNHnHUbrULa20jTTLp&#xA;sy290Hvr+IK7RJKFDS6Yiv8ABIGqhIoRiqj5mvPzAPlnVBPo+krGbC59Zk1O5ZgfSNSqnT1r32JG&#xA;Kq1h5p0ry3+X/ly91MyCGa0sraMRIZGMj24YAKu/RD7noKkgYqivJdvfM1/qbzRvpWomGXSY4bu4&#xA;vIzAymT6xyuApjab1RWNPgAUU3JJVZNirGPyvUL+XPlsAFR+jrY0PMdYwf8Adnxfw8NqYqyfFUg1&#xA;HQdbvPNOm6mNQtl0nTg7Lpz2jvMZ5I3i9ZLn6wqKeLlf7k/CWFfiqFUBf+Rb1tK0eLTNUWz1jSDI&#xA;/wBflgaaKdrpGW7MsKTQSD1ncyVSZWVv2utVWH6Z+QNzb32sXN95qutQGsaWbB/ViZ5o7oiErdC6&#xA;nmnuHWKS3DwxSO3pkni25qq9P0LTZtN0qC0nuPrd0vKS7uggiEs8zmWaQRgtwDyOxC1PEbVOKo/F&#xA;WL+UQP8AEnnc03OsQb7/APVn0/x2+7FWUAggEGoO4IxVinnfyTN5omsQ9xaQ2ln6j8ZbR5rhnkja&#xA;Mos63EPCCRG4TRhKyJVeS9QqgbH8sBp3le10zT9Ukj1ezvhqsWqzrLcqbsKY6SRTTNK8Pon0gjT8&#xA;goHx8hyxVINO/Iq5XzQuuaz5lm1WOazu7PU7CWKR1mS79dPTinuri7nht0juAPQ5spZQ53xVnvk7&#xA;y9daDoUFhe37arqC0N3qbp6TTuqiNWZOT0IijRevauKp3irCmA/5XQhpuPLbivxd75f9j9+/h3xV&#xA;l63tm101ms8Zu0X1Htw6mQIduRSvIDfrho1asX/Mr8vbfzvpVrYyzxQNaTvNG1xb/W4qyW8tszek&#xA;XipIizl4pOXwOA1D0wKoWvkDVJk1G21/VYdRstSlhaX6tBdafdiG1q1vGLuG9MgKOEPJaVo1RVyc&#xA;VQsP5X3un+XvL2n6NrZttQ0Gwn0s3tzHcTpPbXix/WAVS6t7iJvUgjeJo7gGPjRfh2xVj+m/kDdW&#xA;V1q10/mu6vLjULS2S2ubqH1riG/tHgmjvZbh5TNPwmtg0cbOAisyqQDir1PR9OGm6Xa2If1WgjCy&#xA;TkUMknWSRhv8TuSx9zirFvzQAKeVQRX/AJ2TTT+12dj+zv8Aw8dsVZDrmo6nZm1FjZm79WTjLRWP&#xA;Ebfy/ZrXqdslGIN2eiQmM5cQvwdY5COMbyDkodtlqoKV+I9KiuABDzK9/JvUtWtng1vXoZzfOf01&#xA;Ja2BtnuY1niuoQha5n9J1mh+JviBT4Aq0BwKnEP5earFpUBGtJ/iS21MavHqn1SlsZxbGxKNZ+tU&#xA;xNaMYyomBr8QINMVY1afkDKdfGqav5nudUhnsbux1G0njklMguxMgWG4uri6uIYIknHGH1GBZFck&#xA;tvir0bypod1ouiQ2V9fHU9Q3e+1Jk9JriVju5TlJT4QFA5HYDFV3mz/lFdZ/5gbn/ky2KsOuPLGp&#xA;+YPI3li2Egk0VNPtm1HTYxHHcz/6OgX0rmVZBHQVFFEbGv8Aer3VTn8rbLQtP8mafp+lG1EtpDFF&#xA;qsNnLHKsd8sKC4VzEzqH5j4h9OKstxVhXlLRhqv5X+WbQvJbU0+zkq59UmkA/wAo7GtVFfh22FKZ&#xA;KEuE2kGmVzSpp2lyTPzlSzgLtTd2ESVNKncmmACyim9Mv0v7KO6RGjD8gY3pyVkYowNK91xkKNLS&#xA;JwK7FXYq7FWJeXbWO61bz5bSc1juNVjid1aho+i2Cnj1oRXwxVP9H0i20mz+qWxZo+TP8XEbtuaB&#xA;FRQPYDJSkZGykm1Ly/rR1e1luPq5t/SlMQVm5EgKrV6LQ/HQjsQeuMgByNqRSZ5FDsVdirsVYYR/&#xA;yGVTRv8AlHT8VfhH+nDYivXw2xVk8ekafHqkmqJERfSoY3l5uQVPCvwE8AT6S7gV2yXEaroqhNe6&#xA;qvmCG0S3DaY8PKS44tUSfH+19kAcFFOp5e2Pp4f6SaTLmnPhyHOleNd6eNMFIbwK7FXYqwz8zRVf&#xA;KuzH/nYtO2U0PV9+o2HfFWZ4ql+t6JZ6zaLa3ZcRK/qfBx3PFloeauKUY9slGRibCQaUdavdR0vT&#xA;oP0bZNqEodYjHVgQgQnkSqt14ha0oK17ULCr3/H4/Fc0AJjLeWkU0UEs0cc89RDEzAM9NzxU7nAI&#xA;ki1VcCuxVKvNn/KK6z/zA3P/ACZbFWFa35l1Xy/+V3lq80u4t4LprexQrcFC0kZtt0hjdkMshbjR&#xA;F+Jugp9oKp5+WLWl55dXXU0y50291r07y+S8mkuGeSSJW5RSSSz/ALj4v3aggAfsqajFWXYqx38u&#xA;RIPy+8teowZv0XZ7qCop6CcRQltwOvj7dMVZC6I6MjqGRgVZWFQQdiCDiqGu7WT9GT2unstrK0Tp&#xA;bOgAWN2UhWAoRsxr0wg0VQS3kuiaJE+qyvdXCMUrEpkdyzkooCqpPFep49q5MDjl3Wmu5NIJop4Y&#xA;5om5RSqHjbpVWFQd/bK0L8VdirGfKXL/ABB51qRx/TMNBTf/AI4+n964qybFXYqkmmWtzoOjXkl5&#xA;PLfGL1Ln7ZkcqsYJVeZG7MpNK0qcnKXEd0muiN0nVodQ02C/4G3SYlQkpAPIOY9iDQ8mHw+OAx3o&#xA;boOyOyKuxVhvxf8AK4xuOP8Ah01FN6/XhTeuKsyxV2KpadAsjrY1nlJ9bC8AKrx48eNOnKnelaV3&#xA;yXEarom1O01LUf0hfrfQpb6dbgtDcMGSip1Lux4kEfFUdB1wkChXNSEwsr20vbZLq0lWa3krwkQ1&#xA;BoSCPmCKEeORlEg0UK2BWG/mXyp5W4kA/wCItP6iu1Xr3HbFWZYq7FXYqgbvRrK7vre9lB9e3pwI&#xA;pT4W5CtQT9rfbDZqkgkIFb7VbC51G81VqaVHU24VVZh8QVAgjq7Fgd+XfpkgAaA5rSa2F9b31pHd&#xA;25LQyiqlgVOxoQVNCCCKZGQo0hA+bP8AlFdZ/wCYG5/5MtgV5va+YNFtdN0Q6zYtYatpdjDa2V+s&#xA;i2F/DVESRGj1NbOMoWX7IaVGIrTFWceRboPotnaWggbSrC2htrOVLuO6uHWJBGpmECmFDRP2JGB9&#xA;sVW+a5bmLzF5ReAXxQ6jMl4LVbp7f6u9hcKPrSwgw8PrBh4mbodxTfFW/wAsrlrj8vfLjmGSDjpt&#xA;pGFlABYJAi8wAW+FqVWvbFWTYq7FVk9vBPH6c8aSxnfg6hh9xxVLb7Q2udSsryO6kt0sqcbeMsEY&#xA;V3FFZV3Hw7g7ZITIBHekUoQaxf2p1S41hBDY28qraMkb8mDSNGq9+Zb4DUd2yQiJUI81ITe3ure5&#xA;jWSCRZEZVcEH9lxyUkdRUGuQMSEMb8oys3mXzvF6bhU1e3YSmnBi2j2FVXetV477dx70CspxV2Ku&#xA;xVLde0Cy1u0S1vC4ijk9UemVBrwZKfEG2o5yUZEckg0oz3et2+rzSyxr+g4YWZmAUvVU5l68uVa1&#xA;Xjw9642OGq3v7FpU0rzFp+ocIwTb3b8j9TmIEtF70BNR3H9mSnjIvqEEVzY88zL+c8UYidxJ5ebl&#xA;ItOKBb39okjr0FK5WrNcVdirsVWTwxTwyQSrzilUpIp7qwoR92KpRe6PqENvZ22hzrZ29vI0kqMx&#xA;PLk3KhLLISCS1RUfPJidXe9/i07HmonzjZw3d5DdwSQR208dukoBfm0nqEniB8IURFu+1O+2SGKx&#xA;sRyv8fj7EUUp/M+f04PK80cbT/8AOw6fxSLiWbkXApyKr36k0yohWbYq7FXYq7FVssUU0bRyoskb&#xA;bMjgMp+YOKpJq+g3bTR32l3BgmsoXFpYrVYWk3YBlV41oxoGqPpGTjOhXQpShtd1DUfKnmO11G3E&#xA;N7Y2dykrL9lqrMg23AakdTxYjcfIGYHMdfx+PwVIZm68lK1IqCKjYivhlaEh8t+RvLnl+eS9tIGn&#xA;1e4QR3ms3btcX042JEk8lW4kqDwWiDsooMVT/FWL/laip+XHlsKnpj9H2540I3MYJPxKh3rXp8ie&#xA;pVZRirsVdirsVUrm1guoWgnXlGxBIqV3UhhupB2IxUFjkHlS/svMUd/p9ykdg4C3MB5BioJIBHxK&#xA;9F+Ffs8R/McsE/TR6cv0siRXLdrygB/iXzwaUJ1i3qd9/wDcPp/t/HK2LKcVdirsVdirmVWUqwBU&#xA;ihB3BBxVjuv+UzeNFPpkv1G6ioqmOkShQsgBBReYIMtaV4n9oHJwnwshLvSxlH/K6Y247jy245b7&#xA;Vv126U3p4/f2gxZrirsVdirsVdiqE1TS7HVLKSzvYllhkVlowBK8lKFlqDQ8WIrikGmEeetJtdM0&#xA;zyjYW4Z4YvMtg68qVq80khPwLTZmr9mny64ZSJNlSWb3MkjRXSSc4Iljb/SIt3UcftJs1W7jY5G2&#xA;RiKBvd4xaee/zb06ysbm70y51O7bS4G5C1lNrcytDPcKCkSLJBdSSRJbPy+BWYNQghcLBl3mH8wP&#xA;NtjreoadbaK4htvqvC7e1uriNIbhrdXu2eAcJUjaaZGiRg49IuTxOyrErP8AOP8ANm4s/rMvlOO1&#xA;lSG5mubOS31Bnh9CeCDizKlXKrcNMwRCWWNlUE0OKrde/ND81JtHdoNDksp0jmW+ghstQaVSdLur&#xA;iH0Z2jQH1Zoo+DBKxswWQA/aVVtX/OP8ybFJDa+VmuODTkI9rfcgtul4yIXCgO1wlrC6uoAX1lBW&#xA;o3Ver+aXV/KWruv2WsLkioINDC3Y4qm2KuxV2Ksb/LX/AMl55a+3/wAcy0/vPtf3K/h/L7YqyTFX&#xA;Yq7FXYq7FXYqxjyl/wApD526/wDHYg69P+OPp/TFWT4q7FXYq7FXYq7FWGH/AMnKvX/lHT/q/wC9&#xA;w6+/hirM8VdirsVdirsVdirDPzN+z5V6/wDKRad9nr1f8PHFWQ3OqyRxXhRED28M0ilmZqGLp6iI&#xA;pcBuo41JHTFFvDdE/PX8x9WsbNLOx0+fVrpFW3teEkYuJZnmj4xu0nD/AEZYlmchipR1DMh5EKWV&#xA;+V/zsuJrLWE1/TZU1bRdKOqy21rGDHPHDFHJI8UhkcUk+sRlP2aVIdqNxVY1F+evmjVvO2m2UE+k&#xA;6HoVwUW7kuLuG5aNEtrm6ln9WMei0f8AolAwkClSvQvyRV76rKyhlIZWFVYbgg9xireKpV5s/wCU&#xA;V1n/AJgbn/ky2KprirsVdirHfy5Eg/L7y16jBm/RdnuoKinoJxFCW3A6+Pt0xVkWKuxV2KuxV2Ku&#xA;xVjPlLl/iDzrUjj+mYaCm/8Axx9P71xVk2KuxV2KuxV2KuxVhvxf8rjG44/4dNRTev14U3rirMsV&#xA;dirsVdirsVdirDfzL5U8rcSAf8Raf1FdqvXuO2KsmuNTihS9IUlrKL1XDFY1I4lgObkKOnVqAZMw&#xA;IiD3ot5fp/5q+arxNP8Aqvl/Tree61QaMltNdTJLDcyWD6g3qqLasa/uuFRy57OtVIrBKhr35/2d&#xA;laXl7YaZHJHaaodLlaZ3rLa/Up7y3uk9GKVvTl+rSqAR8PU98VZH5r/MXy35asbSa90SefVLrTzf&#xA;/UbeBJRCkcYULPcD91GvNhEGqRX2xVU/Knzz5o83W2pXWsaVDpkFlOLWL05fUd3EaSkkBnAHCVdq&#xA;7eJ7Ks8xVKvNn/KK6z/zA3P/ACZbFU1xVj3n/VbvSvKtzeWt0LBlmtIp9QIRha2893FDc3P70PH+&#xA;4gd5KupUcasKVxViC/mQltpPkzUtR1xU9e5mt9bt40ieS4jGlz3cTtbxxvOsrUt5VSELX1FHEhlG&#xA;Kq35feexHZab5Tl0q7bVNP060CCP6uY5Io7WCrCVplj5kyc/Sr6gjKsyiuKsy/Tererx/wAP3vpc&#xA;a8/Vsa8q9OP1nw71xVb+nNa/6ly8/vOP99Y/3f8AN/vR1/yfxxVLdc88ajomk3eq6h5cvks7QKzu&#xA;j20x4GUoXZIZZHAVOLkhSBvWgUtiqTTfnPpdnd6lBqWl3sDab6aTRQrHcOZXkdWWL03/AH/FQnIQ&#xA;8ihJDUpirKo/MWoTxW89roV5NbzgOJRLY09NkLK60uTyqaffXFW31zWh6nDy5eNxp6VZrEcq/ar/&#xA;AKQeNMVYD5c/MiGz1/Wbm70q+i0/zNqq/oNmSJZmltoLbSrpbiNpVa3CXdusQaUKCzKKnkuKvQH1&#xA;vVg0YTy/espakhMtiOK8SagfWTX4qCmKrZNc1oer6fly8fjGGhrNYrzk+L4T/pB4jZfi369NsVWT&#xA;69r6lvR8tXkgH2OU9itfgY7/AL9qfGAv017UxVih/OvTFmsXn0y7tbG9W5cSziONkW2kkib1hJJH&#xA;9W+KGn77jVqqtSN1WQ6R54bW9KXUtI0PULiF2ZAs31a2kDxtwdZI5pkljZSOjIDiqPOt6t6qqPL9&#xA;6YirFn9WxqGBHEcfrO9QTvXt74q881Pzpf6f+Zc+rXWg3sVlpuk29rqy0iklU3tzKbT6uiSf6S00&#xA;sYQCHmeVVpWmKs8tPNV1f6XDqOm6JeXUF1AtxZuJbJUlWROcZ5G4JAYEdsVV31vVg0YTy/espakh&#xA;MtiOK8SagfWTX4qCmKqTa9r4Vivlq8LBZSo9exFWVqRCvr7c13J/Z98VYzrf5ujSjdi40K9hOn3d&#xA;vbXnJUdgs3OUtFHG5ab/AEaP1Kx8lX4uRARsVTfR/wAxrDWL+9sNN02+uLmwIFwB9VVDVmWsUjTr&#xA;HMFdGVjGzBWHE0O2KpkNc1r0I2Ply8E7cPUi9axotSOdG+sb8RWm2/tirC/zL1zzBNJ5ds7Py9d/&#xA;pFtZiuNOSR7b0pfqltJcOHlWYxxtxViFdhyCnia7YqyLQ/Pen+adOnm0zR729suRt5w4tYwecavQ&#xA;pNOhZJIpVdWpxdWDKSDXFUH/AIf0ZbFIk8hFTazSXNnbr+j1QTcTEkgYT/CzRAL0+Ffh6DFVs3l3&#xA;QzdW848g+pJZJaxWkzfo8MkcHONVH780EMUjcR35EbYqk3mO88pWn1TTNZ8iD0tOsb2404TrZmGG&#xA;ziR1uAk3No46p6fJOXKjHY8d1WvJXmvyJa3Gl2+k+WZbHW9RhlIjgt4YeMjErcxM0sqGFmfTmHpy&#xA;8Xb0Tt8BoqzxNb1YtIH8v3qqGpGRLYnkvEGpH1kU+KopiqW65qPmK+0G9s4vLd2Lm7sZ4wDPZcVn&#xA;ePiicvX3UljVqdum+KsqxV2KoPWrK4v9IvrG3mS3nuoJIYp5EMqI0iFQzRh4i4Fa05ivjirFfLf5&#xA;d3Wk65BqVxqiXUcMSs1tHbGHle/UrewefmZpf3Zhs14xUqGJPNtgFWbYq7FUo836Jda75Y1LRrW6&#xA;jsptQga3F1LCbhUWT4XPpLJAWPGtPjFDvv0xVh99+U2pT6k+pwa7HBeW809zo5+pF0t5b5i98ZFM&#xA;4M3qM7enuvp7fapirPNH0yDStJstMtyTBYW8VtCW3YpCgRa+9FxVF4q8+X8rtRdrQ3OsxN6d5d3F&#xA;6IbNo/Wt7vU01X0V5XEhjZJ4+PPeqEjjyowVeg4q7FXYq8uv/wAlbvVNNl07U9dje3vluE1YW9kY&#xA;jMr3c97biIvcTel6U10/KvLmKD4euKs58q6FdaPp80d7eLf6hd3M15e3UcRt42lmatI4S8xRVUBQ&#xA;C7dOuKozWtWtdH0i91a7DG0sIJLm44AFhHEpdyASK0UE4qwZtMfzdrus6ppOqRxRLFowsJnsjLEs&#xA;1mzanBJzFyvro6X1HULGQGWjVFcVZp5d0aPRNBsNIjladbGCOD13ADSFFozkDYFjvQYqmOKuxVgn&#xA;mL8udX1fU9Rv4tagtHuJoZdPH1JpDBxsriwmEhNwolLxXjlCAnBqVDjYqozyZ+Xy+WdQuZkvjc2f&#xA;CWLTbYxem0EdxdSXkwlk5t6zNNLswVKKAKE74qy/FUj8yeXbrWL3RZo7uO3t9Lu5Lq5hkhaVp1lt&#xA;ZrQxq6yxel8F055cW3pt4qobyN5Qm8s2E8Fzf/pG4mMK+uIfq6iG1t47WFPTDyfEI4QXavxMSQFF&#xA;FCrJcVdirFPOfkm78y3UB/SEdpZJZXtnLF9XMsxa8RQsqSmVEX02jVuLRty3G1cVS/Sfy0vbTXLP&#xA;VLrWFueEzXuoQJa+kJ7z1LyRHjYyyGKJf0g49M8yeCfH9rkqzvFXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYql+vaONX042LTvbxvJE8pjCkukUiyNEwcMOMnHi3scVYBqfl78xvKsVpof5&#xA;ZW1g+n8bu7up9ZaRlErzL6NujRMrARxNwjHCgjQCtaYqzDyRH51TQl/xlLaS620jPJ9QDCBUahVF&#xA;5AN8G4qa/PFU/wAVdirsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman Italic.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>EuclidSymbol</stFnt:fontName>
                  <stFnt:fontFamily>Euclid Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.60 (January 2001)</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Euclid Symbol.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:9c6ab89d-9eba-4783-b985-f1dcb1732e86</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9c6ab89d-9eba-4783-b985-f1dcb1732e86</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:9c6ab89d-9eba-4783-b985-f1dcb1732e86</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9c6ab89d-9eba-4783-b985-f1dcb1732e86</stEvt:instanceID>
                  <stEvt:when>2018-01-16T15:02:42-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -351.621 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 351.621 li
596.964 351.621 li
596.964 0 li
cp
clp
62.2138 159.909 mo
57.7138 159.909 li
57.7138 160.909 li
62.2138 160.909 li
cp
58.2138 160.409 mo
58.2138 9.90918 li
57.2138 9.90918 li
57.2138 160.409 li
cp
191.214 158.409 mo
191.214 160.409 li
192.214 160.409 li
192.214 158.409 li
cp
183.714 158.409 mo
183.714 160.409 li
184.714 160.409 li
184.714 158.409 li
cp
174.214 158.409 mo
174.214 160.409 li
175.214 160.409 li
175.214 158.409 li
cp
160.714 158.409 mo
160.714 160.409 li
161.714 160.409 li
161.714 158.409 li
cp
137.464 156.409 mo
137.464 160.409 li
138.464 160.409 li
138.464 156.409 li
cp
133.964 158.409 mo
133.964 160.409 li
134.964 160.409 li
134.964 158.409 li
cp
129.964 158.409 mo
129.964 160.409 li
130.964 160.409 li
130.964 158.409 li
cp
125.714 158.409 mo
125.714 160.409 li
126.714 160.409 li
126.714 158.409 li
cp
120.464 158.409 mo
120.464 160.409 li
121.464 160.409 li
121.464 158.409 li
cp
114.464 158.409 mo
114.464 160.409 li
115.464 160.409 li
115.464 158.409 li
cp
106.964 158.409 mo
106.964 160.409 li
107.964 160.409 li
107.964 158.409 li
cp
97.2138 158.409 mo
97.2138 160.409 li
98.2138 160.409 li
98.2138 158.409 li
cp
83.7138 158.409 mo
83.7138 160.409 li
84.7138 160.409 li
84.7138 158.409 li
cp
60.7138 156.409 mo
60.7138 160.409 li
61.7138 160.409 li
61.7138 156.409 li
cp
57.7138 160.909 mo
191.714 160.909 li
191.714 159.909 li
57.7138 159.909 li
cp
57.7138 160.409 mo
58.2138 160.409 li
58.2138 10.4092 li
191.214 10.4092 li
191.214 159.909 li
57.7138 159.909 li
57.7138 160.409 li
58.2138 160.409 li
57.7138 160.409 li
57.7138 160.909 li
192.214 160.909 li
192.214 9.40918 li
57.2138 9.40918 li
57.2138 160.909 li
57.7138 160.909 li
57.7138 160.409 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
62.2138 84.6592 mo
57.7138 84.6592 li
57.7138 85.6592 li
62.2138 85.6592 li
cp
59.9638 88.1592 mo
57.7138 88.1592 li
57.7138 89.1592 li
59.9638 89.1592 li
cp
59.9638 91.9092 mo
57.7138 91.9092 li
57.7138 92.9092 li
59.9638 92.9092 li
cp
59.9638 96.4092 mo
57.7138 96.4092 li
57.7138 97.4092 li
59.9638 97.4092 li
cp
59.9638 101.409 mo
57.7138 101.409 li
57.7138 102.409 li
59.9638 102.409 li
cp
59.9638 107.409 mo
57.7138 107.409 li
57.7138 108.409 li
59.9638 108.409 li
cp
59.9638 114.659 mo
57.7138 114.659 li
57.7138 115.659 li
59.9638 115.659 li
cp
59.9638 124.159 mo
57.7138 124.159 li
57.7138 125.159 li
59.9638 125.159 li
cp
59.9638 137.409 mo
57.7138 137.409 li
57.7138 138.409 li
59.9638 138.409 li
cp
f
62.2138 9.40918 mo
57.7138 9.40918 li
57.7138 10.4092 li
62.2138 10.4092 li
cp
59.9638 12.6592 mo
57.7138 12.6592 li
57.7138 13.6592 li
59.9638 13.6592 li
cp
59.9638 16.6592 mo
57.7138 16.6592 li
57.7138 17.6592 li
59.9638 17.6592 li
cp
59.9638 20.9092 mo
57.7138 20.9092 li
57.7138 21.9092 li
59.9638 21.9092 li
cp
59.9638 25.9092 mo
57.7138 25.9092 li
57.7138 26.9092 li
59.9638 26.9092 li
cp
59.9638 31.9092 mo
57.7138 31.9092 li
57.7138 32.9092 li
59.9638 32.9092 li
cp
59.9638 39.4092 mo
57.7138 39.4092 li
57.7138 40.4092 li
59.9638 40.4092 li
cp
59.9638 48.6592 mo
57.7138 48.6592 li
57.7138 49.6592 li
59.9638 49.6592 li
cp
59.9638 61.9092 mo
57.7138 61.9092 li
57.7138 62.9092 li
59.9638 62.9092 li
cp
f
182.044 124.389 mo
182.044 122.595 180.588 121.139 178.794 121.139 cv
176.999 121.139 175.544 122.595 175.544 124.389 cv
175.544 126.184 176.999 127.639 178.794 127.639 cv
180.588 127.639 182.044 126.184 182.044 124.389 cv
181.544 124.389 li
181.541 125.907 180.311 127.136 178.794 127.139 cv
177.276 127.136 176.047 125.907 176.044 124.389 cv
176.047 122.872 177.276 121.642 178.794 121.639 cv
180.311 121.642 181.541 122.872 181.544 124.389 cv
182.044 124.389 li
cp
177.004 102.549 mo
177.004 100.755 175.548 99.2996 173.754 99.2993 cv
171.959 99.2995 170.504 100.755 170.504 102.549 cv
170.504 104.343 171.959 105.799 173.754 105.799 cv
175.548 105.799 177.004 104.343 177.004 102.549 cv
176.504 102.549 li
176.501 104.067 175.271 105.297 173.754 105.299 cv
172.236 105.297 171.007 104.067 171.004 102.549 cv
171.007 101.031 172.236 99.8021 173.754 99.7993 cv
175.271 99.8021 176.501 101.031 176.504 102.549 cv
177.004 102.549 li
cp
168.364 93.9092 mo
168.363 92.1147 166.908 90.6594 165.114 90.6592 cv
163.32 90.6594 161.864 92.1146 161.864 93.9092 cv
161.864 95.7037 163.32 97.1589 165.114 97.1592 cv
166.908 97.1589 168.363 95.7037 168.364 93.9092 cv
167.864 93.9092 li
167.861 95.4272 166.632 96.6564 165.114 96.6592 cv
163.596 96.6564 162.366 95.4271 162.364 93.9092 cv
162.366 92.3912 163.596 91.1619 165.114 91.1592 cv
166.632 91.1619 167.861 92.3912 167.864 93.9092 cv
168.364 93.9092 li
cp
156.964 82.8691 mo
156.964 81.0751 155.508 79.6194 153.714 79.6191 cv
151.919 79.6194 150.464 81.0751 150.464 82.8691 cv
150.464 84.6636 151.919 86.1189 153.714 86.1191 cv
155.508 86.1189 156.964 84.6637 156.964 82.8691 cv
156.464 82.8691 li
156.461 84.3871 155.231 85.6164 153.714 85.6191 cv
152.196 85.6164 150.967 84.3871 150.964 82.8691 cv
150.967 81.3516 152.196 80.1219 153.714 80.1191 cv
155.231 80.1219 156.461 81.3517 156.464 82.8691 cv
156.964 82.8691 li
cp
144.364 75.6689 mo
144.363 73.8749 142.908 72.4192 141.114 72.4189 cv
139.32 72.4192 137.864 73.8748 137.864 75.6689 cv
137.864 77.4635 139.32 78.9187 141.114 78.9189 cv
142.908 78.9187 144.363 77.4634 144.364 75.6689 cv
143.864 75.6689 li
143.861 77.1869 142.632 78.4162 141.114 78.4189 cv
139.596 78.4162 138.366 77.1869 138.364 75.6689 cv
138.366 74.1515 139.596 72.9217 141.114 72.9189 cv
142.632 72.9217 143.861 74.1515 143.864 75.6689 cv
144.364 75.6689 li
cp
130.204 68.9492 mo
130.204 67.1547 128.748 65.6995 126.954 65.6992 cv
125.16 65.6994 123.704 67.1547 123.704 68.9492 cv
123.704 70.7432 125.159 72.199 126.954 72.1992 cv
128.748 72.1989 130.204 70.7433 130.204 68.9492 cv
129.704 68.9492 li
129.701 70.4667 128.471 71.6965 126.954 71.6992 cv
125.436 71.6965 124.207 70.4667 124.204 68.9492 cv
124.207 67.4312 125.436 66.202 126.954 66.1992 cv
128.472 66.202 129.701 67.4313 129.704 68.9492 cv
130.204 68.9492 li
cp
114.364 59.5894 mo
114.363 57.7948 112.908 56.3396 111.114 56.3394 cv
109.32 56.3396 107.864 57.7948 107.864 59.5894 cv
107.864 61.3834 109.32 62.8391 111.114 62.8394 cv
112.908 62.8391 114.363 61.3834 114.364 59.5894 cv
113.864 59.5894 li
113.861 61.1068 112.632 62.3366 111.114 62.3394 cv
109.596 62.3366 108.366 61.1068 108.364 59.5894 cv
108.366 58.0714 109.596 56.8421 111.114 56.8394 cv
112.632 56.8421 113.861 58.0714 113.864 59.5894 cv
114.364 59.5894 li
cp
95.644 49.269 mo
95.6437 47.475 94.1881 46.0193 92.394 46.019 cv
90.5994 46.0193 89.1442 47.475 89.144 49.269 cv
89.1442 51.0635 90.5995 52.5188 92.394 52.519 cv
94.188 52.5188 95.6437 51.0636 95.644 49.269 cv
95.144 49.269 li
95.1412 50.787 93.9115 52.0163 92.394 52.019 cv
90.876 52.0163 89.6467 50.787 89.644 49.269 cv
89.6467 47.7516 90.8761 46.5218 92.394 46.519 cv
93.9114 46.5218 95.1412 47.7516 95.144 49.269 cv
95.644 49.269 li
cp
75.4838 37.269 mo
75.4836 35.475 74.0279 34.0193 72.2338 34.019 cv
70.4393 34.0193 68.9841 35.475 68.9838 37.269 cv
68.9841 39.0635 70.4393 40.5188 72.2338 40.519 cv
74.0279 40.5188 75.4836 39.0636 75.4838 37.269 cv
74.9838 37.269 li
74.9811 38.787 73.7513 40.0163 72.2338 40.019 cv
70.7158 40.0163 69.4866 38.787 69.4838 37.269 cv
69.4866 35.7516 70.7159 34.5218 72.2338 34.519 cv
73.7513 34.5218 74.9811 35.7516 74.9838 37.269 cv
75.4838 37.269 li
cp
0 .993286 1 0 cmyk
f
177.964 127.659 mo
179.214 127.659 li
179.214 127.159 li
177.964 127.159 li
f
178.714 126.409 mo
178.714 126.159 li
175.464 126.159 li
175.464 132.659 li
181.964 132.659 li
181.964 126.159 li
178.714 126.159 li
178.714 126.409 li
178.714 126.659 li
181.464 126.659 li
181.464 132.159 li
175.964 132.159 li
175.964 126.659 li
178.714 126.659 li
178.714 126.409 li
cp
173.714 99.4092 mo
173.714 99.1592 li
170.464 99.1592 li
170.464 105.659 li
176.964 105.659 li
176.964 99.1592 li
173.714 99.1592 li
173.714 99.4092 li
173.714 99.6592 li
176.464 99.6592 li
176.464 105.159 li
170.964 105.159 li
170.964 99.6592 li
173.714 99.6592 li
173.714 99.4092 li
cp
165.214 90.1592 mo
165.214 89.9092 li
161.964 89.9092 li
161.964 96.4092 li
168.464 96.4092 li
168.464 89.9092 li
165.214 89.9092 li
165.214 90.1592 li
165.214 90.4092 li
167.964 90.4092 li
167.964 95.9092 li
162.464 95.9092 li
162.464 90.4092 li
165.214 90.4092 li
165.214 90.1592 li
cp
153.714 80.6592 mo
153.714 80.4092 li
150.464 80.4092 li
150.464 86.9092 li
156.964 86.9092 li
156.964 80.4092 li
153.714 80.4092 li
153.714 80.6592 li
153.714 80.9092 li
156.464 80.9092 li
156.464 86.4092 li
150.964 86.4092 li
150.964 80.9092 li
153.714 80.9092 li
153.714 80.6592 li
cp
141.214 72.9092 mo
141.214 72.6592 li
137.964 72.6592 li
137.964 79.1592 li
144.464 79.1592 li
144.464 72.6592 li
141.214 72.6592 li
141.214 72.9092 li
141.214 73.1592 li
143.964 73.1592 li
143.964 78.6592 li
138.464 78.6592 li
138.464 73.1592 li
141.214 73.1592 li
141.214 72.9092 li
cp
126.964 66.1592 mo
126.964 65.9092 li
123.714 65.9092 li
123.714 72.4092 li
130.214 72.4092 li
130.214 65.9092 li
126.964 65.9092 li
126.964 66.1592 li
126.964 66.4092 li
129.714 66.4092 li
129.714 71.9092 li
124.214 71.9092 li
124.214 66.4092 li
126.964 66.4092 li
126.964 66.1592 li
cp
111.214 56.9092 mo
111.214 56.6592 li
107.964 56.6592 li
107.964 63.1592 li
114.464 63.1592 li
114.464 56.6592 li
111.214 56.6592 li
111.214 56.9092 li
111.214 57.1592 li
113.964 57.1592 li
113.964 62.6592 li
108.464 62.6592 li
108.464 57.1592 li
111.214 57.1592 li
111.214 56.9092 li
cp
92.4638 46.6592 mo
92.4638 46.4092 li
89.2138 46.4092 li
89.2138 52.9092 li
95.7138 52.9092 li
95.7138 46.4092 li
92.4638 46.4092 li
92.4638 46.6592 li
92.4638 46.9092 li
95.2138 46.9092 li
95.2138 52.4092 li
89.7138 52.4092 li
89.7138 46.9092 li
92.4638 46.9092 li
92.4638 46.6592 li
cp
72.2138 34.6592 mo
72.2138 34.4092 li
68.9638 34.4092 li
68.9638 40.9092 li
75.4638 40.9092 li
75.4638 34.4092 li
72.2138 34.4092 li
72.2138 34.6592 li
72.2138 34.9092 li
74.9638 34.9092 li
74.9638 40.4092 li
69.4638 40.4092 li
69.4638 34.9092 li
72.2138 34.9092 li
72.2138 34.6592 li
cp
177.964 137.159 mo
179.214 137.159 li
179.214 136.659 li
177.964 136.659 li
cp
178.464 132.409 mo
178.464 136.909 li
178.964 136.909 li
178.964 132.409 li
cp
177.964 123.659 mo
179.214 123.659 li
179.214 123.159 li
177.964 123.159 li
cp
178.964 126.409 mo
178.964 123.409 li
178.464 123.409 li
178.464 126.409 li
cp
.852903 .490181 .699306 .485023 cmyk
f
178.714 115.659 mo
178.506 115.521 li
176.413 118.659 li
178.714 122.11 li
181.014 118.659 li
178.714 115.208 li
178.506 115.521 li
178.714 115.659 li
178.506 115.798 li
180.413 118.659 li
178.714 121.208 li
177.014 118.659 li
178.922 115.798 li
178.714 115.659 li
178.506 115.798 li
178.714 115.659 li
cp
173.714 97.9092 mo
173.506 97.7705 li
171.413 100.909 li
173.714 104.36 li
176.014 100.909 li
173.714 97.4585 li
173.506 97.7705 li
173.714 97.9092 li
173.506 98.0479 li
175.413 100.909 li
173.714 103.458 li
172.014 100.909 li
173.922 98.0479 li
173.714 97.9092 li
173.506 98.0479 li
173.714 97.9092 li
cp
165.214 88.9092 mo
165.006 88.7705 li
162.913 91.9092 li
165.214 95.3599 li
167.514 91.9092 li
165.214 88.4585 li
165.006 88.7705 li
165.214 88.9092 li
165.006 89.0479 li
166.913 91.9092 li
165.214 94.4585 li
163.514 91.9092 li
165.422 89.0479 li
165.214 88.9092 li
165.006 89.0479 li
165.214 88.9092 li
cp
153.714 79.9092 mo
153.506 79.7705 li
151.413 82.9092 li
153.714 86.3599 li
156.014 82.9092 li
153.714 79.4585 li
153.506 79.7705 li
153.714 79.9092 li
153.506 80.0479 li
155.413 82.9092 li
153.714 85.4585 li
152.014 82.9092 li
153.922 80.0479 li
153.714 79.9092 li
153.506 80.0479 li
153.714 79.9092 li
cp
141.214 72.6592 mo
141.006 72.5205 li
138.913 75.6592 li
141.214 79.1099 li
143.514 75.6592 li
141.214 72.2085 li
141.006 72.5205 li
141.214 72.6592 li
141.006 72.7979 li
142.913 75.6592 li
141.214 78.2085 li
139.514 75.6592 li
141.422 72.7979 li
141.214 72.6592 li
141.006 72.7979 li
141.214 72.6592 li
cp
126.964 63.6592 mo
126.756 63.5205 li
124.663 66.6592 li
126.964 70.1099 li
129.264 66.6592 li
126.964 63.2085 li
126.756 63.5205 li
126.964 63.6592 li
126.756 63.7979 li
128.663 66.6592 li
126.964 69.2085 li
125.264 66.6592 li
127.172 63.7979 li
126.964 63.6592 li
126.756 63.7979 li
126.964 63.6592 li
cp
111.214 54.4092 mo
111.006 54.2705 li
108.913 57.4092 li
111.214 60.8599 li
113.514 57.4092 li
111.214 53.9585 li
111.006 54.2705 li
111.214 54.4092 li
111.006 54.5479 li
112.913 57.4092 li
111.214 59.9585 li
109.514 57.4092 li
111.422 54.5479 li
111.214 54.4092 li
111.006 54.5479 li
111.214 54.4092 li
cp
92.4638 45.1592 mo
92.2558 45.0205 li
90.1634 48.1592 li
92.4638 51.6099 li
94.7643 48.1592 li
92.4638 44.7085 li
92.2558 45.0205 li
92.4638 45.1592 li
92.2558 45.2979 li
94.1634 48.1592 li
92.4638 50.7085 li
90.7643 48.1592 li
92.6718 45.2979 li
92.4638 45.1592 li
92.2558 45.2979 li
92.4638 45.1592 li
cp
72.2138 36.1592 mo
72.0058 36.0205 li
69.9134 39.1592 li
72.2138 42.6099 li
74.5143 39.1592 li
72.2138 35.7085 li
72.0058 36.0205 li
72.2138 36.1592 li
72.0058 36.2979 li
73.9134 39.1592 li
72.2138 41.7085 li
70.5143 39.1592 li
72.4218 36.2979 li
72.2138 36.1592 li
72.0058 36.2979 li
72.2138 36.1592 li
cp
.883848 .768521 0 0 cmyk
f
60.7138 306.659 mo
60.7138 311.159 li
61.7138 311.159 li
61.7138 306.659 li
cp
57.7138 311.659 mo
191.714 311.659 li
191.714 310.659 li
57.7138 310.659 li
cp
57.7138 311.159 mo
58.2138 311.159 li
58.2138 160.909 li
191.214 160.909 li
191.214 310.659 li
57.7138 310.659 li
57.7138 311.159 li
58.2138 311.159 li
57.7138 311.159 li
57.7138 311.659 li
192.214 311.659 li
192.214 159.909 li
57.2138 159.909 li
57.2138 311.659 li
57.7138 311.659 li
57.7138 311.159 li
cp
0 0 0 1 cmyk
f
137.464 306.659 mo
137.464 311.159 li
138.464 311.159 li
138.464 306.659 li
cp
133.964 308.909 mo
133.964 311.159 li
134.964 311.159 li
134.964 308.909 li
cp
129.964 308.909 mo
129.964 311.159 li
130.964 311.159 li
130.964 308.909 li
cp
125.714 308.909 mo
125.714 311.159 li
126.714 311.159 li
126.714 308.909 li
cp
120.464 308.909 mo
120.464 311.159 li
121.464 311.159 li
121.464 308.909 li
cp
114.464 308.909 mo
114.464 311.159 li
115.464 311.159 li
115.464 308.909 li
cp
106.964 308.909 mo
106.964 311.159 li
107.964 311.159 li
107.964 308.909 li
cp
97.2138 308.909 mo
97.2138 311.159 li
98.2138 311.159 li
98.2138 308.909 li
cp
83.7138 308.909 mo
83.7138 311.159 li
84.7138 311.159 li
84.7138 308.909 li
cp
f
191.214 308.909 mo
191.214 311.159 li
192.214 311.159 li
192.214 308.909 li
cp
183.714 308.909 mo
183.714 311.159 li
184.714 311.159 li
184.714 308.909 li
cp
174.214 308.909 mo
174.214 311.159 li
175.214 311.159 li
175.214 308.909 li
cp
160.714 308.909 mo
160.714 311.159 li
161.714 311.159 li
161.714 308.909 li
cp
f
61.7138 310.659 mo
57.7138 310.659 li
57.7138 311.659 li
61.7138 311.659 li
cp
58.2138 311.159 mo
58.2138 160.409 li
57.2138 160.409 li
57.2138 311.159 li
cp
f
61.7138 235.409 mo
57.7138 235.409 li
57.7138 236.409 li
61.7138 236.409 li
cp
59.7138 238.909 mo
57.7138 238.909 li
57.7138 239.909 li
59.7138 239.909 li
cp
59.7138 242.659 mo
57.7138 242.659 li
57.7138 243.659 li
59.7138 243.659 li
cp
59.7138 246.909 mo
57.7138 246.909 li
57.7138 247.909 li
59.7138 247.909 li
cp
59.7138 252.159 mo
57.7138 252.159 li
57.7138 253.159 li
59.7138 253.159 li
cp
59.7138 257.909 mo
57.7138 257.909 li
57.7138 258.909 li
59.7138 258.909 li
cp
59.7138 265.409 mo
57.7138 265.409 li
57.7138 266.409 li
59.7138 266.409 li
cp
59.7138 274.659 mo
57.7138 274.659 li
57.7138 275.659 li
59.7138 275.659 li
cp
59.7138 287.909 mo
57.7138 287.909 li
57.7138 288.909 li
59.7138 288.909 li
cp
f
61.7138 159.909 mo
57.7138 159.909 li
57.7138 160.909 li
61.7138 160.909 li
cp
59.7138 163.409 mo
57.7138 163.409 li
57.7138 164.409 li
59.7138 164.409 li
cp
59.7138 167.409 mo
57.7138 167.409 li
57.7138 168.409 li
59.7138 168.409 li
cp
59.7138 171.659 mo
57.7138 171.659 li
57.7138 172.659 li
59.7138 172.659 li
cp
59.7138 176.659 mo
57.7138 176.659 li
57.7138 177.659 li
59.7138 177.659 li
cp
59.7138 182.659 mo
57.7138 182.659 li
57.7138 183.659 li
59.7138 183.659 li
cp
59.7138 189.909 mo
57.7138 189.909 li
57.7138 190.909 li
59.7138 190.909 li
cp
59.7138 199.409 mo
57.7138 199.409 li
57.7138 200.409 li
59.7138 200.409 li
cp
59.7138 212.659 mo
57.7138 212.659 li
57.7138 213.659 li
59.7138 213.659 li
cp
f
182.524 250.149 mo
182.524 248.355 181.068 246.9 179.274 246.899 cv
177.479 246.9 176.024 248.355 176.024 250.149 cv
176.024 251.944 177.479 253.399 179.274 253.399 cv
181.068 253.399 182.524 251.944 182.524 250.149 cv
182.024 250.149 li
182.021 251.667 180.791 252.897 179.274 252.899 cv
177.756 252.897 176.527 251.667 176.524 250.149 cv
176.527 248.631 177.756 247.402 179.274 247.399 cv
180.791 247.402 182.021 248.631 182.024 250.149 cv
182.524 250.149 li
cp
177.964 247.749 mo
177.964 245.955 176.508 244.499 174.714 244.499 cv
172.919 244.499 171.464 245.955 171.464 247.749 cv
171.464 249.544 172.919 250.999 174.714 250.999 cv
176.508 250.999 177.964 249.544 177.964 247.749 cv
177.464 247.749 li
177.461 249.267 176.232 250.496 174.714 250.499 cv
173.196 250.496 171.967 249.267 171.964 247.749 cv
171.967 246.231 173.196 245.002 174.714 244.999 cv
176.232 245.002 177.461 246.231 177.464 247.749 cv
177.964 247.749 li
cp
169.804 242.229 mo
169.803 240.435 168.348 238.98 166.554 238.979 cv
164.76 238.98 163.304 240.435 163.304 242.229 cv
163.304 244.023 164.76 245.479 166.554 245.479 cv
168.348 245.479 169.803 244.023 169.804 242.229 cv
169.304 242.229 li
169.301 243.746 168.072 244.977 166.554 244.979 cv
165.036 244.977 163.806 243.746 163.804 242.229 cv
163.806 240.712 165.036 239.482 166.554 239.479 cv
168.072 239.482 169.301 240.711 169.304 242.229 cv
169.804 242.229 li
cp
158.284 235.27 mo
158.283 233.475 156.828 232.02 155.034 232.02 cv
153.24 232.02 151.784 233.475 151.784 235.27 cv
151.784 237.063 153.239 238.519 155.034 238.52 cv
156.828 238.519 158.283 237.063 158.284 235.27 cv
157.784 235.27 li
157.781 236.787 156.552 238.017 155.034 238.02 cv
153.516 238.017 152.286 236.786 152.284 235.27 cv
152.286 233.752 153.516 232.522 155.034 232.52 cv
156.552 232.522 157.781 233.752 157.784 235.27 cv
158.284 235.27 li
cp
145.804 229.27 mo
145.803 227.475 144.348 226.02 142.554 226.02 cv
140.76 226.02 139.304 227.475 139.304 229.27 cv
139.304 231.063 140.76 232.519 142.554 232.52 cv
144.348 232.519 145.803 231.063 145.804 229.27 cv
145.304 229.27 li
145.301 230.787 144.072 232.017 142.554 232.02 cv
141.036 232.017 139.806 230.786 139.804 229.27 cv
139.806 227.752 141.036 226.522 142.554 226.52 cv
144.072 226.522 145.301 227.752 145.304 229.27 cv
145.804 229.27 li
cp
131.644 222.069 mo
131.644 220.275 130.188 218.82 128.394 218.819 cv
126.599 218.82 125.144 220.275 125.144 222.069 cv
125.144 223.864 126.599 225.319 128.394 225.319 cv
130.188 225.319 131.644 223.864 131.644 222.069 cv
131.144 222.069 li
131.141 223.587 129.911 224.817 128.394 224.819 cv
126.876 224.817 125.647 223.587 125.644 222.069 cv
125.647 220.551 126.876 219.322 128.394 219.319 cv
129.911 219.322 131.141 220.551 131.144 222.069 cv
131.644 222.069 li
cp
116.044 212.949 mo
116.044 211.155 114.588 209.699 112.794 209.699 cv
110.999 209.699 109.544 211.155 109.544 212.949 cv
109.544 214.744 110.999 216.199 112.794 216.199 cv
114.588 216.199 116.044 214.744 116.044 212.949 cv
115.544 212.949 li
115.541 214.467 114.311 215.696 112.794 215.699 cv
111.276 215.696 110.047 214.467 110.044 212.949 cv
110.047 211.431 111.276 210.202 112.794 210.199 cv
114.311 210.202 115.541 211.431 115.544 212.949 cv
116.044 212.949 li
cp
97.3237 203.109 mo
97.3234 201.315 95.8682 199.86 94.0737 199.859 cv
92.2796 199.86 90.8239 201.315 90.8237 203.109 cv
90.8239 204.904 92.2796 206.359 94.0737 206.359 cv
95.8682 206.359 97.3234 204.904 97.3237 203.109 cv
96.8237 203.109 li
96.8209 204.627 95.5917 205.857 94.0737 205.859 cv
92.5562 205.857 91.3264 204.627 91.3237 203.109 cv
91.3264 201.591 92.5562 200.362 94.0737 200.359 cv
95.5917 200.362 96.8209 201.591 96.8237 203.109 cv
97.3237 203.109 li
cp
75.2436 190.629 mo
75.2433 188.835 73.7882 187.379 71.9936 187.379 cv
70.1995 187.379 68.7439 188.835 68.7436 190.629 cv
68.7439 192.423 70.1996 193.879 71.9936 193.879 cv
73.7881 193.879 75.2434 192.423 75.2436 190.629 cv
74.7436 190.629 li
74.7409 192.147 73.5116 193.376 71.9936 193.379 cv
70.4761 193.376 69.2464 192.147 69.2436 190.629 cv
69.2464 189.112 70.4762 187.882 71.9936 187.879 cv
73.5115 187.882 74.7409 189.112 74.7436 190.629 cv
75.2436 190.629 li
cp
0 .993286 1 0 cmyk
f
179.214 246.909 mo
179.214 246.659 li
175.964 246.659 li
175.964 253.159 li
182.464 253.159 li
182.464 246.659 li
179.214 246.659 li
179.214 246.909 li
179.214 247.159 li
181.964 247.159 li
181.964 252.659 li
176.464 252.659 li
176.464 247.159 li
179.214 247.159 li
179.214 246.909 li
cp
174.714 243.909 mo
174.714 243.659 li
171.464 243.659 li
171.464 250.159 li
177.964 250.159 li
177.964 243.659 li
174.714 243.659 li
174.714 243.909 li
174.714 244.159 li
177.464 244.159 li
177.464 249.659 li
171.964 249.659 li
171.964 244.159 li
174.714 244.159 li
174.714 243.909 li
cp
166.464 239.659 mo
166.464 239.409 li
163.214 239.409 li
163.214 245.909 li
169.714 245.909 li
169.714 239.409 li
166.464 239.409 li
166.464 239.659 li
166.464 239.909 li
169.214 239.909 li
169.214 245.409 li
163.714 245.409 li
163.714 239.909 li
166.464 239.909 li
166.464 239.659 li
cp
154.964 232.409 mo
154.964 232.159 li
151.714 232.159 li
151.714 238.659 li
158.214 238.659 li
158.214 232.159 li
154.964 232.159 li
154.964 232.409 li
154.964 232.659 li
157.714 232.659 li
157.714 238.159 li
152.214 238.159 li
152.214 232.659 li
154.964 232.659 li
154.964 232.409 li
cp
142.464 226.409 mo
142.464 226.159 li
139.214 226.159 li
139.214 232.659 li
145.714 232.659 li
145.714 226.159 li
142.464 226.159 li
142.464 226.409 li
142.464 226.659 li
145.214 226.659 li
145.214 232.159 li
139.714 232.159 li
139.714 226.659 li
142.464 226.659 li
142.464 226.409 li
cp
128.464 219.409 mo
128.464 219.159 li
125.214 219.159 li
125.214 225.659 li
131.714 225.659 li
131.714 219.159 li
128.464 219.159 li
128.464 219.409 li
128.464 219.659 li
131.214 219.659 li
131.214 225.159 li
125.714 225.159 li
125.714 219.659 li
128.464 219.659 li
128.464 219.409 li
cp
112.714 209.909 mo
112.714 209.659 li
109.464 209.659 li
109.464 216.159 li
115.964 216.159 li
115.964 209.659 li
112.714 209.659 li
112.714 209.909 li
112.714 210.159 li
115.464 210.159 li
115.464 215.659 li
109.964 215.659 li
109.964 210.159 li
112.714 210.159 li
112.714 209.909 li
cp
93.9638 199.909 mo
93.9638 199.659 li
90.7138 199.659 li
90.7138 206.159 li
97.2138 206.159 li
97.2138 199.659 li
93.9638 199.659 li
93.9638 199.909 li
93.9638 200.159 li
96.7138 200.159 li
96.7138 205.659 li
91.2138 205.659 li
91.2138 200.159 li
93.9638 200.159 li
93.9638 199.909 li
cp
71.9638 188.159 mo
71.9638 187.909 li
68.7138 187.909 li
68.7138 194.409 li
75.2138 194.409 li
75.2138 187.909 li
71.9638 187.909 li
71.9638 188.159 li
71.9638 188.409 li
74.7138 188.409 li
74.7138 193.909 li
69.2138 193.909 li
69.2138 188.409 li
71.9638 188.409 li
71.9638 188.159 li
cp
.852903 .490181 .699306 .485023 cmyk
f
179.214 247.659 mo
179.006 247.52 li
176.913 250.659 li
179.214 254.11 li
181.514 250.659 li
179.214 247.208 li
179.006 247.52 li
179.214 247.659 li
179.006 247.798 li
180.913 250.659 li
179.214 253.208 li
177.514 250.659 li
179.422 247.798 li
179.214 247.659 li
179.006 247.798 li
179.214 247.659 li
cp
174.714 240.659 mo
174.506 240.52 li
172.413 243.659 li
174.714 247.11 li
177.014 243.659 li
174.714 240.208 li
174.506 240.52 li
174.714 240.659 li
174.506 240.798 li
176.413 243.659 li
174.714 246.208 li
173.014 243.659 li
174.922 240.798 li
174.714 240.659 li
174.506 240.798 li
174.714 240.659 li
cp
166.464 236.909 mo
166.256 236.77 li
164.163 239.909 li
166.464 243.36 li
168.764 239.909 li
166.464 236.458 li
166.256 236.77 li
166.464 236.909 li
166.256 237.048 li
168.163 239.909 li
166.464 242.458 li
164.764 239.909 li
166.672 237.048 li
166.464 236.909 li
166.256 237.048 li
166.464 236.909 li
cp
154.964 229.909 mo
154.756 229.77 li
152.663 232.909 li
154.964 236.36 li
157.264 232.909 li
154.964 229.458 li
154.756 229.77 li
154.964 229.909 li
154.756 230.048 li
156.663 232.909 li
154.964 235.458 li
153.264 232.909 li
155.172 230.048 li
154.964 229.909 li
154.756 230.048 li
154.964 229.909 li
cp
142.464 224.409 mo
142.256 224.27 li
140.163 227.409 li
142.464 230.86 li
144.764 227.409 li
142.464 223.958 li
142.256 224.27 li
142.464 224.409 li
142.256 224.548 li
144.163 227.409 li
142.464 229.958 li
140.764 227.409 li
142.672 224.548 li
142.464 224.409 li
142.256 224.548 li
142.464 224.409 li
cp
128.464 216.659 mo
128.256 216.52 li
126.163 219.659 li
128.464 223.11 li
130.764 219.659 li
128.464 216.208 li
128.256 216.52 li
128.464 216.659 li
128.256 216.798 li
130.163 219.659 li
128.464 222.208 li
126.764 219.659 li
128.672 216.798 li
128.464 216.659 li
128.256 216.798 li
128.464 216.659 li
cp
112.714 207.409 mo
112.506 207.27 li
110.413 210.409 li
112.714 213.86 li
115.014 210.409 li
112.714 206.958 li
112.506 207.27 li
112.714 207.409 li
112.506 207.548 li
114.413 210.409 li
112.714 212.958 li
111.014 210.409 li
112.922 207.548 li
112.714 207.409 li
112.506 207.548 li
112.714 207.409 li
cp
93.9638 197.159 mo
93.7558 197.02 li
91.6633 200.159 li
93.9638 203.61 li
96.2643 200.159 li
93.9638 196.708 li
93.7558 197.02 li
93.9638 197.159 li
93.7558 197.298 li
95.6633 200.159 li
93.9638 202.708 li
92.2643 200.159 li
94.1718 197.298 li
93.9638 197.159 li
93.7558 197.298 li
93.9638 197.159 li
cp
71.9638 188.159 mo
71.7558 188.02 li
69.6633 191.159 li
71.9638 194.61 li
74.2643 191.159 li
71.9638 187.708 li
71.7558 188.02 li
71.9638 188.159 li
71.7558 188.298 li
73.6633 191.159 li
71.9638 193.708 li
70.2643 191.159 li
72.1718 188.298 li
71.9638 188.159 li
71.7558 188.298 li
71.9638 188.159 li
cp
.883848 .768521 0 0 cmyk
f
195.714 9.40918 mo
191.714 9.40918 li
191.714 10.4092 li
195.714 10.4092 li
cp
193.714 12.6592 mo
191.714 12.6592 li
191.714 13.6592 li
193.714 13.6592 li
cp
193.714 16.6592 mo
191.714 16.6592 li
191.714 17.6592 li
193.714 17.6592 li
cp
193.714 20.9092 mo
191.714 20.9092 li
191.714 21.9092 li
193.714 21.9092 li
cp
193.714 25.9092 mo
191.714 25.9092 li
191.714 26.9092 li
193.714 26.9092 li
cp
193.714 31.9092 mo
191.714 31.9092 li
191.714 32.9092 li
193.714 32.9092 li
cp
193.714 39.4092 mo
191.714 39.4092 li
191.714 40.4092 li
193.714 40.4092 li
cp
193.714 48.6592 mo
191.714 48.6592 li
191.714 49.6592 li
193.714 49.6592 li
cp
193.714 61.9092 mo
191.714 61.9092 li
191.714 62.9092 li
193.714 62.9092 li
cp
195.714 84.6592 mo
191.714 84.6592 li
191.714 85.6592 li
195.714 85.6592 li
cp
193.714 88.1592 mo
191.714 88.1592 li
191.714 89.1592 li
193.714 89.1592 li
cp
193.714 91.9092 mo
191.714 91.9092 li
191.714 92.9092 li
193.714 92.9092 li
cp
193.714 96.4092 mo
191.714 96.4092 li
191.714 97.4092 li
193.714 97.4092 li
cp
193.714 101.409 mo
191.714 101.409 li
191.714 102.409 li
193.714 102.409 li
cp
193.714 107.409 mo
191.714 107.409 li
191.714 108.409 li
193.714 108.409 li
cp
193.714 114.659 mo
191.714 114.659 li
191.714 115.659 li
193.714 115.659 li
cp
193.714 124.159 mo
191.714 124.159 li
191.714 125.159 li
193.714 125.159 li
cp
193.714 137.409 mo
191.714 137.409 li
191.714 138.409 li
193.714 138.409 li
cp
195.714 159.909 mo
191.714 159.909 li
191.714 160.909 li
195.714 160.909 li
cp
192.214 160.409 mo
192.214 9.90918 li
191.214 9.90918 li
191.214 160.409 li
cp
326.214 158.159 mo
326.214 160.409 li
327.214 160.409 li
327.214 158.159 li
cp
318.714 158.159 mo
318.714 160.409 li
319.714 160.409 li
319.714 158.159 li
cp
308.964 158.159 mo
308.964 160.409 li
309.964 160.409 li
309.964 158.159 li
cp
295.464 158.159 mo
295.464 160.409 li
296.464 160.409 li
296.464 158.159 li
cp
272.214 155.909 mo
272.214 160.409 li
273.214 160.409 li
273.214 155.909 li
cp
268.714 158.159 mo
268.714 160.409 li
269.714 160.409 li
269.714 158.159 li
cp
264.714 158.159 mo
264.714 160.409 li
265.714 160.409 li
265.714 158.159 li
cp
260.214 158.159 mo
260.214 160.409 li
261.214 160.409 li
261.214 158.159 li
cp
254.964 158.159 mo
254.964 160.409 li
255.964 160.409 li
255.964 158.159 li
cp
248.964 158.159 mo
248.964 160.409 li
249.964 160.409 li
249.964 158.159 li
cp
241.464 158.159 mo
241.464 160.409 li
242.464 160.409 li
242.464 158.159 li
cp
231.714 158.159 mo
231.714 160.409 li
232.714 160.409 li
232.714 158.159 li
cp
218.214 158.159 mo
218.214 160.409 li
219.214 160.409 li
219.214 158.159 li
cp
194.714 155.909 mo
194.714 160.409 li
195.714 160.409 li
195.714 155.909 li
cp
191.714 160.909 mo
326.714 160.909 li
326.714 159.909 li
191.714 159.909 li
cp
191.714 160.409 mo
192.214 160.409 li
192.214 10.4092 li
326.214 10.4092 li
326.214 159.909 li
191.714 159.909 li
191.714 160.409 li
192.214 160.409 li
191.714 160.409 li
191.714 160.909 li
327.214 160.909 li
327.214 9.40918 li
191.214 9.40918 li
191.214 160.909 li
191.714 160.909 li
191.714 160.409 li
cp
0 0 0 1 cmyk
f
316.684 102.309 mo
316.683 100.515 315.228 99.0593 313.434 99.0591 cv
311.64 99.0594 310.184 100.515 310.184 102.309 cv
310.184 104.104 311.64 105.559 313.434 105.559 cv
315.228 105.559 316.683 104.104 316.684 102.309 cv
316.184 102.309 li
316.181 103.827 314.952 105.056 313.434 105.059 cv
311.917 105.056 310.686 103.827 310.684 102.309 cv
310.686 100.792 311.917 99.5618 313.434 99.5591 cv
314.951 99.5618 316.181 100.792 316.184 102.309 cv
316.684 102.309 li
cp
311.643 95.1094 mo
311.643 93.3149 310.188 91.8596 308.394 91.8594 cv
306.6 91.8596 305.144 93.3148 305.144 95.1094 cv
305.144 96.9035 306.6 98.3591 308.394 98.3594 cv
310.188 98.3591 311.643 96.9034 311.643 95.1094 cv
311.144 95.1094 li
311.141 96.6269 309.911 97.8566 308.394 97.8594 cv
306.877 97.8566 305.646 96.6268 305.643 95.1094 cv
305.646 93.5915 306.877 92.3621 308.394 92.3594 cv
309.911 92.3621 311.141 93.5914 311.144 95.1094 cv
311.644 95.1094 li
cp
303.244 91.0293 mo
303.244 89.2347 301.788 87.7796 299.994 87.7793 cv
298.2 87.7795 296.744 89.2347 296.744 91.0293 cv
296.744 92.8234 298.2 94.279 299.994 94.2793 cv
301.788 94.279 303.244 92.8234 303.244 91.0293 cv
302.744 91.0293 li
302.741 92.5467 301.511 93.7765 299.994 93.7793 cv
298.476 93.7765 297.246 92.5467 297.244 91.0293 cv
297.246 89.5114 298.476 88.282 299.994 88.2793 cv
301.511 88.282 302.741 89.5114 302.744 91.0293 cv
303.244 91.0293 li
cp
291.484 83.3491 mo
291.484 81.555 290.028 80.0994 288.234 80.0991 cv
286.439 80.0994 284.984 81.5551 284.984 83.3491 cv
284.984 85.1436 286.439 86.5989 288.234 86.5991 cv
290.028 86.5989 291.484 85.1437 291.484 83.3491 cv
290.984 83.3491 li
290.981 84.8671 289.751 86.0964 288.234 86.0991 cv
286.716 86.0964 285.487 84.8671 285.484 83.3491 cv
285.487 81.8316 286.716 80.6019 288.234 80.5991 cv
289.751 80.6019 290.981 81.8317 290.984 83.3491 cv
291.484 83.3491 li
cp
279.004 79.5093 mo
279.004 77.7147 277.548 76.2595 275.754 76.2593 cv
273.959 76.2595 272.504 77.7148 272.504 79.5093 cv
272.504 81.3033 273.959 82.759 275.754 82.7593 cv
277.548 82.759 279.004 81.3034 279.004 79.5093 cv
278.504 79.5093 li
278.501 81.0267 277.271 82.2565 275.754 82.2593 cv
274.236 82.2565 273.007 81.0268 273.004 79.5093 cv
273.007 77.9913 274.236 76.762 275.754 76.7593 cv
277.271 76.762 278.501 77.9913 278.504 79.5093 cv
279.004 79.5093 li
cp
264.844 71.3491 mo
264.843 69.5551 263.388 68.0994 261.594 68.0991 cv
259.8 68.0994 258.344 69.555 258.344 71.3491 cv
258.344 73.1437 259.8 74.5989 261.594 74.5991 cv
263.388 74.5989 264.843 73.1436 264.844 71.3491 cv
264.344 71.3491 li
264.341 72.8671 263.112 74.0964 261.594 74.0991 cv
260.076 74.0964 258.846 72.8671 258.844 71.3491 cv
258.846 69.8317 260.076 68.6019 261.594 68.5991 cv
263.112 68.6019 264.341 69.8316 264.344 71.3491 cv
264.844 71.3491 li
cp
248.764 62.709 mo
248.763 60.9149 247.308 59.4592 245.514 59.459 cv
243.72 59.4593 242.264 60.9149 242.264 62.709 cv
242.264 64.5035 243.72 65.9587 245.514 65.959 cv
247.308 65.9587 248.763 64.5035 248.764 62.709 cv
248.264 62.709 li
248.261 64.227 247.032 65.4562 245.514 65.459 cv
243.996 65.4562 242.766 64.2269 242.764 62.709 cv
242.766 61.1915 243.996 59.9617 245.514 59.959 cv
247.032 59.9617 248.261 61.1915 248.264 62.709 cv
248.764 62.709 li
cp
230.284 53.8291 mo
230.283 52.0351 228.828 50.5794 227.034 50.5791 cv
225.24 50.5794 223.784 52.035 223.784 53.8291 cv
223.784 55.6237 225.24 57.0788 227.034 57.0791 cv
228.828 57.0789 230.283 55.6236 230.284 53.8291 cv
229.784 53.8291 li
229.781 55.3471 228.552 56.5764 227.034 56.5791 cv
225.516 56.5764 224.286 55.347 224.284 53.8291 cv
224.286 52.3117 225.516 51.0818 227.034 51.0791 cv
228.552 51.0818 229.781 52.3116 229.784 53.8291 cv
230.284 53.8291 li
cp
210.124 40.1494 mo
210.124 38.3549 208.668 36.8997 206.874 36.8994 cv
205.079 36.8996 203.624 38.3549 203.624 40.1494 cv
203.624 41.9434 205.079 43.3991 206.874 43.3994 cv
208.668 43.3991 210.124 41.9435 210.124 40.1494 cv
209.624 40.1494 li
209.621 41.6668 208.391 42.8967 206.874 42.8994 cv
205.356 42.8967 204.127 41.6669 204.124 40.1494 cv
204.127 38.6314 205.356 37.4022 206.874 37.3994 cv
208.391 37.4022 209.621 38.6315 209.624 40.1494 cv
210.124 40.1494 li
cp
0 .993286 1 0 cmyk
f
313.464 99.1592 mo
313.464 98.9092 li
310.214 98.9092 li
310.214 105.409 li
316.714 105.409 li
316.714 98.9092 li
313.464 98.9092 li
313.464 99.1592 li
313.464 99.4092 li
316.214 99.4092 li
316.214 104.909 li
310.714 104.909 li
310.714 99.4092 li
313.464 99.4092 li
313.464 99.1592 li
cp
308.464 92.1592 mo
308.464 91.9092 li
305.214 91.9092 li
305.214 98.4092 li
311.714 98.4092 li
311.714 91.9092 li
308.464 91.9092 li
308.464 92.1592 li
308.464 92.4092 li
311.214 92.4092 li
311.214 97.9092 li
305.714 97.9092 li
305.714 92.4092 li
308.464 92.4092 li
308.464 92.1592 li
cp
299.964 87.1592 mo
299.964 86.9092 li
296.714 86.9092 li
296.714 93.4092 li
303.214 93.4092 li
303.214 86.9092 li
299.964 86.9092 li
299.964 87.1592 li
299.964 87.4092 li
302.714 87.4092 li
302.714 92.9092 li
297.214 92.9092 li
297.214 87.4092 li
299.964 87.4092 li
299.964 87.1592 li
cp
288.214 80.4092 mo
288.214 80.1592 li
284.964 80.1592 li
284.964 86.6592 li
291.464 86.6592 li
291.464 80.1592 li
288.214 80.1592 li
288.214 80.4092 li
288.214 80.6592 li
290.964 80.6592 li
290.964 86.1592 li
285.464 86.1592 li
285.464 80.6592 li
288.214 80.6592 li
288.214 80.4092 li
cp
275.714 77.4092 mo
275.714 77.1592 li
272.464 77.1592 li
272.464 83.6592 li
278.964 83.6592 li
278.964 77.1592 li
275.714 77.1592 li
275.714 77.4092 li
275.714 77.6592 li
278.464 77.6592 li
278.464 83.1592 li
272.964 83.1592 li
272.964 77.6592 li
275.714 77.6592 li
275.714 77.4092 li
cp
261.714 68.6592 mo
261.714 68.4092 li
258.464 68.4092 li
258.464 74.9092 li
264.964 74.9092 li
264.964 68.4092 li
261.714 68.4092 li
261.714 68.6592 li
261.714 68.9092 li
264.464 68.9092 li
264.464 74.4092 li
258.964 74.4092 li
258.964 68.9092 li
261.714 68.9092 li
261.714 68.6592 li
cp
245.464 60.6592 mo
245.464 60.4092 li
242.214 60.4092 li
242.214 66.9092 li
248.714 66.9092 li
248.714 60.4092 li
245.464 60.4092 li
245.464 60.6592 li
245.464 60.9092 li
248.214 60.9092 li
248.214 66.4092 li
242.714 66.4092 li
242.714 60.9092 li
245.464 60.9092 li
245.464 60.6592 li
cp
226.964 50.1592 mo
226.964 49.9092 li
223.714 49.9092 li
223.714 56.4092 li
230.214 56.4092 li
230.214 49.9092 li
226.964 49.9092 li
226.964 50.1592 li
226.964 50.4092 li
229.714 50.4092 li
229.714 55.9092 li
224.214 55.9092 li
224.214 50.4092 li
226.964 50.4092 li
226.964 50.1592 li
cp
206.964 36.9092 mo
206.964 36.6592 li
203.714 36.6592 li
203.714 43.1592 li
210.214 43.1592 li
210.214 36.6592 li
206.964 36.6592 li
206.964 36.9092 li
206.964 37.1592 li
209.714 37.1592 li
209.714 42.6592 li
204.214 42.6592 li
204.214 37.1592 li
206.964 37.1592 li
206.964 36.9092 li
cp
.852903 .490181 .699306 .485023 cmyk
f
313.464 96.9092 mo
313.256 96.7705 li
311.163 99.9091 li
313.464 103.36 li
315.764 99.9092 li
313.464 96.4585 li
313.256 96.7705 li
313.464 96.9092 li
313.256 97.0479 li
315.163 99.9092 li
313.464 102.458 li
311.764 99.9092 li
313.672 97.0479 li
313.464 96.9092 li
313.256 97.0479 li
313.464 96.9092 li
cp
308.464 89.6592 mo
308.256 89.5205 li
306.163 92.6591 li
308.464 96.1099 li
310.764 92.6592 li
308.464 89.2085 li
308.256 89.5205 li
308.464 89.6592 li
308.256 89.7979 li
310.163 92.6592 li
308.464 95.2085 li
306.764 92.6592 li
308.672 89.7979 li
308.464 89.6592 li
308.256 89.7979 li
308.464 89.6592 li
cp
299.964 83.9092 mo
299.756 83.7705 li
297.663 86.9091 li
299.964 90.3599 li
302.264 86.9092 li
299.964 83.4585 li
299.756 83.7705 li
299.964 83.9092 li
299.756 84.0479 li
301.663 86.9092 li
299.964 89.4585 li
298.264 86.9092 li
300.172 84.0479 li
299.964 83.9092 li
299.756 84.0479 li
299.964 83.9092 li
cp
288.214 80.4092 mo
288.006 80.2705 li
285.913 83.4091 li
288.214 86.8599 li
290.514 83.4092 li
288.214 79.9585 li
288.006 80.2705 li
288.214 80.4092 li
288.006 80.5479 li
289.913 83.4092 li
288.214 85.9585 li
286.514 83.4092 li
288.422 80.5479 li
288.214 80.4092 li
288.006 80.5479 li
288.214 80.4092 li
cp
275.714 74.4092 mo
275.506 74.2705 li
273.413 77.4091 li
275.714 80.8599 li
278.014 77.4092 li
275.714 73.9585 li
275.506 74.2705 li
275.714 74.4092 li
275.506 74.5479 li
277.413 77.4092 li
275.714 79.9585 li
274.014 77.4092 li
275.922 74.5479 li
275.714 74.4092 li
275.506 74.5479 li
275.714 74.4092 li
cp
261.714 66.9092 mo
261.506 66.7705 li
259.413 69.9091 li
261.714 73.3599 li
264.014 69.9092 li
261.714 66.4585 li
261.506 66.7705 li
261.714 66.9092 li
261.506 67.0479 li
263.413 69.9092 li
261.714 72.4585 li
260.014 69.9092 li
261.922 67.0479 li
261.714 66.9092 li
261.506 67.0479 li
261.714 66.9092 li
cp
245.464 57.9092 mo
245.256 57.7705 li
243.163 60.9092 li
245.464 64.3599 li
247.764 60.9092 li
245.464 57.4585 li
245.256 57.7705 li
245.464 57.9092 li
245.256 58.0479 li
247.163 60.9092 li
245.464 63.4585 li
243.764 60.9092 li
245.672 58.0479 li
245.464 57.9092 li
245.256 58.0479 li
245.464 57.9092 li
cp
226.964 46.6592 mo
226.756 46.5205 li
224.663 49.6592 li
226.964 53.1099 li
229.264 49.6592 li
226.964 46.2085 li
226.756 46.5205 li
226.964 46.6592 li
226.756 46.7979 li
228.663 49.6592 li
226.964 52.2085 li
225.264 49.6592 li
227.172 46.7979 li
226.964 46.6592 li
226.756 46.7979 li
226.964 46.6592 li
cp
206.964 38.9092 mo
206.756 38.7705 li
204.663 41.9092 li
206.964 45.3599 li
209.264 41.9092 li
206.964 38.4585 li
206.756 38.7705 li
206.964 38.9092 li
206.756 39.0479 li
208.663 41.9092 li
206.964 44.4585 li
205.264 41.9092 li
207.172 39.0479 li
206.964 38.9092 li
206.756 39.0479 li
206.964 38.9092 li
cp
.883848 .768521 0 0 cmyk
f
194.714 306.159 mo
194.714 311.159 li
195.714 311.159 li
195.714 306.159 li
cp
191.714 311.659 mo
326.714 311.659 li
326.714 310.659 li
191.714 310.659 li
cp
191.714 311.159 mo
192.214 311.159 li
192.214 160.909 li
326.214 160.909 li
326.214 310.659 li
191.714 310.659 li
191.714 311.159 li
192.214 311.159 li
191.714 311.159 li
191.714 311.659 li
327.214 311.659 li
327.214 159.909 li
191.214 159.909 li
191.214 311.659 li
191.714 311.659 li
191.714 311.159 li
cp
0 0 0 1 cmyk
f
272.214 306.159 mo
272.214 311.159 li
273.214 311.159 li
273.214 306.159 li
cp
268.714 308.659 mo
268.714 311.159 li
269.714 311.159 li
269.714 308.659 li
cp
264.714 308.659 mo
264.714 311.159 li
265.714 311.159 li
265.714 308.659 li
cp
260.214 308.659 mo
260.214 311.159 li
261.214 311.159 li
261.214 308.659 li
cp
254.964 308.659 mo
254.964 311.159 li
255.964 311.159 li
255.964 308.659 li
cp
248.964 308.659 mo
248.964 311.159 li
249.964 311.159 li
249.964 308.659 li
cp
241.464 308.659 mo
241.464 311.159 li
242.464 311.159 li
242.464 308.659 li
cp
231.714 308.659 mo
231.714 311.159 li
232.714 311.159 li
232.714 308.659 li
cp
218.214 308.659 mo
218.214 311.159 li
219.214 311.159 li
219.214 308.659 li
cp
f
326.214 308.659 mo
326.214 311.159 li
327.214 311.159 li
327.214 308.659 li
cp
318.714 308.659 mo
318.714 311.159 li
319.714 311.159 li
319.714 308.659 li
cp
308.964 308.659 mo
308.964 311.159 li
309.964 311.159 li
309.964 308.659 li
cp
295.464 308.659 mo
295.464 311.159 li
296.464 311.159 li
296.464 308.659 li
cp
f
195.464 159.909 mo
191.714 159.909 li
191.714 160.909 li
195.464 160.909 li
cp
193.714 163.409 mo
191.714 163.409 li
191.714 164.409 li
193.714 164.409 li
cp
193.714 167.409 mo
191.714 167.409 li
191.714 168.409 li
193.714 168.409 li
cp
193.714 171.659 mo
191.714 171.659 li
191.714 172.659 li
193.714 172.659 li
cp
193.714 176.659 mo
191.714 176.659 li
191.714 177.659 li
193.714 177.659 li
cp
193.714 182.659 mo
191.714 182.659 li
191.714 183.659 li
193.714 183.659 li
cp
193.714 189.909 mo
191.714 189.909 li
191.714 190.909 li
193.714 190.909 li
cp
193.714 199.409 mo
191.714 199.409 li
191.714 200.409 li
193.714 200.409 li
cp
193.714 212.659 mo
191.714 212.659 li
191.714 213.659 li
193.714 213.659 li
cp
195.464 235.409 mo
191.714 235.409 li
191.714 236.409 li
195.464 236.409 li
cp
193.714 238.909 mo
191.714 238.909 li
191.714 239.909 li
193.714 239.909 li
cp
193.714 242.659 mo
191.714 242.659 li
191.714 243.659 li
193.714 243.659 li
cp
193.714 246.909 mo
191.714 246.909 li
191.714 247.909 li
193.714 247.909 li
cp
193.714 252.159 mo
191.714 252.159 li
191.714 253.159 li
193.714 253.159 li
cp
193.714 257.909 mo
191.714 257.909 li
191.714 258.909 li
193.714 258.909 li
cp
193.714 265.409 mo
191.714 265.409 li
191.714 266.409 li
193.714 266.409 li
cp
193.714 274.659 mo
191.714 274.659 li
191.714 275.659 li
193.714 275.659 li
cp
193.714 287.909 mo
191.714 287.909 li
191.714 288.909 li
193.714 288.909 li
cp
195.464 310.659 mo
191.714 310.659 li
191.714 311.659 li
195.464 311.659 li
cp
192.214 311.159 mo
192.214 160.409 li
191.214 160.409 li
191.214 311.159 li
cp
f
317.164 249.429 mo
317.164 247.635 315.709 246.179 313.914 246.179 cv
312.119 246.179 310.664 247.635 310.664 249.429 cv
310.664 251.223 312.12 252.678 313.914 252.679 cv
315.709 252.678 317.164 251.223 317.164 249.429 cv
316.664 249.429 li
316.661 250.947 315.432 252.176 313.914 252.179 cv
312.396 252.176 311.167 250.947 311.164 249.429 cv
311.167 247.912 312.396 246.681 313.914 246.679 cv
315.432 246.681 316.661 247.912 316.664 249.429 cv
317.164 249.429 li
cp
311.884 245.109 mo
311.884 243.315 310.428 241.86 308.634 241.859 cv
306.839 241.86 305.384 243.315 305.384 245.109 cv
305.384 246.904 306.839 248.359 308.634 248.359 cv
310.428 248.359 311.884 246.904 311.884 245.109 cv
311.384 245.109 li
311.381 246.627 310.152 247.857 308.634 247.859 cv
307.116 247.857 305.887 246.627 305.884 245.109 cv
305.887 243.591 307.116 242.362 308.634 242.359 cv
310.152 242.362 311.381 243.591 311.384 245.109 cv
311.884 245.109 li
cp
303.724 240.069 mo
303.723 238.275 302.268 236.82 300.474 236.819 cv
298.68 236.82 297.224 238.275 297.224 240.069 cv
297.224 241.864 298.68 243.319 300.474 243.319 cv
302.268 243.319 303.723 241.864 303.724 240.069 cv
303.224 240.069 li
303.221 241.587 301.992 242.817 300.474 242.819 cv
298.957 242.817 297.726 241.587 297.724 240.069 cv
297.726 238.551 298.957 237.322 300.474 237.319 cv
301.992 237.322 303.221 238.551 303.224 240.069 cv
303.724 240.069 li
cp
292.204 234.549 mo
292.204 232.755 290.748 231.299 288.954 231.299 cv
287.159 231.299 285.704 232.755 285.704 234.549 cv
285.704 236.343 287.16 237.799 288.954 237.799 cv
290.748 237.799 292.204 236.343 292.204 234.549 cv
291.704 234.549 li
291.701 236.067 290.472 237.296 288.954 237.299 cv
287.436 237.296 286.207 236.067 286.204 234.549 cv
286.207 233.032 287.436 231.802 288.954 231.799 cv
290.471 231.802 291.701 233.032 291.704 234.549 cv
292.204 234.549 li
cp
279.484 227.35 mo
279.484 225.555 278.028 224.1 276.234 224.1 cv
274.439 224.1 272.984 225.555 272.984 227.35 cv
272.984 229.143 274.439 230.599 276.234 230.6 cv
278.028 230.599 279.484 229.143 279.484 227.35 cv
278.984 227.35 li
278.981 228.867 277.751 230.097 276.234 230.1 cv
274.716 230.097 273.487 228.867 273.484 227.35 cv
273.487 225.832 274.716 224.602 276.234 224.6 cv
277.751 224.602 278.981 225.832 278.984 227.35 cv
279.484 227.35 li
cp
265.564 220.149 mo
265.564 218.355 264.108 216.9 262.314 216.899 cv
260.519 216.9 259.064 218.355 259.064 220.149 cv
259.064 221.944 260.519 223.399 262.314 223.399 cv
264.108 223.399 265.564 221.944 265.564 220.149 cv
265.064 220.149 li
265.061 221.667 263.831 222.897 262.314 222.899 cv
260.796 222.897 259.567 221.667 259.564 220.149 cv
259.567 218.631 260.796 217.402 262.314 217.399 cv
263.831 217.402 265.061 218.631 265.064 220.149 cv
265.564 220.149 li
cp
249.484 211.509 mo
249.484 209.715 248.028 208.259 246.234 208.259 cv
244.439 208.259 242.984 209.715 242.984 211.509 cv
242.984 213.303 244.439 214.759 246.234 214.759 cv
248.028 214.759 249.484 213.303 249.484 211.509 cv
248.984 211.509 li
248.981 213.027 247.751 214.256 246.234 214.259 cv
244.716 214.256 243.487 213.027 243.484 211.509 cv
243.487 209.992 244.716 208.762 246.234 208.759 cv
247.751 208.762 248.981 209.992 248.984 211.509 cv
249.484 211.509 li
cp
231.004 201.189 mo
231.004 199.395 229.548 197.94 227.754 197.939 cv
225.959 197.94 224.504 199.395 224.504 201.189 cv
224.504 202.983 225.959 204.439 227.754 204.439 cv
229.548 204.439 231.004 202.983 231.004 201.189 cv
230.504 201.189 li
230.501 202.706 229.271 203.937 227.754 203.939 cv
226.236 203.937 225.007 202.706 225.004 201.189 cv
225.007 199.671 226.236 198.442 227.754 198.439 cv
229.271 198.442 230.501 199.672 230.504 201.189 cv
231.004 201.189 li
cp
210.124 189.909 mo
210.124 188.115 208.668 186.659 206.874 186.659 cv
205.079 186.659 203.624 188.115 203.624 189.909 cv
203.624 191.704 205.079 193.159 206.874 193.159 cv
208.668 193.159 210.124 191.704 210.124 189.909 cv
209.624 189.909 li
209.621 191.427 208.391 192.656 206.874 192.659 cv
205.356 192.656 204.127 191.427 204.124 189.909 cv
204.127 188.391 205.356 187.162 206.874 187.159 cv
208.391 187.162 209.621 188.391 209.624 189.909 cv
210.124 189.909 li
cp
0 .993286 1 0 cmyk
f
313.964 246.659 mo
313.964 246.409 li
310.714 246.409 li
310.714 252.909 li
317.214 252.909 li
317.214 246.409 li
313.964 246.409 li
313.964 246.659 li
313.964 246.909 li
316.714 246.909 li
316.714 252.409 li
311.214 252.409 li
311.214 246.909 li
313.964 246.909 li
313.964 246.659 li
cp
308.714 241.909 mo
308.714 241.659 li
305.464 241.659 li
305.464 248.159 li
311.964 248.159 li
311.964 241.659 li
308.714 241.659 li
308.714 241.909 li
308.714 242.159 li
311.464 242.159 li
311.464 247.659 li
305.964 247.659 li
305.964 242.159 li
308.714 242.159 li
308.714 241.909 li
cp
300.464 237.159 mo
300.464 236.909 li
297.214 236.909 li
297.214 243.409 li
303.714 243.409 li
303.714 236.909 li
300.464 236.909 li
300.464 237.159 li
300.464 237.409 li
303.214 237.409 li
303.214 242.909 li
297.714 242.909 li
297.714 237.409 li
300.464 237.409 li
300.464 237.159 li
cp
288.964 231.659 mo
288.964 231.409 li
285.714 231.409 li
285.714 237.909 li
292.214 237.909 li
292.214 231.409 li
288.964 231.409 li
288.964 231.659 li
288.964 231.909 li
291.714 231.909 li
291.714 237.409 li
286.214 237.409 li
286.214 231.909 li
288.964 231.909 li
288.964 231.659 li
cp
276.214 224.659 mo
276.214 224.409 li
272.964 224.409 li
272.964 230.909 li
279.464 230.909 li
279.464 224.409 li
276.214 224.409 li
276.214 224.659 li
276.214 224.909 li
278.964 224.909 li
278.964 230.409 li
273.464 230.409 li
273.464 224.909 li
276.214 224.909 li
276.214 224.659 li
cp
262.214 217.159 mo
262.214 216.909 li
258.964 216.909 li
258.964 223.409 li
265.464 223.409 li
265.464 216.909 li
262.214 216.909 li
262.214 217.159 li
262.214 217.409 li
264.964 217.409 li
264.964 222.909 li
259.464 222.909 li
259.464 217.409 li
262.214 217.409 li
262.214 217.159 li
cp
246.214 208.659 mo
246.214 208.409 li
242.964 208.409 li
242.964 214.909 li
249.464 214.909 li
249.464 208.409 li
246.214 208.409 li
246.214 208.659 li
246.214 208.909 li
248.964 208.909 li
248.964 214.409 li
243.464 214.409 li
243.464 208.909 li
246.214 208.909 li
246.214 208.659 li
cp
227.714 197.909 mo
227.714 197.659 li
224.464 197.659 li
224.464 204.159 li
230.964 204.159 li
230.964 197.659 li
227.714 197.659 li
227.714 197.909 li
227.714 198.159 li
230.464 198.159 li
230.464 203.659 li
224.964 203.659 li
224.964 198.159 li
227.714 198.159 li
227.714 197.909 li
cp
206.964 187.409 mo
206.964 187.159 li
203.714 187.159 li
203.714 193.659 li
210.214 193.659 li
210.214 187.159 li
206.964 187.159 li
206.964 187.409 li
206.964 187.659 li
209.714 187.659 li
209.714 193.159 li
204.214 193.159 li
204.214 187.659 li
206.964 187.659 li
206.964 187.409 li
cp
.852903 .490181 .699306 .485023 cmyk
f
313.964 244.659 mo
313.756 244.52 li
311.663 247.659 li
313.964 251.11 li
316.264 247.659 li
313.964 244.208 li
313.756 244.52 li
313.964 244.659 li
313.756 244.798 li
315.663 247.659 li
313.964 250.208 li
312.264 247.659 li
314.172 244.798 li
313.964 244.659 li
313.756 244.798 li
313.964 244.659 li
cp
308.714 238.659 mo
308.506 238.52 li
306.413 241.659 li
308.714 245.11 li
311.014 241.659 li
308.714 238.208 li
308.506 238.52 li
308.714 238.659 li
308.506 238.798 li
310.413 241.659 li
308.714 244.208 li
307.014 241.659 li
308.922 238.798 li
308.714 238.659 li
308.506 238.798 li
308.714 238.659 li
cp
300.464 234.909 mo
300.256 234.77 li
298.163 237.909 li
300.464 241.36 li
302.764 237.909 li
300.464 234.458 li
300.256 234.77 li
300.464 234.909 li
300.256 235.048 li
302.163 237.909 li
300.464 240.458 li
298.764 237.909 li
300.672 235.048 li
300.464 234.909 li
300.256 235.048 li
300.464 234.909 li
cp
288.964 228.659 mo
288.756 228.52 li
286.663 231.659 li
288.964 235.11 li
291.264 231.659 li
288.964 228.208 li
288.756 228.52 li
288.964 228.659 li
288.756 228.798 li
290.663 231.659 li
288.964 234.208 li
287.264 231.659 li
289.172 228.798 li
288.964 228.659 li
288.756 228.798 li
288.964 228.659 li
cp
276.214 222.159 mo
276.006 222.02 li
273.913 225.159 li
276.214 228.61 li
278.514 225.159 li
276.214 221.708 li
276.006 222.02 li
276.214 222.159 li
276.006 222.298 li
277.913 225.159 li
276.214 227.708 li
274.514 225.159 li
276.422 222.298 li
276.214 222.159 li
276.006 222.298 li
276.214 222.159 li
cp
262.214 215.159 mo
262.006 215.02 li
259.913 218.159 li
262.214 221.61 li
264.514 218.159 li
262.214 214.708 li
262.006 215.02 li
262.214 215.159 li
262.006 215.298 li
263.913 218.159 li
262.214 220.708 li
260.514 218.159 li
262.422 215.298 li
262.214 215.159 li
262.006 215.298 li
262.214 215.159 li
cp
246.214 206.409 mo
246.006 206.27 li
243.913 209.409 li
246.214 212.86 li
248.514 209.409 li
246.214 205.959 li
246.006 206.27 li
246.214 206.409 li
246.006 206.548 li
247.913 209.409 li
246.214 211.958 li
244.514 209.409 li
246.422 206.548 li
246.214 206.409 li
246.006 206.548 li
246.214 206.409 li
cp
227.714 196.159 mo
227.506 196.02 li
225.413 199.159 li
227.714 202.61 li
230.014 199.159 li
227.714 195.708 li
227.506 196.02 li
227.714 196.159 li
227.506 196.298 li
229.413 199.159 li
227.714 201.708 li
226.014 199.159 li
227.922 196.298 li
227.714 196.159 li
227.506 196.298 li
227.714 196.159 li
cp
206.964 186.159 mo
206.756 186.02 li
204.663 189.159 li
206.964 192.61 li
209.264 189.159 li
206.964 185.709 li
206.756 186.02 li
206.964 186.159 li
206.756 186.298 li
208.663 189.159 li
206.964 191.708 li
205.264 189.159 li
207.172 186.298 li
206.964 186.159 li
206.756 186.298 li
206.964 186.159 li
cp
.883848 .768521 0 0 cmyk
f
330.714 9.40918 mo
326.714 9.40918 li
326.714 10.4092 li
330.714 10.4092 li
cp
328.714 12.6592 mo
326.714 12.6592 li
326.714 13.6592 li
328.714 13.6592 li
cp
328.714 16.6592 mo
326.714 16.6592 li
326.714 17.6592 li
328.714 17.6592 li
cp
328.714 20.9092 mo
326.714 20.9092 li
326.714 21.9092 li
328.714 21.9092 li
cp
328.714 25.9092 mo
326.714 25.9092 li
326.714 26.9092 li
328.714 26.9092 li
cp
328.714 31.9092 mo
326.714 31.9092 li
326.714 32.9092 li
328.714 32.9092 li
cp
328.714 39.4092 mo
326.714 39.4092 li
326.714 40.4092 li
328.714 40.4092 li
cp
328.714 48.6592 mo
326.714 48.6592 li
326.714 49.6592 li
328.714 49.6592 li
cp
328.714 61.9092 mo
326.714 61.9092 li
326.714 62.9092 li
328.714 62.9092 li
cp
330.714 84.6592 mo
326.714 84.6592 li
326.714 85.6592 li
330.714 85.6592 li
cp
328.714 88.1592 mo
326.714 88.1592 li
326.714 89.1592 li
328.714 89.1592 li
cp
328.714 91.9092 mo
326.714 91.9092 li
326.714 92.9092 li
328.714 92.9092 li
cp
328.714 96.4092 mo
326.714 96.4092 li
326.714 97.4092 li
328.714 97.4092 li
cp
328.714 101.409 mo
326.714 101.409 li
326.714 102.409 li
328.714 102.409 li
cp
328.714 107.409 mo
326.714 107.409 li
326.714 108.409 li
328.714 108.409 li
cp
328.714 114.659 mo
326.714 114.659 li
326.714 115.659 li
328.714 115.659 li
cp
328.714 124.159 mo
326.714 124.159 li
326.714 125.159 li
328.714 125.159 li
cp
328.714 137.409 mo
326.714 137.409 li
326.714 138.409 li
328.714 138.409 li
cp
330.714 159.909 mo
326.714 159.909 li
326.714 160.909 li
330.714 160.909 li
cp
327.214 160.409 mo
327.214 9.90918 li
326.214 9.90918 li
326.214 160.409 li
cp
460.964 158.159 mo
460.964 160.409 li
461.964 160.409 li
461.964 158.159 li
cp
453.464 158.159 mo
453.464 160.409 li
454.464 160.409 li
454.464 158.159 li
cp
443.964 158.159 mo
443.964 160.409 li
444.964 160.409 li
444.964 158.159 li
cp
430.214 158.159 mo
430.214 160.409 li
431.214 160.409 li
431.214 158.159 li
cp
406.964 155.909 mo
406.964 160.409 li
407.964 160.409 li
407.964 155.909 li
cp
403.464 158.159 mo
403.464 160.409 li
404.464 160.409 li
404.464 158.159 li
cp
399.464 158.159 mo
399.464 160.409 li
400.464 160.409 li
400.464 158.159 li
cp
394.964 158.159 mo
394.964 160.409 li
395.964 160.409 li
395.964 158.159 li
cp
389.964 158.159 mo
389.964 160.409 li
390.964 160.409 li
390.964 158.159 li
cp
383.714 158.159 mo
383.714 160.409 li
384.714 160.409 li
384.714 158.159 li
cp
376.214 158.159 mo
376.214 160.409 li
377.214 160.409 li
377.214 158.159 li
cp
366.714 158.159 mo
366.714 160.409 li
367.714 160.409 li
367.714 158.159 li
cp
352.964 158.159 mo
352.964 160.409 li
353.964 160.409 li
353.964 158.159 li
cp
329.714 155.909 mo
329.714 160.409 li
330.714 160.409 li
330.714 155.909 li
cp
326.714 160.909 mo
461.464 160.909 li
461.464 159.909 li
326.714 159.909 li
cp
326.714 160.409 mo
327.214 160.409 li
327.214 10.4092 li
460.964 10.4092 li
460.964 159.909 li
326.714 159.909 li
326.714 160.409 li
327.214 160.409 li
326.714 160.409 li
326.714 160.909 li
461.964 160.909 li
461.964 9.40918 li
326.214 9.40918 li
326.214 160.909 li
326.714 160.909 li
326.714 160.409 li
cp
0 0 0 1 cmyk
f
451.559 99.0693 mo
451.558 97.3441 450.159 95.9446 448.434 95.9443 cv
446.708 95.9446 445.309 97.3441 445.309 99.0693 cv
445.309 100.795 446.708 102.194 448.434 102.194 cv
450.159 102.194 451.558 100.795 451.559 99.0693 cv
451.059 99.0693 li
451.056 100.518 449.882 101.692 448.434 101.694 cv
446.985 101.692 445.811 100.518 445.809 99.0693 cv
445.811 97.6207 446.985 96.447 448.434 96.4443 cv
449.882 96.447 451.056 97.6207 451.059 99.0693 cv
451.559 99.0693 li
cp
446.279 96.6689 mo
446.279 94.9437 444.879 93.5442 443.154 93.5439 cv
441.428 93.5442 440.029 94.9438 440.029 96.6689 cv
440.029 98.3945 441.428 99.7938 443.154 99.7939 cv
444.879 99.7937 446.279 98.3946 446.279 96.6689 cv
445.779 96.6689 li
445.777 98.1181 444.603 99.2913 443.154 99.2939 cv
441.705 99.2913 440.532 98.1182 440.529 96.6689 cv
440.532 95.2202 441.705 94.0466 443.154 94.0439 cv
444.603 94.0466 445.777 95.2203 445.779 96.6689 cv
446.279 96.6689 li
cp
437.879 90.9092 mo
437.879 89.184 436.479 87.7844 434.754 87.7842 cv
433.029 87.7844 431.629 89.184 431.629 90.9092 cv
431.629 92.6344 433.029 94.0339 434.754 94.0342 cv
436.479 94.0339 437.879 92.6344 437.879 90.9092 cv
437.379 90.9092 li
437.376 92.3578 436.202 93.5315 434.754 93.5342 cv
433.305 93.5315 432.132 92.3578 432.129 90.9092 cv
432.132 89.4606 433.305 88.2868 434.754 88.2842 cv
436.202 88.2868 437.376 89.4606 437.379 90.9092 cv
437.879 90.9092 li
cp
426.359 85.3892 mo
426.359 83.6639 424.96 82.2644 423.234 82.2642 cv
421.508 82.2644 420.11 83.664 420.109 85.3892 cv
420.11 87.1143 421.508 88.5139 423.234 88.5142 cv
424.96 88.5139 426.359 87.1144 426.359 85.3892 cv
425.859 85.3892 li
425.857 86.8378 424.683 88.0115 423.234 88.0142 cv
421.785 88.0115 420.612 86.8379 420.609 85.3892 cv
420.612 83.9404 421.785 82.7668 423.234 82.7642 cv
424.683 82.7668 425.857 83.9405 425.859 85.3892 cv
426.359 85.3892 li
cp
413.639 78.6689 mo
413.638 76.9437 412.239 75.5442 410.514 75.5439 cv
408.788 75.5442 407.389 76.9437 407.389 78.6689 cv
407.389 80.3946 408.788 81.7937 410.514 81.7939 cv
412.239 81.7937 413.638 80.3946 413.639 78.6689 cv
413.139 78.6689 li
413.136 80.1181 411.962 81.2913 410.514 81.2939 cv
409.065 81.2913 407.891 80.1181 407.889 78.6689 cv
407.891 77.2203 409.065 76.0466 410.514 76.0439 cv
411.962 76.0466 413.136 77.2203 413.139 78.6689 cv
413.639 78.6689 li
cp
399.239 72.4292 mo
399.239 70.704 397.839 69.3045 396.114 69.3042 cv
394.389 69.3045 392.989 70.704 392.989 72.4292 cv
392.989 74.1544 394.389 75.5539 396.114 75.5542 cv
397.839 75.5539 399.239 74.1544 399.239 72.4292 cv
398.739 72.4292 li
398.737 73.8778 397.563 75.0516 396.114 75.0542 cv
394.666 75.0516 393.492 73.8778 393.489 72.4292 cv
393.492 70.9806 394.666 69.8068 396.114 69.8042 cv
397.563 69.8068 398.737 70.9806 398.739 72.4292 cv
399.239 72.4292 li
cp
383.398 63.3091 mo
383.398 61.584 382 60.1843 380.273 60.1841 cv
378.548 60.1844 377.149 61.5839 377.148 63.3091 cv
377.149 65.0343 378.548 66.4338 380.273 66.4341 cv
382 66.4339 383.398 65.0342 383.398 63.3091 cv
382.898 63.3091 li
382.896 64.7578 381.723 65.9314 380.273 65.9341 cv
378.825 65.9314 377.651 64.7577 377.648 63.3091 cv
377.651 61.8605 378.825 60.6867 380.273 60.6841 cv
381.723 60.6867 382.896 61.8604 382.898 63.3091 cv
383.398 63.3091 li
cp
364.919 53.4692 mo
364.919 51.744 363.519 50.3445 361.794 50.3442 cv
360.069 50.3445 358.669 51.744 358.669 53.4692 cv
358.669 55.1945 360.069 56.594 361.794 56.5942 cv
363.519 56.594 364.919 55.1945 364.919 53.4692 cv
364.419 53.4692 li
364.416 54.9178 363.242 56.0916 361.794 56.0942 cv
360.345 56.0916 359.172 54.9178 359.169 53.4692 cv
359.172 52.0206 360.345 50.8469 361.794 50.8442 cv
363.242 50.8469 364.416 52.0206 364.419 53.4692 cv
364.919 53.4692 li
cp
344.518 43.3892 mo
344.518 41.6639 343.119 40.2644 341.394 40.2642 cv
339.668 40.2644 338.269 41.6639 338.269 43.3892 cv
338.269 45.1144 339.668 46.5139 341.394 46.5142 cv
343.119 46.5139 344.518 45.1144 344.518 43.3892 cv
344.019 43.3892 li
344.016 44.8378 342.842 46.0115 341.394 46.0142 cv
339.945 46.0115 338.771 44.8378 338.768 43.3892 cv
338.771 41.9406 339.945 40.7668 341.394 40.7642 cv
342.842 40.7668 344.016 41.9405 344.019 43.3892 cv
344.519 43.3892 li
cp
0 .993286 1 0 cmyk
f
448.464 97.0342 mo
448.464 96.7842 li
445.339 96.7842 li
445.339 103.034 li
451.589 103.034 li
451.589 96.7842 li
448.464 96.7842 li
448.464 97.0342 li
448.464 97.2842 li
451.089 97.2842 li
451.089 102.534 li
445.839 102.534 li
445.839 97.2842 li
448.464 97.2842 li
448.464 97.0342 li
cp
443.214 95.0342 mo
443.214 94.7842 li
440.089 94.7842 li
440.089 101.034 li
446.339 101.034 li
446.339 94.7842 li
443.214 94.7842 li
443.214 95.0342 li
443.214 95.2842 li
445.839 95.2842 li
445.839 100.534 li
440.589 100.534 li
440.589 95.2842 li
443.214 95.2842 li
443.214 95.0342 li
cp
434.714 87.7842 mo
434.714 87.5342 li
431.589 87.5342 li
431.589 93.7842 li
437.839 93.7842 li
437.839 87.5342 li
434.714 87.5342 li
434.714 87.7842 li
434.714 88.0342 li
437.339 88.0342 li
437.339 93.2842 li
432.089 93.2842 li
432.089 88.0342 li
434.714 88.0342 li
434.714 87.7842 li
cp
423.214 82.0342 mo
423.214 81.7842 li
420.089 81.7842 li
420.089 88.0342 li
426.339 88.0342 li
426.339 81.7842 li
423.214 81.7842 li
423.214 82.0342 li
423.214 82.2842 li
425.839 82.2842 li
425.839 87.5342 li
420.589 87.5342 li
420.589 82.2842 li
423.214 82.2842 li
423.214 82.0342 li
cp
410.464 75.5342 mo
410.464 75.2842 li
407.339 75.2842 li
407.339 81.5342 li
413.589 81.5342 li
413.589 75.2842 li
410.464 75.2842 li
410.464 75.5342 li
410.464 75.7842 li
413.089 75.7842 li
413.089 81.0342 li
407.839 81.0342 li
407.839 75.7842 li
410.464 75.7842 li
410.464 75.5342 li
cp
396.214 69.2842 mo
396.214 69.0342 li
393.089 69.0342 li
393.089 75.2842 li
399.339 75.2842 li
399.339 69.0342 li
396.214 69.0342 li
396.214 69.2842 li
396.214 69.5342 li
398.839 69.5342 li
398.839 74.7842 li
393.589 74.7842 li
393.589 69.5342 li
396.214 69.5342 li
396.214 69.2842 li
cp
380.214 61.5342 mo
380.214 61.2842 li
377.089 61.2842 li
377.089 67.5342 li
383.339 67.5342 li
383.339 61.2842 li
380.214 61.2842 li
380.214 61.5342 li
380.214 61.7842 li
382.839 61.7842 li
382.839 67.0342 li
377.589 67.0342 li
377.589 61.7842 li
380.214 61.7842 li
380.214 61.5342 li
cp
361.714 51.0342 mo
361.714 50.7842 li
358.589 50.7842 li
358.589 57.0342 li
364.839 57.0342 li
364.839 50.7842 li
361.714 50.7842 li
361.714 51.0342 li
361.714 51.2842 li
364.339 51.2842 li
364.339 56.5342 li
359.089 56.5342 li
359.089 51.2842 li
361.714 51.2842 li
361.714 51.0342 li
cp
341.464 39.7842 mo
341.464 39.5342 li
338.339 39.5342 li
338.339 45.7842 li
344.589 45.7842 li
344.589 39.5342 li
341.464 39.5342 li
341.464 39.7842 li
341.464 40.0342 li
344.089 40.0342 li
344.089 45.2842 li
338.839 45.2842 li
338.839 40.0342 li
341.464 40.0342 li
341.464 39.7842 li
cp
.852903 .490181 .699306 .485023 cmyk
f
448.464 97.2842 mo
448.256 97.1455 li
446.246 100.159 li
448.464 103.485 li
450.681 100.159 li
448.464 96.8335 li
448.256 97.1455 li
448.464 97.2842 li
448.256 97.4229 li
450.08 100.159 li
448.464 102.584 li
446.847 100.159 li
448.672 97.4229 li
448.464 97.2842 li
448.256 97.4229 li
448.464 97.2842 li
cp
443.214 91.0342 mo
443.006 90.8955 li
440.996 93.9092 li
443.214 97.2347 li
445.431 93.9092 li
443.214 90.5835 li
443.006 90.8955 li
443.214 91.0342 li
443.006 91.1729 li
444.83 93.9092 li
443.214 96.3335 li
441.597 93.9092 li
443.422 91.1729 li
443.214 91.0342 li
443.006 91.1729 li
443.214 91.0342 li
cp
434.714 87.2842 mo
434.506 87.1455 li
432.496 90.1592 li
434.714 93.4847 li
436.931 90.1592 li
434.714 86.8335 li
434.506 87.1455 li
434.714 87.2842 li
434.506 87.4229 li
436.33 90.1592 li
434.714 92.5835 li
433.097 90.1592 li
434.922 87.4229 li
434.714 87.2842 li
434.506 87.4229 li
434.714 87.2842 li
cp
423.214 80.7842 mo
423.006 80.6455 li
420.996 83.6592 li
423.214 86.9847 li
425.431 83.6592 li
423.214 80.3335 li
423.006 80.6455 li
423.214 80.7842 li
423.006 80.9229 li
424.83 83.6592 li
423.214 86.0835 li
421.597 83.6592 li
423.422 80.9229 li
423.214 80.7842 li
423.006 80.9229 li
423.214 80.7842 li
cp
410.464 75.5342 mo
410.256 75.3955 li
408.246 78.4092 li
410.464 81.7347 li
412.681 78.4092 li
410.464 75.0835 li
410.256 75.3955 li
410.464 75.5342 li
410.256 75.6729 li
412.08 78.4092 li
410.464 80.8335 li
408.847 78.4092 li
410.672 75.6729 li
410.464 75.5342 li
410.256 75.6729 li
410.464 75.5342 li
cp
396.214 67.7842 mo
396.006 67.6455 li
393.996 70.6592 li
396.214 73.9847 li
398.431 70.6592 li
396.214 67.3335 li
396.006 67.6455 li
396.214 67.7842 li
396.006 67.9229 li
397.83 70.6592 li
396.214 73.0835 li
394.597 70.6592 li
396.422 67.9229 li
396.214 67.7842 li
396.006 67.9229 li
396.214 67.7842 li
cp
380.214 57.0342 mo
380.006 56.8955 li
377.996 59.9092 li
380.214 63.2348 li
382.431 59.9092 li
380.214 56.5835 li
380.006 56.8955 li
380.214 57.0342 li
380.006 57.1729 li
381.83 59.9092 li
380.214 62.3336 li
378.597 59.9092 li
380.422 57.1729 li
380.214 57.0342 li
380.006 57.1729 li
380.214 57.0342 li
cp
361.714 48.7842 mo
361.506 48.6455 li
359.496 51.6592 li
361.714 54.9848 li
363.931 51.6592 li
361.714 48.3335 li
361.506 48.6455 li
361.714 48.7842 li
361.506 48.9229 li
363.33 51.6592 li
361.714 54.0836 li
360.097 51.6592 li
361.922 48.9229 li
361.714 48.7842 li
361.506 48.9229 li
361.714 48.7842 li
cp
341.464 41.2842 mo
341.256 41.1455 li
339.246 44.1592 li
341.464 47.4848 li
343.681 44.1592 li
341.464 40.8335 li
341.256 41.1455 li
341.464 41.2842 li
341.256 41.4229 li
343.08 44.1592 li
341.464 46.5835 li
339.847 44.1592 li
341.672 41.4229 li
341.464 41.2842 li
341.256 41.4229 li
341.464 41.2842 li
cp
.883848 .768521 0 0 cmyk
f
329.714 306.159 mo
329.714 311.159 li
330.714 311.159 li
330.714 306.159 li
cp
326.714 311.659 mo
461.464 311.659 li
461.464 310.659 li
326.714 310.659 li
cp
326.714 311.159 mo
327.214 311.159 li
327.214 160.909 li
460.964 160.909 li
460.964 310.659 li
326.714 310.659 li
326.714 311.159 li
327.214 311.159 li
326.714 311.159 li
326.714 311.659 li
461.964 311.659 li
461.964 159.909 li
326.214 159.909 li
326.214 311.659 li
326.714 311.659 li
326.714 311.159 li
cp
0 0 0 1 cmyk
f
406.964 306.159 mo
406.964 311.159 li
407.964 311.159 li
407.964 306.159 li
cp
403.464 308.659 mo
403.464 311.159 li
404.464 311.159 li
404.464 308.659 li
cp
399.464 308.659 mo
399.464 311.159 li
400.464 311.159 li
400.464 308.659 li
cp
394.964 308.659 mo
394.964 311.159 li
395.964 311.159 li
395.964 308.659 li
cp
389.964 308.659 mo
389.964 311.159 li
390.964 311.159 li
390.964 308.659 li
cp
383.714 308.659 mo
383.714 311.159 li
384.714 311.159 li
384.714 308.659 li
cp
376.214 308.659 mo
376.214 311.159 li
377.214 311.159 li
377.214 308.659 li
cp
366.714 308.659 mo
366.714 311.159 li
367.714 311.159 li
367.714 308.659 li
cp
352.964 308.659 mo
352.964 311.159 li
353.964 311.159 li
353.964 308.659 li
cp
f
460.964 308.659 mo
460.964 311.159 li
461.964 311.159 li
461.964 308.659 li
cp
453.464 308.659 mo
453.464 311.159 li
454.464 311.159 li
454.464 308.659 li
cp
443.964 308.659 mo
443.964 311.159 li
444.964 311.159 li
444.964 308.659 li
cp
430.214 308.659 mo
430.214 311.159 li
431.214 311.159 li
431.214 308.659 li
cp
f
330.214 159.909 mo
326.714 159.909 li
326.714 160.909 li
330.214 160.909 li
cp
328.464 163.409 mo
326.714 163.409 li
326.714 164.409 li
328.464 164.409 li
cp
328.464 167.409 mo
326.714 167.409 li
326.714 168.409 li
328.464 168.409 li
cp
328.464 171.659 mo
326.714 171.659 li
326.714 172.659 li
328.464 172.659 li
cp
328.464 176.659 mo
326.714 176.659 li
326.714 177.659 li
328.464 177.659 li
cp
328.464 182.659 mo
326.714 182.659 li
326.714 183.659 li
328.464 183.659 li
cp
328.464 189.909 mo
326.714 189.909 li
326.714 190.909 li
328.464 190.909 li
cp
328.464 199.409 mo
326.714 199.409 li
326.714 200.409 li
328.464 200.409 li
cp
328.464 212.659 mo
326.714 212.659 li
326.714 213.659 li
328.464 213.659 li
cp
330.214 235.409 mo
326.714 235.409 li
326.714 236.409 li
330.214 236.409 li
cp
328.464 238.909 mo
326.714 238.909 li
326.714 239.909 li
328.464 239.909 li
cp
328.464 242.659 mo
326.714 242.659 li
326.714 243.659 li
328.464 243.659 li
cp
328.464 246.909 mo
326.714 246.909 li
326.714 247.909 li
328.464 247.909 li
cp
328.464 252.159 mo
326.714 252.159 li
326.714 253.159 li
328.464 253.159 li
cp
328.464 257.909 mo
326.714 257.909 li
326.714 258.909 li
328.464 258.909 li
cp
328.464 265.409 mo
326.714 265.409 li
326.714 266.409 li
328.464 266.409 li
cp
328.464 274.659 mo
326.714 274.659 li
326.714 275.659 li
328.464 275.659 li
cp
328.464 287.909 mo
326.714 287.909 li
326.714 288.909 li
328.464 288.909 li
cp
330.214 310.659 mo
326.714 310.659 li
326.714 311.659 li
330.214 311.659 li
cp
327.214 311.159 mo
327.214 160.409 li
326.214 160.409 li
326.214 311.159 li
cp
f
452.279 245.949 mo
452.279 244.224 450.879 242.824 449.154 242.824 cv
447.428 242.824 446.029 244.224 446.029 245.949 cv
446.029 247.674 447.428 249.074 449.154 249.074 cv
450.879 249.074 452.279 247.674 452.279 245.949 cv
451.779 245.949 li
451.777 247.398 450.603 248.572 449.154 248.574 cv
447.705 248.572 446.532 247.398 446.529 245.949 cv
446.532 244.5 447.705 243.327 449.154 243.324 cv
450.603 243.327 451.777 244.501 451.779 245.949 cv
452.279 245.949 li
cp
446.759 242.109 mo
446.758 240.384 445.359 238.985 443.634 238.984 cv
441.909 238.985 440.509 240.384 440.509 242.109 cv
440.509 243.835 441.909 245.234 443.634 245.234 cv
445.359 245.234 446.758 243.835 446.759 242.109 cv
446.259 242.109 li
446.256 243.558 445.082 244.732 443.634 244.734 cv
442.185 244.732 441.011 243.558 441.009 242.109 cv
441.011 240.661 442.185 239.487 443.634 239.484 cv
445.082 239.487 446.256 240.661 446.259 242.109 cv
446.759 242.109 li
cp
438.599 238.27 mo
438.598 236.544 437.199 235.145 435.474 235.145 cv
433.748 235.145 432.349 236.544 432.349 238.27 cv
432.349 239.995 433.748 241.394 435.474 241.395 cv
437.199 241.394 438.598 239.995 438.599 238.27 cv
438.099 238.27 li
438.096 239.718 436.922 240.892 435.474 240.895 cv
434.025 240.892 432.851 239.718 432.849 238.27 cv
432.851 236.821 434.025 235.647 435.474 235.645 cv
436.922 235.647 438.096 236.821 438.099 238.27 cv
438.599 238.27 li
cp
427.319 232.27 mo
427.319 230.544 425.919 229.145 424.194 229.145 cv
422.468 229.145 421.069 230.544 421.069 232.27 cv
421.069 233.995 422.468 235.394 424.194 235.395 cv
425.919 235.394 427.319 233.995 427.319 232.27 cv
426.819 232.27 li
426.817 233.718 425.643 234.892 424.194 234.895 cv
422.745 234.892 421.572 233.718 421.569 232.27 cv
421.572 230.821 422.745 229.647 424.194 229.645 cv
425.643 229.647 426.817 230.821 426.819 232.27 cv
427.319 232.27 li
cp
415.079 224.829 mo
415.079 223.104 413.679 221.704 411.954 221.704 cv
410.229 221.704 408.829 223.104 408.829 224.829 cv
408.829 226.554 410.229 227.954 411.954 227.954 cv
413.679 227.954 415.079 226.554 415.079 224.829 cv
414.579 224.829 li
414.576 226.278 413.403 227.451 411.954 227.454 cv
410.505 227.451 409.332 226.278 409.329 224.829 cv
409.332 223.38 410.505 222.207 411.954 222.204 cv
413.403 222.207 414.576 223.38 414.579 224.829 cv
415.079 224.829 li
cp
401.639 217.149 mo
401.638 215.424 400.239 214.025 398.514 214.024 cv
396.788 214.025 395.389 215.424 395.389 217.149 cv
395.389 218.875 396.788 220.274 398.514 220.274 cv
400.239 220.274 401.638 218.875 401.639 217.149 cv
401.139 217.149 li
401.136 218.598 399.962 219.772 398.514 219.774 cv
397.065 219.772 395.891 218.598 395.889 217.149 cv
395.891 215.701 397.065 214.527 398.514 214.524 cv
399.962 214.527 401.136 215.701 401.139 217.149 cv
401.639 217.149 li
cp
385.799 208.989 mo
385.799 207.264 384.399 205.865 382.674 205.864 cv
380.949 205.865 379.549 207.264 379.549 208.989 cv
379.549 210.714 380.949 212.114 382.674 212.114 cv
384.399 212.114 385.799 210.714 385.799 208.989 cv
385.299 208.989 li
385.296 210.438 384.122 211.612 382.674 211.614 cv
381.225 211.612 380.051 210.438 380.049 208.989 cv
380.051 207.541 381.225 206.367 382.674 206.364 cv
384.122 206.367 385.296 207.541 385.299 208.989 cv
385.799 208.989 li
cp
367.559 198.429 mo
367.558 196.703 366.159 195.304 364.434 195.304 cv
362.708 195.304 361.309 196.703 361.309 198.429 cv
361.309 200.155 362.708 201.553 364.434 201.554 cv
366.159 201.553 367.558 200.155 367.559 198.429 cv
367.059 198.429 li
367.056 199.878 365.882 201.051 364.434 201.054 cv
362.985 201.051 361.811 199.878 361.809 198.429 cv
361.811 196.98 362.985 195.806 364.434 195.804 cv
365.882 195.806 367.056 196.98 367.059 198.429 cv
367.559 198.429 li
cp
347.639 188.109 mo
347.638 186.384 346.239 184.985 344.514 184.984 cv
342.788 184.985 341.389 186.384 341.389 188.109 cv
341.389 189.835 342.788 191.234 344.514 191.234 cv
346.239 191.234 347.638 189.835 347.639 188.109 cv
347.139 188.109 li
347.136 189.558 345.962 190.732 344.514 190.734 cv
343.065 190.732 341.891 189.558 341.889 188.109 cv
341.891 186.661 343.065 185.487 344.514 185.484 cv
345.962 185.487 347.136 186.661 347.139 188.109 cv
347.639 188.109 li
cp
0 .993286 1 0 cmyk
f
449.214 243.034 mo
449.214 242.784 li
446.089 242.784 li
446.089 249.034 li
452.339 249.034 li
452.339 242.784 li
449.214 242.784 li
449.214 243.034 li
449.214 243.284 li
451.839 243.284 li
451.839 248.534 li
446.589 248.534 li
446.589 243.284 li
449.214 243.284 li
449.214 243.034 li
cp
443.714 239.034 mo
443.714 238.784 li
440.589 238.784 li
440.589 245.034 li
446.839 245.034 li
446.839 238.784 li
443.714 238.784 li
443.714 239.034 li
443.714 239.284 li
446.339 239.284 li
446.339 244.534 li
441.089 244.534 li
441.089 239.284 li
443.714 239.284 li
443.714 239.034 li
cp
435.464 235.034 mo
435.464 234.784 li
432.339 234.784 li
432.339 241.034 li
438.589 241.034 li
438.589 234.784 li
435.464 234.784 li
435.464 235.034 li
435.464 235.284 li
438.089 235.284 li
438.089 240.534 li
432.839 240.534 li
432.839 235.284 li
435.464 235.284 li
435.464 235.034 li
cp
424.214 229.284 mo
424.214 229.034 li
421.089 229.034 li
421.089 235.284 li
427.339 235.284 li
427.339 229.034 li
424.214 229.034 li
424.214 229.284 li
424.214 229.534 li
426.839 229.534 li
426.839 234.784 li
421.589 234.784 li
421.589 229.534 li
424.214 229.534 li
424.214 229.284 li
cp
411.964 221.784 mo
411.964 221.534 li
408.839 221.534 li
408.839 227.784 li
415.089 227.784 li
415.089 221.534 li
411.964 221.534 li
411.964 221.784 li
411.964 222.034 li
414.589 222.034 li
414.589 227.284 li
409.339 227.284 li
409.339 222.034 li
411.964 222.034 li
411.964 221.784 li
cp
398.464 214.284 mo
398.464 214.034 li
395.339 214.034 li
395.339 220.284 li
401.589 220.284 li
401.589 214.034 li
398.464 214.034 li
398.464 214.284 li
398.464 214.534 li
401.089 214.534 li
401.089 219.784 li
395.839 219.784 li
395.839 214.534 li
398.464 214.534 li
398.464 214.284 li
cp
382.714 206.034 mo
382.714 205.784 li
379.589 205.784 li
379.589 212.034 li
385.839 212.034 li
385.839 205.784 li
382.714 205.784 li
382.714 206.034 li
382.714 206.284 li
385.339 206.284 li
385.339 211.534 li
380.089 211.534 li
380.089 206.284 li
382.714 206.284 li
382.714 206.034 li
cp
364.464 195.534 mo
364.464 195.284 li
361.339 195.284 li
361.339 201.534 li
367.589 201.534 li
367.589 195.284 li
364.464 195.284 li
364.464 195.534 li
364.464 195.784 li
367.089 195.784 li
367.089 201.034 li
361.839 201.034 li
361.839 195.784 li
364.464 195.784 li
364.464 195.534 li
cp
344.464 185.284 mo
344.464 185.034 li
341.339 185.034 li
341.339 191.284 li
347.589 191.284 li
347.589 185.034 li
344.464 185.034 li
344.464 185.284 li
344.464 185.534 li
347.089 185.534 li
347.089 190.784 li
341.839 190.784 li
341.839 185.534 li
344.464 185.534 li
344.464 185.284 li
cp
.852903 .490181 .699306 .485023 cmyk
f
449.214 241.784 mo
449.006 241.645 li
446.996 244.659 li
449.214 247.985 li
451.431 244.659 li
449.214 241.334 li
449.006 241.645 li
449.214 241.784 li
449.006 241.923 li
450.83 244.659 li
449.214 247.084 li
447.597 244.659 li
449.422 241.923 li
449.214 241.784 li
449.006 241.923 li
449.214 241.784 li
cp
443.714 236.034 mo
443.506 235.895 li
441.496 238.909 li
443.714 242.235 li
445.931 238.909 li
443.714 235.584 li
443.506 235.895 li
443.714 236.034 li
443.506 236.173 li
445.33 238.909 li
443.714 241.334 li
442.097 238.909 li
443.922 236.173 li
443.714 236.034 li
443.506 236.173 li
443.714 236.034 li
cp
435.464 234.034 mo
435.256 233.895 li
433.246 236.909 li
435.464 240.235 li
437.681 236.909 li
435.464 233.584 li
435.256 233.895 li
435.464 234.034 li
435.256 234.173 li
437.08 236.909 li
435.464 239.334 li
433.847 236.909 li
435.672 234.173 li
435.464 234.034 li
435.256 234.173 li
435.464 234.034 li
cp
424.214 226.784 mo
424.006 226.645 li
421.996 229.659 li
424.214 232.985 li
426.431 229.659 li
424.214 226.334 li
424.006 226.645 li
424.214 226.784 li
424.006 226.923 li
425.83 229.659 li
424.214 232.084 li
422.597 229.659 li
424.422 226.923 li
424.214 226.784 li
424.006 226.923 li
424.214 226.784 li
cp
411.964 219.784 mo
411.756 219.645 li
409.746 222.659 li
411.964 225.985 li
414.181 222.659 li
411.964 219.334 li
411.756 219.645 li
411.964 219.784 li
411.756 219.923 li
413.58 222.659 li
411.964 225.084 li
410.347 222.659 li
412.172 219.923 li
411.964 219.784 li
411.756 219.923 li
411.964 219.784 li
cp
398.464 212.284 mo
398.256 212.145 li
396.246 215.159 li
398.464 218.485 li
400.681 215.159 li
398.464 211.834 li
398.256 212.145 li
398.464 212.284 li
398.256 212.423 li
400.08 215.159 li
398.464 217.584 li
396.847 215.159 li
398.672 212.423 li
398.464 212.284 li
398.256 212.423 li
398.464 212.284 li
cp
382.714 204.034 mo
382.506 203.895 li
380.496 206.909 li
382.714 210.235 li
384.931 206.909 li
382.714 203.584 li
382.506 203.895 li
382.714 204.034 li
382.506 204.173 li
384.33 206.909 li
382.714 209.334 li
381.097 206.909 li
382.922 204.173 li
382.714 204.034 li
382.506 204.173 li
382.714 204.034 li
cp
364.464 193.534 mo
364.256 193.395 li
362.246 196.409 li
364.464 199.735 li
366.681 196.409 li
364.464 193.084 li
364.256 193.395 li
364.464 193.534 li
364.256 193.673 li
366.08 196.409 li
364.464 198.834 li
362.847 196.409 li
364.672 193.673 li
364.464 193.534 li
364.256 193.673 li
364.464 193.534 li
cp
344.464 184.784 mo
344.256 184.645 li
342.246 187.659 li
344.464 190.985 li
346.681 187.659 li
344.464 184.334 li
344.256 184.645 li
344.464 184.784 li
344.256 184.923 li
346.08 187.659 li
344.464 190.084 li
342.847 187.659 li
344.672 184.923 li
344.464 184.784 li
344.256 184.923 li
344.464 184.784 li
cp
.883848 .768521 0 0 cmyk
f
465.714 9.40918 mo
461.464 9.40918 li
461.464 10.4092 li
465.714 10.4092 li
cp
463.714 12.6592 mo
461.464 12.6592 li
461.464 13.6592 li
463.714 13.6592 li
cp
463.714 16.6592 mo
461.464 16.6592 li
461.464 17.6592 li
463.714 17.6592 li
cp
463.714 20.9092 mo
461.464 20.9092 li
461.464 21.9092 li
463.714 21.9092 li
cp
463.714 25.9092 mo
461.464 25.9092 li
461.464 26.9092 li
463.714 26.9092 li
cp
463.714 31.9092 mo
461.464 31.9092 li
461.464 32.9092 li
463.714 32.9092 li
cp
463.714 39.4092 mo
461.464 39.4092 li
461.464 40.4092 li
463.714 40.4092 li
cp
463.714 48.6592 mo
461.464 48.6592 li
461.464 49.6592 li
463.714 49.6592 li
cp
463.714 61.9092 mo
461.464 61.9092 li
461.464 62.9092 li
463.714 62.9092 li
cp
465.714 84.6592 mo
461.464 84.6592 li
461.464 85.6592 li
465.714 85.6592 li
cp
463.714 88.1592 mo
461.464 88.1592 li
461.464 89.1592 li
463.714 89.1592 li
cp
463.714 91.9092 mo
461.464 91.9092 li
461.464 92.9092 li
463.714 92.9092 li
cp
463.714 96.4092 mo
461.464 96.4092 li
461.464 97.4092 li
463.714 97.4092 li
cp
463.714 101.409 mo
461.464 101.409 li
461.464 102.409 li
463.714 102.409 li
cp
463.714 107.409 mo
461.464 107.409 li
461.464 108.409 li
463.714 108.409 li
cp
463.714 114.659 mo
461.464 114.659 li
461.464 115.659 li
463.714 115.659 li
cp
463.714 124.159 mo
461.464 124.159 li
461.464 125.159 li
463.714 125.159 li
cp
463.714 137.409 mo
461.464 137.409 li
461.464 138.409 li
463.714 138.409 li
cp
465.714 159.909 mo
461.464 159.909 li
461.464 160.909 li
465.714 160.909 li
cp
461.964 160.409 mo
461.964 9.90918 li
460.964 9.90918 li
460.964 160.409 li
cp
595.964 158.159 mo
595.964 160.409 li
596.964 160.409 li
596.964 158.159 li
cp
588.464 158.159 mo
588.464 160.409 li
589.464 160.409 li
589.464 158.159 li
cp
578.714 158.159 mo
578.714 160.409 li
579.714 160.409 li
579.714 158.159 li
cp
565.214 158.159 mo
565.214 160.409 li
566.214 160.409 li
566.214 158.159 li
cp
541.964 155.909 mo
541.964 160.409 li
542.964 160.409 li
542.964 155.909 li
cp
538.464 158.159 mo
538.464 160.409 li
539.464 160.409 li
539.464 158.159 li
cp
534.464 158.159 mo
534.464 160.409 li
535.464 160.409 li
535.464 158.159 li
cp
529.964 158.159 mo
529.964 160.409 li
530.964 160.409 li
530.964 158.159 li
cp
524.714 158.159 mo
524.714 160.409 li
525.714 160.409 li
525.714 158.159 li
cp
518.714 158.159 mo
518.714 160.409 li
519.714 160.409 li
519.714 158.159 li
cp
511.214 158.159 mo
511.214 160.409 li
512.214 160.409 li
512.214 158.159 li
cp
501.464 158.159 mo
501.464 160.409 li
502.464 160.409 li
502.464 158.159 li
cp
487.964 158.159 mo
487.964 160.409 li
488.964 160.409 li
488.964 158.159 li
cp
464.714 155.909 mo
464.714 160.409 li
465.714 160.409 li
465.714 155.909 li
cp
461.464 160.909 mo
596.464 160.909 li
596.464 159.909 li
461.464 159.909 li
cp
461.464 160.409 mo
461.964 160.409 li
461.964 10.4092 li
595.964 10.4092 li
595.964 159.909 li
461.464 159.909 li
461.464 160.409 li
461.964 160.409 li
461.464 160.409 li
461.464 160.909 li
596.964 160.909 li
596.964 9.40918 li
460.964 9.40918 li
460.964 160.909 li
461.464 160.909 li
461.464 160.409 li
cp
0 0 0 1 cmyk
f
586.443 99.9092 mo
586.443 98.1147 584.988 96.6594 583.193 96.6592 cv
581.4 96.6595 579.944 98.1146 579.943 99.9092 cv
579.944 101.704 581.4 103.159 583.193 103.159 cv
584.988 103.159 586.443 101.704 586.443 99.9092 cv
585.943 99.9092 li
585.94 101.427 584.711 102.656 583.193 102.659 cv
581.676 102.656 580.446 101.427 580.443 99.9092 cv
580.446 98.3913 581.676 97.1619 583.193 97.1592 cv
584.711 97.1619 585.94 98.3912 585.943 99.9092 cv
586.443 99.9092 li
cp
581.164 96.3091 mo
581.164 94.515 579.709 93.0593 577.914 93.0591 cv
576.119 93.0593 574.664 94.515 574.664 96.3091 cv
574.664 98.1036 576.119 99.5588 577.914 99.5591 cv
579.708 99.5588 581.164 98.1036 581.164 96.3091 cv
580.664 96.3091 li
580.661 97.8271 579.432 99.0563 577.914 99.0591 cv
576.396 99.0563 575.167 97.8271 575.164 96.3091 cv
575.167 94.7916 576.396 93.5618 577.914 93.5591 cv
579.432 93.5618 580.661 94.7916 580.664 96.3091 cv
581.164 96.3091 li
cp
573.004 92.4692 mo
573.004 90.6747 571.548 89.2195 569.754 89.2192 cv
567.959 89.2195 566.504 90.6747 566.504 92.4692 cv
566.504 94.2633 567.959 95.719 569.754 95.7192 cv
571.548 95.719 573.004 94.2633 573.004 92.4692 cv
572.504 92.4692 li
572.501 93.9867 571.272 95.2165 569.754 95.2192 cv
568.236 95.2165 567.007 93.9867 567.004 92.4692 cv
567.007 90.9512 568.236 89.722 569.754 89.7192 cv
571.272 89.722 572.501 90.9512 572.504 92.4692 cv
573.004 92.4692 li
cp
561.004 85.5093 mo
561.004 83.7148 559.548 82.2595 557.754 82.2593 cv
555.959 82.2595 554.504 83.7148 554.504 85.5093 cv
554.504 87.3033 555.959 88.759 557.754 88.7593 cv
559.548 88.759 561.004 87.3033 561.004 85.5093 cv
560.504 85.5093 li
560.501 87.0268 559.272 88.2565 557.754 88.2593 cv
556.236 88.2565 555.007 87.0268 555.004 85.5093 cv
555.007 83.9913 556.236 82.762 557.754 82.7593 cv
559.272 82.762 560.501 83.9913 560.504 85.5093 cv
561.004 85.5093 li
cp
548.284 78.9092 mo
548.284 77.1146 546.828 75.6595 545.034 75.6592 cv
543.24 75.6594 541.784 77.1147 541.784 78.9092 cv
541.784 80.7037 543.24 82.1589 545.034 82.1592 cv
546.828 82.1589 548.284 80.7038 548.284 78.9092 cv
547.784 78.9092 li
547.781 80.4271 546.551 81.6564 545.034 81.6592 cv
543.516 81.6564 542.287 80.4272 542.284 78.9092 cv
542.287 77.3912 543.516 76.1619 545.034 76.1592 cv
546.551 76.1619 547.781 77.3913 547.784 78.9092 cv
548.284 78.9092 li
cp
533.884 72.5493 mo
533.883 70.7548 532.428 69.2995 530.634 69.2993 cv
528.839 69.2995 527.384 70.7548 527.384 72.5493 cv
527.384 74.3433 528.839 75.799 530.634 75.7993 cv
532.428 75.799 533.883 74.3433 533.884 72.5493 cv
533.384 72.5493 li
533.381 74.0668 532.152 75.2966 530.634 75.2993 cv
529.116 75.2966 527.886 74.0668 527.884 72.5493 cv
527.886 71.0313 529.116 69.8021 530.634 69.7993 cv
532.152 69.8021 533.381 71.0313 533.384 72.5493 cv
533.884 72.5493 li
cp
518.044 63.9092 mo
518.044 62.1147 516.588 60.6594 514.794 60.6592 cv
512.999 60.6594 511.544 62.1147 511.544 63.9092 cv
511.544 65.7037 512.999 67.1589 514.794 67.1592 cv
516.588 67.1589 518.044 65.7037 518.044 63.9092 cv
517.544 63.9092 li
517.541 65.4272 516.312 66.6564 514.794 66.6592 cv
513.276 66.6564 512.047 65.4272 512.044 63.9092 cv
512.047 62.3912 513.276 61.1619 514.794 61.1592 cv
516.312 61.1619 517.541 62.3912 517.544 63.9092 cv
518.044 63.9092 li
cp
499.804 53.3491 mo
499.803 51.5551 498.348 50.0994 496.554 50.0991 cv
494.759 50.0994 493.304 51.5551 493.304 53.3491 cv
493.304 55.1436 494.759 56.5989 496.554 56.5991 cv
498.348 56.5989 499.803 55.1436 499.804 53.3491 cv
499.304 53.3491 li
499.301 54.8671 498.072 56.0964 496.554 56.0991 cv
495.036 56.0964 493.806 54.8671 493.804 53.3491 cv
493.806 51.8316 495.036 50.6019 496.554 50.5991 cv
498.072 50.6019 499.301 51.8316 499.304 53.3491 cv
499.804 53.3491 li
cp
479.164 40.8691 mo
479.164 39.0751 477.709 37.6194 475.914 37.6191 cv
474.119 37.6194 472.664 39.0751 472.664 40.8691 cv
472.664 42.6636 474.12 44.1189 475.914 44.1191 cv
477.709 44.1189 479.164 42.6636 479.164 40.8691 cv
478.664 40.8691 li
478.661 42.3871 477.432 43.6164 475.914 43.6191 cv
474.396 43.6164 473.167 42.3871 473.164 40.8691 cv
473.167 39.3517 474.396 38.1219 475.914 38.1191 cv
477.432 38.1219 478.661 39.3517 478.664 40.8691 cv
479.164 40.8691 li
cp
0 .993286 1 0 cmyk
f
583.214 96.4092 mo
583.214 96.1592 li
579.964 96.1592 li
579.964 102.659 li
586.464 102.659 li
586.464 96.1592 li
583.214 96.1592 li
583.214 96.4092 li
583.214 96.6592 li
585.964 96.6592 li
585.964 102.159 li
580.464 102.159 li
580.464 96.6592 li
583.214 96.6592 li
583.214 96.4092 li
cp
577.964 93.6592 mo
577.964 93.4092 li
574.714 93.4092 li
574.714 99.9092 li
581.214 99.9092 li
581.214 93.4092 li
577.964 93.4092 li
577.964 93.6592 li
577.964 93.9092 li
580.714 93.9092 li
580.714 99.4092 li
575.214 99.4092 li
575.214 93.9092 li
577.964 93.9092 li
577.964 93.6592 li
cp
569.714 89.1592 mo
569.714 88.9092 li
566.464 88.9092 li
566.464 95.4092 li
572.964 95.4092 li
572.964 88.9092 li
569.714 88.9092 li
569.714 89.1592 li
569.714 89.4092 li
572.464 89.4092 li
572.464 94.9092 li
566.964 94.9092 li
566.964 89.4092 li
569.714 89.4092 li
569.714 89.1592 li
cp
557.714 83.1592 mo
557.714 82.9092 li
554.464 82.9092 li
554.464 89.4092 li
560.964 89.4092 li
560.964 82.9092 li
557.714 82.9092 li
557.714 83.1592 li
557.714 83.4092 li
560.464 83.4092 li
560.464 88.9092 li
554.964 88.9092 li
554.964 83.4092 li
557.714 83.4092 li
557.714 83.1592 li
cp
544.964 76.1592 mo
544.964 75.9092 li
541.714 75.9092 li
541.714 82.4092 li
548.214 82.4092 li
548.214 75.9092 li
544.964 75.9092 li
544.964 76.1592 li
544.964 76.4092 li
547.714 76.4092 li
547.714 81.9092 li
542.214 81.9092 li
542.214 76.4092 li
544.964 76.4092 li
544.964 76.1592 li
cp
530.714 69.6592 mo
530.714 69.4092 li
527.464 69.4092 li
527.464 75.9092 li
533.964 75.9092 li
533.964 69.4092 li
530.714 69.4092 li
530.714 69.6592 li
530.714 69.9092 li
533.464 69.9092 li
533.464 75.4092 li
527.964 75.4092 li
527.964 69.9092 li
530.714 69.9092 li
530.714 69.6592 li
cp
514.714 60.6592 mo
514.714 60.4092 li
511.464 60.4092 li
511.464 66.9092 li
517.964 66.9092 li
517.964 60.4092 li
514.714 60.4092 li
514.714 60.6592 li
514.714 60.9092 li
517.464 60.9092 li
517.464 66.4092 li
511.964 66.4092 li
511.964 60.9092 li
514.714 60.9092 li
514.714 60.6592 li
cp
496.464 49.9092 mo
496.464 49.6592 li
493.214 49.6592 li
493.214 56.1592 li
499.714 56.1592 li
499.714 49.6592 li
496.464 49.6592 li
496.464 49.9092 li
496.464 50.1592 li
499.214 50.1592 li
499.214 55.6592 li
493.714 55.6592 li
493.714 50.1592 li
496.464 50.1592 li
496.464 49.9092 li
cp
475.964 37.4092 mo
475.964 37.1592 li
472.714 37.1592 li
472.714 43.6592 li
479.214 43.6592 li
479.214 37.1592 li
475.964 37.1592 li
475.964 37.4092 li
475.964 37.6592 li
478.714 37.6592 li
478.714 43.1592 li
473.214 43.1592 li
473.214 37.6592 li
475.964 37.6592 li
475.964 37.4092 li
cp
.852903 .490181 .699306 .485023 cmyk
f
583.214 95.4092 mo
583.006 95.2705 li
580.913 98.4091 li
583.214 101.86 li
585.514 98.4092 li
583.214 94.9585 li
583.006 95.2705 li
583.214 95.4092 li
583.006 95.5479 li
584.913 98.4092 li
583.214 100.958 li
581.514 98.4092 li
583.422 95.5479 li
583.214 95.4092 li
583.006 95.5479 li
583.214 95.4092 li
cp
577.964 91.4092 mo
577.756 91.2705 li
575.663 94.4091 li
577.964 97.86 li
580.264 94.4092 li
577.964 90.9585 li
577.756 91.2705 li
577.964 91.4092 li
577.756 91.5479 li
579.663 94.4092 li
577.964 96.9585 li
576.264 94.4092 li
578.172 91.5479 li
577.964 91.4092 li
577.756 91.5479 li
577.964 91.4092 li
cp
569.714 87.6592 mo
569.506 87.5205 li
567.413 90.6591 li
569.714 94.11 li
572.014 90.6592 li
569.714 87.2085 li
569.506 87.5205 li
569.714 87.6592 li
569.506 87.7979 li
571.413 90.6592 li
569.714 93.2085 li
568.014 90.6592 li
569.922 87.7979 li
569.714 87.6592 li
569.506 87.7979 li
569.714 87.6592 li
cp
557.714 81.6592 mo
557.506 81.5205 li
555.413 84.6591 li
557.714 88.11 li
560.014 84.6592 li
557.714 81.2085 li
557.506 81.5205 li
557.714 81.6592 li
557.506 81.7979 li
559.413 84.6592 li
557.714 87.2085 li
556.014 84.6592 li
557.922 81.7979 li
557.714 81.6592 li
557.506 81.7979 li
557.714 81.6592 li
cp
544.964 73.6592 mo
544.756 73.5205 li
542.663 76.6591 li
544.964 80.1099 li
547.264 76.6592 li
544.964 73.2085 li
544.756 73.5205 li
544.964 73.6592 li
544.756 73.7979 li
546.663 76.6592 li
544.964 79.2085 li
543.264 76.6592 li
545.172 73.7979 li
544.964 73.6592 li
544.756 73.7979 li
544.964 73.6592 li
cp
530.714 67.4092 mo
530.506 67.2705 li
528.413 70.4091 li
530.714 73.8599 li
533.014 70.4092 li
530.714 66.9585 li
530.506 67.2705 li
530.714 67.4092 li
530.506 67.5479 li
532.413 70.4092 li
530.714 72.9585 li
529.014 70.4092 li
530.922 67.5479 li
530.714 67.4092 li
530.506 67.5479 li
530.714 67.4092 li
cp
514.714 58.6592 mo
514.506 58.5205 li
512.413 61.6591 li
514.714 65.1099 li
517.014 61.6592 li
514.714 58.2085 li
514.506 58.5205 li
514.714 58.6592 li
514.506 58.7979 li
516.413 61.6592 li
514.714 64.2084 li
513.014 61.6592 li
514.922 58.7979 li
514.714 58.6592 li
514.506 58.7979 li
514.714 58.6592 li
cp
496.464 48.1592 mo
496.256 48.0205 li
494.163 51.1591 li
496.464 54.6099 li
498.764 51.1591 li
496.464 47.7085 li
496.256 48.0205 li
496.464 48.1592 li
496.256 48.2979 li
498.163 51.1592 li
496.464 53.7085 li
494.764 51.1592 li
496.672 48.2979 li
496.464 48.1592 li
496.256 48.2979 li
496.464 48.1592 li
cp
475.964 39.4092 mo
475.756 39.2705 li
473.663 42.4091 li
475.964 45.8599 li
478.264 42.4091 li
475.964 38.9585 li
475.756 39.2705 li
475.964 39.4092 li
475.756 39.5479 li
477.663 42.4092 li
475.964 44.9585 li
474.264 42.4092 li
476.172 39.5479 li
475.964 39.4092 li
475.756 39.5479 li
475.964 39.4092 li
cp
.883848 .768521 0 0 cmyk
f
464.714 306.159 mo
464.714 311.159 li
465.714 311.159 li
465.714 306.159 li
cp
461.464 311.659 mo
596.464 311.659 li
596.464 310.659 li
461.464 310.659 li
cp
461.464 311.159 mo
461.964 311.159 li
461.964 160.909 li
595.964 160.909 li
595.964 310.659 li
461.464 310.659 li
461.464 311.159 li
461.964 311.159 li
461.464 311.159 li
461.464 311.659 li
596.964 311.659 li
596.964 159.909 li
460.964 159.909 li
460.964 311.659 li
461.464 311.659 li
461.464 311.159 li
cp
0 0 0 1 cmyk
f
541.964 306.159 mo
541.964 311.159 li
542.964 311.159 li
542.964 306.159 li
cp
538.464 308.659 mo
538.464 311.159 li
539.464 311.159 li
539.464 308.659 li
cp
534.464 308.659 mo
534.464 311.159 li
535.464 311.159 li
535.464 308.659 li
cp
529.964 308.659 mo
529.964 311.159 li
530.964 311.159 li
530.964 308.659 li
cp
524.714 308.659 mo
524.714 311.159 li
525.714 311.159 li
525.714 308.659 li
cp
518.714 308.659 mo
518.714 311.159 li
519.714 311.159 li
519.714 308.659 li
cp
511.214 308.659 mo
511.214 311.159 li
512.214 311.159 li
512.214 308.659 li
cp
501.464 308.659 mo
501.464 311.159 li
502.464 311.159 li
502.464 308.659 li
cp
487.964 308.659 mo
487.964 311.159 li
488.964 311.159 li
488.964 308.659 li
cp
f
595.964 308.659 mo
595.964 311.159 li
596.964 311.159 li
596.964 308.659 li
cp
588.464 308.659 mo
588.464 311.159 li
589.464 311.159 li
589.464 308.659 li
cp
578.714 308.659 mo
578.714 311.159 li
579.714 311.159 li
579.714 308.659 li
cp
565.214 308.659 mo
565.214 311.159 li
566.214 311.159 li
566.214 308.659 li
cp
f
465.214 159.909 mo
461.464 159.909 li
461.464 160.909 li
465.214 160.909 li
cp
463.464 163.409 mo
461.464 163.409 li
461.464 164.409 li
463.464 164.409 li
cp
463.464 167.409 mo
461.464 167.409 li
461.464 168.409 li
463.464 168.409 li
cp
463.464 171.659 mo
461.464 171.659 li
461.464 172.659 li
463.464 172.659 li
cp
463.464 176.659 mo
461.464 176.659 li
461.464 177.659 li
463.464 177.659 li
cp
463.464 182.659 mo
461.464 182.659 li
461.464 183.659 li
463.464 183.659 li
cp
463.464 189.909 mo
461.464 189.909 li
461.464 190.909 li
463.464 190.909 li
cp
463.464 199.409 mo
461.464 199.409 li
461.464 200.409 li
463.464 200.409 li
cp
463.464 212.659 mo
461.464 212.659 li
461.464 213.659 li
463.464 213.659 li
cp
465.214 235.409 mo
461.464 235.409 li
461.464 236.409 li
465.214 236.409 li
cp
463.464 238.909 mo
461.464 238.909 li
461.464 239.909 li
463.464 239.909 li
cp
463.464 242.659 mo
461.464 242.659 li
461.464 243.659 li
463.464 243.659 li
cp
463.464 246.909 mo
461.464 246.909 li
461.464 247.909 li
463.464 247.909 li
cp
463.464 252.159 mo
461.464 252.159 li
461.464 253.159 li
463.464 253.159 li
cp
463.464 257.909 mo
461.464 257.909 li
461.464 258.909 li
463.464 258.909 li
cp
463.464 265.409 mo
461.464 265.409 li
461.464 266.409 li
463.464 266.409 li
cp
463.464 274.659 mo
461.464 274.659 li
461.464 275.659 li
463.464 275.659 li
cp
463.464 287.909 mo
461.464 287.909 li
461.464 288.909 li
463.464 288.909 li
cp
465.214 310.659 mo
461.464 310.659 li
461.464 311.659 li
465.214 311.659 li
cp
461.964 311.159 mo
461.964 160.409 li
460.964 160.409 li
460.964 311.159 li
cp
f
587.643 237.909 mo
587.643 236.115 586.188 234.659 584.393 234.659 cv
582.6 234.659 581.144 236.115 581.143 237.909 cv
581.144 239.704 582.6 241.159 584.393 241.159 cv
586.188 241.159 587.643 239.704 587.643 237.909 cv
587.144 237.909 li
587.141 239.427 585.911 240.656 584.393 240.659 cv
582.876 240.656 581.646 239.427 581.643 237.909 cv
581.646 236.391 582.876 235.162 584.393 235.159 cv
585.911 235.162 587.141 236.391 587.143 237.909 cv
587.643 237.909 li
cp
582.364 234.069 mo
582.364 232.275 580.908 230.82 579.114 230.819 cv
577.32 230.82 575.864 232.275 575.864 234.069 cv
575.864 235.864 577.32 237.319 579.114 237.319 cv
580.908 237.319 582.364 235.864 582.364 234.069 cv
581.864 234.069 li
581.861 235.587 580.631 236.817 579.114 236.819 cv
577.596 236.817 576.367 235.587 576.364 234.069 cv
576.367 232.551 577.596 231.322 579.114 231.319 cv
580.631 231.322 581.861 232.551 581.864 234.069 cv
582.364 234.069 li
cp
574.204 229.27 mo
574.204 227.475 572.748 226.02 570.954 226.02 cv
569.159 226.02 567.704 227.475 567.704 229.27 cv
567.704 231.063 569.159 232.519 570.954 232.52 cv
572.748 232.519 574.204 231.063 574.204 229.27 cv
573.704 229.27 li
573.701 230.786 572.471 232.017 570.954 232.02 cv
569.436 232.017 568.207 230.787 568.204 229.27 cv
568.207 227.752 569.436 226.522 570.954 226.52 cv
572.471 226.522 573.701 227.752 573.704 229.27 cv
574.204 229.27 li
cp
562.924 222.31 mo
562.924 220.515 561.468 219.06 559.674 219.06 cv
557.879 219.06 556.424 220.515 556.424 222.31 cv
556.424 224.103 557.879 225.559 559.674 225.56 cv
561.468 225.559 562.923 224.103 562.924 222.31 cv
562.424 222.31 li
562.421 223.827 561.192 225.057 559.674 225.06 cv
558.156 225.057 556.927 223.827 556.924 222.31 cv
556.927 220.792 558.156 219.562 559.674 219.56 cv
561.192 219.562 562.421 220.792 562.424 222.31 cv
562.924 222.31 li
cp
550.924 214.869 mo
550.924 213.075 549.468 211.619 547.674 211.619 cv
545.879 211.619 544.424 213.075 544.424 214.869 cv
544.424 216.664 545.879 218.119 547.674 218.119 cv
549.468 218.119 550.924 216.664 550.924 214.869 cv
550.424 214.869 li
550.421 216.387 549.192 217.616 547.674 217.619 cv
546.156 217.616 544.927 216.387 544.924 214.869 cv
544.927 213.351 546.156 212.122 547.674 212.119 cv
549.192 212.122 550.421 213.351 550.424 214.869 cv
550.924 214.869 li
cp
537.484 207.429 mo
537.484 205.635 536.028 204.179 534.234 204.179 cv
532.44 204.179 530.985 205.635 530.984 207.429 cv
530.984 209.223 532.44 210.678 534.234 210.679 cv
536.028 210.678 537.484 209.223 537.484 207.429 cv
536.984 207.429 li
536.982 208.947 535.751 210.176 534.234 210.179 cv
532.716 210.176 531.487 208.947 531.484 207.429 cv
531.487 205.912 532.716 204.681 534.234 204.679 cv
535.751 204.681 536.982 205.912 536.984 207.429 cv
537.484 207.429 li
cp
521.884 198.909 mo
521.883 197.115 520.428 195.659 518.634 195.659 cv
516.839 195.659 515.384 197.115 515.384 198.909 cv
515.384 200.704 516.839 202.159 518.634 202.159 cv
520.428 202.159 521.883 200.704 521.884 198.909 cv
521.384 198.909 li
521.381 200.427 520.152 201.656 518.634 201.659 cv
517.116 201.656 515.886 200.427 515.884 198.909 cv
515.886 197.391 517.116 196.162 518.634 196.159 cv
520.152 196.162 521.381 197.391 521.384 198.909 cv
521.884 198.909 li
cp
503.884 190.39 mo
503.884 188.595 502.428 187.14 500.634 187.14 cv
498.839 187.14 497.384 188.595 497.384 190.39 cv
497.384 192.183 498.839 193.639 500.634 193.64 cv
502.428 193.639 503.883 192.183 503.884 190.39 cv
503.384 190.39 li
503.381 191.907 502.152 193.137 500.634 193.14 cv
499.116 193.137 497.887 191.907 497.884 190.39 cv
497.887 188.872 499.116 187.642 500.634 187.64 cv
502.152 187.642 503.381 188.872 503.384 190.39 cv
503.884 190.39 li
cp
483.484 179.829 mo
483.484 178.034 482.028 176.579 480.234 176.579 cv
478.44 176.579 476.985 178.035 476.984 179.829 cv
476.985 181.624 478.44 183.079 480.234 183.079 cv
482.028 183.079 483.484 181.624 483.484 179.829 cv
482.984 179.829 li
482.982 181.347 481.751 182.576 480.234 182.579 cv
478.716 182.576 477.487 181.347 477.484 179.829 cv
477.487 178.311 478.716 177.082 480.234 177.079 cv
481.751 177.082 482.982 178.311 482.984 179.829 cv
483.484 179.829 li
cp
0 .993286 1 0 cmyk
f
584.464 235.409 mo
584.464 235.159 li
581.214 235.159 li
581.214 241.659 li
587.714 241.659 li
587.714 235.159 li
584.464 235.159 li
584.464 235.409 li
584.464 235.659 li
587.214 235.659 li
587.214 241.159 li
581.714 241.159 li
581.714 235.659 li
584.464 235.659 li
584.464 235.409 li
cp
579.214 231.159 mo
579.214 230.909 li
575.964 230.909 li
575.964 237.409 li
582.464 237.409 li
582.464 230.909 li
579.214 230.909 li
579.214 231.159 li
579.214 231.409 li
581.964 231.409 li
581.964 236.909 li
576.464 236.909 li
576.464 231.409 li
579.214 231.409 li
579.214 231.159 li
cp
570.964 226.409 mo
570.964 226.159 li
567.714 226.159 li
567.714 232.659 li
574.214 232.659 li
574.214 226.159 li
570.964 226.159 li
570.964 226.409 li
570.964 226.659 li
573.714 226.659 li
573.714 232.159 li
568.214 232.159 li
568.214 226.659 li
570.964 226.659 li
570.964 226.409 li
cp
559.714 219.409 mo
559.714 219.159 li
556.464 219.159 li
556.464 225.659 li
562.964 225.659 li
562.964 219.159 li
559.714 219.159 li
559.714 219.409 li
559.714 219.659 li
562.464 219.659 li
562.464 225.159 li
556.964 225.159 li
556.964 219.659 li
559.714 219.659 li
559.714 219.409 li
cp
547.714 212.159 mo
547.714 211.909 li
544.464 211.909 li
544.464 218.409 li
550.964 218.409 li
550.964 211.909 li
547.714 211.909 li
547.714 212.159 li
547.714 212.409 li
550.464 212.409 li
550.464 217.909 li
544.964 217.909 li
544.964 212.409 li
547.714 212.409 li
547.714 212.159 li
cp
534.214 204.409 mo
534.214 204.159 li
530.964 204.159 li
530.964 210.659 li
537.464 210.659 li
537.464 204.159 li
534.214 204.159 li
534.214 204.409 li
534.214 204.659 li
536.964 204.659 li
536.964 210.159 li
531.464 210.159 li
531.464 204.659 li
534.214 204.659 li
534.214 204.409 li
cp
518.714 195.909 mo
518.714 195.659 li
515.464 195.659 li
515.464 202.159 li
521.964 202.159 li
521.964 195.659 li
518.714 195.659 li
518.714 195.909 li
518.714 196.159 li
521.464 196.159 li
521.464 201.659 li
515.964 201.659 li
515.964 196.159 li
518.714 196.159 li
518.714 195.909 li
cp
500.714 187.159 mo
500.714 186.909 li
497.464 186.909 li
497.464 193.409 li
503.964 193.409 li
503.964 186.909 li
500.714 186.909 li
500.714 187.159 li
500.714 187.409 li
503.464 187.409 li
503.464 192.909 li
497.964 192.909 li
497.964 187.409 li
500.714 187.409 li
500.714 187.159 li
cp
480.214 176.909 mo
480.214 176.659 li
476.964 176.659 li
476.964 183.159 li
483.464 183.159 li
483.464 176.659 li
480.214 176.659 li
480.214 176.909 li
480.214 177.159 li
482.964 177.159 li
482.964 182.659 li
477.464 182.659 li
477.464 177.159 li
480.214 177.159 li
480.214 176.909 li
cp
.852903 .490181 .699306 .485023 cmyk
f
584.464 234.159 mo
584.256 234.02 li
582.163 237.159 li
584.464 240.61 li
586.764 237.159 li
584.464 233.708 li
584.256 234.02 li
584.464 234.159 li
584.256 234.298 li
586.163 237.159 li
584.464 239.708 li
582.764 237.159 li
584.672 234.298 li
584.464 234.159 li
584.256 234.298 li
584.464 234.159 li
cp
579.214 229.409 mo
579.006 229.27 li
576.913 232.409 li
579.214 235.86 li
581.514 232.409 li
579.214 228.958 li
579.006 229.27 li
579.214 229.409 li
579.006 229.548 li
580.913 232.409 li
579.214 234.958 li
577.514 232.409 li
579.422 229.548 li
579.214 229.409 li
579.006 229.548 li
579.214 229.409 li
cp
570.964 224.659 mo
570.756 224.52 li
568.663 227.659 li
570.964 231.11 li
573.264 227.659 li
570.964 224.208 li
570.756 224.52 li
570.964 224.659 li
570.756 224.798 li
572.663 227.659 li
570.964 230.208 li
569.264 227.659 li
571.172 224.798 li
570.964 224.659 li
570.756 224.798 li
570.964 224.659 li
cp
559.714 217.659 mo
559.506 217.52 li
557.413 220.659 li
559.714 224.11 li
562.014 220.659 li
559.714 217.208 li
559.506 217.52 li
559.714 217.659 li
559.506 217.798 li
561.413 220.659 li
559.714 223.208 li
558.014 220.659 li
559.922 217.798 li
559.714 217.659 li
559.506 217.798 li
559.714 217.659 li
cp
547.714 210.159 mo
547.506 210.02 li
545.413 213.159 li
547.714 216.61 li
550.014 213.159 li
547.714 209.708 li
547.506 210.02 li
547.714 210.159 li
547.506 210.298 li
549.413 213.159 li
547.714 215.708 li
546.014 213.159 li
547.922 210.298 li
547.714 210.159 li
547.506 210.298 li
547.714 210.159 li
cp
534.214 202.659 mo
534.006 202.52 li
531.913 205.659 li
534.214 209.11 li
536.514 205.659 li
534.214 202.208 li
534.006 202.52 li
534.214 202.659 li
534.006 202.798 li
535.913 205.659 li
534.214 208.208 li
532.514 205.659 li
534.422 202.798 li
534.214 202.659 li
534.006 202.798 li
534.214 202.659 li
cp
518.714 194.409 mo
518.506 194.27 li
516.413 197.409 li
518.714 200.86 li
521.014 197.409 li
518.714 193.958 li
518.506 194.27 li
518.714 194.409 li
518.506 194.548 li
520.413 197.409 li
518.714 199.958 li
517.014 197.409 li
518.922 194.548 li
518.714 194.409 li
518.506 194.548 li
518.714 194.409 li
cp
500.714 185.659 mo
500.506 185.52 li
498.413 188.659 li
500.714 192.11 li
503.014 188.659 li
500.714 185.209 li
500.506 185.52 li
500.714 185.659 li
500.506 185.798 li
502.413 188.659 li
500.714 191.208 li
499.014 188.659 li
500.922 185.798 li
500.714 185.659 li
500.506 185.798 li
500.714 185.659 li
cp
480.214 177.159 mo
480.006 177.02 li
477.913 180.159 li
480.214 183.61 li
482.514 180.159 li
480.214 176.708 li
480.006 177.02 li
480.214 177.159 li
480.006 177.298 li
481.913 180.159 li
480.214 182.708 li
478.514 180.159 li
480.422 177.298 li
480.214 177.159 li
480.006 177.298 li
480.214 177.159 li
cp
.883848 .768521 0 0 cmyk
f
476.997 254.469 mo
476.997 252.675 475.542 251.219 473.747 251.219 cv
471.952 251.219 470.497 252.675 470.497 254.469 cv
470.497 256.263 471.953 257.719 473.747 257.719 cv
475.542 257.719 476.997 256.263 476.997 254.469 cv
476.497 254.469 li
476.494 255.987 475.265 257.216 473.747 257.219 cv
472.229 257.216 471 255.987 470.997 254.469 cv
471 252.952 472.229 251.721 473.747 251.719 cv
475.265 251.721 476.494 252.952 476.497 254.469 cv
476.997 254.469 li
cp
0 .993286 1 0 cmyk
f
473.747 271.81 mo
473.747 271.56 li
470.497 271.56 li
470.497 278.06 li
476.997 278.06 li
476.997 271.56 li
473.747 271.56 li
473.747 271.81 li
473.747 272.06 li
476.497 272.06 li
476.497 277.56 li
470.997 277.56 li
470.997 272.06 li
473.747 272.06 li
473.747 271.81 li
cp
.852903 .490181 .699306 .485023 cmyk
f
473.747 292.06 mo
473.539 291.921 li
471.447 295.06 li
473.747 298.51 li
476.047 295.06 li
473.747 291.609 li
473.539 291.921 li
473.747 292.06 li
473.539 292.198 li
475.447 295.06 li
473.747 297.609 li
472.048 295.06 li
473.955 292.198 li
473.747 292.06 li
473.539 292.198 li
473.747 292.06 li
cp
.883848 .768521 0 0 cmyk
f
.749721 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 71 /G put
dup 86 /V put
dup 101 /e put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
15 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED949
85BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375
C6ADD098717CA70F621> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
/seven <1C60D8A8C9B7A73DFE31854B8CA51F015562FECC80A8475F282F7722
52E10D05B7D43981266F60616595AB1BFBC47BFB03D1BE> |-
/nine <1C60D8A8C9B7A73D92CE6A66BA49C70A16072730ADF99EB50B81EC870
A54394DDFE38FABEC18FB7B826889153F28664691169009324BD4E9661571BB9
1EC6E47B44C4894E182CDFFE1F715113C62DB236897358730FEA1D138847386A
CC90D129A1077A70DC9DAEA483EA5552EB360DE0397958942F0F1C3FE8C7E6CD
3CF99FAB1F16B30CA1A210BFF9DDE43DE5ED76615C174EEED6DAB9E5A77B1C62
FBE9CABC1B3A46D497C4D6EFFC96F4CC02C8A01382FD55BD7B4> |-
/G <1C60D8A8C9B6079F6D6E36005945EC7274CF8CD5EF5B42D280E6D8A4F608
6ADC4B88F4BA16F6A237691F3F760A6129A67DCE9322616B1D7BB21115511238
376B94C01432A999E95ACF02B9743B28C7A3C8109C25013AEA47EC71807E3BFE
6B26986496C6B96A2458AF130FF55F6939E40BA894719E24A717462CC4A00B11
ADE5809AB1E0B4D7805897BE50087CD64F5AEA7744526E08B0D657538988C41B
FE39A8735842D620E001E1A863F676AFB361CF4C81718CBC4A0CC5AC0D51A34A
CA7D8BBE5B5D6E8D466D858B118FBBA2161DB0F7E151EB0958EF2C5C3F> |-
/V <1C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777BDE
67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD4A
5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712B5
02AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC078154F
7D9BB4AB2053> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /.notdef /nine 13{/.notdef}rp 
/G 14{/.notdef}rp /V 14{/.notdef}rp /e 154{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
97.8281 27.0928 mo
(7.7 GeV)sh
227.165 27.0928 mo
(11.5 GeV)
[8.33203 9 4.5 9 4.5 12.999 7.98926 0 ]xsh
364.782 27.0918 mo
(14.5 GeV)sh
500.6 27.0928 mo
(19.6 GeV)sh
99.3281 177.226 mo
(27 GeV)sh
231.442 177.226 mo
(39 GeV)sh
364.782 177.226 mo
(62.4 GeV)sh
502.1 177.226 mo
(200 GeV)sh
20.333 231.156 mo
20.209 231.156 li
8.74171 225.447 li
8.62051 225.393 8.55998 225.294 8.55998 225.15 cv
8.55998 225.002 li
8.55998 224.87 8.62051 224.771 8.74171 224.705 cv
17.4176 220.386 li
20.3905 220.386 li
20.3905 231.041 li
20.333 231.156 li
19.2192 221.025 mo
10.1114 225.562 li
19.2192 230.101 li
19.2192 221.025 li
.74136 .674891 .6636 .859129 cmyk
f
gsave
23.9214 220.386 mo
20.3905 220.386 li
20.3905 219.111 li
20.333 218.996 li
20.209 218.996 li
17.4176 220.386 li
13.0977 220.386 li
13.0977 210.754 li
23.9214 210.754 li
23.9214 220.386 li
clp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /p put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/p <1C60D8A8C9B7A73D8E81CAA60D14E3E98C0D2E05AFF3FB862AEA3DF0C900
A6244DFC203BD831D689E22DB403066666BFF3F475FEB3829C9D7ECDAB0DC925
8303ED1E42322E45D2E74BDF643BC8197209EBDB2F245FB9585F9D7C5F4C0605
E973113BC15F69B61D839FC08F998D44808113D68025D33AED404EFD98528A1C
4BF8833248921CD84E8766EA07C2F75403CFFB9CC1A48AD11EBE79666821D3F8
B741F5FE91D0F75F9F9632B838010D323EEA8F5B163329DD917466275C63DA4F
B54445D129B662802A208E18CFAD13CCA131C101542E45275DFEF10296A99CE9
BEFE39650F703ED74130D9F7EBDFC13232> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OJTZWX+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/OJTZWX+TimesNewRomanPS-ItalicMT*1 
[112{/.notdef}rp /p 143{/.notdef}rp]
OJTZWX+TimesNewRomanPS-ItalicMT nf
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 218.559 mo
(p)sh
grestore
gsave
20.3905 220.386 mo
17.4176 220.386 li
20.209 218.996 li
20.333 218.996 li
20.3905 219.111 li
20.3905 220.386 li
clp
17.4176 218.996 mo
20.3905 218.996 li
20.3905 220.386 li
17.4176 220.386 li
cp
f
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 218.559 mo
(p)sh
grestore
gsave
25.7535 210.166 mo
19.9975 210.166 li
19.9975 207.584 li
25.7535 207.584 li
25.7535 210.166 li
clp
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWW+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWW+TimesNewRomanPSMT /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /.notdef /nine 13{/.notdef}rp 
/G 14{/.notdef}rp /V 14{/.notdef}rp /e 14{/.notdef}rp /t 139{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 210.262 mo
(t)sh
grestore
gsave
27.2744 206.23 mo
24.7495 206.23 li
24.7495 204.834 li
27.2744 204.834 li
27.2744 206.23 li
clp
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWW+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CDCEBD9C789FC719A6E699B9D99F66BE737EEBAFF
7111B9225F270084B7F68BC0DDECBD8A23968AE48D16B628A165111DDE7E6CD8
DD6007F82AE5C9057E54AF2D17F8AB7C9B11610F20000D2C65AB75461D35EBD1
19C9E1C1E902BC7C231A59B4A0E3A4C206C50EEA0EE1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWW+TimesNewRomanPSMT /Encoding get
dup 44 /comma put
pop
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /four /five /six /seven /.notdef 
/nine 13{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp /e 14{/.notdef}rp 
/t 139{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 206.746 mo
(,)sh
grestore
gsave
25.792 203.908 mo
19.5859 203.908 li
19.5859 201.792 li
25.792 201.792 li
25.792 203.908 li
clp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWX+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B854D0F4620EF8AB3A43726CA9F1D5CA3F0AC21C46156AA7EA
FD30B421C67072AD9E9673A39A0C73C611BF2D30694524FB9362DF4B7BF42BD4
03E13FE93BE1CC4B973BBB2F8A1766424F865950A3B4E0C2909B014DAC40D6C3
1A5A624961F141A00D5EA650DA557D976995CE1AB37642609DB19511A8C6A021
6D711E915D0A16129E261DB540D787FC5DFEB3FE9BF504AACF3812EF9A098716
4BC0CA8AED8AA0620C2C50ECD33D7A5F1286537664219BFD394BB743A505> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWX+TimesNewRomanPS-ItalicMT /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/OJTZWX+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i 6{/.notdef}rp /p 143{/.notdef}rp]
OJTZWX+TimesNewRomanPS-ItalicMT nf
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 204.402 mo
(i)sh
grestore
20.333 200.547 mo
20.209 200.547 li
8.74171 194.838 li
8.62051 194.783 8.55998 194.685 8.55998 194.541 cv
8.55998 194.393 li
8.55998 194.261 8.62051 194.161 8.74171 194.096 cv
17.4176 189.776 li
20.3905 189.776 li
20.3905 200.432 li
20.333 200.547 li
19.2192 190.416 mo
10.1114 194.953 li
19.2192 199.491 li
19.2192 190.416 li
f
gsave
23.9214 189.776 mo
20.3905 189.776 li
20.3905 188.502 li
20.333 188.387 li
20.209 188.387 li
17.4176 189.776 li
13.0977 189.776 li
13.0977 180.145 li
23.9214 180.145 li
23.9214 189.776 li
clp
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 187.949 mo
(p)sh
grestore
gsave
20.3905 189.776 mo
17.4176 189.776 li
20.209 188.387 li
20.333 188.387 li
20.3905 188.502 li
20.3905 189.776 li
clp
17.4176 188.387 mo
20.3905 188.387 li
20.3905 189.776 li
17.4176 189.776 li
cp
f
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 187.949 mo
(p)sh
grestore
gsave
25.792 179.64 mo
20.3033 179.64 li
20.3033 177.178 li
25.792 177.178 li
25.792 179.64 li
clp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWX+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0F4BEDEF58C8CF76928EC03CF9E6A69066343B65CF2F2
9CD6E545B8A00752040D324808F3F5D7377FE94463A69378800F35B93737A90E
D33397EF28DE6855D7404A61AF81C1EEF0FFED3B556E8E9BEB0451CA1D28658C
106F5916BA3D50810F2ED0B604B6D36F194AAE36158BC40E0B3FFAD76350433E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWX+TimesNewRomanPS-ItalicMT /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/OJTZWX+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i 6{/.notdef}rp /p 3{/.notdef}rp /t 139{/.notdef}rp]
OJTZWX+TimesNewRomanPS-ItalicMT nf
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 180.027 mo
(t)sh
grestore
gsave
27.2744 175.809 mo
24.7495 175.809 li
24.7495 174.412 li
27.2744 174.412 li
27.2744 175.809 li
clp
OJTZWW+TimesNewRomanPSMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 176.324 mo
(,)sh
grestore
gsave
27.7524 173.834 mo
19.6055 173.834 li
19.6055 169.532 li
27.7524 169.532 li
27.7524 173.834 li
clp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWX+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B854D0F4659B7FFADF9957DA68B07B6E521A3DF198F53722C1
EFCEAF10026DF73D4410F9B17662445DB6D83FCD5219002D838CE9DCB002E084
6F17BE49CA01BE8786E4F26F674D269761A97042F7EFEAFEE3C5B2BB4C341652
31ED8551E3DA0C24B7313736B99DA84705B3ED16D047EB9A35258AE26E18D6CF
2C6B83E7F0C4D2680AC8F3A24A06D908DFCA82AD4DED6865586C5C902373DF8D
C54F895E34149677C3F663323010C38B35E7F6C07F0B821D00A4DAC9EDFDFD4E
B4C4ED970BDCEF5168A762B8982DCC18EA83CE45E12A83029A091E9B3F36FD30
42E8F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWX+TimesNewRomanPS-ItalicMT /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/OJTZWX+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i /j 5{/.notdef}rp /p 3{/.notdef}rp /t 139{/.notdef}rp]
OJTZWX+TimesNewRomanPS-ItalicMT nf
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 172.199 mo
(j)sh
grestore
16.2656 237.918 mo
3.56244 233.746 li
3.56244 232.949 li
16.2656 237.121 li
16.2656 237.918 li
f
16.2656 237.918 mo
16.2656 237.121 li
28.9688 232.949 li
28.9688 233.746 li
16.2656 237.918 li
f
3.56244 166.668 mo
3.56244 165.871 li
16.2656 161.699 li
16.2656 162.496 li
3.56244 166.668 li
f
28.9688 166.668 mo
16.2656 162.496 li
16.2656 161.699 li
28.9688 165.871 li
28.9688 166.668 li
f
18.1889 246.917 mo
18.1834 246.912 li
27.6182 243.315 li
10.0619 240.712 li
27.7031 243.309 li
18.1889 246.917 li
f
20.2968 249.121 mo
18.1874 246.918 li
18.1889 246.917 li
27.7031 243.309 li
10.0619 240.712 li
0 239.23 li
0 160.387 li
.796834 160.387 li
.796834 238.574 li
30.2812 242.887 li
30.2812 243.684 li
19.6406 247.809 li
20.625 248.793 li
20.2968 249.121 li
f
gsave
20.605 156.761 mo
8.92283 156.761 li
8.92283 152.157 li
20.605 152.157 li
20.605 156.761 li
clp
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWW+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B854D0F4B64A43F243E3CCF111DDD476299F3B748356> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWW+TimesNewRomanPSMT /Encoding get
dup 47 /slash put
pop
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period /slash /zero 
/one /two /three /four /five /six /seven /.notdef 
/nine 13{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp /e 14{/.notdef}rp 
/t 139{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 156.777 mo
(/)sh
grestore
gsave
23.9214 135.495 mo
13.0977 135.495 li
13.0977 125.864 li
23.9214 125.864 li
23.9214 135.495 li
clp
OJTZWX+TimesNewRomanPS-ItalicMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 133.668 mo
(p)sh
grestore
gsave
25.7535 125.275 mo
19.9975 125.275 li
19.9975 122.694 li
25.7535 122.694 li
25.7535 125.275 li
clp
OJTZWW+TimesNewRomanPSMT*1 [0 -9.5625 -9.5625 0 0 0 ]msf
25.687 125.371 mo
(t)sh
grestore
16.2656 141.73 mo
4.64052 137.793 li
4.64052 136.996 li
16.2656 140.934 li
16.2656 141.73 li
f
16.2656 141.73 mo
16.2656 140.934 li
27.8905 136.996 li
27.8905 137.793 li
16.2656 141.73 li
f
4.64052 119.84 mo
4.64052 119.043 li
16.2656 115.106 li
16.2656 115.902 li
4.64052 119.84 li
f
27.8905 119.84 mo
16.2656 115.902 li
16.2656 115.106 li
27.8905 119.043 li
27.8905 119.84 li
f
16.2656 148.387 mo
3.32811 144.168 li
3.32811 143.371 li
16.2656 147.59 li
16.2656 148.387 li
f
16.2656 148.387 mo
16.2656 147.59 li
29.2031 143.371 li
29.2031 144.168 li
16.2656 148.387 li
f
3.32811 113.465 mo
3.32811 112.668 li
16.2656 108.449 li
16.2656 109.246 li
3.32811 113.465 li
f
29.2031 113.465 mo
16.2656 109.246 li
16.2656 108.449 li
29.2031 112.668 li
29.2031 113.465 li
f
gsave
20.8354 93.3876 mo
9.20364 93.3876 li
9.20364 80.7822 li
20.8354 80.7822 li
20.8354 93.3876 li
clp
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWW+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/percent <1C60D8A8C9B6B41CB58B94D8D18D555BC5BEBEC52562935C46122A
FAA0ED803E3529535992C453E7D39C781D037D8C60D56858EB62D5407C7BDFFF
0561EFA95048C2E6327B2C56953B4D447FAEA6BA9616D949A9F21B695CF6FFFF
96A8F94ED1C78A77DDD1A70AEEE65948B26F6C68E2D7FDE8A31D4B74D5501179
5EC8D162CDF753693F15B5AA4A992BED864233FE0C7EA3C38ACC8B2C4FCDB43A
9F46E5CCDF50F3E149810FDA5D16DFD9E6B5280E4F2FB916EA8D7443F4D0CB60
59CCDA3934E6671B634107BFE19354D8C202D44FD829DC6293AC970884F5D2CC
9E99B75D7A154B0414ED2E8B1FF497056830BA1DD37CEB0B5DDA3C7709801620
2DC0B7FCCA29D6FA785F8E1AEDB90F4F0137315CB64CB58CC77B9A0859824EFF
52344495528D08F4C7F6A5958F8956026AECA3202A9F2648885216561F87> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWW+TimesNewRomanPSMT /Encoding get
dup 37 /percent put
pop
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 6{/.notdef}rp /comma /.notdef /period 
/slash /zero /one /two /three /four /five /six 
/seven /.notdef /nine 13{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp 
/e 14{/.notdef}rp /t 139{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [0 -16.5 -16.5 0 0 0 ]msf
20.3901 93.9648 mo
(%)sh
grestore
gsave
27.7115 99.145 mo
4.61138 99.145 li
4.61138 95.3008 li
27.7115 95.3008 li
27.7115 99.145 li
clp
%ADOBeginSubsetFont: OJTZWY+EuclidSymbol-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (OJTZWY+EuclidSymbol)
%%Title: (OJTZWY+EuclidSymbol Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /OJTZWY+EuclidSymbol def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-166 -253 1083 950} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 193 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31144C6DA16F7BC88F58201AFC979B07945644B0DE11F
7696D3918A6A4> |
11 <001C60D8A8C9B7361F026C90415150EF73EECFB0F5D1859D81A95734A88F
918A757D6658CD63D670E6F96F46CB32F26F4B913D0ABF1C26A72A7BF7EFA0B0
847CD7F8E9BCD53DB080D1BDE25062D12FC483F59F1D61CA37F4AB8D777F4342
DECE0641880E7189E6A84097D60F2FBF31A46C96B6F5DE1E0A62D1D5E92AD634
66852A0EFBC940CCECEE998385455C7B10514CB2DFC712D2FE37D7C401D24C97
BC6FC3E24FD582C0E743013324C4BB17A590B67F54D30767812C> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /OJTZWY+EuclidSymbol-Identity-H /Identity-H 0 [/OJTZWY+EuclidSymbol] ct_ComposeFont pop end end
%ADOEndSubsetFont
/OJTZWY+EuclidSymbol-Identity-H findfont [0 -16.5 -23.1 0 0 0 ]msf
21.937 100.762 mo
(\000\013)sh
grestore
gsave
27.7115 79.0259 mo
4.61138 79.0259 li
4.61138 75.1817 li
27.7115 75.1817 li
27.7115 79.0259 li
clp
%ADOBeginSubsetFont: OJTZWY+EuclidSymbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OJTZWY+EuclidSymbol 1 GetGlyphDirectory
12 <001C60D8A8C9B7361F021858F9E5B069E8CC96BD5F64E200E47B850B721C
1CD244D2FF5E3B6A434A87E1C56DF9FDF2975A7B782219354D400590C03D6E39
54934871364E55D05A249B0B731086E76CAEFDBD8C63DD39B280EF248F4A26E7
0CEABE6E2C41313CE7B9D305AF14325C6BAF30942CCAA5830F2D8E8748228234
E4EA1DE7DC8A5DFCBB6C47C51BB75B4FAE6BD76D28EC4393CE1FD138FAF511CC
3D64B0504CE02032E0EB40A7FEDFAD15FA496540CB87C5AC9346C1503DE8> |
!
end
end end
%ADOEndSubsetFont
/OJTZWY+EuclidSymbol-Identity-H findfont [0 -16.5 -23.1 0 0 0 ]msf
21.937 79.9492 mo
(\000\014)sh
grestore
.749721 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWW+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C49
5B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A
9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63
AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D739850711
02DFA93B6532> |-
/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EA
E566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA75
9A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407C
A730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D50
0379950803F077453028FB6169> |-
/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A
35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA
7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83
BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA
4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30
A9F16E8C6EE80DDA09053247> |-
/N <1C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B
056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3A
BC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E
57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63
E63AE746DB94B9539BA648935E38> |-
/Q <1C60D8A8C9B6079F6D7583831D9562C0AD6535EC7DF517755B83E8409215
1DEE635E9F4E30665D8BD2E476E0D924417550F2D505E0950A8DB0FA68AEA391
75E1A9B43B74D4538ACBFCB981AA46C8B17824DDD492EB8F9358092E8A45F624
87D9F6A2411B8ACC9C3165871354CC072699059F64CDBB40337ED181B3716719
835516EDAB4F383B2E97071536268A4E8CF687FABE6441D9F78A79FB453D0243
7C897E7CB2E4C933DF96091B9957DE0592137837CA6116106CEA88D7> |-
/R <1C60D8A8C9B64EDFFA947759DE5E4889D88CE18F8690AE99A205DDE2B03B
D344BEA750622B2A044F453846260E52F609F4B4A04ACF011765AB379E687DE6
B09D424D16AEE22850269A8AC1FBA0CB1130D1AA42D9BB70A20B4BABF919356C
91EFB227A4D8127EEE951F8E9564FE86E42C72F4A2240B89192C9DDC8F972B78
271704B555EEFB95806003600DA3EB98ED971FD7E60CB5D9582744AABB3235A6
9A23AA1EE2086410DF2F65A7A8081CD915B1599189D60C09010312710E9ABC20
DA4562DBD2C8D044173C4F2A486F4032CE9228CB8A1897A7C6FF5127> |-
/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49
387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D
7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD
7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6
B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518
CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE9049
07DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB4
44BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE
13D22435E5FCC1B5A000DE> |-
/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F
6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD9755
6EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58
110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-
/U <1C60D8A8C9B6079F6D024388243061A610EA3A6326F33263CDE8BCFFE9F1
48F3D7F4C9725D2BAF9A3232BD1EB145B5A77D8B0651FBD8E8A9FB06CCD2A8CC
2722C436D9102F6A183E894B34B7045CE7C217957AA9B87F4515C93092C44184
7223DE93B9E3D8ECF6C02AE8C75FDAA89CB34F7A7CE8EBAED7CDD0E6765B3952
A1A95E2E1735ECFE4DF6802DC3188EE398A9F5CCD7DB8E0B3AB2D84DF5AF6C30
AB040D323559946C1407613CE0866FB1002EF0B5DF66414A685DAD87F9D35138
11F878AD> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC5
4400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A
6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C
2999730E7919239B324086FEA852156F456647AA0692084759C352D699897179
9F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-
/f <1C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF3209
2BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BF
E5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC
628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573
F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD9
41D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWW+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
dup 65 /A put
dup 68 /D put
dup 77 /M put
dup 78 /N put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
pop
%ADOEndSubsetFont
/OJTZWW+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 6{/.notdef}rp /comma /.notdef /period 
/slash /zero /one /two /three /four /five /six 
/seven /eight /nine 7{/.notdef}rp /A 2{/.notdef}rp /D 2{/.notdef}rp 
/G 5{/.notdef}rp /M /N 2{/.notdef}rp /Q /R /S 
/T /U /V 10{/.notdef}rp /a /.notdef /c /.notdef 
/e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
/.notdef /r /.notdef /t 139{/.notdef}rp]
OJTZWW+TimesNewRomanPSMT nf
OJTZWW+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
31.8447 316.654 mo
(0.1)sh
45.3447 241.23 mo
(1)sh
31.8447 165.807 mo
(0.1)sh
45.3447 90.3828 mo
(1)sh
36.3447 14.959 mo
(10)
[9 0 ]xsh
36.3447 14.959 mo
(10)
[9 0 ]xsh
185.638 326.386 mo
(10)
[9 0 ]xsh
124.055 326.386 mo
(100)sh
320.837 326.385 mo
(10)
[9 0 ]xsh
456.038 326.386 mo
(10)
[9 0 ]xsh
259.141 326.385 mo
(100)sh
394.016 326.385 mo
(100)sh
528.791 326.385 mo
(100)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
OJTZWX+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B64EDFF4DA474F415D5DD537FAA93C37EEC62FDC4A039CA573
DD652A21E9CE136A62765D8121CCC1F8B6C69DF6675E56D02777F89248A7E9F8
174321009C99A7EB5A01D10C6E86BF0A4F9A0D56B508A1E855C0FF0A6C58B1C7
7BA71F42A09686FC0B9D9347A0229AAC02E9F435CD8098A9D1CEA8AEE9A656F4
D80C818AD8E6F22D6A0A48B5693B6D4404BEB011866D75A098B62476C7952178
AF8113D66FC324EF6F1393F40514FE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJTZWX+TimesNewRomanPS-ItalicMT /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/OJTZWX+TimesNewRomanPS-ItalicMT*1 
[78{/.notdef}rp /N 26{/.notdef}rp /i /j 5{/.notdef}rp /p 3{/.notdef}rp 
/t 139{/.notdef}rp]
OJTZWX+TimesNewRomanPS-ItalicMT nf
OJTZWX+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
312.445 342.617 mo
(N)sh
OJTZWW+TimesNewRomanPSMT*1 [10.4063 0 0 -10.4063 0 0 ]msf
325.852 348.43 mo
(p)sh
331.055 348.43 mo
(a)sh
335.602 348.43 mo
(r)sh
338.836 348.43 mo
(t)sh
OJTZWW+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
51.1377 326.386 mo
(10)
[9 0 ]xsh
OJTZWW+TimesNewRomanPSMT*1 [17.2376 0 0 -17.2376 0 0 ]msf
483.234 259.633 mo
(No correction)
[12.4482 8.61914 4.30957 7.65039 8.61914 5.74023 5.74023 7.65039 7.65137 4.78906 4.78906 8.61914 
0 ]xsh
483.234 280.318 mo
(80% eff.)
[8.61914 8.61816 14.3594 4.30957 7.65039 5.42871 5.74023 0 ]xsh
483.234 301.003 mo
(STAR eff.)
[9.58691 9.14844 12.4492 11.4971 4.30957 7.65039 5.42871 5.74023 0 ]xsh
OJTZWW+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
71.9634 137.909 mo
(UrQMD)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/OJTZWY+EuclidSymbol-Identity-H uf
/OJTZWY+EuclidSymbol /CIDFont ur
/OJTZWX+TimesNewRomanPS-ItalicMT*1 uf
/OJTZWX+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
/OJTZWW+TimesNewRomanPSMT*1 uf
/OJTZWW+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Gary Westfall) ()
%%Title: (sigmapt_general_log_urqmd_compare.eps)
%%CreationDate: 9/17/18 8:08 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!Q;kBcF7ZKQ];hLT'TcI&"-ZGAq!YQ,8/&/HrUCOY&O^E&Q$KH/:HpUP)5`h73LmcpfQ=3G>1d-(@T]jDQ=Io=:r0bfE^A)RC7
%B\["'<nCXB..,t$-PGrW//F6K'9QAuhV\d]_LY*3)32U],JJ+R'FcDlYn.$Oo>MB*?p#<"`1m<AM4U8^eGds+kS\M*(?mEq*)jl:
%+*):9O\=%f)P<tqQN#W@fTNS#kSAd,T0V$!H+%#)H[g3;H4*p4`r:9S*UfuB]C_-=GC&-"M;57HXhI[X]#k'?SI^MCR[X6li-[+;
%+kBkTTU?gG1'YY1!5'-W9a^(VG(+qt9dqE#$jT/hEd32'*uk=55QL:8]H!QnG2PuR3h:fF!EfDW[Ffe?La<8.qVmWJ4;<am^u%[<
%('RcKnRO<k$,qPE=<s&cTIU&i(5mj?M.AH/"BUb;?mHX$-3MY'3#2o@*A:]5\NZT%o!G:gDbcTRL-FrpAcpG5s'ig+0qMpTmSga8
%Q98$c*5Xu<;.DR'K:g#)[O7.?l4lu0,6;:2))9.k&_n_c!VP'5qE&8i;WO?WYRpEMWOMjC80o+0"9S?3[rfr#MAbd4:g]$M,aMnt
%Sl8k?T>.#NP"V*e!'p=t*Vq%fUe\_6l0TAZSMDNO$p[H[ndbn`&jZoF-NtWd4i"Bg!J2]b`T/]!%.9Q8:T7_AG=t]b#AW.oLPQg$
%'Qu5G"unu46kYkR,]!n.&/cW6N&XU8;#"S+jgQUpf`M7r(k3?LGs@o01&]U,N$=-U5Qi),ci\B?/[h')&3u,<?@5XZ^bFa71EJ:u
%n-9T1%nI?4$O2fg5VeSRHR4OJ`FH_t+rCXN\UroE'R^$6E7tXnMCm6.$2@[e9QYafL>SS-6Rr0mMT:Y^^`HBjM*-nL@knCG9U5Ip
%=SQs3NWq!Z0H>h>Yo*C4-K/UBaB]71iSSSk[YD](2&sW<"9Iu2G6(2OL7ds:/-^I?@^&ob7M$Q`A.nT--=J";+M9e(KY<O?fF*.\
%T<MD%#^[;EnBPJT[M4Y(%me!3Jr%D(h#mc5#m0":.E;!hH8%hD$Ld'0_dS04I_oEQ-hn!p6(U&2E?!sEI_n:1,PVT@js5NHKfm1I
%p^;*F59V:'-O^l5"@"'en1VE]H%J#\1bjI3$h=Hc@3:)Of/W^ob-?o1'X<n\-b^78NiC(+A(iV[83*RmXp=q2HU7Yh-\R.1Lq1NB
%=C^hRlim4F1lS8_mtL\U:\Y<<L\20B1$.m3r.Ma+J+++e&R,R-/&i)SE]*nHkNmuQ)5[p;*VR?jj5bePa4*K!0jPVLL<SlipYc%e
%5*.kO1*Ll2DTjtUL&Ab_fF-Fmj:BE:h[;YW+3:"hb#pV]G-L$]#&N+c%<Jtp=W=.V>7.eBDHq-A`H'#K@B!bL=Dj4@:*U`sR!.,?
%_iCGNqf+^sLFL7g'3d9D3L1,/5bNVZIYH10mkIqTd41)+:/6E.A*`:D?EcY=[pVSY8/JYW8QjCBUkk3[]N^I%7k7(_LDRkIG6W\i
%Z\DC(reCH,6F]JZMuUWX)ZCELidV/J1lAIBJ+:9u*<-fRidV8XU.?Ohg^3[]5*&p$^\D00J:@rVnNVZ6<5M^i^\D0HN.24bn\5)(
%&,UFH48=[*MLT]^n6`t<-rQ!lM,GH^&CF<<&Il]P6n&VA)_]0'n5g[<./tB(7_SKKs8Pa\/d7D7&t!n<+1Ms0-_MI;J+,+YT%W#j
%PNrei#sH\DW:V_1R_alT"p55"&bm/j.uA6O4b-k6CgRe1gi#_@VB5%VT>84g2h2q?N@BTFd!'FT'Z\hq074#k0C92ta*1oR$5as(
%._Z!P`''k=L`??<ZZNK4,-9:PK(NI^ShD9%LOCmpNY;=EqEO>i8LP;9Bo2Ae,VX,g$@?i!6pm^*!j;q.%8r(_LU^c2Yp9LQ`V6SR
%&V&`a"I(4>(/0]19+DT?)@Rd@D,/q$>76`B7lC2T;pK)K/9;4)rl)B->-Q4>Zkot%^pcG?&e)(QYW>%6'<Ef_InlT*N[0*W3#i(F
%2\-QpMSSoqY/`PZZ+)e#Q@]:cf'mkiX\a@UE';<1$OP1)])d-In-HHm6DcJ^7hT&;$ZmN4/Dp4tmL&7`PB'2l3t"M3jfAr3mkArE
%\3^J,$:]8C+akJ:,+R/-.UrNeR,.hZh^@@DGX1+O,aC'e0l5\9@Y*hsU-F]b-'?[Y/7*9)oaUC%@No)*E=8hh![i&\l9%QoU:A-?
%SEHRP>U2&;/DgTf,Ddl30M1W=`3fcQ#Cs<WS.m\b,.eV$<tnS2bR;u7OE_CpT.,UJ/&]n:')4fi/rHk'qI]P23@_>'$&M.[p.XH`
%5VtqAkKjF<jObtSF<ue4k5*'?K%'o@E?%RK.d%$ZDX?Ie>:E3.'uC_Qe:]GY+E$9+b"/sm28ZtW,0VbrB!*L?LP#LK^*iK1*%bh,
%-+Q$iUCgA?N=p[KiB*^O$J7[b@3-#+rDJ`H"j;Md_Un<:,]Q-Z)-M!9ld':(UR^_0r<Y],EUu4e;(2eNL6/f2=`)/]q=6EV`8a!0
%T`EJ?bf@os1A8e@?H&5QHIQtAn>)G7OPh-]58iHn.S1`P(dhU^`(:Gb>U6_=UcflqZG:J)=Ylsi9Gto9#`5nrdQ9nSStF72cc+Tu
%lX,5FPm&U!hX;`.p]98DX;tm-+tlCkd0-@-aL;^:E)@.s1-5TUX<`l*M&`N,E=!Ii*.jqScKek/>_IYQ*^"qY(kgR9(C-<sIO=(I
%KV8b16np<[R\4SbEWNH_LOtc<5Lu;8OE)23E1"R->n7Iu[n(@dM`ge)Y%e8fKQ>JI!94]m&q2IuiUkC@rYSF&)=utGS;_DDcM:U6
%'.3t1%ELs04V$r#&Mf,=r0QG7hMT).B^`516Pf^ag:?uA0?T,r9JJ7K0hg!]`p+Q;j)P610&sW1'`Q(C?ePi=S]dtmr?9F+=P-rV
%f,tbk2i+^6"Ud]%5N03k2R\&s'+%Mof>?gF[j$9UB!mM+G:l)"4U&%*p#MieEHWXhm_t;M5K6^0.fhE<S';iW"o,s5iGu#e354SJ
%NH&s,&B5R--^Fr6O39Q9Qmp<Z'?:Zg9lM.C28;cCFU&25ZPY--^+V]XLds.cc#Hji-c>\"?<&V-Hj07sq@:J)4pCef5NHi?jX^d.
%HX((t("N]$qsZa"Hr97UbpZhENZaWj3$iR?ao)u3+CJ]SSikb&&8[(6&7nGC"m<^bLeX7n\."&NT."`j8mDKZ_+$56OI'p+'fX,8
%G\T5V#7XcbM@tPnDW#hI6&;bL]nl>)5iUc=Sp!FoR<SjS1P7Z2@UfWqEY7Xe-DgseRM_VeG7_4t,)kDJ)&J1iPN^c_S,r:''18#R
%/'HirHk9CpGs3U=k#GOCI&=ej7+NFp;(g/7Ood2kMTX^3ECRjf4M]4&"@"O!,'XD#ca)>dpM22'@`JJ/k4r\O[=<df=h+fkSc,Bc
%`_jtG4t.R4>^j_q*'i_XN7d>L8Ds8#a`/ML%tQYlP@SAW87dFT1+=,om.DR2Jhi4nP2^im7.$."?L$QQcH9DA_s8a#b4g.a.E\h,
%3&]qT0.mdsZP>ZF&k3<P%1o88&$=,B%0;lT?jZWlk8UY-Eq^91"m/8,*1*Y?0eL\D,ahIsLm^],+HH%ip0'/rXW%Ok?Nb$--mo_l
%&90gnJR2o*>RN&t_DpUb-[>ONTcg>V1-[maK'Z):be*HD>f!QnM)<5s/Y[WJeM`./cHbu(0dLpBZ7MR6KNWgEF2H^.LpB0erXQqn
%T?;KP167!G[lH)m`#.KIO,IlE$mnA]4?]E9^u\EuKIt"_A9(4F_Ml[?8VZ5D<5TT@RjmkT?Bo*t;iT,6Dldjh`<P>S%I##b4Ll#E
%+SCW_]MnSpnEY"5)MD*^@J-)4VZ[B?f2i<"l,dp<neP9t:`=<H7N!Dd8PSQ6eZ"bt+A^q*$:ct8EZE>3*=0!%<'JG=Z7D[IWfh=^
%*bnf<*9!W+E<O8X^k<UP5\`pH,roa1)NWe^(10EE`Hk5=Og!K'(oC]E0Z(j'MtOs,<(VKn__N%_W@SEc1Bn0[EA!mCf'Xh@F"<r0
%"YM';6@@)?DIQChq%nBL/oM<l0bi/rSndf#'@(\fR1U88@c,%Lr2BB#0a8d['E?&n=U>JfMjpKG<F^u$"t.>lXSDg#%kLe%)pUa&
%W:KLsGRkiKdYsWI.YT:a>JMc&;nsos0&/$D^Vie7CX(j=AN\!-FdBPq)20,:^;\>?]Te?0pqDEsHF9IIO1"a:kNCKbW@6#F3(mjb
%1J5gW(aJ>e$=^!W@4:dk`6V)pGld[\$?Pg%cj$\o$A*bfZ`=iY(OY5%D2k$k^pO5VBgNp:2k7\2\[B)B_jsp)>ERdYm=@cFO&h%0
%\+C<Bn_[2:O#igBL)33:l2Nlp-gJ4u0=R0#)=oL!nh1@<p@@D0CPi-E7t7*2c2Q^]R]j2)dU+>6k7csl5HVD9b2;?m)>jU9%MEt/
%&Mu^4>;NVWDR$&;nWQ9]Hp<I<cT'hs]$oT8n?%r=<f4Y7NPVf<T=(WDRd[RQi!k,RpSDk:>1Ao$qpLjr1[]S/?-bi=KE'0iSWh5C
%`VAVH5`5-YJ@tj$'?+c2(Ir3EG=MG,kO"Qrq%"_Q-#cu^_&YUX5G)hEPSgcO'L8/bBCt-nZX0e0rY%ZE.Ca`SO(mP"q=aGp:+cD>
%ZG1hCP/ii=^NA,"O1Y)a/9KnNrh9&bh-#3[E7'aD9/H/C"[K3a'`>ZiO0eEnrnoi!i&Zepo1U/JPB6Th]q>.6[O$.]/$Q2LN80"(
%pq%;G)CY?CN9(qURbH/e/[[PE^T\u^m<3o.S0&:&N:Q/:1@hNOZ%'oF)VW8]%S6.h47iaq1(Z/Ab5K+0d4aH>^,TL"[>"n&$]UMK
%'E;pcOBA:>1IEBZd7E6\7_]KoK7C-1%(#'s0`)@\%m>[PJoiT'ZRL0qGQQ8'd.Oc?cUV@e#(KriU1MaH4LU2(:L"cqVM;;+`9(7`
%44S;J2X]'1_;k<.iuS<X@itt3^eJmKWT/!c(Yt&cYp3li[!.8Ah8gHP&9pb+&T.$@cMJp0S9J3.Hii>ihGYBnN!/kmqIR$j2HlaF
%O67OK1>[XQ][n%3WUbL-_d2m`j$^Q->e98!`@krt97#S<bl)/_'_js(Up879WW&LlV4.OoSaG]Hh>q2&D15JuGSfrN"N?_'.aiQ5
%S3ErZK!?Ha(6-.TfFQ2aqE0sGn0@(&mh`dQSGn>7(,RJi!R*P<#mUe7@0e33d!#NJH!6Edq0K=8"$UpBX1ePKd.?i;Gh+a&G_0u>
%!1ugYgH0.A)@aMne.3NJoL$W+1@?M#i.c_`.Zt*fM;"Ol@ji1&#=!02s&/_?AIM!/Yk&X?K*euVM4_7"Jb(;%XW<51")JrpQo<_A
%?qXtWfq(K.KqZhJg3u=,*;MTXV2Rbq,lfUn0/Y\sV]XiPe*''9$:&Q<?JI3MDn_9n>T]K)i.ru,:e'4GmR0:M^Xqp,;%&iG$+Jrq
%jo&Q9Q9L,?idTM<FggA&A;o_5&$EGI!CV\GiXl1-Nn!;j#=OG0*oJUG(IsJo\jcp%dre&Q0YPR/TPM@2rhc(mO0H%r((3buBZ:9N
%6lTlZ6_.g>3F):CcQFHJ>T\1fmG]W:3*KouWqQ`d(-3/]S&#.+``QWoa-Eo*doujSUl!\GHPp+CrVnruFO1Kop)\Ta.:H[Ia>)eE
%'>EYE'Gl7[&g#Ep^BI,i"OS1rJ_)\(1^`V45&o?/e-%bbK%TS6UVT.ud*P5?CV&&6"E>4pW%(P6ZVU%.&e+g&HE)f2dLG?[3>`OF
%oD1i]188st=A<JqXiLTu#!:GC`rh9p)C<eDjRliKY],JUaM9SFa"c.4$b1?kaVrnB5igF41MU[Z%mJ=Ts'7P[SOO\J#%jfC;LY#[
%2*3WSe49[96');Gs1r`e5enfEmoSaKiYGY3GPVE9,(mY8#8n9Q@8$\;p@R2YMC+i_s#mofN#mVd\))[DL$K=)[LKuOgP?_p,Rmu^
%+SbI3r2>6$+5kT)5SV5(n`;?1S:f"G?.ABVj=PW!:E,68bZ]P31+lnK<V!dc]kOerWko-Q1:k6F>@'O45o&7<eps1mSR#6CLYPeC
%9-=^+dpM6/?BL*jq"V&OU/JBT1NWsdYoHJF1!_0H-e@F6/5V,jN.YL<2rVOVK)%XtAH58E;$ApP.p"-WQc:A$mPcgTphPk0HBS)V
%IKti2)JF-k9L0o\'<R?6S)f$DL;A1k5!WKCJbMC;ReQHE;?W:D3r[fLpRp1Ijof9Z"Zc7<]e@\c,jt=i%H82^MgEWK+P18)4mitm
%`Po7%O4,110u6nGD1A)R75Dn?)!8LF>R6F7rJTI&\\@S0;5N.k\-UlLV;s'#otOHedks0$+K.Xe5`!2[mu\Hi91[k8Q]1RK4G)6Y
%NFXbn>C*`Ok'D:4HN'*(J&m%7PC$S]?'E_hV8r)/C@XSOct=JNV0Dr<6iDLu(JF_'RlT,$^FB3/fjX/:_WVBQOhc,'295aeE<0bK
%0-]NXLJ`A&r;Btb)uk\K_/[)YrGVGL5R%CRc)NQ[V,+m&2lXb&+%r=ubEqu$B79?i+\M_d7;D>iO"OB1:NI82#(<aQ0S%H"]#)jP
%Je&dmYf6;5cgiDEjm!1sJ+PGgk<I3i1`>m2A)Tg('F?)&_5gi>]q1isH8oCrrYG\Aa<UEB1GbfQ.;&VMa8jFks(N*he;9]J5j>1g
%,_&@?A^7GSkV4M`B6],7kCD`[jV`s"UF0W>PI53d`=n)q0cj-1Yc2j12*C_M@W\8Q`Pcg"LS2"<*k(.%(($UU+gU^`BhFT5g^"SN
%_1"NLUiPN(3GX]q9V$QtK,@C=7!Q>n[SM*%:..I)5-?'6W&9BLJd8I_FPdelBua.cmDomoUUJ\=`$M"kb7<kOf_qZ;\K4;A/61)2
%36JE]-/la,/<Ul5MTltp:3eE]Tl3fs)A70%M7T5pEdp35^t*+IN([bG2]gTN;ED'=*1skd@(-5`TGRZ@GM]%t7-S*j"EXYg(c68&
%BNuWnGQ](\SjJ>X3gj!B9FQ*NVe6tFHibkJg_/FCTQ$+3?DhI)I=i.F3Xg/,R(k%ZTDI`(T)Fc"olbam2%HLt7$n5'/M%[ZrEnWj
%a(n..g`l)*!4uL+jE>s9?.tE2G)V,bgupb[F1KO:%lESTige!3%r39U.Io?+rd:H">nV$Kj(XDUp^nr;>)*@99i+r:+D3gCd6tdj
%T)96/7\a/]Q2`l74p_Rg,tP"NQd^@N'k.tK3WqI<no+i/e.F/'/R/]*H+1LAgT(Y]JW`PH"N%[)"tp_-N5D95/?VF:W,ErMLoZ(Q
%[PZ6bqM*MaXht#_oY)d^%&8Yi,,df3+=L6gLk,2.EMQ@]3CB?_NF$-kP/mk&hC<dPA#;iDa=[%g8!,H)l!&d%m:mqe:N:FtVXtGc
%V)nu#(\gBdi9c%FJQj4U`tLgY./AAqSR\D>jSlMEJoOAfrIV%m>,8U]+pb)Af*iRT?=qME#8]-9n`YiU<&FoAX9:^(9[tM25@a4/
%Jmc#]6m<fM<%l"uG9Zhh<-u^&@n1[1L1"rhWS99;J6?hW;(1K5pr#hjRs^2TDmu7[AP_^sXXkcu;LqFQ>k9f\3<?U=3JT"tKf=AO
%&W4VlfV>Ce'Ntdr:c2K"f6G;d$G#0o&:F0*'!Z[P@V!OsY%Rk+2C/%_isH&uLH10"`nGl:rBmZSj6;KALQE]L$>>8_KJoD)kqmbZ
%@KN.o$<"8+20cbnU%ZIC7lNk!KF<D(b+V>Mkl"b>2P0i(+St^r/;8>1QU3eHdAKUXK9@R(;o8u/8k^EAk3XW8LaR;D7,UbAPCV%"
%%0Wij:Vh;K0+-D1QgBo+X>ic//eJ"jZ.L?V-uebVKf3riVrUltW^.@Q1>ArB+NB(-nGa>69`WEiWiFlpi8RK-08_d*kMG!o^uYn/
%rra=Kpri[WB]]Gq^\e[;e].m5H5O[qMjgiq4/6bpo@mi2VY"8di2K%?nB!(NirgG/j67>%>k*@kRPmRd3/9&qUO><H5Wl5u:E&(E
%UR=,"^Qa;sInu[^c(*XZ!%=2)eOiGj7Cgm"'HdqDk<6J>o5J!BFJ+F31[#X@FSppUDW:h&U#tuViPQ&+m"D+e*M"l:n'4e.%fC^M
%J-HDNkOC(6(IS,`i"OZX*!9QoB,jcIA!$uU@r?[:oLA5nX4-iF8/ochk;tBi@_JVfM+;uu[Ej#G2OYY1!0;O+7,3Ka1IiO9;CNXa
%.L>:fMINA!Jug?TH@FgFA<NYtoCJ4W7nOd0k\rX++A'Vg=6gMg+#JPb3#%(?HsWr)&P6GOhTs^5$"-'>,[6A@"MtZKj7*J;1\qG=
%e/nH4G3X-^>7S5qh!\qdd=9MA*u^Ii$bHHUhBEfF-;a7m?(Z;9TSuP>b^e8lJ((-f8A1L;SR0DFGe?su+]aN:3H\R[pS)dK%D60@
%imEj^[fQHYYY[XFBls-TPEr<l^eghXEqUF"7X]I$p93u&b^FF_gl_p"?b5K3"IUcd!W[<CL;8[Yrk4&U=o)0fHu+Fs'9Z">!m9RE
%IE*(MOTUqelL=eW!_mlOD2l?68%<P7f3go#Yr<C%R&5Q9'#dVg]oFe7j!5LBdE-rF[CsG6`1JIO!d6/e%2@u#ctAA?GD.ncPqaJ/
%E-"Hia4$?nHoT@#Oi)&fEk\.q]?%#*5/'imeJ8-M(t%Op(>T/Lb%Z:PR]%&"PAe/MVVnN8<+ESVDQ!/.4G@&[bJGrhLX\T;bSn2=
%7u-K)(#LI^n;B:Ve(TtI"f!QBInqXfi>G9JTE:-N!2h`Y#l4oU[(Wmj)Yad[c)r7OGRZ.k8mmVq0W;O%qSu]I!0bVAHNG=C8X=k-
%F4j,I-XI`5E,+HC2'%=1m4SfUFkh&*6gNTdDA)DKf8=Y6m2"<+$b;B0B?a!"=.CjMoVERT_'t(!l0*oHStQ\[o#;/c[QeNOR9Kkj
%lbEd$n54fB6J.Jt?`3C)<SIH13'1qhJ$(K@M"\>ob%/)<q3_FVBRo;,g(fPO0G`7:Kgp$>*TM]Rd!U]f<f%Ee^Sn8H(sRs3FHMP4
%pVSN53bR9`ZroA[Vq2V93<-M:g^WJ1XG<a.Y;ibP]>?E)X:<g?1!eZb'\;es-N8%-E-)HQ3gqf'<^SsQf5\,\!)q`iQnn"4CZLm.
%7AH;#NI2HaL?2FrI]5P_i>u3\m^gCQGKWiTe9-'EldA1QNXJWSfej>R6K?,JbJo.nW`O+7*_%Xk.DcgHIVOqa`R$p_S$@BlC-3D'
%cUJ:X:9F=uYuXLc9,*TkClI/WD(k>$kgl=P+$K;$XmI_$R*'<3>4,+-_W5^hMegab]SR)tjd7?Z)cX,FaBbhAC2`4$o.3Y$6`l#!
%(l;>rJRdr>[.FK=Ep9jTQ-4C^a5!p3nf+[@FOS0ISa*,iZMMqlAKk*W\A$558j8kqH%DtUIffE)-,Q+.5?CUVO1.I:g$?cKkiOU,
%l^_)ECs6oH8s,T?iF?XF)6BZ'TKZ?YFq[Y(ikpP<f6k?s)lb+tpIi3]1)o4)QTFtdmZPV:-6/<H_I,gL,2O^7F(t/&MAN_3m:0m.
%=Ik>MpiB7UNd"]A(2SH^13`F(L''t1(<=TQ%DLLZ9=9&i<:D4uDXoroAWLPM,j/fm2>Q3MccWTXK;5r69[]?A2/I=MmQL%,>gY_X
%MU^=E*S)gCoP@!7i4$,+]P+H%k$Yu#`gQMEHYP^HcO3tCS__K!?dJO[ch7\0GNR?H'n#aSHMEfLmq;?bqmMd`a*4_rlZh37>_M^m
%X;5nr;F)A`XAhCoJ_8t*.R"1Ek,ELN:BLJ!>IP*GLFR-#SK6kNWG0TlCDk<olq'[-5VKO3QmE\)dURK53.FMRVNs.D2S6F"L9`P#
%"fgW02MsZaTq&EBNAK^.9li:4#(gcZ<ln-LCkTq/bWm^6fJ#ck:`"aA0K%H+kdroLACtgg;7V7i(Hpl($nV#bWWCRs%(NXsZ6rV_
%>McZ)7^nfXr8W6b1s$C>i3`qi((9>*W:L/)#m:AO[p@XCMP+`^;kZ$6U+T<`]1D9Kp+abb9-<TM_Vb,>PGJ/S&=X.NOr`lK+Q"de
%3i,8`rL*P19.^V(6KG+1_8:S[c(E1CTR0ds4QbBdl!lP!Y!6CpoO;H='#fPT#R$NCO2nkR>/6KgII8$LG14ta9$V\abD$Ze[XFhI
%e%te:^)N6-R%\=I60?VoP<%O(T?`e)aWrC""/grF`l*GnJW\D6Sda3@oA$nc]k?b*!TGsQ7OF4BcO_C1*A3Db5UXTm>tH=m<\1-S
%CcQ^?iu(Dpn04/s]iiHQl9Sr8)>><Q:,j!u?TsS95DPafis[8&.ZW/lS"p=FmGKOu@bjc3h=M;2V1Ja;6phL6/'joCk.mYDf`5e'
%B5tI3+62V=TUV!,LIQ;)FK4)h"Lbj=p3NT--']`7<24-2k529k)gI`dZ;bL$D3Utf4[o<!:[nT*2!%OV</It7/a(V,S=OMc-q0aq
%mVM"@CTn.n!Np#BU0NSq$ScRHL`DF.=<2]!dZXY/i$s,Ek.AKR5G[oLe`.)=d;\[W%V60!+!POXpe/?5=P:N-Dmi!Vh-=B,kq"FQ
%eJOsF?=>Kh*^3Ub(Ch!5hYLY)\%I-B%fX-uNN>VFJTZ.#p9WkmrKhB\A*_A^O![O'!/o3!f)qGX`c5)oR7bgLo'Ob/(FbXVQqKim
%3Z+6UbDt?'OYG8*>(It]:@TVQO6U#X-f3\Dg2R-Up<4.$"OGhhI.+aTA6Y8npKXS!oRSX`6f8-:[R0KZ4N[?CrJ8gX3WhSN0'mW&
%/7l`Q&s#ig;s(5ggrI$bV'@r?&+X.ul)"l+\eqL_RlU6q)lQhi[fL64\dNg(`B4'&<k-%T'mcUTn7Md5_BQQ'rJ^E<Ta04rMsod>
%']HG$#+!S[M0RNSl@pY3LGJ4Z6(Qu\P/5;)=+Hk0"ZR>,`$Y_Nj,)+QGGJ(P850>O`3Yq'KG^eH:!>::.c./5qX@Z,!>D[[&98A&
%,g2=ET00b-MhSnbh33T\LlFJ^Pc-Yf%ngoW9L&"jkTP6B=>DY^!UWMpV4cO\-pjd8((7h]$;5o/fKaJ?MW5Il-2^0HGg$m+)KL_J
%A?W$:PDm6G&2@)I:M^f^o;`a`W`d-_9qElO<"t%?)Ls,@$L8K!MFJ('Na%'IfX\+0<7sh("aGqO-=[_2,UEV6-`*]]A&^DY6]*o4
%UCLD3TIl"$Z\$`%mSFOAKqX[l.I?QL!ui\(@)kG4qfPbOgC"WSOs5M%g6e$*7',oGo4qro<Pje?ln&g/h,klbCnkoNr/_@U4T'Gi
%L46:QJ(WBe3BParOo?OMShQ?'4d[ad:#`kZPTidR+.1"i?O:VYpYLGAV6n@(/;%MR4eC`WZd#BW:M$8>,'rOQV_d>:_`^?N%*6D`
%#n8)c[.HEJE9PoQ3F@J#:6KGt/@hJ1OY!Z\h<.\2nQ?DZ<1$MXm_72rou>2i7'PG$/h"]u7_(nO5-USg]^GtTDtTTj0-CQA*m-97
%hd;1b6=*OG(bA@I--B5j$F(>)Pj7G-+;d!DHVLk9WLGl'!3%EkD3J1U?Jt>>!l/:KgubI3XmTsGdKLg@&?SHpJ!->c853KfoY]`X
%7r#n1ICt8[+_s&KQK5d?NKBhZ[Q^S2l<n#UYjp+N]n!t%5u%K[s1^;sPXolk<;!ZK.)bHPJTG">aM#(j&(\3'$AY=ULb$P<S;SMr
%cc-m;;XG]($=X+*"V_q,rqsJK+)[SHI!a3?jpjj.2GSf7[A3lI1E27_p]42?Ch(X)'`Go_[(5u3P#//aWbeaN(g[^j\>V+ah`RgZ
%_)tF=h<E"o'Pp\o8]fViLT0?]gRK5<^&/;a\p*O<DI?)BR;1VJ!F]gh=-ER0o>X[5]p_iLi5pZ$rgOG&lN:Y3Y\CX6,19U^p]6P0
%M8?^+$/M&'#2[u7WVLENJ82)WEo^>RaHU%[4Hqf[IWJYJo)9%eA]U=q-*Us+DYu/EpoIUO4EPUO[WpN^Z\4pBXSIYKh@Si'>f5bM
%bfZ<]"lc$CZkI*oI+ufK9eeEIm&60-rb]j`.rUS=NaYt@8?+PY6O;+k]C\2/mYZQaZ<.dVDBB596KDAW"?hC48YUj(EB]e.Gkm)C
%jO:T`UKjneaYDq(Q#J`H&`Bf]+M[HjpL&10'#__&>!Yp$\]f0.c]'"$[a`IU>D($Nq17m;jIIq>0WNu-ST2>Q)nWHo;`Tb_o&EdQ
%9],%C`UYoD"2]2JCZ@?)/37O,?4e?"oR^&(?52#3FUYE&G[J%5HMOlqK;^$<(P-ugJXMuH]jVJd1q'>U.[Vo@R%J=]F\_bP;fIcI
%Gh]a#QfboULGM,L)<C%+JPraf_3:"J2J%;]+TS^;NGbL?lJ4q7EiO<\KrqNt"@.<\'Qt=p(utQ;nQ)6?XY55"V().A(d%L1CW5$K
%n@GkD/!*0)#3VLfH0Tlc94Jh"Z!U>qcHb%d-&@fFUXl+dS\&mfGU?[mb2`2;!b.?MF>sY@H0,ULjs,oI")rab"HEXfoO1BFF#U=g
%C:j.3+Zb#CjW@`uA\QoCK?U'!Xh;U\S)BeKLFRO8\b2;(0235k2S,gpnBRGn'(LgmmA<BI/@MJ)!m%FH:#'tcFbeFsJfB1*UI\j.
%h#Np8Ra[1ahF[f_"AGQGA(g7,/]?*WeC@u*)!?W4V\>-%#unPo`D0.%$S4<lpN\&ZG#P(-;TZ-cq"YZ,d'c+RMq$J[ciPA]-Votu
%W\,UK,lOHTK/NTs^V"<()S4r&ZZKF&,u'Ai)mkWk\mM>dAIn_Z"J.=dbkIjM>@i#!fjVW+cGNmhOlZl2P1BsF13^"D9(BVT]T_"Q
%qt,Ip]n!?_ZO<"fq\2JS/?"(0Lj*qp=O@3^"WdBRph[lX\&;o:;qa.)64h?jEGR@p(;4q'\2N54JRM(&q0f\@/(kK`$T,FQ4Zaon
%$\'kf:6cd/FQ"@&]NNB4NZ@(RStSs*jl::NqpH\amOpe'-_!f$aUcDJ#P7ri.8R/$/g)mJZ1-]bqY;TP%u@ftM6%tL)[e/6890nI
%p[doc(PRj4dc03kAn:6X=DFlPU6pF7'#iY3>J7QVf()E4-El2Nn+t*7q_aPXPYNE;J1%dmF/]bZbU!bC"Kb='@K?e+$gA"#;.l_l
%;]OpkTk#Y-f$9hG=/oYWq0Yq%nVRYU7p/$mAblX>*?V`FE7$n.?tX!BF33%)HZQ1`O,YPI#9Wo3RFi>/7kadZrQN1G[BKb>T1&VN
%Xa`d!h`4P4&[=<qm;o6f4s!@g.8eAMDla%KMbft!>rs"=[$M"RR(bK)0N(LJ*PfuiX<:L.qb)i2"-U@5@OE(F[H$"g`CcL93Q<g<
%Pnl4:;_ZiLQo14*ph],U-nar)_XM"*(Dn.1iBf(*Z&"miO*)QZh5j56XH`i17P]_M?t[C?,7c\,3,8$s9J0\GO*E3QR5%AMc>Fd+
%jIYpq>n1Kkb+qNM.]RmWgVH2nUtKs]>UFg%LrU\U#(^]6^IX65UZXY'*CS'GW429s*C]H1$gNBN*>>-\igaO+ReuY,\d+V95,X":
%m.kn070">jFn0X'iD@Mq,i;.kJT-/'.BlLRggMn#p2)-^,?84H=>+EDcS*!;:1+Y-p\@)<Nd(Onoc>O-SsX1?=$:qOSNSe<k[N2+
%.SmT,H>pqp([g&SF'U%30^H@d[di,^8gW*pR5+JU+mqBYJ'gu9(E%tj<4i@]W]C69mIp$%9Afsm'2@61nhcH5M^*H^@LP3V[j2-L
%8m(#hRR"S[2bt_qqfC%O8t.V4[<R-d=D[)e3VEY4)&#B%'A]ZNf_DOkRj_-/06T5m8D?@<67eoD!ORBt0)La9!>^Z^,!@EfgNGLe
%i7P*\0A?QGY]0b!'0[_d"tPa]PfmkLV`4mI"7)qI4#hmXMtc>o4.9"$g#I-OE/q_<6C)L0&'cPiU"oOsQ;iSJBXpmVAF#9W*uWhq
%ifD9'5#F>3i1k3DiM_*Y`Sb-J9N*Cp%e/7rMD8a.G:8?%55B(c8\O4GT9p[cU+$+'guepJ$=Z.ZOC"G+7dbS:=33,,K7>S6N5f7b
%I0Plu&9%:K,.@\EhE1JpfBkMOP$TC=Qj:!Kq2@W_*m(e[4\lROAa.p,Yor'Xcd(ZE52l1&@6bZnR2;6Np/E3@REoB\_:pXU^FN?C
%X-^@7Am"2#jrli>2&[>gs0,US)i2N?dT4YihZb4iN'FfS+j]<[GkpM3Qua(!I!6MM8XqL1Qod>Nc)!lm%*[R+3%-ddm\tWt3SpBu
%pBE/3=hH=<UG6i0F+.E8ZCe9TaF[Zh7#%)6f#[_9hDK::M=k@K2Q>omgpai(\V0Yd!(,P"n_Te]J8"k"1\M06S#Q42ek^uj=/W:q
%#5a\+kJoa4bGcVck2@rej6;tVIljjlD@8PKNP'U65CsRm<d"HaEf.90n9[YjnH2:15@#=Uh^3n6%dhU_.,&/S!BUG#lhCkkpgaPG
%mGTV'@N-9Jqh'-#OBlmjqe-&VG9b4m-'[ut#Y\*N^bHqPg`Jq"U.AAiH_t.jXo5SbkG_>"-Tj6lcaF%jTWuWE6u%nJPf#t8AIqNM
%B)-VF$6PTeT:d/j&s=<[?uhoHdc?5`!84Efr*^no8U=Y`5HY4+iHUt/]"c8im?\@7__d3O<S2urPbuX1QnqoZ3M#L2^@pK>RCIW%
%q>nh;/]&"Aq<#6SI7c$uO\sa]df+RZ=m#UXUFZ&k+Ra26DX7AF<@0-5a$Xk&K(1TjD/N!blR.V3d!.MuXTrpm:(9VdTt&7i]qsGk
%30I#3J^D<8KlAjUn==<bB+HTR?a:._j#t9uk+C&lZsSh#Sl(+8)$UT$3EiZL<_/gGBMAZmaPjp>]&o/*POBTbr;P!k+l45X+ZL<F
%96J]-+HXX[SrD.+G-r8^4V"?>(Q)Tf6ssc2\#9Ot5l2\JErlKJijJVbb4;EFCJcoKEL0nt,T(ZA%i@\4@sOBB!`0!Ri?gQ5^YC*$
%,EO,Pb,TDdhD`aS=0iR9nc*4s]lqhPD^BM>OC[r&XG5NZ6G9::]gjBDYS9F<k7YVSf5tlP]-qdfM%;[EW=5#UK>O+cC-Y4T&67UU
%K^SdGSg(89/[ABa?#`lHoEY\HiX%`Z+YPL;;^P]s"P)4iBJQ!uk@CJsR$aJNfl5'jXsUtYAn>if]g^,m%&`Pg->!rGfcnsa0%J7<
%P&$fbqJW,,FC#Qf9(VQ@^]0`rcM*LDjKb7L-:cl#,,&\Vh#:CM#I'R^3Td"N"CH$`p_0I1Dp'a-@XS4uk!Z&-UFM'@gBtAZF2PI_
%-hq/[US$ZB=fi0`VU<^V30Cq-5MN\hs*9o^5A01m54K1JJ1hBgKUp443Zeb!c$9\Hp;-Z=pZ4Qr]*id;G:V7hI2IA'gr$bI^iT2I
%n0]D:$3D[F&Ua*Q;(GM>Qr!Ku!.T=<n(CJAr'H!rA@)nO9c<R:nWF$>`M,Gf*DBs]\,QMbFBAQ^'/5%qr1*M8Rs2#S_=-dPqk$C:
%i!Z\!OL=,N4M=>"^`>Sh;WA`<,EX-XJiF;Jhjq6D<hWDCg^9<a?;c@K@BfXt^L0;_\QGrI?H2iuVrpn0j=U..]<%LNLVX<^Oc#k'
%"q+IWY0Ac:-u-G(J7pKG-ti8W>m,A(bB:Ut]eK_X2f#S"3<ch>Sq*,1=.hI3XJPF5]1[famsW#EiT[nBn':B<KsKSKJb1pLbKmH*
%Phk,\D=jU(;L"27(H/8'-hmGD/r31mJD(3N#2tHlTA)8r@,b@]5r;PVa't#GgjiR&!QWe#_N6\D/iSXa=SV#@qtFItVVX#;ZR7*F
%8n_R-E=q:0"MFU!2=#li2dUr>&-]Gti,:1%One>j307"d!^=6M"qumW%'fuY!bh/B?190_?;N2+T$hMoKl,=#Q+5u;)]Tp]LH<6+
%Uqn;[VN4&([&E&<N#-@sS[)[epGH2*Zs$VC9!L#K75k(Ial3_T9c!bFB/7f6+!sp#'EL,8'MYI:q?bSaAp*3W]pVU?qo;Kr/!Y3"
%)b52X4kLA4G_<cH9LU<1s2IObXW%DEb62YP6JFEO9P3$`b%1%,mS,V`pXE`5K;!(mD+B0EgJ`Z\a`4e<0fdE?g>m"EI4"]@\R=t:
%a$Z'b[JXJ(9ta;cJ%<9N"a6FA;t(X%9OZ-/`Y:TI@]$(U;`DZXQE_k[S1pg.Xq`i@M+H0])OSOAoF/IE_K9Q4`D,$%]kt>"hC_O5
%IF)g\Ug,3En\m7<Q#4a)M<K?L9NCE;ePp<+/>e0rS2W;slbmmpkB<:T[TLfH0[6dq]ilpq)?_)dVW%?gCjMm?A^g83(1b:Zf>g24
%1k+)kRbmp=O(gZAp.Y(u_i8@bcSeKJRQQur[QrBM90I]lkdI[(qOEO/9d``8C,XV`Ze9@I[*5t1`Fa:p*X?;$nLe5C*j+nn5`8=*
%_njpL?o:G=;K['?hX3(q;u9X;ekTi$3TfST>[2DuAn'POQtpWJXh"72D4B;O<lEeL54$OHe$*b>$33&hq5r=4l'Wm\kmh*-Uh_.F
%H2ms3/;H1UTp)DU/1:<;Ahj%I)iH:g\$A!FduhW(McD@Fn5I1:[>!G&`/Zr`1@OI]-.i*?[Zp4GD+h8Q+=tdbk17t+I>D#%+1GS"
%PJq7F]Hn)#$eZ[@$ao?g/0CPiLf5o&DK05Jg@EE+F8KipA+p\(2stZsFV@;)5&R*l_<rZG3r-G12@cUR@OZ!*WJ:$$S!JC8^$0j'
%[l5O=WcI^r+*MPCPi_"=d;#b#2Xe]Xc/DXl=\\-:L`ih.a8;aaIC=bNqjuSIA#HuoR^on=XbFQbB<A6V<n:=3enONjI6$VWq=J>@
%D`=<>q8YO.rKt6AXG=c2B/@fSLs<Z%5M1@lh8'k`S("fF-hq/oXn*$TeQ.M9)n+>XAoI"i4L_c^LW\+9#1aC@P)@!+p8*ntG4mse
%G2%#t[<jA&UHLA[o@_S'kuW5*5tC:LG&M9e]OpX!UUB,i+.lUdq]bap[dTZmM>ag'h#[Ogceb*1^.%V?&PL,ANn]W5a\aD5O,b"F
%MN7\MB61`"Ou(.kIV:dNKg<k%.Q#@EH\%VGrC(qN)/hF>cF`VokH'&sNm<Z'1Nu%6M^.CHD/)&^ffm42r7iWn/o0_#mIJq:/?[W0
%l-jcVNGMkMn."K*YgK94M5J:ql'?^>D:WVYXqNsDEBB`72g6Z9:Yb37H0R#q#8Z`S:MK,9[2p2EBg,_V+0C4BI56$,#-5d!YnT;D
%U3?"IGj-#?q+.SMmFfnHH$\e04gXm%fs@/c7UG]#^[ZWP=gp>]o&dX]qp1D6Z!G`5@IuGDI=E9F]Gk4%jZP8h"$UqfV<*WgVH[DF
%FT>NkNM0kC)`BK25-coAqR6(qeo.^H1Oa8O47su`QDhQCY)`JJe1'a6*n85Z@#.\[B4j=93#q`f+?ZlE!d@M)#h2Wj9457\N<7Ra
%E&=d(G_=S9UM6q:KD/,jn@%Lb"`%YA'cbTj:iI=(d_U@>1CRDNfD/8,f'X#Zl1-a^.#sodO"Occ1oGZictCg:%m*FtI5i!^^5%Wo
%pHc;&07\^?H'8Vc1ma&TH.3<@X:bK3k`4G1ijMDVa_d&#\o(7TlKRFJ3JMI4;>8(QMC(i5F0ngr>,)1LgDQQ-Q\"@u`taZG>_Tdl
%,5>K(&I!Y;f'i;ZZ0BiENI<.GCiS'B,Sj0:kO>UeQ#Yh=50Sa>nMrtKil='L>?^Dk,#bTb&rg?DP'G9Lmh>"VmNZF[k<d9%e`\7d
%[c&D*:gR^rn'hd`mtluNj]Xl3Uf)m!"FSd+-1s[.%]OUN[KQ04S&Uah7uA$*>q4Ngl$hm!R@]K)p@O1MN%tEh-(;pj5Lu7JC0&N>
%M-"?PF7K0Wlb.WphI^&7kNtFCRb^_n2iZQZ4W;Ul.Ld_O>FN9;mi/E5G4ODig<Uhk#MYg$>MS"Fn!UYsp7^0M,7.01N]E3CSA/A"
%kOS/I4kFaW9tC(;F3'ijDju-AHs,XUo;?/KZlC[g+*MZ.P5<En+o-*6'cMi-;]$<#QGS3@JP<T;]6Aseq+rkOm%$oEiaQ(/Q>Rbi
%o2<5LIk9.)5%!Pk[*"^Fn#]pLDp,<,KnRWP*k[s4jgAmu7+b!O7j@>--&Ht`1E`R^e$3@S3H$EFDdltN3U[!7b+!P)WdMCK9JqoJ
%'W\&?Z`--kb1Z(*[9_?GrC45]G<.s'K9o`Gp5uF1Fltc,?dDUcGJ2U8^"$1O.bepL?]L-#kOGe(V8sqOQg7T!O^OcL\!'Y)?u>W(
%Guo&EI/.G9K;N'-].Oe%rP:PEqC&.6p[7fsFe=_[?g^E]bPhAlo3,o+>"#r-)@&Ur(\?>/r[`!SS^<8$FD?$'kK`-F5!>:i(?^GU
%6(8tM8Vbi(I9=!hcE>(B$$>XQ+7\bQiP4^HmK`EVT<\oP'n:G])n2An^<-<<mO.jTR=6OFB_Rjk`H:%,%5!4L9-Z<=mc>Jo9L$3.
%7`W!S@;D-F%2ZJDa2hEI71@aEI^p;SSeG/rLfn93O0S!)a(*lk83\^cXkAp8r?hMCH5fPMhHiO*B+qg^4Ju6)]B?mU76g7`cK7c=
%EHJlN_TVJmHp#Zf3cAZ.f:mEdr;&H;AD^(!5*4=0V=.@3\%tG8q*t+fnSs5@=iP=-o4#@m]*8r+?r3HE*5VD\p:,.X4!V0)HZ:._
%]T6Dp1\.D$I3n?&_\)^7lh&8>Xn+5@G<;A[E'EV^):u5W9AH.o#4&@7%)0sL7ZEqY4Nif]_^rUIGJb4E'r_G4<9Ntc5])GDmNPp7
%S1WHia7EcHaG#u>:q3rMpM?&Tk"(tBiJ2i-ea`*_X6kXMera$HHMoNg]r^u&9b;`%`&b6Y8+5!Aq`$-B\!s1145UH>q=s+IE?M`Y
%nj?m`F:M21oA_I8b@Q"3h)IgPpNB'T^+\5nYPX_PE(bQ;^(XeUL.ClNR`ug=J[X[ektU"F[+eP==?dJfg$%Ut7[b2nfLIYVhqO6\
%\DidKe%/(BQ4`o0R6(+N*U-aZA9gFhDNQb-L2"=f?@9;&TI\=u"[nTWs.QkAMHNc^P76Zofm\;=TN4M6UAk9o9b-5u--(31Aju`*
%?-cLY&m8%$C5H8cY,e!j\V;1uV,JQb/UC4=<Xc[:9(_"fr-AhJ\Q+MEZ<oXe9GK^7*j+Y>U@:u_^grQii1k#<e56lS#f=F@Do'mZ
%pF"Obi/10_hQF7YYrORsn.^S.E/K6ff*L`c*D(CE2r8@.:.X=>,*5Oup]E*Oqoj?kc`,KmQ":=F8X!dh\;pOqaP.!Xa*Uue7eTLW
%j,lAgOWTR4YGf/)84"OWP'c`R?B&WWP"0bbI=Ypci(l3')$`Y7&q!<&rLqQW"#'p(]f/hkZNrDm[j9RP\3MH/j=p^Hr2k;g(?:7+
%+D-jXNE-]aj-KTF:JZ^`5@2\*=_gP&8jkpND-oVB$41)o[QT`M),NgV"SD#Tn\!bp2u`W[Mj6:Q"/';NqOh-#cO$3D,@X&8iMi[/
%d\0d7h`m2g9B4ZbepED:a#I[W-ZVF!)3**K\=S*Q86U+!bnW#e>W[:(d^u]*ck"_AG\`G`C\@%U9<'=&jkpLBY&JK:dTHh7OTZ(e
%E`TV<pBj:e&c??Qc(1%9eF^_no+VTSK&3-2d&>VR[\C#WM#+>R?$l^TWZo8%7@!Fll%q:_-B-c-?Z\oP%c6/l5b=qRlF`VSan8[o
%+\IrXU2YRI+>=Pq[*CJYZjqJP$FHYDpf0/N&jm="&Y2d=7&L7to82J;.(o"=LQrHZ?HqLhBFDQQb/"?'B(dO<J+!!$r$$/Z^rqnP
%I"qP'0n273iL(L<BJ)L69'';*q&D:**Lmd?4M"''V[+LS]o>3?V>o!&&s3M9#@g`P4m4p,o]p-eb!m+.h%`'lOrUm)c%b3p;*OSC
%fbMW>:_B536XRT@+gj<9(tOU&GG<11`_fh7Ua7m44e,*[F,*(3!NgshjH^Rl@\YoK<n<Ip3&j-4kUCdlP(+lLlXW.Yq=)k42NtF4
%+m8DhR_=NgYIbd_F)=,D!KkUpkV,T9oBu;.-_*f)4hDme8Z11DBqoY/^g!*":L^FU-SXgLF]]$T;YI$?Z,fW&nuuU/k_20)OcNs)
%o'ILo(Y&S,n/?hu9+Uc:#^HUY"4-\9n]h74,Br[T"Mk5Y_$Du+Q.HuY]h2%M`leiW.<B_B+,DW5m#7T[#W08p$1/*SJo3n.=h2n7
%";>+1paRb@f6(?_bN/`_7GuTQ:.(uT:"0^ef4I;5(10qo7GuH\hrF.:iRAt=]3AV9h<G]/ha3IL6Rp;=4Rh6)6TTVH58?eKA7\]I
%FDja\_)fcKL>98ofZN8cQjA(O=>O&RhLmgrEmK+rPOj3bJ60o@cX\(S3S0ataY=;o9^_8EAFbD0U<+:Um!Rc(&mVH(CiCQr!RVXm
%CVOKaebAn\UcO'Nk#+n3>^!TFn78:`c.(e-9,jN'(p1d[enQnJ(hAH>HgA5,IVq0',n"9-9$]o_#5ZkoJ[t0IKFgOG7;!Q\JCk;j
%D\DR'%]6b7]UJEYEIVB#&t*e$K+gcHa=s=JcK*eG9HiqOPPa%l2L58p8!B2F2B^=7PII-2K`'A'Y&4bND6DfW+c\3%Y+jZbq%I]Y
%Xlc\3PdPVr?G.'0mmFd5,Br;O5A+<H>4oR-<+QN1U*3r?J[H0PWWh'hS",mn(OZ4O1O3"C4ie1CEo'%.WX?ojS='JbZ20JlPO'&1
%$tG#U_7/:[U<A3>*YZK++*&X!DLe1-HP%4D`gGB<1'''Vc4CB#*BLVgY_btsPdW-YccVPRZG9Z?prpCI47.P_dW:3ZJWNoaYE?k*
%dj%3eGAopVDp(H^TiFDt$[qeEC.P8Hf^Bk1,J>`i/VCqVmWhmlok55`$>N,4fn]?OW/NRmHuu9!m?S/0^k0q%M/`Zl<C.TH$B:P_
%d[9-.cT#iCO?SX+`8\K9YUK$VY*^uQ@"$I)6s?REqPrNa4_OZ\#\hYNT9^'eLkQT5Lj;-rRh2Rj;QGhUnB3`R"@scEgm$Za!D^9J
%]3U.J)Vn,l-&^1A812X9C>W)YRNl<^i[1U[FF<i>Pp&Ru=KUG5*U-X:U`%Y9dB]LXb"*V3cKs`=Y,R*(S_g5op/Q?s=Y-3.kI<:q
%aO<e4BOj/]8Bo(*BoUo7*X&8CX4W[#F^5`]Xjs9uC.P<hjh^Mhbj#'S@'Efnra?>1N?@56`a5'd=eni"LC@nhF49GaUug2;+[Psp
%%5_kB0LY1m8C8l:4Km;[B09)%M^T_X1j9="'ksCB*`(=JNe&Lc\*]c;<fFCoIr>%/1o#l6f*]PuOZ"_P7RTKKCeTf],nfFnH;53N
%k>SQeH&4$q*<o8S<MTh7T=Xd#<-Whj"bpN6<Z,U-BcfB0pNMKc8)Bq65RR--76AXRdM=^9lbKjiG-$Yp^.*O<AhJiO;P9AcWO\kJ
%lR'$If2[pHh?CpZHpeidgMK-a^mIM\%9>Kmn)6cl.T5lef]?1(RPC3IL?NFr;R[(6_0Se^6TMV9OdQ6WWDC'+3X>CH(?m11Os0do
%`-2VV)R<ur<U!3+EMr#!)'Xd>ji(?hqlT7.Wsb$ONcIn<pP/a,oQ98^9lJUubleQGd+^!L(Q]Q:cp9bsb2iX)dJ@BERIe&@A>^F;
%-\.F@b?a)/h`J\Gmt)"P%&pdEmpl*"Y_MTNc))aC3pfY8ib8UZ"thkUL0m.d9,SO2=uXRBb:mKd2na?W(X[pcPcQI$g2UnQ<qE?"
%K%Q7CC:&/#%.F!FgB6Q]gr$Pn/uI`BY56#C%ct#hT\8^.K[rdhDU.-Pl?B^2gSIATjMn+Ib"=535&WX7n*UXK8WD;$\Y.g5n'Z&=
%@MeFUaV3Y\[E?spHQ9sg\^jjX0FJ;U`O!p;.C%8pk=5F<;=)i,d99h@PZg)(4\&l7l?C![*,YB"Yp8h<dCL;rK#B:q_=X>DWjbHP
%?;eK0f!cK081[k67O%,Ahe0j6H>EC6Q.D%!b''F*WcsqKmUDDrSM9WcRoX^M[8,hTcP-_NG(RXbg>//nZ_Z!;mLmt!"/#*H7#hii
%$5'm:SD:CVaVjScXhA=]<k[me2Sik=?QXj3\_[G1AZq`qRVZX+XjY>e:\H"&pe&cHCg\lhgL+X`DQt]C*a&@+gSkjRJ@Q)#K=e;)
%D_gI:rO1`tPF^Z28&T,m'"4Pl&goc?ildO1hY4JlH[EPXqfkTp%M6Z)UP'?*#-"7FdJsku[:Dh]lkQE[nZMIX"mOL:.T-fp+2[;6
%/!f@L`0/*P`[pi;e@4M#<jlJ5)3\!X1t&uJMmj?/M3-#"2@tq+"Dj.R">^K[O@E;Ha5+p>)/7%bVN0/"O?Ue!&(-7<$uuRfUbN8$
%*SseX5##QY%9>4;b"YPM.Eif3OFk7L`$;&rdOlH'C')+f%+UKWGXSR\)qaH7^NnL/b6?5$d+'pW%-ZmkG^$"T9)YD/97!=/:%/sL
%l_fPPKh*t<m79:kAG,'efmYh^Gq=^:GC^YH93>:I`#e'WSb841U5u&#<TI*W#J<A+Y'#HG"G@\9\dS0#*n(,'Q!jGq7[RbIa^>8T
%$p*<u%Ba01>oWnc\$H>C2F-&=i4AQ$#__..!qiMB.XYb;Nd78C/7bf'TK=8QpPCt'ejL+l"ojH0=lG-iQ]=`*N]D7`r@auiH"4&;
%'p>e+o%@j4b'nS=Zp9i_8]4Ji,RZ`&FV+2\Nu.>DNHAkG$2r.HDC>fs/9:AK5*gkl*:YEMab[k(9tJ`b`ZP,gVE_[qcl]kdU81(7
%5"FUk8:`uBq!-3JoTiQ9(na'kiE([Y#K?8N!]t9hf7<*@Fui`S4&uKp$i0eR/M$5;0liB2\b.Zda\S9GNuU"MJZonYhog4t-$)62
%f;qX1HHLIq=mUN\rkGCk-P%F6+AX[&TL%X_!`[3Q_a2tPm)h!qYA$fh3ST*tDg?T\3E/N1\/]fV(E,'LXYhTuC7YKB?MUN61T-_M
%]@946R\8Q/2Dg0X>cB"1"$af4\>hB%XS*Bf^&2(),)4GOr.VTOlO'G>@QWc/T>]#l#5"goi`sLb^`mH@dOQ/7Z&&>1V-lCh#AZ6,
%/O-.+]HF!U/6$jhes/Kdm9^)F)gA*gig,Td6@73"XSTun1iub=GHB,rUcdjnomto)/*Y1k1^qep0je!1X%q%dp4[>pJe-pjZ5?[r
%5b/,Y$d,>TVkV"jk#P$<8cOZkh]fbTU+d%Ai.t:*P)<ug-Fb+]=XZ?RM+u;H6!*#t:_!c67Z>buCm-hm:J@ebPt;RL5!BA.`=]16
%IaT)s<TJW*;HPP.m2E'-M5&4/F(LB0jpF]D9KPM(7S)/!nmb^]rfdIF53Bm?KiZDNemHl%-2m@0GSPoio_sk*+A3b^$$j6m=[Tq:
%.-S^c""`r2&e"]9`'V3dZ1-'b`_O^YTm87(f4?fn\!(AL-Y0H1.67qR*p71L!Nhe445H=s#1tE#E`n[Qn37eUVn8EO--B%nk\72o
%FACDj91MU69bre<7lg[.S.'M8$3mPGBF&jN.$!@A&cr\.Bq28e[AX^YA`09n__k>&Z/rG##og%WE-Y2RRSOZP=gO!OY#S38?rb8W
%h6KIenHL@2M#g!AV'r)3mC58mgS-ug^o8NiO.%W1^6VqqL'PJO!#,%)3l`c4_s/Mh*.UAiYL<N&83r;3=W:<!:s@h=@J_d/.,Y''
%L$scpei/:8&c(_WN%DGAPutbT*XI4O5;oiEdU6Hks*Xa]HA5$e%W)/UYbHij?P-=,eJQ5?(]&f]0uR(OJ^=(%6TeI8b(b09-@%RX
%:XTqYQXhTl]=N*?Iq(&RI$8U+aJe'@6[^hkW6=4Fjb3\XPnC2IX1=*n>oLP/O0se]@(e1-S(@/MXtH?4't?#(>MoL)E0dAchdFN5
%"h+"?<_]B4Y5?_rK4.cbLh<o-Jm"lhcX0e"'^,'#cOZkI\mhH$$7%,2dSSXNK[R`;oq<N<VQV1?$)PO`"1RC7Ge#H=6UP@c94]#@
%=])h)4kTF0K]nP\MAl`#V1(U7%LqY2W$l>s[@qq+YQfSlk7*)53qIcX+o.A#ZIYr@!)a=Sl"p)O#JeX^:bXUEK"2rG2D-=;2+uL8
%bJK$7_Yt"1.sOcse4DG[IH(eu@J?*>657<C>Shs[,3lo2/$g6!Pre1J007Zg+gB_MO+$S/mn40?A<tC("mYLOUj$ZM+$l#Q.24o[
%r>H[#&Z>hdIjQe#oA_25#RWNZEEU^kB"eX\dcZ64d=iJml*<9rbj1A0S+)kBHfUhW.YCaA\ebJbprRV&c7:%lf<pH3resWQPeFaQ
%8km!T+*24DZlsk^dD.WrULA*:h+.U-%Bg7=)RO.fil.dPDg=1P!Y9i>FX/>\4;qnsR!p#(4V#3od?MX7d+^3u1^Jg,B\G@f'ol%M
%B!>Too5frsG<sD^H-)hJ#N7\'E\&>5Qs']RD+sNa:cV-.8.#itm`W$.a._c#fIu^(W]V<9Sjm'LH\Dg?iYhDQ>_&J6qO[._O6Rmm
%.k.5Z7ke3WQ=""\M9hLm1XZZZRrhl`2aVNf76.Tm2YIkF]!alFTZG\m&0-[oq?tf/2]aD3iRJ:WjhPsiA;U"cB[2@9T9ll-\>D'_
%2H[0,L;8lGJ"#mBiJOB*;0rAn*T*pcVNBQ"Y1\mn:VSf8pj?GMe^71PH]cnS\aUuQ(kcrJhg^%i")tsoh^_!DZe3T:6V*3f>U\="
%Wadq,Bb!N'\PSO(b%=#E_JK#BbtW^\Oj\p1Qjq#=VfZnX#T)d+Osc)qb/Ajb0HenH/;aGl<$"oZF(F+%)ZX+,(m+<nXh:Y6J8OAJ
%khgI9O(a'E9'f3mjb2$AH0)Zf'URh;@.7k]?!lD]-[iu>M:*6:f0`:.Znsq?Bh=%jHMj>q?C4WJ(*YF*NhX4&=*C`<l-`Z:j?tHS
%V5@uY:VXEo('+6Sdi5E%2\8rmdJTOMP3Gj,HEt]"!N@^M\i/Fi:mW=0Rj5fk"mV5a`$0;c,dRcU-0sBfapnfXLh9oX4;tY3c<uVb
%?5E(Z1GS7Xr22lfb`$Hf?a$0PY+Pl<jfd1\BiiZ<,kduO3k&])*K8!fUP;MY.B9$S7chs2kd2l(KPJ>qe^19>729p=HEeRBctQS.
%M5pf0;F@?f6)R^7pluaYm=*j$4[6'Be#o?2QM_+JFP?Vc--n)k:dZVbO=Zm)0DE8oo!aD?Bs0M!;m-:Lnl@$BQqjA.8LeK,'3UED
%2dA!hZQ4P.J!GGFGd5\D>tul[D+U,^"Y!$8o&uB<:OA_%75><mkE%)mQ:WJ#bH43`)LY&!]tH_PmSJ?*UpU_khq'77:mJe2S,61[
%PLT*-7(m?%M<ZEZn.FG:s0m]2A`ZO*]Nd+Y]9Y$AbS=<eR_b:sCWm;jrPiCo2GnV!T$8D#3dC4aoW@al?T&+i4m=@@;IiK=qr=uB
%i;Iu,S)T)#Mk,r2Mqu+R($))9nJ@LkSid8&Qs[U9^6XL=]r4qE!FY13DKOqr_A4]8C@/S@,"U]s:9Mc'&1Hen>TqKeHR7r&$1/@(
%8Y*hc,1C8i;eH-+4L8*mklnrPfGL8oiCph!)#;)k7^@KX8ME@=-b+2aa.p"Fn6:$CChXe(G,YXN?`E(tZGZGFFaV:]oe4[6*BH`S
%mW=]\J\QXRKnL_0.S56Wf\IQL2(2bHr)RMT?cOOB8>2\B^%t[-M35iE?N?sO$A&DFpd@qi@+qM$kbAMK'a;CUm&L'mP6r$\hj9_M
%UQDZPm)i02g2q<B^KbTC4_6k>eMDp"Z(Ac$=tG$CT!)-&$%lLe`3j>?"FtpoWWp=f%7KA6Ld%tB4r,2([7@^_A?W"tlj8t/NLlD&
%Z0HK+TFLsKR-O@^;$9UCUJT6DeYhKp;56lk)UbRDI9>KPD<tVnVe-8`cR[PHjM!C_ae)-1*X4BAD4J4[`0$,jq6Ni)`_*Wk<\]V6
%YOk\K1DDD99)6l"ni3W#@0=ToB<QN>ZMJtJ[<V'*,h0O,E5^@-8%]rjl15_a1-;uDlZ0SlT+#MU^:(]GQ--Upl6gGC"HpL+,(lJG
%W"Sd"'cG7'4/Ii#Doq6Yh5^`WdM82>9lf9\Y/o+8XN3qL9W^G?->!2EZ@t"+GP//+k:#X=L_KRLCDT%SF)FlAqj1D`at%]/+0Wc$
%+uI]a_fsF*Wde_O7^XETQD+8!70ZcTaj.EnVI6.0G'%(Ec`&F[kNLf$!eP"*9(-&cF->.Kh@6RO]4pmAb>9jk#E'(p[;31WG;A(`
%#b>,AU%-BK_\?_De:ZfEX@^<8nJMr8/N!-.d^=4KZVT[=+ed22>X-pR2U*_C%J>Fd3dnX5ZuusH_<<?l\[iRZSXjYXs.Hks[SbAE
%n/Si[rOb=BccWW\iH1^DpS3$oq6M>O&bk&QE'LT^rUk-`4&g^1*Y-clkh@ihPBo3:'raF"LQb[Frh'o%Jg<qYW9,[][iS:BQ1h%P
%NN^jL>s!i&GO",i]ne2uFDg?l>n8;j&QcpLi3?&Iik4:>er+s%:S_`A$&d,YCJX!k@Z`"chlG;UNo(:l!`eH;gg:C9PkU7^3'TUX
%!^fi;F08=eIN?_#C[<])\KDlO]_P35OeNIO0F1ZSe,&p$kGQ4/+V)!d#GLiD!e%uUqORnD^07E&DbZP"-j!ek2@PAH627Qq*6S.O
%Bs_n;%VKe-:PPPC"V&>@AZlrrog6`8B6R`C5<.q[MdR]uh[/[).-Y5C2%QHt?.uH#,VUe>C+=tdU3\PBc^u\jT>+9d)Dke]6q)So
%C=!t"]o(=43MK67^5>n<9^*t:\Q4hRqNZrfd4\LqNddrOFn@1!W?[+S<7PKOY:XH'09:[MCfoUS)/3&kaG-D*1!m-?CS3hAl.p4R
%)l7MJ=UZ+aWQ\g9.ts2Qj_KRQH;!3*H4oroQbl<>VC-`j<[lgh]^hC]i=HbVU4/pQNo(Gb'uNVI>VCf[(DrlP"EW,IlE?`a%qB(f
%'B.Wgip1`0?[?0+H?6>HY[;\G"H&G@7pQ?;l7*NI>b';)&QI;/'HSW'c30:N'<G;qrhT>qkA-7`,Uk"nFn;^uW5@bPmu11#BB`W3
%6cUL#/c#Ubm+n-AO5YH4bODpuk`+e%n1EXJplU34(U';jV/?lo^__#<Dg6EY0%OF`mue;;jqtI_?b7\f:l:W-WMFR>>K1JXW]FW?
%m$RCVcRZF@#uYso[!Y\9)RI5GC;6^\0()l;_X;(a5-ug+(ABslV!t571\D*e\Q1RgTdN/V.s?QKRc]aT$c(]$VI.h&lls_&<MVmm
%\*=]O!?rDkQQ_X,O0?/'NRd=>1b7pQ&TslachgP6_@F:QG,854kgMlP[*+Pg/*rY`+DXkDC<F58q\$#/8Ido[`[\i.I%Ke;rR_ht
%H-c#+\%`8)B)*F5+59lo799[DCO,:-$&agMo<M2W>GZ=E*be08e_cN8hJK=bfRJTf6n]k"gRG@\a/WVs<0j(s^%=t=P$Uc<X>d^5
%8K%Y;h/i8f2p!L;^P\pJr9-jq9(.nkHrHV33F1MdWG=^,HnUp]2<@`gf;JT([i`=P:(0bc(^rR4qIXGQqW]#"3<$-g1l/a6XoWqr
%Tc#k=jWt>h65Pi]ZBb"Hj!B-H4Xuef?26ERr)ttK&qsRZlL.a%.7N"hPEB4QVGg[f;L')A&$"jseq>>^c''Ni<DBBu!<bTir7u*K
%V-:IrBAIsCRdN8<emGVX;p*Sm9E)&.3i-"@2"lF,RSHEV+qO9<eT=E/ZW[P,pT*PCk^lSDI^bb@WKusuc,`teknJ`=SG<#ehl3JO
%d]QK^s0HH$M6PW93fWk[IC#A;@O3Q_gq*`>YF83XJ!)bQr(8i;;D"GKV"CEs3[IUsIH/(A9rIrCpU@0eP\TH3.']g-iE%;uQ"mn2
%')Rr/3d,@0;G5'U@_Z#>V_kQPDp%s:C-!X@r"IpoX/8gqV,Q0IoV6.^V:mTAm.Em!F@rr_b3p)D8N!'%L(mCSr*_IR;D"GO?MU^<
%3[J3>4F-sH24^*Xq3gq`WMYlB'\,LtAOWUU!=ZX^V`ner=Sq+*9r_>/JA!mi_;V=.5*aB"M_9+dY>-P)d2-)9jaD:'hOAK_I<Bkt
%A=&FSYRad,S?<)4Z4h@;?KJ&2SO/ek]Rra^@I9?NcB\66^8Ma[,,_IRJ0IRO*X31PB/o3$W>U!3l!_L_;jn<ST&^b$/?6;T]MdWB
%fQUYCG9J];(YsKm,T"/V:A9*)Ie9)@X)H150=q&>@a(tbCD2/#j)FrSGImJqs7eHqGgFp*(Z"<jN,!?blC0,"[OHUm20\&j;Y<J&
%*4=C*F/SV7\;#Cei*/'So#LR`Y-SDk%H9F+?`dS8W)h:$q"[+$^m\23YJM(_l)sD9e?RUDkkq>I7C\6(o^fPKh@6RO'sP9MdMfE.
%LL8b'-JJh5b7&M-_<A!K+t**aa52/\2q%$U_H5ZBBXKGHb*@T193/EiF3^c@DWeChbb&tD+$`jP=[Bk[Zd(LFYID".6@gZl&-.7d
%`)$rqZ+@Nf,mE#"3TprsQsDX]FSb.k(o*dTg%_;82P3Jll\_GXm9C_]o.`1?Ec8bM-[bK[M?:YK]pRcSAP,/*JU.u4-S^sb3a%?]
%/n@sW,qW%Bf&laKmr3K0W.;Z72W)I!Y=t."ZC=aZ"l2U@"d%YMhG,T#lJr'Vag_UkEa-e?0k2hB2?%nTAKo#U`Mjk41BifJKPsVC
%\d:/c<E_:d"iJYV@2S;qH^;Q4*]in4cpS(H<9N*t/p@Vg0q\X\5,jck2`a*VcUB)dGNr:1^J<dY'PW%-I)A%``)X=LFALZ]\KE?1
%Tt%tqT_Xkj<Odt4I7pth;HC:H>oQR<i@\^(j,!M!I\j^)[paB4]>6#Z%:`%h.cj*;_dP(N-(pd)XC.Sui@ZVF-=pZReaMl>i##%+
%lsSnmg;"Ug(ggb>J]Oi4][l]=qr%6K_T^'K(_UV8Msnn/3p)=j8SM@T&U.*"7STs1>[h^3#0Ur*Ed;XZMM(*$?[V@t&H3I,f:'bj
%Zjkup:*L(J7jg#[SRU.&P_!-iP*djcfQe@K'EBhF1ttBrk%UL5J_AsQ9[P(sN5r)SRG9G)?rof'Y/:rF9G?(nWhJ%D@71&73QC3k
%[LS?jClU"bRPB>%aApA%?b+3%5J1?F1GWX(C[:IE5%o*p&.=hhj2si.$ij#@iEQDiYO%A=8Zks_)ndt\8pMj<E$c3=>d5L/#j!,F
%Q3DGH*'(19_N)I?X.R6G&kDW41o3lpAPORDHC39mP:9hnmUl%%9`on!FE77Z/p+(5ph2\nci!*=Y]G9#D)c`S2S/[Q[98WDiu'Ij
%2`(.'(-Ld^R8]K>1j_Bnr>8Pu0"0cpH$&2@e8#p@+mYCBFSDNT>t!fRS]<RuR*d,tL"Tg<r&F89A^g,qhi7*RW782AHoPnW+](Uh
%GccT9EJ:s$4Z3bq+5m(662iGc#qn@2D^#PkHlnkY2YZ[A+-geY9P,@sqq"])?MTRYs&ceXSQ(Sbo],OlGqu\Qbitq.-Yd`IMZ[4C
%bPbY6AnDdeAr/??IWA@@^Mb@]W(_@`2^\"AE;[C(T1M?CnU9qpF_!6j-Ln.IW!.D2_V<%4k3.a[T/O-GdnW`eJC.CVVk4iS3R2h0
%65?i9!CMU9Z[WbI'<7FrXn%`R0kMVPC/^#:Wg&cO2Q)60VLs5Y@%9+m</k>,BdPRg1j)jQ+JDdA=_WSpXf&_(Lt1Fg4db4e:m;`;
%.3ce>3`Sp:kXf'[c5oJ"[LJOF([WLiE520f>'uYpp;F5@*(%_DnV%]ZA+D>r("rMO+agNM'[Ehf[@baVUYK(/--T6NpZS4r^p4j1
%5B^"R)r.X9f1>;#G1'X`-<AV(HBs7%7-UuW#6:HW3\+WH;W`l`]!Qu&@bjGlBr*E'mH)R_=E-J:17`AgSP$b(rB?0nj;H<6mZ$37
%B)MR/^+L<:GVDWQ:Z1CX'R;+n;^q2:"Lj;jT7;O\2Cl@2D^p^%5b'LnXW00[/9$Z_(^[o1GZkfV]F!k)L:jcGfnj'qjetNuKf1"?
%<(PjR;ZTh@+7@9AHYRArS1d4B4,=325*[q/kS;!mfZ93!G$`1PU.?K?@O`<-qN4:bqV=N!=Agct5U2S6F#hm/-.Osri$7]D14kN'
%=*ugXQlW3$*nA;cblUS.",J0[Hkp,D*5IDnZ2f[Q-P)LH-s-Pf*5JK[m-1eUe)gXbnra4&!_f'c(lhQ51^c#)GQuI9+gM+D"X;4m
%N4+ktA-&P_7jDs0ij/WUhXFke=d76>@m=+\05;d\A8McXPV9nZ(irQg">APtMXn<e4?m&70;S:>=AcdH?FV^(j\*Z4),jBr*&6[,
%%i=>c`#FaTV`<M#p*L@jC<3u8WN`'cY3T/MXm.hn2H3X]^Nc)d6qsh8lhZH%D%,&n9O5DXY>@&6e6mFt,!T`\fMGm[^JXSQe(++a
%'0/1$?,+0g$`a'N.V>I-oo$$=2b5:InBm+u-J*JTOdN.t_q)#%lhV(P[iDo\?W>T^b3BBalhZSRTpi]u?Yk1&-92ho*H61L<PRHa
%*i6#Hr';^Wa+gV[2c*Q/cuo;SBIB[W?aQGTYe#9.77!iSlPH0?3KBVR=rf:L!I'WOI)D;V%G0VZFU(B9ob6+_%9;"550T"iS&"1F
%VQ9#!DlM,fS>4^/Mmop0NK'^9T0&:sWd^\3`*qs-q2'HmJEmJ*9RP]LTWVY73Z+-I2NGG*\l[E8Kl3<YY$X;[5h`oD<7`dO4hf>8
%*pt5Pq@-GcD[^cimY7b--fX-(6GX]":j)`2m]Pa_VfVSnEa?G)4HE<%nIb'_V9DONf/==Doh1BVWU'Bi(I^#k?,*=[`1k`'aF$l"
%f1]8,DcC6XV]O_4dZ:o<IXt31c:f+iY$_%LPYp`B`>d;.KYsMKqJkC4Wp1t??IQK]rORIJC<jbblM@>CD&U*j?Tkithr+2&L@Jl4
%lL><^f.Xk<hiKQo>[>+K4.As!GCAMHf(FqsL(E&dN)\C^hQKADjV[:ZGsa$^lK=dKUXf$q2qsmKM9^B==k>=`Cj1'aaE@F_,F0qp
%Ei?QuZ$'\h*Ss*JqB]]mNi0%PWu-_pqOrm2Nk0]0<W19j*CjDMpk79jI;H^1IPF-6AAlLK5`Vu32m<c*;:dK#E^>Wo1jE:j_>XjB
%oh1=S9NTh!IRQq@;]H=!_h!RcDStB"UU.PfHETm_VE%6+g-(:6m;ddPhF\P10(p-K<]fN_]$*?l[QUX,?48P'bg$d\6CG]5IIku2
%;8sBjgpb!tb"R;/%pB2UptO)`6ZR1urqMj^>4oS8UY/?7`RHY!<N2>,^[>oLPj/aQc-JOQ>D;qOa$O3QjmS/X?%5eLT&!\6HEEI8
%Zrm7_Q<)8]M6qSLHm>cT5KhL#gl*lQ>VoX4hS8A\Bn,:,YI)%o^J"HBb>ZhTj16J+D*4slB4'afl!gXa!YXWN^CC4mc>t'Ll_U#1
%cfUYcnbG5Zo^Q5c3r,:nC],]_X4FbDfm3V/=Z9qJCO<1b@a8<)ghfgS+7IdY?9TjPBgoX9T=NaV>/,9JDb>`>hW@L[X*/.Np%\0o
%1]=r7DTQ.SrWcA"k[E1L.J*(K<lo5AXDJVn?a/pMfql67-Tb7Od^DIg+BLc^_bSAq'l(-S<B+)k38ekUV9?:"XnXP$bhZt%Y10CC
%^"n=4ZoIlmq=//>geMBO/ub0W\m(Q*PXm[Sh_Z^cg\k4LpcNtq_nSo$$9R&irq<>;^BJ^ZW_Bp8V6Xh@De0%rO[&/[@r9FW>!B:&
%G&Wh:/RA=p'\d3sB+@RLDIuM+l#RiQ3nE"I`Bp"OFtO`\qWPU"#aY^QbZ491FnN)OEc>u(kS1A\^"ND5'%ii&VnJ#DaU7D!,98Y%
%.?lMoE*lA+W9%"1:I"C$MBd`Grer4gp&6Mnn9[K?&=1l2k@rd+SC^4-[HRPB/sl+[ZM.P!d+pqQ@rG,m`r92CrGYc!V+P$_ot#F'
%-h?V?eU:EAqiBh+H*ucu==F"Vi-8J.]+95L^k8u^o*+m)WYB7qfR_"V%_jk;CjC#oi/_0Jji(QJImEX?ptKP;SdUh&%10;t$L3lS
%r.UHUigtb7o,q,KCkouA]7<:<pr@c5?^FBf2#4#J9CTF@1*IfPCuEo^#pm"gs4lV;LQndlfR53t>Fm8i2c\-8ZV[YA/WmSs<nd,7
%e*,1KRC&]s/Cg3$44!k>s##*AXX@o4$7n_'Yp`Et/)GSp,sQA(Y)L5[kI2g!OcY6kYr?$,2ts340&(m#Q+,mnoAtMh-DbjJ5H!g+
%GB<P`0XmMHJE=2>HHYV034meCr_g:YX]`X_X31*Y)2G/HBfnEPe(*pc');h<I4%g?C)s@'h!@P8P\NkP-Si*Fi*If.Kq(/$j`.J_
%ILd<.c'fdd-F1G!3D4gU/_?S<qX\s.Gl>1-#5/u'K6s`P<Ru-L*p_[l>cWjt*nj)MnA%"9FXgJ#l0A5jb[.L(ec#_(53Lj04PXti
%FS$Zqp#g'=X0pkhr&Ufb%ro!7oCSsKl#M@SjRjE]m-@t(IoTZBKeCgrj7p1beG5=,gg-j9%^kHAT`cQ<5LVoeCsA.9WD5ZgVn4mK
%mrmd^:&Oq]!-d&5e[sqB+R:3.'Ic-A24_k>ehrPJ1]&RK4.3(.<V,9`"!9(,MXPI&pn31I'I5n6fY`.bs$$7p6Pi^@`$T,&RC2bJ
%D![.n4PaW+g)pbB1#t'k>*fKs[;jR,,"n-VMO#8sM&FS]/W4%O=]%5VPCcc]kDScHpIdmjK"n_:W#?[;icoGhkEt"MY7a=!n6N[&
%P/PU/GlSHm&Q$W/BI.!mZL.@=FBL6!(,.@`V*oVX([pN;S`SS+KX2b`Wu.],e9^uidZ[=&97Pb<\=Oq/6P[#Je_as$q`pJ,r3##<
%1LYP\]FlrV&l!uJgjUU`'O&nf=&@p\Vh6GmNE)T0SK[h*4Bl:]]Wbg'*Ra4J58gS`WFk^K!pA'AXjBloQ?(Bf-)T@e_ef<c`u4l\
%>Hp@p.tTIU2W]D@YU\ss4cid2VnK&+QXG0<d\"5-[b?,=XJs\)7Mh;5Zf^+r3,/.q7c/AkBh<dP1YZ]d`HQG>qTt\M4,`r%6_.Pq
%^ChD.JbY4=<F)[g'\a(Bn[tsHfD"HLd-,bmEW"*(Bt+O-@L%RW)GV!_[(If*0<!?da48>dT7Wct8oI@"60Q$%C`/3(,tjfS)gugW
%=OQ#8eP\GfImcM9]7km(TBXVA<q*];=i?$:_r=Qq\]c'p?r=&W@H[Pm'"`>)"24W?"D66F;?LN4d9lt9Gs'&(Qcc9SH1<klFLI0O
%&F7RB]KKVcDmgUN0_-Tah^LQ),_+cmhH"[MN!>JNlbgfi\!>85alVHE*'(uu[jO/Wq9gJ4<CuUkV670!j/*UlR?^fb2epLs_=9Fj
%[p+sk$f12,.s\(aZhR%j4Qtq?gb8?CC,;Jh<i7T7DZZ5L`;1M>dm3p1CT5SOXX`#"T_5]B+-#>!P_n<rVec5?f<:MtCN?\.4tg9X
%@9sQP[SmXtI!(9*`8W]]XO-?[(tlKpFRqt[fbP0hU1ob67iBn"\QO$ona`tDmSB=F*s\QbgK&@L`Wl(:;B_Z%*,"=-[.+%n`Q*qc
%.;)[H\<_5<\6dl6J"#s\be-s,G-s4:ja8$AQn0oY*EGI02L7`>+2NbhS\0lAX?(dVl71W6qBg+M*;!haqEK+&9)FaTOp>-[n<#L)
%8EFmZ9ne6!hZB=DLUD@-mR5e>ZU41,S$a.38A%fkX;,-*f%-,0mVXm+ibm6dk^OkG8[Wis=B';K`^Z3EH44OR)4Ib;i$8+W1iLsl
%CH]:5-[s=m[0%%)T3nVrrA312q4!(JippnWl("]QcL#RI[ZR&1ht3CPgc5+EOOQ(E0Zk#1#Fer(EcHS@1\"^T4co*GY+"YJH?U7u
%mm-GrC*51DkEeUb15SKqn3ni&Bboi/?%\>_[/pS=[Ar:Da7Y+^>G'\#JW/B_._-jJUX7(b+>$Z]R^eM&*pVO*P>RpQ9a6TEbDHY<
%^c=^NOGVR&%E1R%7n7.(^4c/cY?,YsYibCcj`:<?$V'">P,!e<=i@_[[e$F%kPTR&<o=s)"NgXF7b;LLKK'74#K)aA0>VqCe52VN
%s5m^P+4fMeM)n)b,Y(UL'Y8"'P5hn-lS,a4gL/KP9]\$:!p/h.BqO:ri[KV-)/bUGA_!)4:c-c%8WK>#M=F:q.#)r8g&_[`_n[_X
%LJs)1N>IW4E]fQ09sH2@@#D!u=ZAKg%$MYk`Vpn8l@E314\#s*YDK*()PG!MoO7M*2UY?@j:q2E,G@[]_rQ?VdpFLTV3p>b.7S#3
%i$:7t$sDtL;/rWlP8lU%DJ[X4PDoD6kcc#:O6J)OVF_7mEVlji0>9SnM6I3?EdX&j3Q5N1DO'=QV5YNg4LLGO-96+(K@(^7CAK_G
%/5+@#it^oO?Hq?DBMW858jn]iW6,;]Tnd$aY9JkEr,Nk@-24Km]('m6BSd8kI3i-G9qkimAt5`imDWTdGR2!;b2aGmBY>1[_rkUX
%C^MaJ6W_=]?DrTaIIkR^4Bt+S,?,g'Ut([;g?aFN3,3g!]cSpqccWI;X7L#(Q(@X"mEUg\Gs9kO:%A(]%'$8;L?eaH/C+0noOmVk
%*GB.^A-^J7J'V+92QoZ"l[le%^0L`4\$DUBVO9\@V7'f+m[J7koLM>,*i2,;26GlAbheu0G[;H;0eWH%4NnYlrB_5EbXRZ'L87$M
%;@hS^)nnFYFab_,@<Fcm*j4/K<mY?hSgbZ*0&YPr&#!m-n^h$CZtpiCS_JIfW:\f3>eX4^PcW=/6oKE?-P=Z\^!mJI&/+`C1.)XE
%*OO5%(\A`7BQ'^%PU/nnqf`GF/+ZEIMm(r1pX7^hgUem--RZ4ENVhFEF17o=FoH3*DNh]qcck'98%QsZF?VnNO!iVWPePPj95A$Y
%iG9^mlfe1VF*I'0ChN"N=DmPSci.7L20rj&-N'E>1QX]gb2;R/#HX(/D4m3NfdCVe2]):D\^S;0SauL98,LX1b;K+R1nT[GQ-RWD
%,J9PE$P!Ngh<'(cG@d*"ZXW9OkOG0C)nTGbm>'Qja27i"iVUK-s5RdcQIY+fVSbm%:-08r8M+k'r_1($<n2BV\pJRFEtLXt:6\pq
%cqj&fVgI&Reu3IHaL;3?Lt?"fcE)qT>JWCabqcj%:hK"-476D%jCbskE;UMUg"emfR(K[h*oU<ZJ'I`ep1j?eC8TcL^A\"sm);f&
%_IkcUVF@8>[b1*0m>lF=mipYS._Uat+._GA\:^ZDp="fpE4!SlWVu<QS&e'I\tZQlj<ZJKi@#NM4eNXWnFl8Jm=5Pl_Ue09PbB%a
%RCBjYH;=d_Esa5[%UR`:ac.=SYKM?A'Jm_PjU?UqIf)0e]@X<*G1#;j@n2a%%#fT.ET-#mEXC!/*t9?"?]2foR)(s&j">T@2It!n
%T*p"<s'SrBqbrlMZMfJY\hdp"hjPGERjYKj^)D^YVJ*H8rG^^6)ck0N$?]T`K:_(TTAej8#!Bk'*%9%@P76mL.kT!.$J/CKTcWE=
%EK)8nE:cIifeTZ\3TMFnp/U^0`&0H)[Pks=0=3*kf&>/GfNP.^GAgO.2V7;-h_5i(T3A:<\N[Q!I^Qf=\$Dr^b<+O4f$<PIjf>Wf
%Zes@j+76Drc;(F@oTA@7f_me5T$JF\^=3skp('rMj@!1MI(oP*Z((j!qu5^<%,,M$@Y$MCs1O>B+7i'5P:!TTA9E$AU"[2,BKaYd
%DKYiG&+[SaZdS1k4[4>f3_se>#u]/3&+1EbY1!Bg`a!q\q.<LIW*Sn0)j>4-G3a/1jg7rEB0K7p'A;!D[]!&<,:@m.gr`UZ['R8%
%rs4gi^(8^A;'?J[fMs,M<#ehM:S>Ua+OSXZAJ<b(MIVN8NZ;nLAao42cRG/`F\$k8d[QBHonRc@LQTKLkmqKgDoVrEOG*QM9>"W8
%[SN2pdqjJ[nAW[V8HXu8dsTY('6M]CSLW!N\Ja%3mo.Q5AB4js()ZkTs6aOcLuS6bXg4b<\T,"5/A=[`c'tj.?DgZIQ^btG4fS%$
%p%JFrREP8W5J(iTh2eo.NOaeV&!F[`H2HFb2"Fq[\(`TtIcu.s<T"5/<CYclGo;sZ)V),,eX91^:JJZnqL4;`&2mnmr&!fW8gOFM
%Nep'J([l/ZraZ[l0'JV<%gE>=H7;umj)N(4ACGubM"S6VGe_&PC[==NPfpH::nZ.qKt6<cm86h27j\ag^(.lf-F*_jY9?sdbfcq(
%42kr%0AHQ^CWM3ao.lak)/5'>,#&\/f0F@-rAQO%CEbjep)7smTluQAH]\U"X*6#PSr/Q!Oia^IgZ[0l^jfPO_#p*!s,bF5PYC>K
%]7XG+<V5d_i.EfI4RM(14cJC(@eQ!B\Ebf-T7:sl$m-)O'5j6.qY?o9WjI6SoTnbZD<(`*BZI/-U.1P]`!#KYa6nELRtk%aB"1=6
%pa#m,Y>L@di[;$a]-7JuRJ2c%`K^-Nn\MNn;l"p0nb8.E0gj3Nb3cNHCBK%aZUl\_cn<=SWu-i`r+U4rn)([j_9kU_\])Zd]o*;r
%h-SPtQC)GeY8L`=@i"7q=0m,@plt5)T<A0iE(,q^BZb@-rqP#:1Qs$/=W2DrFjeRZ[N@7P\[6[BT3toe)M]2n.KrcK2\W3(O`n.S
%1O!3n^ZO3TarU3DX>0YKq(VDDfu:1OWWNtiW.5[YI&qKG[YZB\%^#Zq`5h20j-oa>%/c/\]H]"XGiHiP'49Wm:-=qfR/NYJGV\Zr
%?[d+V#<cFKRs6^U'3T54*S"I&3R36/*AB1:m6H8CE5W):6&A%'R!hUi4LKkc":5rp%Va3_(2&M?;LFJH5Q?t6mXFJe@-f<;CK=[.
%Cq4aa+,+)m$&_ts-bs3UZrdeoq!2$fNYSok(9+M1&L6I[18#mf+"PNcn#)6Z[1/a^CH_q>I"rR2Vu(#G*QnN)KGL4-=9O>(EF",q
%>K;ETIK=pJH[i)@J!8fg*S;KAZQCI%>*<L@a39iiC89su[EPIG!W$hCnJ9,O/=M"p';d@u"1]D?jOn0i$g4am3*:D.<MMJH]^>+M
%,DqRK4XAtfibiaK1,#cb9#8IWl(=5js4\d1&fN?3g@=;UktQ'(EUjeDD1Rbldh,O'NCU/V\+2-J40(&ZZa#6Fg:uJC"A5i[rB\Ms
%I&PZb&6*4j#]f=mgN.QEas@:H`Z53Lh&D%=i#jHB>M^JBqh%.['-%'O&hIJtaScJV_GtI/*sD8t8[eO_TP-K>7NKj=Z]mgR%bd0r
%"hJde5$CH(l.3\f\%AlZ1]@qr[*OqMD[6i0GLRQ7AfW"A[6'8D;+p.-Nks#!GKVcn$\HfsWXk+A`j6cnZfuZ:cf!;[9rE*O#6'R>
%O+E$`YU_.Dg*iS5pVld@*O57/nMe^e@MjdkjMe%@i%.4CC&^W/\)COhn*\Gqf-/+cVtFnu^5XIJ2D67B'[-`?,"Nc3l]4RPi]`#4
%&5DEW1N>>D;ZRYnpA8X(%tE8$`Un`LrRfG@r#SSVCqaLP<+j'=`9iQ/O5DRBUM$3Me6b;K$'3`dWOI&2!kjkFBDiBhiR()O"X<jo
%^M<T;qe-(QF;M2ITFZT2(:Qtur[':[Qp-TDHV@NcM4a>/*C#d1NQ$@da,!XVkkfSR)G@^&O!c<=qOi5-##F=(bl6Lj+H,RO&Z*eG
%h7FbQ&^uZJ55^CH<(nCH':J7,j6()+iqhc[+3NMuS6g/?^CMZ6![fal>R1pp9&cK.X;qSBSit22(cd##OjU4S'scd:ci'#fkCsjt
%(!hX(O`2"YmlO;+f1f^#\]-0I1q@e$+@+rB2u;QCO^.f=(DnSkq9]*lcKE$<?g&o)b.3,V1F:BH0)DN,*_L*&lr1\%+,DeP=Z0qU
%];S[3IBNns?+`HCY>*]hZTJ"KaIYM_8n]V[HoYQ,bHhm5Xa>BG,'l#LnoN"*Q>J5IRTo0CcH9$s#FNd15<eB(f:>B>B=H?W]fh[Z
%5:'=Sl<c@Hf[8jW4MF'4*id,bPhajT]][jZl!KoYGDg+Seid.-;\.^EgJ*@Lgm*:iZQPjqd?PJt2%(OQ?#NOR1ZGl3I(ARVMLu:\
%I4.[2f:!:D;-_WlE'jkIPE\kkgkDlCb5(bQ0`j``;m/#^qoN,*`LN8<Yij7Mq6UT@lY``j9[g9#pH;+1qGh$s^<:0V2q2Hr?@bi@
%:W9uuoulaF_r>F#B)C#!Eqi`\Sg8M+PH!<GDugs^0*Nt8(EFbak!=HmM+Cl3\MuZX`C^g4"Jukf$m0C%q5-9^kdX$Nlrm(M.p"H`
%;^MlCRD&XP6TQSP,4sjKPZ89b&TJQ,HLpk!+n`p0?L1*=WcUl-$gMhN`=BA)81R%NA2jL66ErT`JO!D<4<0p$Q/(o<X\Q'</]s"=
%X$uZ#@K,l<S:!-ceflLC5WmRp/e=N`ajl$tfO%uo-3C('GdHs;PT*5-X'J-cL4#s*%IA3Lh[')RDucG4lL$^c^9G:5CbqI>ai60M
%D74-JTg(>PJ34gBFQK"?Hs&)Ir65C-75Sil<[HQTDk]`V2^@qehE^Xlm/9lrD\RK[m/7V20<Mm^jVG`(NdM4sGe!/$,i0s?cAfD,
%Q?]1G]8:?-M)U=)oCV*3M<E!mr8@-`,3qh5]L_&(Mt4`tI'_1uZ7%#Oa?,J;aV#+m`XmiM]1`216(2UK#V6ur,2A^ffuh4pC'3&>
%19P[]0.h\P>:'p>W517%+27UQ*<of!cBK;4?;Vh0GHhB[PIF1B$4ofa)g8QBEcF1i,nOl@q=>'.QJF+fD*)_[nd;Kf&$i(EbR`Xb
%.`e&"#a`P/RH!Tr'K+W8ks-N)5(R['D]t->*i5`gU)/L=D9^!'k$_i/kN2]mVbHV.rk?N,P[:7eNUm-f8Z"]DAo@]Y'oPK0Tr.I[
%gd]dk,uWA)-0csS?ds?,+lcDe,"3Ng[N1]T(FeX>Ruqr(2mTA,GC8FKmNP*U7!=O3?)4E/ORu"@mQ=?J?pl$#Q>)VrJj@g;6j#2i
%U5l>90dq89U<Z-#L_FqVM`R(Vn\X_j/<BHT<)5tg3WU+Vk?S>iokX8WMQ"Mko.GFEG)Hr0+CT5*&XBF25XGebWJ`D7+DUUh?>Xj)
%'Ndih1p6,dASl#7PC[f?[+_8L5+qpM[FOMZhfL=d8@Pq[7g(Xa@;TXD")R+P"'jGikp9e"!>g_'8)k!sRG[Domf70B$?aHBAhZT*
%R0V*/o5I7mbu[DA*'P,dd:2Ft!'^,rn8pgS@]"qmD0$ilg-tj(\29cR;9/;=b&_q[ZB?1ni_+314mep#HBJlL-HMY;MNU%uQY9<>
%T0N<-;`J??64J]NL&?i)FH1alDE2sK<[L%HKtY#-%l!k1n\`$,9k3t[DJ#nYIV,GfY7O=_qMG9:p+\`Z>%8+=g()r!]>A]!k&.Z7
%F??+7_7^@jf+-G5I,BX@qn@K#0n'XjrWA8(Sc1_Yo7Je5/tM#KR3"khRgk'F=9-L^YIrniIH^ZDj/Gmt,V:3=H[!hfC;2Ara6(@Q
%l]shqPCVlM4<b`-aPX5=7ngo?`sp?>^`c`k"9oi//VMO[`EHB:cF(+Tf4[E9pjq6cqF9PfX5D/ojl-'9O$R;;as[,[]T$s.'TbBA
%HF8H!d\\8b2Rar"qIr#'BAl>+ShHCX)i@,?;%.4^GMe6l#`J_41]=nGLS\6,jd23LmC4JZ*g^&&2nq3T5A`dNWooOX_Lf;rI*#'D
%12/*J+F77bdUi"h+LlS/prJX;8@dOcJq4+]/)QNhXNdi%:"U4$2g]CUV>[Be86cCK$QY,*THZGe$=]GVU9L[cV\\EVBV#Jk7b%7+
%5t%:D"d,N3<+dIKf^Y[G7\TVOi<1kJQ8!4Q"@K$mK)%%T\A+N:IkoK,Fp=Yb[kQD08S_tE0?.]Qp[Iqa>C?0s4RsQsje2YW-dXu4
%fPuSGl7.P,G<lBY$j[T4c<3/1E/@[.E!\Da\m0WL9NQI6k(pZk6X`_RK%eB,l$MWSD`G"n6E$ZdI!dF%l+;W4kS4o%I&S)3i56^*
%;50RuQ,P*e6+8V!6m;'5H2r6"O!%/e\e3J_&!7?b^Kr7eLcW6LXAR4\\m0FEN*lVrq8nnL'Q)^reN@2K:14B(M&),<5_Qn,gb4l?
%BChD0DT>*g([phYWQq<?$g5G);[X6:l/qb/G,nU7$5A+IXK[jlT"C&V`LrQ1gs4)FZK::!=@`FY%DSe3hJ!P"W94\GHQp)@Y0]j>
%9)SUuV;^nkO>*`9i<?3l2293#h0]_+Rc9A3,l6Zl,I/55X]?m6O-HhVE5R39B52Kn>sOXr:8+?qX,%MG<2U88/6C0MH)!.**'TRp
%`4E;%K@!Jgq'sV.m]6^"_7f:="g-rqA]\(b5/\R7e*X`0lhAK%jspt+D.3ZTo":$"U3(bDTo*08PL'IOYUgV=W8B#74qAIj)fnWf
%T/oU4[Uj_38.VSs>/c<)%"]8<0PpS"63>KL.':<$<p$:,X"\a%K0O18fJRdASpi`\h(:3.\^G+4a4hdLih15).A6_/DPQfD!A@\O
%\WestW($HZJNs=@PfauImU"Z<>/S!qiN0#f)lS4To$'b,LUb[B#_m95l*Jg'(]R6-BJn;uSnSm?7FuS=fuQ7]Z$q38lRT<%!+<I7
%N(Q>tl]m7EP<R\d"ihIC=6DjmGZJ'Z#R7N>P``kP$TYS,@'uD>K_h$@*6!^_)0d005S;(+Z@3fm(Gmq1`M]'>*iU.)!?,ZB2W?+1
%b;Vmp&%,)iVNVZ+*hlD0ItR1Z6jc`VCF!j&A$.q@$E";-ESsrh?%i;[=13W^TqSnE-!XrJL5W9>`KCO_*Mf2![0q,g[^Ck@CI;:>
%qQ%E;YSVlOA/T!/W[c=<>%8(/2g;MU("UiH='E=m`@]Fh6BabF.;*cnBbq_>rNbErU"=eb+Lj4Er0r@#@Et@>$L39O%TXB/;YcEU
%+Z2]Q,5TM%=P)TM484=bZ8_]AN=71]C!A(\(iLX_#V^_Qr>G?Jh]h7]6:!"s$VQ,>r1&DZ=FZd`i,PNU>2@E@PA)DPC]kDYZ^30Q
%8,nn%G@Q8KS8Z8sV&Jc$;sp"/3n!TZeOoJP0<X<Rbf@sT.<GS'k2Q0n4RVtjCe@b]qO^LXB"L8dQAL*4]PmtRQ!:1C('cUil(,>b
%EM_%@gu.1C<"VX4&1\uP\#=9d86AZ$g/lGPPIp[_<aD@5fgH1bN*!Hi9gC(S=^&L%DB*pKHH:6B1c'o%:(A:s1Ecm,&ZXr[0.fbT
%e5_UVcb"P\M2b&nq'B?Bh_)e*r)dnk/[#r>k/4?eHtf!md'EtkZj\eVBT-9\Lm^9Pa=j8(4:e/D>:!H[i#MHA<__AF0ZquTH*l(+
%nD*S.;ot<r.o_`pVlr>G>m/b4J@]iI/JB'8"nNN"oKJ_d`H.pDG=?WC_W]eAA"BA%\U&4`3is3oE/?'lrY&C];-8+mg/;WUQPT,,
%-gsJ:Qp85d&;[qh\JJu)keU5BM@UBUMlsu;AhQKcVa^BdTrJu?hM_A.,l?\9p0u>)M9sCaHdS7rke1)coR&=8BNKN!5B6sAbh)S:
%FW=6niP9LOLp2IGMVt^R/9pUEkhY!G6bBg`g3Cm"_O`s2"q0A"Isnq\WgN#R$TLjL#7Eq;9s:Run-89+>O'M-1#UZ,jU8moR/6-U
%iha<_<ipW"*:+\JG[$,Oh+o`:*h3Rl=23@E\>E7J\JhlRI)m8_T*aoFj_$X$_&`r"A8:WE[1-^0dROFf:0Ju"Gms[J=4;<D\RXGT
%Ru8JuL,;M8AQb&X&m3*BVG$_B;N4*a3Snjt)R\,^c#Y>HpPJRs5oWse57;I4df#sOFW/DXoJDLk$ZX,)E>lihKqT>PEZ.[h>3Ed`
%.eQ=C?6I:g&D@o99:DQWBU$<'K]=(aD^@q(g`X'=S7I^_8ku\Ki'&HW[;l?&]&5.3D6_J`_t^QW@O02TX^::'57OT[VU\=R*:0nu
%Bj/1amjrp&0*X#B9_&((C#o/CptLB,d=":mrDh#dqj)&2YuVg$Bo(AU"*f5<GINcZ%("Y]jjX3QLKYO=b;tb+pH>S@QBdM,*qc+)
%FN`r=FH>m^Q+pnDrc%h%_q_S-XqH*-MIe\)&,YX6DSsCZ&:J8(DJB9S0n-T4`d#g%oo).H=*7OM7WsW`433G,]ZD]"bkb@tHWJNG
%WuEu=HdCut@Xs@+fjPggfqqNjS`o%J\Mf8^6]<?E)'me%$(\sAfK.kNd'4%7cM<$49':AtK2EiYK#"oDeo^7DkH5L3PCb#;5j7!b
%JTDLX`6c&c[?7d>4R_LdU4bsdF#;`oZmanQgpF)'[S%OE.a];H"`*HJ'`^Ybs%P&&),`#VW>tA,AUdjMPP1oqE0.G9rTX0%\oZXg
%g+Cr\q,<]/h7X;X,"X(NA_;i8p.OK)5Q5X*JkH`1YSd$rD7sYTh9J&)G/lZ^kAWOEnOokeC;5rnmp,P[Lt_;a)_.2kL'g?($*>U<
%e8/K?)sfm&hT\]@h7*)p"#Yp0oS?Sd-,GC2[RJUP`S*A&8\"BSh]B)4$.-$#opjaK4P7J#ne*M:US?I)kbA'c=VO;Kct[3e^^aD)
%F$1f-]SM+ZN!1la`PUhu-D"M#([lD(plk5]4UgRoquC'Y]J\fbfqQIQ?pbtnj;W0;,DZRbAI?;J5/p*h^o.3J8^#_@DIQ$_.YZF=
%!oZ-"U<a4fnLjY>E\*Jr(Bo->ZbEV!OZneE7HoVYL7uI%PSp<u*c)Eq$&Rm]LG=GsMs;FRB-Cs4?-7*8hFE@K7VdsV_G$Wl7.s,;
%Kpb27)V6qA:glZF`TX#4Q"#,AKGW#f$l,oZ)6XXOq2"^GHZ&[WW9.TS':7X;%V*#'_Rnrg_=4UX,KCCQLhV?`MKW'@`Y"(WY!E<;
%MK$385q0&Fb#[r+[E1o+;<@6*dgdgNli>Jl2^e5l`EUYW,0)r!['>;D,$nh5#GN,m;!]ic.%ju\3=F:YWq0Ua5LjIJcGJUhP=-!J
%"#lSiVCf=.Fb?\7`DS2i@h`S497DiZGd8N`3[8%hB50Yonk-hBnQZ!'b%opI,Uqj*!U^je.t[,ST1jNQ4hX(Lnk/TjdJA;Ijjcj'
%Y*=Z:H**;6U94[j-ds<&p*;/?fTj@MJ.7_X5s2iuUjrn"l6`f(Ujt>`mg=FHd':,g9'(7V/#"TPS4GfM?If#jDh1e8\Eo3W0IoIB
%Y%9Zbc'#b4.k6=[,![kf?!U9rh0%_0jms\9SJAtTI8M^>gGGd;Wai"F-*7#XFGK%=r\'2tk^AL5h3%<an:P(Z(!q3Ns$%CW;'&)H
%LXLIn_r8A$Bo3qqdS#.9'o4BRpk_k8+<-nmPG'D;-jTS)F$hROh`!t6E[M@?]iYF)@e&if+Y>p]da1bQhX7ZcHY7tsd[Tt87MLI9
%O*3]Dg/7C+6^hF]mX%fk1rB[:puEMQ_`YR%8'N^hWen8KV12C=cY5K_-YOgWk;46@dmQ+Nk;46@P94X'be60>d^9c1-g%kkof8.F
%Tl:lql-DO7F9cGooN]&QQU&<8GhPsPEM>u<d68r7j5atqMhU*JO!'5[5IZhhiLd;fOZ3O]H732A^U.6kW:0E?@QQ+3)4QC/N5pbq
%^i6k2!cKW?D)\jre-bgs"VhEskEKne<?@1'QDHh/$PkG^[kU0Y`Q<a9I9oa]q=Q>.cZsf?JlTEu.hO^s=nM=7WsM;K3O]-"@5kKj
%S&fcecf[OPL#'hEDBb(E)d1[EOc:T=*V;k1j*g:annoX5*ZoaA]F..?N8S3,QZiSgF::A,Uc>1_PWRIVKW-lCb/7\,*c6+,^:lhP
%\Gu.)H@(\>jY>X<8m&rZOl5,ij[:dH?5FBMfg6jLYuujsh/'.8c@d5ZjO@eDs._N0CA&G!8bng+iTN/'ISRZ]P1qR&V3CWuQBk+<
%]cT$Y(MC3m9(&Li:?LZlPa7BS)CA=g0V\hjPiqB'%;>8Si#;R:6ZJf[i'\Ba)>8Fbnp[R3FDG)rn:mYM]aY,"58be<>msHQI@Y&"
%cWr:dHjJ\3*Xoj81:b)KN\2,5GePb>pk1J#]Ym2r5%5^7W;iptGN;g8&MHFbEK6D-G^$8iV3T_t:*D*#Jmt`*KM@CF1bfT"R"u$;
%@,:V\#>Ga[.4K(BjIh?dCf8o=)pCI`9k*k(SdWSBF*k/"U'Gl,T6C$@A7O30]C=$I8"+s#6Tsa'OSk78_BG*AFsVV1b,hpT$'lFs
%CdK(d<4noTBY?S3Mf1hpaiIQUoR\BiFHq3rpT1,@C4SRWh80RW9>3SSR8\.&Hc4Ll<2![R%1lF`.k&7kbeRs+&%ngeJY86o/.<Qb
%3uLCo6)d3FcjG4a=*R$Q`_2Q<0nN>*6C3!9%hXuAAhku]:Q>kj27,&9:Z547@]k._<K0I9N!X5I!bc7_)IjK-n(U'NM+IR0d)s[@
%+qhXObfe==,*J-:i3s]o&s8KG8-fZ7m7K#kD#-/^6@F`<Z&Z:l*O6L?$flSIH#otOVbfl1:bt"M@LBLf9kl2=bDljkDM'YhMr&V'
%#NdSfqT+E)j*<HNkCo8t1s1D0qKsfSIMaP>n&f$TW_;ENTS0/5FaYb#R4Da42+YnTZ[68F7("Yeb1A>TdK1#(72u>Tb1YB_Q"2W/
%/Iu/$"rq_QBe-V2Nm\[UPR'."#5(PT+=LA7SZe3>3t!k5l_C4?%7L=-"mR=n%Q.4A_PA;O2rfK.MDVF_ZE\E9\]TPb\ZgF$$'rO6
%\HOClo'Z,`J$$5QJU#-^/TZo*3>'EeotT(A2+b7!,i2=%+c>eBr,ZqLR@`;41Xk6P[:%OOhY.[HObn$#6fe1Z//rZ;-TSYS@FsFK
%qldR$f%b,V*)Nc@Fcns:b6HcX%rU=kXqoOF)Wm"q&R0;*\?0oXJ$&JoRZY&liKIjjLl*(rf/LYH+e&8D&D1R"(T@p8+QZkpNq!*<
%6qKBsd[l_Fj,nBP=Z3u$H!O=G5L,QLVbQ<MgtX_2jZp?"OS(A!6kkbnSrf,io,qXWf&O-J_!m+r<auGWeNnfT<@q[dqA/Bbp?-6m
%hdR=qB9/4(._7&SnM"It4r)lf`p_&YZ;8BMEdEsUM.OUl]/#I4g!(Hf`a;Jg8d!(H$N0"Z1e@c<i20)#,)Ci=>V@CDQQJat8[ur.
%._Z=JE9K7W0$(Gq?lci^X<Y]<+Bj0!LX(^qh?G`ZJb&Kgah6>rISFl"aPOU"hZf,#+K+o-qU4KAF(r]TV,Z)D+@@2sA%^,4\VlCQ
%i+LY^gO:Oa+=BQYVA2=Z[pb:c=,tKg'mXh*r8dBZT8M&^;26$-p8R7T$mW6?,PtH)H\uItGdC17\Yisas%p_)IhiNlo+-_s0Ff1@
%1(lr.<aeN>29")QNs+lZ0ee_GUVtE%*lYBqT8MW?8:KZN=:Bi&c![pGTNDVT,;BbJ[K3WM#"N.<WYsj81.NUEg22s4&:L+!$qFbd
%,s-&gnp9j47q*_f&k-RUpdhK8%[8Y=cUu5.esPiPKY:joZETROrbXBD02,n$M@eNoE.Ygr-BT:>m*5h\3W/:0Ue(db"!4mG1mIKU
%P?a^g$qD7QFRuJ*Pi9t<7]]!U+7RVPJs(.-C05sn2BETe6k;&"d2pbCoQOaQ1>"j=0jZLZ[r90&_j%tRiB"WHCr<cUDp1pHV4!>T
%oURLdF0#Sr9[i:'Ndkk9bquP/lGS[Cka)c9g(]s1j:jr`0o]'\%0_PC]*Grg8>UDNPr't61fc%G(_A!d_+$edN!tM/nm@P&;+:aX
%Tm;%`:&%eb0]Yqf]%)[s8kL:,IkmC\*&i,Vr$YNO@EA:S6NEhl3VJY5I:O^7N8fmboa/pdaLt\hk@$aO089TW,1c&jm6uLP#4#BN
%HS>4W0lZkZMb+EgjZs5N7sI^9p'!Y/EI1An$jl5U*J;Cs./$#>5P^:fWKd]bRsC(Zi@.4&Kj@jR@o?u'5-b-oDe?Q^fB6k\649:T
%D$@!>c1tNpat_Tb*k!;lB98W2:X9mMH8^;S+>/^/Q:`i1>,Enj0]_o.Qd%6EbSValJUJMb1HU_<2`mV#fnkBog%!kA])*f=DDof/
%Q2YAR3a[iJGVt#7Y;&IRn;ct`70__H\*F/1*918djdW+#qA<c_Sc(D>6)2LZ^LmG+`VfkI5mj^XY:A,5W/>]rWs_D[7qhn)EcGQU
%LqSco>F,+X2g87H+iim?_<!^oO=qPi^H*>TNV1Z3:mY_([g8//g8q"">+L-;ZV)p#;(1!,g8KS=Fr`6^id>8cQRZ>n9$2"IQ#]WB
%liCD?"2Li=DQH<H8Z1:2Tt;S$93O@QW\+eg%ZFOY,pj,q-W<%I:#]h=knMi9rK^luRf#Y*Aj0.R\/-X0#-'FI.L[.E[[eKS(K_.A
%^HbR9M[(eE4Fb!KXDr$7Jfm@eMm4'1Ap.)QF*Q>V=-AOW%hIeF\,7pB(dU&$=0cFKlB54Ipda;Z-F0V62:'PC@>"F8h/^jIl[Thr
%p+3cLDD-@9J>:#7Z-g!E!tRli/B3mT)1i)th!QVXSUVu;R_]rD4o*#RV>ab@n6iRq[b=u)X^UH*3t)X#!i^7FMR!'G3-[-VNE-"]
%:YH;[%TBb&@KsUIYX9<G"WklTdi(`^Au.=a//JGgR_^lTF*[!a%sCXgRZY&_jBLhr_%4D8+Yq\G<>,!Mq^8[6=%V&Z4E7L!EE!R:
%,42CeCiUh1M7G`7>aIKb*9Rd7P&LIbfP%eGC#Ql^MLZ&QT7dHe3kV2USsrr0/H37,Jd3MlVI=^'AcTa<?rDbf&7qo0U2!*5K:t_<
%pF6f2iPCh+(q't?RIM.(%u.W5Nd:;Mn6eO]NA22s@+6t[]6;su+./3%'W$*A73?Ki")t(=U<W:0`DQjX"E6kdX]q/:cla=Y)%gTp
%*GBt)$7Q#c-F,A"#':'eSsEcWJJQH_N:Q$^hOcl,"G?Mj&Z)\Mpi>CX\SdqcW4q'^<1Aa2\>sq64Lph,52N<r,!k0q&'"Ec#H[2r
%pg:E(OjW;u1S^Vf^LfI4Gu\%Nr-b-<4&@JG9lEE^(iNDm;,(t<=cBbgpWs`h"',"(f(=+j&7mU;_D$H0m,#B[]U2i!VlJj)6ri^+
%3o]3O-l9?M9;&i&&XR,?$bagt:N&dFiI"6`3u16_@c"G$9B3]U/h5].-pS@s@b]317<l.'FHA70X8t+&/Oa7d;ZBjf]Y[P6Xt\]f
%?!cJ<G?5I2[!@A#363-<Yuh6V:)^im*h"UCdt'L2!%,;2>d(9@^mD:mF12U"aKX'D+HOiA/e%S<MBRJ)d(NqN;T1ih44>Uo[N/-N
%[4`c-91nBX[/jb(YtP9(_2(ABN[,G'PURB<1d$9sIPTo%/BBatr@2_.H-iASo6E<&DGFr)'LRgFXY68Q2,Rne$J\NqIT+=J2=j*q
%(0!B$/'"I@bseXUigdqanu,!WSR3[a>^=gCe^!]EUFWBs!?8RH;Q(g/*EH_i>7,MKW2&4@0r7]:ME:B8N$3n$2SMLd+@]3Rm.*."
%'h6\EIoanYjo.S\M<n3cY%WF\n5,/[Fjt1iSDi`J#]aed4VYWW"W`1)U=X_!:nf,=6,^UEU.#4U`B4jSCDl66b/52_T5gHDJd6:7
%]LM0m0_ic<9(et^6LT/)LnF&0c;cF6IC4aLYqcE&8FAC35C7<sKTW\%@1FZji;roqQpWfjZWfN;9:,NGlF>YArdG0?\K7q9M)^\G
%Z=.rT@1;S"]kX+KhXWG4;RhqaWg+b!<^tc-l17rgR,3DM8V?*+d+^KFk/pgZfKJ,_[.ojd3MspZhEF@<).F[9Ud"?WomC2GDVhN+
%Pda!N?:V3^)g?()h>7/2:PkV=@^RFFOP96>a=RL)`=fS2`fLT@KHsAU9%$?/WpZo.b3](DRoicV(A-8;>Lq)KCLC&RFbrL2&d7rX
%\%b7*##EgcEB@NmMsm(B-f>^7VED9]P<PgNUL+NS;"m/?fp9`[(0E>gE#D$m-o)Xkf;ph<oQ6iW,r]dc^okoE>Esu_V0V]"lCcQG
%JEjAgh5.&(?5^ZM7*HhJeNE%L>ltuFGrC#a4U6$!=Wqo#D`0'UqWa4OBu>8E&Il6T78LYaqU#7NQ,P1plnomq1>*IBrneV*0ep@e
%i,dBc&geGKm!\iqIqq<R2'<f=EA\la9aN>TIQe[fe::ZEZsa1tHGe9`kSjIGCHu,G]Tk!+-WcRbXhC[X^4)pVABqf".0!B1]Rpht
%*]`Ch)(Z9Td4X4!&Z&;0a,>m(fp5U[)]&oVA?mfI*G*IkL$qm&D<mkdWuHk4H@IS:`;CBl:6s:B!<i#eh[`,'eAIV5O[b%YB-k,(
%s(R*i(>VuL#]AYC2ZF"b(A$.^pZ8a;;H]E8\]U:h:@aUVKC8Hl\;br%L1E=9?Q;EWNGS71rPj#%kSOq[>PWb)L'0RcNuCCVX_UNf
%;sV9@f*e<<&hHXQ_S]E45A^;"kO<K'5F))TAImPXJ^#7E!CWJeO4s^'?DES96e-_Ip/[&5DGqO`:Ai`ma)-^Of"k<'jg\$)fSX\^
%/'@?qD\Y]_fMW#3:2C<c@I(r_N=4K-FP&YJbHT$(1Tqupk\;:+Ya*==9;BttToRn)7;;R2[@H6\S]GilmIfir?DlApR!ph@gALm)
%NcMf&3>m=lVMIuCEj(*HD1BNsZZ5`).Ga=KF1*V\B5&^E!%2W_f,-VsKHRb^8R(IO6b:m)^Y^+T/6#I/B22XSo;dfS$hZ>._-l%V
%aZ1lgL,sWL_c@Y"VkU%Mh[o0S,%9IGj&WqcT_B3lfr6fXJ'<f?hd*W:93HbB3mr'((LbN_V:^E1^Be=mWfpjMRSGuQ^g;[K4&ps1
%k39f_$c?;(0fq7_!AV$@0P75GSG,uDnL-KL]6t(S<IUj;^<+@'[Pm2A-'_V2SZ8IO<"d_A>#K-nSN;me^&!1#:Og"ljg1M1miO8m
%"5"VYBYor/@_rR9"qqb9B\r:P%?["aDjL^_Y+dD6j#:DG2P0bY*R]U`]l6?.Y]l_8C+u*\C8;0ZGi4(mKI(s8(d,g;Y\rGpfNPDI
%Xj9`@S,6h\J2K:\G4kGWj3Q>2cV_,d&D9&)q-"\a]/hp/JIQr^AYpo&/)7;sDFq3@BpR$-RW/1JL&EbB9iuYO[LSA@m^rt/$%KW(
%JE2&ED=#@o[p>W'Iq&J7%E$WAEF+YQ;d\k#Co_UZD,Rb8f4uDZX2eFS][fZiLg[E/W1,'"VN-?B^D8B+C;%"/F$Fb4^7'@3V9o`.
%o1-A*6]rE?3YRJ0^lSs!Wk@pT(jGgHrf)%oqaK]"Fr@W&qIT-'8tbb,Bs;o!?(:LJH3V8F>BM#eoDSj&HX<hb%i0Q6KJS*L_1Nf!
%@Y%%#/EHZ-j?Eo.^KA`XpkqD\M[K]<m"-fBp.FBHbnWBs+l)sF^TLVm[.4Y4[q:2';,nD+'U!ndb^/,^(QcS[HJVmV\UsB6mtda`
%eM89kZ(pNZg>%uj8!W&*>Q"/UZA!/q6F4+bgf-;sA9&\B'ks7a^+I[A3S6WNN4HRlgn4:IUUNN5D5b-4E&>g_-'I;<7g=VbaPe/B
%)#?G@7eZm[MF9LfbA13N[3bC->?A1PIBSk5,128uO*bG#Bk/l+X5ngBP[M\BkFLHl?MQi/f?h<>_gQL-\_?h`*r)%:&5BjP/%CX5
%S]XrLg<7))(QhdcRs+g?oBL),[J4lBU%p@OhO8`d'.NZCIL>`ElWtleEt?i0DiE`>r_quUp2bGOei;/a^Z:fCJJ>GNKMeWhZI<-9
%7*>`gE,f6tqQl#M7JlNj#>mrN2&hWUJIHGkKD@h")r*kBph0Sc`4h>1JE)YZEuY-YBA_NIh1ZIJ?c.uEj$LGhmsm+ID43=#f_]<b
%HK&L#"]8^^Qp,]YaA)+F'&ip]'8D1Bj9"n]BRc]oYYstdi>H`O$$o]lP8-'8>92#3f$j)S*kHR`gdSq$($aq1^O>q1]OaK5#gC/K
%SW&68=j%0]FHs"U9m?%8n3eU8I:p+a.M:o67%lY!GMdLfHQp\5M7BCqrnmR*Bj&G/9=M!0Q0n%<]8qr4L\ljn?c@l4M+Vh\QM4^'
%?[El=GIr)!kH"3#oDO(2o(B'[X4#d;0.g=QkO.L*p?l"EH3-cY'tZ.eNr2_K/hLb`@-<Tapt24oT"jRgOcJ^CRTiPScY#k8)6f_g
%E8];&\b0Go;uHLmO"UHs1PP;_:8YOEfZBAR22,@K#Hot9Q7E\Ba2[^jX`W6C2%N[N<aaP1kHCAo\+Sj:(&P=TokOfohWqGThu,Mt
%Q3d+ZDn\5]6UZDHa4(@5M7fT,+-]"UI:EK$hg^ELir43>3e)+9R4V_C`p[-OJ*&M_VRd(@4aipD4Zq7NV3e;_N5i^k>heup:WKLC
%:*uB"=W!p6i9%*HP_Cil$6bBOX=T<-<H'brOg6Z1<P_1di08pMWX>G'#K]L5OK&@S\7%Cp<u#*h7k"gU<#(oQC*I4tN2hJb)9+07
%@oO0EfS?Q60Lf&N+rdL4KN/1_7^gFmE4l[rI-=*;!RYau)W5]a='O;G4P3.iftfYuRO:$5pg?*\I"0nd#7VBB[s0n)1\pdeO$FD[
%P@YO],<ZX"XB-YTS&!\8:6ce1]7]O:@io#_PT=IpQ%MA+(;nS+6B#!Deq*"j"o2A-H\K5Bb:o8%LS"(!Euhp,MA%BUJlmO.9+j2\
%j8mB8,ka8D>fjI,CqDhR>pa8nW0#BQGI_r_n*1H-WJXH)-`Y4OVO%4mq[_)2_O9@onqBK#qO3?N<o1_bP&&/GN^X8S?a$,pA=X4,
%gc&8^hK4M5lgnpAhuhhVr%`LQm[o&=@lf.q^mr-1?jb^K<W3_H'E\g5\GNC0I'%ttNJ)LH\(R)XOFIsrIPo!:f%;,s."eAF@QDZj
%Dgh'uhh?MrJ"_%ZI."g"rhgMA]:ME@NGf%Fr`E;5KP0?&Ui(%%Z63h`4G3)&"4/ZtqpYN%cI-lJ$>sZt%[Pn]K"`C5I!pYlX-^N7
%<P6)_]G,SHdJ<?!okTGpmuG"YUQp485$Q38_RB6qrV4*s=3*iT%q`#C[SK1cC5_RH/r+h;"K;tt8B[Qt?BZP'0@]-U\']<=i.E6m
%;*IPnbrtHr#6op!1cd:lg^<j@1'_IRhuEE.$OT%1PQ]WT^67@6AfE*nro?oMQnr3O\a]sZj5Dp,VMpN6FrJ'I=@7B'S+J'bnkROl
%*J0Icp"CF<WpC6^Y'k\E:5/a\TCaKj#RL"f%)R:/&=!&DD\.q]6NFe+%`)6FSJ_KA,mO\6Wj_=+JpQu5>Q,c'Xt0es,t$Ta8b<Ps
%U);&Pl9EM*<k<Aa5$CH(l.,l)`R'>;SahIXUOA^Vm\r8RLGA+&ERS8eVbp)9RK:53h0Bll"YeSYNG!cg5Cpf$>DaF5a5E33cl;4*
%/j</eLu">l'Z3J6EVJQdb@*WqDtKc5(c[?'4H$+2=r%^uC#<8qkB+WHh;+PjY60Udp_Jn/l.]kaB(LTh;=97:SrM"\%ri\C%#u20
%<.jjGgjLNp7Xci&U="F>%5IYT-!Jsj/a5L[nU&@%jeLYHAs,Y.DJs??r,rqt4o5Y`rn>aoGf5V;]sVnqkcN>rlYhRB/lF6^_seRS
%3d#QC5+9t]\mlP4\&QiKe"a\"$\[gJ1LcE^,r38K]R5Wl'%^7NchJ>Xl?I+2kkk*f48sJF1AO==5#6SBR@4#g4$aY6f-<j-4HZi9
%hNLDQTauVtUlO17HG7=W`:`0RBIi*=ji]`JLD4"FmqJSXn3h_H$rU%;I:ua2r9R!]_jp'\[$Fe@7c'f</[7l17lPbBh<Y%8,L'G&
%%S2Q]RM0X&oe%k%,B!,'[;pKJS8r!dO:&0DAfW-]7,c3KED=B+Sp<huHb\M:>+I6*(,Yh%3pKrUlrCgU$\>.)'/8VSWLLGk7kscB
%p%^r46,4dEDjLO.`k\]PIAmjdQ@65hI7"LOEpgGt(?b:?Hc\OrMsY!36(hejoQ<6$be#jMP?<:n+"W>hD41<Z(_qB8pqu6Gchi<i
%W5IM=`'9X`Denj*"AODH$WQ[+fHm"+($^6a*PP=cYBr%t2cA8Zk)!8EgNcbT`OAJi_b:](UPmpBl4;*M#hV2?q^RCE3Pf/q66BRg
%UMq2/-KW^qUg"BQ#o"=oJb$%tUsLmpF<WflVX&<"DD*Fm=4^NRqpVZ:=?$uk\6Yis7mq9H?OpEQo](eh<`5q[T$%.IA&(b:GcM#i
%S7g=Zl;,)uHd=b1o([%>qhr/$+851"s02LYY=%3(FQ4p;YB,Pb[Y:?VAG<!+haMkO+YA-@e%#D@?i.NaY!-LdQ[Z.20%[E$)A3Y-
%9PJdWJ9PI87KCREm8)WikX0BPGtA)!JB`'48L;p)n',QB;LQ-nL":c*3SR6ZEqH5l3kY*"J_\HIX4)S+mj\IsfpCnk8aH%j!=Ka0
%M>IdhJWB!.M&SSkKQ;hQOpCVCmJTD6Q:UWS89kVf]C[]oo8[1]SUGRj>[Jo-b=Ob7+LkZ0ge'SO]D:$D>Yj:4*5!/O_W=5AmoqFJ
%4b6@+;i+J3V?(/qCW3pZ]Q:555^N7sNi[:a.m\hcW7JuGci74AR"L]kAGMtsEZ;ZGSB,=$00=Abheu&Y?aT7h+'r!Orq#Pf6N0FR
%-c,iP?do!#/(Q@BfARMds13M>0hZ20agkcZ0,)d;Ap5GG;/(K,FWPG7*aW3V55t.T(&rBc[^rrtq,RA^?atV&k'kQAQ_Y"^L.=8:
%!53o#?6C3^n*iR2LV&E@2uN\6r3nX/3PC!!rs?Fk_[le*:]KrXQ@>t73]WCQh;X@I'8BhZ,t1mPa\_V:Wbmu#;mS(#e7;"6Im#Rj
%\n70Y+>@WV;D^i<oe[iH2PErH92\K/-OgO:cr3h<SgHXb4.E+<SI*1`)a538P.5E?&I<[71*Mc2?.3UY[XlS1fa)8QP>2t9P0S69
%@j%EN0T`]JV'dtTB`\\WV5u!ui+[cOX:u(&RK*Fi,pO,IJ>W]/0U'P-V[5'(jCAHW9osoIr]\/=ib3uq8nM-Fh\"8IFLkm0iN9r2
%bYeRMFr"iZ+Rh3R#2HX#0G&+rb$]<?"?c&':!<)=c9Zp*PGEq)k0+PQZ:.rUAB,:D/qnSL0EXoe&!fJr"4j1YbC_)PnOWKlQ9`5Q
%f+N>4"<nn1&e@'dLS;[_1IiSI@3s,*9>E2>btOQBQ6:Xefc&N_*#If,r(#t68bdX:K%i(4JUiN7gPTq"rO^ts7GL]5mt*Jt8c4>7
%GL7?jRDJ)?@gPOcm"Ebp#m<@I21Z!*^b6?N\--0Bq'-k]'_8F;r%++M>?*4AP#XkIEUCi^>lF(%oY7^2lTZ^]\f1uI=%b:Xf`YSJ
%QgM(2j+<Ipcp2D\PG_:=Z><.AA_XYhW7imt/h<fqX/`;ecmPVc_H]d(j2"RI9UKGF2@Oi'aG+C:\JRn$i@3FJJTc8V4R+NQZkQHi
%/E"D<"I=)FpTP>j'E"f51kO+fHBLBT2af)ob4(:kb,/o&Q:uHR1Q);Q4$7\l,aUA'3c+)iC$5c.-&&nF=WCtGne="r2@;Sa45DYD
%=JZ';3'eE7Cek0J-J&`'UPHmMmtmhdI1Jtj1Vo+Z9-Y9VVC0LW6Y6oGZ]:MZZ/K8=9s`*MCr=#B,oMG,ojWpc%UBo:9/-k-l3:@P
%;H_SE^Qp0M.^7JiZOCi960AODi$dNa;0H_/GVC_X+UP^C8Nl#]9YMO-#6(:4fL`M`!iKC1:[g&rruR1%g0mL*kJE92gQTSO\T)En
%<J)l=/%1#G=gML3X.!mX4qI7&3OT)YA!]%l51!8?:".X"1)s&t%K4ggSY"b;R#.nZ$k&@&4rP,&_h+R\2-!$fX)_Z.3!tjfKqgA1
%42V?g\uhG7EXDKXdZV=uV8--!!TBGcA'/p=BkGHal0KsR*!_+`MC,?U#\[Uu3su`oA=["Dd+o6HO:*TIL'#(lA!]C*L#"q/7sG*'
%Dhb*>dnM&O;AO(%9Io@3=:/_p)\J)<2lP\Q,gHdc4j_qNlEa[&OTlOD=]L;9bYZ*qj-S.^!:.^V&VQ1])DOK8)aIhbH,t^[2G#n9
%r*8GI%%;"dR\m)/0"T#B@=,jiW-gZHND`erJ4rZli&cAoH6OYaO2SHDNs`p])-=6g#r=q\cX^*$1eSQj_':po<EYKX=*1F2)RI:G
%=glBRKmf4MJBrhN#d8+>*DjNbRc>h2QRi(A<'_DO)bno)fCSABRoRs>k5k:ArBBZjDJ6QB,0#lV3XQT2+0$G=@4'>*=&_0K,t"!6
%Os+-SNX!MFL>agOYr*9f(]&t^Pg>X>=V@fB9fKspADF@s*Xi4$,:lkX.1A1n@/1)<T\,(h#u@8bm;Om9mNrF3#qCmj>e$BHM;KP!
%mI6mfET'BQm7H=8crgJl)H9C!2cPkr#4W&"TU^Pt$O37qB9At:aqD&_QD^]S)Rb>I,4l[p-7g2L"_].d\]B#qL3YHe2e9>3^k&Io
%R]t\'>h$]`E"iZ:%S%b/6,U,_<Rs%HVILG1M..i\%nhK@YbT'ViC9.!8^dOlKT13_N-Nd]OCZ@c_gX,+HIeG,;^!M5Q4r:GOO/2g
%9.DJrc+l^2Q\;B4%#1]4BaW(N$%FZpIS76Y.\LM6h?+ZM!>JN7"$ebd'E8.!ZODoR^sFZ+dGQYbr=SmbO"C3e$Hed2@fmh`/bDj.
%hlcMkEh5`8Gf[Gc@AuZT,Ncqh#NnV<Bk2cVP4'&W-0g\U'<DkrAo<RSF!<,ZDOO&5UF3l&0X^*hF??:Ij>2b[#%#/tXc9e56'd\_
%7kj&DO.HK8_"sphd&7H1YJ`Tp)+J`NqhUPKGf4G\Ht2Y>/Co'7-P;?\d4"Q>1kN0!qFnU39ru]f"(T\#UJL58dA&)*,EShk,;]:n
%!5jV1O?RFGQWU8grFtVK3ffj8O%e#NUpIrTo-hC.U)Tnh,2HT9]6=E>3CEB`U6.DR<b"n%i7gii0DR(r@6W?ufR!qXECi[L4Gd_s
%NlGVm.hrNN<aq]CQW`\LK0m[PCm1CtQKCb,,BG]-2@L&P<aq]cQ_c\aeHD<g!=aCQ4]01<?lDmH8U\T3$YpoYGejTKCcHu^$2"VR
%!!+^'&S>]+2!W#[i6;I>%>#hGQ#j2(fe^lpA.S^+lj>OA%UI#k]V>1a9Q8(o:+pFI44#PA4oR$)GNG\IZY*S9>>AD>!tCJNp/VSB
%XP<iN-6=oH7tUp%%uHI,&(dG0_b0$DXK(b;#qPp55+ou<1^9W[oK!-t[QbAEQc<>CUG%V#OkDg*Sr_"L,GR27E'A)f+qHM2jj@qr
%Fi,[P+r:k^_[;i3I(57IiGiFLb-T3MOMO@$#l)J'NA_1ePGJj479i(]H6#>7$p)uUcUHf,fTAqJLPt"#*AX)-X_I2o;u-+/$\"YE
%@?9%tI+\G&#7.jI?N_nD5FB'("nfmFH[.oQ:RX7/NeV>*NEHr,YVD&fcDG<2NEK5&M3XhEJVZg(34[C(75J(\+eTE$j^Jo-S-1Ym
%:2I//L_EQ/il";<ME(,_6;CPg:)o7L'-"t?il':O3LS"L`7'N%Z&t"i:-=Mt'B99/XAGK8@?J_!RcZ\u@b!8cO!62-Knp*Us!ZmE
%dg.sRqd$udND'V4O,Y\'8Z7dl^Y`0PM7kZ3e:o7XrGqr+KNn\Q=E6_5=98L6>@L*hiP?._GZaJZBH.'!6^9K'AF$K'+s(oT5<&]F
%%p=$+)!4i]n"Ma7iOl^N(TncY8JlW2+Em.N>"#R%aBn2&qTHOo&dW_!7`'DV"9KXA)BTj>&Vt\a8Nc?-*lP/sa+GZLnOSHUjp2)P
%CaFW;9-@PJUW.Kg(0dbId$JH\15R3nBpWrrM_3DbnP\RR6j$=mQ6f*Y<"#m`5ZC<)oNsI%R7%%TpeeiG;UGpt=W!(<nmEk:Co+*J
%\glIEi.P?oUn.i?R-u3'Pq7nq`_.q/%]9skF[8gQ0GhS"W,+PI;.4,@,Ko^)H%'FC-+jF46d`tl\dAK=2BK"46=eHq8ra*t(6GQ)
%8tqn2!YDpj>Il:5-3t]OLli5b&n`'D_,/nu?]Sa]^dm!I";=9-#>0LQ&Q_Y%";E?;%Srja-/#RUfiD,/ep[pO+sh]!`3pm-'oiY\
%Z:n&WkD.&X10;G>!jGOI4H7X>_^TX$,$;h:W)+0H`YjMV(gJI.`[_6HV0O\46mhPZVbm243#[L-LuWj!L'[A-_hT-#UV_$07[EF5
%ir%0U8h1lOX/]@V`$cfsKl(YT]If-J,s'+%&2lA*'9&GX6nc1lk(:F($kJ*PL,]?hiPcun8n(RU$B8tZUJ]3t%WY7k9M<Dc>J;J*
%iqLNA45?cR>e#pXHBL*L1r<->gDJ;3CQ_(dS\dmto/(9j3lV9=!eO>h4,j,Lilp@oL'L@k6_'qZLABK;#_SEH>`>JMn.],L[t'3m
%&a+J7Y]8g\pTP>j'E"eJ>kjFmH]g?Q1t!")P(Ia,/#Ebb(Sdan8`WEAB&ql@Q7tbEYVGK7(\H9T(`*#s)gE``b9&9%>o,63&BNLQ
%E!.p\YRCiX@Y@41lNR^JfPb1)DC5,ZiL/n$rCE:l)JI5F7iB;T<?DY#1bJ!Nk%K^Z,"l5V2@V/F/N,S.6<n&[ndP+t-uOk84M:0/
%/lH.S3!tX`LSFm.!>^5t=>90+nOq4B3UqH,^)_)j3%j"-E]m!_T,T/6Lp>qc3&2KpJbnLHdi1Z_,ho\g/%/re,cm>77mr>hSqM?m
%q7l9;N/j)mJ?]HY\LNMNQs1$6(X-so4)W\t&QM.6Jn9R7@aY#7qB-[Ghn_LSd=gJ`i-FMm]ni9k2bqhPVdO;u$J%`u##a-3Amsc\
%Z\Sh2"rK(.7P`@uJ9N:^)K^tOK;K$`(#hQ3a20qUMAri^,gbON2n;Vt78<+T7q(oSE&:`9,Sl=I=T1.+P3[snpcU+a%Q>jW(N*co
%Sg;Pk)lNMh*@Qd,ZCc$7U2)jW0/SYjJgZRD@0nJr5Q\ZVpeI!a7YqF0'=d%<.sP3Xl\,#P$#'+GBLu^g8jgJuPU,sjHl3i"Tkd"2
%Lu=[>CU#]l+r\2IME2.Thc=3YBr$L/?sKWW(LNmd#rGF%)O[M.L7o3dQ.0Fbc!dqX'),t+O[/L`TQ*;r6G\3=f;G;S[?]6S)Y(XQ
%Z`pRZLlZeL-NT4Nh.E<83]N+lXi*EP\.FpQJ)I&P]h:2Y=GeJt6KT_U5q)r=`:oM9?>u@"RgN_b*^&srP)Bgc.4.n&Hrf7Hh3\`u
%XQ;G?Z;f5(-iSZ5C2;KO+8DpjNK56!0]<EtfgEa:mP%cjr$a(M#nf7o4!cnG$JQ>dOpi]=*tF#,h6Yo$QHY,:`"8Mjgm'-G,InIX
%&7`f.W'$%P]_#'!o&4IO7AlWp7jk5bJ!t?HKA;=$h:]B%(OiR:n6u2-EH3MR7BESY+gFCTJ99blTsuLDkYYe17DIrk'QM@d8rk.#
%1kLfSNfP<iOB'h/nI^Kk14kq?s"NOg"g9tl4SZXXlpR`/,0K1YV)4g&?qK^%4hIXp*dm`5)rR';M^Zc!QeaLu#9,A6a-2_-_nMgj
%&")##R!3@"]dG!V0KH./&6U6n&gP$BD`O4pa9]]0<'<uoCM,trfYCKY@W0p[)DNVY@!cFhE<?7\&LWhEAE3Ki'I#/5pa?kr@4=TL
%oWTMei5/BJ\/7gN(R@D/`<sqhJ;][Tj%cOn$l>3raMhQ=KRaS',N9E':SRO&82(VlePT<D_isPMJ4@IK2OIuV^kns$EDf-fQ"!KN
%NJNe)P@HWC1a9$B0hFEj*,=iAUr?;5,W6(%7nhu'#sf5M:-<D<cUe81aE-@g'7!=s!(?pd'ON5>;<0b-8;]MW&X];C';'QoEtW")
%o:1&)7@o\K=Ackj_c@Ij'#6"QlV`8:aR^!0/FkspTG;_V!H^cu4TW>B^V`GVM``?tAs$^;5[*7+;^-Q0`*;<[o,nkFpB%:OK(h7_
%70*Jkp7d'NBA*\P#nRr!:-8fW5gB[T(n('X"#39$a\f8Z("k,g(s-<'L2JGN<gfF#SqOY7;.R@V@mh'!@_-CA">;II7$0?]"a;Vq
%aJ].W\cVSnTkQh?E`,,(!q$hX-c)i#k=uS@U\S5p8Y<k*#mnV(A&8^)gPpkh\KOSG)7jq1Zpl"0.h1<60[f,e5QXCchI.oQ-kr-J
%92Q.=pC@]_,anqd5=8*Y397t.(]sJ=N"uai+UFIV8c<$''YY<J"Juh#Y9d+J0[,=<#3LNWILAYrXY9i$@)@pQf8kT1+d8hA&4oVu
%n_+NX\qF^\CfiSbgHCI.oWeeC-#@kOZ3Y20hU'/4UN%+b*AGE#_75pf%u(/")=`:I+raQ&n5TWs0FB5B-Tm+&[DUHAA^IJo;n#^4
%j6Zt4OV>K"k.cZj'oiY\Z<U1gk(h/)*94I2mA]k.)>\.5AITji:$dD4&Y"HKJ^HpU.+JV)<\SA)UYnC]6DuH.YejYlb$oTL'_'WY
%!K9=i(.R)X68!R^:O!5;Dhk)bb9hg2abEN2EVQ+RM;P(ImI6mfEoBNSm7H=8OBKL):CX6rK,u9Df`@f`N_dhV0YZdS6j''31!U90
%?]([7YZmD-k+Z7@C^=!uV1>bXA-)c9'1+"YJ;_?biHrF=R!^t8N=I-M`gNb@P5U=-M5_eL%nhK@YbT'ViC9.!8^dNu=X43OikcH]
%,h8C?M`d!Eli>cK![sN`)*GRsCn9ZrE,4'+$(*NIS+oK@`'m8a#tL][m;Om;ZNKuo8;Z4Kna1:j_K"O(QKq,jr7hijL_NOE0F9_5
%M5R6\HEs?F`#$;<^kn!7"<8?,7E^O>nkq=Z@^h'$O>s6o%u0(U63T4nO>\<DU*]MdUX8g[3#Xbl:o-u_"+E]l>YgU&mnrk'\5?\F
%n0?-M,]S:s/2As5#]d`AY6\gkE7P<O:ktd_Yr<gYWiWNh1c>jHUDQ@\l2iS1@S\rjR;[kUOht6GHr"i7l$HM>Ckj#GSdRK_>YgOF
%LWgrKBYf^_BsfY7Ona)VPe.QA<>\U,/></RNFQUg''ob_Q`@j+%C-))!#]ZPGg-d9Ek)tJ_,0&kKB\;79[a^BZ@E>"fZ3`>VpP3^
%3#\W0iRhiin5oE3k_Yi)4YkV!5:RWhDIhFl,gOa9['2hQSjPq/gb95Fb68EJp]mhn^eFR>B-h@6n$Wofr(&SFc]+[AYnTtrKu?oW
%K2MtYM=2nh)E)C>T!NXJ$@@cXd6*8!\9hDdPD5ahgIgfgq(dSFK3B&bAHiOo_U:Q'BG?KH</.(Y[$B-RnmrTs6ae"".!o*.\q(FJ
%"4_a+UjV+,&iNM]ATLCtL>+MR]uW(ep^P%aaa:rL9uT6c)+J]MqabfNIns_^Q[u;3=tIW+:Ve?g'?t/D$:-344XFG[lbRpNU91YD
%JP%K4'1\a#4G>X8KrC:3Ss$9SUi8CBs#"C>`=l%`h49XkE%hX5Q%Y`h)XbWd59,gn3hJbR)LD_3nW8#',91]fL5X/Dq69%@LRY?C
%iD*"B'C*H*9Ub^k8G>RR'N]5n=K\Zs9C*nZ4lQ4G'^q/"RbbJt/71'gA[eSB3)C2NL7dSa`<b>kPS97oier.6TV*tOg/>TD5u&lX
%4]*+-^Q!][;UV*;.f2br(>?L$2[=RX>1B#]5R3b#N/2$tOZ=S$n.bSH4P5)g"hD`]09[ftYQ0q%6nF*U`sTj$4A;&-+Ju^8H1&K+
%7ucW(neB6>4LgML+&S@/^J5=^OrVBZ:^E/ZdU6Mj,3f:o:2W]9;26@DT[K9UPQ6?T`QK^!j[t"$OUDoI7F24p@NPa0#tMl:hI.K/
%h?h6:"l<Z0"PsGT\cpr!*sCK+_W1(!A+:5,MrNLnn$!=SmhkBoq/:86!q1iNs1jRL%he#oMbs$"(Hh9CkMjkjn*uG?n$18QJbSq0
%JbRf!ZbUqc,QGGb<5b.,"Pn%e3.kpRn[P5(+*`fY&AXmthrE\YGQo>p3h?uq6H=-[iQqljEDU`Y:'*75NfsI)Nh7a4-CoZ#T*)rO
%&g5ZnS31aOSj<@K:@Ohm28__E3c9o`;!N90,+q!2#?l5q[CDh"\Zn7!&Q0XqM$L*A3Jm7jGYUA3*R@<1=sr7H\IA\3"P@iZ-Q^!^
%k9NBu'6$PRh%\l$nXOhP4+XIHT\8l$E7hDLnH>eiL)UTB5I&)Ud^V7fPuZnu?nRI)&=4_O+t*&9-(pmGLSJ:(?Dr[KTQP!Ani^&;
%T%mDZYH['+2'sAZ)JmD-011[Wh:<lD<YPkf[%9]C^_"_9G](p-)V#tX!/b6t8V1!1Mh2f%@3,g\`b;@1a92M[-*\g;L!I0FdAUW8
%3O!YVOB%6cid7CFIZM@T_i5#DKc=0t-V<oNj(Qc44*\\g@j>9()M<l"dIhH8J;Q$YTpQ=Qf,<RVEKMEU*0*](E01c[_GTNE3uj7&
%`0]sV;%gW6iS3<\L#^%0/D$)]q71M3$kpR]VTZ@10k.f#6+]5g)_GjbI21TaRTMWhP<[`N>EEq8%mFeGKUmc.HS@+K*3k$POjk&9
%Je-YuBc%Br5u6.3>Q0!EfNir*=>'NmZ9:dL+#iI94P,J8`@GpbWm!j;=mW.efdJk=?+VWkNB.I9!1jS1MtimJ'^YS@W&'1JA>4ae
%Sg\F9'_aaA`Q\NM.QeMboXUP=bn#dpZbuI,dDlDGfL6)kk9<\(-Scl]ap@a:=sWAa=D/W3nNon`<2dYb(^^]"dR_>meM:r.Z"t!g
%26eAGKu1=:d7C'ZW(E"&$b<K)OmSt5@4>m:=_LWV-JZ+O*D)\?2s/>Y&]_-R'UhV;+FFN0X>$e(>)e>4X(Z#Id6Ng*(N^QO4DYe4
%&p&pF;#%E5\1gT5_F+Q#bJquQJrXda#2]hZUPE88q2VD1?_d2:E+?b*iQ%5N8E0!_3OHsBmT)(K3X*=Z,0i.d6,]1BdJkO"W1acI
%9Pg!1ndn9\JaTUTUhmGVMn#^B4lIdl&SE)C+Q=s-'8_V^A&!eqTJ9=&;;o'),Koa*Bmsa6)>"_?:0iU\>$'r4;_bj[U57.A+qifB
%dL3EgB721qDZSZO%%6>!oNpBeK'8G-((:3Q2`!^ecj2%po0FN@\Ei.d_,H_+.iaCP2J`q4(nRQbgHXI(&uQ<8/IVXh2%,HMa+G=/
%[Mqg0nio7`$uL1-B>F_:E>2[A)4Js35Dfb)91'k9-,-;L17kHL@<%tCWY.tp`)A'HKf(94TU#;Dd^sqi``N[Ti^i'!:SL@:pP@)j
%O*fqDN9H"CnK.lZi0-LT+Glk<i[MB::DWXH"biV7pn#(E"6!$U("T!P<:a4\-NT4D#P,,'Uf5Zsg.LWd%8:0H>u9]q^W^:%V-'06
%!=_NoZ8<Qp>RDBH>=j6d,9=XO%sSdJ(NZ&?d?EdVld.#*<9ct;_h`3W#R>t_J7+"hBT,;@c'*ZIioC:]m"&k=D'ekC`^@fUE!HbJ
%6mEo8Bq>Gar%/XD>R.,<[$B;,0o*!4VSq>40Hk77c@mkdm[2J9#OH>aI"uQ6F>OmK-`GQLC5C0o*cQn#-AotfN!J)Jn\M-8BEnlK
%)B:RZ2]di@V_mk)*g6IVn*#oN6cGW6)L$7]Z#-0jKu4&S:*&b?)]`XFnR25+EH5c"TE@8dW`t+CInR&Z8)YVLGt6CI5pm5sI,)9W
%iPD?&rVXKE>JoqB`0Bl!)iLRi.n\5mZ0k(E$7*@R4gNPOjg5bB:ADXL/;B7f4'J$0/]E'I%If[eed4a?icW1OV6C?e`kUU9^S(`]
%oikbs,@fAh&X<LX/cr+"9N2GF7N.__8@LRIcW%SQdi(^OKER>9R>[aMF"tON\cUqBQ9rO/.Dd'_JAoun3*ApC+jYq?&94tm!`d$i
%V%@ZUpSirZ7jHrf8P'2/*/0JIfK^3l@44NKA9P-_q!^+,:>n0PIK_J@@P3V5/EdO9+l]6>8L)GWLq":BdKm/n67u;:?W`2-W,b8I
%2rkZ;Id+'bnR=*fo$6:20jKA[E%DeH"-2Ie6@`RVnG$oQ(D6K_a!L867*'9t(EW=1jW[$>j1+SEjX_2KiZ$'pa*V=,LsY!</f`F]
%a$kON`iM3%dMp@uK_*4W`C"o\?OgJV1%,AZhH2%*&\]4-`C"iZ?OgJUZ0s(Q]a`u4Z0uq9DX9Fc9K2A[%ag8_=b,\TET%m]*#AXA
%)p<q*EoV+_"ZUDDC@Q<!KV6#RTX^t753f#;c]@>;WX\:>`qN0TA"H.?irtFEi>jM9n3\E4rVNILf:rOQ#%4;'>gPnX_@>EODC3^;
%Q#0f.$s?F^fKm:VZ'AdF_G`/GKC*V7E#;1_&D/`I]AS$fFnXh0LS96ApebJ1n0?-M,]S:Sm?af:-(rZqR9fs[(kF@+P2t+1,oS.$
%UENI!"O60fm);@G%c5V^1d>6R-(b8g_&KJ$a\fhiKDD^g\ET/O_ib.-i%UF*HbiW7hh(671ih8K9\VHVKn`k%4[Ij@gGWW4JhIDD
%LS96A_BZp<i('%!7H1tAfs>*iJ2$SP3,,g)ekD_lA;Mk-B+^,0L?Gf9'ai'W>':eEL^l1.`LB8Y#7jJSkFu-l\6'G8!FKXdMOj0(
%To-?nYk$h$_GN#EF#+u4JX(.Vck*mns!?k8hBBge%mtp8E219jiCB4$8`K['&:4Q17%dFo"<@RoMdD_'3iiXLfYeumBL!8G0Qr1]
%WT4R&%&O1YcI,EbD]4bh5R)KM`'C#^FZ]_Q*Xp!sZm1oS)<;Ub.5l;\'D+'"GD)`!4pRS9BFm]H2?592"UdZf*C6b>gLh`*)MS<_
%iPpQ2_Mp(tOegYRF/Zm'#:^h-c\-of,=\p,-<3G:1`.2<@U6HNZ[f!*@4Z3H?UZbB!%fD"fdI#t4[cCT$Br:3A1?H;dCfuVVotlh
%U6#bAM\=n\Ne7'JCknc?auW-L&n(h.EZHkh3m@;cn=RTr?o./BE*W0hANGu64(JgUZJ(/B,A](e1T\sm,YD0s5Vl&qTX/T.&2?na
%k>3EPV?0dO:saGTT*7R^?`YA`(6"aRs&F9N4`]=IqA8LJQnJMWi3I77PF#'g/cc@ta<?C[q.9nJSPR&&I#smlr9phHm$T$_WG2(-
%FtH@;/SOp`==eX%peq&iC%4_BKHga#Q6$#[deNuu5;H?^BT4i**Dd4Eb+N*q5[Pde=oj8K&7JMa@l>r^n7ZOEcuX@Rm#,:XqC4qu
%SubJXmm?ui_:):CdJHYaR'hqHMcnZqG:Qbqg[EWD:GY*2Tnft.rLI]Md[jC(DR>+RY^Z/9'[aF'15.*Za"%Uq=W2O6c;0om7:h$X
%je9:/"\],h>d8JnN'JW-KsY6-ol5oub_Cp.@L``mA3h7r),iNPH;h/Ba(V"`\?cth(1op;DtA"pL"o"k;2XPe^nrH7=C=#i%"BGK
%:I:][IipMjA'c6QTOttf-q,%T.P`$82MV#kdT\XaUko@W"]K)[c&2VVQ#_grV+dZ9^XB*-k%1Bt37RLM`A:HA^aLNAghD*2BI7bk
%/BiZlMA4@t]r_S`+P4;YiEI+)%A`Yk!DW>'MTh\%9j+j><r+$QglA`K8cd+e-F<7<XTcf9cF5m;jZPY#3rK?in#q#=FTlbQ"Htd*
%LetQY[igo9[Pb0G:pGsl?f=3EYrB&AZs>a+EKl:%q^jX52W8`[6>^:<e(U9RhLa/#b_k9H^8ojCJ6`>12Gd`D9)Bd(DF%s<Chq2,
%iOqO<TdkM=dWbjLkaJ:oJ2#Mgh5Mmm%#3W_&P=S.Rb$=$\eStX?6B'ei1IsV8,/YH[.DUem*M#i02f/XX$1D=FJd%Ad-o#`[-X:Q
%?l=N'Epb\,Gh&-u5q&j/1p+I]<h@,<m6%ggfgJnmE2sHH3"f;B7u7n]Woe)Al@f]t)Aie<m!Kgp<%q!60D#Rqf!f(P[\c*pSr$8U
%p?&Ynm&NX9$FU-ULK\?Dq`PdmXdRHV)@?^U.EGYoIB4?eN$["1?V&HlV(;fJ7AsjcI#Qkk<d.)s\u6Z*J\Pi(W8-^N5hlrBZ/?58
%"4AZods$S3Uj."G=UKCqNo\?qdKqY?oo)fRHV,^s4Efj?PWF6e8:aW9]Ngcrj[6E-gR"nsKOmE+PP4*:Zr,^$;DQu#\fV=?;p2'p
%i\jff:$m3F&7p6(G=^EVBsG7S/BjHN]V't99/YUWYekcLUdX#tQ*Jr%oc.FcK:#h;h#;m>-_D^Y8&H:Q7nSmgTR*Da*_@8-!X/kP
%$*`jZ\Xgt`gEtM=P9]b2l><>f/,;K725Z11jIi>pP88MIGKE]u]f2I"KA^Ss/87oL*+0JpWOY3-31lr<T%5$Smm9o!$YCYqA%5i8
%r?Vh4_Cujrf@@a4Y21"Qf@?#f?(E_>Y,`cTqDq2On59XO0(hV/h5(l$oQ>m"]"X1Qkj$6.\ZQ\`p%=(/\BC8_K#sC<!4f7T=jXQ>
%L;S.VA3j:0%"@O-aF_-$^=&#m:l4D-CKeLiltQB[c4'oM(CE3+\Kdc2Fc_&I<n>@TU_KVrP>X6s3KO<LF!*mpSJ+m8auL>:W"I=+
%'VLot.14auP]EXiPEe5(3N//6;=$m:A2H/AbfS!G_45>p?dmS5f+t@IA7^a&:.dfU3@RBAQ'5+-;GKj3#j";YZHu5n$CREKJlHbg
%MFJir;J&e!.Z'[[JeW5:A#g0^bp)lU7I!&o0$]N%c-4EZ=Wmd_gP3eS9JJ;<74$\,0"lOob<Z@LrW?bolEAJ6Z,Vq!([rilQgkP-
%2$&Bs&')Wi-J^=8Q#$p&e+j)\_CP/^fcQ(/r^a)_'X0c71)lj@do*?`?/a,P"Y0^BaqtH&n*G#<j2eu>>:qH41`XD=OT`$VZJiY,
%AFS!>hc'[i@p_2H%Nr$2_'GXW"=!+s]+gmLa<9i.6u[(?78O=n'f;<e9oFt:pDba2iiGHSb[ca*CeJ9GGgnG.(Gf3sbs38`710BN
%,.us6QC!mW=*g%HpD#fC\>;@ALu:h0bX#U6CO<*Qaa=Sa3[p^.,"-o%mM$*$l&b.-AbiY;e:\@,l")g!g\,eUIjF%4%]t=\^p6k%
%l1hX,\6RqAOQaN[>_eL,m8:]EIR,LkBurUN]]0iA%<(^Q;D(lBKPR*),_BOJ]U6N3MA*<=C*F82DPpm0A<(J-_[nhc$8c0H7h/7p
%ak?H.#5TPV%sM\%PQKD@9kNG7@cQf<c+Y2CQ8::3["<;lV_FGp`/BLdqJ!TNoi'O[b=)W-s,FZq'(JfEs"9AI;5M3X+#ii-E[*@l
%.i8cZ-6GW3?Xbc8e:U,jdUmDCio(Aa!`ICF;Np@t[)b4Vml;;3NGP`X4MgN5aY]0Y7h*?X1merSO0<P.-E_!?I.kPWG>'E2QK"n6
%ODQX<+Bi_h+X,_>Q0&CK=F)H`9hc0BqX\[(?td]gWQ)f_pB*:HM:$277j&l@'WZ`uYcQ>b3^0GQ3I4Om4ukW\J?b$:*DQ7!Aq*HP
%3);bu%Vi449oL<DRRD,%'MXR_Yc"dq_&T;u<-$:WX_RtDfq0$X-SSEM%Q#n+fH9r7&J')!'pJdN#>JgjF,I*[UuBqYi#X`aIh+o1
%NM@s"Ph;+W(d^,Ro+3`)%6FYU^LHoD5T;kH$UY'kRcu9S`AE$!.=r)0GeJ)/+k8g\:tmE92_O?k)J7b<-p9;*B;*r[Uju19)Ujg_
%j&a7a]?5fE*1t4U^0@Pr#8hg6!UQYoCA,:`O(!R(jcH7K:/^jr@0e1_7#S)b64t"^DN&=01]`9ncbgc4(B1gq$)m/*`?.ni^7c"*
%rK2nk41#>eOd8F1B&iKPMlRLuACE^NiW=-BDZY_>+<j:;Kd"$C#=<-9U1q:J8g>[c\&<EIg2"4Th9+UW6mD,TZ.EcO36P?FWEPU!
%4=OP'gS"Us0@RC1Im:g=]OR+eDg(?b*-%:HlI$jZ`$m/&=Oq8WTde_?_8O[4+-;TbH*Ga;E>GZ)dUE94ZqIcdWn0-rfGsp9KHG&^
%3!EX3g05,h?r3Oc"H:P?[)rem9L.LOqXY;K2IID/USXFkX(Y4i;fk9C<%5(@Y*DSJ,JjSnBBN9O]`k+:1=<Jb_Adc3Y^X9JLG<SZ
%+7XQ-&HZk:gDk3rXm4?A'FCP7`tVS;C]?S%$nt0TK+U]*';\nf>$EeR5<(D-kB.A(aTl!:r'V"8)Xe65'Fp/+o,HGaO6kOs=)+CS
%('cS>Z"\KDn)DN>EH`Y(K_@ItaehmT>#d&F3YmW>BR($^@GAro0d27:+O,BE;*I&kb2u^-i\A#J7*?uHCJp&5lasVO@E<_"WIa>;
%i+iEYL%0e]%W5?6asfC*EYb3Pb8k_jY6\NV0;'Wi1rN%l")+32:t`%pnX7o]d+><`>a=;Mi">%KZZ1@%4@rG.8Sb!P34SR;Z?a\t
%f]D0FMKh'pU1&1>&*l&7^(ON;G1l?c*_)+q*CiOn9Pdh%[ihduO!/@EQ"6@'0jul,,R>Skk`=`_DF86YMd8jNZpWGj41**N3K,gf
%/\uJ/8h&aT)@<>f6BMo#beArK5\O%h))&'gMF;,Um)T^>8<F0PMR,)f&tqoh'C,]dPN(toL/#L_P2^;J,XRb?paVPA%ktSjjCTVh
%&XnqH*H?q_Um.iq,XRUpD_=T6okm"3CrS8ajF;V.JYZ(O3clWh'DeY\DGgfS\k+=hTpq9uKPj\F7d(%SVEN?5h4t`1FH]TZ68su-
%KPho$+`roGOO-]od0SPn$4se"'SXmCSih_T%A#\Ie4o4L-?YMeFJNfKN^E"Xh]@d,9hIF0]#i)8WLKu!Y@u[S]#d!G;E%aV,B\W"
%5jAQ='iHuP!i0]V73Qf;;NTB;jsl)7%A&ppXkOTAh%(ZPj0*fa`%.NnpC,6UNCOFFgYfH'>k??CVB'#"^k?5:,>"P2DihhC)@78_
%nSlNUkR>"8'Ih4)'0l\:#;EfW.a-7,.+1E/`(p2>YoU%U8--nc-F<5fW2i\ID0d.1-nSLA'8VKEIgRN]$24.L:bo"SYIJtVAK.GL
%=<RcEj4/)AEX]5CEN)j%W@!.7fFD<5Qs`_;A=<.(_03UD+9a;(R`rdLN[")!Era%5#0th>f2*:K:uoY:^k"</\K#'i=5u651l@U7
%%.IcW'6d+-FETPH1=UX;H)bAsX>r]$P>j(g@if#o2jZ&+Xp(o-m,,>`Qj0"k@b5@:0CFboXgJrp4'S'@J0@!/Fb`PsOsO+XOQ_tk
%]>I5b;lS:16(eC*]poKN:,U0*#jS1C@l?258sj>p#gj`3#;EUK2<:^_V5/301bka>V*>1=!NSa?BN_=VFF<@%nhhMEUIM`hJWrp5
%%MffL/CRL=@5Y/m@nlOB*j&g=e[9q=<^3'#""feFY,fJ!$/<]J,+YN=;&%>3[%$t.?.T//<VGld#>>6E?*S0&H>G%(;iP/CeW7fD
%/-0ofXrLnD93q#G0C3AC#b!FP!FFn<%^G-9DDX?lL47t0_/Aps>8R@1;P[*eN!dM9f`t[(/P%[jLqKk-juCkaU8P>a^bMZ*Wa[F[
%Bg!7L!DL/Dfclb$[!88$V2f7(&a7'p"c-XQ-@`ut=pd[mD&rOT+1R":@.,=1Sf;;_Xf`1l!bT%T#$V'`8.i_!;MXXZBL=(d2DY5r
%k5ekopDcouW+"m=jl\ZOZIZl%`Gt:e++b#$W)1VJ#jO)+XQe?QMA//&":tsL,;G_?O.UE!1[21ZW<onGD>-OE*q%B)-q.;T249G"
%*Q@#Q0W8,WJUKLpiij[9s%k\/0H>+P_'3Wc(Iu]b5Yj6n,dteU;\`J$Cc;QKGa9dOK('6%W4Se%43>FDSZ55UaMtC8o=#L,<VM4G
%OU-?+=a-JWLa+)dlY##ghM+j1g")DVB>Ss]HT?%Ii%n!^%W,^9)?rCsXOV4/-uI4NY!'*9_*s4O@pF#k!f/'F+<+YCH/+.i<[O9d
%hMANNr,%PZc'U[)&4],*H()iJnJ`'4/)-NDhLm&m+28<F*0&Rl>DOLH&u==CV<r+*V3Qn7[5W*4.t7D#Q^A_J,9UG^7(s8,[BcoK
%m7g3Bm6%gWfX<+>!N4arR<0B7Bk:Mtg7(3bE-1Z0^TL6g&4]!=KSY"#6>L.:e(U9Hnd;KR8OIFE-K5;e!&l.hM/Pa0X\:SMck&)(
%D$dn[)%h>_*t9F2XYS<W+.H>X"$T3p/n[pq+%dQ#/demtUXgl0V;`%^PU"#)Dd#.I6A-9N>i9hW\0OfP^B!Ss+HdXS+Bea_%\>bs
%gaYZq(!0V9SP0b6kml:)M]+%8$iI^WCE'9@#r$'^2^72N=N\Drb7N-^18Gtk]-s=f&t24%8'8Wh0pPsS5^sM]&9.Jf,JrI43Q_Ur
%Rp^/u+n\[0H@rfkELI)\4=ML?41nk29nq/-J"53s#MA_EOEgtc5Uc7m1Hgs^2+?,B3tS=@0is3`)0==FLXr^taasm^P__B4e:E4S
%cFCXRlH"R[c59F0eWC#@*G;S*OTg0(UtYkV\iMT%XK.%DID'mEG-[dE,GMn)UQ%^+nJ76o?2Lq#CHl/F#?fF(.G+DF$SHS[\NeVA
%?O2HeG`G>q?`^5k/$Gj1Uq#oY+WFk1</1(-Wsf/FCh5"$q8uNs``T*/!mWPiP/:B,Oqcb.%%Yk7b7mNm3/3S1p+hkSjtB(&*J9bX
%03oOUT#FBX%jR"#HqH731MklSf@k.WNEg'D5[uT;8]YP!Ou,WaP_@'q-qRo+;^;CIR3G422FC'WD2+31Fu)S8eY("L(gRbpS10#e
%$Hq*RKRM`Oq8=D\11kuU.0?=R5\Tt-Q;XgIZob/QUhn12/Q+aJk:ms0n6+ZtU&`jRVk8n;Osj';ib*R.5f?\K,i$l(=RqUnBnW48
%S+Xa/.pro;"DfR\R#ObPM)(5*JR@Uqe!Yg0pC$R5;+Ff%dm\q1nCM`6'L#2%15a<2`CKGc=G\4J9Jli=`-).@muo!F3C?HQOq*?r
%DV?1'WN'&h8jUWm9r?t"@`+'gKl_bP(<M@GS"uKgYR2u)7GHu*(CnY0%<SW1VTf/$*8lE;1?&Gj%K;6fi>gbWrB&U3dm.tUm+Ppd
%`'dET'mrLZ#RG#a3RQU3Cp<!Aa1&]&ls+(S)O'&O(s?+teMu;S&M?kDO9![hLH@nc78Mu+F\G)X](anALFD?D-><eu+jDU(R#FOn
%"O!(ZY2bu2gnMNY]X3Ko7h+Lu0]Kl1KSFT.\ZiN%TqRgiQU=)o5]GWr'-P:NH(-/":,N'*_0,gbgtP)[Z_m7OU*_M=qBHU-NjK-c
%!R$'AZgk#iQklZ\Y<`q>@`Veu^OV.uoH]q&KXi!<-1jp,'L(Um1'HU1SoY7nJJ:?!":uX/!K=.S-a>B7\V$W5RJ+[/4(&dP"YD5^
%R>t&NAMTG#/kHO."]Ogu^B&,9_ZQP!Q5Y/"R'W12D@jZ^=b7'$O]5M8Q:@"f7;L1977NZE!JlE2!/=;1kjctWR2X3qoT7R>fG>fW
%"+u+8[&I#73\kRM9$OqP1S9HF<bGuE8-Qo_@'gnebZM-i#oS%=@U\7YVL^%1"t=pH-"I.Hh([3M4F;DJ;`'>pTdisq<"hN!C^2ZT
%9f`.t/O!Bl2/'kKBX[d_&M7O/ZjKD+bCV(InS+\1S3rk@KdO?rW4[SBfFIUc&P(uE_.`b?6KYrCPps'id3?#XXD6$X?@7Z"cZmO1
%7bO?u:nK,[!FjTe),(_j)'^K_2;sFqk55Mgo^?#iX9QpTZ0Q<]->b#!:\[q$p7$j_+rh`FX.VT]V3PmlgO8m:6d%P^)'-);9uIVU
%n/WS=b&0TqX__e,Y2/,o=jFW?V\L2F@,:)flTT8h5po9A]^"TKlB#ED5!Em/Ne$VDg[>$"#c3fCVX;AeM!r*lLSlKO$0J0o>XhD9
%!_-s@VK3+L(bW7BBe%.PqG"m?&J43DbIni,8h8Yb[W$d@%]U-YMr(86M)YRR6<$\s@t/YEZrXUmD#jebf7FI0)o1gIJg1tsE\8d;
%$9D%!j"5L`A>ZX:XISl/iWoel?WFFZ]FCRA1=>a3j2Aaja9r)F!neeP<M#EUQQ0=jd1.%5]n(Vc)2Rfg`,qRoqGqnf8=^XBEha&B
%L[*FVHHdd'_d&1^d9KP)kCU@M`nH14]_jcL?lTJbI;3\YW8[?Y_!S2-[W0:@`7(1t,SA/oU/.brS;Yf)[Gp::QW%c^fjP<FWlGiK
%S?1\p"_D>+Ej:7e,:u$_C#kD]"eIUq_d\#kppJ$M),^ufY!tW*<kt0U&2Ma<o0sUdQ^"hN4o:L"::Y!j+_mBh/o^]&=F5Lsl@ce0
%mZ=mdL3_fOb_r/(N*@j2ZCq0+YC!3jiup+ZIeB%*CAD32KA]^&VZ!qR[/M7;(o>aN&4RN=nSlMjiE"fJg8QZLdA5,V1=64:(>Al6
%;SN2_oKQQ$0M"oS.?j`2JhIXg<>6li=fKMbI!?n5)q_hrF"j^#IrDgqW<%*dJiP<JPQ<"'Z4!G72:\+%UaI]p<j@WsOMd0Ib5+4`
%phG[a0eorcA-c[7bYaL$;k=AUPAT]K,PC#5IduOO`r,5K^OABE4&$W#r9=0L2rD@Hrl;pk[=>l=I.R$Cn)+&$rpA_(Mnf8hj831Y
%5M3ji>k-!]5JMVpI/Ec<\*nd=?[mQ,"%_`7oDMrWI.mBpn,IN'1MLb`:N%GlHkYV\S++VE2dp%,$2`^V)#(rqlH\K5_d>8pqTguY
%n84%?So[NN)\mU`V('0(Rge2JAm^$jW%<8/@\Y4f]B$qUHL8nmhrPc_:*4t8I7Gdo&k@C6k=@eK?$.H^JJK=eSJSnJ`mEuqnq9f1
%,rJAT1p;[D$,V3lS2\jCOu'9AS#F/L%I4.kAu"A/H(,WD#9h%'+7;1K-g,'p=h^e.1bE.&&9rL@0]Yp]%Q<pFoHj9D8V^VTp+d(C
%7UmAPg-ZnW0(X;\lRk0Y`KeUD9HK3]#;WoniXF_E29Z]-j*AlFg.q:;E"4GeKi8SWUeEt2]IO:$m1_p92YBP$(@JQ"j*YY0&;BgZ
%$gh3?Q1?8_0[%<8>U&uN^L@Q-1=-Zg'mj?Z-_E3hT5SI:]=T<>;>kK:]KgG-+sm>60(Xl7RZ^7-*b'1Pc_9Tmc!ReVYpqoVfqq@r
%Uq.cQ>B97dZ=Me&Y,8$<,KP.lDF9a2VjCm]@R:=6g^^2E$I*[YYA&T5-uF;B:?HaQq"De64\Vgm>g/l`_R(@98\jE7s23ZBhnAmS
%M_Eufr#]i!IX_1S]@ZM$Tst$OGFobeNi,'ic>WK)IZH_jlDlQ[*rb^)QQL^+c-Xf$c$o?An*.S*;o_#LbXK7-#H#PP=jC3g1`!a8
%iIuT;L$)ch?9ZsWJ?K+sB2MmC-\lVd9]8k,>QsjNj>rBjQ<Am/\+S#;FH"fK2p@#g-er@]m-/TbDU7oO[G:/$5Gjb7,EDQoD:-Nf
%:>W%IH727h+:6R<-bY:_-epls#YP<@)1?TY&M6^E1kVO_,Qtm*9EUM2c0UnZ,dF?196Hd#Od=s\]YN_j#t%AN)Y7!s:5_"LJ[S^p
%Z7^1u#U;Z=MQ*!T@R":uRf/Mo*IFJ"4POIeS"0"d`Dg0\@VK`+^"`2/LS,hdF2(kj&$d3?\kUV42t"$^.9)ZD3K[4K(nE%[S:%B/
%"kG62[/Zl?6gk^L".QJ"_q?[`]$6CqDs)rs1X'9]i&45GkDdI!`'``\*.9.CBkT7'%7//#1MJ9M)^8H,^J)4,g\X\$:,`0"bG)O@
%)PUu0rco2AdjH't$DAP.n`VcCT,<3<Qot'qj"ro;?0a2.IjW&IHAG38SS$i^Ubu-#ZHk1]dj-/M>?W^48ZC+2i&%XEoeDu6gV&=9
%W"]+WiABriXmnp3Eq^Hf9/t04EgDI&Jg$1F'5uVaE5X[eChZ3H1ro-E4CDWW'uQa"[]C<lOkkEo^2<m`\niNh*"pP;&k=M\N9?Ou
%")qq_8k*N^ispL/l"-J;o=1i"9Y;5URmf&,,kFZflr:qDGNeWl*UbPL]Vg1gj"N%5)T!(^T"JLN']]$ekS-eaXDqS:E51JbEDkF^
%N+FYI4KXb:`IPuLqE4e6?W#s*=/WXW7-!3]A#F:aYNYRO*FB;+H1$NA^GK0[7fiX+91rH1)%L-J9<O]0B]%)Sgq`el[OZDS;ld:M
%V%kQEnQj<!l)'f!D8lVDREna#j.r@@;c$4@>OA[4ILp0A5`Z81Tf&j2\YZ].M(+0p0'<8!P%E&6bIWjaSZWmnYKp_1Q^El<>4aZ?
%>V&L.%DOfj(8^[H5@GKHFgPk]o5/-f^j4#S>-o(40rdYmVPZMW.]XC*#E6-h*\bt]BDH&PL1*)iqAB$1N^/LOm=X?0b)(N62IMp)
%ZXqJEW7:MF<XdZ#Z#*_,;XO@u=$pc\\T,Js4ohW(j1V'lF82/86g+BY1uB@4B6m3h3+MHM_K+n)=OV]:7Jt?Q*qoN]kN&!kRStuC
%:Gd"T+%HTTlT#Vbb,5tT(u9A4X_T$bIuht50ChdL&rj#TAXt^rEh)Idr-hpQj`+(OBWe`,RT\(E'T%r8WgMgOS**tp?*%8?]n>JV
%L,AEQ?5_u?p^G+40tQfYT[T4NP"eS0P]E\h!3mjk358k`!t_Yp['%UDO0l(4j.6a'UPNNuOiAI$8F+tlhh%D(<;#8(#C`?4I6=Wm
%NNm?6IY$S(%jj=5ds@Q>iu;dUT,p*H(hfddMu$?CET;T`7\>)'3n,rs?JqY\<I*BK+W@_l/qD;$YuKmL?pp&*j>^6'q+&#,>-H9d
%jmHj/g"mqjlB:sYF3`KR`Y#`ElPJu(9`aD3Go%\K/;+dem_&30#Ps<1cT]dW-BEM"du>Lh"ihKB"9YdknuJtd5)kK2:I3)uj'"'_
%4>"<b!MY^*[9W:G#BXJMro=cAqI/dEQ]DZ`]1;#J9ft9[l%UNk5'Y762$E;Ng+_C=T9kU_Hhh[=*CKY`(1."5GkpPpqsm%(p4d;I
%WD1&'@%3L4@a2+'MjJp*c-&>Yk#ViaIJFYMlBf6\lL*2h?\e+Lq!S#t?N9TYrU52ZpZg:Y^Ad*9hql+sH[PGamY@E@s50<`lZ_fB
%EUr7AWT<Qdq_p`:>Ak!9rQgQ)jBnk.$3'5?+928:]Di,rg2Ld~>
%AI9_PrivateDataEnd
