%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fig6.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Gary Westfall
%%CreationDate: 11/1/18
%%BoundingBox: 0 0 504 323
%%HiResBoundingBox: 0 0 503.1118 322.2793
%%CropBox: 0 0 503.1118 322.2793
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 23.0.0 x530 R agm 4.7767 ct 5.4352
%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2018-10-30T08:44:47-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:MetadataDate>2018-10-30T08:44:47-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-10-30T08:44:47-04:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>164</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXnf5sSec/0h5bg&#xA;0IXJ09rlpNRS0S6JnkSSEQW0s9o8cltE6vK7Ss3p1QK9Q1MVTzS/MPm/VLQ3lno+ni2aWaKIzajM&#xA;khEMzxcmVbFwteFacjiqP+tecv8Aq16d/wBxCf8A7IsVd9a85f8AVr07/uIT/wDZFirvrXnL/q16&#xA;d/3EJ/8AsixV31rzl/1a9O/7iE//AGRYq7615y/6tenf9xCf/sixV31rzl/1a9O/7iE//ZFirvrX&#xA;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&#xA;Uk1KwiuIreS4jWaYFokLCrBetMkckQQCdyyOWIIBO5QmsalqNtHA2nWLXrSSqkgHwgKT1qfH+boO&#xA;+V5ssogcI4t2rPlnEDgjxbo6Vbt4nWNkhkKkJJvJxJGx4nhWnzy02Rts3S4iNtkJo1nqsFgkWpXf&#xA;r3IJ5OgFKV2HJhyPz2yvDCYjUjZasGOcY1M2XXOgabc6hb6hKrm4thSM82p1qK79j0pjLTxlISPM&#xA;LPTQlMTPMI30iPsyOo8Khv8AiQY5bTdwoAp5h/TSkSw/or0iGUp8fPx61r+FO1cprJx8xwU0Vl8T&#xA;mOCkfxuP50/4A/8ANWXbt+7uEx6yAD/JWh/EtjRWi70n/wB+v9yf80415rR73ek/+/X+5P8AmnGv&#xA;NaPegdJ0Z9Pku3N5NcfWpfVpJSiilKfM9zt2ynFh4CdybLTgwGBPqJs2mHBqfbbp1+Hx+WXU307i&#xA;385/D+mNLTuDfzt2/l7fRjS07g387d/5e/0Y0tO4t/Oete33dMaWncGp9tunX4fH5Y0tO4N/Oe/h&#xA;3+jtjS070x3JJ23qe3sNsaWnemtKVbw+039caWlO4tlmgki5EcwRUkkbim4ruPbBKNimM4WKSfzX&#xA;B6HkXWoag+npl0tQKDaB+g3oPAYxjQpMI8IASPQPK3l7zL+U3ljTtftUurFdK0+bhISArx2qFXqC&#xA;Ps++3jkmSh5e1S30LzrN5TgurTVJNRb69O4vLaO+tkjs4Yo/UsI4oV9MpAlGjJ61Kgb4qn/nDVvM&#xA;GmNpkulGzaGW6ihvLa6EhmljeRBJ6DK6LGYoPVmZ2DCifZpVgqxqxn8xD8vLuLy47NrMst6lqJ1k&#xA;jij5Xsodo5Y7af4wleHJWXlSu2KoHyNafm9YejJq8L3Tm0jj1Rbm+qOXFDG9kOE6vNEgZJFf0lkc&#xA;8mfviqUDyf8AmpNZR6fHqmrW0Zjb0tSN2zXHpD660nrxyXDf6RKz2lAsgAAPBohyXFUZ5muPzbsf&#xA;IXnISWaT31illdabdm4QrcxKyPqEXEsgRYreIitFLksaV6wy4xOJierXlxicTE9Wa/llp/me38j6&#xA;ZF5whjTzCBMbyFGSRYlad2hiDKWU+nCUXYncdT1wQxCMQO5GPEIxEedMlexs3minaFDLBX0XoKry&#xA;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&#xA;XYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <pdf:Keywords>ROOT</pdf:Keywords>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">sigmapt_centrality_one_frame</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.000000</stDim:w>
            <stDim:h>842.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>13.0d2e2</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman Italic.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:35cd2adc-a677-4f1e-b000-c59b7e4b06b9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:35cd2adc-a677-4f1e-b000-c59b7e4b06b9</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:8a0ad316-04e4-4197-b227-174071b9bfc6</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b604b42f-8f01-f643-86e1-79d1a85968ef</stRef:instanceID>
            <stRef:documentID>xmp.did:8a0ad316-04e4-4197-b227-174071b9bfc6</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:8a0ad316-04e4-4197-b227-174071b9bfc6</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8a0ad316-04e4-4197-b227-174071b9bfc6</stEvt:instanceID>
                  <stEvt:when>2018-10-09T12:40:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35cd2adc-a677-4f1e-b000-c59b7e4b06b9</stEvt:instanceID>
                  <stEvt:when>2018-10-30T08:44:47-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -322.279 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 322.279 li
503.112 322.279 li
503.112 0 li
cp
clp
.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
108.254 200.825 mo
111.21 200.825 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.749721 .679194 .670497 .901457 cmyk
@
108.254 159.857 mo
111.21 159.857 li
@
109.732 180.341 mo
109.732 155.596 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
108.254 155.596 mo
111.21 155.596 li
@
108.254 157.074 mo
108.254 155.596 li
111.21 155.596 li
111.21 157.074 li
@
109.732 180.341 mo
109.732 205.085 li
@
109.732 180.341 mo
135.494 102.722 li
150.822 103.235 li
169.737 75.3311 li
190.308 46.4116 li
213.925 31.6997 li
244.11 41.1089 li
318.915 25.5586 li
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
1 lw
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
f
109.732 178.863 mo
108.254 177.385 li
106.776 178.863 li
108.254 180.341 li
106.776 181.819 li
108.254 183.297 li
109.732 181.819 li
111.21 183.297 li
112.688 181.819 li
111.21 180.341 li
112.688 178.863 li
111.21 177.385 li
109.732 178.863 li
cp
135.494 101.244 mo
134.016 99.7656 li
132.538 101.244 li
134.016 102.722 li
132.538 104.2 li
134.016 105.678 li
135.494 104.2 li
136.972 105.678 li
138.45 104.2 li
136.972 102.722 li
138.45 101.244 li
136.972 99.7656 li
135.494 101.244 li
cp
150.822 101.757 mo
149.345 100.279 li
147.867 101.757 li
149.345 103.235 li
147.867 104.713 li
149.345 106.19 li
150.822 104.713 li
152.3 106.19 li
153.778 104.713 li
152.3 103.235 li
153.778 101.757 li
152.3 100.279 li
150.822 101.757 li
cp
169.737 73.853 mo
168.259 72.375 li
166.781 73.853 li
168.259 75.3311 li
166.781 76.8086 li
168.259 78.2856 li
169.737 76.8086 li
171.215 78.2856 li
172.693 76.8086 li
171.215 75.3311 li
172.693 73.853 li
171.215 72.375 li
169.737 73.853 li
cp
190.308 44.9336 mo
188.83 43.457 li
187.352 44.9336 li
188.83 46.4116 li
187.352 47.8896 li
188.83 49.3677 li
190.308 47.8896 li
191.786 49.3677 li
193.264 47.8896 li
191.786 46.4116 li
193.264 44.9336 li
191.786 43.457 li
190.308 44.9336 li
cp
213.925 30.2217 mo
212.447 28.7437 li
210.969 30.2217 li
212.447 31.6997 li
210.969 33.1777 li
212.447 34.6558 li
213.925 33.1777 li
215.403 34.6558 li
216.881 33.1777 li
215.403 31.6997 li
216.881 30.2217 li
215.403 28.7437 li
213.925 30.2217 li
cp
244.11 39.6309 mo
242.633 38.1528 li
241.155 39.6309 li
242.633 41.1089 li
241.155 42.5869 li
242.633 44.0649 li
244.11 42.5869 li
245.588 44.0649 li
247.066 42.5869 li
245.588 41.1089 li
247.066 39.6309 li
245.588 38.1528 li
244.11 39.6309 li
cp
318.915 24.082 mo
317.438 22.604 li
315.959 24.082 li
317.438 25.5586 li
315.959 27.0366 li
317.438 28.5146 li
318.915 27.0366 li
320.393 28.5146 li
321.871 27.0366 li
320.393 25.5586 li
321.871 24.082 li
320.393 22.604 li
318.915 24.082 li
cp
@
.5 lw
49.1938 275.468 mo
502.737 275.468 li
502.737 8.26074 li
49.1938 8.26074 li
49.1938 275.468 li
cp
0 0 0 0 cmyk
@
49.1938 275.468 mo
502.737 275.468 li
502.737 8.26074 li
49.1938 8.26074 li
49.1938 275.468 li
cp
.749721 .679194 .670497 .901457 cmyk
@
49.1938 275.468 mo
502.737 275.468 li
502.737 8.26074 li
49.1938 8.26074 li
49.1938 275.468 li
cp
0 0 0 0 cmyk
@
.75 lw
49.1938 275.468 mo
502.737 275.468 li
502.737 8.26074 li
49.1938 8.26074 li
49.1938 275.468 li
cp
.749721 .679194 .670497 .901457 cmyk
@
.5 lw
49.1938 275.468 mo
502.737 275.468 li
@
67.6694 271.46 mo
67.6694 275.468 li
@
82.001 271.46 mo
82.001 275.468 li
@
93.71 271.46 mo
93.71 275.468 li
@
103.611 271.46 mo
103.611 275.468 li
@
112.186 271.46 mo
112.186 275.468 li
@
119.751 271.46 mo
119.751 275.468 li
@
126.518 267.451 mo
126.518 275.468 li
@
171.034 271.46 mo
171.034 275.468 li
@
197.075 271.46 mo
197.075 275.468 li
@
215.551 271.46 mo
215.551 275.468 li
@
229.882 271.46 mo
229.882 275.468 li
@
241.592 271.46 mo
241.592 275.468 li
@
251.492 271.46 mo
251.492 275.468 li
@
260.068 271.46 mo
260.068 275.468 li
@
267.632 271.46 mo
267.632 275.468 li
@
274.399 267.451 mo
274.399 275.468 li
@
318.915 271.46 mo
318.915 275.468 li
@
344.956 271.46 mo
344.956 275.468 li
@
363.432 271.46 mo
363.432 275.468 li
@
377.763 271.46 mo
377.763 275.468 li
@
389.473 271.46 mo
389.473 275.468 li
@
399.373 271.46 mo
399.373 275.468 li
@
407.949 271.46 mo
407.949 275.468 li
@
415.513 271.46 mo
415.513 275.468 li
@
422.28 267.451 mo
422.28 275.468 li
@
466.795 271.46 mo
466.795 275.468 li
@
492.836 271.46 mo
492.836 275.468 li
@
49.1938 275.468 mo
49.1938 8.26074 li
@
62.8003 275.468 mo
49.1938 275.468 li
@
55.9971 266.561 mo
49.1938 266.561 li
@
55.9971 257.654 mo
49.1938 257.654 li
@
55.9971 248.747 mo
49.1938 248.747 li
@
55.9971 239.84 mo
49.1938 239.84 li
@
62.8003 230.934 mo
49.1938 230.934 li
@
55.9971 222.026 mo
49.1938 222.026 li
@
55.9971 213.119 mo
49.1938 213.119 li
@
55.9971 204.213 mo
49.1938 204.213 li
@
55.9971 195.306 mo
49.1938 195.306 li
@
62.8003 186.399 mo
49.1938 186.399 li
@
55.9971 177.492 mo
49.1938 177.492 li
@
55.9971 168.585 mo
49.1938 168.585 li
@
55.9971 159.678 mo
49.1938 159.678 li
@
55.9971 150.771 mo
49.1938 150.771 li
@
62.8003 141.864 mo
49.1938 141.864 li
@
55.9971 132.957 mo
49.1938 132.957 li
@
55.9971 124.05 mo
49.1938 124.05 li
@
55.9971 115.144 mo
49.1938 115.144 li
@
55.9971 106.237 mo
49.1938 106.237 li
@
62.8003 97.3301 mo
49.1938 97.3301 li
@
55.9971 88.4229 mo
49.1938 88.4229 li
@
55.9971 79.5156 mo
49.1938 79.5156 li
@
55.9971 70.6089 mo
49.1938 70.6089 li
@
55.9971 61.7017 mo
49.1938 61.7017 li
@
62.8003 52.7949 mo
49.1938 52.7949 li
@
55.9971 43.8877 mo
49.1938 43.8877 li
@
55.9971 34.981 mo
49.1938 34.981 li
@
55.9971 26.0737 mo
49.1938 26.0737 li
@
55.9971 17.167 mo
49.1938 17.167 li
@
62.8003 8.26074 mo
49.1938 8.26074 li
@
109.732 265.146 mo
135.494 241.062 li
150.822 236.61 li
169.737 233.664 li
190.308 232.423 li
213.925 229.629 li
244.11 227.195 li
318.915 222.673 li
0 .993286 1 0 cmyk
@
106.776 265.146 mo
106.776 261.205 112.688 261.205 112.688 265.146 cv
112.688 269.087 106.776 269.087 106.776 265.146 cv
cp
132.538 241.062 mo
132.538 237.12 138.45 237.12 138.45 241.062 cv
138.45 245.003 132.538 245.003 132.538 241.062 cv
cp
147.867 236.61 mo
147.867 232.669 153.778 232.669 153.778 236.61 cv
153.778 240.551 147.867 240.551 147.867 236.61 cv
cp
166.781 233.664 mo
166.781 229.723 172.693 229.723 172.693 233.664 cv
172.693 237.604 166.781 237.604 166.781 233.664 cv
cp
187.352 232.423 mo
187.352 228.482 193.264 228.482 193.264 232.423 cv
193.264 236.364 187.352 236.364 187.352 232.423 cv
cp
210.969 229.629 mo
210.969 225.688 216.881 225.688 216.881 229.629 cv
216.881 233.57 210.969 233.57 210.969 229.629 cv
cp
241.155 227.195 mo
241.155 223.255 247.066 223.255 247.066 227.195 cv
247.066 231.137 241.155 231.137 241.155 227.195 cv
cp
315.959 222.673 mo
315.959 218.732 321.871 218.732 321.871 222.673 cv
321.871 226.614 315.959 226.614 315.959 222.673 cv
cp
f
109.732 262.19 mo
109.732 252.919 li
@
108.254 252.919 mo
111.21 252.919 li
@
109.732 268.102 mo
109.732 275.468 li
@
108.254 275.468 mo
111.21 275.468 li
@
109.732 262.19 mo
109.732 260.4 li
@
108.254 260.4 mo
111.21 260.4 li
@
109.732 268.102 mo
109.732 269.892 li
@
108.254 269.892 mo
111.21 269.892 li
@
108.254 261.878 mo
108.254 260.4 li
111.21 260.4 li
111.21 261.878 li
@
108.254 268.413 mo
108.254 269.892 li
111.21 269.892 li
111.21 268.413 li
@
109.732 252.84 mo
109.732 249.834 li
.852903 .490181 .699306 .485023 cmyk
@
108.254 249.834 mo
111.21 249.834 li
@
109.732 258.751 mo
109.732 261.756 li
@
108.254 261.756 mo
111.21 261.756 li
@
109.732 255.795 mo
135.494 235.964 li
150.822 229.421 li
169.737 227.126 li
190.308 225.542 li
213.925 223.08 li
244.11 221.802 li
318.915 217.771 li
@
106.776 258.751 mo
112.688 258.751 li
112.688 252.84 li
106.776 252.84 li
106.776 258.751 li
cp
132.538 238.92 mo
138.45 238.92 li
138.45 233.008 li
132.538 233.008 li
132.538 238.92 li
cp
147.867 232.376 mo
153.778 232.376 li
153.778 226.465 li
147.867 226.465 li
147.867 232.376 li
cp
166.781 230.082 mo
172.692 230.082 li
172.692 224.171 li
166.781 224.171 li
166.781 230.082 li
cp
187.352 228.498 mo
193.264 228.498 li
193.264 222.586 li
187.352 222.586 li
187.352 228.498 li
cp
210.969 226.035 mo
216.88 226.035 li
216.88 220.124 li
210.969 220.124 li
210.969 226.035 li
cp
241.155 224.758 mo
247.066 224.758 li
247.066 218.846 li
241.155 218.846 li
241.155 224.758 li
cp
315.959 220.728 mo
321.872 220.728 li
321.872 214.815 li
315.959 214.815 li
315.959 220.728 li
cp
f
1 lw
106.776 258.751 mo
112.688 258.751 li
112.688 252.84 li
106.776 252.84 li
106.776 258.751 li
cp
132.538 238.92 mo
138.45 238.92 li
138.45 233.008 li
132.538 233.008 li
132.538 238.92 li
cp
147.867 232.376 mo
153.778 232.376 li
153.778 226.465 li
147.867 226.465 li
147.867 232.376 li
cp
166.781 230.082 mo
172.692 230.082 li
172.692 224.171 li
166.781 224.171 li
166.781 230.082 li
cp
187.352 228.498 mo
193.264 228.498 li
193.264 222.586 li
187.352 222.586 li
187.352 228.498 li
cp
210.969 226.035 mo
216.88 226.035 li
216.88 220.124 li
210.969 220.124 li
210.969 226.035 li
cp
241.155 224.758 mo
247.066 224.758 li
247.066 218.846 li
241.155 218.846 li
241.155 224.758 li
cp
315.959 220.728 mo
321.872 220.728 li
321.872 214.815 li
315.959 214.815 li
315.959 220.728 li
cp
@
.5 lw
109.732 180.341 mo
109.732 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
108.254 205.085 mo
111.21 205.085 li
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 233.395 mo
135.494 224.345 li
150.822 220.395 li
169.737 217.75 li
190.308 216.081 li
213.925 213.066 li
244.11 213.767 li
318.915 209.452 li
.883848 .768521 0 0 cmyk
@
109.732 236.351 mo
111.702 233.395 li
109.732 230.438 li
107.761 233.395 li
109.732 236.351 li
cp
135.494 227.301 mo
137.464 224.345 li
135.494 221.389 li
133.523 224.345 li
135.494 227.301 li
cp
150.822 223.351 mo
152.793 220.395 li
150.822 217.438 li
148.852 220.395 li
150.822 223.351 li
cp
169.737 220.705 mo
171.707 217.75 li
169.737 214.794 li
167.766 217.75 li
169.737 220.705 li
cp
190.308 219.037 mo
192.279 216.081 li
190.308 213.126 li
188.338 216.081 li
190.308 219.037 li
cp
213.925 216.022 mo
215.896 213.066 li
213.925 210.11 li
211.954 213.066 li
213.925 216.022 li
cp
244.11 216.723 mo
246.081 213.767 li
244.11 210.812 li
242.14 213.767 li
244.11 216.723 li
cp
318.915 212.408 mo
320.886 209.452 li
318.915 206.496 li
316.945 209.452 li
318.915 212.408 li
cp
f
1 lw
109.732 236.351 mo
111.702 233.395 li
109.732 230.438 li
107.761 233.395 li
109.732 236.351 li
cp
135.494 227.301 mo
137.464 224.345 li
135.494 221.389 li
133.523 224.345 li
135.494 227.301 li
cp
150.822 223.351 mo
152.793 220.395 li
150.822 217.438 li
148.852 220.395 li
150.822 223.351 li
cp
169.737 220.705 mo
171.707 217.75 li
169.737 214.794 li
167.766 217.75 li
169.737 220.705 li
cp
190.308 219.037 mo
192.279 216.081 li
190.308 213.126 li
188.338 216.081 li
190.308 219.037 li
cp
213.925 216.022 mo
215.896 213.066 li
213.925 210.11 li
211.954 213.066 li
213.925 216.022 li
cp
244.11 216.723 mo
246.081 213.767 li
244.11 210.812 li
242.14 213.767 li
244.11 216.723 li
cp
318.915 212.408 mo
320.886 209.452 li
318.915 206.496 li
316.945 209.452 li
318.915 212.408 li
cp
@
.5 lw
109.732 180.341 mo
109.732 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
108.254 205.085 mo
111.21 205.085 li
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 218.46 mo
109.732 215.828 li
.271061 .816037 0 0 cmyk
@
108.254 215.828 mo
111.21 215.828 li
@
109.732 218.46 mo
109.732 221.093 li
@
108.254 221.093 mo
111.21 221.093 li
@
135.494 208.038 mo
135.494 206.425 li
@
134.016 206.425 mo
136.972 206.425 li
@
135.494 208.038 mo
135.494 209.65 li
@
134.016 209.65 mo
136.972 209.65 li
@
150.822 206.074 mo
150.822 205.439 li
@
149.345 205.439 mo
152.3 205.439 li
@
150.822 206.074 mo
150.822 206.708 li
@
149.345 206.708 mo
152.3 206.708 li
@
169.737 204.179 mo
169.737 203.823 li
@
168.259 203.823 mo
171.215 203.823 li
@
169.737 204.179 mo
169.737 204.535 li
@
168.259 204.535 mo
171.215 204.535 li
@
190.308 201.81 mo
190.308 201.522 li
@
188.83 201.522 mo
191.786 201.522 li
@
190.308 201.81 mo
190.308 202.096 li
@
188.83 202.096 mo
191.786 202.096 li
@
213.925 198.104 mo
213.925 197.991 li
@
212.447 197.991 mo
215.403 197.991 li
@
213.925 198.104 mo
213.925 198.216 li
@
212.447 198.216 mo
215.403 198.216 li
@
244.11 200.837 mo
244.11 200.193 li
@
242.633 200.193 mo
245.588 200.193 li
@
244.11 200.837 mo
244.11 201.479 li
@
242.633 201.479 mo
245.588 201.479 li
@
318.915 196.488 mo
318.915 196.124 li
@
317.438 196.124 mo
320.393 196.124 li
@
318.915 196.488 mo
318.915 196.853 li
@
317.438 196.853 mo
320.393 196.853 li
@
109.732 218.46 mo
135.494 208.038 li
150.822 206.074 li
169.737 204.179 li
190.308 201.81 li
213.925 198.104 li
244.11 200.837 li
318.915 196.488 li
@
109.732 215.505 mo
108.993 217.722 li
106.776 218.46 li
108.993 219.199 li
109.732 221.416 li
110.471 219.199 li
112.688 218.46 li
110.471 217.722 li
109.732 215.505 li
cp
135.494 205.082 mo
134.755 207.299 li
132.538 208.038 li
134.755 208.776 li
135.494 210.993 li
136.233 208.776 li
138.45 208.038 li
136.233 207.299 li
135.494 205.082 li
cp
150.822 203.118 mo
150.083 205.335 li
147.867 206.074 li
150.083 206.813 li
150.822 209.029 li
151.561 206.813 li
153.778 206.074 li
151.561 205.335 li
150.822 203.118 li
cp
169.737 201.223 mo
168.998 203.439 li
166.781 204.179 li
168.998 204.918 li
169.737 207.135 li
170.476 204.918 li
172.693 204.179 li
170.476 203.439 li
169.737 201.223 li
cp
190.308 198.854 mo
189.569 201.071 li
187.352 201.81 li
189.569 202.549 li
190.308 204.766 li
191.047 202.549 li
193.264 201.81 li
191.047 201.071 li
190.308 198.854 li
cp
213.925 195.147 mo
213.186 197.365 li
210.969 198.104 li
213.186 198.843 li
213.925 201.059 li
214.664 198.843 li
216.881 198.104 li
214.664 197.365 li
213.925 195.147 li
cp
244.11 197.881 mo
243.372 200.098 li
241.155 200.837 li
243.372 201.576 li
244.11 203.793 li
244.849 201.576 li
247.066 200.837 li
244.849 200.098 li
244.11 197.881 li
cp
318.915 193.532 mo
318.176 195.749 li
315.959 196.488 li
318.176 197.227 li
318.915 199.443 li
319.654 197.227 li
321.871 196.488 li
319.654 195.749 li
318.915 193.532 li
cp
f
1 lw
109.732 215.505 mo
108.993 217.722 li
106.776 218.46 li
108.993 219.199 li
109.732 221.416 li
110.471 219.199 li
112.688 218.46 li
110.471 217.722 li
109.732 215.505 li
cp
135.494 205.082 mo
134.755 207.299 li
132.538 208.038 li
134.755 208.776 li
135.494 210.993 li
136.233 208.776 li
138.45 208.038 li
136.233 207.299 li
135.494 205.082 li
cp
150.822 203.118 mo
150.083 205.335 li
147.867 206.074 li
150.083 206.813 li
150.822 209.029 li
151.561 206.813 li
153.778 206.074 li
151.561 205.335 li
150.822 203.118 li
cp
169.737 201.223 mo
168.998 203.439 li
166.781 204.179 li
168.998 204.918 li
169.737 207.135 li
170.476 204.918 li
172.693 204.179 li
170.476 203.439 li
169.737 201.223 li
cp
190.308 198.854 mo
189.569 201.071 li
187.352 201.81 li
189.569 202.549 li
190.308 204.766 li
191.047 202.549 li
193.264 201.81 li
191.047 201.071 li
190.308 198.854 li
cp
213.925 195.147 mo
213.186 197.365 li
210.969 198.104 li
213.186 198.843 li
213.925 201.059 li
214.664 198.843 li
216.881 198.104 li
214.664 197.365 li
213.925 195.147 li
cp
244.11 197.881 mo
243.372 200.098 li
241.155 200.837 li
243.372 201.576 li
244.11 203.793 li
244.849 201.576 li
247.066 200.837 li
244.849 200.098 li
244.11 197.881 li
cp
318.915 193.532 mo
318.176 195.749 li
315.959 196.488 li
318.176 197.227 li
318.915 199.443 li
319.654 197.227 li
321.871 196.488 li
319.654 195.749 li
318.915 193.532 li
cp
@
.5 lw
109.732 180.341 mo
109.732 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
108.254 205.085 mo
111.21 205.085 li
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 198.31 mo
109.732 197.267 li
.51809 0 .125673 0 cmyk
@
108.254 197.267 mo
111.21 197.267 li
@
109.732 201.266 mo
109.732 202.309 li
@
108.254 202.309 mo
111.21 202.309 li
@
135.494 191.25 mo
135.494 190.726 li
@
134.016 190.726 mo
136.972 190.726 li
@
135.494 194.206 mo
135.494 194.729 li
@
134.016 194.729 mo
136.972 194.729 li
@
109.732 199.788 mo
135.494 192.728 li
150.822 190.561 li
169.737 188.624 li
190.308 184.628 li
213.925 180.061 li
244.11 183.487 li
318.915 180.544 li
@
109.732 196.832 mo
110.396 198.875 li
112.543 198.875 li
110.806 200.137 li
111.469 202.179 li
109.732 200.917 li
107.995 202.179 li
108.658 200.137 li
106.921 198.875 li
109.068 198.875 li
109.732 196.832 li
cp
135.494 189.771 mo
136.157 191.814 li
138.305 191.814 li
136.568 193.077 li
137.231 195.119 li
135.494 193.856 li
133.756 195.119 li
134.42 193.077 li
132.683 191.814 li
134.83 191.814 li
135.494 189.771 li
cp
150.822 187.605 mo
151.486 189.646 li
153.634 189.646 li
151.896 190.91 li
152.56 192.952 li
150.822 191.689 li
149.085 192.952 li
149.749 190.91 li
148.011 189.646 li
150.159 189.646 li
150.822 187.605 li
cp
169.737 185.669 mo
170.401 187.711 li
172.548 187.711 li
170.811 188.973 li
171.474 191.016 li
169.737 189.753 li
168 191.016 li
168.663 188.973 li
166.926 187.711 li
169.073 187.711 li
169.737 185.669 li
cp
190.308 181.672 mo
190.972 183.714 li
193.119 183.714 li
191.382 184.977 li
192.046 187.019 li
190.308 185.757 li
188.571 187.019 li
189.235 184.977 li
187.497 183.714 li
189.645 183.714 li
190.308 181.672 li
cp
213.925 177.105 mo
214.589 179.148 li
216.736 179.148 li
214.999 180.41 li
215.662 182.453 li
213.925 181.19 li
212.188 182.453 li
212.851 180.41 li
211.114 179.148 li
213.261 179.148 li
213.925 177.105 li
cp
244.11 180.531 mo
244.774 182.573 li
246.922 182.573 li
245.184 183.836 li
245.848 185.878 li
244.11 184.616 li
242.373 185.878 li
243.037 183.836 li
241.299 182.573 li
243.447 182.573 li
244.11 180.531 li
cp
318.915 177.588 mo
319.579 179.63 li
321.727 179.63 li
319.989 180.893 li
320.653 182.935 li
318.915 181.673 li
317.178 182.935 li
317.842 180.893 li
316.104 179.63 li
318.251 179.63 li
318.915 177.588 li
cp
f
1 lw
109.732 196.832 mo
110.396 198.875 li
112.543 198.875 li
110.806 200.137 li
111.469 202.179 li
109.732 200.917 li
107.995 202.179 li
108.658 200.137 li
106.921 198.875 li
109.068 198.875 li
109.732 196.832 li
cp
135.494 189.771 mo
136.157 191.814 li
138.305 191.814 li
136.568 193.077 li
137.231 195.119 li
135.494 193.856 li
133.756 195.119 li
134.42 193.077 li
132.683 191.814 li
134.83 191.814 li
135.494 189.771 li
cp
150.822 187.605 mo
151.486 189.646 li
153.634 189.646 li
151.896 190.91 li
152.56 192.952 li
150.822 191.689 li
149.085 192.952 li
149.749 190.91 li
148.011 189.646 li
150.159 189.646 li
150.822 187.605 li
cp
169.737 185.669 mo
170.401 187.711 li
172.548 187.711 li
170.811 188.973 li
171.474 191.016 li
169.737 189.753 li
168 191.016 li
168.663 188.973 li
166.926 187.711 li
169.073 187.711 li
169.737 185.669 li
cp
190.308 181.672 mo
190.972 183.714 li
193.119 183.714 li
191.382 184.977 li
192.046 187.019 li
190.308 185.757 li
188.571 187.019 li
189.235 184.977 li
187.497 183.714 li
189.645 183.714 li
190.308 181.672 li
cp
213.925 177.105 mo
214.589 179.148 li
216.736 179.148 li
214.999 180.41 li
215.662 182.453 li
213.925 181.19 li
212.188 182.453 li
212.851 180.41 li
211.114 179.148 li
213.261 179.148 li
213.925 177.105 li
cp
244.11 180.531 mo
244.774 182.573 li
246.922 182.573 li
245.184 183.836 li
245.848 185.878 li
244.11 184.616 li
242.373 185.878 li
243.037 183.836 li
241.299 182.573 li
243.447 182.573 li
244.11 180.531 li
cp
318.915 177.588 mo
319.579 179.63 li
321.727 179.63 li
319.989 180.893 li
320.653 182.935 li
318.915 181.673 li
317.178 182.935 li
317.842 180.893 li
316.104 179.63 li
318.251 179.63 li
318.915 177.588 li
cp
@
.5 lw
108.254 205.085 mo
111.21 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 175.927 mo
135.494 172.002 li
150.822 173.539 li
169.737 167.495 li
190.308 163.813 li
213.925 159.054 li
244.11 164.505 li
318.915 161.413 li
.612146 0 .902617 0 cmyk
@
108.747 176.913 mo
108.747 178.883 li
110.717 178.883 li
110.717 176.913 li
112.688 176.913 li
112.688 174.942 li
110.717 174.942 li
110.717 172.971 li
108.747 172.971 li
108.747 174.942 li
106.776 174.942 li
106.776 176.913 li
108.747 176.913 li
cp
134.509 172.987 mo
134.509 174.958 li
136.479 174.958 li
136.479 172.987 li
138.45 172.987 li
138.45 171.016 li
136.479 171.016 li
136.479 169.046 li
134.509 169.046 li
134.509 171.016 li
132.538 171.016 li
132.538 172.987 li
134.509 172.987 li
cp
149.837 174.525 mo
149.837 176.495 li
151.808 176.495 li
151.808 174.525 li
153.778 174.525 li
153.778 172.554 li
151.808 172.554 li
151.808 170.584 li
149.837 170.584 li
149.837 172.554 li
147.867 172.554 li
147.867 174.525 li
149.837 174.525 li
cp
168.752 168.48 mo
168.752 170.451 li
170.722 170.451 li
170.722 168.48 li
172.693 168.48 li
172.693 166.51 li
170.722 166.51 li
170.722 164.539 li
168.752 164.539 li
168.752 166.51 li
166.781 166.51 li
166.781 168.48 li
168.752 168.48 li
cp
189.323 164.798 mo
189.323 166.769 li
191.294 166.769 li
191.294 164.798 li
193.264 164.798 li
193.264 162.827 li
191.294 162.827 li
191.294 160.857 li
189.323 160.857 li
189.323 162.827 li
187.352 162.827 li
187.352 164.798 li
189.323 164.798 li
cp
212.94 160.039 mo
212.94 162.01 li
214.91 162.01 li
214.91 160.039 li
216.881 160.039 li
216.881 158.069 li
214.91 158.069 li
214.91 156.098 li
212.94 156.098 li
212.94 158.069 li
210.969 158.069 li
210.969 160.039 li
212.94 160.039 li
cp
243.125 165.49 mo
243.125 167.461 li
245.096 167.461 li
245.096 165.49 li
247.066 165.49 li
247.066 163.519 li
245.096 163.519 li
245.096 161.549 li
243.125 161.549 li
243.125 163.519 li
241.155 163.519 li
241.155 165.49 li
243.125 165.49 li
cp
317.93 162.398 mo
317.93 164.369 li
319.901 164.369 li
319.901 162.398 li
321.871 162.398 li
321.871 160.428 li
319.901 160.428 li
319.901 158.457 li
317.93 158.457 li
317.93 160.428 li
315.959 160.428 li
315.959 162.398 li
317.93 162.398 li
cp
f
1 lw
108.747 176.913 mo
108.747 178.883 li
110.717 178.883 li
110.717 176.913 li
112.688 176.913 li
112.688 174.942 li
110.717 174.942 li
110.717 172.971 li
108.747 172.971 li
108.747 174.942 li
106.776 174.942 li
106.776 176.913 li
108.747 176.913 li
cp
134.509 172.987 mo
134.509 174.958 li
136.479 174.958 li
136.479 172.987 li
138.45 172.987 li
138.45 171.016 li
136.479 171.016 li
136.479 169.046 li
134.509 169.046 li
134.509 171.016 li
132.538 171.016 li
132.538 172.987 li
134.509 172.987 li
cp
149.837 174.525 mo
149.837 176.495 li
151.808 176.495 li
151.808 174.525 li
153.778 174.525 li
153.778 172.554 li
151.808 172.554 li
151.808 170.584 li
149.837 170.584 li
149.837 172.554 li
147.867 172.554 li
147.867 174.525 li
149.837 174.525 li
cp
168.752 168.48 mo
168.752 170.451 li
170.722 170.451 li
170.722 168.48 li
172.693 168.48 li
172.693 166.51 li
170.722 166.51 li
170.722 164.539 li
168.752 164.539 li
168.752 166.51 li
166.781 166.51 li
166.781 168.48 li
168.752 168.48 li
cp
189.323 164.798 mo
189.323 166.769 li
191.294 166.769 li
191.294 164.798 li
193.264 164.798 li
193.264 162.827 li
191.294 162.827 li
191.294 160.857 li
189.323 160.857 li
189.323 162.827 li
187.352 162.827 li
187.352 164.798 li
189.323 164.798 li
cp
212.94 160.039 mo
212.94 162.01 li
214.91 162.01 li
214.91 160.039 li
216.881 160.039 li
216.881 158.069 li
214.91 158.069 li
214.91 156.098 li
212.94 156.098 li
212.94 158.069 li
210.969 158.069 li
210.969 160.039 li
212.94 160.039 li
cp
243.125 165.49 mo
243.125 167.461 li
245.096 167.461 li
245.096 165.49 li
247.066 165.49 li
247.066 163.519 li
245.096 163.519 li
245.096 161.549 li
243.125 161.549 li
243.125 163.519 li
241.155 163.519 li
241.155 165.49 li
243.125 165.49 li
cp
317.93 162.398 mo
317.93 164.369 li
319.901 164.369 li
319.901 162.398 li
321.871 162.398 li
321.871 160.428 li
319.901 160.428 li
319.901 158.457 li
317.93 158.457 li
317.93 160.428 li
315.959 160.428 li
315.959 162.398 li
317.93 162.398 li
cp
@
.5 lw
108.254 205.085 mo
111.21 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 163.738 mo
109.732 162.246 li
.742672 .712398 0 0 cmyk
@
108.254 162.246 mo
111.21 162.246 li
@
109.732 163.738 mo
109.732 165.229 li
@
108.254 165.229 mo
111.21 165.229 li
@
135.494 151.848 mo
135.494 150.193 li
@
134.016 150.193 mo
136.972 150.193 li
@
135.494 151.848 mo
135.494 153.503 li
@
134.016 153.503 mo
136.972 153.503 li
@
150.822 150.78 mo
150.822 149.11 li
@
149.345 149.11 mo
152.3 149.11 li
@
150.822 150.78 mo
150.822 152.45 li
@
149.345 152.45 mo
152.3 152.45 li
@
169.737 142.757 mo
169.737 141.65 li
@
168.259 141.65 mo
171.215 141.65 li
@
169.737 142.757 mo
169.737 143.863 li
@
168.259 143.863 mo
171.215 143.863 li
@
190.308 137.477 mo
190.308 136.481 li
@
188.83 136.481 mo
191.786 136.481 li
@
190.308 137.477 mo
190.308 138.474 li
@
188.83 138.474 mo
191.786 138.474 li
@
213.925 131.668 mo
213.925 131.237 li
@
212.447 131.237 mo
215.403 131.237 li
@
213.925 131.668 mo
213.925 132.1 li
@
212.447 132.1 mo
215.403 132.1 li
@
244.11 140.062 mo
244.11 138.719 li
@
242.633 138.719 mo
245.588 138.719 li
@
244.11 140.062 mo
244.11 141.405 li
@
242.633 141.405 mo
245.588 141.405 li
@
318.915 134.127 mo
318.915 133.657 li
@
317.438 133.657 mo
320.393 133.657 li
@
318.915 134.127 mo
318.915 134.597 li
@
317.438 134.597 mo
320.393 134.597 li
@
109.732 163.738 mo
135.494 151.848 li
150.822 150.78 li
169.737 142.757 li
190.308 137.477 li
213.925 131.668 li
244.11 140.062 li
318.915 134.127 li
@
109.732 163.738 mo
111.21 160.782 li
112.688 162.26 li
109.732 163.738 li
112.688 165.216 li
111.21 166.694 li
109.732 163.738 li
108.254 166.694 li
106.776 165.216 li
109.732 163.738 li
106.776 162.26 li
108.254 160.782 li
109.732 163.738 li
cp
135.494 151.848 mo
136.972 148.893 li
138.45 150.37 li
135.494 151.848 li
138.45 153.326 li
136.972 154.804 li
135.494 151.848 li
134.016 154.804 li
132.538 153.326 li
135.494 151.848 li
132.538 150.37 li
134.016 148.893 li
135.494 151.848 li
cp
150.822 150.78 mo
152.3 147.824 li
153.778 149.302 li
150.822 150.78 li
153.778 152.258 li
152.3 153.736 li
150.822 150.78 li
149.345 153.736 li
147.867 152.258 li
150.822 150.78 li
147.867 149.302 li
149.345 147.824 li
150.822 150.78 li
cp
169.737 142.757 mo
171.215 139.801 li
172.693 141.279 li
169.737 142.757 li
172.693 144.234 li
171.215 145.712 li
169.737 142.757 li
168.259 145.712 li
166.781 144.234 li
169.737 142.757 li
166.781 141.279 li
168.259 139.801 li
169.737 142.757 li
cp
190.308 137.477 mo
191.786 134.522 li
193.264 135.999 li
190.308 137.477 li
193.264 138.955 li
191.786 140.433 li
190.308 137.477 li
188.83 140.433 li
187.352 138.955 li
190.308 137.477 li
187.352 135.999 li
188.83 134.522 li
190.308 137.477 li
cp
213.925 131.668 mo
215.403 128.713 li
216.881 130.19 li
213.925 131.668 li
216.881 133.146 li
215.403 134.624 li
213.925 131.668 li
212.447 134.624 li
210.969 133.146 li
213.925 131.668 li
210.969 130.19 li
212.447 128.713 li
213.925 131.668 li
cp
244.11 140.062 mo
245.588 137.106 li
247.066 138.584 li
244.11 140.062 li
247.066 141.54 li
245.588 143.018 li
244.11 140.062 li
242.633 143.018 li
241.155 141.54 li
244.11 140.062 li
241.155 138.584 li
242.633 137.106 li
244.11 140.062 li
cp
318.915 134.127 mo
320.393 131.171 li
321.871 132.649 li
318.915 134.127 li
321.871 135.605 li
320.393 137.083 li
318.915 134.127 li
317.438 137.083 li
315.959 135.605 li
318.915 134.127 li
315.959 132.649 li
317.438 131.171 li
318.915 134.127 li
cp
f
1 lw
109.732 163.738 mo
111.21 160.782 li
112.688 162.26 li
109.732 163.738 li
112.688 165.216 li
111.21 166.694 li
109.732 163.738 li
108.254 166.694 li
106.776 165.216 li
109.732 163.738 li
106.776 162.26 li
108.254 160.782 li
109.732 163.738 li
cp
135.494 151.848 mo
136.972 148.893 li
138.45 150.37 li
135.494 151.848 li
138.45 153.326 li
136.972 154.804 li
135.494 151.848 li
134.016 154.804 li
132.538 153.326 li
135.494 151.848 li
132.538 150.37 li
134.016 148.893 li
135.494 151.848 li
cp
150.822 150.78 mo
152.3 147.824 li
153.778 149.302 li
150.822 150.78 li
153.778 152.258 li
152.3 153.736 li
150.822 150.78 li
149.345 153.736 li
147.867 152.258 li
150.822 150.78 li
147.867 149.302 li
149.345 147.824 li
150.822 150.78 li
cp
169.737 142.757 mo
171.215 139.801 li
172.693 141.279 li
169.737 142.757 li
172.693 144.234 li
171.215 145.712 li
169.737 142.757 li
168.259 145.712 li
166.781 144.234 li
169.737 142.757 li
166.781 141.279 li
168.259 139.801 li
169.737 142.757 li
cp
190.308 137.477 mo
191.786 134.522 li
193.264 135.999 li
190.308 137.477 li
193.264 138.955 li
191.786 140.433 li
190.308 137.477 li
188.83 140.433 li
187.352 138.955 li
190.308 137.477 li
187.352 135.999 li
188.83 134.522 li
190.308 137.477 li
cp
213.925 131.668 mo
215.403 128.713 li
216.881 130.19 li
213.925 131.668 li
216.881 133.146 li
215.403 134.624 li
213.925 131.668 li
212.447 134.624 li
210.969 133.146 li
213.925 131.668 li
210.969 130.19 li
212.447 128.713 li
213.925 131.668 li
cp
244.11 140.062 mo
245.588 137.106 li
247.066 138.584 li
244.11 140.062 li
247.066 141.54 li
245.588 143.018 li
244.11 140.062 li
242.633 143.018 li
241.155 141.54 li
244.11 140.062 li
241.155 138.584 li
242.633 137.106 li
244.11 140.062 li
cp
318.915 134.127 mo
320.393 131.171 li
321.871 132.649 li
318.915 134.127 li
321.871 135.605 li
320.393 137.083 li
318.915 134.127 li
317.438 137.083 li
315.959 135.605 li
318.915 134.127 li
315.959 132.649 li
317.438 131.171 li
318.915 134.127 li
cp
@
.5 lw
108.254 205.085 mo
111.21 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
109.732 131.639 mo
109.732 113.583 li
.200259 1 1 .138399 cmyk
@
108.254 113.583 mo
111.21 113.583 li
@
109.732 131.639 mo
109.732 149.696 li
@
108.254 149.696 mo
111.21 149.696 li
@
135.494 118.07 mo
135.494 111.159 li
@
134.016 111.159 mo
136.972 111.159 li
@
135.494 118.07 mo
135.494 124.982 li
@
134.016 124.982 mo
136.972 124.982 li
@
150.822 121.467 mo
150.822 120.496 li
@
149.345 120.496 mo
152.3 120.496 li
@
150.822 121.467 mo
150.822 122.437 li
@
149.345 122.437 mo
152.3 122.437 li
@
169.737 109.879 mo
169.737 107.117 li
@
168.259 107.117 mo
171.215 107.117 li
@
169.737 109.879 mo
169.737 112.64 li
@
168.259 112.64 mo
171.215 112.64 li
@
190.308 101.869 mo
190.308 100.168 li
@
188.83 100.168 mo
191.786 100.168 li
@
190.308 101.869 mo
190.308 103.57 li
@
188.83 103.57 mo
191.786 103.57 li
@
213.925 90.4116 mo
213.925 89.6348 li
@
212.447 89.6348 mo
215.403 89.6348 li
@
213.925 90.4116 mo
213.925 91.189 li
@
212.447 91.189 mo
215.403 91.189 li
@
244.11 102.626 mo
244.11 100.97 li
@
242.633 100.97 mo
245.588 100.97 li
@
244.11 102.626 mo
244.11 104.281 li
@
242.633 104.281 mo
245.588 104.281 li
@
318.915 93.9487 mo
318.915 93.6738 li
@
317.438 93.6738 mo
320.393 93.6738 li
@
318.915 93.9487 mo
318.915 94.2236 li
@
317.438 94.2236 mo
320.393 94.2236 li
@
109.732 131.639 mo
135.494 118.07 li
150.822 121.467 li
169.737 109.879 li
190.308 101.869 li
213.925 90.4116 li
244.11 102.626 li
318.915 93.9487 li
@
110.225 131.147 mo
111.21 128.683 li
108.254 128.683 li
109.239 131.147 li
106.776 130.161 li
106.776 133.117 li
109.239 132.132 li
108.254 134.595 li
111.21 134.595 li
110.225 132.132 li
112.688 133.117 li
112.688 130.161 li
110.225 131.147 li
cp
135.986 117.578 mo
136.972 115.115 li
134.016 115.115 li
135.001 117.578 li
132.538 116.593 li
132.538 119.548 li
135.001 118.563 li
134.016 121.026 li
136.972 121.026 li
135.986 118.563 li
138.45 119.548 li
138.45 116.593 li
135.986 117.578 li
cp
151.315 120.974 mo
152.3 118.511 li
149.345 118.511 li
150.33 120.974 li
147.867 119.989 li
147.867 122.944 li
150.33 121.959 li
149.345 124.422 li
152.3 124.422 li
151.315 121.959 li
153.778 122.944 li
153.778 119.989 li
151.315 120.974 li
cp
170.23 109.386 mo
171.215 106.923 li
168.259 106.923 li
169.244 109.386 li
166.781 108.401 li
166.781 111.356 li
169.244 110.371 li
168.259 112.834 li
171.215 112.834 li
170.23 110.371 li
172.693 111.356 li
172.693 108.401 li
170.23 109.386 li
cp
190.801 101.376 mo
191.786 98.9131 li
188.83 98.9131 li
189.816 101.376 li
187.352 100.391 li
187.352 103.347 li
189.816 102.361 li
188.83 104.824 li
191.786 104.824 li
190.801 102.361 li
193.264 103.347 li
193.264 100.391 li
190.801 101.376 li
cp
214.418 89.9189 mo
215.403 87.4561 li
212.447 87.4561 li
213.432 89.9189 li
210.969 88.9336 li
210.969 91.8896 li
213.432 90.9048 li
212.447 93.3677 li
215.403 93.3677 li
214.418 90.9048 li
216.881 91.8896 li
216.881 88.9336 li
214.418 89.9189 li
cp
244.603 102.133 mo
245.588 99.6699 li
242.633 99.6699 li
243.618 102.133 li
241.155 101.148 li
241.155 104.104 li
243.618 103.119 li
242.633 105.582 li
245.588 105.582 li
244.603 103.119 li
247.066 104.104 li
247.066 101.148 li
244.603 102.133 li
cp
319.408 93.4561 mo
320.393 90.9927 li
317.438 90.9927 li
318.423 93.4561 li
315.959 92.4707 li
315.959 95.4268 li
318.423 94.4409 li
317.438 96.9048 li
320.393 96.9048 li
319.408 94.4409 li
321.871 95.4268 li
321.871 92.4707 li
319.408 93.4561 li
cp
f
1 lw
110.225 131.147 mo
111.21 128.683 li
108.254 128.683 li
109.239 131.147 li
106.776 130.161 li
106.776 133.117 li
109.239 132.132 li
108.254 134.595 li
111.21 134.595 li
110.225 132.132 li
112.688 133.117 li
112.688 130.161 li
110.225 131.147 li
cp
135.986 117.578 mo
136.972 115.115 li
134.016 115.115 li
135.001 117.578 li
132.538 116.593 li
132.538 119.548 li
135.001 118.563 li
134.016 121.026 li
136.972 121.026 li
135.986 118.563 li
138.45 119.548 li
138.45 116.593 li
135.986 117.578 li
cp
151.315 120.974 mo
152.3 118.511 li
149.345 118.511 li
150.33 120.974 li
147.867 119.989 li
147.867 122.944 li
150.33 121.959 li
149.345 124.422 li
152.3 124.422 li
151.315 121.959 li
153.778 122.944 li
153.778 119.989 li
151.315 120.974 li
cp
170.23 109.386 mo
171.215 106.923 li
168.259 106.923 li
169.244 109.386 li
166.781 108.401 li
166.781 111.356 li
169.244 110.371 li
168.259 112.834 li
171.215 112.834 li
170.23 110.371 li
172.693 111.356 li
172.693 108.401 li
170.23 109.386 li
cp
190.801 101.376 mo
191.786 98.9131 li
188.83 98.9131 li
189.816 101.376 li
187.352 100.391 li
187.352 103.347 li
189.816 102.361 li
188.83 104.824 li
191.786 104.824 li
190.801 102.361 li
193.264 103.347 li
193.264 100.391 li
190.801 101.376 li
cp
214.418 89.9189 mo
215.403 87.4561 li
212.447 87.4561 li
213.432 89.9189 li
210.969 88.9336 li
210.969 91.8896 li
213.432 90.9048 li
212.447 93.3677 li
215.403 93.3677 li
214.418 90.9048 li
216.881 91.8896 li
216.881 88.9336 li
214.418 89.9189 li
cp
244.603 102.133 mo
245.588 99.6699 li
242.633 99.6699 li
243.618 102.133 li
241.155 101.148 li
241.155 104.104 li
243.618 103.119 li
242.633 105.582 li
245.588 105.582 li
244.603 103.119 li
247.066 104.104 li
247.066 101.148 li
244.603 102.133 li
cp
319.408 93.4561 mo
320.393 90.9927 li
317.438 90.9927 li
318.423 93.4561 li
315.959 92.4707 li
315.959 95.4268 li
318.423 94.4409 li
317.438 96.9048 li
320.393 96.9048 li
319.408 94.4409 li
321.871 95.4268 li
321.871 92.4707 li
319.408 93.4561 li
cp
@
.5 lw
108.254 205.085 mo
111.21 205.085 li
.749721 .679194 .670497 .901457 cmyk
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
135.494 102.722 mo
135.494 95.5459 li
@
134.016 95.5459 mo
136.972 95.5459 li
@
135.494 102.722 mo
135.494 109.897 li
@
134.016 109.897 mo
136.972 109.897 li
@
150.822 103.235 mo
150.822 92.5278 li
@
149.345 92.5278 mo
152.3 92.5278 li
@
150.822 103.235 mo
150.822 113.941 li
@
149.345 113.941 mo
152.3 113.941 li
@
169.737 75.3311 mo
169.737 69.8667 li
@
168.259 69.8667 mo
171.215 69.8667 li
@
169.737 75.3311 mo
169.737 80.7949 li
@
168.259 80.7949 mo
171.215 80.7949 li
@
190.308 46.4116 mo
190.308 45.3916 li
@
188.83 45.3916 mo
191.786 45.3916 li
@
190.308 46.4116 mo
190.308 47.4326 li
@
188.83 47.4326 mo
191.786 47.4326 li
@
213.925 31.6997 mo
213.925 27.7988 li
@
212.447 27.7988 mo
215.403 27.7988 li
@
213.925 31.6997 mo
213.925 35.6021 li
@
212.447 35.6021 mo
215.403 35.6021 li
@
244.11 41.1089 mo
244.11 38.146 li
@
242.633 38.146 mo
245.588 38.146 li
@
244.11 41.1089 mo
244.11 44.0718 li
@
242.633 44.0718 mo
245.588 44.0718 li
@
318.915 25.5586 mo
318.915 23.3457 li
@
317.438 23.3457 mo
320.393 23.3457 li
@
318.915 25.5586 mo
318.915 27.7729 li
@
317.438 27.7729 mo
320.393 27.7729 li
@
108.254 205.085 mo
111.21 205.085 li
@
135.494 102.722 mo
135.494 88.1021 li
@
134.016 88.1021 mo
136.972 88.1021 li
@
135.494 102.722 mo
135.494 117.342 li
@
134.016 117.342 mo
136.972 117.342 li
@
150.822 103.235 mo
150.822 93.0479 li
@
149.345 93.0479 mo
152.3 93.0479 li
@
150.822 103.235 mo
150.822 113.422 li
@
149.345 113.422 mo
152.3 113.422 li
@
169.737 75.3311 mo
169.737 67.5439 li
@
168.259 67.5439 mo
171.215 67.5439 li
@
169.737 75.3311 mo
169.737 83.1167 li
@
168.259 83.1167 mo
171.215 83.1167 li
@
190.308 46.4116 mo
190.308 37.3047 li
@
188.83 37.3047 mo
191.786 37.3047 li
@
190.308 46.4116 mo
190.308 55.52 li
@
188.83 55.52 mo
191.786 55.52 li
@
213.925 31.6997 mo
213.925 22.4131 li
@
212.447 22.4131 mo
215.403 22.4131 li
@
213.925 31.6997 mo
213.925 40.9878 li
@
212.447 40.9878 mo
215.403 40.9878 li
@
244.11 41.1089 mo
244.11 32.936 li
@
242.633 32.936 mo
245.588 32.936 li
@
244.11 41.1089 mo
244.11 49.2817 li
@
242.633 49.2817 mo
245.588 49.2817 li
@
318.915 25.5586 mo
318.915 17.1699 li
@
317.438 17.1699 mo
320.393 17.1699 li
@
318.915 25.5586 mo
318.915 33.9487 li
@
317.438 33.9487 mo
320.393 33.9487 li
@
108.254 203.606 mo
108.254 205.085 li
111.21 205.085 li
111.21 203.606 li
@
134.016 89.5801 mo
134.016 88.1021 li
136.972 88.1021 li
136.972 89.5801 li
@
134.016 115.864 mo
134.016 117.342 li
136.972 117.342 li
136.972 115.864 li
@
149.345 94.5259 mo
149.345 93.0479 li
152.3 93.0479 li
152.3 94.5259 li
@
149.345 111.944 mo
149.345 113.422 li
152.3 113.422 li
152.3 111.944 li
@
168.259 69.022 mo
168.259 67.5439 li
171.215 67.5439 li
171.215 69.022 li
@
168.259 81.6387 mo
168.259 83.1167 li
171.215 83.1167 li
171.215 81.6387 li
@
188.83 38.7827 mo
188.83 37.3047 li
191.786 37.3047 li
191.786 38.7827 li
@
188.83 54.042 mo
188.83 55.52 li
191.786 55.52 li
191.786 54.042 li
@
212.447 23.8906 mo
212.447 22.4131 li
215.403 22.4131 li
215.403 23.8906 li
@
212.447 39.5098 mo
212.447 40.9878 li
215.403 40.9878 li
215.403 39.5098 li
@
242.633 34.4141 mo
242.633 32.936 li
245.588 32.936 li
245.588 34.4141 li
@
242.633 47.8037 mo
242.633 49.2817 li
245.588 49.2817 li
245.588 47.8037 li
@
317.438 18.6479 mo
317.438 17.1699 li
320.393 17.1699 li
320.393 18.6479 li
@
317.438 32.4707 mo
317.438 33.9487 li
320.393 33.9487 li
320.393 32.4707 li
@
484.526 234.26 mo
484.526 230.319 490.438 230.319 490.438 234.26 cv
490.438 238.201 484.526 238.201 484.526 234.26 cv
cp
0 .993286 1 0 cmyk
@
487.482 231.305 mo
487.482 231.214 li
@
486.003 231.214 mo
488.959 231.214 li
@
487.482 237.216 mo
487.482 237.307 li
@
486.003 237.307 mo
488.959 237.307 li
@
484.526 234.26 mo
484.526 230.319 490.438 230.319 490.438 234.26 cv
490.438 238.201 484.526 238.201 484.526 234.26 cv
cp
@
486.003 232.691 mo
486.003 231.214 li
488.959 231.214 li
488.959 232.691 li
@
486.003 235.828 mo
486.003 237.307 li
488.959 237.307 li
488.959 235.828 li
@
484.526 230.015 mo
490.438 230.015 li
490.438 224.103 li
484.526 224.103 li
484.526 230.015 li
cp
.852903 .490181 .699306 .485023 cmyk
@
487.482 224.103 mo
487.482 223.585 li
@
486.003 223.585 mo
488.959 223.585 li
@
487.482 230.015 mo
487.482 230.532 li
@
486.003 230.532 mo
488.959 230.532 li
@
484.526 230.015 mo
490.438 230.015 li
490.438 224.103 li
484.526 224.103 li
484.526 230.015 li
cp
@
486.003 225.063 mo
486.003 223.585 li
488.959 223.585 li
488.959 225.063 li
@
486.003 229.055 mo
486.003 230.532 li
488.959 230.532 li
488.959 229.055 li
@
487.482 219.126 mo
489.453 216.17 li
487.482 213.214 li
485.511 216.17 li
487.482 219.126 li
cp
.883848 .768521 0 0 cmyk
@
487.482 219.126 mo
489.453 216.17 li
487.482 213.214 li
485.511 216.17 li
487.482 219.126 li
cp
@
487.482 201.741 mo
487.482 201.646 li
.271061 .816037 0 0 cmyk
@
486.003 201.646 mo
488.959 201.646 li
@
487.482 201.741 mo
487.482 201.836 li
@
486.003 201.836 mo
488.959 201.836 li
@
487.482 198.785 mo
486.743 201.002 li
484.526 201.741 li
486.743 202.479 li
487.482 204.697 li
488.221 202.479 li
490.438 201.741 li
488.221 201.002 li
487.482 198.785 li
cp
@
487.482 201.741 mo
487.482 199.173 li
@
486.003 199.173 mo
488.959 199.173 li
@
487.482 201.741 mo
487.482 204.309 li
@
486.003 204.309 mo
488.959 204.309 li
@
487.482 198.785 mo
486.743 201.002 li
484.526 201.741 li
486.743 202.479 li
487.482 204.697 li
488.221 202.479 li
490.438 201.741 li
488.221 201.002 li
487.482 198.785 li
cp
0 0 0 0 cmyk
f
487.482 198.785 mo
486.743 201.002 li
484.526 201.741 li
486.743 202.479 li
487.482 204.697 li
488.221 202.479 li
490.438 201.741 li
488.221 201.002 li
487.482 198.785 li
cp
.271061 .816037 0 0 cmyk
@
486.003 200.65 mo
486.003 199.173 li
488.959 199.173 li
488.959 200.65 li
@
486.003 202.831 mo
486.003 204.309 li
488.959 204.309 li
488.959 202.831 li
@
487.482 180.793 mo
488.146 182.836 li
490.292 182.836 li
488.556 184.098 li
489.219 186.14 li
487.482 184.878 li
485.745 186.14 li
486.408 184.098 li
484.67 182.836 li
486.818 182.836 li
487.482 180.793 li
cp
.51809 0 .125673 0 cmyk
@
487.482 181.976 mo
487.482 180.755 li
@
486.003 180.755 mo
488.959 180.755 li
@
487.482 185.523 mo
487.482 186.743 li
@
486.003 186.743 mo
488.959 186.743 li
@
487.482 180.793 mo
488.146 182.836 li
490.292 182.836 li
488.556 184.098 li
489.219 186.14 li
487.482 184.878 li
485.745 186.14 li
486.408 184.098 li
484.67 182.836 li
486.818 182.836 li
487.482 180.793 li
cp
@
486.003 182.233 mo
486.003 180.755 li
488.959 180.755 li
488.959 182.233 li
@
486.003 185.265 mo
486.003 186.743 li
488.959 186.743 li
488.959 185.265 li
@
487.482 158.103 mo
487.482 157.512 li
.612146 0 .902617 0 cmyk
@
486.003 157.512 mo
488.959 157.512 li
@
487.482 164.015 mo
487.482 164.606 li
@
486.003 164.606 mo
488.959 164.606 li
@
486.003 158.99 mo
486.003 157.512 li
488.959 157.512 li
488.959 158.99 li
@
486.003 163.128 mo
486.003 164.606 li
488.959 164.606 li
488.959 163.128 li
@
487.482 131.911 mo
487.482 131.674 li
.742672 .712398 0 0 cmyk
@
486.003 131.674 mo
488.959 131.674 li
@
487.482 131.911 mo
487.482 132.148 li
@
486.003 132.148 mo
488.959 132.148 li
@
487.482 131.911 mo
488.959 128.955 li
490.438 130.433 li
487.482 131.911 li
490.438 133.389 li
488.959 134.867 li
487.482 131.911 li
486.003 134.867 li
484.526 133.389 li
487.482 131.911 li
484.526 130.433 li
486.003 128.955 li
487.482 131.911 li
cp
@
487.482 131.911 mo
487.482 127.606 li
@
486.003 127.606 mo
488.959 127.606 li
@
487.482 131.911 mo
487.482 136.216 li
@
486.003 136.216 mo
488.959 136.216 li
@
487.482 131.911 mo
488.959 128.955 li
490.438 130.433 li
487.482 131.911 li
490.438 133.389 li
488.959 134.867 li
487.482 131.911 li
486.003 134.867 li
484.526 133.389 li
487.482 131.911 li
484.526 130.433 li
486.003 128.955 li
487.482 131.911 li
cp
0 0 0 0 cmyk
f
487.482 131.911 mo
488.959 128.955 li
490.438 130.433 li
487.482 131.911 li
490.438 133.389 li
488.959 134.867 li
487.482 131.911 li
486.003 134.867 li
484.526 133.389 li
487.482 131.911 li
484.526 130.433 li
486.003 128.955 li
487.482 131.911 li
cp
.742672 .712398 0 0 cmyk
@
486.003 129.084 mo
486.003 127.606 li
488.959 127.606 li
488.959 129.084 li
@
486.003 134.738 mo
486.003 136.216 li
488.959 136.216 li
488.959 134.738 li
@
487.482 91.6738 mo
487.482 91.2036 li
.200259 1 1 .138399 cmyk
@
486.003 91.2036 mo
488.959 91.2036 li
@
487.482 91.6738 mo
487.482 92.144 li
@
486.003 92.144 mo
488.959 92.144 li
@
487.482 91.6738 mo
488.959 88.7178 li
486.003 88.7178 li
488.959 94.6299 li
486.003 94.6299 li
487.482 91.6738 li
490.438 90.1958 li
490.438 93.1519 li
484.526 90.1958 li
484.526 93.1519 li
487.482 91.6738 li
cp
@
487.482 91.6738 mo
487.482 91.2036 li
@
486.003 91.2036 mo
488.959 91.2036 li
@
487.482 91.6738 mo
487.482 92.144 li
@
486.003 92.144 mo
488.959 92.144 li
@
487.482 91.6738 mo
488.959 88.7178 li
486.003 88.7178 li
488.959 94.6299 li
486.003 94.6299 li
487.482 91.6738 li
490.438 90.1958 li
490.438 93.1519 li
484.526 90.1958 li
484.526 93.1519 li
487.482 91.6738 li
cp
0 0 0 0 cmyk
f
487.482 91.6738 mo
488.959 88.7178 li
486.003 88.7178 li
488.959 94.6299 li
486.003 94.6299 li
487.482 91.6738 li
490.438 90.1958 li
490.438 93.1519 li
484.526 90.1958 li
484.526 93.1519 li
487.482 91.6738 li
cp
.200259 1 1 .138399 cmyk
@
486.003 92.6816 mo
486.003 91.2036 li
488.959 91.2036 li
488.959 92.6816 li
@
486.003 90.666 mo
486.003 92.144 li
488.959 92.144 li
488.959 90.666 li
@
487.482 20.1069 mo
487.482 18.8101 li
.749721 .679194 .670497 .901457 cmyk
@
486.003 18.8101 mo
488.959 18.8101 li
@
487.482 20.1069 mo
487.482 21.4038 li
@
486.003 21.4038 mo
488.959 21.4038 li
@
487.482 18.6289 mo
486.003 17.1509 li
484.526 18.6289 li
486.003 20.1069 li
484.526 21.585 li
486.003 23.063 li
487.482 21.585 li
488.959 23.063 li
490.438 21.585 li
488.959 20.1069 li
490.438 18.6289 li
488.959 17.1509 li
487.482 18.6289 li
cp
@
487.482 20.1069 mo
487.482 12.3149 li
@
486.003 12.3149 mo
488.959 12.3149 li
@
487.482 20.1069 mo
487.482 27.8989 li
@
486.003 27.8989 mo
488.959 27.8989 li
@
487.482 18.6289 mo
486.003 17.1509 li
484.526 18.6289 li
486.003 20.1069 li
484.526 21.585 li
486.003 23.063 li
487.482 21.585 li
488.959 23.063 li
490.438 21.585 li
488.959 20.1069 li
490.438 18.6289 li
488.959 17.1509 li
487.482 18.6289 li
cp
@
486.003 13.793 mo
486.003 12.3149 li
488.959 12.3149 li
488.959 13.793 li
@
486.003 26.4209 mo
486.003 27.8989 li
488.959 27.8989 li
488.959 26.4209 li
@
[3 3 ] 0 dsh
318.915 222.673 mo
487.482 234.26 li
0 .993286 1 0 cmyk
@
318.915 217.771 mo
487.482 227.059 li
.852903 .490181 .699306 .485023 cmyk
@
318.915 209.452 mo
487.482 216.17 li
.883848 .768521 0 0 cmyk
@
318.915 196.488 mo
487.482 201.741 li
.271061 .816037 0 0 cmyk
@
318.915 180.544 mo
487.482 183.749 li
.51809 0 .125673 0 cmyk
@
318.915 161.413 mo
487.482 161.059 li
.612146 0 .902617 0 cmyk
@
318.915 134.127 mo
487.482 131.911 li
.742672 .712398 0 0 cmyk
@
318.915 93.9487 mo
487.482 91.6738 li
.200259 1 1 .138399 cmyk
@
318.915 25.5586 mo
487.482 20.1069 li
.749721 .679194 .670497 .901457 cmyk
@
106.776 265.146 mo
106.776 261.205 112.688 261.205 112.688 265.146 cv
112.688 269.087 106.776 269.087 106.776 265.146 cv
cp
132.538 241.062 mo
132.538 237.12 138.45 237.12 138.45 241.062 cv
138.45 245.003 132.538 245.003 132.538 241.062 cv
cp
147.867 236.61 mo
147.867 232.669 153.778 232.669 153.778 236.61 cv
153.778 240.551 147.867 240.551 147.867 236.61 cv
cp
166.781 233.664 mo
166.781 229.723 172.693 229.723 172.693 233.664 cv
172.693 237.604 166.781 237.604 166.781 233.664 cv
cp
187.352 232.423 mo
187.352 228.482 193.264 228.482 193.264 232.423 cv
193.264 236.364 187.352 236.364 187.352 232.423 cv
cp
210.969 229.629 mo
210.969 225.688 216.881 225.688 216.881 229.629 cv
216.881 233.57 210.969 233.57 210.969 229.629 cv
cp
241.155 227.195 mo
241.155 223.255 247.066 223.255 247.066 227.195 cv
247.066 231.137 241.155 231.137 241.155 227.195 cv
cp
315.959 222.673 mo
315.959 218.732 321.871 218.732 321.871 222.673 cv
321.871 226.614 315.959 226.614 315.959 222.673 cv
cp
0 .993286 1 0 cmyk
f
1 lw
[] 0 dsh
106.776 265.146 mo
106.776 261.205 112.688 261.205 112.688 265.146 cv
112.688 269.087 106.776 269.087 106.776 265.146 cv
cp
132.538 241.062 mo
132.538 237.12 138.45 237.12 138.45 241.062 cv
138.45 245.003 132.538 245.003 132.538 241.062 cv
cp
147.867 236.61 mo
147.867 232.669 153.778 232.669 153.778 236.61 cv
153.778 240.551 147.867 240.551 147.867 236.61 cv
cp
166.781 233.664 mo
166.781 229.723 172.693 229.723 172.693 233.664 cv
172.693 237.604 166.781 237.604 166.781 233.664 cv
cp
187.352 232.423 mo
187.352 228.482 193.264 228.482 193.264 232.423 cv
193.264 236.364 187.352 236.364 187.352 232.423 cv
cp
210.969 229.629 mo
210.969 225.688 216.881 225.688 216.881 229.629 cv
216.881 233.57 210.969 233.57 210.969 229.629 cv
cp
241.155 227.195 mo
241.155 223.255 247.066 223.255 247.066 227.195 cv
247.066 231.137 241.155 231.137 241.155 227.195 cv
cp
315.959 222.673 mo
315.959 218.732 321.871 218.732 321.871 222.673 cv
321.871 226.614 315.959 226.614 315.959 222.673 cv
cp
@
.749721 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 45 /hyphen put
dup 48 /zero put
dup 53 /five put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/percent <1C60D8A8C9B6B41CB58B94D8D18D555BC5BEBEC52562935C46122A
FAA0ED803E3529535992C453E7D39C781D037D8C60D56858EB62D5407C7BDFFF
0561EFA95048C2E6327B2C56953B4D447FAEA6BA9616D949A9F21B695CF6FFFF
96A8F94ED1C78A77DDD1A70AEEE65948B26F6C68E2D7FDE8A31D4B74D5501179
5EC8D162CDF753693F15B5AA4A992BED864233FE0C7EA3C38ACC8B2C4FCDB43A
9F46E5CCDF50F3E149810FDA5D16DFD9E6B5280E4F2FB916EA8D7443F4D0CB60
59CCDA3934E6671B634107BFE19354D8C202D44FD829DC6293AC970884F5D2CC
9E99B75D7A154B0414ED2E8B1FF497056830BA1DD37CEB0B5DDA3C7709801620
2DC0B7FCCA29D6FA785F8E1AEDB90F4F0137315CB64CB58CC77B9A0859824EFF
52344495528D08F4C7F6A5958F8956026AECA3202A9F2648885216561F87> |-
/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero 4{/.notdef}rp /five 
202{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [15 0 0 -15 0 0 ]msf
70.2446 270.84 mo
(0-5%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 3{/.notdef}rp 
/five 202{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
65.4106 256.879 mo
(5-10%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
2{/.notdef}rp /five 202{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4106 240.859 mo
(10-20%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /.notdef /five 202{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4106 224.65 mo
(20-30%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /four /five 202{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4106 206.557 mo
(30-40%)sh
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4106 183.876 mo
(40-50%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
/seven <1C60D8A8C9B7A73DFE31854B8CA51F015562FECC80A8475F282F7722
52E10D05B7D43981266F60616595AB1BFBC47BFB03D1BE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 54 /six put
dup 55 /seven put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /four /five /six /seven 200{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4102 139.617 mo
(60-70%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[37{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /four /five /six /seven /eight 199{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
81.0044 101.167 mo
(70-80%)sh
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
58.4106 167.061 mo
(50-60%)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB
335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A
6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB
014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC774
5E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4
D7DDC1356637FA048F199EDF19A428> |-
/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49
387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D
7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD
7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6
B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518
CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE9049
07DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB4
44BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE
13D22435E5FCC1B5A000DE> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D
24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E
9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2
556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD
574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F24910
7C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18C
E6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE9556
17323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D98
7ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFE
C679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82
B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B5179
96> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/y <1C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BA
F02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A
3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8
B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD
6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DB
F9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A
71BC990F312D4821883A95164BCE1683B85434AFA8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 70 /F put
dup 83 /S put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 115 /s put
dup 121 /y put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 7{/.notdef}rp /hyphen 2{/.notdef}rp /zero 
/one /two /three /four /five /six /seven /eight 
13{/.notdef}rp /F 12{/.notdef}rp /S 14{/.notdef}rp /b /.notdef /d 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef /o 
3{/.notdef}rp /s 5{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
228.293 248.747 mo
(Filled Symbols)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7E7C1AF20108BE9542537F46D63CC3CA2839958A1F5DF8
0C8F650E8951850C571859AA14DD682> |-
/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C49
5B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A
9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63
AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D739850711
02DFA93B6532> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 43 /plus put
dup 65 /A put
dup 117 /u put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A 4{/.notdef}rp /F 12{/.notdef}rp /S 
14{/.notdef}rp /b /.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /.notdef /o 3{/.notdef}rp /s /.notdef /u 
3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
228.293 265.547 mo
(Au+Au)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6079F6288DCC34B8AB15434B53D5CBCF7E29104F391BE1572
E1D4E07ABEE690B714C43DA0F68F9B727CD1B8007FE243EEEBD45E7815504A31
13BAFAC54AC3D3B019A1C9ACF716BD3362CCEE1A09F2069AE9AF5406AA47EF07
6128BEB6A74EB29D02BFBE8F43F41B56E48CC0FA84987A887327DB516D9441F2
C6BDCB9AC2AD82E8> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 79 /O put
dup 110 /n put
dup 112 /p put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A 4{/.notdef}rp /F 8{/.notdef}rp /O 
3{/.notdef}rp /S 14{/.notdef}rp /b /.notdef /d /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p 2{/.notdef}rp 
/s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
403.198 248.747 mo
(Open Symbols)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA34
5031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9D
EB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC94209715
8DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC739
9ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283
409DD22AD16B7DD28B54D5FC454C> |-
/E <1C60D8A8C9B7D8BE19945133FE501067A24BBF08B984801DD42E090C7BFC
A94BE6C4AA953A8A674F2ED3DEE261A8700CA873A3A1D3699D8129F8FA28DE52
C44FD8214EA37190B26E64C97677BF6E1856F59EF49286A31D4133D861C74CDB
92794376B13E311920B8F547FC8F105147550894C833300FA326DF7877402F2A
3FD3184C9B8E130B79DB62E2735C65FD4E7A86140D8A7D764E8F05488CC19495
58757A62743714E5384E2EF166B32CB849712A9C93B7CF04FCFE8063494A215F
A79B98816AEC20BC3F> |-
/I <1C60D8A8C9B81F2C3A0A02564E7D4C279888DF3754179E93227DE304C0C9
64F0884ECCD4584153E47F1EA31388FE202C61849A093340FE4B9D53774AFF48
A8CAE2304CA5B92609AD38240AA6AEAF6E8AB66763220047F647E30DE8B74D2A
7DF15DDA4EFCA27B915E1B9ED43E7C12> |-
/L <1C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA09
270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3C2
21DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF12
A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD68748B
847D2C24AD687E0CDB56> |-
/P <1C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458
925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7
D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886
C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CF
B31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF120
86F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC6
28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 80 /P put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F 2{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P 
2{/.notdef}rp /S 14{/.notdef}rp /b /.notdef /d /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p 2{/.notdef}rp 
/s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
403.198 265.547 mo
(ALICE Pb+Pb)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
118.429 289.063 mo
(10)
[8 0 ]xsh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
262.697 289.063 mo
(100)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 115 /s put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/s <1C60D8A8C9B7361F025C7C4D0303D6CE893F51D869BCCC57F238FED481B9
6AB0D6B406042D64909B5B15A441860ACAD524570DEF75E4EA76578FD91FD71A
8077FF6E23AAE6F0974095E4C999A83B7E16B60FBB6A5AE152855056216BA421
C7B30818AA939C216FDAB05C60988B0DD7002BC261826362CD346E3A6F514F9F
1431C9C48DFC0F46570808CB49BD9B3149C4A3AA291BC1EEAA3D03623F2375C9
388ABFFC392B3B4B21840AE82436B62C4B88BD91D9BCB6B1AFA172883784EBAA
7B75DEB4573067FB9BF34769691A6A89267BC4E51631D49211C8FFEA> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/FNBWVD+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/FNBWVD+TimesNewRomanPS-ItalicMT*1 
[115{/.notdef}rp /s 140{/.notdef}rp]
FNBWVD+TimesNewRomanPS-ItalicMT nf
FNBWVD+TimesNewRomanPS-ItalicMT*1 [16 0 0 -16 0 0 ]msf
252.174 312.785 mo
(s)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B
056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3A
BC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E
57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63
E63AE746DB94B9539BA648935E38> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F 2{/.notdef}rp /I 2{/.notdef}rp /L /.notdef /N /O 
/P 2{/.notdef}rp /S 14{/.notdef}rp /b /.notdef /d /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 
2{/.notdef}rp /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [9.25 0 0 -9.25 0 0 ]msf
258.174 317.941 mo
(N)sh
FNBWVC+TimesNewRomanPSMT*1 [9.25 0 0 -9.25 0 0 ]msf
264.706 317.941 mo
(N)sh
.03125 lw
241.659 311.441 mo
243.831 309.77 li
247.299 317.082 li
251.252 295.301 li
273.924 295.301 li
@
241.643 311.441 mo
243.831 309.754 li
247.299 317.098 li
251.237 295.285 li
273.924 295.285 li
273.924 296.066 li
251.862 296.066 li
247.674 319.379 li
246.893 319.379 li
242.956 311.035 li
241.956 311.848 li
241.643 311.441 li
cp
f
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
275.174 312.785 mo
( )sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F6D6E36005945EC7274CF8CD5EF5B42D280E6D8A4F608
6ADC4B88F4BA16F6A237691F3F760A6129A67DCE9322616B1D7BB21115511238
376B94C01432A999E95ACF02B9743B28C7A3C8109C25013AEA47EC71807E3BFE
6B26986496C6B96A2458AF130FF55F6939E40BA894719E24A717462CC4A00B11
ADE5809AB1E0B4D7805897BE50087CD64F5AEA7744526E08B0D657538988C41B
FE39A8735842D620E001E1A863F676AFB361CF4C81718CBC4A0CC5AC0D51A34A
CA7D8BBE5B5D6E8D466D858B118FBBA2161DB0F7E151EB0958EF2C5C3F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N 
/O /P 2{/.notdef}rp /S 14{/.notdef}rp /b /.notdef /d 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p 2{/.notdef}rp /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
286.643 312.785 mo
(G)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
297.956 312.785 mo
(e)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777BDE
67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD4A
5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712B5
02AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC078154F
7D9BB4AB2053> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N 
/O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 11{/.notdef}rp /b 
/.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p 2{/.notdef}rp /s /.notdef /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
304.956 312.785 mo
(V)sh
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Symbol def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
def
/FontBBox {-167 -299 1094 827} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE2
23F5D9796E7E2CD60A70D0> |-
/parenleft <1C60D8A8C9B81F2C3A259DE04BB646D6A9F900349551F5D59DD7
375C519B01EB6578CA7DFEFD86B92935CE558C989B90CF813DA114477B75B627
6C5D94B031D663527C4CAF86AAAAD3E40622> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/FNBWVE+Symbol /Symbol findfont ct_VMDictPut
/FNBWVE+Symbol*1 
[40{/.notdef}rp /parenleft 215{/.notdef}rp]
FNBWVE+Symbol nf
FNBWVE+Symbol*1 [16 0 0 -25.6 0 0 ]msf
280.706 314.629 mo
(\()sh
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVE+Symbol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B81F2C3A829A9390371ABA792EA78F4F3DE1EB5C3
F3CC02DD67397BFFDFD15D50F118E74AD1DEAAC5A740640F927B5D84D672F0DE
BA4ABC42A453DEA5470A4134110385F2533C1AFBC56> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVE+Symbol /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/FNBWVE+Symbol*1 
[40{/.notdef}rp /parenleft /parenright 214{/.notdef}rp]
FNBWVE+Symbol nf
FNBWVE+Symbol*1 [16 0 0 -25.6 0 0 ]msf
317.549 314.629 mo
(\))sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.0415 279.715 mo
(0)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.041 235.312 mo
(1)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.0415 190.909 mo
(2)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.0415 146.506 mo
(3)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.0415 102.103 mo
(4)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.0415 57.6992 mo
(5)sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
39.041 13.2969 mo
(6)sh
19.9028 198.985 mo
12.4106 202.087 li
19.9028 205.579 li
19.9028 198.985 li
cp
20.6841 206.634 mo
9.67627 201.509 li
20.6841 197.001 li
20.6841 206.634 li
cp
f
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVD+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7A73D8E81CAA60D14E3E98C0D2E05AFF3FB862AEA3DF0C900
A6244DFC203BD831D689E22DB403066666BFF3F475FEB3829C9D7ECDAB0DC925
8303ED1E42322E45D2E74BDF643BC8197209EBDB2F245FB9585F9D7C5F4C0605
E973113BC15F69B61D839FC08F998D44808113D68025D33AED404EFD98528A1C
4BF8833248921CD84E8766EA07C2F75403CFFB9CC1A48AD11EBE79666821D3F8
B741F5FE91D0F75F9F9632B838010D323EEA8F5B163329DD917466275C63DA4F
B54445D129B662802A208E18CFAD13CCA131C101542E45275DFEF10296A99CE9
BEFE39650F703ED74130D9F7EBDFC13232> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVD+TimesNewRomanPS-ItalicMT /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/FNBWVD+TimesNewRomanPS-ItalicMT*1 
[112{/.notdef}rp /p 2{/.notdef}rp /s 140{/.notdef}rp]
FNBWVD+TimesNewRomanPS-ItalicMT nf
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 197.071 mo
(p)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N 
/O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 11{/.notdef}rp /b 
/.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p 2{/.notdef}rp /s /t /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 189.071 mo
(t)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CDCEBD9C789FC719A6E699B9D99F66BE737EEBAFF
7111B9225F270084B7F68BC0DDECBD8A23968AE48D16B628A165111DDE7E6CD8
DD6007F82AE5C9057E54AF2D17F8AB7C9B11610F20000D2C65AB75461D35EBD1
19C9E1C1E902BC7C231A59B4A0E3A4C206C50EEA0EE1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 44 /comma put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /comma /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E 
/F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N 
/O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 11{/.notdef}rp /b 
/.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p 2{/.notdef}rp /s /t /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 185.696 mo
(,)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVD+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B854D0F4620EF8AB3A43726CA9F1D5CA3F0AC21C46156AA7EA
FD30B421C67072AD9E9673A39A0C73C611BF2D30694524FB9362DF4B7BF42BD4
03E13FE93BE1CC4B973BBB2F8A1766424F865950A3B4E0C2909B014DAC40D6C3
1A5A624961F141A00D5EA650DA557D976995CE1AB37642609DB19511A8C6A021
6D711E915D0A16129E261DB540D787FC5DFEB3FE9BF504AACF3812EF9A098716
4BC0CA8AED8AA0620C2C50ECD33D7A5F1286537664219BFD394BB743A505> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVD+TimesNewRomanPS-ItalicMT /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/FNBWVD+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i 6{/.notdef}rp /p 2{/.notdef}rp /s 140{/.notdef}rp]
FNBWVD+TimesNewRomanPS-ItalicMT nf
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 183.446 mo
(i)sh
19.9028 172.142 mo
12.4106 175.243 li
19.9028 178.735 li
19.9028 172.142 li
cp
20.6841 179.79 mo
9.67627 174.665 li
20.6841 170.157 li
20.6841 179.79 li
cp
f
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 170.228 mo
(p)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVD+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0F4BEDEF58C8CF76928EC03CF9E6A69066343B65CF2F2
9CD6E545B8A00752040D324808F3F5D7377FE94463A69378800F35B93737A90E
D33397EF28DE6855D7404A61AF81C1EEF0FFED3B556E8E9BEB0451CA1D28658C
106F5916BA3D50810F2ED0B604B6D36F194AAE36158BC40E0B3FFAD76350433E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVD+TimesNewRomanPS-ItalicMT /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/FNBWVD+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i 6{/.notdef}rp /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
FNBWVD+TimesNewRomanPS-ItalicMT nf
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 162.603 mo
(t)sh
FNBWVC+TimesNewRomanPSMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 159.04 mo
(,)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVD+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B854D0F4659B7FFADF9957DA68B07B6E521A3DF198F53722C1
EFCEAF10026DF73D4410F9B17662445DB6D83FCD5219002D838CE9DCB002E084
6F17BE49CA01BE8786E4F26F674D269761A97042F7EFEAFEE3C5B2BB4C341652
31ED8551E3DA0C24B7313736B99DA84705B3ED16D047EB9A35258AE26E18D6CF
2C6B83E7F0C4D2680AC8F3A24A06D908DFCA82AD4DED6865586C5C902373DF8D
C54F895E34149677C3F663323010C38B35E7F6C07F0B821D00A4DAC9EDFDFD4E
B4C4ED970BDCEF5168A762B8982DCC18EA83CE45E12A83029A091E9B3F36FD30
42E8F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVD+TimesNewRomanPS-ItalicMT /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/FNBWVD+TimesNewRomanPS-ItalicMT*1 
[105{/.notdef}rp /i /j 5{/.notdef}rp /p 2{/.notdef}rp /s /t 
139{/.notdef}rp]
FNBWVD+TimesNewRomanPS-ItalicMT nf
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 155.071 mo
(j)sh
3.74658 209.103 mo
3.74658 208.321 li
16.3716 212.446 li
16.3716 213.228 li
3.74658 209.103 li
cp
f
16.3716 213.228 mo
16.3716 212.446 li
28.9966 208.321 li
28.9966 209.103 li
16.3716 213.228 li
cp
f
3.74658 149.728 mo
3.74658 148.946 li
16.3716 144.821 li
16.3716 145.603 li
3.74658 149.728 li
cp
f
16.3716 145.603 mo
16.3716 144.821 li
28.9966 148.946 li
28.9966 149.728 li
16.3716 145.603 li
cp
f
20.3716 224.056 mo
18.2622 221.884 li
27.6372 218.446 li
.262207 214.462 li
.262207 143.571 li
@
20.3716 224.071 mo
18.2466 221.884 li
27.6528 218.446 li
.246582 214.478 li
.246582 143.571 li
1.02783 143.571 li
1.02783 213.821 li
30.2466 218.04 li
30.2466 218.821 li
19.7466 222.759 li
20.7466 223.728 li
20.3716 224.071 li
cp
f
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B854D0F4B64A43F243E3CCF111DDD476299F3B748356> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 47 /slash put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /comma /hyphen 
/.notdef /slash /zero /one /two /three /four /five 
/six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef 
/E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef 
/N /O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 11{/.notdef}rp 
/b /.notdef /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/m /n /o /p 2{/.notdef}rp /s /t /u 
3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 140.071 mo
(/)sh
FNBWVD+TimesNewRomanPS-ItalicMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 117.696 mo
(p)sh
FNBWVC+TimesNewRomanPSMT*1 [0 -9.25 -9.25 0 0 0 ]msf
25.8408 109.696 mo
(t)sh
5.43408 121.728 mo
5.43408 120.946 li
16.3716 124.728 li
16.3716 125.509 li
5.43408 121.728 li
cp
f
16.3716 125.509 mo
16.3716 124.728 li
27.3091 120.946 li
27.3091 121.728 li
16.3716 125.509 li
cp
f
5.43408 104.353 mo
5.43408 103.571 li
16.3716 99.79 li
16.3716 100.571 li
5.43408 104.353 li
cp
f
16.3716 100.571 mo
16.3716 99.79 li
27.3091 103.571 li
27.3091 104.353 li
16.3716 100.571 li
cp
f
4.18408 127.884 mo
4.18408 127.103 li
16.3716 131.134 li
16.3716 131.915 li
4.18408 127.884 li
cp
f
16.3716 131.915 mo
16.3716 131.134 li
28.5591 127.103 li
28.5591 127.884 li
16.3716 131.915 li
cp
f
4.18408 98.1963 mo
4.18408 97.415 li
16.3716 93.3838 li
16.3716 94.165 li
4.18408 98.1963 li
cp
f
16.3716 94.165 mo
16.3716 93.3838 li
28.5591 97.415 li
28.5591 98.1963 li
16.3716 94.165 li
cp
f
FNBWVC+TimesNewRomanPSMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 90.8525 mo
( )sh
FNBWVC+TimesNewRomanPSMT*1 [0 -16 -16 0 0 0 ]msf
20.6846 79.04 mo
(%)sh
FNBWVE+Symbol*1 [0 -16 -25.6 0 0 0 ]msf
22.5283 85.3213 mo
(\()sh
FNBWVE+Symbol*1 [0 -16 -25.6 0 0 0 ]msf
22.5283 64.7588 mo
(\))sh
FNBWVC+TimesNewRomanPSMT*1 [16 0 0 -16 0 0 ]msf
406.697 289.063 mo
(1000)sh
.5 lw
67.6694 35.3164 mo
70.6694 35.3164 li
@
67.6694 36.8164 mo
67.6694 35.3164 li
70.6694 35.3164 li
70.6694 36.8164 li
@
67.6694 45.0664 mo
70.6694 45.0664 li
@
67.6694 43.8164 mo
67.6694 45.0664 li
70.6694 45.0664 li
70.6694 43.8164 li
@
69.1694 35.3164 mo
69.1694 45.0664 li
@
67.6694 28.083 mo
70.6694 28.083 li
@
67.6694 18.333 mo
70.6694 18.333 li
@
69.1694 18.333 mo
69.1694 28.083 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
FNBWVC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC5
4400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A
6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C
2999730E7919239B324086FEA852156F456647AA0692084759C352D699897179
9F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
systemdict /gcheck known {setglobal} if end {end} if
end
FNBWVC+TimesNewRomanPSMT /Encoding get
dup 97 /a put
dup 99 /c put
dup 114 /r put
pop
%ADOEndSubsetFont
/FNBWVC+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /comma /hyphen 
/.notdef /slash /zero /one /two /three /four /five 
/six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef 
/E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef 
/N /O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp 
/a /b /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
FNBWVC+TimesNewRomanPSMT nf
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
77.1694 27.2754 mo
(Statistical error)sh
FNBWVC+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
77.1694 44.0752 mo
(Systematic error)sh
486.542 162.044 mo
486.542 164.015 li
488.512 164.015 li
488.512 162.044 li
490.483 162.044 li
490.483 160.073 li
488.512 160.073 li
488.512 158.103 li
486.542 158.103 li
486.542 160.073 li
484.571 160.073 li
484.571 162.044 li
486.542 162.044 li
cp
.612146 0 .902617 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/FNBWVC+TimesNewRomanPSMT*1 uf
/FNBWVC+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
/FNBWVE+Symbol*1 uf
/FNBWVE+Symbol uf
/Symbol uf
/FNBWVD+TimesNewRomanPS-ItalicMT*1 uf
/FNBWVD+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 23.0.0
%%For: (Gary Westfall) ()
%%Title: (fig6.eps)
%%CreationDate: 11/1/18 12:46 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&kF1t_Xse[8J:#)mN6+*CeE#-85T;DN$)VR,R<O+-fD\e'J-357%I:+/c`Hg3Ms[fLV,F9<Q"9.PC#ZLlYP63snP<9Sp8Zrb
%JD0/rWr4PLV:QO8/Y!G1EVMWs?RXk,q;"6egu1VK6!joQ">9s!IW*<f&%[CBQcGlpUEN,Mk]=SK!*khWSTaf-fH?"g:/Mm<99<+T
%Sb[p*eMV.LSm^h,^>0EOX4(9h[c+l^-h^'W[/FVr-+;aG<S^gHE9[o4]1)(jIA:X4*O5!X<pPQ)V!hVT[82RqG)ah?#FR(;-Md<M
%cP,@L4/uR-#7>C\glqAE]q)p/G#On>X*l&c[V%o;\4_C8JjI<3n9/2;g4;>&r-/?4"s&;Kcd[[a/sX4X8&-&N\6WE*pt$JUqnO5%
%+QNlTh#TcJY;b[An"AU,hs9t>6U#u*g^0Z,Y:nf@Tg"g`mrGC%+"_lNVN)pF>SI!sq:mch3:&>>"4;c$q*I8fd-G;8Fn"3qM]HeL
%r^2-i:[N;:^gGCUF%\b+\lB$k#<`3;!Ib/<+m(L@rV0`8r9pl$LgtLrAE]C)O6uVTJ1rUZ(Iab,b`gUlMj)uq)GV((V%?#8)DT:A
%T`+Q^r"`M.#64b.J!gK]N*P@4^sBsm"G\%!#;6q06rgKV393LEK:m\/pDotupX8@o*GEgc$G*pEO:V#:&Yfhs/*-E!!I#q'$E.5r
%LW^3!mr<t!BZR<!qn,51%`+7\mAKg^?Lh>_k$n?Gp`VPOldCUii.)$iM)r1RY4l?d!97QkV*M3H/>iIjkiE<Tm/R6?s1(DP5VGGr
%mtBp)!e-Ihkjl<MggQ!Ak^>SQq_QV"f4Sh</k-kh2Aer%5L0m&3:.Ei8d!r)"30119BOq#2uNllIQFDk<1]3Ck<p;0$GbBTlB'o6
%,dG+'[EBS4VWMZa"A^FYM?K!2R2J1qDmu)iLWrRah"c*r9+Q6t0?mJAme%$JBnFaZSChXP!fgN%nUI&GgP0tqUOg`D^iB3FPnRe:
%`At-]f2pQ4pbgN4c"XMu[b9-f<DJ-[9/(2h:0Z`3Q=.:E@[`mUVC/gOb'CS,SR]hh:-.R2K/i:h!I?i,,>N.8-n'HI3SlbZD7B;f
%H,)sAJ]#V:h>kE/52?8iOgJ3jd,rUkEVKW<Dfp.'0ep_B?uRlL\>"'2M;oR_3)_hMS_@Q&8p.gifUf%tH@KBC?2jeTn"%(Sn@%VZ
%h;r!qS1eg]C;%[Hmi=mB:0Vs_Bn1d3BC%i1S:ZB`'7]JApcl):[\J<RmTRr@/U67NecH,<p&;B=9-CUNpl7=On\pX(@OM8cV=akL
%S2t%6gmMUu,B[V,o055_!I83?#@2B048L%fOTC;QTU-#j-@NkiB5Z#HJ#slH>`!X#q=+5r6"8&sk"[0fpQSu5f7)1M1cUbAYm(:o
%ZNn;449.L^*&7d_fBbPf@MF:Y+FO9Z*`p::!\C'dVDp,qj8;Y,S<:F,0#s'N`8!"cfsPp=<+6crR7;</]Z[hN9T(OPU<<_hAKK+T
%9Ms<naa'ADL`JAu+hrYhL2MajkQSdRBkBf7S?(+fM34^l(-<PQ3[FFo`]:rPH`Bi$QHR#5UdK\R/$+1%&",S>(/qdBN.;gD=?U*"
%LPlf8iB6":T'nHZ^[oa`%-67+<HX'ZiLN1<>VRQSj[<9f!POVAk*1PmTBl#a=%3"2gGriYqJc79BCVmC"[#Pq7ek:9gO]gJF1ko\
%0lm30&PeF1kQYF5_(iG:i.];gF?pcJAE7`iD<L6(_?n5mUU;E2JL'BU)3CM,!:^?h!WYD$En5I0&lYi9+eKDR9IOi/Y#)oj*P`'_
%S9khT3j\SsBXg<_4"kUsSGpM%9,qWq-u?O"bPo^N'/:!f0dN=jOuE@o_jsj$G(<A?PK*;!*Yh6*F=?MmKZ]OJ'2r-Fp1P(?1Cq`F
%'7G0%f7C%7B%aY?@,h6mnm?dIY"ugK"aH<`<WUmim^Z\VlYE!ei3N+ZBZb.0R(Kp-?hfpHE-fX5]+;*M`V(.JVXIm.<S'K5BOH?Q
%/3qi!57SAm"T$^NmZr?.\g)_Xdt%&R5,'OZ`e4?UH[tSa-HOFH@;-*/(2E.<kl<7Y&%0*eO0b)_meQ9lOD/T;;nMA]gcGtT>%V!O
%r<I!I$7;o=K:4$a:6R&?V="o5Q3GHYFIg8>D>Gl$s$$TUK7769hh*"$0hga76;50s@G^f%MX1,!(`r29Ig_8F#.-9leQpM>d"jg!
%io<4LCmr.q[Qk(nY%X1q(,Q_&bWWqoXp4_;=Juj!8[_@jD[\2sl?Xq<%JCb-Oh`#>[nl<7cI.O$*M<X.h-OLpS6kQKQL-1f+5E'j
%qi]caDo6$X6+S#ZhJsJg1Cl>cg4@8DY*/jJ=oOgmG.*t"mg7(MgW*'qg;.k8>,'fT]QctFI&JelFU^G7L:s)U5BM[RW1*=mQhEMZ
%4Fn!0iuap/WLT5:YajnbFVkNq:B787^0s*.D,WILlQ&f$/l,>e?1f]!'Jm6"VRh"j^r7C7;$K8!_6(JGVk^-g(np4T\34NQ%0s[,
%@CH&h8e"b$"o).QJe)f:4)L$'q-e4^1bPXEX]LQ8V0m)3M6YGa#,[cYYIg"T^jt*f`9@jlVCs!Sd%O!/E:C'r`mNG+W>b#:B.n[Z
%KJfe1*-X;ZBL+TPbo1PpbTfTVJRJK'q)/3u\1%IVgt.IJ1Q*8.Q%%`*>QZ=*=)6N-a2gKhoq5?6,NcN"_hd%=cYg?"O6o3HPNs[%
%K>F-gK2#8iM>c<4nH/KU<jNOFcUiN1ZuN.;,s[ma;u#PN#Au<dWQDBB-@]GL'`lLdI>#U%^Zf+Xp2k!Vmo'kdp0buuc-AJGGZXo<
%W<8qOY(/31@^a,98gnapC&@@ZCV$B=Rp6<?#+20F+5c9Jg`IWIoo#^I8P6L'.A:GQCM^T$Pq`3n=oC!,oGOl%M;<YrWW-n"@c>'9
%%h:KtcH?/I4q(@,e>D/q#F:`TG5RE)$db7?6!a;9@?j`K^]+Q-`rG.35],,Zs6[+Z+4/t_iRh1W^jhSBnXoii"SSN1LWecd"Alip
%'F]<UNU$!*r4#W[Z?*q`mcXcS3HrL:O.o)=h]A!%m<5uA+a;!L][)6]*1h4$):t_HIs5isb+o>1AjB;S#W/5)^,Rn<+%h92qp,3A
%[=FQuD;mt/E&ra?^TJB'h<Vi3KcPW\k!2Xe[ND1jqk9RQr=V`4MpiO"5qa2d*@0nR'*X&QC>s>gd2D3orf=p^e<)"7(RF,?p2_-^
%qr:k>D:dEoFTnhrj1gD+"#cbZ()_Acr0djZcSV+5edgi6pO$UCCe6o?Fr7V!^nM=WnOf!E8Y%m_$$?W.5r7hVKr\E3iWG$93;FAn
%-N:m("*>M[nh84ql[sLQ5dgG122od'/rGhX3Y9+X,i'44?hAoNHAZRErTl;s+#SG[54-j9r#9a4G5(;?R-Y1_!-g-heR:lOA#]'$
%n-q@1URF'5>s@mIq,Af=Y2Rmq8e0S>a2,c`"87`Nl$,0.n%?OUlqQZCfRA*ta3b@U!7*^9m9rOqMSub6I3O$=8.)jT&.JBaJO%#i
%FKe&].=s(l7#)k)V<S4MG"j!cfUj'OSf%\Q;,%@US?#r)[,mD:6@q\,Fb(D%\iG">ppNPs(n>[i)?dI&SY_sic>!gP0<4dn[t*4*
%e>9KgHj^bq(G6]9_:dZ@Ft9"6/SM.>chou!a*4)Z&3P&H82>f@Rqe:9HBgc[\(;XbDX(9?:_(=-$JQRmCel'*+:;b25b%FO9lZMl
%"?_Co,;4`.8gB]!+op//^ms$h#K+>k2jM7Rg]P1A'=/.0MI8OLLQO5a6g=bs!)&DWmnR)G>oS"XZIHTMEXoK_]M:@;U8nCW3do#(
%:"S.mnN>ha^Ba&RB>Bi;R_e]I@9!+b0d`RA\K!#1\(RQLq9sM6H(g"W'GqX2b+EZK<!<\ZSTM$(gl9_";eZ59(U538?6s49(,@P^
%@8i#k,o@=tb&U^,+*XA(&$]FfaR2DmTtCq[(p$@=?KAQu62%P]RTb:4e*Zu%jQ8n0XjW=^]f!308DZO>a7JeQY)o-5Y3(QNnLe&i
%Fbg,)o,0sCqZr!7X_MmMp]CL''3=ICq#EMW<Y7GKC'6je\&6CB)[A`JO#lKE"n"[/MD*er%)1Q[r]/t^C!-kVdXI5Ve&H%=rk(XO
%?I*aV/i4,=e,u"#^[4@:9i?1ATijpT,G\YX;Wh1H\cV^c)dOWBE"U`JYO`e@HBiI^"=M2W+pQlr>Ril9k5I@Pj:SQW'ErRsWe-jE
%]:2f7KXcmnaGngg3C]f7Z8#kk<qs4QEpYWt2I\%?]H'0,ou2O"Nu+^K<)_KV4CGLrJ;04oL,3#"XiV@f"^Nkme(;:Om<?1T1+`n#
%<[-?qAk:^;HJAON5`YN@?+o!UmAnhT$qU&VDT_?_&9XWc5pes-mL!%j)D*.t8-YIIEnQ7ee59Z72V?jTLY!\Srtj5T9W+QE9Yo3m
%YeGY%HXn]8Y:OtifF1Qlgl6Z?Bqbl:9CiSJqM)P/EZ8\MUNoG?@eiHQ[HOJ-IYkjhc3SHNcYpd_gA+2XH&qc9<Na`("qYVV\%-Z9
%\!^G0lqGf-!EPUu=ts'BP6o90Vn(C9%E&Z3/i./#ZGe[Rq*m>#EhW/sK%BZrgZ>nqit,pH4'63m0#:BL!ZN#BU.FJ4Bok#fH'U&K
%KUb'Ge[P8UCT4AdHeK*fp6<3Qbs=ko;lT<2ZnB/HEG,ehqt\p6QF!3OQft)N(bQ,%U,@&O970DA)'25c]VPV[Gp]SB))'QL.=3ko
%BC6R0o:=ua=hme`Qg$U`G8ge>`\38*FDH,BRsu)M#OC%U!si,XIDVrIqRFEq[[;^?Xl&'/isWqfSE#,]h4WX,R#^Lm<T]"JU@8\h
%@grP.*@.\/\:X9GO2O=e6^TMP:cu5sB<W\+<*=SL`]7*rs/<7L&;oP>@=m*6C'QBVghe:=A)?[;CrY^s-neC,Yf*1rCl_M-QL[[D
%)P-7f//C@bMRKB%I$cMugl)-Y1#MC!+VZX2Fke`WL6Hter4.@d)pT?$bMf+Qa5JOB0ZE\o;/-,`1<l'Xpb7IJga_bJ1IN)rA(NB(
%$6DEhYBAQ'0uZ[UQ4N]a&nAV(ilk-B*DjUkZ%GDuWF3'mHHY.A`"5\q:hn*1JNF,De(',3c'rnR,9>L7OD*7rY+RA%fC'@6Y<+Ok
%n"K]%YoP)\G<#IBn)5OYEg$L%Z?8J0@5@0Mi;blc=:sW/B8PZ7C'REmposjR4ZcTZKhAeJTG$[;5km,cDmA0ACdiG5$APt2%!kQ5
%L&k4rKVoJ=&rPr9CbPE8gieZ&%e9n/MU<,eUd9H!W7bT@P?Sk8--6H-^1b!=])]0[0aF<E2Qmk30puUAiV1n,^&;o$\`Ipgl1q^X
%Y*))lEr_2cG'D-IRcDnD\`]'8(\',qMa3_KRG;a^0ibGh?:Bm+[]E0sLp%o1D6MlA+E3`G_Yo`\9eX^0&<f'Q*#uUI09:c3_>hB]
%G8TlN=DYZX&G#.;h<s`h"rUjlW"'&Q61!^a04]e.[`Tbk(_K;:iWN!&mOU<LdonK5Ccgd\Q=EgK[9Y8u%9\uoY!lOOgVUH.?NL%D
%Ru<Gp#Q.!K=^m\OQ^"SF-aTZM'j(X]e9/,=l97B8L+d]QWq3-fh6/b$c0E(!GF%A$L^9#g&=)La%<FKbg\ogH2Ir5@2,h%[a>li^
%'LG["B+Ycs'i%BE6I6A1IQ*$%!_O&[q<:WV$CAa6)Gm=6X]GD6!lhe+c3;q=8-2KKb.).V;dsb#cfA.2:c2db"pW0%r24'N)a23/
%N23-jnW^.;$3pG1[bp\.($K^$kfZM&)QL=Q=]18/f"lCa[j>NWDmu(n`]H7"glSZd'DGnWK;(9i"&Mhf1("A)#!W\c;E-t?'$@9d
%)DTGs`:ci87NQs;12P6?r95UC;j`'VR1-6.O-pCocQ6`]J?jN]NbGNo_7'lD>i7P>I,bN>&UtVK(YR_?Y:h]%C1g/8TJ)5@n\Ktd
%K&f\#7QEUtL@Mc$l`:miOZ]KgA*N]]VQG.gD[8]';8hBE[Z]TqnebQnCS1V2lbh1$D^\Qqs8MmKJsa<Y#\#N'&B%Q!W:WA_2-9gE
%r=<:%ge"eSEe,;n&mf`ZJ^JKGId!9ZO![t"-h.8o+2\FLpEb0]+#E\#1t%`$Y?@h50-g+#g(TDji+8Hngj,NGiT6$49EgoW"8H<Q
%5hOI`YjoC,^W\EWfhpuA7RtT*ITp2)9rjrE]Qq:GgDbN%QW[6--bQ6:lH;4lFpe/O]BH0g$r6f;b:^H7kJ#q?-MRZFImUlVHSm,6
%96r-4cniFTa$.g^(8KNsrceBNQ()qn9g5"/V&Z(A_W"-Km>Y*.LXP@,Bo<qWg,-rHFlADJ_H><#.jrZ1-5fNOO%N1]hjVt;.sJG_
%WO]@HO"gF\F1)#Gf5T*!8\`$Q?MZbWiO_1,f[J-r/oJAHLIr*WdSgQ%YIcbiSn7N=guLTJOao8l%A^=Q6JhoaKA0rk9OhWBDK"*m
%[[Jn?Sb`IO.CIgb#&%mG2qs1^kOZsW.\qjgX]0)-0VibbXV^]OjB2D?XkEIrQ89'S9-O8us%74HF'J3J\5%*IM1o+<Hj8PML-IV5
%ISr7:H-/YKV7PPkRIr?$=>=X:eZ,e5:LY*Dk,S59^INL:rVNd>;m%7oplPuT.C:a`;f,`ZT33i18!Q9Bqi!VB30ad1hA?!01ApjZ
%EE3iUDd`=ul3_i9Mj1/L4Z>fHVc76+?%A@@[\iGck!uj:0,[ddoJX8QUpiPd1_=V($VuYMQ!Dm7BEXZWVHF+jX$it96<;ZZcFkX%
%>bp2EbS[7WT\Z<`0'o4%Cq<Z*$`B5WbC=4IrYNtN?$8UDG%sE$07G-:[dOA^94e_\;*MjGC<gm3[Z!&!q/,VR=Mc3hc/\H/JemMa
%CDt#>D;IY`d=;+Cqpq43bf_,VA;@gW(_D[8'LoI<ll2[?>Gm9@!1'c2<qcXO2ho]]@S1H$&9G!K+I5X<JQSD11h,d1H\hVVpPh/0
%Fu/,_Y%%aKCGZV>'u1EBp8C>@Vlh-3)5:]\Dps`/J87Iq_.:fCK_!tD'(-rR,Vk"/d7DL.%j:Ce\W.q]YpGRg]<"OaCrmlh&+'MA
%)+Yd2Du:lCUAjY=Pj/K*;R)il8/9TLOLKnnN&1tB'%3;Iek!DPo-.I^cp`8YD[eHECcUR)&mGAfT7_"]))o$saB-Dp6`.Ot)jq3H
%3b0t+=-44o!g/HC/L%grn-:-%NWSc-li/(tS%GUb9%Z_14euj36X"9PQr\jB`gTJl)EXeqd\&HKU@Ga.4-a.4q[SrM_)J,\'+++l
%2/siVeKi8qO!_2J[5Ic"`N(GI8m>$_ZWPi/k;BH?[;G=hh.*X`)57,VB54Kp9\RQU1Yi)UMb(sl=a'msSb=bc*#cX+^iD8TrE;pb
%e7fBK`(FfO:]"=BgL&IA4N!iCBCK$2_&Z!ZUL0.;2VIqUf4Np_F`"CCk-`b=-DkX-2SIhiGKd31C<]68.!3gLYm*[4nR['FrH;8V
%<I4&HQ!%fM6Y`ULe.W4\d?[r#XQ./iLINcN3Zlf+ksD#++'lO"5]iEqbGZq;;Kc?jg@si82CbTi42M0WVmG"%@:APYDGdI9FIOrK
%UcTP(%QtFb`Dh/s@IR=J>>N77^$?-^li"kg<?HWF`:[hddFK+7c'?"DM4+&(J0V$8C5rDpGe<e!cbJ(\rV,BRTg()?3s.7Y]E[D.
%hD@2#]7[p=cpS<$L?la=>c17F]qOBQ<=H:OAoHlMCb`hSZS47Ekh9fSik>r@5218u:3L^9BV>3FUE+OgN8EF4@>m#fT>ku,n/=sm
%p>"<qN$jS_[HV'=T2mi0_EYCGGLb-[GhaPX5lMY]0uW-TKE`cQa<*=Z^4SpS/ftsuC-X8;3r?A%o_F?g9_7hKC>,O^^Zh,gB["IQ
%4u58VeqQ1]XiAVB1$()*I^53KiRlB!K6!i-rZ[G]Goc>R/EWRActCa=J#jE@iBqDNO0V!97+&WO'KnM4dPMN&AOt`h$dc.B/XuFs
%_f@"L+',^n3O65K`5EQCC8TSK(V6ibfs4gt^G[4:R"j$n^M?,jor)R.<-k$JU.sCtq9k`aC*u2]3@_ePeRt,t2B4S:[b6upBA6->
%ICj+Kg">]g\CDW+gJdgqgJ?^5fe*PWchH\/Isq$+p5PiTZCdHOW5G)'W&ad1l.1u%*<6jFV.]'THI\t>JQ99Ma0rY<3]1JEe7ij/
%VU"+)lZ6Z5`Nc`j5'iafh=B2)(t%OEBoJsgacq[WT!!6h-@Ao:/KYp8[("9Qd:q(i6h^Sa94'GS<I1"tc0TPkg?+[$KV:8)QO(*,
%;ce]mm>Hsq>Q;$)\_T!8eK$#X>B_AL*kDRl8&5YAa+4&bW\o+Hg%O:_pR8iZ);eNIdg2bmSl&%FoR'`,6*I.m7oal=o9ce/A'ohC
%>96s*hLS+>o\r4YjeY(#b%KO4NkS=ST^`aP)836>XIFVoq\&T#fIR'<`KF!kK<DDP5G*,-rLHu9ih(*_>Q7K4BF%^(^&C:<4O8ZY
%X>$dc!kl*j':=u:,s]`6hGUEKK@+/u&?KEjhV``CnePJ3P2@F"4m<HenOb$j2Y7KQAo8=mIGm5khLe[0fWlPV_r864!AZ0&#S6IU
%+h[6]Z7:8j=4n2uDl/VWA@"`Td`INLOa4]XN#XRZ+%8n-?Sn2H?:Ps8=Xf435L%TJ`VW`\Seu'KEQd,WHc&mjfVGFG`"$@N-Z1G6
%aET6t*Q?ncQ;W,$?3@MU5HGBMK\`6Q,iWb'-rE3.)[S'6b9k:4(.pXR"_TS*n/.@+P9*<@GFLr,)36[)&,*8'jlXHlWk[mR;Vsr[
%Pr;)jhs!u/ZqFI1.%)-S$ek6(S68kgN8r1Bae[_BGc#mOQ8=G5TpO:=:@i:pr^LJBFb_2'lE=+=_cNt2EuO'(>WQOQkIR9V.^ukQ
%L3[;/S'"6kX&/d)hfSJ=qN36M@<8O.ZNnO)P5,Pp.?*o*>2dM:-AuQ9Ossu^jJFn=jl47MA\0MH3gFq=AN#%)\f\7PkrViebN>#c
%XW5BheoJC/)O4Ae4C0bm5H%3@IGCk'b;BF`jn`(:"j(112K>WpqJ+cPZ;ao=O7/OjL%K-MFZNIeFP#s7G<1>g=Tcjt>KWT8GjG76
%Df<8OB=@6,jWjHb(j4Fp1acN+-atfggac(Q-m_&QNQH0fCa,XnW>WnnRV"]nd]<#bL"1*ZR@F_nQ10/+>.pRbdFu9VbAAVEkdClE
%f!ITCRh$N-o4dRp4,IXK&N80$bN!'c[ENsNDYg+@m_6/obq@\+CjNg8bgibrijIX[OSeI8dqu9\hbPg?h>VatYN_7/G])FmNkPa@
%X!of+DJHMOoh-)<Ak1\AE:i*!^*D9VnK)":'CQrGR!@NMbgd6UK!Kc'4Nm98Hp!C<RU\/71S\<lIst-'nI[Ns(f^?/j=NJ7Fdqd`
%M!/XW@kZurNpFd`@_<1Q\e@TCS"#X9Y/"R+=BWD_hU:X=ZZg9#`ZN5=VCPA*YsbnLa53#>2KgQ-RaXg.d?sXi]uH;D9O"j]gTd[)
%ce=WL@n'Eif\CCLIa=K>Paq2g+(j;47X]M+p7B:5R7M,P.K7O,p&<mVfIW2WV8qsP/aI8kA@\B>AE@On,HHQ?f3<)N,e<VtRNq-1
%2uKr;^K#jYq<`+E9&K#3lgFYS/B'Lj_ficYAQ+-homOWad9JK;*M-O2:,CPAGKFNF[i;sNjh9%U1@B3QfB7VF6t:m%i&DA2U8Leg
%VX`ldNRkLm7XO]K+KS+:V>gjN`I0uL&uHfaNrpbnN_tk-=98ZKXC$Y[^\H>WG&tl2`Z_5)dKqb;'@c.:ZKAG`;`4oB@k+sm^[Trk
%HX%Z$G`(sW#R'pR28DCWf+66u6#g;gEJBiE38[b8s5"JDjoBs=JOVO^\O:"M0Yu+P!&oNNQiQOH9rsEVOM^&jM/Kh32jb9h(cP0=
%ef3$Wp:in0f9]thEC]\5*&V2$bZ6!o_m@;=HR=eY(f_dFkIgk'U*B1/6AkTS?1iO'E5t7c)8l8321J`F.ss&Z5<6oW]A/r6i<rlt
%E?]N"D^e;YObulD&?%t!G;)UbcT1+XME:7;F2H3,rP?P(Pk[lP=4/2QAm_[ApW@lLI!3XDqtZ\-Re<TirmI?Yr"TVMVW4k)Vd/eF
%aKW_XlmTfu4YH1<8F2Bo'2+E]=jGXfaB+g_<OlG;0:pG/ekq>A(o*I%bnJ)DLUc.QU.9lEO7:gkqP@dL0u]0sLXU`/aNing_!SbW
%'(GMdm@.'"V*^1',-R_"72\q]$rq:&SP*!![nfpn*FaM7_:S/!Za7S'm:Tf?&dl&Dr%=EBq@K^bCck>B:*?>Hnsu8fm-m8>3*lp.
%asY7o`iSDdLRHq?-++r9:;pAQ^^utm2nM_C?-^m+_o]qtei0j&+o;bF*d5I`X4(sta4=J[^(;+-J41_<,.WYBM-"ANkYaBgP1/@m
%M90ZL!qm9[;0bG1LW,TIEi9mM!$9qoft9<O$,X>@T7+$aPh`>o:"OCjCfa@46E-#A@3WO9\C[tCqf$7IVIcM'0Co=VoPhV-R>l+:
%5%=CL0F5tPW3ZOeN>d76qmaMnk6MJRFfoeZrd0@feJ.]nPZ-5+qb:WZD1>q-]RBcQCGp[epiNG8j$8^a0-AggihSa<m9:%<2pQ+/
%1hm6M&mOg54?<_09b!1i?ep?+;'-)M@YUr8FRV>ghI:tBFt*@/pj0qr%2Aa0.-OuOT;BG\=>1/l4^aBckT-p9dB>"lBto5VeoW=k
%OD!YNE$rMTa&.`E%VBP[d<M9ZJ;+Td!2[%5l$Lfh][e+6Y_27>"Ii(V2P`mBYKI%NJYlbB]]W[flcCola_88RX#YIfA!R:d"u-%H
%?jp7JiW@`oAbT07ULA)8DYUG*q_;R`)q`:S6f">/P(h^A]\Fan4CU)a1Mb3#l29@HcE@[)]7kLSRg<([NO:$WRK`7BG:f`u`k3'U
%WU+hPBg[$baOjom7VrA[8QFP@Ps-(b,35Rtq3YJ(S(2'!MmkM.=F?EW3/l$"<7UdUi!X)eqJbB+E6Ncldb]2[/[Zh'<3"G3Y,lWX
%p6<mLFoCt,f%='gZO=-&'a:HBKGK,FoA_XWaZ+Up8@e-)UL\J1+!ngh@qX'?oV]@$0OLdN1pQUY5`Nl<7f<<LnJd,tl.%Mp$G<uq
%jS1K@B<LMq17Boj)*";4<+`c_'B#59#9Fd-Bm]>RQYP9_H_q;UCjo:H6f06V/3!/X9pq8j&rELX*eQ?KB)@1XL#%+\5?[!ZZ??tN
%c*.ZT[C535eJ3_iKfZI=\^l1_fAlEa^""KhG1-548laW#+4u'a1/_G(<-j%i2bKt@1ZQb!X$rP0h.LQK41G^2Xq57!1=ZJ;$Q/D!
%hh04ll\lJZoBWEq9QhAHh?Fl[Ad$#O5+*ig[JcUIjJ0N'PWo$!GT]A4XjQ#',OD":7l8ln?4R5SpKP"D8j<0$Irc.b'MiYkIf#Nj
%Hh/`P)JNti-PeT#&aMLbZ2!:10b&hSU=,f8:!$'.[`7pdo<2gl=(.P1Cq22'R!\$L!S/9aep';iF(Z00fGRFK(6-PQho>:^?98SR
%e^M5g(=4I8^33o&G/.[H[9t679Af=al0O'M2*>+:qVV8/ZW&=LD9X]'Q(K%N)0KZn[+c!HoRh%]Sk1lHMtZupq(i@2<Vj(HfU4G3
%I.ttEEtanJQhCneomHJF5KU"ArQ`JnVdJRB$]>B(0`Ddm[,qLL0A-9W<DrLiV39/nk7r_0(IBpj%qbidE&=\R*qmJ[...UTa[kTn
%8Ti1re*YKbPi^9N1(aU$\U\FIPuH!K<VkMJ>ebB172&f\s-`N+/.hc;k-KS"/2h:4#`XOZ`MY82@P8D2E)'k2SS0L(Z#Jr,Xqjp!
%ZA[k4W:^_tb*s.]7gb6!hVDf"36H>r:CdE('uKPh_nhjGq-0>Y[Hbi>S-g%IOFRt@SXVtV9nGgA1Ou05c'dZC7g1*CDCZHHGP?f4
%cmWdY4P6)hc>K,+`24fe_(-Cg51QXWX['bA6eQR(\.S$Yh3-6i0FTMJU<0rCGJRLqjd]g*Df0A9q5j&@D2f@Glmb.[/hj<Y,+m'T
%!boE_hP177_c?'VBV\eof>3XL50eB:mCl)d3idfAJ>cSR!"M".n`J+9m"(3sCU#XHf1(M%hca;?daAPV>Pt/'`/9\/\_a!(&`E^U
%A^p82PKVSY$M^gke@Y"D])!;`DeDVK3Zm,7pXUC^,oXB-!%dJXU5VRj)q/5dNtttINbj2`=YMI&^g=kieh2&jb*c^'I<MM#49_6k
%3X1nCH[,GMH18uq.8^HqZ"I6Ig3)+uUtT2;bkYs$op(IO1ChdmWs>FceW=sfT-gQ2WT.Q^dZ&et"#kBpEY^PeZc-4Bc=&P,cg1b9
%`R<h9Nk6a$!R^!O:M3pd9Jm-+`R/_B'gqM*38q0215Y>13;\G&caKY<_TObMKc0_UqU49(\sr2'N-Y;P+9V)/).9GB4Wj1HZRtq4
%rK)Y+U3'miR8rLTh+PXTD_)k4$cL'jOh>j$IXNG-2hAYVcs=3m2aqpYV5K*j$lF.;cm[I+n6UbP`aYW-#YB.&Z4JI5H%jj6A%B<J
%^Cu1El!Yi>;UWhSmP.\r0-e^l$/.4!Y?7NNW<9KQT.#i$rP_/1VW!JfGm=t?KhW)1VA#RA0mZgc,n93u\KK=UV!(q?pSW]/1B$MG
%O[7.)ACprSIOW9uA..&"H6!aD.\akU*ro'M-!#sB/%osUjG:'NL5kM.6kufQ.fj,g`<=)SBbKQ\8FUti\RK/q>(DiTbcX"Bam<j6
%Ai7kS/_qCE+sjNo,1dkoY/5g";Yn4TmF,Gb-ac(Ocm5Ng84,T4R$[lLLNZslO0Kia-.b#m85$OT/Uu,YY1(-&o#"n_SVM^Oq5U&5
%e`g*-q4nVk!)7t%k&)$0e/mtAbA.$W2@Sa\MZ`<TE*U6&DK",-bpBtnp9i^fAj)_2F0j,PJ_A1*l@eWYO>^a]C592mRkqhqiu9gs
%8$bk#3PhYCNKX+$h;`b2(91+&N2BE`F_\U&/!Z_`G<kC!SndZ!ojiDC:?b$bSVrQJ9%sj72fq-<g;!33n>T>rrW#E$muX$l3mP+i
%k-f?t7TXoIbi4pnOk$S,VGoa5=MgT9Yg6^JA%HZF#[j)fgGZF`'+78m])aVTK%K@BZe"tH_0uDZ$#&Y=pLfEu"f;UUPb'^,'UU4[
%XmaE+FuV=uAEMRZisfdt"LelHGb0PjIWO)$#3@\D`j0\q62eQ0=jVoq`L\Q.Ah.T1&Kic'e'6s/-/I(3NjLhU77BIp:0_"VB)B*Q
%ilIG"!uOZh?s,b3S]RMX(B_?f[?IV7.tHHll=?9Gm>.!(_9b"+pKOd.TTJ%,QQNU.YL9cRs(t9rHFC'*j'[-iUX5tp"2AZm_Efse
%KrbmT)]rlr_FTM%)$s54[C8^XG^K8HR^EcNGI!-[cB`4cJcfJ!]Q]<`p\RFL=a_K&d,E+-1A`:$(p3tBrUct!"boQXiOpk*0Jj3X
%l&@cZYRdn\NeZ`//IJDTbd3H1l$P>^l*s%djMrL'2P8`r^oDMB6b=JY=Z2iB,8ceJbNWU`$$M6cmd8fWdnlZO^9r=7f"O91Is]Ht
%-4FQqF.,#6lG9_W:j&9B?p:bd!Ua$!<p?e=R89",Wp:,Gq?\'+"AM:uTQQSe(SONZ"1s"Q(Xq5>)Kj`E'Z->lO)ZW`WS"Bb3o1t!
%3^qe43EqZrP`'gFg#`ItWXnG8gO'NTVcGuG0dA2.;GT&/*Uf3jVUZ5a=kd_rq1ZOs53GK")[Aj[Sh6.l08@Mb3<mUER?lItb6+VX
%ot()N"2+e'5Kph6lX??EnuJ,+&\*.<.7c!FCMN6l?3U3r$SCOj1'37=XF(N1-3AAYbNea#oqesjRtP'5"R,c/o<<4.<JIY:1QAZ^
%gH7RTKkqRf1MMB1Sj9WMU6aJkli[rF0TH.QHe+8R_YBGu5LZUaE2L+)Q4!\0mqK0sV.VKrFb?IEA?>e2SR3S_TCgcXh6C!^^&q9b
%YL<SGKM$40=luU,pGH<5TdBC;D7cG7lfo*r8qDHYd,sfQ9Zo]NPJ_J%qK)d\P6_j^$Zg2t76a^W;lC#@?U)Wq!b_-HD).RD)R?3q
%qBPCn%32@EV6N_%3`]Wk'_I)V+MDd>8Zo)1Ca_#N[e*G)5\6]Z2Z_>eg(s"%Y[c%fo+S67QsB]<V7/a]/R(-$9seq^?2LuUZ.*[l
%:P:QeKs&*%60\WCBT(#9/cGotH\6B^R&%dET'gj9@]k;3?6]AY2;\J*m-?Xt]LPEo/U\>-B+W\nQ1iSU^))^sg=WJ-Q-P]<B88p6
%f[+m1HrcLr1*SnGjVmeCJ[\dX/nbm6a6!iu7gm'`,O:kZG]s21k]<TS^AOq64'ITIh=j@Tgi/CA!ddLU`@*JJs.GI!bOcDKhDh-6
%ON7Z'Rt"ULP*8*MmI1MkFTD"+%k9_j!$X0'%^8,IIX`pK;iG=t<?J7ET-nW[7C%jF(Qhj9F?[LmhKioY0+hYU"QoqD?(I?'6FDNr
%Q)]U\Q"2.gi+h-3Sjc@FdN1G8R@HqS7e=+U,4t!@^#MV8J=`HQdb"TtrcjeS<cneC(nXs6l4SO@a`\_I.T,2E8Nc/0LbVG6PKJ#G
%JP_8*)^j<-P6*g$,:_!P/SamFe7b8r,aYX-0'4X[6I&:t]Lg9:Sa:Jk=?`0:Ed@g5Yu[%sp[MfMGT\B@?h+s?0^(([>QHHlXH\a0
%;=jQZU4mH$B8m-'7BjQ)]LR_.M=LX4RA6FE^'V=0gQ:bR3[YF(\A*F63a-SdSNb%jcG?-5?^'A[c:9P>jnb0men]R:G!@&DNEbQQ
%++IQeNI/4s.+V2Iig?IG[V7oA2='m?^l-+&oWB80h==3;"1GDX44KK=/ea=f?9M-83mR)d6NUa.?0jO$YXFJb$Mlk_8Wqft0tSQ!
%LBteP^ok4)_m>n"5-me)f]@1_?_DENJ<!`$`QIKNheUa/gT7]7\/kl)7``pN?t[/sl3]G42jNNRBO$!Q))94ld4mHm:0,pG]U\P;
%/1,Gb7n3>?.k5qElE7K!R+[<j1)`Aj\SL`0#(^-&-\mR-AUF0l]A?f8B<O.cTQ&^rTc;B"*Tu6!d61'bYO6Hfh]?1643Sne18Y-?
%=rto(Y`U,-$^3Oc5l"#K$A8_!:ZsQ=Z[0D^g+a_-<[s0tR<ap(r2]E04b?,Xfr%Yj,2WMsonDO?6dh;q((WWr`\mlJFFJt,$H(qj
%4ubZ?(Y2^a^!*/[fQB[JD'5gQ9o8I-VB6j3"=toK03Vf],"c03b&p#"MIn]Yh&a95#!C(=S8EVAS"`b)=+`_)oJ7"U>7?:b&mBN^
%K;Mg?opE/;J*%PABlglZR_->]=:Da.`]jNj$ps)t_,aF3D#=uO<SC90/9V4"0\aA@X=bcm!RuY<c8k+1#$>DXMF]sEXW+BmJ7H2r
%]6Fc9_hnq3c9&ruX7TKKrFC#>2fj+\+gAEI\q<ZN-hEW3IF0!k2,:i?=Q'O],ofh,e2.]0L%=A2CW"Q+6@3F2T5:'I+=$j>A72Xc
%V1Jm9#`l^eGuNDQbIG,F.Y<Eb4##f_R>X*)Z_Op!.$G<#S1cHiWSmEQjD5.0^jU-17A/rYBOl,"8YP>o/6O@`NU+D7bqpo`s2Pjh
%"+@ePcR5'0akN`=r'(/WBqq#l"1//FJ:793TT;KVQXjULSr8;7cJ7c^R4t&D5U#b-fF)LcHT^]Obiet3GLR!)&t*3@oeG&`$VQ\B
%2Eg):V%V<`%uZ.F!IZM[)03j?W!h,#5gtV%D*Kg!jki")cWqMgXf\eQ'>iBE8XTgPCo-J!Cp-PT`!#Aee@tGokY+`uPod<V`3N%.
%?PBi<51ff/O!P%4+NmPER\-.]nLC06U?Nkcc>nk))\ig723nYaZ?5F5kf>.cB[;M`d)HU-Z(6#TL?J/2-g\i(NV(fil4aHkK0>Tg
%A"*)Q0hpNEdo66]FB['@g9b^-hqL1uH6Tk_NP`!)k<*RY]alI(CJ*ul9Bn"]GS%p`*PD\u@Oub3HU)isT)\nIH6Ce--h]",A,TB)
%)sFN5$Z2'a<A<uLTBEM5<;u08/a@ja.5^mEi:o]S@\o(3:=c^ocD%aU-(PCs8e@S&%E:`<eZ2"^7JY-fS2Ir!:o;[I<4u1_a/-s&
%Uk>/gV5=H5%erNslP&0kH?JAap%_jK=Qd\V<>Po\qbX*aQbQc)pc_?<CAq-EG2@V*&@n4dlq>sSk&k'=C0I;W0(_Ul_7j:")Z`%d
%hK/C!E1-Fn4a,-;YK+(_Wfs81rgsO`L]Q8_"H9C[Mi[<6`=`:=AK'FDZD7(hb@.b.*87J!Hd5@nKVt5@-0Ou<Bq+>p[X?T\r7'k'
%Q#mS]9B4htE5p5qKDVj8@1DU"?Z+T>q,kb[_u'uZLZ4hI=C409migD_!c;HY3p6BF_E$uKgQpP@O@K5m1igLQn<kjQ$^C&8"nlIH
%.Fj>.IsB>2K!F80Z\f#jm49j3kRu*';"Mm2_'di9mgj2(MF*5KTntX.Z\H8qZeE25l;5#o]EgcF%0p1;S,:QdQ@3-cK:WgO?f!M4
%F]Pgnlm"10N#VN2VO4n>^RVUM%Y?%s<e%O6i\^d,KMEqC$%kBp+*JDX4(-+Z[0knf2Ao`iRpTA<`X=OZVr:^'0$dL=*$P':BZ-K"
%me[>n'>:@YF]rR(CLVGY^gCttZl/RB+#L19kQ_\qU2s!1rM-SGC0ND$)@l<';n"X8nuiT\8UB?n)bMSC@Lq1FLiqin,Nc0u&DkYT
%[`R<[R+IfW@[a&u`#@ND&XtkS6-Pq;cJbaW^o[ZIJGID`\mO;^r@<mD^WHl8lQDsBiahnMZdu-1@]rZrg6_!UNPe?`MNRY%.?i<A
%g3iTWh_BWdjW-B@%'qcY+-JA1R4ctK6d<1bN'SUCMo$j)WfK5ITF6(\0;G^K.QpA7W?#I*2lEmh.E)(#Z6FIiEId7m<s9'hK@nA@
%!?=r34H.oYYB1WR+FlAr+,4\qc2E/)pkl&F0<EJHXK.ESf:0AmW$E$7E&k6\6S!UC1.m<+<W[biE+ha$WYujH*AL(A/F^7j8]8(6
%DSlM:&bFb=OIW$>_&PVb*B=WCCSg9o:j0XuJ:>;;p47(&r\_MJ<%u)U\4rZj%SW(%cPZpt.e8d,"p*lEl&=:ieS(VkP'9g?Ju9^<
%0#3I`p,pI`cm$t$3JoZYW70KZE@6?->&\n9#HOk!'^9;!0%*;LHJtQoOo!nk:.,HRPT2ceI;u'$BsY6pfN&/HU&>)?;VJB?/N-Xc
%Zl!]cp-!Dk?LtrNRFQ)I82^4JQUV=,9Ot5<5$^`P+SBMmHdWmt5WTm[q8HQBJ/!#ZNOF@*%Bf8t,Drj)FEaNM>&_6s4'sgBQR+N6
%n]BN55>Q8Y(4at`40,6Pk@<g5"/K8_AlbtrKtIki;1R0ZgJ&.ZU_(]em=ZI]p)OI88^&9tlWg/Ta,.!c'[i`$@u>Z^10J.h;.N(/
%=*R@XBes7Zs6+W+0r3CA2B3MUV6QP'<Vpi`%u;J'%R8<f-/&o!Wla]rHLG(H.>AP]'C.DUQ/Z<H"7rp\(Sm/PBVDDR(E_mG+4Y;"
%]f&+o37(3IKXmhRN.m,ON-&_l$'>"42XM942#"Q&o8p],d:t,kJOh@O,;!e^J.CX7-bM!6c<.-Z"YPWg=Nc]%;FniAI9UWr8?^I)
%7U%U]<u_^%'Lg`YGlj."Ws*F\.tR?1$TP[qC7E2_=udVXe\XgA'PS(@XsK3Rn2KNf71+9uLUMm0`l>MJdV?kU1EgZC;5AVecQJ&Y
%IbMUPd7TC@NP=.V@r\;_-2\^M=\PP\7oN-A71/12O*22n)Traa5837*SFVO^X]mXf$WrU%8AVrdGm5V;Z"f#'Mc1U0'L>8Fhq12i
%esf*,G:0M]?uuU7L&iY0V:*Jnn"#SY65BUMT1NE\dR`36\>dR,Bc>PVEQg_E2??^@*j!nP;dWn`=o`E&&e[1uG!OAENsVjP'^AQO
%KNU/"d4nngMh`XJbB<CfW<;].%kW)'dN_6:'GpnIq3+Vh`dfYd+AK?qFobK8Vqb_!K.#'K<Wu[aEK@Uc`u.:'h@R3[q>;:EUDABe
%N!RNuOu_i>HY_sN:D%fLZs^;"gZP/2aY*BIcn1*VbgV;t'KkJL9/IHUgFgh,2qr@1=o>clmG/'CC9'.QHjVjD3rbX?^Kj489:;\a
%SO<6frNuB4.<bU$h$\q4heoW<C$DOd(/Yl1j\h%"g>(f5oAQfrliqnk:Hs>HSh;fHaesYuI9f2frH@)uBp*aF>\0b(^AC*q/B)M!
%O#ElHo\3l>G9HL!3Q;4u\J,/#HTWqV[`dF3A("._N^[$(@]jgol]lqr/aadXT@SM/&]pqZ_h"2r:^f'\1VV&e'2nU)=,UuL:T$P$
%LUbau:@OK@0l,9Ebt>]eNCI)srmSd8ibNihYDlQp>??a=^m\lBelUV`fNgUD1Y0Zc>a_t*g]r"D\IFM@Fsgrn$n(PFcq$3Y`_:jN
%R@f,f5a/$O!s#\telTZTq_bKs*LiJu$YXQg2b:<#Eg,"_NNn6:D!^eK%F.N)>*"e(,T1)>SG=#-_V/-#mYt$^Nt"jk\HBpXLl*>Z
%]0Y'qM%n40QC7qS@-e#"jq2gpVpSh4%R28%!larmO[`O$^39`Ol$5:a23t,"jTT@,b=*=<bZpt#[Z4#;L<n+13]@n_*:b!M#*Q=]
%H['&nXj!Z\a&X1Zf0#3cWl\`\!E,2S942-h80IS@U$_=qJTNl66!DY2H2BdTXL.@;JJ9LJ5Tdh<OL>9_<I,_d<dN1bTglnk<?6I%
%]Df+.<@pkf.;6aum'``<K.;D-ITaN:"ml</TW6#S$S^k>QfB7K\bV1@FlK*hm[NA;Gc3=;\;^g%":=*#H3`K=S;mLM3>qhAfI`Ml
%WS_5K7,VC0>tojJ5-m+@:iB#L^oo:Gs)U#/JRAQC]+&^nJF8((N'THK?rZ>G!`"4`L;TiZ4%Y'4KcXFkl1OD8pq\fUS@*4*Nt2"=
%5]b<"j:B^qk6.WnS9D()X<.Ag?E%GnMW;m!_$E61/kfn/?4#h-]aD!enXTUVa&XE14*BdcSs&K(en+0YD",aU9i'KtF6iLpM4QE_
%.ee`os1nnBeg;1PT1\S"74M<R#]I]fs4j).UIK;'<1M'_la+pFLd]5f<Stj[O-,aF&Yf%ZhKsoXd`d7$e>@`hp;jT;I:aj3\Ihi'
%Uq>n(cAFRqX;it+oBaUUjX9,)<Xu^^3%ga!$XsE1:[U#ViJX:t5kNFhjZNMIB4GU"Gm(e*/mn8/%J[b1`aaJ@[5hoWQT/mkHS[Z"
%JS_OCY-]uVcu'9`1In?b79jeiY"H^'-SdNj7WN1t<Cm]rH>&.SZR.IbAdt.;oGS?aj=2a:[_m6Iac3;s0q;l`K\:F==hE=:cB;Q)
%J=n@4jn%dnjRKb]rb8Xd`76I(M*`"2c1%'Q@EB_GV)d6hgo&Vu1Y]i_cHFSP5LR?qn"I&*QHo`Rm`7LuJoui_$<I/;b6te,fi:PG
%8uZqlFe@aH*=O4!d=9Fs;!`:dk%)idM<=ejlBqt?33dCH,C^p?0;.Mg=t5Bga0,$2B2ajoP[Q:@bq1qHkDHL`=B1<VR*:dKRNcZB
%$MUp3>L@NC`c$RW]\p)k^[pG(e$Ys6)C)0M-?s'H9RL>J3kq?Zj-/Q4Usb1c:K#nF5q&XLM.PX`]9b/?rK^-TE/dhpP1SP=lI&\+
%'AG&'Xm<"#^Nn$2pCt2#3^7fm6VktaFY!s+HM3[[6]\#3SBo0G!9R8-09oie0_CVEF1mTCmT3<1o,P`pg[^c[Cq#/bZA?ec=RMb\
%!Z%b-g)+@HRi]eM-&4aZ'jh-b"EI:uE>36Z<Oj[Op\8B%jY<HUcqpUcE^b7)4ZM`!V2djC2`LT#4EXI?RrfD!<@u=t9^\um73)CU
%StI=koci9.IRifW>d9:pFA'sqJSqHK-N&l0="9PGU:)5B3>P#kW$:W?<lumcFGElSjQ6Y+RBe)?iZB%5Db&=Jpk\0KQIK?W9Cg*q
%NG6XA+M9?*BN0j*Ln(C)]-K$0/o+gF!!'T^&of0D!,cqHdEuKLc1jDX?AB"unm"pZISKI"P'*kcEik!I?_WSaT,A`_p:j8a_Y>p3
%_"f3`P69Z+$J^MdMsir@H'QMjI[lQLZ'6p3)e*(gpiZ:9AP02F4hB#!FPfX$mp4Y4J]5Z6ikOt/G][AX::<)bpsg`\)LP]OOqi0D
%Lq@1$P(-QqC[f(XRb&f%g1=T$*?9Zk#e/pmmL>H\L>?.s'AoV`eUTtN*e=MGj/%t1qip>t@ASDpao)ASAe?r7/+nHaqeI<k<-fFC
%NL2-PGoHIX[.@=`5#c2qRb<gg+coNs4c-=A.o/7WIAT&)ABpu'R]u]JGk!1/_G-d<^TE_IbSsa\q=Sd,Y^<$@5/5d56!*\2-)6X`
%o86r5j37L4!toKsZ3&s1rZYb@E"h4!GJ=^iJ1Q0#5:/abqmpV*AttRLA9K>`d:M9F'gI/BakYpEYbGW..9Ujk#[<q[#f^eN!>FR[
%Q[MJ3BFn-F83kSqU;5XnJ]3XFbN(tdR6q>,XMHKL\%hhV%c<?^JYH$FkE-K-#3?i"pk"\:)N)JI#HX_VG!6,_jb-Ip-H_N+I()'t
%ju!J;9mFu-^N.9*?E2c0T//1n2;8QCAUuQ]nf+:lN),V$mCaboq=DI'5\26FO1:Hgi1?0$;s>CP,iIAf4iNVOBYr6`bY:pQmj/kP
%<FnjfX"F&2'-mjbJNU%`%D#>.Zu`VAj(eKDO$P0,&l$/OGN&HpU@E)2)U@pe%79#F1i=?V4F1_Ik;_J4!.VlH/83>FTh83U3UdXk
%c.6*QIaD#>!.-rmW\?OtD+4VbJI0"7)3l6q5Z"2qV75Xb$H+Iqk'9MAE3p#@EmB)^hD'EG0BO;pe9"3tgkWdkBh:Qel0lLb9aHCP
%auS&L("A?P4ArGY=$e2L!di.RA`^sn$$X;5TA/05gq0cIMsZ3W(*AcNc=\`C$kOY9diF?Bq/3,bRR3ia2oIQ%Vj7k,^C9tBd-nfP
%8aV3Bm:$XP?2\*G/dC5rX5BPCnFf2J=?$J'q"h\j?79j:_d/"FV7WH!?H>T(R-c*0iS^DK,g!`]Q=CS+AiJcT:FXWo#1-4K'_I;H
%:#HYJ?'%r*M[Vj3Q.IEEC\qq]9!3%3Co(N*hHATGY6"^4OnYS#(#&hq"YP5s.VfVj84>T.jn)NhiWG+T+lg._-o)<T$#3)\.dML_
%;n+DRWS;9(9#7q8X,Z@UoGNFk,8*WJgXnBonP:SO-_SE;P4nSX?P[K?(d]dg5J7[&/)dL-?fN;t;MtCo]TW@F:<khhMLob\?kOpn
%N$gl%I'>_n&3m</F@i&KkU[[`ji*T4k@FZAU)K-j!6mN.0!P+Q"L@Ll?9@C6VQ21pNZ?(d:Zp)1Iu.daZ!Rf^/r*1cK2/7m9b*_A
%#+\/ji57Qs<nRnmCUW/b3HS>uU)A(>g$<]>FRg;kghaf>Ep0<]_@/KICr$?tki=P`GhI[EjNu"]cs9B[T$<smc_.nA,bE]b[lJR$
%)0F[*rSQ\_#m-89p1o!A`t%jg?ERT^SUiZ*(W<n,h8PV$$?R^AT229EM>+>sIN(]eD]#G)"N-+AHLK<S_R@\rGC,IO;fp"a&@<`n
%aee5IP%E)r&H%Mo,h01j-qhEmmfd".Hc@E8lqSN9B7.!F,Bks,P`APXF7gs/fe,i#pMog"PS*kSk=Tp24Ie5UU,GXtCMrJeJ6`d^
%P'Ok/2pR8:<do4odU\Q8*I6jb%aKucgDC?9W5/4OB5"[;IR!,[?F$&`K7DGMA2cpuA,--[If:^#<C>M,4qpD]PVCMj%LUDk!@MNV
%m9Bh1p`W`T<eXq0(Kg[.9s.#LjMd'a^5#+]fo+r68hm/RZ;d"OeGUVi,Umr-dFnaHQ:t\:'#tmi&Bu`thF!0;K&g^s#r&B1W5Ll4
%$U0j]-Dbna.Z[BddfmJuXdd\nr"mGc-3^A_r('=dC>f7Ln=W]`aY'hs-T6H`H$juMk1rfhaQ2ks4IB#,mu#`[]PoMO#(X:28/)&f
%rsF?_^BF)K&D1i_b\m`3h,@WGYr`gZO&8U5.-,B*#pe57K+p:oO7=;Qcq0>t2#`3gGaltn57,ok9u[aVfHid.&>dfAl<N\COT(Qe
%)+7umUAs#2cKW.UB5KH9jY)V,U&ninRZf/&MA:h8*7C^u'S+pd!h#IB9FJJ%np6]IM3qVb-^7;r3+&Ko?XYY)mJbhS:Cb>jSAZk;
%=I,KDp*Op4"U>02\a9'!"Qku.*[u-\q-@I;8?!RZ^)e_ol#TYH?oe%#K%pH+7pLUUc<mCAo>gL.d8;QcZ,c'<&$>VidM:)+8V4uP
%8#u/o3mj@*k=Bs=mZ67<`\F&k7@ebK,K&s_a/;m_e0?3e-%SQU,f<A3SWnJ3DQP1u8&h;3D4H!79_i[hN&ZlDFCEG#DMqeg,o\Wn
%^IZ\]Uc)3]b'Y!4dW9M=QgpK;d<=WSr-3P59h.N*OcG=6Vc8,b,K&740FdDPNsqSM-fU7#q8V5R_Y=g=[ij0j1u>O>+?`57E_[h6
%378BN]KF\3=+;Td7Z"DZF?.XDp"Q"Tb!V:"N9$>2=q6hLHoDJZ9=S\^4q14EA5B%'`1c-:U*t+LJj7SD_f3mC$O.B=.uBp%TltE7
%YO5Jslb$L3&k5_*ak^&-8=P,R:0&4?DA"s"D;YA"T<^8lL[sE"D6[1)_pP!%P7dON1K-=VmNEYKFZu<<6M6i\pRL"<2BV@R&ZQB(
%_b""7YK_j7T.ThqI(65aPQLQAHoRD^</i9riGN/`@7K%QoALBoEP<P;:A0WBdBQI/k'P(^bnk^b-Bcn2@Ii*P@NrDc1]!GR^ILD^
%^Ir-X;B+pXl3%KKp4#5L_TTa*T7Nh:"R"GXH[(PZi5g;EkcoqVQs=k$p(i^?<u1<g4PVPVE)5P2<=hTlC`,DVdieA'BpaAAWmKfJ
%]a,^DA!5$>-Q/BNJ2Ro%rJVVBal<K8\F'*'#bd%XkW`ao12n:0KG;PhJoI;eL,>.lIMcXr4TeCSfN%iB'Jb,OUW=g6@>\.ZN[cXU
%k-/AclK?Jd1/_DH4!.<sSrr<dLt[j'b=Hbi]FPmR&fI[9#$6n.,Hi`l?^-],Io/[Ms!8P^r>0%@p*Dp*9o!l,^%,M/)LoU,T7Q,.
%/4]p^EHN,71)0Nm1sEr(b&:Z[UM^#5WGn$4fLo0%*r?`FDc>W5=66J]iEg"qhFiP9g6E:tdZ^YL!j;[he:/YW:4QnJ]d2qs,P[)!
%0Xpn`0>^)I=NMB<"^_@taV&s_K5*=ZHWB#2R([\AN8_*(9Z@Z@Y\Qj\<C;kdG/jh3s-[7A)gs-Hkp]/@(3E-h&_s<(`A+=Xl@h+U
%7+qAu"&.hG-*6^PDbc\bme2lX%-sSL@+fM1,5MjO&b!M"8Q]<3N7bG<%/^28Ee\\fkqi[EGlDhW!'=9&-7P:Q>BZ("U#ab6_]eQ_
%Z`(kd="_d,kK!5co$4=6pTc6!e?=R;[6LIMh;2]ulmPU->;!g2n^a!o$B&ZFUl`mt)0Wl5XE9qa<06GN92/cU$5:3_WTi_>Kc,&?
%o2%1G$kPBFSRI<96g1!B;SQ8ag:>7e)0SC#$p2T^NO3*jl3WRClLEi1^e1UJT0j*&eL69=Uq1P61;hD@7?SmBLGu8Yk^oE*Fe/k[
%k'at-Dl;#>/]XdFr[pURp1Km7eF0j;Xj2<<hE%'PZ-SY"'tsBV9XgWNbb(]3,Y<aG8o(XTB1*ipH_:8'fWRa/=>c%_J`B>QCEc[X
%m]$LBMn,!GmGWO*iblujb::VjBtqkpdOQiiM3T+WKblAB4@E(2*X:1aZUgNi,&r$OFl0q'hYk$(%ht.i"JsO2OBNO4>>[guI"M-(
%=KLmrjL!>fE?\&PlAR,:qV@6I`Tngj[uQ>:6o4j&%=W6n[FoYl*a\fjchLqeZg#Ep!7hPPWba^NLY&@<kNfG<`.l;3o&M=,l,3Wg
%3&-:Db,,h6`YSC$c'-h&MS.M9B@HB:\Xr[bLh&F"Kf7^k3lr5X?Y@iES^VPleG>nU3\e8B\lZTsRnbN$:2oq'Jo!KQ>WS";OXIL"
%`,b,1I-9c2flWDNr_'T^`&8k.Bu4Ykl,:.Y'bBp5CqABsgZ\')bkX[cS[>9db%s*n:gtfbcXkR^jjMu,)>Q]Zh('ms5F_'AMER(r
%-^IF""N;Xlkr;@ac)"@%A+`q^SXAPbhHqNnr$Inn%mVAlO^FAJ-^IE'H?hE>F@Cg`B%)SGkZS)JA_D/<Z.:SRVRpbJ^*9%Ar8dh,
%flU[*P55BFKMi/hjEl9/(b:GIG]uPM*IIsno\cX:,cr<lH]KSN]PQS+:,Hrk>.aQH]t+HUM^Rf?$"jlOX1P98.&<&(^.TrpFLnYX
%8@&:LK6p"g'`0?IFGVXX"Q-Rf`0](..:16BWMj("mV)Yn\ca8ek`k)gI'61Cn#&JY_\JSeM^W`_>!t'Dl<a)p]C3qR_04oV6piCO
%FSBmF46\dN;WRjPRCh3g=X&Rf*d,KXPe$ZkI.G0dm\I-J6P%a!&=o]a7fJ?:;0eQke\.>t8=c[%gi9]@ksBU?#(+_E[X>j+0:3p<
%eB:X^niR:UU)Qpjr$n^e$dZdAnfbdULLuj/<HoXKNj!a..b5N^3W?)*nFHm<#g`9pP8]tTlBPnqhT8BjaG(^!&k$oA^c9t:.r<>g
%'4DR79g0.I0rs_]]!CoKQl[ZblBFc92g-j5L'#.s'b/^G.?'"E:\2@KMJGT%B0McV:@=sP=ROGJ69'0!AlMC]fUh=:>:7h"UcOoq
%a=[`j(i8nJ"a31@Xnd.t)g#E]<BpQNOgHceSKIQ!OYGh`>p?)Wbfef"<`CH%@n=`h1@RNII)Z6UL?4KjPe$c#4[MhbIl&qbCi=O;
%HnXc>%nr,\:f>,kg:1Lop2@Zlr9MSI8(@pnW6Xf]%X2V80DJ->%Hf[,%"d[Q)NJoZXiFmN@5N\B#)&^M#3f]D)cm%rnM5k]p5?e!
%W2RShh>GE^<4LuL^.AQ[5@*79(Y\X;.bmU,5!HLc02TrPnEEPjMXlT<<6BPRKtDD[.J`!;L%un?(%-_f7UZJd#:nRmp/Q1$rR=a7
%EK#6bXT,lMg-2S">h7*e'5RIPXD.pHSj.^rr]V'\q.P7D@P**Sl-3*IF2brjSHk?+a(RHY-e8>IZJU@_/AE3kbEIr`jG)6)4MA&D
%E'iD66Z>hp?gE(d/tL!mN."54>$%64FPXpQ-AA'd=-1?W+U)Jif_>4V7bBt6$I*bEID^J".WSJ2SO.?Fk'r@r$"gIj1f<B$8dW<k
%GW^gSV3gT!Ma!r_=@ku+H8)]6F'OD@3rZ6j#V5#M0#r)_<pl*X/0<&U9b0/QAs)T$L=X?jEa4;q)o)D0'n*fGeA&j`#qP+/I%T[_
%Q1>tGpF,_-#$@#U<TP8fQXK`UU9&"\c%/mI@<cXS'#Adob6&EC&5+>/U6G4W>$i5R:$*J7dRj8nYJrT3Y;5XAcG:iHhKWMJL>07s
%GDVqPAQ%b=e*s;D_hiEuaY.^Je.DrR7`VRIAt&!g)m1L4YJ^&_NDu)`gEhuVq6[mhJ^gl'l#h>KA0R:n2jQa55^_!N$O(Qq71+5n
%IN"gOa+*rM8kkMkLC6#(/Ik[-C)Xl#flj4?n9c`ZZ>V`o-/hF.rW2RB;;NoPbl&IqV%O::>5cIoRn=jC,a#,!JA>i#Ei^Oo/8HPo
%,+i%g=,OXK(+J:QjH$]Z&BlV/RW]T4rTfVuH($6u=4cGZ#p[tu;i`(/g6&;T7aKa7iL!'.4"a/B]PTG2[SAjSWSS9@m0".5"PRV.
%YS3N3h=sa;W+'pp0P!^8q^3g$BbON%;d/;KDT*IL6'l+nQB1CmTiFur3o-j\U=>A0kgY\(5SHURb0nCV[s!D`XL-#7X(2jY39Nro
%=_SE9;oGP@HjX>0@#CFYaJORZ?#m#3V]<GsqG!;oUU5\e8P4i"^1t>P`b@`TeJ4.)'aUk6D1>J?L%R2cB1`SL_SkYFpgA0(41?Ia
%2U9#$gj3Yc4FbM;;t)*equ3jomI7JiMpC>+.QQ:t>>\29Zcn8W^RGE%qiB*1pI[[fL&#2%XVM2"+/SY/IuGI+,4_kG]NEJGY9XOR
%)4Y#D,NiG-Yu;'[&QC)lmP.3s?Lh%ikN['pS9Fhj2X>2[_7UodeHOOMY;EjC-s`ZNd5N7/_8el\jV*J]2r>^(,5k&=GuG"[7:\H%
%9U)A32$M\n^Jd7?Y9XiZ@fA^*qt^,H;ZZVb&cmPW<\f;JM)l!2JYVfQX<NphJ'D+Y#HDHcYt'<Rjm.+T7^7<N4:b<UcH5/mKB,Y3
%V^[?nap:bRn:b?"qOq.0TMf9#\lP8_/3p$lJG6dX+U-l1ML+o/ork\%Q0&'5mGdkCJ4ak_YMZee<>M7U*'iUC;Pglk8IhCcp-e(M
%(80(q5fG`aP2oH&2C*DpW[nNSBb'&I_bN)tn2r_?UJb9[mj/_%mM=pEJ#2s*<Kur]=o;ojnd3!Ks-]U/13MG\=HlUXkF8@KRA,(<
%?F\T'jV-d8r+CoX4^5[!=])oFkPKA!A9;I]2g<"GopWI@iqZuKWd`9*EkUho:^ZOb.JbsPdrkWKZ;pjfa!o-^oi(d*W2JqWYlf<k
%\"TV_qE:?Uq5_)U,&<KCeaEtq/$A1c?e%sIQ0-uTooj"mfhAOb74Z5KXqs*?AZPYVY$ZIPY+IJajg0+.Y&gbM3lCFOqE5OdqWk_A
%r#$,Job319qc-odq:0hK*dkE!TDV1!ACj"Pf2',\T1V:88TB"Uq5Sl`5Q=Z)r>plKrbYq*??FUi<PRGCj*N$P=101-Z__KA<W*W]
%92\a@n,A0o/*cuQLUl5gL$"_ErT#OfhKe2rFo?2Y1p<pOCu4I[Fo<#E,efqST7"F3YL^K&Fo<"dV7eAI6+!YaQu;_h\phD!q[_9N
%P=e?PE\^ObX2fGa.iujun\(TU(&j*%Ie$M;BV3]\lM?@.E3bop5??b;FoA+a"`P&G<6KTtY+H!+F/o(.AIL_*fC(FSp=m0-$DRlu
%XQt()7hi)jpT&UfO*jVk.\cfAFo=_%>SlAf^YZc0lR2-#@eU[aeQurq5K.!ZH)e$>]KptKaS(4BOK7ZEdQcfUQE9C"YNAAdej!Ek
%:K1(pX84tbO&&UgY(CtIcR6Udp%Viif2"R<=)#mD86rt8P2V,/n__pjP>$_/X84QU4jVaQ'2)r$rR0)slM=(g4D-O%3I-+gY+NA[
%IPWXlXQq7]YDo8VWOT+gC[B2jFoCC%qJgNgT;q3)lk84U-1eP?L[+a+YhW4N'?_-h9jL!ZK\6/`ZEh&jnd2S&55&5e568_+mUI],
%ihLYpA2\Hs3fLAUIe&7%kO8+,?.U_^>LcLphXX`jrT#mB\6$gj&%A/Rc@C77l)\c7iUS3W(hkF<m@kf-h%)Ntm[_.?DWP=EBqH20
%$"pb3X=sO<\*Tg2G)[YW"S8#aAe%u'^';FH>R>4DR/9nmg(D4Of2),QE3F[L2jrSAP)Qs#na:((6M1/*(GUZl4CTJf9uJ&if;t*O
%3,OYqaJ?4J=i!^U\[R1rc%g=21nUr3d":Z76E>\0#?q(NT:n+MjZqQ4UCV3;&o"`M4e8?2j*l^UWidGNG:;e(IU\a78+fR[*??.&
%FAfF5d4\-cO+'O<As.PJ""Y^_)Yls^0U0XWq"R-h&*\ec;[o>DR@R!F&bd6,=uWR-#>CKsDeOLdS[`Q53qEQbGOfADC57G1:3gH\
%G4H)P]G\]eenZJ&Z&!nl<-inaCA8!3@a2ft2`j@/7o"J\?#.jQ^<!TElUQ%=bj0*OZ#76L?3s/):XX#">,+rAQmNQ@R"/9q3P^.S
%kZ?$YPTQk^1@p*Ad6nu!GPZTlTHtL%($s929[[]k-sSD[Vk't[WF9f[F1H3:8UV3`GY]jZ9JWZ%>s@f2J`C!Je;:N@[2S&X04L0M
%N:J>u)frfZca;7!"2n`j1bcnW%0&_'8^.HKG8eJ_CiNQmo+Mnf%)L5o5YYmp!Y@!++?`r.*DrY2Q%"4!c._ff]W#!_!=O#DR@fj2
%.UYs]I8JtN5m[W%mOt]5Z(0gf:C:DhcU-8c1gY["?j4:sj&:P@Fc$q]mhb?C2L&pt?Y18fGj2`Pkd9JuK-K[,V^KkRUbcf1ksCq\
%YNacc&NVk=_NtL9Mb;;ZEok="kiG[i`]aCW>;^kTOEYXbN)&EojZsVm+)oUD_IhLhU,@"3(QqgbG$N7F]UaI9ldOcue]I.cc9`P*
%?\>\2FJ7M&>^"p7Z3<da@n<F\K4nesY`TCm$1,Lis3KPGDDe_0$U4[\J@eB2G.DWI`de^,9[;!qk\ch/HHg[6gh6Z\Q7>K^0&'Ch
%hE+[%XQ]ai86]<Hc=*R1;3SaOT*ddJ8n83A@fsL6a@NQNpu`EB4egD?$[^244hpoJP^!)IEqss6S0b8b;!-P%O#JAjMH72DHg^;a
%s0M7MCi@lHmI,5^6K6B*Jk@BM[+Bj!_i-\="D<D`p>o[GF+:pPJCEDJR_*D6[ancOp6M9\aa6qOVhK2<J+GThpPX+KgcJcE4jC`J
%Qf7PLmKQbS$D+-e"J>'PLnGq=n[PK("IaI0,!Q+VG74&@qMEe>a*nFuWObEFEf]qjQU0I9iAkrS@:)@5LB=Ac:QmG>m\Lfte($ir
%hEUso/(KF<)A^t4n@n[o[p/,Y526ghhoiF9Yhqq+kRtT`:J/n&<HY>4lZmfk?#AhU!g`8gI:ThAY*G%Hj-os0.A^5p\'\LRo<aH1
%ib_mLd%=K+<bLYm#e)b\QUX/;lc6=`@cn9>A"Gf**h,AA5P>kn$V1'Ag5udhdl9.6RV^<3)lcWg:JS<8*o<FdloV^e=)YN#Jo!hk
%;l&sQk>X'@h9^^.:*1UPD!!(5G1EL[$i%\UY5%_%M-heV)8-4MHIU%OhS-ag_?F8qNE`ueN#;FUj3at$BD5hQhA,6AoBumofN:K^
%e#EkF9V<sW[][^%7$UAbWTD^\';_#6.((V,c-kjX>W1`&hSFD.6l(C#)A7os7kQf.?H]qf\'Zgdr@>mF/3&(K'i8#6J0H_dQ0]2u
%g[-Ej=XeN,0eRUN6m,Hd^ZN_ae`r(::fSF1p/lhBp=r\@'.^i2(V#STLI26QjmG(Lh&k!A4Pt:oHkotj`>:j1OeTsJc^d!e6&k1f
%Pd`P!.RDt\R,).fH:#dIq.,<o&u1??<(*ndn^1:8_[*6jYt=Vo:]dUM5A+\'Kq*flI,CK2rcm$`J(1Q%qd.7DrFsA<%jh^]GlFV<
%'Rrns&C[dQl3Tt(aZmD@95%>(b%m!;)L2Bjs4l-Pn,3*Y-&6a8%UeFr4)4b/!TU1%c16:&AP&@hpWphXrD;^t<+02EASX_=Wcj]a
%)_liD,=jj-r1d:$@eKREs1BbfeGN'5;i6S+H#9QbV%%6phD]T<rFnpnCFa.+Ra;)#1?Q<Q2?#FY7CaeQ*h5EqM!a$D$K_/eo9R%8
%oinBDNIjr@;=lSH=9WAfaP,^W]VaJc30qpM)iEZQo9OFQ4d+=<_sK&%cK*Pm:^ZmMVT8G+f&?2rT%,CLf=HmoeG:gk=an&TLKi82
%':Zrcc_BTt+J$5n5Dt\Z9LSk_H.$-7V]$Ps8%[rjk]qu%ltDo!S8+IrhYP/?*9%@IZ9P/hE_U&FLKO]]?CNBgp.rkNGP2$/^])a@
%Vo-g3qkO#e:tP=p?dpE@53cn^[cMnM*h3,8.^*1Ij/LTD@([GZn^]4jE.)=Kb0A48<EWArgZi@XA$PmEi.b!@l:'lmj@Pa>D5RL!
%dTUk>:>rZZVb_k7K"a3HhC(;Iq#8k*eY?oAq:0*?'s@!!L>1Okc\'FVQ:\fQ2RRP7;nbI[D5rrfq'Go1aAV?9%iW!]ISB5)[?<TB
%lW4>S;*\p->(g7DRVHmiVt>D+;_$^>EK4.BE;=A5I:@,:IdKO(<WI]^UJ5$cblL<MXI]"+I_;L<<E<]R(@aFM!!%]Z+Ao&j$@g*P
%0Ddoj.[1LEbu:a<?FJ/18Sn_.mU<H%']7tH*<*5Fg;1t$dZJ']PWb4j#(thq5?EJ#>LN[+3]>t@kNAl7Y&90%kfJ/HpPZcHq(0B5
%HiD/5Y8=8[\_&:qaMiH*ON&<acclJD.<W`1rd+Ts0Ae#*3jO7fqGt3lb!j3L3=P$j&.JuK\;tEAYijR"E@l%/[Cn_Y;,/s^Pg2DD
%3)E8XF>HK1GE4kEaP&N\h^KgA7f2't?lh^%d\aCs[c[hPj>p>AgG&=;Q0[&V7F:7AYo`8Nc"e8Cr7OPh\aDlM9`1m+b!isQdqV!V
%B1'WT7:X%]YAX?,</MDm49*f5O!C/*,)(sZEn2e'^"9j.2E,K*(oo=,AXHguB"al;b>b\<-5TMrl,l6:(XN!$*i0A'QP-qbF#aeV
%kT/uk?GZMD=B:;8V]`Hthbue2CU`<EXjR*dQBU/'h0g?djn4t*"g't2\Og%O1"IQd)ao^FicF.l"C1:MfD58l'&1BtCUJHYYq3*'
%S2T>p)K=esq'A@h@boS:7h)Xo9tAs6QU*?UJt4su@hRYZlc?bRhaTp_A#oaHp(o7:D`!a@mSP!+Sr7B>+;q0W2Z1OgQeUmEMt4Ds
%,;"5oC#X!X6()"o"h2V80>6uj)>HO.8R?hTd`UlgHEDRErOSh3cJ;fTrB=YT_c>'7gGP^oTY>ofYo;'q16"1.:nDb!)EcH%,056q
%+F[)Ac[S[BdE;V#"j(o;eVKf#D,?,iZih;pYUfIr`B\'+CVc/e\S_$%U]UOi'S#;3jIc=!RbEF9-_W0$rR?SnrI3+[^\kXjlK,pk
%J+tA2AhmktEXgguC9a\B4!`8rRhVP2r`Ns7XXX`'93jY?Aq.FR6N.aBl%PDnrUTqCH:E@HoiuEXD_Y[KpTjo>FM!R5YcMptZ\<!(
%Al71Q,0rf$+u;<C`i5ZfbiLcY*:u6Di]m*@;/L6u?h;g-$@4=+d+Z3tS)+'%L#;<m[Cm>2\`_l-Mn*<bEZ4?5#D'_Bc*@A[k@a=B
%9[[[Ukiqh7$dWMpH_64uX39)3iq$CMEq*O`kBL]Zma"RJjj[O@gAO,)D6^\!Q@+Jd)jur#m`W?m?]$DrT8L6oj1[\L%dP.K/\Z>`
%O4tJicM+0[?e+Sm?;mJ0rnRM*+`RK(\[-!4rS,HWk55&Ra`l`.:n'D5$cB*Zh>B;+qRrU\Rb+e6Ru:[dA!;="r;7$\mcs03EkNIX
%1bFCH(;4"'7MeON67D"ECg$aN5*&Fh2n'RKg.fJp*!"N"jW@7QQ-ho2?!G"Q-nN[BpjLPSFtVYk5NeZB^IC8:Ec(&(f47^LqAlX(
%?PH[K0,sPf9I#C`-*PlO,M^##%:Vl,\+=sC]<bURh;-[)AnJJUSZR6MnSP8<e6I:1s(F>5Q+@bNdC^ip.6F0s.]4T+Zh-*&8b^([
%gp''<?Dq\hG_t/3WSERS+.F6`lhnb4?*plYJ[QVHisTq9WPB$5rKX3#'YQ.;/PLYtU8tSXA@.9_b;K'hoT$k22cn3V!i7KuJWAha
%G);%XObpQ2#1A1";W9oak,FD9%e/,+^3kGcq;^CNnR-3_V1%mEQYTlqS%iGtp7Wpo@)F5<2A2]%"4cqNM\g4\'"%<dalat0E6,`d
%g]:\ss'VQ]jD0\Nf#B%,-L3CBqUjle>^UK35*h5U1,KddA\2H96_\n"m>aoPI$;6Wp#uS_2),m\]r]WM=DrJ%@(Lr`$O:T9-@m7Q
%*skMUe0S77*S-91QAVm:imQ*F7_?2bCTK-'?RjOLPP41m;THH*=T#`(3nJ[B]A>@cYKnSbJ$6:=(X)9>'D9NXFgpac2em2B@ct1>
%[e_$$rnQC<[:3Fih[_tX/M%.#3@#9cCNWIn:m`hk7(9,D[;Sbm,j>+qC\IbgpX7p7iVVE$oDSa%ci(</3]l0Ke^_%V3k>3DSL+p>
%Tei'`3GY:@TW7ZpAL4'Z`a*k!!p#0H+*[j;r5SPnZ,q7M`5dVed:%i"%oqPQP#ORIMLMERcE0:s%'XDEM"jSg6KqrI_(c-W7g]p!
%Ta\uP6$i,!^C5hb\C_jl*(=HZ>uD<^[\9$X8LXuAiTlb]/i07/b?r`Me2;5JhV*!q,s@'nM5Tct#;=)D:]=g?7@-4Z`<J"S)3_+C
%C6cg'WqXm&G?C_sVD477,dNf#Hnb^#0<9-%[I+%d0Gi]?C)n/1pC6\/[9EF.!XDlr!oqu$/s\^<es8A:^'*fb?l+9WgQeb)Au5>%
%es'+l0<ke5Dn-Jlg_&%9L>39W?\Vl)U^Od-CSOaVR"#%^PcX,1Subr1=T;P'nc`[$Z.AGA4hu5l_RrVH%hA9!MaAq*@gqoE+R>le
%P5Y00ARNmHkLLuK5FTd=o++)dZo<4_K:MRq,#f-$*M:(VI`5SG:GQOdSh#TV?rOUQ"Qcch)u"Ue\_XIQfEc\[fl"Pd`]UFJ+.#dD
%iZ@YeO/q.YA"M;6O))u*TJgk<*6to*A9ScX4"?]k2KH,O1Q.Xjf#@oOX8)!;VL>#/"`FMA-?EkSgW\b4J(c._Chs_SC:VcmF%hOB
%M4=K@WZ.F$g=e.lDFhg<7-t[5g%gD'em1B;LmmUj3qB4m$IQjZK)JlI9LOa-1*6`Z71Q\P4<*Y6Aq*mR*mHkapVr7gMUkPli;78m
%?`Oegg0b*L;cdKOK-rP*)9tG>r;,:,>L8Fe9%%msrO#&)MF^YhX2KGLdkd!\ghAr)P6oZuiOr4ZbsRXd"Ua#Qg^lNI14AoMphcSX
%os)=;eEr7>K0ML>T'f>?@_u0bAT%[/(^iEZ+%ptXJ'MP=8`ZfC71Od8F$$H9,:G.$d.asl9b(P)V=qmGA"gU.GkEH(lR"jD9_R9>
%R?s%^od2KUSQ5nfn_hNo;a5;[#>YgkA0FP-i5r6VFHQ"-LU&m<4F">2@`epONh,f3:\3LWBr5jl#>^@#q+I^m+6"qF*kX#UIkJqL
%L,5&HL9EGnrL";_?iJstr'DbV3SWJ-6j3*L$`ag[2`ne/](H3dRqUu!jJ:>6_gmrNNP0+uJE^*L-(eWsnTAc-b=Ql7^Xl\.+W5Ce
%6sU8hJ:*ZP5CW12e,<s(CjP6a@<:q&n^;$IcrNno.<aqi?3LdjVZ,"Y$13Xb2?-Xb0I;'8=[)j3;p(_V5J;@nOAG!/_m`cB0b.+G
%D`It-p\ackU<H)1S6qCo!FJBb%__O%^)3?`cRbSM7]LhMBABCHpU&u4&ig?5C$_^WJ:8_39qncJB7b1bb.X$DDV+IRp\OEZs!gT9
%q]G;OoOWPCOWmjuHLW]_2i!=R-n=nNdja`kjc=*N&g*Q5#"7i^IIWE'W.g<e=j:5u8C5N\&eLLe!!T1>S;W!]a0(JT*s;bMr\?S0
%pN4kS_GM!R71g.L'PNEZ1G^WjXqio?.&_Ogd898:\aY`/K`q-i.B=QYh66"nHk^\JUi1bVK6ol?Mi.`#*['^0h+MR$5.F-[s!luS
%E3m+3lQ/_uqW^Y#lE>'p<Vg`ncs?!"!V)(f;]ma8a.5OV60h%C&0RTU$4lhSgrc=C^u0PPrPDU/.ll*;YY[ZCH.E[>Z+!#WCCL\>
%\:uL#"#Rlkl?Old`o9ZH'AQ7.li-`tdlb@4n@]f`$8OpB<XqW.B#=9t4@S$E!E*;"?M9m5$j/R[E%?8V-_>eKiRs]p0Zd'%\sL<>
%lksgo4cBh/7;scl^]V6.Z,tj$q"I\S1j?.:.?:$qj7:%JPM:G,+4fI.p5\6Eh6AVVQ2d<Dq022K.=0dS\G&*-^15'opj<Lm#CH8m
%MU3@_C)c+n2WQcBh(]\"clHViLr#3pe'/uhmKDgqH$"X)PTp]kM*c/3A&(>lM&[4:e%QYQKPr0lLgD(sMpj)m\Wp$t`H(%VYT0(\
%L:[8'LZ2sE(^Zu:pl/.tX3M%J6Vbu9d`E4_o0oB;A)Xt&YA=bNT;/gi5`63*OS[VP:#7<sDW5M_2c>N0<3ItILI?K32,M2kC:&S8
%`O6[QO/5'<]i*`>7d:U,]S5[21T=?)njSdB[mZBd$B%OD;_"dEV?I9/r$n9%i##_6(bIT+f@(-Eiq2k8D5,H\F0hh1\'71SYM>^#
%*;e)&L(+YDdrSX]9'1F,Mot-Xiteb5(S+(0Hs%dRf0]JJqTco<[BoX8\=Q*dF8Qg^B.rA3fn[Q[<_"o:2(_LPUK(K2D(%>I]/j63
%2ccAL2G$3ijidD+UTW>;bb(%CnPDIZ3QDWD(RWE.*;p?6%l;/fi>0>*<R-sr1ePFseIg$&]R&?C5tGeG*g'Deg1ICoFoC`PCHRSW
%O-q58Mj3=1^QpU6>>^kfDOo"M?68O:75f8X):\4#3JmG2<ip*bf=sLkD+`8\jnnBB#1iUU[&$g2Xql%*HYuDc6^dI[P3&InOKg3,
%fjCbT'W6HDh4-lZo;L[:eSbn&aiG9G`[7gbqKu--/9VDAX4kWhl5RubcbS[Ldc_\Z>Q!@[Mj1Mp::0bTJ,iR(TCBOeek+\ASro]Z
%:;&_s.dHNLIQ%+[0,;oYA-PeO,p,`[jB"&;J<@3JKm%4%^oQNZih5S>8$6H-7CUbaAl+6=bLX/_!1Ltd</Y^O'%'-?A)So^U3]^Z
%jeISD5L4m4I&)AG$Q)eMCJ.d_/hc*F<9BJ-h\09f]kc54ZeEjIhMuBhnu>d4G?]t5b0A(\6ZNtDY0EhARWKNaJFcT&%(eT3WmG(0
%KVFT$Q[X)+,C5Z<5A^(!<9]WRlUnF/[1n4SgA6WG#>=&J+;J1KZ0GMqpT(AkD0OLlP=])WMPW\E8AhX:q^T@ilS)lG[`>G]kWH9&
%]_S8ZX'CA;Mf!$NImtZd'$sKXGKXlFYB$Xj^YGrlQd%b+q^UEubbSV-oaX+*e%@I/OctZ`GP14R:`8=r>`:l+%9afR=amK;IA:R4
%_N>b/U"n.2#tVLJ7ju`9nnstee>W#s(qbjiZU2Hd`N-dQ#p(n)EqU?Q<f-B7PX*S7kS]<QUK;?^gqK8V\^3b>RC.%B0Ft3dmsNA4
%^.+Jo5rd$dI(m*&?$)PU$&X^.BlDT]Ng?fm/9bSR1J2UrBTZ?)d)i2g2G`El+<Pf0930;mY9?7Dmf.I7Sl0.>n]4`%h6kfT4^:i]
%bWF"(e?DlOp/pqr.i__MV<E:2GP[V%rnUY#5c8ti6)(G.UF_(Q]X;\=l"UlQXjrNc1%kOOY&l#L0t2TO_k-U@g[rHpP.n6'Zl;3F
%q*C#ApEG(=)O>S]?nFd;J(U<[TY*"*Lo*PHX__*nJ@:SlSA^Hs=#/X5m$/qn-.ndDe8-A%RqhDY))9^GVj*D_.uD2H[g0ij@VeUY
%`_%F0QL:R\=,a!'!<\7bR(n,n;+auMFf?Z3`^XhS&S(bY':(&!-Z$;%D!2dlff-V]&7d"pCuo.d0fE.`!P!;fKY7s'a!U`i7)[_)
%I?<+>!T.f-UfsEI[!M-&b]-_bg%]gmn%8ZVBOaqAMTXHnE5:`o4J-adr]/H!$ZfiqiF$/tkJL>Xqkl<=EGnS@YX,:[ff=3`o6req
%8&^ZY_#+Lm=dsCW`H\RA.&e?S)kb]O65]p[rDFcbU3$tZBbM+mcTWk[JNt0>qYCeSp]>;C'dF]@6U]Wf!\JOK%j95^S*Z$>\4RnZ
%JX0ne8%qS]TFJjilpPY/l_Vu4g7-No7DdnP#EZ/\lO(#k5nZ'HiXJOc3S6iIGnt0A7r#dGjO.Pf(7e5YOA!99ipr%Mo#8MLS7@7`
%Gtmq8dDkcG6nLB(4Wb7<Y-Ao@HBD#@PWh:6b=n&f=JBZ9d+kVF;jePRJ:H_$-?J&_9Ab,7-n%.%bFA-^jT[0DT-mm_MqpCA&'L!)
%$KoJ'GVX"B!^Q(2qkb>O&b/dcSMaCF8?`H,1-K$S8tg6NJlM4bGg:\bD!AnHZ,>ieTpN*.*.ipUaXtZ5CWFEWI^OhX;s+9`:P.]"
%/+r?=??/tu)cN/9D@E&OL#h,-.9q!RGf#-5Yo4_%Z-T!o<WbBW/fthlrH8kB8Ohh=5LZ0lGgYiD&lq!I^TGE)S$QO[)@PPL%oPiM
%;]A9d`+%0<J\m7`8j--KraD:e+Vdb:PC'6u8LU*ILIC*SF#hq-cpT?rJdQ/#PL3H;#=_WOUT6d^cBnt%9FQW=]?-Ye3W#>>_Wg3q
%pNjpf.@_H/&ZD3+.\+"@&!bUF30+/q':\)cK.EI0>r[thR@qD''W.5>R@M->#eZ>#S0&iaaE*N'_F^M>Kdp_e$E%R&Yid:7_WeOX
%&h9EIg3dhb8Nn#G1TXZ84=A6!S.'o+4=A6!S@D0%Q'5')l%>c=kHB/B+GCK02"sg,'3$s=WmF,p9Mj\iCT=>j?`FI3S>YJ?5*SnY
%cEZ4UB7^J'mo<I38h>\F6SG3RU<fR;%g<-nWDO@)JR7$ILGFb(l.1EHiBnJOi?VD)`%%ZeiU"i^T#,dI&Qdp:Y>VHB-E(kr&$K*s
%9Mj^?Hks*T@;F3-J;%"4+k?2X=`/EYXb0X1%W^Hm?=%[J_U;G%VKBB32R?S94iXLAq6.3TLc8a]r=h>/$d+R:oD(;@3&;Vg$n5/f
%<G:BKeOFgTcA`R:IGPDaf^udInIAYV,L@g1_T]O'JAXIq]JP0.mbLRq_*,75dWA`"Rb#!,UJ6fD9@I3*EO=u6F_T>E$U"[e8?QWE
%+4981%HQJ]);&u'ap[RF5ZQA*2tc18CQhNUC;//?@*pQ;[eA=?640LUgF+T%i`X&4eq(\;lF>\;>]PL_^^3:fIpH$>)k6UphW>'P
%J:1.P+rDOE"=6[J=o-MAT5#gng"_J/2au/_fmPLpo#HLS$\jm&HkA(Y6"9*Gm<k:&AfiL\TSEDB"d37$1T0.l?U'$LpGe@=Zda@o
%f8p0PX*f/:='K`ANa"N9<S`sE$OrL#$)QZt6d;5u\)H*,.R(BM+p#5HaV$"><OBfkJ`8#c;/rqH@!S$e)dfg79K60,s8H/(`#W(n
%mOS3=EMIl;X1J8JP+u;dOa6Y2H4-b[1pG\!)f$&Pj@XU#S""l_0BFO)-gb/Qe_Z*[r^>S!1N![Ub:A@?YnTQ0N(+?fj.OUdHi+4>
%d]poC@6KlmBcs"b+H,_/ge5G*8A^gB&*a7PmjUDb:s=2\/:=Y!''_sANU6E#Q-anLdKPR=k?QE32Q@3o"SEM'UjN&U<[6ZGWPp];
%ApN`H,1\P(j4T*FT=383G/Ii-&(ZI3=q\Qje^`f!F\S@(8..d?*b$5W+UKO:GfG'9T$\D$BC.8^2R(oW0EEVKq=i(V]Maud-!o4`
%5D9cL:",uBoqTiYgl(Z8kA3,Tm\6/Bp`lPkdt+92f5Y!P5)0M=nlk'f74_@WmWAO7CIqk2o;mM#F&^+2REFb,gp*^cdRDp1*[Y+5
%a:nYN$!XNAH.DPP&m>Nu"1clo?IAf\9/q&P[QD`n+;-cc)Fp0F]_1904Eb(siic]Hb%+&,L%<,?g2EH=JVFgfP@*k6dl,6=B4=`8
%4h2o(S!-dirPR[h/8ZKJGjM0Z(s$&#7,6leYKIJsBR/J*)!Pa&+sC[XV'Lm]0pejkm:;g8kqP#!g]F>+.Hs^(5D--K)dH*>0%%Gj
%DgL55^*`\]`4!^Kqq<*D74Y2"?N==Zaoua^\5%VH76Q_[8`)HKKtjO:'$k[_d:T>oL8tcJ%kFmaDUkBL#Lga^^!nk]6J$'jehq$=
%1VZ\SC*@d\%jYWoe.BMa426[V:7.!uQ3`[<Ad@u1nFaf=_W9me,Z"FKeH$N&/I)fHG1MB]o%o;V0tlMQhhIIi#;'$J3"KjL9hHRj
%r\bgk&5%P"7M>@NbM\rod_^H*V2lY!c%J-CYUDi#d!5JrluOo0oc'N.IUR6AIuAI0F)0cQq<[2=:]8]?:,MM0.$@qGQ*7l+n]Hq[
%7$0*Zb_YNP6?TQK#RnX_?Oi?0fUo?(QM.6=/fVR-[F_7gV<:5*e5P\2Kl^^d<qA7?pKia$T'hM(.r'.A](*Ko/9uCU&3MWSkHO;2
%mkG;`D!X@))e8MraX<[8PDrG0VWAJG8jFQAHnu@=XkT>2^)+4>D8Khc!3==-ZtmTi7qe$2Z'&=GQ[Gr).*M`hQs-8AL6,QN<(.?#
%G3&W,gR23urFb%*Td^e\JqcJ.dfoR]!Z+D3+Hk$!&#'N[T)<QAkdPVRn.0;LIKf^k.]9ZTjNRk9H*Umh42>Fhk-VihH4tXg9=-5=
%NeopEY*tRd2A`OYJE+B/Uj)4J2UJh%2Teh9!fAlL!)G!]KmOBGM-mITX&-L`rnbrRE/mUDGl+.F:mqP`NKU]MDl\/0?nPU:aHLnJ
%P.'0E<WosNG2A-W&-qt*O()a<E^X9XbS/MRZ&]W6=[L6afuNOoAq9/a'EMHoD\>WqKSM.qh]-Q,!]'A[3%#eA&7SA<BKTUR4F5F>
%R>FICFO;,+rKl,A/s%K4+N`St?2jh#S_]ob2f&<e`fbIf4%%nAra[tNb.#EhWbY?j4M9/Z%USHH3_(f0GDeZB5<QT![rK)KG#a3R
%fZ_g:Y.h"S79][UQ=WsBNqWmu'6f1)hB@'jW!W6PoG5)SP4l-47<2,5R@IS(.!-\'i5SlT87?&U/F$.p&ue<rZ`p3Z[A:,HGhlD7
%fjio\7CDs$J'h=[Rsh/Z('D1'6c;pCR#O0+V"tdiLhEc>r^Ak@5+RARQJ]g#hc+K_["C;.Ga,`-P_b&hp&81^;+rfr*Gp4%.`_ch
%L#=Qd+:f`^KlsY,(;AAH@>t'N1a*%@RpZoEBATCd>;%U3K*t>og2d/:KR&#`,2k$0_k'=q?_WQjEMQT:5+l60;'W2\MH$!b-'RA5
%=5j"GOi[@/?;Y_]KF#IQ]rQK=/&,h;48*]ABtJB=>[,>;_BI6LhVW,?f?K$&h7[EqoA_BHJMaEsn(QuK@GV=aWoge&o=X:"s'".T
%4)s.=\_WF2e1!SV]*+u1I*j6Fa&fiJdB5`BrH-*sLp?9j&uAa\U2^W/0\u6kOY#BqlR&N<DG<n;Ug]/AjST:O:ALVL_e^L9Ia0pE
%:tA7Z[R`GOLDA&JeBFWN=D1P?+'G!Z6qEtd;IW+k$YiEtJN%a/k=]EcUipPCl`#P36W\dd0"0..;?<6Ie?u.<6AMujocu=NdbT>T
%>JAuu=[8F/YB'=-BO8Br<EEiEo#\WgD;#e-BNWuX1mQLb\O?ia&As[ChY^ERVdX<+/"s)3@;2HMD%%\]Kk`qh*Z[m[4EKg:"p.s`
%TeMFM7Vo<DakN0'CJ.)Y)k3@/qm3.BSrHH"!a7)5g"9i*TKSBPk(XYt.Po%_rei9W.#j,^o:XGV4`JLt%Nb8f\ESYBr4\pio'V<F
%h1'XfOIMhFr86rRHoJ_W4D'=cN_M9hHA&^\7*p9odHe,$Z`'3ph>4DI*f=fA4^PKM,*,VBCcgGE/RSq*_#enp4I\\UXW*tZ^5NiI
%H\H.m!DtC*Z!bDRHLZ4"@>Q0MjW4tFduA?kf./R1mUG'hr$_<YdUJ1)]MQ#U:k0Tlk;&K6^<_%WC]2q_D4>_QWma\gmuhEDH$W'H
%b?:DiJBXZGUkC2eW!7B7UGhh%kV.&"$4+i(/[C`Bp@LRnBU@S>7'ri^lZmfk?#AgZDB5;"r@)hpmpV3tc]Ck8g9Z>a9uZWE=4l0&
%VQk(H=&1/JSA*`nY2%=c4=f0Kin]b\Q.TDn_@WbNrpT6,D`'&"c"W_oPX5m,f8b$[U<msqhJB4QXI/([-ke>PV]S.SEV]GUD?`mu
%^I.CSe)[^c1kF1gb>LBaCuXJZ&+pSX36dIO6%9L>LmFT3Cg!kaE@k[N:KtAtYY$'mF2Oq-!%HRTE3K5kG$4'':+lhd/J85X#XtM-
%@FoBR7FbhfH]:jh:%YT'+]/]YoQ)WYej?l.gqY*`bIG;IpgW(\)L8cDYpQn;<L$XmV8N.E3:o0hZ%Q!$`HII7&p,&A>q252^q?5k
%"g))`/Rn+r('+$;:AUgY'Q#'*,4OOq.I[KoI^oIEFg.fjD-!NVXV4=+/&&]uoT[c"7!Bn%UCjPL59nm<17DPV>\$5q:e"r0h2%&(
%,Kjc1QbGqrO_$A1_@3#<n[#:Ba-G$R8]d=I]"/T<dJdBd9:$#<ndL:Q4[DsafZ-"^lKRl^YEdF2<R1h`]8147,c]hf//#mOB\Unf
%+I)7EnQP+oP#&!Un9Pmd;<R'KWS)ET*i<#?o"/I&-+ku=#Ni&!eh#IdKGWO`M)RHB9W(UI0s,@/R]&5`87NS2=N*1r%;AKD8JcBj
%BgWff`[1pGV[[?6o;cTE1T([r9FKN+L.ebrb;"ri4gR->11O'X0+WPq/<nT@`6>?ZQSL9'@MR<:B';h!T9o]mX$K.*1/H;X:)Son
%,$h@k&2V8f*mCq#K^EYlN4.q?gu[^6,W6o_5>sihqmh<@>tp:IRig()7c`V`lt=4,AohaI@I%-X,afg*)8NpGUgt6/6d]Kd1>I^Y
%0kn`<jQ&V^RmTe[kXui0]fDm!(@d4l/")q]/po7=M.@H11-8j-)9E:X=D<U!&U.H:(Eq>\H5>T4`(P/kFi^mL9$DZG/j`V@V<J5"
%8]>D>0LTb%WMNr,SH:A`+se8g_GuD8]<tpD>Lf3+<lIMn)+HpH6-L4nX@r1j<pIiP_MSFtX>Z?5`Te5\9i)3XVh6]CCBUt/b"l*d
%1X`s:!Wc#"\j,FeD9rb^YZB8sgbdIV_egZAoC+\/%AgD`+pPPO+K_iJQjbV\cUo%W]W)[l/W&&7-j=pEZ8EhLf8$N,1q<5&cfFA"
%5>0"Bp-jWaZ(E=P4WBmgg4#?HoaJJ4Ht>N8`d0PoPDp!9.D0fm/@(k0]VI4IB<Ln9r]4dW_frMD8lL).]$mM`'+8RS<*KsRCp<a4
%K10YP1^h?4cEL)',-bO^,dX)V:i^'CrV)_UN(,BE!c!$eU7P!Y=[NNG8'0Is`(q?rCD_t\oe%ou`[>Rb=UUuh9%L$3UpMJ'f%XPq
%2%gK5->]ZC2896?4L`+fA<"Zrn_F76Ou9ZeUW>#@2)8<e<<dFN$q]$kgQ1e=(m:u:\I@I5(mM*Bqt\<c\-5"#G5T4>[EH`Nmk&Qj
%NQ*@n'TCV,XLXqsJ?Yk:eem)';*Mm.%JJ]4"*>M!_f?sPp0(;UVSX'>noJjh3nEh+RYMhQP?m'2"_cJ1$]>iQI6lF.k\%u*g+;&h
%WbP:=aI3p9hFh0JL9-(jYXc?s\S?_,c&_30b1df#XG*\X`:S5a/IUB^U0(rcSBK:9cF@E0I?d0G46)J]5AOXTDeE=\k4c+7qXHVV
%\'lR;5@/W@enMYi!V!7B-=9fEHICc[9T0"SSui,m#3#(*OG2o/6o#k%TaLrNTn?l>#)cLrK3OR<[.6/1U>b!1dFMC0<EZ@>P,eSb
%N)bg]4$a38>6A#(Y@/"j)gP"\]f;R]_j`ffTO"36s1FGm$;96)aN)(2p^KZb\CHo##aE96#3qPU]+;4mUd2K<K.3]`\TX@6;kRe3
%g=7shT@"@OWEDFhb)>FY2[.@#r$eO/&W@`r;GMcUel?[ib7'X;7G9re_is6GJ<"?-[tRik%<U[4JQNiS."^07dC(b5[CeOdI`5;l
%_WD!2Moo0;'J(#bRiTu9eOL7<p?,U.^-8qmg8hOWHFlSN#57`o@NJ1iJd<(UndLp;'<Vnp*AW+plMDg:4C^?5PHE?G0K1;Q@&Pah
%:O;j^\NF@]4NBp8H,afJP3raR\NF@]4Mt2ZT#h\[Z7JB(%hqCU(u.k"+=eFLL>iXHE>?E2'G,\B1flsO7mS96%dbb8*<cTj$OGb>
%8@7d^l),Vc"qp@D>$DQ##$U30G/pFr4giQVIuEu.%U0B=>W974IDEe-Z$t"1n3fAHZ&(-PZ`g*?H\lBPqsSZF+Rq#P-A6HiP8;Im
%[:F@.8$$RNM._9"Ij@NIC%2V4S+8T)8W.4fZu%Wi4_aG&CbeHpmNHr#&Fg1^c"pAE!tbY,EFqZMY@SnA0NK?Nn6.0K2XGib0YE\p
%B!h7S'4-S"WSW0CX6EL'%!0t&QF2&7^A<Oof%@&XEODb6+!0hm@N*?Veg?^]oOVS#^JFP:NS_a^TDju>-e,q@8(PsTUGk=8IPcKU
%kfV1UJr*:94I/Ir;c7]g[-3,4\&9nV*_q[^Qod/L5#,#.?Wg:uB#S<I?9XJa#1_.:E5fu'%MM`5HOXB)8nl*n*&N%>D,1Ts@NQOS
%_`UK!10DtE(]Qjf_$80=(0(Ph`X+NiV0B1qVZ/iF_)QAj&=('IH:6"fViYl^^CrU%58[m6"?M9_N)`)>H^Q(a1g+QAfB9me9TD$)
%T\>X]>/s=/$;&R0=$Lok:]oH?e%>c$QIB<[93hjIPk=;ZiX&\)4?%D)H'<=h&3o;,EE1+4k+u<W4T,7d8X,8"q-ucgi_-(2:&Eq5
%s4Oi8(Z[XiVF]fF@@r[uC<D@#p1pFIcm=tR^1,j#NG-[Mk_>h.F';9]hJtTQ4VifiO3FuYqpq*N@ip>"?rG;XJ(P3=?<#n0eR*XQ
%psXd5=Gok4^]+K507+r)^Pp76qt551L/l]IINc$mOB#3do4:rn;&t3fX0XW`TdR0AOB%?9-CEfDP>qiC9EHY\]iaqN>GjEuX:o-p
%+S5>:ed8WsJMc5i6uRG@C.MA7nlXcfm%^n%h_rb9lNC@u>=VQ/X:o'nbB:+W+Z4*2l[2r<SQlD]Y?5qC"3A7rG$J&gNe/<W_o@-k
%;@HTcOi'>LFb6]`WB`=E3Sp@/H>Jc<JPWJ#/XuR'5Qfa^X?'sIO:bXg-lm?OZZ0,jj<hL_\ifkt?9L9Krf>,i5M]+s<KmDk"7"Eh
%Zg*#5Z$=gk3u;81lG/`C7(\]9XP0#]#10CUB@T<G=F@eCWCj9pkHm!$X2Z'W>c$#&p$0@r2<g*l]J5pbeQtpf_T$PR0/(>FS=^q)
%rngO4s'mPs<pb*p:UP-X>"B8^JbN^*+cMCu!r#hT)gE(^=l3Si/sg1*A(A<V4UDdH:KC3en0VZIO.40+6a&]M0fZ4'4+C]dn=H_M
%BWk!q^fa]Dq";B"T950s4khd1jhC]*OQ@]7R(.A<>?K-'Aj/!J24*:mI^8<'!1Jeml<-K'jF$#j2<;eIWZjYQ*K*ibIZ5oqdldG.
%VR-OH@XqFE>9XM2eB>b!"!CH%<X!RQ05n%7/MUo^L!q>7bdFF0m;5s.Y@.^&U"-(/fAMZP/\+aTpDY@sBgkG@(l[!!kl7<7(fM'K
%Y^fc.L!&nZ9"\hVcR1nk4o):V_8BQG7If:m1g=2bCU"^8)LQ?VR<nF27tZHDQUj:8YG8ogW\]KXncGMd*!g-*U,[t8UKhDa1(;jj
%.f]LIbkIoH81bKIh"u\tTjF-T?];0;>#=0s[([Ap&0qPO,')a6F=Wp$dL'_s(.41rS@pW=J`pf"[lHp,Y(@tuJ>3!*SR\Xm+%8cm
%OV;JidF1KU@MNRsZ<V^oCb3]j(d3^YO$<$M294oPbT[c4;Bof+@jnVE(d3]nl'd`6Esr((PMPG_Tffeq5rHDMCc&<@\Huo(CTUS"
%=L?.p,lK\p`tD$1*i.,/B[JbhXO_5rhsLiTCYkYh10VD6?Lp6_Cncq0A0J]0_M/TIenJtbbYd?*O<`t-4r'AhF&IIi#/JL/Odm7A
%W]Y)::XbiphQ\-aUea!:Z52)#POJ;\OL5YW:V>jd5h90ND^mo"!j^rkiR6rc'9G*2iD$<7O!o1YX:-24;J'-i@s7lan?,<R7@:=X
%kLERoF?$l-RT_rP?07"pj<ss_`>(o`m*<858UO]YKkhotc@Nb[4*<c-Di"i9^YE]3rIWOe?b_o>@],Q>5Tt&MUocJq8$9=aBoWce
%+1Xme^Y7i=;9Hl)\"?K<N1S$GhZBF34$69&g5+!.H5b8PP&-0+e!T:\nKlR&USfi+>'gD7[(kLQ/f+V>b8A]aQIKW[)/*_][#giN
%("EqmBKgn`,RZWHTQYIrF>3mZ'>'Y%":5s"4&:h^8"La'i[%:dD2./aqi)pBaMJ;KA`IAGs0%6g)n:)pOLl=M@qiB;okAFR]uu#_
%4kGabEbef"A#Zo&*Lf_UHS5Y,nD][#!=PHPSY]`s(5N,X']%_OK9XBg0.((`\t#!me,n(Z<)`PtX7A:iUsZe*kZgUMI6S+M\tnI)
%53`3GOea2Q4bY_o1sUhROi)DS;*uNTe&8qc;J]%lWJG28])VC8cYd(o'$jfYifN$B\DeC.EL0GhZ9UOiS"*OJZ9UMsY;2s2AV#*g
%kq?cC/doTR^Gj3bhTkHQiN)djhaX]BDMG7'k^2ZrTL3i<7]mHCA3Zni.0fL/>Z#dUU;Q0-K"ZK!OW(5#@CnN[[A')2*?ZHe.rHSj
%gX^CA^InLY4`;h%Y91+qTA#NMlWgufQF6eaf\rDPO'sc^G#4t8qe'%#l\:%VE@5X$q4:#Ia!MHJ.c6SoM(9Mm:"K<CaK>Z(b4d/s
%TkYr([Ub%kOpg:58_1bV+$YSAqX/2CZ:6u%5%2'Mj2bESW<X&k2UsSKK9u5*X!CYD^1U$Po]!jm>5G<#KkY8oQE[;pm3Y%025aTm
%#kmH3b>sBtZJ#di_#f>lnlU+Pom.\1]0RGf`#/.[Cp.8$l(WKDe$_6Y=P6hR0=B*6J25-Dl\Cb@j&Pdl+I2Q)`qTi!=l9OAj:M+m
%BMFa;,<8.U!ou"`,R<V"WO+FuGaN"d3CH%4=pmC58.LcCJ9V\sG(-H>lM>dGj'jZmb(eNJQQ&."bP/Dfc)[5BYo9C0):pAjQ#mj?
%AkMW)D2_V@*_XC%W;2Vt;p_6.1@"eMdd#r3'p/*+juLm-15nkC@g?o:Z9^Mh$(RUjrC%i_B:gu$;*EJ7dT"&mgM2GoA&YTH6Bfkl
%Hc&C#d.hW[Z]/F_\Sp)'rnemn%CS!3m[G\cP5D+Kb_uMqaaKrW"%UI]F,5lq,p.[#LM``?+cf',+*1jVVH8HKg<BO98V^`+j2ihO
%,0NGm(!IFiM7l&<Wm+p/f)75FnQttA76K\T_l&Yg/*g7]Jp]l'%M2+*hBm3FhR:c2*jI1'Acgl&HZi-*7h6p=U3#)$,pCEs^005k
%Mh!:fL4\jtG[o'a*iSl@.8M!HX/eXs+nUkAQ&`T*<LuF12o.V+7\Xapa]THI-k%mRdR-L!DYaJlNU.h[CCqO&T1AR9RD"bfpP>=Z
%mrbg_mT4bLmbVloOE9,h:JTnlJ,Qg&e@4f;]&ui"caCa_B>%Nage`4LcG[3*`LhL\F,dNfSYN$AH+D<`Cj\<Z*A202c(1r^1g9A2
%Q#jIW*HQSHrPS<G`iNZtCr=?Ie)j7!mV'\o!JXd:$0d0AF2(W5lpntB+,j1hR[b`O@OS`Y7)Zmba(08b3"b3GiA4Z2]l*uUJ[;Tm
%eCPH2]f[h#m?I2.WK4'r?S=[]mF8CFa>o.7\7L#l^R/68[n$l#L7qW='HPn,CLO&e^V%=?PPlK6CbMd8/Wb.gZG#hb6Y0S,r]SYO
%9eb13ZeEjIhG2Q'K2n9T(R1DS"c&0\O<ZZQ5^FCT+8@Q0Btm"_o.>%IN0B$9Qj(8WW.p0F`R[A6KJgU"KltaKlYEXDk2Gp82KeOe
%`PfG.l*[0Y*B_T![P9d$].ijPTsiHX<FCHchpmY*Y"ajZ8??jceG?A1Bc:QM6E*`Eh"CKn4><1g)U^VTB\(lukWrkIn;"$H/JY9k
%JG\e%-scW9Tj]/L"^:cLE0TI4dV5b\T_5.@*k)KJkrQgi>i0_PqL'SdE^KPE<?)h4]i:NHW,7Mt.BkiEL**(])OZ]nWr@rcq]FMd
%'JP:QhhBkS*frL(pEk99%mV\V/e<4<YhBDo$$3*T*9=%-PJ,)THa'l+?9tJSPsi5uPCHYmi**&q-]8?1!Y2r%pV=`5`Ur9u]teq%
%/WOt!p$0#D9Wt0)Q)bYt6Q<@->JU73G/J,O\3@)tF.`tDRs9@'H*)):!'0'/!3OhPC''].iF,MFeq@ipnh^`:V\uP_&FXrTe18;j
%3$i!WT8PT>b'XTDH!o;(]&5pD3q.T@,ch94"l3Tg"a;WPo*=JTdA8nbf7nr.>Y"AbX;pYk)%MdZ-f>)Q#&'L*G[FDW_&#`0]MeF:
%=:>N\T*:Pl^1^0U(K_&+0Sn8jEq!(Rq;k5?\lh?M0/(TT\-oLQgb&b;!!;oPnW#2Fb?f>k9c4,]=ir)7bPNb$ahn<BGj@?-1Vdk0
%PWZ.thh'#a[^m(hi_oZU*LYEb^/j0a>Q!DMm4%9%cWqtt6Y2sbb^&?dE88[mh0K!4j1!^uFK>.k.YRG/V8QI#h^QU5;)I04.^f;a
%^^`D9p$;cq)"enf77,$#+bYbQ>p2GC#CHEmE8QRI99DI*9;jp$^>Z]bpOF[.PAACScobP:JO7tm_#Ar[`@p$\^eP;f0A"#"g79@M
%l_N#]?WF"O2qjlF%^Z(tpCHRDX+p*&k@p@JPlUJTJ]>O#=)iAKrY0t]o9Vp1oAn.M2!2nYkHXi(nmcUC\o=Hlp5Cd0>:WP7&.%CY
%'G9P6S!%DQpW`34,M,1+]q$WF8>g&dFNPs`n>euaV4l,k/'>aoo<3i;P,2R+?(D>+TXDIY@=F-2o)8K/*p(/#fimp]o`Eoc=]HqZ
%Jg>ig<.&n<in0n&LJ'T)In8%Diq.._6<q]hk\nlE6pncDX:Ok>J@#@hef*TRcJVWNW'>`XDPN]f/r7,A"0p$1kVOn6Q>RQQL+gU9
%.:Og1LLktTp,ssk0It>]FMlQ^i)c#obK\T&M`aJ.(EnJT3rN7Qk4VC!jm4e:75+[H)maA$(q34.)_^[XICspaI)#](s#aU-Ri<k2
%XXM?koBf3JrU+Rlmf.\n?Z,j,h*$7J=2rEV]8`'jgM#I"]\MA'([92Qr*/N5I9cWBonkH!?BOAGBDJ7mI:rPZq,9J[Z*BO=XYZS"
%Q)B1Wk!562k40H=:9OBh*ko5`.HP1A<d&Q'oqQ-%,d48u.MpZ7_Fban8gicM8[WZnI^'A?q)5<j\QR:eq<Om:lc/5LRe'C_44Q]t
%rGnVS[,-;&aIm>jn$V>Fk&1Oi&"-r091R<Y8m446XSit/;Z-LV-s&MjDZT?_8%G&9eMl:@.fM5j.kPI>Yj8:[>lO`-Q7G+:s2`IA
%8.M)o"985If:mj9HTbg]`I=P5lh1'W=;Y1?#fU0E()B@T(!p:<='-;B<!]L>I3C/#/1O&f3=NdY#8.ck-AS3J^8Tu?m/Bmb(g0gW
%4c<YT$R:Q:^.e-`YV<A]0K'e9=;Y1?!3Xm[=GYDH#.Y\Ekp@Bls)f)6%;V?Rjf9=]nq.#iPg.uOe#rOhErj$Xbn],B2t;e0,bqii
%*'1XIg\:H(^X2@e)NN\nq`9>081lg*io<[sh9bl5es39X?<p)S[G73s6>BY^;Tl@MMid0!IM=H^hr=J?I+FD;/2rW;i?Re0LQ-K1
%eb(/l;t.b`bagrn!pD.k^cRi!i_&nO[-dROJ;dLRd;$'YgM1.A?7JAt<##iXO&V8k9s"9dhVUfZNV)ej%j]a9!n9&gAA"pqm1N;R
%fsSF8"Z<I7cu?H;]0_J0%HaN8Ug0NfQD0Y]8GkPqe,g[.<Mi-$%YjlWKIIl@3+)[Fg172Ol0b$<%\s="))3_d\!,-4)#c]<2Ed3P
%WXHFL$9H#GO.m>Zi-0&<U<itOG!9X%epZK95H@Z%p32Idqs.:64Af0I%WM>>DH/X['Z:C):[g;"!W'l!;k<F$dW_Ug?r!JBMAn#\
%P/5>n_-!(njF:5(5D+#+m_5CbjdjQG1`aWS]A!^Nm'&0Hc!A2mpssckHTA9mLIAkD\XqIL!JF?XL+a5i@^[SN*4R.TIthu<NW;:J
%SU9'VeKK]T*7K?jhs"3`O8Bk>`/oaDc_[4?,Pr]uE$g#1ZO]-bD8W*d(r,`1TZPM2S3@.46Ybk1(t5S2#EU!frZX*4>kFMtkfr6N
%dXuH@Sd=IalT7POl+;-+TqJ+_.*+>BDU/Uri:I=<@3k&T4qc/Y85OeQqa`[QUB$qnUYrKP`h:,\a^HH"<Ast)BW$oK*?YAiV%d7#
%TYN^RhC&XuGtPp?5K^[(>8.D4p#FMGpL*NpGHq21!Yj_fO&H[:mip`SMgM\@'jRRW]rk9%$&H92pN_uP@"O#tY:%,phe.i,f,-1#
%WsO6fO\Ehn[W1gY@tH@@jmr)bLtfH:oVprVg\BV%;DAj#l&2Habf--I#B`'5Y1,JNfV#EplhG$6nc4$qVYK[B)MQkU?qHT<Z.PtZ
%Fo<qI+[!RI1I7i97;_AYU[Mn2-:1W^1u;O_'E%hD?#8.dr,"Ro*V+1Rh1&dPrA!imgXpiPk"Tgm'MKWnerOaD(d%`Uhjrd=ZuZ&F
%ZP+4#&`\H_7IM&qeFE4dBN40iNkHS7*K,8=8aXD]T.>Q!#N6C8?lRFA7B"-d(4."h_c!$JEolc!d9camp[A&@ZMO)9Qm+J;n9[)V
%`V&mp</:*t\pNauM*<WkmQktX(asn0$5;#%+/@YJlfV'9,7dAUY2A58*?dq%FVRdg&qe+XZM_p\6,u188#S"`;+KK=U+ObaI7#qs
%d`\d'0n6;%GDrQJWga,&1-Drt/j(Ftkjm,=NCZ`0+r853X$][tc+5'+jO_OJajm'+Y5kNe&D416H4GLkO:a0_#,tc$YXL:ZKA-6>
%k_kNoUt-rJ9T:4!:MlpJes6EEHYl[fX`EiuNgAi9+hqQ$jlJrdoL3G)/EqXG<@mq(JU*@2s1l$EhGIfe`CX:dcbTijMo"0b,gcZW
%CD6SQ+n4'UP6=m9XplTN-G5MDbq_.@erSZ7i7EC2g)I$UC[4skC3J3f^"H55IQ*n6)^+8uP$&CKHkfBc)e5)L!643A-o6aDblVh=
%^fe%*(Z2oX!Q.oW,&tBee#D=FS$()fR^8a*=^>BKhG:UARDM,>LRf&85Mf.8J1a#*Go#V!;q^c]Q64D;OKgNN-%EGT6=68GZjUVE
%]j-'YqF<_3R:"^,rO3lVmfrfrp>+&i^kd*m?BriXRFLeXT<8msVq]!TH:+F%cpIC#8*Aeb4qHA$Hu7.i.",<<?`m0;gL;1uN%B6s
%Gntg;B4`P^&,"8ae/2^SO`TcRgB<Srr55XXrG?>mVc4`ZEKR+i,B3CF)1%m#.]L8-W6BQN+\4kPmg=W\3KU58V#KqiLk2951#HF#
%i!K(GG]>Y#X<RF+p2c7kr-q6ZCD)$s<*h#rc^2A@Z/F@/)O%?WaL/u2F\YgS"6&gPE,/A(]D:0B4\O_1')%:*d54mBIiG_&9;!4(
%=diW`Btc+@Y8)/O@Z(cKm<Rm+21TuVoT%^JjHW!IBGTaImuRLONQo;^.uJApHG0j#+iboWiKN*0cbHYC^pp?#rORLH?N&L3qj9-6
%s-)D+r7>u/("F@,%0M&6nC-gufF/WZY2mX8cXZP@;JU+>U:g-tft>)q]RP4@HN12=$@[*(hVDOQN`X6b+'cT'b`0pK8FcqCL9L13
%!5/@d05qj)hpK3sT:I]>Z?4,b(#=QCf,YM?QV>S"**ord_pig5-_JKLSZ/ZEm22]&T/a-N)j]L)L8((Ch$$K01]+rb(]:QG5Q$*&
%`q[<g'mY1Tr:EZ(^W#ki`Y;.4?n'p9("KR+D-WEEaY@?9QA0N>Hi+2i(]^8+)iA4-WbV'6\mr?]Us,&;afo=!1%XGeh9Yimk?m7*
%p%m)GSB]@&k7s!dTnS7kG9f\d2+:SXgAsEmTOGkd#E:@8VP>(k+C'X_TrX3Llait9VI`t^nL)-i6^JMAd1jK=i2"f>%D.c/2ub!W
%n:@<IYaPlbfcnf8K=Dj.@_imnXUN5fN\_Yf36lK5iAe_pL>r]_s+r]V7Tu.$ac^40Yr#[m(%%WI`fqcO)Y?+NW-+bQ>*<]:R]8B6
%DTWIKcS?cjJ9g&i2#'9P@nMIV\sK;KVPXtG40Y$Il\8nb[V]4."tU67_`9-R@H`MWcn6U`5-o>G4u`.S_pfsVK!c9prfM3`Wb+o8
%W<,2>.OtkMA(d#])dtm*2/UIbEA;YV#(Bq\d'<\pWGKEg:"Ncu<B"dL;Iu68#5D.2NZ<5:=[ljk"tf[hXRI%Upa5pORC"/d"V^o/
%YT(+"1@3UnA4)-eItAi$jB-q;7o9`9_D)fg"@^cJ:ek$0+\7_A!%rL%gcSli4<3Jdo>$!1.hk$8_)r([&@aPX+;_2Nn;me%k`V^_
%\d$bW2Y#(KVD0B&[c,rU>e6ZMS4Be8DB8h)\9S3jmW2RfZ0OgG*rcd&=]42*WKu\Fn8dGnW$]:b\'9G/W[<!fM?JtU&?%':fsb]7
%P3Jq7FqklIW529Y'hlN[3IW%I,9R8\B'D&^$h6?0*&o193KC)n](g^Fo,ri=>VAfP!RlpF*o*_'Vs;o*VmMi_nGD5-&`AG67tB`N
%Vj5oJi/+BW).B6LpHgY^fM@=%_o%X[i46-FbEf7A@VeS#l[`RK27"inT;O3,7mO<SGtc"%:k!Z0n-DbY4GJMRCDp#Ag!Rd_5qn?E
%3P\PO28W2E&^CKc8QT`a;H3r=Y7ksuIUE"8!rT:oM"'3g]Fqgo4:?lS$md$KE&/3db.t]@IQ7l]K;L'uQOhOu<Db$rL1>fei"bG<
%l&+W^ff_P1I,GiMnh-:7fFLMGWb'q(,*#d4&Bod]cu]Yo'3kc@4HCfA1,<eC@md\7c6LsX2idr'gcPX#pH,RSDMCE,1P!pT!<W@*
%`[u_Fkb(1YlD>mY+BZK"eL\KY11M2t)(Gk@&cei!VIH$LWq"P[7FQ4]U0o#WjG=/W(<cmLd/hqXji1c?<%nie%cGrhJ(#Od=>Z'b
%WPJ6/<"N`)GfQ7CYV0l8!IhP(GVo.VXi0W20DknmKNed"*>fjS$;6"1N(abjBH-GqAI$=?-o?ecYS$M1We<bOp`EafS"6?*RY99I
%\4I*#[U@F3-Q-H1nMH\Fi;6MJ_Z3.V<bDR,R$%nV69pZ%o@S"NN=]Z^232-LgcQQs\6/qOrq`,t]+;QkBM1g^T>?L@i$5bj"qX1q
%X?bGQp`fq`P\&iA-.k"=cNO1Hc:NT-Y4M7,"nN"a;goc!2PPS&0TRh8^i:&VU2H*KamY.[#FGOb*eb:5;ulGF5Se/DDCDTa`12P=
%'K6D\)g2ttMYeGp@[D\Q1h`Q0W[^793'u)RaI8m_F%--e9u0%\9+=dIOL,aa`)&kak3368@BCHBGuRE<dKql;U0qYpGTK]]i!1Bt
%TGO'X1jKId?lmn1,ant:5%k2jk%.b<m$RAMp;P<%_@J_h#g`Ip/#f"8f_6sCR1UZ"@Uqreb_VB!0estCB#McL(mts\1LalaN6I*?
%))3lk7V9T[N#7rp,;We>7Z>QIOVol/,=Z:`aG^t(&L0)@A4DO%LliQ01*]8#`5mlSR1UZ"@Uqreb_VB!0estCB#McL(mts\1Lala
%N6I*?))3lk7V9T[N#7rp,;We>7Z>QIOVol/,=Z:`aG^t(&L0)@A4DO%LliQ01*]8#`5mlSR1UZ"@Uqreb_VB!0estCB#McL(mts\
%1LalaN6I*?))3lk7V9T[N#7rp,;We>7Z>QIOVol/,=Z:`aG^t(&L0)@A4DO%LliQ01*]8#`5mlSR1UZ"@Uqreb_VB!0estCB#McL
%(mts\1LalaN6I*?))3lk7V9T[N#7rp,;We>7Z>QIOVol/,=Z:`aG^t(&L0)@A4DO%LliQ01*]8#`5mlSR1UZ"@Uqreb_VB!0mX]l
%Rd`Q<T0iN==rNSNA,K\D5cs#<BVm#d$ke583&mS)7#N7H$;ar;Fdd$F2Op\bO6Q4FJGr0V6",^^\7-Dd(,tA1#!C_HO$rI]_\kJM
%`]uinZL=1#\.!,M"+2+;"UKCP_;ZgtHq,52*0^Pt!+\-hQAuA/TF#goU(n79+,ihcDZ'g8,3`;8'E4oEdfK1R<#^KY']T<Mm3VlJ
%W')WOR=H*RIDAGt6)(;c&MjQI@"L*^6)1)@X4_aZ?pW<U5pI51(,Un#WF>3BJqbA2(,W$CU"fls_lt^sGZ',JBgJM^&ki]0'2Sm;
%'`u8^8IH:S,S7T6Xl7<r"c]3H+9q'WO@'u3:n"OZ)JK/Dasd[tBhs=8WBgX_5>Yk:ruKbnl!K)^DFdC(W2_&0MX"t$!a,4@Bu-Nr
%4p1N['Q=ph*CC)@5:.sq$sh;4Z\#\\7<fD$r0Xja0ho#ql]u@f7PEQdA(#tK1*mf=JnH@pMC^#1Jh^t*A*Xb@3P)4OQ=^cOKSP:(
%P86!jRME0T^#@#-#)t2pR]0L,Tlc`Zo'p5<Jqirg$;eVN8IH:Ie8GT=JS#$A/;\o9a.rluN<TK0/KhM9LOodMIS<A\kV?BU=k7"j
%LR;3Jcj7Xe"c]6LZ6I2gE,FJVB_X;r6)/1X""V2t!B)49_u,V'?pW8&D1^!+)nkI>?qabN+E'17g_tW8C=&?2X]RlrJq3F^@o@p`
%rEV+h!=H!+fg6`+(m>RhTG^>bD_MV*m]%*B_3gI[M5,LnZ5RDVC<2E(>l)Q-"%62=O:tg9,HJb7-8jT2Z@n5I\?UcW+r?>*_A^p0
%/=W(>)Knf#ckmnHB^hO6RC^C,d'.$.K>n$/::"M3G;/qb(IH$"8J)l"$uqhe]hXG*PMRn"C^_l!2+mth^W/pNA(&7(^k_%`'b8+G
%F].RnoUp1taYXHb\DJmY&jjKr8IZRY?&E&LZN(n]9R>'9?j0e$"(J!W?7?#3)3W\o7_),Y\%4&iBMoKF_i@;!1E]e.gmR/(A18ZY
%m$RF<d1o6<WT9`+MXZ%8A($"LOJACg&N&jA'VTM33InH?AIprBW*tFVGDAmhi`)"(%28.&i]GAE8ImToH%J=-RN"R9Jqb;0*]+^)
%X^Md$N+#ju@`+3t%iRs)9T5j!`H>2)'t>ut5sk^<0]lY"Cu$f\&N&:1e8DObJ5U(u,b!:<8XL>*%6Gn"go-l*R4;$92o8/i%6Gn"
%BJ^TZ07l_8&N&jA'VTLl"lgG.8IGXkL!VM`dXt$0+DXdUC_C\;"GReWhAnLJa`1jaZAr[NJ11VU*KqOV9LH*+97s@13-HH%m$RF<
%Z#n*RFmA5ZTt>8RdY#Po[F$b3X"*<\6A_'KP9)Q@.[cqT.5Z?P9SqFWWSM%/%e<EL8n<l4!Q![53!9ndM1Qm3o!m\uQZ.LhQsXE>
%Ni&$,+9er/(WNDA2EIflI+F4:AR]"(fHQ'U+bjP]n=#3$"tW=QaP89/f:"&3,1%kKR0!dAqQ;MR6aJM*#<$53N0I:_R6D`g98;hY
%Ja,'8NU^Ld*gqTlmuE:RGCjHmEsUmtc$nhq25Z?4MpLhO5^O-&ER6eM3cOQGc(!!<QV83*"M;qgT9?,*Gd=VD,o@M4iLoR&Jm#!+
%p+m:[EsZg@\Nbqj?u-8:3TNB'j'9/uS.Wt+2gj$l)K.;a%W`A0+MRc:SNS]TZ$Bd5>C$pAd3YG`MM<KNYeap[`>QLnF2R0]+aj?B
%i.*FGlq?A$,lL6;lQh3F2K+JJ<)8*#2Mek`+E)<m9)T"!X5*34:.T_Sd(WK4^_h-0>QAR>&^3:-iJgJ\ijcdf?jrR"%!&kXOq]Te
%S4hju0nN]oL//!$/6,Sa),n=E7fhHuJ@>I`At?joa!BP]/G;Xh"R.HC7Lm(%'J$[eQT-4WAT%9j))RMW)XnPE-lD+IkrXE$,r)L+
%fdVmHng#%QYaGKY7`6"&JCnCorWAm1gi2L'+@f#=$OtG/2_G*:s+n`?M'7i&g^jdFr"p@i'^"'-Q.OrAffY*N,FEUkphU>&,\ZZh
%8a.#+dI2EoNMNdJZ7L1qMq^(W=WhfjR,"R;)Mi#]d@^1gT]t1-B`a>df&k'8iG^;1nMr0M6Gqadj=&BQFeD[KZQ(-+dYlahEPq[B
%H/,2#bqSl]G9eI%R\>7*StJ64`soYD#WM!61Xs*X,TEZoBWX=m2PbV:R$E@!jr]3[mYrH\Y`]HRg:A[o:iK<P:/`j$=Y%Hs!P,[i
%@FA7C7CXiha)TBjYUa=f`2j-*%6D)%af'=)Ne?"N3Z<l`"rYZ0+<2PgF#;PM%83s"9>s\KgQ9h=$js"K=SRa>^t#nZ:6?"0aG*Ji
%qP+6&^fNFC!pgMP&mPE9F^&Yo65(jl_Te+k`QZGdJ.BCHWbj2a&n#l/+`g6b)K+FLXJ1=WWkab,,`a0<,S(jt(km^PV>(%XQ%T9"
%2/"u)BHZpK<ZK(%Kpb>p6nB,SC1\lIKXW7ZD?n)X&g0MFU(&;,L8$*1nW(()@_jMLKuU5#`7ko!#p)Y\V@%0s5gXm#Sh)?NV)bOY
%&ti!)'!sPcZF3/TV"AR(:K*1Cp.@i,oh`T88OXS57<B6'hE$W:d1qUj,Bcbj4:[@5)])I:j2O4TKdF:P?_!,$J9PSh^+JWl[/^8J
%!;Xjc0U.kDdhRg]5_X`<CpYilV[^BV46A7%4NZ-^ibWELB"aY%ApLO-f9QY&O?r0.E'q3g+V#pNMJ=*AloJY[.ktNT@mH5_jX,O9
%&,?S=21DYdC5Z$'i$NnH=#>XG70?/BSg[e3N*hJ\o,%S$j=1g_2D,65,a&=9?_dF9`0LTQ`,`c8feHdK(q?=fn1R9fJCG,@OMLS1
%N-U?_:NEjeG_;G;LY0h7CCE"MNbTJq@=CmO0Es//VTLU#Cq,Oi>DaHlfH6R#[`t;[JC0`RfG!_B[,Co:,c6YBdM3/kk%\%L!)hO3
%(7=&]@`COMJ0qfV.]g<S,i0-&PQK8>H&MTfY%S4UTkVmj<ENpg*V($LR\X_P,[\2LB^OgEWX+8i\EE@W;i$+fX3Rq"$&%I5T]%C(
%0suf?68M)'R5W'dK#!U]UbcATM-]A&07/p%0Z0PQ#Jh?jG;qmD3*fHM%CZt2Re2-h98tYpc(5&J'VMP#D^?H3a-V0`=*bJn:eM=f
%+`IMd9u<^d:rTAtE5Se'^eK.%n3m_QqM7q!0tI^,1[9u9aiI$b)Rar;]@)n9&n?77%"fK6F&))_ZNka1YUbQLP86!,,,e2OeL/0M
%PZDW=j^)\O:C\;O*%eeNPG#9uHI*(Q)["&"cr?sI1/6Q..uA5/)DlhEAYt.PP@+eg:g,>hFi,f$R1qJ__/3e\-W./4e=[Z`2sBjW
%n8_[Q(m=K^n[N"/'&b/pB__Gq9MP:0;)*9&UH2Xn\CcZ#rs9&-1FkVFWm@RIbqQX.3SD4/?I5WF3Pj?`5rSgV,nY%CJqiak^pKKe
%X-_0mE$P2V!P\L:]@)n9QUQ5I%#u2:P&1n#PE+8X0uL.>_G".[#j_R=>\RD@*S7#:Wgq8e"6.rA"Cmh,;Ujc=8X1Or@/[K]6':1e
%6^X-:<5CFM;mX6-c3#&%LmCfMVa,Ga,Sc08)f%Vi.dt[Kc>iJl_&-dd'X_6T\=jO7>8HQtT_6=PN!3^Y[8PLUAI06X.Q^1cLip52
%:+PT^&8M]\<f3=mQGWjV?lGD2/DLrCBZ<n="_49"V5POeOt:*\WU&+O2-Jlq`&Lqr?jsABMRjh6'.oa;emJFj5oaYKZW;re)<Oc\
%iU#A!R[^P+:Rj/`>3YFs_LN!OMN2-*(W'JJqG\H*9@,)D=Xup8aM92`9T9,<T%M-\CJ2NN?#dk<CSduIJ:MAb?LKRf'/s6QM505>
%`\;2)W.-4Y!iR?+_?L=qkc^b;qX)6?_lT,tmJsHGD6/8fMf;b1mLVn'&<(&K8hfDVenj0^!pba.a;BtLRD@oq"3Z.FQKF,27J;Ei
%Rdbh]/qaT*>a-7j3?=$)_*ugeHEeU8cLGKX`ReN`Rta+7T9aNVFW_o51?^bbV%#W$%cfQAYt`bh</4qE&$LU?Z=:^]+<4))VG`al
%XMY9:<jn5<SO\;$\j6hG$\r5E!Kdt&(^)1T\\1>g5`iZ_MFF=$_2e:bCD)#iH&*?9/O"=8fgll5gkhZcYs1(EotnWT!V]0@Rt[94
%\n_X.'t?.%KnFfe"G\Rra+j>ibJ;DF`?h9+#aZ=,ddYTmgZ7OCMuc^hh&a[:J4gAj:W%F;EEX,^a3p+>,%V]lR06<:T?!'jQilKD
%\E3f+)K\KsZ(7jcJmm;W*b3!L=uSg-9S?nq<0C]c=f6it4AE><Y0J@<'`:(4^kQ@q)8nL(Q#%th3k9MWA&+:3[ltF;C:Q>7e=rhU
%-K#R<<Zi35LklE%/FXW=<`G7[\d;KY2e:?EVg44%9PVi90OPfoN8::H'$GoD'%:S9(hgH'\,gC(B#+B05YSGi57Q"/gOL%KD=hIc
%Muc:\Xk#2M4ObfHET>tf)9+XR8LG+Vjl`mW5O_(G_PQ#!d'/'^aX$kS1l:5SH&Mc"CAl(Ab.*1:e"K)&ZrMg;#@M"C3=4h,6g)\>
%i8?TtXKpl@bq#Ub*mA?04oI]'4N;mpMgnC<hOVX#Aas\Ar*'s:QGpUMnS_S.>8I7)`P6!SDd!!B(B9]>^LcqR=o;J>s-CX=Aas\A
%r*'s:QGpUMnS_S.>8I7)`P6!SDd!!B(B9\.r0rRs<WO?Dk`CL)<Z>obelMudiu!O17Tf<lJ&@./.blN+[dDZ-iQ$HW$OdFhV.AHo
%?\XVI8Q:Et4_TSdNGW1uY^`Br0"[8P2lT*\\P$K;Q\K_LQ51+D<+QamjQ-3+n[]XNP/*o_)DK(&#,jPD#M4otT_jL7%C;3'2/**/
%GtV`&a[iZWe%l#3O[iF&,n4Wj.W/omHFbE7P/sDe*]-7C7[%@jS_-:pFj(O_n_?`'gnY)_lRg)IYbl5kjXT4+a!@KAFiTd]ZlZJE
%/@UeXUREA`6fLSS8-X>,\rgN*J,hIcKmI,R%9PSkW@hC'c"X,L&lL,sVs:Psr*2s&guQt!DC'iq2+;25_MoiBoZ7KC!o,I[$#u.E
%1p!`W=3shSns<&'UVN@V6S&Ih@CUnjC>(n]P/*QU+uI32`df<*6Sq_19k:(AW(@44ekq<Cf)b\BYlPSA7TeSBeR_5P"ZL]/1M:7V
%<Y@Aj;hSa2gt7dEc6'5S</S1o<YFC=-"sgD,bTja-tq8M8OkY!GGjF3do:kg\^BE9R7+QM"RabRTc!nfWe=+qe\[40EiPL8<YAjg
%-"pa*-MhJNJcl]]jUgM'E8m]:kD5<K";t>nlO]kmEF_Ctb/[hGo^We'0s$5\(ZA.UdZ$Z%BK?FCE1W^qb('b.@_.4U(.6E)/&X*n
%ZsXpioR8mg?K].e6'[GVHb@7@3Gb@:/l*3U_t5YuK#>hXfN'*\Um=c4<tFa>W:,2GGnXEJJ<8]V`#M14TkXD?QfE\S!J9VdQj+g\
%)<D<qq"r%^*)o91hij%O5$\Q.!L[8rG#L@2gD*]o%lY$6Xa\no/\)NJKc0P.W1&FBpiI15L2<.1598Kjg9=Rl9]u6d#Ug!<M[Z!C
%E^,C"M[)_k-@hdL-L)(>YofoRO]EjHH.ZH(,&"K#"In\3S(&'FaelG$$kG_pNgn\cKLj@D)[3AI0H<<4Pj+SYUA=^LQ5"4[/RTQQ
%"CQnrW,PT["3#ZA2+\BR_K9W06GcG@fMNa/UmCM-^_ia,H]Jf!,ar7WGf(9F,ZdGn=gK@)]0X6#"nTMV9e/nQ"Q3Ym+?Af\7AC<8
%iUPWcM<D.<4^a!5E:XA/eH\7:A`+ad->pu3iSMoc\e[Cq'bd/R%<L@I`o5?9@e#gt&gAc^T*Agn+AjVEDdEMN*ZS=g$t,_X4s&C!
%6^2+@';)LcVI<ZN$Gg/K&T"HhE`,O>VW!Q&S`bHP_0A43JbR#Ea-9YZCn)h\\`r!fB+'j3b>3`[2&Lt%*];YYKZaaH0M2D6Jn+Sd
%[P5]&"VM;E6cDPX:UEiu#TS:3Al!geP?s8)^-Ps-M:8]Ak.Vas'"I(C)+ijobaetK7GC6)ket=&-!e>D1/MQbm]^Q='OU'&eP+]u
%2%!o!0E.5Yl6>=.2"<C<e+-NB%6KPW;uL[!j\?>-j0IJ)/9a.uS^)8RZeXdrG<3p<c>ohhh!$A63m4)>Ei68!kp153j\BI!dol*\
%Q91Z!:1q,d=mgBt4.YJ.B=ZJomW=aVS`NUZ\^RPA%f[<Te$t(u@$ET@fUrJjj5ce>e,qgMpchu(UHHN;dhqtY8$ck3@oQ\<%aHDu
%JeV35FsW8D2*GV4=#/tBiQs3N]@d8`7:Paa;_OQ(K^S!0T],gFMN)%J5^[)IUc"i=<H0;;-$tN?,VYak`i^S+WMTk.^MO)PhSCNE
%W#V78e//0[$Fq#Ue1`D0:m2YKr*obY_s*@cY#k[`'i%'Q]rl=A.XFM@(L*bH\.Cb;3(YsKK+F;J%7u,Y'O+EC<>,VjWfCUYfAbhO
%6"PU;$BN#?"!IpbLM9Y+5C-3,1ua!-G0hJp*sdpZLBPa8nmL(JV?"L2^,*>)di'Y0KAL"*?AuRTTg%tgA.6fu%FHI(a(T@t[gm/C
%m=:uA/!E^l?.']!Y@S7Q#e7:i$Qk&Ao!ej?:f5+W$Y8@b!mK63JdH*9&5ApO>j/u+Ct0X7#U44u3,3![0O(_d!MK^'5hFe!7;`Ok
%LP`ogHAM`Kn'DqhX!mqp]JTqi&NBcL-8nCsPpND%,gdPUolYY&Ie9mQN/91i30`bb@XLo\#igFt'Ao!([VE5OHZri'Y%j+E8"Ub3
%1Y`#TGRTa$Z0.='AM<t[@*q(PTF,QHAUpWh*g9-1Y]U%I#P,M2qm)S?9m2Jg^D)IdoMQ7Ym[1F&ao)<1:;M_I[@tDeLnXT_s)cfY
%*<e)_"f^6l(F'n%o,)uuAF#OSZnrI,rB,;jA;/>\KOaBCKD>]=_$EU\0I8(Z0o[Za'omAMc3#0AFsupM#6tASdnjG.it/4?glqto
%<2e+O2b).NMaMN2\I=.97H/Vak^Ssc"7;7;JHZs'],eO<K>8apPoeZoNIgC+CeM6CHR:9m!UU9Li6be>fU<UJNGAPP1JR8;r`hFD
%N-7/5D[344M@:j9#N6;=_(;$c@EG;&`<`-Qk#QdV(J1tai'fQJirEr)"[`EP^c3=3QPZ>.:)T$Z6>b'Z6AuL:E1b$Y#nmn]+Hpc;
%Q:6j,0F"<q4VRq#@Qn-Ya$:ern<?c7'F<rh)9GSb5`>c3)CD7n[P]lMQ)$,<id!@PQ/tj7\c<`.+_E^M:UDQF14cSIBSe)IQlRDb
%E5j%]^%;Y^7Z#PsP),ccl)9K9L[;6r*>9>Vbm;i6&WJN?4TQ/:G(dG80/XWR-nT\[KE,I?4UnW2;u/$ZNG\H[BQf7:3!O@_Ud=V$
%@"<KXn-`WT4/%G/W+\i8"A]iBKMU=aLBuVCE>VG(7ftEU&p:e$(_`;T'uX(GHoRE3_4IV-0`gWTZ4&FFLOcBJ)kf)4oUu;"$R$@A
%==0[OBV1cR%Ce_3.2/^MdU5IHU8(2J]Vs]g']Ih1INB?d(m^LGTS^H=0[W,q-][`/1*!10#s1W'PE&"NCAAnr<S`J.gh95m,>Up$
%WR3Y&cjU;t<7%451^*%oW&'e_,Eq1N#@ouB0X?P`#f.U=06/>3'2,qkM.7`NP3r.^kn#,IE468-<$7\8GcLoK*&h_/#S'JmG)2%a
%Fp18VH:O_t">0@-'IT;,P#f^rQDBWhBk0dR=cu7?Ulcs;A4[\BP"(b5OX4^P8K(`p7[Bj4"E(LjN@[XG9@CnE1pSBd/4h'Zd`@S.
%Z6YD\8L$mVaHABc,`O?H,>6JKQ)%h<kiburY_""XfH_p_6ig[O%`[gd*at5X1_:34a-8.pLmDX]_/B1#\5Dm>)omIeJK`:L,o[t8
%M3BtWOM2.]\Z-V-.Is<D=<,EY,kP+&;*Ye.(u/WGeKmpur"+`EN_JBL&qn,P1#65QIe"(p#)GNJjJhW7Q8"AW$p#AVb='qHFugC%
%^:JWjVs;65K1#bL+/k$5O>(8e@j4:FMbg'%L'/bN*"mji?&(WFnnQXjS[$0gCP`Ct`u=!R[=U,fChbe76*OCK0a8E2[):i.r8-Im
%&Zs%'X,f,mg&#9<o1CX^gB%C\%E7N3\l=(!?A7epd23VAM+.TA*=:u)=&(U'&8!4c@J<l60Ol4D,g%\R@u)/-Xj(dqmf:0JCuP:o
%A!fDD`]0gU_Se2#bCWf.R5PB:LDt&`C%mg)%.F6.-!d\:$.85sr1RU^KMTN)_lP.61*:.fJQWq(=LmVHMD[jJ/HZ\#bIq\UhlqHg
%2+Fec>KT1U(j>A/1!V;[LiX+3b]&@i8j7DDJ3u"[P@T@Ri'nRk31^EZ%^R;;NFCBN'u,ee#.,g(*5X++.`N$h"B6j-5*.%Ln2l[e
%L0oi*/J)P#ZgYpOB9c`_\d"mnK@6#Znl:3?ZRr$K1%<P?oS-RrT[a;.nA(>.@gK]0W"=H[0cEoB6^3F7.`N$PQZ5%@`#0e%MJ[PK
%CCIQ@`u&HS>QDDhTs`E-Y\+6Q6@b<"-7TL=D^+U>_&/0^!75P_75TNsA!jYlSH32Z_2ArR,Qqo%)+0jc^^)\Km8Umg4jFn\>"nsM
%3('((5K5[b`9r?<8?s:SP)B'>iJcA9d25[^<TLBkDE`3U!69UU+J4k!Y;en:Pm!WbiXFd%=SS.jN'ThE#%K@Zg*DNEr4_3M&ZitE
%K8;C>g%o3;ZUuhs+6cZ_>t\*B3uW,a(dkZ@n$9!sitQP8K1+KsA!jY,m1\K=6">TQZlKg`-q3+HMDN8:C]snJ/Rk(fmu$f[B8g4M
%VFa4h1!JJrA";0NQ+df4OFJ&,T*>%'62k#KIhq+;"o2dsr`P>4(?D(kq.E"m=ce+G\B0@#ZQT9!a?L('c[u)$+TF"657@&.K)Dqt
%s")5U$hDVqr3IOG/BGS-OM@X0%DujK/0:^aX4'tnc\7YBAU)]?F^kcq_:dab)(S]K^nX/$"_%MB(C'^$VBfZf<QgIqR6OPm!o9#)
%Ia[.X;I5NXb/LM/El"UXbttpt6-m=XGcDm^LmmNo6Hl5.$g1bP/9h`"W)o)`eo2l:bFi@uGgLe9eGe*c":j)6J/JhSVPMq.@_&J3
%L07*$R^@V(I&e)^K_>D`XY2-o^LAcpPZU$iD0hX!]9:88RN=<'i5WRljrqK)HFRBb'&b/pBXlhO&@k,]_?Jdti5$OI(u^:iP]UAP
%-%YeJ7;.Fk$l8kC!u@1HAsej:Qq7T&5$&<fF"LW4?Jp/6c7YeiV^e>iaU-+eSF4Y(,k/LE#gH2U_*C8mF1Q&i.H6(b8VikCT],H3
%Z0&WLMn!nm"hn%XA*B%GfT^1Uge%Y*CPpIIKc<Z?D.I+96S;8o\7&DNi[-6j\=@$V`Ps^Rd-(gS%,(eX'2s`-9/TZ?]lGV0I'4tc
%1CS0Z!t>Y5Hh'sY\7&GOi?g-i\3+g?43uPFqE44peNr\&ON/a;,A4)&ge%Y:CPpIIJJggQCc_n):(];+8j^at"ALGR6shfN<0r0d
%3CJ!-U(X?%.K_1qLoN57S3p8@JYa!2WXS6b8>l>jW[>4sh=<tCS\&9[0hhHM&q]m&$,H$EbYhN!X%eY17):]@gJ10;%O_>@h=?c4
%@]dS^/:JAC5_99/(b9UT#Z/E),=$8+V:+Y>-X`E+'3?n'-EK&n"VT_q-FkhUj5]<R5JdU_MI?K_Be)lKELN&%>2e=nZ.@p&ZsXr`
%:kA\==DP25M"&:g<'6a^XHciT5*6u5MS;!)G??CDkRGWM9!B;LUL"AWc-Kll-<fJIg>#6WM'Um(<8b!B8XN9.V0JtH0FqA85laZM
%V7:4BfO;T.?oc51Bf,o*.JB8]NQJkrn.EB.Ju)$S]_O7Ej03r\*\:27LBG>:Gd*1+!>mY8`2L38P@uQ!N$+RE/X7H1-dGoN49GG"
%Adnd4qlc8c6UBR*aI201]\:0K*)ic/!dpsM+F.)28?k_A/2`a/.$t/ZRXn7:P=b@F5s16HlL:r5/87@rr5Mrt1J%pc@1+B;T]s3(
%2i@Yl*&I^*pKK)KNeAU#"6]R^km0k_m<0`j'hJD=".P,B-/rC6);I?IXrr]5VeYf5#?6&+*Cluf2r7H&DhF[:WKA;)-I,6-1a:^o
%:+-.'q_+48DaTZUP49=)h_<<W\KV=[YHA_)+rt[Q;f3KeHUgRu^i6GLSIM!D[1_pSjlbSp,`'6mZPGJ1Nu\]O&X*$pPu`f2;%s-L
%H%:)q'&^]p8AM_E2-RGcmomSRFNM>4hQeYVMo+_`W0@r%rJe9%(N^gfLFnW2Jg\iIgcPZ9E:=/&gjcH-hdTWDiI;=p=Xf*,'LPoY
%+Y1P$:Z3WN`K6?oa@\0tV&91\ggm5uZ;M*6.>Fo<6WT'f/&dU8@`V.rA>L-K;@H\WL9)(V<f/%N`K6?oa@\0tV&92MQ=<[A@t7ej
%Cr=ZZfo@TP+5@RTehET7Z;'#:20=%s,.ulkH`g*"0l(c&S/VO8PSsj`:.q9i()$FE;hJWe]V&'JL1^u<J396mUr=L3>tK^;e=bc+
%Vq;an==%XTKJX"kX0r/$&t"^\=A70#_<Ys^8g="E>/1Q#)I&QdD2,ZAV1fh2,lqaY",?E;g)+./8)3&#(^IZ=V,0U7dimD07,HJd
%TG\(q^f)q`2MgEi%6)L'6JS@?%2XHXJC#cU.m=a],4DP5r_qZRFsW8p2*GW-^^XI-J<afD=.cQ?ViUAQ`9^*jM!hXCiB=*E,rspB
%^`r6Im!sa-ab!&V"(t[JGurIIAglGbU_RKQ.H6(b8VikCT]&#2MSj`$\M5RigkHf/MG223^oesRY,2HK0XstF$?8au,/nB;1bC$?
%8g<&d"qB`UKf>hFW.TX&DpfHIO0KuM2.G+ELr,ROAV+2ZjBYIjR\=\QWG\*cWbS=CBSs<.<YFC=-"o:$WC"i9I^4[C^C%nU_*Tr$
%P$oZLnKY>uaKq<J*((hO%`_8:nr<\tbXt4/U]aC3Rm^Te<0Y#4C)`n;035@mA.!?TKHSU*iu!@fAWAh@$1?TF8@lloJh8!7TnSU;
%CdB3J4>u#8"Z_3k1JTnr<,diD?E\rMAV9Pkcr(P4FVKd3-1#nkl8lAZGPJQKAI%,u@\4&dlP,<*iS)rC9JO@eE4'eT7lN!I.9$SZ
%$L22uClMikJh\5T"`#h=,(qXk@g%/IG@&DA;fLXubF!I)mt"_lbgl?lqF%DUJIeJeFIo=c`W38/huUlo&coJ-T^2Z9"==<TBXY(l
%0GD8>p])<HIR.&O;WuPg;?i^#"3Ej$LZXaPOj?BKL;P.K'O)hL!&6]+YjjniQ"2<I#LI*C5^+cE&ks=G?j5NV!hit4YGa^3&<$XY
%D.4%g&8i-'_lb:63e.QlNTnMj%%(]:k1Mg.`Eod7bs$3":_3"0Q/I22$&!W@(_2?!>&9$$&^9#IdGFbk=)u7oJEF\-1]RkcETm;L
%jes<HWQII6R*Nabat4Na[$,bJOgP<\#LI"T7GZu'^V+FKZ/dgg^L7&YGnJsOEJsRLo!FNr7)0p"/.5<_"Mm>b=Y2<h13OterqH4P
%G+Y1?Z:<YkdbM+oQ6)h^V[fb0ADLA,U&]hrZATc'!j4LVDM8EnO:5Dkh+AGX#m?WMKe9=)7>+3O"!c$;D70(RV%CJ5W(UMkAZ>t2
%-O*=ZN^<"3b@=,R.Z6VHl$0Oc@:+l1mCEXkd!EJXI$!-r@'"3@OMMsDBOB6HU)T!/T-(lWa,Wt>IaKW83-H!D.NXJWl8B4ebnZ0s
%pU0\JZ`-9cj(r0qoRQ/lVe%5STb'uJqd6F<>BD7.+<Xdn(TDB\r<H6_lHSW>>ED[JjU%:sNm-_3f!A(\q"57b$)Z[SJ?*Q&+jo)\
%#ZG)7XZbDgY`ZLeW0/@(JJ]7Kd83Ot)_l3pG\\3a$Wh&DF:ba]!_a[)/T5."39KQX<)Nr&8A8\HUZkL3I7RNY6t]MrC5WJSe6j97
%bD7_1c3ds">ZS2>Bi+o,iF%SDDAOHmgjlaF?X9]qgFC!f5pnbkfZoPDDcWgj'H/5[+@qq[2/3L7,T,b=L^:jmI;^$/;Yu$4LHo?d
%/]4nB@+tJ)()MCC4):/2:s9te=j7IEgR1\g%0mhGFfPe)h?HH:pY&g<fi!CA+\,ajUTMD\<oI_mE3rV)g+"(Z'oo^0O45.d'oo^0
%QV_b1<B/\^>XH]_<oI_mE3rV)g+"(Z'oo^07pC\BXhrIdiFo92ZrK*>.NE:?Nj]9b>D8iS_TQHj270g:o68l6`==aP+Ucq^R*2dc
%)89\Ii%2:p7>4=U!qmi#Z7KC:cQ>Yo'6al1g)ss`8B_,.U?/*`+;DVs^;!l+<+-D<JA%nl.*Y0k6[t=W=,fdDF7l<jU(guR15g2H
%5-bh(ZNV[1"k\[#bL0Y3%58-Q^"cK%gG#PF,c/'J;0*=f9`6kV2r7N$7,IR1k->[DS`6mF9hupiS>-[[IspOjKI,`rh[X3u6DRdn
%Or2Z-R`dI9]"Dm[WL1`HOLrKD'db[,f8Z5W14QM>g@FASKRLn)CEXn)0Su44:=NO3hb(OmPP:.#gA&"o,iuN3;0)bNbQ+9q@mocC
%-BU*TW&Z>YO%S?*')8C.4t;,E9&QHWpo"<Z.Y3XQi1gq[W!#:6JWEF]UD!@#"?n;dO%S?*')8C.4t;,E9&QHWpo"<Z.Y3XQi1gq[
%W!)Pb^`"./@:LVM&fVNhDR'658Y;IhZ1"FpLsT*p6,Q,[a>UiG.1](^0n'dDo&'T9'_\Zkp1(Z$Jh^IP.QlTn#r%`_@aA4Z<r4.=
%Z49ajq>BNq0!&WJB>s:9nF2Vle0^XR%"kIUK.R\TZY^m#./Wo0[a=Ak$6D;6Opra9A!]?`4&XPOgC0ZjQcn9_Tr/.uLE3#R>g+A\
%VSXVLVAD+F`9k$oEDWn,L-A10j/uRLKBl6P+M^sd3poa)A9_T?2g'NRM\L)\WGq6:Gh<9Y/$%='?KKC+H3cfFmp]<k<l*&?UB<3&
%L%@%'^G0,ZB:hV[.thf&T7Cqbhn_bC):bACJX6>D5_-$N5I'\ai;<R@%OsVMf^]UD9:N#2:l&][CG8bTYd&bi(17ceYFiGlQAs8N
%WaY<Rcu\$f0TFR!"/2:B9b_"1&?3Opn=>OZZ^C.2XYEDi[i[Jed1LPU!+WYJ`pkA'*OD,b=BCkX_pjU5Ipe+Ip8Aq)0i0@fr'9ZG
%5*j^a-C>-A8'+[3++H%++qX9?R*0)cD:sKWX=@I:)O:Ml-*&eQWN9bWfPT=j"OM]Q>ihqR/#+(&Jju7d$kG\KdUG41Cp:S7iiItp
%ZeE`;b>;.U<N]!J1<!jq5f1^DknK#<S]^J,/0rP>RrRjSd*p;Pr1hK+5(Zg$)lMZH6okcK#PM5ZI-&Fr4me<.p4uWRdfEOe[%@N.
%5T"?">f:H3ZG@fRKoXYf`1&_sQ`]d!Rpa9G3e94)-BU7CW2\s^Gsnj?$Li$5a;R4/U`LTk,5WQ8QmlKAZF>giCKPs9N=uQ?ChU*t
%O7ttoAak<RQY,t:#_S`O5\jr!*L"LB_EsBVAt4$NC[C;_kr.p+CaH$9r<n>64^)?Yp1Q[*/s9S&fJ1UB$0ikP'dce,4&JqJaEqkA
%q!ZfnLJ\#cKmKB*rPDUW0QCu:_6>P,JoA4,VT..`!;Mk@6V-6>.jB<$JcKU!&cnlH[@^OG<(;.\%).LWQ6O:q<+)^1BZllVB/(&_
%Y&`"Hb[2&39M!`C]/%tAOAMEdDX,0lMU$.,M(k5CGDO"5icu5G(i);L;GSF_#A;s6QD^nTIm[>PlRl!BJPm'gf>Q_s0A%u/m4tJp
%ngocqQEN(OjC%QsQ(1q)@rLA.oO,@V"q_WW9.c+\E&UJYB7LF5(`QDB;nieC"rbp!N\#]Q45NG@jep*D)4>s'#TF#ro/pA0^gPX&
%`RCdAGZ/#`H..bA6Ois!WI\Z&`PJkkKWut\lp]sc$JlQW'OWCq*C[sWhPeKV'PGsPbSIGr?n,FYR;DX`RdX!_??=AjR-^oIZ/IHi
%Su>U:T@kZs&eeVkidk=6nh#afZHgoUZAJ<,n`=k\_,92p]CTVg&-@hCSbK4=BG[Ve,jE!keC=)5SnHg$/LA3r\9P-\(N4%^&oTrT
%2-p`SiQ(ak5"XP`Q.iO4!_e<K,EK_Rr60%LZYFcuAK:o@$J0`!,f8J-^+bLRM,2UZ'?tmrR5l0R=)eYP"XR'I%&T!6lkOgs/!1+X
%1<uJSP6<2/61`dO?2NuqX0Y&9M+B!T/n.DR*sD&PPmW_rQu:DiiD!$@U.&#PHR8&f8^)<EX*%\,3+9%:?C3?!a4:.P[\7FOU)g-l
%P7ksiJ>sVZi(d",`8u,H^#IKm16]r&Z>_ZJEL1jDjs#4_=jUf@RP'28e0btX;4hs)B&`p^Tk&W/8uC3k22`U,m$W%=`G<G=Ms-)r
%COrO]5^Gi#0](2-`t+tK[0!m-BEab1f7&a\;$tb2'V&0V"25&M.Ok"[R9Kt)&O<<mHuqqSoFHZIosXG&p'([#0Z\",&sG*L<iEh[
%kbF0f4J+@t#'mC-YV^IBNWoPp.SM$r\l#fVR$n_a#Gt7.O/]TeP$j_-+[ksOH$\&G7Y(;+Jd''PFiL;18@s8PAJ8G_Md#!3;bj<4
%MmcLUdPrgP43eb\SXdehoFK@,_2USL_8k+3Sbt\>,H]UaecZ_Y=?\8Ai>+]opZqr_7g[=G*h,4[Q>FY5X;VE!,%UgLKko!:b8crE
%^jfW"4Ko7HMqB9e/tR.+Ptr+..ucbL>h"oQiR8)o/)K[BHBMje%nmkU7muEsHKqqmc\b%s[5Kc6<I6SM8ZhW[jq?OH1g"Yl=S,A7
%%:*J,Ggh_BAl%WAeGuH:lA=g(E^T[hk8?#.DT7g'HbBp;31.6ZFr:q4$,!m#&C.UNR$\s3a(`%7N)SJf:#iVPC;uD2dmumMkLK7j
%k?`&S-uj3'=Y+"D]uuucV8=KmP]"uUUf$cGfV-o],H@?JWA05JV&M:I7QE<J7N(or!(^\I@KZ-+:QXNeE\>.,\2m5(>84XD]5m3M
%.^&R_QjVG8le(_tHa9RL<i=PD?U^G.URMC9fl0I)G?Luiq0t=>^)Ls#:>M66o!tkhHgB?M9D#_rnD%6*2>%5`#6_A@NJdR[AYck#
%f3Hk\m;Vu+fB4(3+YBcc>\",kDP=^F.=+@pa`Xq7Tn5$.MY3:jWN>Uefi7&jZZW6b<@noVV-[WZ\U:?D/_"-XmXD[lnjKHNPoooC
%aZ25<FS49i$JHcd.,X*cO1bH]O&7gB&RP51pTq]>DQeNb_thsYVsNru]"usq+&@BV%(<0SaYt!IKn3=HHh9A1<0"hs$\P4>2;f94
%0lDN?nU,C(^fWLh"6P8*;]MX-Frd<ooD)-OX<p2MZZ0rH<M5qVji7.h)i'_cN\*pA4M1HL=1HJrn0p5KR:ERfI_8l-.QlTn[4m_;
%d78D\-/p;eX@M0-?P[N#E'Su6m@W'm!J3n4'd%a/2D>Wd=+'@&!@p,h.VAk0DX?Gh%T20c^D`IV#,mPu_0X!_Ik;u4&2g'832c$=
%BBPO00+!ub:Gs%lAY71KRGG_&@[L5f_!Mu%U3;4LA#9&`5`GqpCLNk\NJ>42@0^5R"BsD#.Qi(J9g]4i8q,,9nD4K'OKK#9Zt$l)
%ddFT!_(*=E#=Ma*Co@qB)IDKU^":c0)^&lXhcpIAAq9LFGTBhXFrd<oZQ&)[V[KX]4;jp3\BOT8=]M;qkCFN_lIir]ak0?!$@#ra
%qa7:4/J&X8n?%6JE.on1$QR+U_GrtE.R8u)2m2s9+R\4C2jblX(]2gE<9U:hI1652i/L-/SljG:K]m$hE:r-G>A0rE!)"<i=9IIc
%fKt'O;`Y4qY!Xb%m)Ca&%;ctd0Tq&b3*..:FlOdm,+pLr1Q^X6iR2`bWZQ[-[KtY/GcbZn7"kk^CLN+LH[`M2TO[Bd$HHIXqrLm\
%T>(.glTa2(ja6o3SNd#>qqKl/mU(GKR.AkR]A#",?f1ior;4\+^O-"4oAA^&.=_*Wrqj/`GAhC`&D'-RrQA3?"o.re<B0s:T2&bn
%k;+gUmMJWA%(85%f,]M4NZiMb&A)FCrT0`faQ<EU[Jt\uQO7")Kn"=WVZ$q@p"+f`dX@re^Yf'1Uc_'R=5ZTe\8XcUctr*1!"=EH
%L<ITSFo!3/Mdc)si'SUmQsd#4!8:Y\-CF*3_nsl^;*BkJL8[dL^j()R):Y4td;AsO>0UG1hiZCNEIn>bj`lfk02lb5X>7(+.<!^W
%fjRm0J9c_e+X(=f96N^"X6/ci3R2&$G-&R5TcAX/EUh%:T&UGkbePlE1b6)m^7L[t$i[Le+bE+_(-F-`22;Jq9H:@/n`Of->$PG5
%mrR9;ref>$2c-rtQ*pQr"l%qlZ'QBFY@+&rNNBl*C-R:ph;8^rrr/2I0B]4IS=<15HucG,.>PT2V=TMO&NC#6JlRZL=$(*AP9.uK
%lLDh/T"(fY'H_-`@nSo9Tb/W:%VYHRU+;(,GR_bt+2U"_o`eYX"*/)S]^q*2YMhJPcLH,ja9&t2YdI]Z)>')bEp1TROEgcM*3,nQ
%`SPi%]@V>PRuupf31*Bb@F="OHQM<q"0.pSorJf3ZW[%k5hY89Z.XN;.$^8Rd#1f4flZUWjeJ"8Fa$7hnQdWP(cdqoT5sm?WMna8
%_b5[Z)736c9IfGNkMp*n#$a%s_'H-P7HH!9)-7nK'pB0TMO'SOfE+E<<:$=g7>7^eB1h,Q*ZJ;-a73]2Z[)Uuk?;O>f8F=Bc2Q(J
%9%R[Al:%]-m$570Q$TcHf0`JZdSL-C&X3$4"*BR&'^CB?2$7MlC>J#+L)uCS#f?bn@M90'PW84>UW-cW3*=7NEKg=!`TAl.R'H+o
%O"m88mP`FuPH_5(o5<$Q]H+Y5JiSZQ'hgci&a!s54ZcAc`aKVd6S/O#W"BV%m$B5oBS-Xc)CI_c/64Q:?/RsP2rn]4+?7q+Y)MBF
%4\`T)ghi]srtU$8R!5#H2-\=[3F'fIUmb3_\_BBo:=JWYK$1&6Vg3NA''85EBJ9pu]X<HoAk3:/BYZl(EiH+VfOG?O`YL&$jOFW3
%KUjbr?k9Q?8tEY8O5o_p0>RARpb"lT<jq-:%$T!iPffJ8iu7YjD+'tF"1lMbn<0DmI-iEKBa6ik1JT,=o$^D4bbNc8noJ?l__Bc]
%O"0KqPN3ToQS;4>e+gbc#Y9VFE=(TFRdfCBJFPF!YQeU*@!&1<$B_SN9[KZL[rN80#mT`XCD60#98,6^PXkG$0R:eO0Wl,OKEp`m
%+oU5OA_9R:TAb9954s1u05:$od>LouK'*Pjr&DW@Ysa)C]i:*2PdmWZ@`d9VV9Eif6[:''UK(B\O+nd9OXBf#_`6bLf)il,<:99e
%D0"Z;am!3_ARaM5R?Q5iE^=;3i^m>`;pU:2;cZq)->+tbDT6(18LMjI'!-@n]ifXgR$hipf:1Ca]IV=#o$kISQu";i_<*F$jBQ)O
%G3XnfQg*1O_4Mq6h53cg=0lM![,T?+RMC=0T)JT\31]O!<6g>`4r\n](FHoq&I.C!FBX$MSjMhRo@UQpFUdL9mFH1d_+n'&VB`&F
%[s`t#%MCDBnnup@4M0\[R5OIS)N\]+"lsQlR,&RJ2mOVHOmnduZ`4LQZ.P?[C@"]4"q+mBY@,2%8p"o.WH=DF9$d1X!le$<Ee9_!
%d3UhZVl,/lbJ_'J1o\O''UWBT.qo;g:Q"J?/+Jqiq=oEscQ`7ZIhp]BrIW^XB2JDUB?cd-,Nqc6q=E\;&%t^jG\WAcJ@LdjD<$Vg
%PE0U3W=OPm0t^l_mKu8F$I%>VQdSD/60WEc<GZlKYR)uu/lM>O@M9hfoW6`t/!I)D3&FPu_J"CH_X2#@0FBN5V^DoLlk!6b[XkDt
%5C#rpl,qm<,:[pX**Vk+[l8N/?ei<mm'H#epU?cCpA++SpUBV+*^q\1?5-DU=r=E\A>fq9?R*'2f84e>W%;j5[bteTIWb\QmWSM*
%*hmQRYA`meI/iRZpua=0I/E$72h/]R^Uo%^Ii,qKp_!/==8-XJq<mqC=cHCqqR;skf6=^mruJ[9*dAUmH$:#^ChPeC;<aTfJk9!G
%gs@q&?)cn4@_f&Mk>qkh@>[*ZG*Xg["&kEWnTLOUk@Afp*Pb8!:<2dLgjPNV6FYWNj5I1DI,2>a_IsMFqPmFtJ=W@lcT;qOHEi<k
%`fEic?4!`A`^bK&M)kifmX1sHWKm/<9(4a+$5[.KTF@Jkn9doV,>9^O'RL]>CDkY`aRlPIco?1e3*cnJhZD9$iZjtS&"o>-+P"-n
%2QYG8NL$aIp$.`B?hjZsc2HtoS%mgos4+<U55F8`2fEU6nG_Q%7.'9aLRUNcSo3ubq:jXgiLA;cpU;6KiGVL6^A[IiIY+2^_*@bV
%2uiF&X8`:fQ?gX~>
%AI9_PrivateDataEnd
