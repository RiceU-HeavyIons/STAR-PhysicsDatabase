%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: NetK_KV.pdf
%%Creator: (Adobe Acrobat 11.0.20)
%%For: Xiaofeng
%%CreationDate: 8/29/17, 11:30 PM
%%BoundingBox: -254 254 313 567
%%HiResBoundingBox: -254 254 313 567
%%CropBox: -254 254 313 567
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 669 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c006 80.159825, 2016/09/16-03:31:08        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-02-08T09:51:31"
   xmp:CreatorTool="ROOT Version 6.08/02"
   pdf:Keywords="ROOT"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">../pdf/NetK_KV1.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -567 translate
pgsv
[0 1 -1 0 313 0 ]ct
gsave
np
gsave
0 0 mo
0 567 li
313 567 li
313 0 li
cp
clp
313 567 mo
313 .0709839 li
-.278015 .0709839 li
-.278015 567 li
cp
false sop
0 0 0 0 cmyk
ef
.002 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
313 567 mo
313 .0709839 li
-.278015 .0709839 li
-.278015 567 li
cp
@
282.612 518.811 mo
282.612 56.764 li
31.05 56.764 li
31.05 518.811 li
cp
ef
282.612 518.811 mo
282.612 56.764 li
31.05 56.764 li
31.05 518.811 li
cp
@
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
ef
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
@
156.531 500.223 mo
156.531 397.322 li
43.029 397.322 li
43.029 500.223 li
cp
ef
156.531 500.223 mo
156.531 397.322 li
43.029 397.322 li
43.029 500.223 li
cp
@
.75 lw
156.531 500.223 mo
156.531 397.322 li
43.029 397.322 li
43.029 500.223 li
cp
.75021 .679683 .670222 .90164 cmyk
@
156.531 500.223 mo
156.531 397.322 li
@
153.647 488.764 mo
156.531 488.764 li
@
155.089 484.181 mo
156.531 484.181 li
@
155.089 479.597 mo
156.531 479.597 li
@
155.089 475.014 mo
156.531 475.014 li
@
155.089 470.43 mo
156.531 470.43 li
@
153.647 465.846 mo
156.531 465.846 li
@
155.089 461.263 mo
156.531 461.263 li
@
155.089 456.679 mo
156.531 456.679 li
@
155.089 452.096 mo
156.531 452.096 li
@
155.089 447.512 mo
156.531 447.512 li
@
153.647 442.929 mo
156.531 442.929 li
@
155.089 438.345 mo
156.531 438.345 li
@
155.089 433.762 mo
156.531 433.762 li
@
155.089 429.178 mo
156.531 429.178 li
@
155.089 424.594 mo
156.531 424.594 li
@
153.647 420.011 mo
156.531 420.011 li
@
153.647 488.764 mo
156.531 488.764 li
@
155.089 493.348 mo
156.531 493.348 li
@
155.089 497.931 mo
156.531 497.931 li
@
153.647 420.011 mo
156.531 420.011 li
@
155.089 415.427 mo
156.531 415.427 li
@
155.089 410.844 mo
156.531 410.844 li
@
155.089 406.26 mo
156.531 406.26 li
@
155.089 401.677 mo
156.531 401.677 li
@
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f321047244e000000cc000000606376
74208de93e9e0000012c0000036c6670676de80497d30000049800000a1d
676c7966dd2c6c9800005cf40003f58068656164d35a3c7a00000eb80000
003668686561af0f210900000ef000000024686d747839ad1f4300000f14
000022546c6f63610f66441800003168000022586d61787010ff0b2d0000
53c0000000206e616d6558b85cfc000053e00000054470726570bc836e31
00005924000003cf67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a40292a292827262524232221201f1e1d1c1b1a1918171615
14131211100d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b0004361
7d6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2c20b0032552582359212d2c69b04061b0008b
0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0112b
b0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0
172344b0177ae5182d2cb002254661658a46b040608b482d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019236a4445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005258b21a401a4523614459b0005058b219401945236144592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442d2c4569b014b0324b505821b0205961442db800
2b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db8002f2c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800302c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800312c2020456944b001
602020457d691844b001602db800322cb800312a2db800332c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800342c4b535845441b2121592db800352c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800362c202045
6944b001602db800372cb800362a212db800382c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
392c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8003b2c2020456944b001602020457d69
1844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800402c2020456944b001602d
b800412cb800402a212db800422c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db800432c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
00442c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db800452c2020456944b001602020457d691844b001602d
b800462cb800452a2db800472c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800482c
4b535845441b2121592db800492c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db8004a2c2020456944b001602db8004b2cb800
4a2a212db8004c2c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db8004d2c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db8004f2c2020456944b001602020457d691844b001602db800502cb800
4f2a2db800512c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db800522c4b535845441b
2121592db800532c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800542c2020456944b001602db800552cb800542a212db800
562c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800572c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800582c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800592c20
20456944b001602020457d691844b001602db8005a2cb800592a2db8005b
2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a
235920b0032653582321b800c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db8005c2c4b535845441b2121592d000000000100000000000037422dfa
5f0f3cf500110800000000005f4d8f0000000000cff2eef7f865fc270b91
08f9000000090001000100000000000100000629fe2900000c01f865fced
0b9100010000000000000000000000000000089505120042000000000239
000002390000023900ed02d700520473000004730040071d004205560059
0187009c02aa008e02aa0044031d004e04ac005c023900aa02aa00550239
00af0239000004730040047300c404730040047300310473003404730042
0473004d0473004b0473004204730049023900e3023900e304ac001c04ac
005c04ac001c0473009c081f00e10556001e0556009705c7005a05c700a5
055600af04e300af0639006305c700a1023900c9040000230556009c0473
009c06aa009705c7009c06390050055600af0639005005c700b405560060
04e3002105c700aa05560034078d00250556002a0556002a04e3002f0239
00800239ffbb0239002f03c100780473000002aa00260473005204730076
0400003b04730038047300480239001c0473003d0473008401c7008401c7
ffda0400008001c7008906aa0084047300840473003b047300760473003c
02aa00890400004202390017047300800400000b05c700120400000b0400
00150400003402acffd50214009002ac002a04ac00120556001e0556001e
05c7005a055600af05c7009c0639005005c700aa04730052047300520473
00520473005204730052047300520400003b047300480473004804730048
0473004802390067023900080239000002390025047300840473003b0473
003b0473003b0473003b0473003b04730080047300800473008004730080
047300500333006f04730068047300380473004b02cd0095044cfff504e3
00c705e5001505e50012080000ed02aa008a02aa00520464005c08000010
0639004205b4002a0464005c0464005a0464005c0473ffe1049cffb403f4
006a05b400280696001c0464002f0231ff7902f6003b02ec00310625005e
071d004904e3005c04e300ba02aa00e804ac005c0464ffef047300280464
005c04e50071047300c2047300c2080000ed023900000556001e0556001e
0639005008000049078d00470473fffb080000f102aa004e02aa004e01c7
008401c700aa0464005c03f40042040000150556002a0156feaa05f40060
02aa00b402aa00aa0400001c0400001c047300500239009701c700aa02aa
004e0800000e0556001e055600af0556001e055600af055600af0239006b
0239fff902390020023900020639005006390050065200690639005005c7
00aa05c700aa05c700aa023900bd02aa002a02aafff702aa001502aa0019
02aa00f702aa008402aa007902aaffff02aa00a102aa002a0473ffe801c7
ffd7055600600400004204e3002f040000340214009005c700210473003d
0556002a04000015055600800473008004ac005c04ac007402aa005702aa
000b02aa000706ac005a06ac00a306ac004b04730000063900630473003d
023900c9055600600400004205c7005a0400003b05c7005a0400003b0473
00380556001e047300520556001e047300520556001e0473005205c7005a
0400003b05c7005a0400003b05c700a505480038055600af047300480556
00af04730048055600af04730048055600af04730048055600af04730048
063900630473003d063900630473003d063900630473003d0473003d05c7
00a10473008405c700350473003e038f00690371004403330059031f0065
0239003501c7ffdf063900c9038e00840400002301c7ffa3055600320400
fff10473009c021f00830473009c01c7000c0473009c021a004e0473009c
027b008905c7009c0473008405c7002a0473000a05c7009c047300840473
000e063900500473003b063900500473003b063900500473003b05c700b4
02aa008905c7004902aa001705c700b402aa004205560060040000420556
00600400004204e300210239001704e3002102e1001704e30021028fffe2
05c700aa0473008005c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080078d002505c700120556002a
0400001504e3002f0400003404e3002f04000034055600600400004204e3
0021023900170473004b0000fcfc0000fcfc0000fc9c0000fc680000fc86
0000fc8a0000fd690000fcc40000fcf60000fc700000fc9c0000fd5b0000
fcea0000fd120000fc9105c70021063900630473003d0473009c01c70089
0556009c0400008005c7009c0473008405c700b402aa008901aaffdb0237
00e102aa005501c7ffda040000800239001c04730048047300480400003a
047300510000fd3c0000fc660000fc8a0239fffb0239fffb05c7009c0473
00840000fcc4056d0024054c00980556009804270098059c002505560098
07f0000a0554004505c7009805c7009805560098057e002506aa009805c7
00980639005005c700980556009805c7005004e3001d0556002f06d80041
0556002505db009805360060078d009807a1009806aa001d070900980536
009805c700640800009805b7006a04730056047300480462008703390087
04d9001c04730050063d00170400003304ab008704ab0087046200870498
001b055400870473008704730048047300870473007d0400004804000033
0400001706a800460400001404910087044e005c063900870657008704e3
001b05c7008703ff00870414002f06390087047700500556009804730050
0427009803390087023900ba01c700870400002305c70050040000480239
001d020300290800002506c3001b07e10098067c008701c7ffdd05560062
0639004e0473001b0556009804620087040000480617001b0473001b0556
002f0400001705c700980473008704730098031d00870000fd5b0000fd5b
0000fd5b0000fd5b0000fc700000fd930000fd2a0000fc8a0000fcfc0000
fcfc0000fc860000fd690000fcc40000fcf60000fd930000fc9c0000fc9c
0000fc8a0000fc8a0000fc680000fc860000fc660000fc680000fc860000
fc660000fc660000fd500000fc660000fd5b0000fc8a0000fc8d0000fd2a
000000000239001b0473008306aa008302aa008806aa008302aa008902aa
0088042b0052042b005302020087033afffd02390017023900170400000a
05c70011040000140473009c0473009d0473009c0400008004b2003904b2
003905c7005905c7002104890049055600af055600600400004204980039
06e600aa05950080060a0052021400b6037300b6023900c3048c002b0400
003b0134005102aa00c102aa00c20b06000e055600ed029600ed02aa004e
01c700aa02aa0055044cfff5042f00c1042f00c2056500c1056500c202aa
0055029600ed02aa0055080000f102d500a4011d00000000000000000000
000000000000000000000000000000000000000002390000023900000239
000002390000023900000239000002390000023900000239000002390000
00000000000000000000000000000000011d0000008f000002aafff70370
00b60473009c02aa005502aa0006044c0072044c00730556001e04e300ae
04730048071c00500568003b0000fd5e0000fd5e0000fd5e0000fd5e0000
fcc90000fcd20000fd980000fccd0000fcef0000fce10000fcd90000fcec
0000fc5e0000fd440000fd4a0000fccf0000fcd10000fc860000fc910000
fcc10000fcc10000fcc10000fcc20000fcc20000fc8a01550061027b0061
0155006101550061046400320464002b03f4002d03f4002f05b4011305b4
00280231006b0231fe830464ff330464ffef0464002b0464002d08fa006f
0816006f0556009c023900c9047200c906ab00c9078f00c905560034078f
003409c800340c010034078f00c90556002a078f002a09c8002a0473009c
05c7005a05c700a506aa009701c70084038e00840555008405c700840400
000b05c7000b078e000b0955000b05c700840400000b05c7000b078e000b
01c700890400003b0473003806aa008409e2007408c1004f07db003807da
006b05a7007102f7005808e7007106f0006b05a100530556001e04730052
0239001e0239ffff063900500473003b05c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa047300800556001e
047300520556001e0473005208000010071d0049063900630473003d0556
009c04000080063900500473003b063900500473003b01c7ffbe09cd0054
08fc006f07fb00380639006305c7009c047300840556001e047300520800
0010071d00490639004204e3005c0556001e047300520556001e04730052
055600af04730048055600af047300480239ff7101c7ff350239fff801c7
ffaa063900500473003b063900500473003b05c700b402aaffd605c700b4
02aa004f05c700aa0473008005c700aa0473008005c700a1047300840556
001e04730052055600af04730048063900500473003b063900500473003b
063900500473003b063900500473003b0556002a0400001502aa004e0239
00c90556001e047300520556009704730076055600970473007605560097
0473007605c7005a0400003b05c700a50473003805c700a50473003805c7
00a50473003805c700a50473003805c700a504730038055600af04730048
055600af04730048055600af04730048055600af04730048055600af0473
004804e300af0239001c063900630473003d05c700a10473008405c700a1
0473008405c700a10473008405c700390473001b05c700a1047300840239
ffec01c7ff9e02390027023900160556009c040000800556009c04000080
0556009c040000800473009c01c700890473009c01c7ff9d0473009c01c7
ffb50473009c01c7ffc006aa009706aa008406aa009706aa008406aa0097
06aa008405c7009c0473008405c7009c0473008405c7009c0473008405c7
009c04730084063900500473003b063900500473003b063900500473003b
063900500473003b055600af04730076055600af0473007605c700b402aa
008905c700b402aa008305c700b402aa004a05c700b402aa001805560060
040000420556006004000042055600600400004205560060040000420556
00600400004204e300210239001704e300210239001704e300210239ffe2
04e300210239ffe705c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080055600340400000b05560034
0400000b078d002505c70012078d002505c70012078d002505c70012078d
002505c70012078d002505c700120556002a0400000b0556002a0400000b
0556002a0400001504e3002f0400003404e3002f0400003404e3002f0400
0034047300840239001005c70012040000150239001c0556001e04730052
0556001e047300520556001e047300520556001e0473ffcb0556001e0473
00520556001e047300520556001e047300520556001e047300520556001e
047300520556001e047300520556001e047300520556001e047300520556
00af04730048055600af04730048055600af04730048055600af04730048
0556008c0473fff0055600af04730048055600af04730048055600af0473
0048023900ae02390099023900c701c70084063900500473003b06390050
0473003b063900500473003b063900500473ffd8063900500473003b0639
00500473003b063900500473003b071c00500568003b071c00500568003b
071c00500568003b071c00500568003b071c00500568003b05c700aa0473
008005c700aa0473008006e600aa0595008006e600aa0595008006e600aa
0595008006e600aa0595008006e600aa059500800556002a040000150556
002a040000150556002a040000150556002a04000015055600af04730048
055600af04730048056d007505df009604860052048600870723000a0589
0017056d002404860043056d002404860043056d00750486005208d90010
06dd0012054f0043040a003005df00960486008705df0096048600870655
00500486005205df006004120037056d001004120019056d001004120019
056d00100412001905ac005e047a0069074800980600008d08000010071d
004906aa009706aa008405c700b402aa004c0222ffc50556001b05c700c5
04e300d505c70029055600c504e3004805c700b006390071023900ba0556
00b00556002f071d00be05c700b004e300620639007105c700b0055600c5
04e3005804e1002f0556002905c700500558003d06a8007f063900640239
000a0556002904e3005a04e300b40473001204e3006804730077038d004a
04e3003b04e5008f023900b0047300b00473002504e300b8047300420400
007104e3006f04e300aa0473004c04e3006f0400003b04e300b805c70077
0473000e05c7008f0610006a0239000a04e300b80239009a0222000b0000
fd19023900b0016c0088016c00880000fcfc0000fcfc016c008802ca001a
02b5001a03050088031200880222002e0222002f031e00880362006f0333
00880362006f0735007f0625005e0639ffef01c7008401c700aa047200ed
06ac009c06ac00ed04730048047300480556001e04730052047300520556
00af04730048055600af04730048055600af047300480239fff00239ffdb
01c70079063900500473003b063900500473003b063900500473003b0556
00600400004205c700aa047300800400000b06e600aa0595008006020061
0473ffd605c7fff20473008406aa008403f0009c0460009a03a6005a03e9
000c02cf00020448005c06020061047300500655004e0486004c06390050
02aa001e07c6002407c6002408e6ffca0000f9200000fa0b0000fa0b0000
fa060000fa0606020061047300500655004e0486004c0222002f02b5001a
0473002504e3002f040000340473003b04d2008404dc00380473007204bd
003804d7003d0473008204d7008202220086078d00470387008802aa0086
04d2003c04b80032052b00320772003805600017043a001705ce001c04c2
008904b8008901a9008a01a9008a01c700aa0187007802aa000802aa00c1
02aa003a0187007802aa000802aa00c102aa003a01a9008a01a9008a02aa
001e02aafff7023a0042023a004100e4ffed015500450155004401c40044
02e400090200000b023a004e023a004f0256000e0256000e025600240256
002402aa00550256002e0256002e0256002e020000210200000600e30044
0256003a023a000902560024025600240256000e0256000e02aa0078023a
004f0000fccd0000fca20000fca20000fd6f0000fd6f0000fc490000fc49
0000fb9e0000fca20000fc490000fccd0000fcc20000fcc2000000000239
0000000000000000000000000000031d004e031d004e06da00c107c60024
023900e308e6009c07c60024071d00d00703001b02390080023900800000
00000000000000000000000000000000000000000000067b003a023a0020
0239001a02390021023a002702390025023a0021023900240256002e0155
002b0256002e0155004701550022023a0042023a0020023a006202390020
023900180239001a02390021023a002702390025023a0021023900240256
002e0155002b0256002e0155004701550022063c0011063900630473009c
0473009c0556002a06ab002806000030075600110473007207c8005806ac
005a05c7005a0556005904e500710696001c06ab003406ab0028055600af
04730076055600af0473007604e300020639005004c400a1024100230369
001105c7005002bb0023033afffd0473009c0473009c01c7002a01c7002a
0473003d04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a05c1005b05b3005b076c00880776008807760088078d0088
07ca006f07a0006f04730077047300770473007704730077047300770473
007706c2008806c200880874008808890088085b00880868008804e3003b
04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b0733
00880733008808e5008808fa008808cc008808d900880929006f0929006f
023900b0023900b002390041023900390239003d0239003d023900230239
002303a5008803a5008805570088056c0088053e0088054b0088059b006f
059b006f04e3006f04e3006f04e3006f04e3006f04e3006f04e3006f07a5
008807a5008809570088096c0088093e0088094b008804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b806c200880889
00880868008808b8006f0610006a0610006a0610006a0610006a0610006a
0610006a0610006a0610006a07910088079100880943008809580088092a
0088093700880987006f0987006f04e3005a04e3005a0473007704730077
04e3003b04e3003b023900b0023900b004e3006f04e3006f04e300b804e3
00b80610006a0610006a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a0811005b080c005b0991008809d80088097f
0088099b008809d3006f09ce006f04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b04e3003b04e3003b096c0088096c00880b1e00880b33
00880b0500880b1200880b62006f0b62006f0610006a0610006a0610006a
0610006a0610006a0610006a0610006a0610006a09ca008809ca00880b7c
00880b9100880b6300880b7000880bc0006f0bc0006f04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a0556001b0556001b0666
002e0661002f07a9001b04e3003b04e3003b04e3003b04e3003b04e3003b
06ac002e06a7002f06d2002e06ba002f083100b00239ffcf0239ffce0239
ffcc0239ffda0239ffdc0239ffc50239ffe10239ffee0343002e0348002f
04e300b804e300b804e300b804e300b804e300aa04e300aa04e300b804e3
00b8055600290556002906b1002e0713002f06c200880610006a0610006a
0610006a0610006a0610006a075a002e0789002f0792002e07a9002f0878
005e04e3005a0473007704e3003b023900b004e3006f04e300b80610006a
05d5007206a7002f06ba002f0348002f0789002f0713002f07a9002f0239
ffcb04e300b804ac002504ea011704f700a102f3001b02bb002304730025
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a0239ffd70239ffe40239ffd20239ffd70239ffdb0239ffdb0239
ffcd0239ffe00239ffc80239ffc30239ffdc0239ffdc0239ffd70239ffd7
0239ffd20239ffcd0239ffd20239ffd704e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b80666
002e0661002f05c1005b076c00880776008805b3005b07760088078d0088
0666002e0661002f05c1005b076c00880776008805b3005b07760088078d
00880343002e0348002f0348002f03a5008805570088053e008803a50088
056c0088054b00880343002e0348002f0348002f03a5008805570088053e
008803a50088056c0088054b008806b1002e0713002f0713002f06c20088
088900880868008806c20088088900880868008806b1002e0713002f0713
002f06c20088088900880868008806c20088088900880868008805c700b4
05c7005a0639005001c70020051d0029055600af05c700a10000fd310552
00680473003806390050047300480772005b0738004505e5001306ac003d
06ac003d06ac003a06ac003a066d001d04e3001b082200d005e1008a06a8
007f05c7008f0556001e0400000b079900d005cf008a04da003802ca0024
05d900160588003805c700b404730052031f000004da00a103eb00a10649
00a104cf00840556009c0400008004e3002f0400003408d9001406dd0030
054f0072040a0047056d00a50412007a05df00ac0486009105df00630412
003f04f8002b0412003a056d002e0412002405ac00ac047a007705ac00ac
047a00770556002a0556002a04d900bc037c009105ac00ac047a00770632
00a504df007a075f00ac059b00910556002a0556002a06fe0028054e0035
0748003a059400260748003a059400260772004805b3003805df00ac0486
009104730052054f00ac054f00ac06a8007f04dc005d0855004405e00026
05560025040000040556003404b6000b0400003b054f0072040a004705f1
0026049c0024023900bd056d002e04120024055600340556001e05c7005a
0400003b0473ffe804e3002101c7003e02bb002304e30021055600af0473
009c0473009c055600af047300480456002301c7ffda05c700aa01a90021
01a9002102aa003302aa003302aa003a02aaffe9023900e302aa003c02aa
003c057f005b04ac002504ac0074023900e304ac0025057c004c04ac0074
023900e3023900e3063900710412003f0412003f055600ae0473008005c7
005a06aa009705dd0097059b004605c7005a05c7005a05c7005a0400003b
0400003b0400003b0473003805ca003006c6002e063f002f031f001a062e
001904e900310488004502aa00be02aa00be02aa00be02aa00be0277003b
0277003b034b0000034b0000034b0000034b0000034b00000487001203f7
001e045e0054043600830436008302fd005d034f0012069900390655003e
052900300000f86506e1002204e9002001e0004b01e9004b015d0025015d
000a0199002a0198001202fb001703040017026700130257001202570012
02c8004b01d8000701d8000707e9003a097c004b0931004909310002013c
004b04570022058900050589000d04be00150442001801d8000701d80007
03fe003d03fe003d0404003a036f000b0467003c0000fb760000fcc10000
fc080000fc730000fc730000fa630000fce00000fe950000fc8e0000fc51
0000fa0b0000fc9f0465003604650022040100340401002407760017044c
001b03ea001d051a00340653003204c8003306c200880889008808680088
0556001b0556001b0239ffdf0239ffe105560029055600290404001505e5
001405e5001405e500140800ffeb0800ffeb080003b40800038c080003b4
0800038c0800ffe90800ffe9080003b40800038c0800ffe90800ffe90800
00000404001500e40042023a0029023a0024023a001e02000006023a0024
05c7005a0639006305c7005a047100220552002904e300210556001e04d0
002805c2004e04d9004e05c7005a06aa008405d0003106640037082d0035
0552006805520068039c003f0380003b039c003f0380003b039c00530381
003c039c00530381003c02eb005302e3005302e3005302e3005302eb0053
02eb000802e3000002e3000002e3000002eb000803630053036300530363
00530363005303630053027f00010330004503b2002603c3000b050b0031
069c00290390007f0000fc4f0000fc4f0000fc420000fc420000fc420000
fc420000fc010000fc010000fd4404650022040100240a3900500873003b
0436008304360083043600830329003a0329003a03550028050d00340329
005403290028032900330329003302f6003a02f6003a0329002b0143005e
02d7005b04bb005e0329005e0329002a02d70029032900270329002a0329
0054019400100329005b0373003704bb005e02d70008037800800329000d
0378004a04dc004d0632002a04be0033047300390473003b04e6003804e1
003a04fa0039076e003e0329000a0143005e01e400610329005b02d70008
037800800329000d037800790329000a042b005205c5001001c70084045e
0054070a002e06cb003504d6001b04fa001a02d8000d04e9001b0330000d
02d9000a02db000c01c700aa02aa004e01c700aa02aa004e01c700aa02aa
004e01c700aa02aa004e053d007a0708003b0310008f0574009708c00022
0473004002e00034047300400473003104730034047300420473004d0430
002b047300420473004903cc000903cc000903cc00090428005803b7006b
0497007104b0004f0797004a0418006a045a005505d5004c07a9004404bf
004b03e0003b0965004a03f900560419004e06ed004a0420003f04500050
06a3004a03f3004d0633006006b90047064000440419004b0667004503be
003e043d003d03d60052048400440412004a041600460497003903fa0058
0650002d03cd005e0560005604950032045e005503e9003e0462005406c2
0049044500f604d500b10473005e0473002f000000000000006c0000006c
0000006c0000006c000000cc0000011c0000028000000430000005c00000
07500000079400000824000008a80000099800000a0000000a6400000aa0
00000ae000000b2800000c0400000c5000000d6800000ec000000f5c0000
1084000011b000001244000013a8000014d40000152c000015a80000163c
0000168c0000172400001828000019d800001af000001bf800001d180000
1ddc00001e6400001ec80000201800002088000020b80000213c00002230
00002280000023980000244400002540000025ec00002760000028740000
2a0c00002a6800002af800002bb400002d4c00002e4400002f0800002fa0
00002ff800003058000030bc000031540000317c000031a80000333c0000
341000003514000035ec00003780000038180000396800003a0800003a64
00003ad800003bb800003bfc00003cf400003dac00003e9c00003f800000
4068000040f4000042b400004354000044080000453400004690000046f0
0000481c000048bc0000499c000049e000004adc00004b9800004bb00000
4bc800004d9000004da800004dc000004dd800004df000004e0800004e20
00004e3800004e5000004e6800004e800000502c000050440000505c0000
50740000508c000050a4000050bc000050d4000050ec000051040000511c
000051340000514c000051640000517c00005194000051ac000051c40000
51dc00005238000052b00000547400005600000057cc00005858000058cc
000059e400005b8400005ce800005dcc00005dfc00005e6400005f440000
60280000620400006358000063e000006480000065300000665000006750
0000688800006954000069b400006a6400006aec00006c4800006d1c0000
6e3c000070640000720c0000730400007368000073ac0000745c00007598
000076900000771c000077cc00007880000078ec000078ec000079040000
791c0000793400007a6000007c4000007c7800007cb400007d5400007de4
00007e4400007ea400007f1400007ffc000080140000802c0000808c0000
81f800008268000082d80000839c0000844c000084d0000085280000858c
0000862000008848000088600000887800008890000088a8000088c00000
890c0000897c000089fc00008a4800008a6000008a7800008b2000008b38
00008b5000008b6800008b8000008bd000008c1400008c9800008cc40000
8d2000008d5000008e6400008f4800008f900000905c0000909c0000916c
000091fc000092140000922c000092440000925c000092b8000093a80000
95100000952800009540000095f8000096c4000096ec000097a4000097f0
000098a80000999c00009a9400009ba400009d7000009e2800009f9c0000
a1140000a16c0000a39c0000a5d80000a5f00000a6080000a6200000a638
0000a7000000a7180000a7300000a7c80000a98c0000a9a40000a9bc0000
a9d40000a9ec0000aa040000aa1c0000aa340000ab6c0000ab840000ab9c
0000ac480000ad500000ad680000ad800000ad980000adb00000adc80000
ade00000adf80000ae100000ae280000ae400000ae580000ae700000ae88
0000aea00000aeb80000afa00000afb80000b0580000b0700000b0b40000
b0cc0000b1c40000b1dc0000b2640000b27c0000b2940000b2ac0000b2c4
0000b2dc0000b2f40000b30c0000b3240000b33c0000b3cc0000b42c0000
b4440000b45c0000b4740000b48c0000b4a40000b4bc0000b4d40000b4ec
0000b5040000b51c0000b5340000b6b00000b8180000b8300000b8480000
b8600000b8780000b8900000b8a80000b8c00000b8d80000b8f00000b908
0000b9200000b9380000b9500000b9680000b9800000ba980000bab00000
bac80000bae00000baf80000bb100000bb280000bbf40000bcdc0000bcf4
0000bd0c0000bd240000bd3c0000bd540000bd6c0000bd840000bd9c0000
bdb40000bdcc0000bde40000bdfc0000be140000be2c0000bfc00000c154
0000c1e80000c2e40000c44c0000c4780000c4a80000c4ec0000c5700000
c59c0000c5fc0000c62c0000c68c0000c79c0000c7e40000c8240000c878
0000c9540000ca200000ca4c0000cb380000cb500000cb6c0000cb840000
cb9c0000cbb40000cbcc0000cbe40000cbfc0000cc140000cc2c0000cca8
0000cd200000cd4c0000cd9c0000ce040000ce7c0000cf340000cfec0000
d0b00000d2340000d2f40000d3200000d3800000d3980000d3b00000d450
0000d5140000d55c0000d5b40000d6a80000d8380000d8740000d9440000
d9a40000da500000dbc40000dc5c0000dd240000dd900000de200000dedc
0000df640000e0b00000e1180000e1fc0000e2f00000e3380000e3a80000
e5500000e5bc0000e6400000e6e80000e75c0000e8080000e8fc0000e9f8
0000eae40000ebcc0000ecf40000ee6c0000eff80000f1c80000f3340000
f3700000f4340000f5200000f5c80000f7040000f79c0000f8640000f8cc
0000f9580000fa140000fa9c0000fbd80000fc3c0000fd880000fe7c0000
fec40000ff3000010178000101e000010264000103040001037800010424
0001051800010614000106fc000107c0000108dc00010a1c00010abc0001
0bc800010c2000010c7c00010cac00010cfc00010d8c00010e5c00010f18
00010f9800011018000111640001129c000113c0000114e4000115680001
16b8000117700001185c000118e80001197000011a5800011b9c00011c98
00011d4800011df400011e6800011edc00011f4800011fb4000120080001
205c000120b0000121040001215000012184000121ec000122600001228c
000122b8000122e4000123140001237400012484000124b4000124f40001
253800012594000125f400012678000126a4000126d00001275400012780
000127ac000127ec00012908000129480001299c000129fc00012a8c0001
2af400012af400012b9400012c2c00012cfc00012d6c00012e6800012ed8
00012f480001304400013190000131e40001326c0001330c000133b00001
33f800013470000134f4000135d8000136bc0001379c0001380c00013918
00013a2000013af800013c1800013d7c00013ddc00013f48000140440001
409c00014154000142240001438c000143bc000144200001447c0001452c
000145e80001463c0001466c0001469c00014a7c00014ae000014b100001
4bb800014c1400014c4000014cc400014d0c00014d5000014db000014e0c
00014e3800014e6800014e9400014ec000014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014ef4
00014ef400014ef400014ef400014ef400014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014f30
00014f94000150bc000150e8000150fc00015154000151b4000151cc0001
5224000152dc0001545c000155c800015620000156bc00015758000157b0
0001592c000159d400015a2000015b3400015bd800015c9000015d8c0001
5e2400015f0000015f740001601c00016060000160c0000161000001612c
00016194000161dc0001622400016270000162bc000163300001635c0001
63a0000163cc000163f80001641000016420000164380001644800016460
00016470000164880001649c000164b4000164c4000164dc000164ec0001
65040001651c0001652c0001653c00016554000165740001658c0001659c
000165b4000165d4000165fc00016614000166240001663c0001665c0001
666c0001667c0001668c0001669c000166ac000166c4000166e4000166fc
0001670c00016724000167440001676c0001678400016794000167ac0001
67cc000167dc000167ec000167fc0001680c0001682c0001684c0001686c
000168840001689c000168b4000168cc000168e4000168fc000169140001
692c000169440001695c000169740001698c000169a4000169bc000169dc
000169fc00016a1c00016a3c00016a5c00016a7c00016a9c00016abc0001
6adc00016afc00016b1c00016b3c00016b5400016b6c00016b8400016b9c
00016bb400016bcc00016be400016bfc00016c1c00016c3c00016c540001
6c6c00016c8400016c9c00016cb400016ccc00016ce400016d0400016d24
00016d3c00016d5400016d6c00016d8400016d9c00016db400016dcc0001
6de400016dfc00016e1400016e2c00016e4400016e5c00016e7400016e8c
00016ea400016ebc00016ed400016eec00016f0400016f1c00016f340001
6f4c00016f6400016f7c00016f9400016fac00016fc400016fdc00016ff4
0001700c000170240001703c000170540001707400017094000170b40001
70d4000170ec0001710400017124000171440001715c0001717400017184
00017194000171ac000171c4000171dc000171f40001720c000172240001
723c000172540001726c000172840001729c000172b4000172cc000172e4
000172fc000173140001732c000173440001735c00017374000173940001
73b4000173d4000173f40001740c000174240001743c0001745400017474
00017494000174ac000174c4000174dc000174f40001750c000175240001
753c000175540001756c000175840001759c000175b4000175cc000175e4
000175fc0001761400017634000176540001766c000176840001769c0001
76b4000176cc000176e4000176fc0001771400017734000177540001776c
000177840001779c000177b4000177cc000177e4000177fc000178140001
782c000178440001785c000178740001788c000178a4000178bc000178d4
000178ec0001790400017924000179440001796400017984000179a40001
79c4000179e400017a0400017a1c00017a3400017a4c00017a6400017a7c
00017a9400017aac00017ac400017ae400017b0400017b1c00017b340001
7b4c00017b6400017b7c00017b9400017bb400017bd400017bf400017c14
00017c3400017c5400017c6c00017c8400017c9c00017cb400017ccc0001
7ce400017cfc00017d1400017d2c00017d4400017d5c00017d7400017d8c
00017da400017dc400017de400017e0400017e2400017e3c00017e540001
7e6c00017e8400017e9c00017eb400017ecc00017ee400017efc00017f14
00017f2c00017f4400017f5c00017f7400017f8c00017fa400017fbc0001
7fd400017fec000180040001801c000180340001804c000180640001807c
00018094000180ac000180c4000180dc000180f40001810c000181240001
813c000181540001816c0001818c000181ac000181cc000181ec0001820c
0001822c0001824c0001826c0001828c000182ac000182cc000182ec0001
830c0001832c0001834c0001836c0001838c000183ac000183cc000183ec
000184040001841c000184340001844c000184640001847c0001849c0001
84bc000184dc000184fc0001851c0001853c0001855c0001857c0001859c
000185bc000185d4000185ec000186040001861c000186340001864c0001
86640001867c0001869c000186bc000186dc000186fc0001871c0001873c
0001875c0001877c0001879c000187bc000187d4000187ec000188040001
881c000188340001884c000188640001887c00018894000188ac000188c4
000188dc000188f40001890c000189240001893c000189540001896c0001
89840001899c000189b4000189cc000189e4000189fc00018a1400018a2c
00018a4400018a5c00018a7400018a8c00018aa400018abc00018adc0001
8afc00018b1c00018b3c00018b5400018b6c00018b8400018b9c00018bb4
00018bcc00018be400018bfc00018c1400018c2c00018c4400018c5c0001
8c7400018c8c00018ca400018cbc00018cd400018cec00018d0400018d1c
00018d3400018d4c00018d6400018d7c00018d9400018dac00018dc40001
8ddc00018df400018e0c00018e2400018e3c00018e5400018e6c00018e7c
00018e8c00018ea400018ebc00018ed400018eec00018fa4000190040001
9184000191c0000191fc0001925c000192a400019324000194a4000194d4
0001953c0001958400019638000196bc0001971000019878000198dc0001
99b000019a0800019a5000019ab000019c4000019cac00019dec00019f54
00019fdc0001a0740001a1bc0001a3840001a41c0001a5940001a6e80001
a8000001a8a00001a99c0001aa0c0001aa780001aaf40001abf40001ac38
0001adb00001aef00001b0140001b12c0001b27c0001b2fc0001b37c0001
b5080001b5d40001b6880001b8200001b8d00001b9880001b9d40001ba34
0001ba980001baf40001bb500001bbac0001bbd80001bc080001bc640001
bcfc0001bda00001be100001be800001beac0001bed80001bf480001bfd4
0001c0440001c0d80001c2680001c3d40001c5340001c5900001c5ec0001
c6040001c61c0001c6340001c6540001c6740001c6940001c6b40001c6d4
0001c6ec0001c7040001c7240001c7440001c7640001c7840001c7a40001
c7c40001c7dc0001c7f40001c80c0001c82c0001c84c0001c86c0001c88c
0001c8a40001c8bc0001c8dc0001c8fc0001c9140001c92c0001c9440001
ca000001caf00001cb980001cc2c0001cd380001cd740001ce500001cf4c
0001cfc00001d0380001d1740001d2300001d3200001d3d00001d4640001
d53c0001d5800001d5e40001d6480001d8900001d9380001d99c0001da00
0001da2c0001da580001da700001da880001daa00001dab80001dae40001
db7c0001dc0c0001dc800001dcf40001dd840001de4c0001df940001e0d0
0001e1f40001e3540001e4380001e5500001e5c40001e7200001e7dc0001
e8980001e9d80001eab00001eb680001eca80001ee940001ef940001f104
0001f2500001f2b40001f3140001f3b00001f40c0001f43c0001f4680001
f4980001f4c40001f4f40001f51c0001f5480001f5740001f5d40001f670
0001f6b00001f6f00001f78c0001f8700001f8dc0001f9500001f9cc0001
fa600001fad40001fb4c0001fc300001fd140001fd540001fd940001fdd8
0001fe1c0001fe480001feb00001ff180001ff84000200e8000201500002
0180000201cc00020268000202ac000202f0000203300002037000020480
00020564000205b0000205f00002063000020680000206d0000207300002
07900002080c0002084c000208b0000208fc000209d000020a0c00020a0c
00020a0c00020a0c00020a0c00020a0c00020aa000020bac00020c240002
0c8800020d1000020d2800020dd000020f0c00020fb0000210240002109c
0002109c0002109c0002109c0002109c0002109c0002109c0002124c0002
1374000213f8000214e0000216340002168400021868000219cc00021a34
00021a5c00021a9c00021b5000021bfc00021ca800021dd000021e100002
1ebc00021ff40002207800022160000222b400022304000224e400022648
000226b0000226d800022718000227cc00022878000228dc000229f80002
2a3400022a7000022acc00022b4c00022d4000022e2000022e9800022f70
00022fc8000230a80002324000023280000232f800023310000233200002
34000002352c0002360c0002372c000237b4000238f80002397800023a20
00023ab000023c2c00023cb800023d6800023ec000024014000240680002
40c0000241ec000242040002421c000242340002424c000242640002427c
00024294000242ac000242c4000242dc000242f40002430c000243240002
433c000243540002436c000243840002439c000243b4000243cc000243e4
000243fc000244140002442c000244440002445c000244740002448c0002
44a4000244bc000244d4000244ec000245040002451c000245340002454c
000245640002457c00024594000245ac000245c4000245dc000245f40002
460c000246240002463c000246540002466c000246840002469c000246b4
000246cc000246e4000246fc000247140002472c000247440002475c0002
47740002478c000247a4000247bc000247d4000247ec000248040002481c
000248340002484c000248640002487c00024894000248ac000248c40002
48dc000248f40002490c000249240002493c000249540002496c00024984
0002499c000249b4000249cc000249e4000249fc00024a1400024a2c0002
4a4400024a5c00024a7400024a8c00024aa400024abc00024ad400024aec
00024b0400024b1c00024b3400024b4c00024b6400024b7c00024b940002
4bac00024bc400024bdc00024bf400024c0c00024c2400024c3c00024c54
00024c6c00024c8400024c9c00024cbc00024cdc00024cfc00024d1c0002
4d3c00024d5c00024d7c00024d9c00024dbc00024ddc00024dfc00024e1c
00024e3c00024e5c00024e7c00024e9c00024ebc00024edc00024efc0002
4f1c00024f3c00024f5c00024f7c00024f9c00024fbc00024fdc00024ffc
0002501c0002503c0002505c0002507c0002509c000250bc000250dc0002
50fc0002511c0002513c0002515c0002517c0002519c000251bc000251dc
000251fc0002521c0002523c0002525c0002527c0002529c000252b40002
52cc000252ec00025304000253240002533c0002535c000253740002538c
000253a4000253bc000253d4000253f40002540c0002542c000254440002
54640002547c00025494000254ac000254c4000254dc000254f40002550c
000255240002553c000255540002556c000255840002559c000255b40002
55cc000255e4000255fc000256140002562c000256440002565c00025674
0002568c000256a4000256bc000256d4000256ec00025704000257240002
573c0002575c0002577400025794000257ac000257c4000257dc000257f4
0002580c000258240002583c000258540002586c000258840002589c0002
58b4000258cc000258e4000258fc000259140002592c000259440002595c
000259740002598c00025a5c00025aa800025afc00025bb400025c200002
5c3800025c5800025c7800025c9800025cb800025cd800025cf800025d18
00025d3800025d5800025d7800025d9800025db800025dd800025df80002
5e1800025e3800025e5800025e7800025e9800025eb800025ed800025ef8
00025f1800025f3800025f5800025f7800025f9800025fb800025fd80002
5ff80002601800026038000260580002607800026098000260b8000260d8
000260f80002611800026138000261580002617800026198000261b80002
61d8000261f80002621800026238000262580002627800026298000262b8
000262d0000262e800026300000263180002633000026348000263600002
637800026390000263a8000263c0000263d8000263f00002640800026420
00026438000264500002646800026488000264a0000264b8000264d00002
64e800026500000265180002653000026548000265680002658000026598
000265b0000265c8000265e0000265f80002661000026628000266480002
66600002667800026690000266a8000266c0000266d8000266f000026708
0002672800026740000267580002677000026788000267a0000267b80002
68e000026a0c00026b8c00026be400026c9800026dac00026e6800026ea0
00026f4000026f5800027040000270dc000272d800027508000276e00002
78fc00027bb800027da000027f04000280280002814c0002824800028310
000284500002850400028580000285fc000286d8000287c4000288740002
891800028a0000028b1800028c1400028e7000028f5800028fa400028ff0
000290840002912c000291c400029260000292c80002932c000294000002
94d4000296c400029924000299b400029a3800029ac800029b5800029c88
00029dac00029e1000029e7800029f0800029f9c0002a0300002a0dc0002
a1600002a1f40002a2500002a2ac0002a3040002a35c0002a41c0002a4d4
0002a5800002a61c0002a6e00002a7680002a80c0002a8900002a9280002
a9a80002aaa00002ab900002ad200002aeac0002af400002aff80002b098
0002b1440002b31c0002b4380002b5540002b6dc0002b8100002b95c0002
baac0002bb1c0002bb840002bc280002bcdc0002bdac0002bee00002c02c
0002c0d00002c1780002c1a80002c2480002c2e00002c3280002c39c0002
c4c00002c6000002c67c0002c7240002c7740002c7e00002c8480002c920
0002ca040002cacc0002cba80002ccfc0002cdb00002ce580002ceec0002
cf2c0002cf8c0002cfd40002d0200002d04c0002d0d00002d12c0002d194
0002d1d80002d2940002d3300002d3b00002d40c0002d4a80002d5800002
d6000002d6800002d7200002d7f80002d88c0002d9240002da140002db40
0002dc180002dce80002ddb00002df180002dff80002e0fc0002e2080002
e2d80002e3cc0002e4c40002e5fc0002e7ac0002e89c0002e9a00002ea54
0002eafc0002ebc00002ecc00002ecfc0002ed380002ed740002edac0002
edf80002ee340002ee780002eebc0002ef100002ef640002efbc0002eff8
0002f0540002f0d80002f1900002f2480002f3980002f40c0002f4ec0002
f6480002f7500002f7900002f8c80002fa040002fa400002fafc0002fb34
0002fb6c0002fc240002fce00002fd280002fdf00002ff0c0002ffa40003
003c000300ac000300d800030104000301ac000301d4000302180003025c
000302bc000303040003038400030404000304fc0003054c000305780003
05a400030754000308c40003099400030a6800030b7c00030c2800030c90
00030d0c00030d7c00030e1000030e6c00030ebc00030eec00030f800003
111000031174000311c000031290000313640003143800031514000316fc
000317f0000318f4000319e000031af400031c6c00031c8400031c9c0003
1cb400031d1c00031db800031dfc00031e7400031ed800031f7000032058
0003227000032488000326300003265c00032688000326bc000326f00003
272c00032768000327a4000327e00003281c0003285800032894000328d0
000328fc000329e400032a3000032bb000032c5800032d7000032dd80003
2e8800032fac00033104000332400003338c000334c40003356000033664
0003382c00033ab800033ccc00033e3000033fa4000340580003422c0003
43d8000344300003448c00034530000345ec000346900003474c000347f8
000348b80003496400034a2400034ae400034ba000034c5c00034d180003
4dd400034e9400034f500003500c000350c800035188000351c400035210
0003525c000352a8000352e4000353a4000353f40003549c000354e00003
5608000357dc000358340003597800035ac000035afc00035b3800035b74
00035bb000035c0400035c5400035cc800035d9c00035e7800035e900003
5ea800035f84000360440003610400036288000364000003651c00036724
0003682c00036930000369dc00036a8c00036b8400036c8400036db00003
6e0000036e7000036f480003701000037128000371f80003727800037348
0003747000037518000375bc0003769000037760000377a4000379640003
7a0000037b8800037c5c00037dac00037ec000037f94000380a8000381cc
000382a80003845c000385c000038690000386e000038754000387f80003
883c000389fc00038a9800038bbc00038c8c00038de400038e8400038ed4
00038f500003910000039258000393ec00039580000396d8000398880003
998800039a6000039bc400039c2000039cd000039d2c00039dd400039e34
00039ee000039f3c00039fe80003a1580003a1c00003a2e40003a4f80003
a5680003a6980003a6e00003a7cc0003a9640003a9ec0003aad80003ac30
0003ac840003ae700003afdc0003b0200003b05c0003b0a00003b1740003
b2f00003b4c40003b6140003b8640003b9300003bab80003bd240003bee0
0003bfe80003c1640003c3a80003c4fc0003c6a00003c8480003c9d00003
cb400003ccc00003cda00003d0b40003d2ac0003d52c0003d6080003d7c0
0003d8b00003da780003dbe40003ddb80003ded00003e08c0003e2640003
e3d00003e6b00003e8ec0003eb3c0003ecd00003ee100003efdc0003f178
0003f3880003f40c0003f45c0003f54c0003f58000010000089500920009
006b0007000200100010005d000007e80a1d000400010000002701da0001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f006000010000000000040009007f0001
000000000005000800880001000000000006000900900001000000000007
003200990001000000000012000900cb0001000000000100000900d40001
000000000101001000dd0001000000000102000e00ed0001000000000103
001400fb00010000000001040012010f0001000000000105000901210001
000000010007002f012a0001000000020007003c01590001000000030007
003001950001000000040007003a01c50001000000050007003601ff0001
000000060007003002350001000000070007003c02650003000104040002
000602a10003000104060002000e02a70003000104070002000c02b50003
000104090002000e02c100030001040b0002001002cf00030001040c0002
000c02df0003000104100002001002eb0003000104110002000a02fb0003
0001041200020006030500030001041300020010030b0003000104140002
000c031b0003000104160002000c03270003000104190002000e03330003
0001041d0002000c034100030001080400020006034d000300010c010002
00080353000300010c0a0002000c035ba920313939302d32303036204170
706c6520436f6d707574657220496e632e20a92031393831204c696e6f74
79706520414720a920313939302d3931205479706520536f6c7574696f6e
7320496e632e48656c766574696361526567756c617248656c7665746963
613b2031302e30643165313b20323031342d30372d323148656c76657469
636131302e306431653148656c76657469636148656c7665746963612069
73206120726567697374657265642074726164656d61726b206f66204c69
6e6f7479706520414748656c7665746963614c6967617475726573436f6d
6d6f6e204c69676174757265734e756d6265722053706163696e6750726f
706f7274696f6e616c204e756d626572734d6f6e6f737061636564204e75
6d626572734e6f204368616e676548656c7665746963612065737420756e
65206d617271756520648e706f738e65206465204c696e6f747970652041
4748656c766574696361206973742065696e2065696e676574726167656e
657320576172656e7a65696368656e20646572204c696e6f747970652041
4748656c766574696361208f20756e206d61726368696f20726567697374
7261746f206469204c696e6f7479706520414748656c7665746963612069
732065656e20676572656769737472656572642068616e64656c736d6572
6b2076616e204c696e6f7479706520414748656c766574696361208a7220
65747420726567697374726572617420766172756d8a726b6520669a7220
4c696e6f7479706520414748656c76657469636120657320756e61206d61
7263612072656769737472616461206465204c696e6f7479706520414748
656c76657469636120657220657420726567697374726572657420766172
656dbe726b652074696c68bf72656e6465204c696e6f747970652041476a
196e969ad4004f007200640069006e00e60072004e006f0072006d006100
6c0052006500670075006c00610072004e006f0072006d00610061006c00
69004e006f0072006d0061006c005200650067006f006c00610072006530
ec30ae30e530e930fcc77cbc18ccb40052006500670075006c0069006500
72004e006f0072006d0061006c004e006f0072006d0061006c041e043104
4b0447043d044b0439004e006f0072006d0061006c5e3889c44f53063906
27062f064a004e006f0072006d0061006c000000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[16257 16277 16153 16221 16373 16377 16265 16181 16381 16269 16333 16361 16205
16201 16177 15441 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2856 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/zero 19 def
end
Helvetica /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/RKEPLI+Helvetica /Helvetica findfont ct_VMDictPut/RKEPLI+Helvetica*1 [48{/.notdef}rp /zero 207{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf167.245 492.23 mo(0)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 3076 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/one 20 def
end
RKEPLI+Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [48{/.notdef}rp /zero /one 206{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf167.245 476.14 mo(100)[-6.60117 -6.60117 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 3152 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/two 21 def
end
RKEPLI+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [48{/.notdef}rp /zero /one /two 205{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf167.245 452.952 mo(200)[-6.60117 -6.60117 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 3432 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/three 22 def
end
RKEPLI+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf167.245 430.237 mo(300)[-6.60117 -6.60117 0 ]yshgrestore
43.029 500.223 mo
43.029 397.322 li
@
45.913 488.764 mo
43.029 488.764 li
@
44.471 484.181 mo
43.029 484.181 li
@
44.471 479.597 mo
43.029 479.597 li
@
44.471 475.014 mo
43.029 475.014 li
@
44.471 470.43 mo
43.029 470.43 li
@
45.913 465.846 mo
43.029 465.846 li
@
44.471 461.263 mo
43.029 461.263 li
@
44.471 456.679 mo
43.029 456.679 li
@
44.471 452.096 mo
43.029 452.096 li
@
44.471 447.512 mo
43.029 447.512 li
@
45.913 442.929 mo
43.029 442.929 li
@
44.471 438.345 mo
43.029 438.345 li
@
44.471 433.762 mo
43.029 433.762 li
@
44.471 429.178 mo
43.029 429.178 li
@
44.471 424.594 mo
43.029 424.594 li
@
45.913 420.011 mo
43.029 420.011 li
@
45.913 488.764 mo
43.029 488.764 li
@
44.471 493.348 mo
43.029 493.348 li
@
44.471 497.931 mo
43.029 497.931 li
@
45.913 420.011 mo
43.029 420.011 li
@
44.471 415.427 mo
43.029 415.427 li
@
44.471 410.844 mo
43.029 410.844 li
@
44.471 406.26 mo
43.029 406.26 li
@
44.471 401.677 mo
43.029 401.677 li
@
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf42.313 492.23 mo(0)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf42.313 476.14 mo(100)[-6.60117 -6.60117 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf42.313 452.952 mo(200)[-6.60117 -6.60117 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf42.313 430.237 mo(300)[-6.60117 -6.60117 0 ]yshgrestore
156.531 500.223 mo
43.029 500.223 li
@
141.096 496.579 mo
141.096 500.223 li
@
133.301 498.401 mo
133.301 500.223 li
@
125.505 498.401 mo
125.505 500.223 li
@
117.71 498.401 mo
117.71 500.223 li
@
109.914 496.579 mo
109.914 500.223 li
@
102.119 498.401 mo
102.119 500.223 li
@
94.323 498.401 mo
94.323 500.223 li
@
86.528 498.401 mo
86.528 500.223 li
@
78.732 496.579 mo
78.732 500.223 li
@
70.937 498.401 mo
70.937 500.223 li
@
63.141 498.401 mo
63.141 500.223 li
@
55.346 498.401 mo
55.346 500.223 li
@
47.55 496.579 mo
47.55 500.223 li
@
141.096 496.579 mo
141.096 500.223 li
@
148.892 498.401 mo
148.892 500.223 li
@
47.55 496.579 mo
47.55 500.223 li
@
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf145.477 509.266 mo(2)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /minus putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B796769580DD10054882A804F7E2595926310CFCB4532E7C01> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RKEPLJ+Symbol /Symbol findfont ct_VMDictPut/RKEPLJ+Symbol*1 [45{/.notdef}rp /minus 210{/.notdef}rp]RKEPLJ+Symbol nfRKEPLJ+Symbol*1 [0 -11.8726 -11.8726 0 0 0 ]msf145.477 515.891 mo(-)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf113.77 509.266 mo(0)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf83.01 509.266 mo(2)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 3776 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/four 23 def
end
RKEPLI+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four 203{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf52.25 509.266 mo(4)shgrestore
156.531 397.322 mo
43.029 397.322 li
@
141.096 400.967 mo
141.096 397.322 li
@
133.301 399.144 mo
133.301 397.322 li
@
125.505 399.144 mo
125.505 397.322 li
@
117.71 399.144 mo
117.71 397.322 li
@
109.914 400.967 mo
109.914 397.322 li
@
102.119 399.144 mo
102.119 397.322 li
@
94.323 399.144 mo
94.323 397.322 li
@
86.528 399.144 mo
86.528 397.322 li
@
78.732 400.967 mo
78.732 397.322 li
@
70.937 399.144 mo
70.937 397.322 li
@
63.141 399.144 mo
63.141 397.322 li
@
55.346 399.144 mo
55.346 397.322 li
@
47.55 400.967 mo
47.55 397.322 li
@
141.096 400.967 mo
141.096 397.322 li
@
148.892 399.144 mo
148.892 397.322 li
@
47.55 400.967 mo
47.55 397.322 li
@
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf145.477 389.066 mo(2)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.8726 -11.8726 0 0 0 ]msf145.477 395.218 mo(-)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf113.77 395.218 mo(0)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf83.01 395.218 mo(2)shgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf52.25 395.218 mo(4)shgrestore
88.08 411.073 mo
71.764 411.073 li
@
92.812 411.073 mo
109.127 411.073 li
@
110.54 422.303 mo
98.165 422.303 li
@
115.272 422.303 mo
127.647 422.303 li
@
91.964 437.199 mo
86.546 437.199 li
@
96.696 437.199 mo
102.115 437.199 li
@
92.075 452.325 mo
88.903 452.325 li
@
96.807 452.325 mo
99.978 452.325 li
@
94.615 463.784 mo
93.519 463.784 li
@
99.348 463.784 mo
100.444 463.784 li
@
92.411 472.264 mo
92.35 472.264 li
@
97.143 472.264 mo
97.204 472.264 li
@
90.446 413.534 mo
87.165 413.534 87.165 408.612 90.446 408.612 cv
93.727 408.612 93.727 413.534 90.446 413.534 cv
cp
112.906 424.763 mo
109.625 424.763 109.625 419.842 112.906 419.842 cv
116.187 419.842 116.187 424.763 112.906 424.763 cv
cp
94.33 439.66 mo
91.049 439.66 91.049 434.738 94.33 434.738 cv
97.611 434.738 97.611 439.66 94.33 439.66 cv
cp
94.441 454.786 mo
91.16 454.786 91.16 449.864 94.441 449.864 cv
97.722 449.864 97.722 454.786 94.441 454.786 cv
cp
96.981 466.245 mo
93.7 466.245 93.7 461.323 96.981 461.323 cv
100.262 461.323 100.262 466.245 96.981 466.245 cv
cp
94.777 474.724 mo
91.496 474.724 91.496 469.803 94.777 469.803 cv
98.058 469.803 98.058 474.724 94.777 474.724 cv
cp
95.999 480.912 mo
92.718 480.912 92.718 475.991 95.999 475.991 cv
99.28 475.991 99.28 480.912 95.999 480.912 cv
cp
94.007 485.267 mo
90.726 485.267 90.726 480.345 94.007 480.345 cv
97.288 480.345 97.288 485.267 94.007 485.267 cv
cp
92.165 488.017 mo
88.884 488.017 88.884 483.095 92.165 483.095 cv
95.446 483.095 95.446 488.017 92.165 488.017 cv
cp
f
77.417 412.019 mo
76.471 412.019 li
76.471 410.126 li
77.417 410.126 li
@
103.475 412.019 mo
104.421 412.019 li
104.421 410.126 li
103.475 410.126 li
@
101.409 423.249 mo
100.462 423.249 li
100.462 421.356 li
101.409 421.356 li
@
124.403 423.249 mo
125.349 423.249 li
125.349 421.356 li
124.403 421.356 li
@
89.093 438.146 mo
88.147 438.146 li
88.147 436.253 li
89.093 436.253 li
@
99.568 438.146 mo
100.514 438.146 li
100.514 436.253 li
99.568 436.253 li
@
90.312 453.271 mo
89.366 453.271 li
89.366 451.378 li
90.312 451.378 li
@
98.569 453.271 mo
99.516 453.271 li
99.516 451.378 li
98.569 451.378 li
@
94.612 464.73 mo
93.666 464.73 li
93.666 462.837 li
94.612 462.837 li
@
99.35 464.73 mo
100.297 464.73 li
100.297 462.837 li
99.35 462.837 li
@
94.241 479.398 mo
93.295 479.398 li
93.295 477.505 li
94.241 477.505 li
@
97.757 479.398 mo
98.704 479.398 li
98.704 477.505 li
97.757 477.505 li
@
94.622 411.073 mo
91.564 422.303 li
94.193 437.199 li
93.772 452.325 li
94.176 463.784 li
93.791 472.264 li
94.14 478.451 li
93.424 482.806 li
92.896 485.556 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
94.323 500.223 mo
94.323 397.322 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if

1 0 3 <> RKEPLI+Helvetica AddT42Char 
1 2720 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>RKEPLI+Helvetica AddT42Char 
1 4528 26 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>RKEPLI+Helvetica AddT42Char 
1 7880 42 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>RKEPLI+Helvetica AddT42Char 
1 11000 57 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd000000>RKEPLI+Helvetica AddT42Char 
1 13804 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/space 3 def
/period 17 def
/seven 26 def
/G 42 def
/V 57 def
/e 72 def
end
RKEPLI+Helvetica /Encoding get
dup 32 /space put
dup 46 /period put
dup 55 /seven put
dup 71 /G put
dup 86 /V put
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four 2{/.notdef}rp /seven 15{/.notdef}rp /G 14{/.notdef}rp /V 14{/.notdef}rp /e 154{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf58.402 476.613 mo(7.7 GeV)[-6.60117 -3.3006 -6.60117 -3.30057 -9.23688 -6.60117 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 1940 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>RKEPLI+Helvetica AddT42Char 
1 2084 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>RKEPLI+Helvetica AddT42Char 
1 12712 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/a 68 def
end
RKEPLI+Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four 2{/.notdef}rp /seven 15{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 154{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -11.8726 -11.8726 0 0 0 ]msf58.402 496.016 mo(\(a\))[-3.95349 -6.60117 0 ]yshgrestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 8508 46 <0001009c0000054e05bd000b00ba407a0605250527084807580777058803
9803b803c803e7070ba603a60402050528082909a809f902050705070805
0903d4020105050608080709020228030325120404090605052512080807
050409080705040302070609080502040a040301020a0706086b067b06e8
0603061a0d010a250b00190c0dd621765e182b2b4ef43c4dfd3c194e10e6
5d18003f3c3c3f3c3c1217390111173908874d2e2b057d10c5872e182b04
104b52787ac510083c083c31300072715d01715d13331101210901210107
11239cc202cc0113fd9d0274fefdfdfeebc205bdfd3402ccfdb0fc9302e1
e1fe0000>RKEPLI+Helvetica AddT42Char 
1 9112 49 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>RKEPLI+Helvetica AddT42Char 
1 15604 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>RKEPLI+Helvetica AddT42Char 
1 15788 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>RKEPLI+Helvetica AddT42Char 
2 820 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/K 46 def
/N 49 def
/n 81 def
/o 82 def
/t 87 def
end
RKEPLI+Helvetica /Encoding get
dup 75 /K put
dup 78 /N put
dup 110 /n put
dup 111 /o put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four 2{/.notdef}rp /seven 15{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N 7{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 4{/.notdef}rp /t 139{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -9.49812 -9.49812 0 0 0 ]msf138.378 484.658 mo(Net Kaon)[-6.85751 -5.28094 -2.64047 -2.6405 -6.33514 -5.28098 -5.28094 0 ]yshgsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 2560 15 <000100aafed0018000da000e002d401600230e0a64080a1017171a07340a
640008190f6365182b4e10f44d3cfded4e456544e6003f4dedd4ed313017
3637363534262723353315140607aa451c0f01026dd66076d10c552d2a07
0b07daca77b415000000>RKEPLI+Helvetica AddT42Char 
1 2784 18 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>RKEPLI+Helvetica AddT42Char 
1 3932 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>RKEPLI+Helvetica AddT42Char 
1 4228 25 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>RKEPLI+Helvetica AddT42Char 
1 5544 31 <0001001cffed04ad04280006006a40405703670387030300201203030202
20120100010620120304030420120505060306040200030505010106050a
03000104020503011a08060019070888215fb5182b2b4ef43c10f6173c11
1239003d3f3f111217392f044d1887102b10872b87102b87102b3130015d
130115090115011c0491fc4403bcfb6f025e01cab4fe97fe96b401cb>RKEPLI+Helvetica AddT42Char 
1 13328 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>RKEPLI+Helvetica AddT42Char 
2 1904 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>RKEPLI+Helvetica AddT42Char 
2 2588 95 <000100900000013b05d20003002940150200010a0517171a0300c1020119
0405c1217765182b2b4ef43c4dfd3c4e456544e6003f3f31302123113301
3babab05d2000000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/comma 15 def
/slash 18 def
/five 24 def
/six 25 def
/less 31 def
/c 70 def
/y 92 def
/bar 95 def
end
RKEPLI+Helvetica /Encoding get
dup 44 /comma put
dup 47 /slash put
dup 53 /five put
dup 54 /six put
dup 60 /less put
dup 99 /c put
dup 121 /y put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 10{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N 7{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 8{/.notdef}rp /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -8.0734 -8.0734 0 0 0 ]msf150.209 469.988 mo(<1.6 GeV/c,|y|<0.5)[-4.71487 -4.4888 -2.24442 -4.4888 -2.24442 -6.2811 -4.4888 -5.38492 -2.24438 -4.03671 -2.24438 -2.09906 -4.03668 -2.09906 -4.71484 -4.4888 -2.24442 0 ]yshgrestore
gsave
156.531 518.811 mo
156.531 397.322 li
43.029 397.322 li
43.029 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 10764 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/T 55 def
end
RKEPLI+Helvetica /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 10{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N 5{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 8{/.notdef}rp /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -5.22396 -5.22396 0 0 0 ]msf154.468 473.3 mo(T)shgrestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 16028 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/p 83 def
end
RKEPLI+Helvetica /Encoding get
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 10{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N 5{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 8{/.notdef}rp /n /o /p 3{/.notdef}rp /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -8.0734 -8.0734 0 0 0 ]msf150.209 496.016 mo(0.2< p)[-4.48883 -2.24438 -4.48883 -4.71484 -2.24442 0 ]ysh282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
@
270.004 500.223 mo
270.004 397.322 li
156.531 397.322 li
156.531 500.223 li
cp
ef
270.004 500.223 mo
270.004 397.322 li
156.531 397.322 li
156.531 500.223 li
cp
@
.75 lw
270.004 500.223 mo
270.004 397.322 li
156.531 397.322 li
156.531 500.223 li
cp
.75021 .679683 .670222 .90164 cmyk
@
270.004 500.223 mo
270.004 397.322 li
@
266.8 488.764 mo
270.004 488.764 li
@
268.402 484.181 mo
270.004 484.181 li
@
268.402 479.597 mo
270.004 479.597 li
@
268.402 475.014 mo
270.004 475.014 li
@
268.402 470.43 mo
270.004 470.43 li
@
266.8 465.846 mo
270.004 465.846 li
@
268.402 461.263 mo
270.004 461.263 li
@
268.402 456.679 mo
270.004 456.679 li
@
268.402 452.096 mo
270.004 452.096 li
@
268.402 447.512 mo
270.004 447.512 li
@
266.8 442.929 mo
270.004 442.929 li
@
268.402 438.345 mo
270.004 438.345 li
@
268.402 433.762 mo
270.004 433.762 li
@
268.402 429.178 mo
270.004 429.178 li
@
268.402 424.594 mo
270.004 424.594 li
@
266.8 420.011 mo
270.004 420.011 li
@
266.8 488.764 mo
270.004 488.764 li
@
268.402 493.348 mo
270.004 493.348 li
@
268.402 497.931 mo
270.004 497.931 li
@
266.8 420.011 mo
270.004 420.011 li
@
268.402 415.427 mo
270.004 415.427 li
@
268.402 410.844 mo
270.004 410.844 li
@
268.402 406.26 mo
270.004 406.26 li
@
268.402 401.677 mo
270.004 401.677 li
@
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf281.767 492.23 mo(0)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf281.767 475.667 mo(100)[-6.33264 -6.33261 0 ]yshgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf281.767 452.478 mo(200)[-6.33264 -6.33261 0 ]yshgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf281.767 429.763 mo(300)[-6.33264 -6.33261 0 ]yshgrestore
156.531 500.223 mo
156.531 397.322 li
@
159.735 488.764 mo
156.531 488.764 li
@
158.133 484.181 mo
156.531 484.181 li
@
158.133 479.597 mo
156.531 479.597 li
@
158.133 475.014 mo
156.531 475.014 li
@
158.133 470.43 mo
156.531 470.43 li
@
159.735 465.846 mo
156.531 465.846 li
@
158.133 461.263 mo
156.531 461.263 li
@
158.133 456.679 mo
156.531 456.679 li
@
158.133 452.096 mo
156.531 452.096 li
@
158.133 447.512 mo
156.531 447.512 li
@
159.735 442.929 mo
156.531 442.929 li
@
158.133 438.345 mo
156.531 438.345 li
@
158.133 433.762 mo
156.531 433.762 li
@
158.133 429.178 mo
156.531 429.178 li
@
158.133 424.594 mo
156.531 424.594 li
@
159.735 420.011 mo
156.531 420.011 li
@
159.735 488.764 mo
156.531 488.764 li
@
158.133 493.348 mo
156.531 493.348 li
@
158.133 497.931 mo
156.531 497.931 li
@
159.735 420.011 mo
156.531 420.011 li
@
158.133 415.427 mo
156.531 415.427 li
@
158.133 410.844 mo
156.531 410.844 li
@
158.133 406.26 mo
156.531 406.26 li
@
158.133 401.677 mo
156.531 401.677 li
@
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf154.941 492.23 mo(0)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf154.941 475.667 mo(100)[-6.33264 -6.33261 0 ]yshgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf154.941 452.478 mo(200)[-6.33264 -6.33261 0 ]yshgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3896 -11.3896 0 0 0 ]msf154.941 429.763 mo(300)[-6.33264 -6.33261 0 ]yshgrestore
270.004 500.223 mo
156.531 500.223 li
@
254.573 496.943 mo
254.573 500.223 li
@
246.779 498.583 mo
246.779 500.223 li
@
238.986 498.583 mo
238.986 500.223 li
@
231.193 498.583 mo
231.193 500.223 li
@
223.399 496.943 mo
223.399 500.223 li
@
215.606 498.583 mo
215.606 500.223 li
@
207.812 498.583 mo
207.812 500.223 li
@
200.019 498.583 mo
200.019 500.223 li
@
192.225 496.943 mo
192.225 500.223 li
@
184.432 498.583 mo
184.432 500.223 li
@
176.639 498.583 mo
176.639 500.223 li
@
168.845 498.583 mo
168.845 500.223 li
@
161.052 496.943 mo
161.052 500.223 li
@
254.573 496.943 mo
254.573 500.223 li
@
262.366 498.583 mo
262.366 500.223 li
@
161.052 496.943 mo
161.052 500.223 li
@
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf259.052 509.739 mo(2)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLJ+Symbol*1 [0 -12.3387 -12.3387 0 0 0 ]msf259.052 516.838 mo(-)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf227.819 509.739 mo(0)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf196.586 509.739 mo(2)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf165.352 509.739 mo(4)shgrestore
270.004 397.322 mo
156.531 397.322 li
@
254.573 400.602 mo
254.573 397.322 li
@
246.779 398.962 mo
246.779 397.322 li
@
238.986 398.962 mo
238.986 397.322 li
@
231.193 398.962 mo
231.193 397.322 li
@
223.399 400.602 mo
223.399 397.322 li
@
215.606 398.962 mo
215.606 397.322 li
@
207.812 398.962 mo
207.812 397.322 li
@
200.019 398.962 mo
200.019 397.322 li
@
192.225 400.602 mo
192.225 397.322 li
@
184.432 398.962 mo
184.432 397.322 li
@
176.639 398.962 mo
176.639 397.322 li
@
168.845 398.962 mo
168.845 397.322 li
@
161.052 400.602 mo
161.052 397.322 li
@
254.573 400.602 mo
254.573 397.322 li
@
262.366 398.962 mo
262.366 397.322 li
@
161.052 400.602 mo
161.052 397.322 li
@
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf259.052 388.592 mo(2)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLJ+Symbol*1 [0 -12.3387 -12.3387 0 0 0 ]msf259.052 395.218 mo(-)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf227.819 395.218 mo(0)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf196.586 395.218 mo(2)shgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf165.352 395.218 mo(4)shgrestore
200.896 410.385 mo
188.184 410.385 li
@
205.628 410.385 mo
218.34 410.385 li
@
216.85 422.073 mo
207.27 422.073 li
@
221.582 422.073 mo
231.163 422.073 li
@
201.861 436.741 mo
198.194 436.741 li
@
206.594 436.741 mo
210.261 436.741 li
@
217.179 451.867 mo
215.737 451.867 li
@
221.912 451.867 mo
223.354 451.867 li
@
210.773 463.555 mo
210.709 463.555 li
@
215.505 463.555 mo
215.569 463.555 li
@
203.262 412.846 mo
199.981 412.846 199.981 407.925 203.262 407.925 cv
206.543 407.925 206.543 412.846 203.262 412.846 cv
cp
219.216 424.534 mo
215.935 424.534 215.935 419.613 219.216 419.613 cv
222.497 419.613 222.497 424.534 219.216 424.534 cv
cp
204.228 439.202 mo
200.946 439.202 200.946 434.28 204.228 434.28 cv
207.509 434.28 207.509 439.202 204.228 439.202 cv
cp
219.546 454.327 mo
216.264 454.327 216.264 449.406 219.546 449.406 cv
222.826 449.406 222.826 454.327 219.546 454.327 cv
cp
213.139 466.015 mo
209.858 466.015 209.858 461.094 213.139 461.094 cv
216.42 461.094 216.42 466.015 213.139 466.015 cv
cp
208.686 474.495 mo
205.405 474.495 205.405 469.574 208.686 469.574 cv
211.967 469.574 211.967 474.495 208.686 474.495 cv
cp
206.902 480.912 mo
203.621 480.912 203.621 475.991 206.902 475.991 cv
210.183 475.991 210.183 480.912 206.902 480.912 cv
cp
207.938 485.267 mo
204.657 485.267 204.657 480.345 207.938 480.345 cv
211.22 480.345 211.22 485.267 207.938 485.267 cv
cp
207.374 488.017 mo
204.093 488.017 204.093 483.095 207.374 483.095 cv
210.655 483.095 210.655 488.017 207.374 488.017 cv
cp
f
191.318 411.332 mo
190.371 411.332 li
190.371 409.439 li
191.318 409.439 li
@
215.207 411.332 mo
216.153 411.332 li
216.153 409.439 li
215.207 409.439 li
@
208.849 423.02 mo
207.903 423.02 li
207.903 421.127 li
208.849 421.127 li
@
229.583 423.02 mo
230.53 423.02 li
230.53 421.127 li
229.583 421.127 li
@
199.666 437.687 mo
198.719 437.687 li
198.719 435.794 li
199.666 435.794 li
@
208.789 437.687 mo
209.736 437.687 li
209.736 435.794 li
208.789 435.794 li
@
216.006 452.813 mo
215.06 452.813 li
215.06 450.92 li
216.006 450.92 li
@
223.085 452.813 mo
224.031 452.813 li
224.031 450.92 li
223.085 450.92 li
@
211.238 464.501 mo
210.291 464.501 li
210.291 462.608 li
211.238 462.608 li
@
215.04 464.501 mo
215.987 464.501 li
215.987 462.608 li
215.04 462.608 li
@
209.781 410.385 mo
208.831 422.073 li
208.645 436.741 li
208.43 451.867 li
208.145 463.555 li
207.898 472.034 li
207.472 478.451 li
207.435 482.806 li
207.049 485.556 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
207.812 500.223 mo
207.812 397.322 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf171.504 476.613 mo(27 GeV)[-6.86032 -6.86032 -3.43015 -9.59952 -6.86032 0 ]yshgrestore
gsave
282.612 518.811 mo
282.612 397.322 li
156.531 397.322 li
156.531 518.811 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf171.504 496.016 mo(\(e\))[-4.1087 -6.86032 0 ]yshgrestore
263.7 494.513 mo
263.7 415.546 li
238.484 415.546 li
238.484 494.513 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
263.7 494.513 mo
263.7 415.546 li
238.484 415.546 li
238.484 494.513 li
cp
@
.75 lw
263.7 494.513 mo
263.7 415.545 li
@
263.7 415.545 mo
238.484 415.545 li
@
238.484 415.545 mo
238.484 494.513 li
@
238.484 494.513 mo
263.7 494.513 li
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 6896 37 <000300970000050405bd000a00150028008240385a0d5a116a026a0d6a11
7a02772107490d4811021d081f0f041f131e000027081e17020b1e270804
311b690f31231a2a091525281619292ab8015fb3217666182b2b4ef43c4d
fd3c4e10f64dedf4ed003ffd3fed12392ffd390111123931304379401218
1a0508192506260718042b01051a082b01002b012b2b2b8181015d5d0132
373635342726232111013237363534272623211103212017161514070607
16171615140706290102c47e466e754282fe9d01adb74e318f4c7dfe75c3
027701026d404f294d7138635985fedefd93035023378f90321cfe39fd5a
6a435fa03a1ffdfb05139a5b778b592f272b3660a98e73ac>RKEPLI+Helvetica AddT42Char 
1 7448 39 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/B 37 def
/D 39 def
end
RKEPLI+Helvetica /Encoding get
dup 66 /B put
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N 5{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 8{/.notdef}rp /n /o /p 3{/.notdef}rp /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf247.221 454.845 mo(NBD)[-6.50998 -6.0141 0 ]ysh244.788 491.552 mo
244.788 477.733 li
.883665 .769161 0 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 9536 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>RKEPLI+Helvetica AddT42Char 
1 14856 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>RKEPLI+Helvetica AddT42Char 
2 372 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/P 51 def
/i 76 def
/s 86 def
end
RKEPLI+Helvetica /Encoding get
dup 80 /P put
dup 105 /i put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf259.998 461.47 mo(Poisson)[-6.01413 -5.01331 -2.00159 -4.50836 -4.50836 -5.01334 0 ]ysh[3 3 ] 0 dsh
257.396 491.552 mo
257.396 477.733 li
@
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
@
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
ef
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
@
.75 lw
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
156.531 397.322 mo
156.531 287.384 li
@
153.126 385.08 mo
156.531 385.08 li
@
154.829 380.183 mo
156.531 380.183 li
@
154.829 375.286 mo
156.531 375.286 li
@
154.829 370.389 mo
156.531 370.389 li
@
154.829 365.492 mo
156.531 365.492 li
@
153.126 360.595 mo
156.531 360.595 li
@
154.829 355.698 mo
156.531 355.698 li
@
154.829 350.801 mo
156.531 350.801 li
@
154.829 345.904 mo
156.531 345.904 li
@
154.829 341.007 mo
156.531 341.007 li
@
153.126 336.11 mo
156.531 336.11 li
@
154.829 331.213 mo
156.531 331.213 li
@
154.829 326.316 mo
156.531 326.316 li
@
154.829 321.419 mo
156.531 321.419 li
@
154.829 316.522 mo
156.531 316.522 li
@
153.126 311.625 mo
156.531 311.625 li
@
153.126 385.08 mo
156.531 385.08 li
@
154.829 389.977 mo
156.531 389.977 li
@
154.829 394.874 mo
156.531 394.874 li
@
153.126 311.625 mo
156.531 311.625 li
@
154.829 306.728 mo
156.531 306.728 li
@
154.829 301.831 mo
156.531 301.831 li
@
154.829 296.934 mo
156.531 296.934 li
@
154.829 292.037 mo
156.531 292.037 li
@
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 388.592 mo(0)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 370.136 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 346.002 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 321.394 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
43.029 397.322 mo
43.029 287.384 li
@
46.434 385.08 mo
43.029 385.08 li
@
44.731 380.183 mo
43.029 380.183 li
@
44.731 375.286 mo
43.029 375.286 li
@
44.731 370.389 mo
43.029 370.389 li
@
44.731 365.492 mo
43.029 365.492 li
@
46.434 360.595 mo
43.029 360.595 li
@
44.731 355.698 mo
43.029 355.698 li
@
44.731 350.801 mo
43.029 350.801 li
@
44.731 345.904 mo
43.029 345.904 li
@
44.731 341.007 mo
43.029 341.007 li
@
46.434 336.11 mo
43.029 336.11 li
@
44.731 331.213 mo
43.029 331.213 li
@
44.731 326.316 mo
43.029 326.316 li
@
44.731 321.419 mo
43.029 321.419 li
@
44.731 316.522 mo
43.029 316.522 li
@
46.434 311.625 mo
43.029 311.625 li
@
46.434 385.08 mo
43.029 385.08 li
@
44.731 389.977 mo
43.029 389.977 li
@
44.731 394.874 mo
43.029 394.874 li
@
46.434 311.625 mo
43.029 311.625 li
@
44.731 306.728 mo
43.029 306.728 li
@
44.731 301.831 mo
43.029 301.831 li
@
44.731 296.934 mo
43.029 296.934 li
@
44.731 292.037 mo
43.029 292.037 li
@
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 388.592 mo(0)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 370.136 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 346.002 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 321.394 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 397.322 mo
43.029 397.322 li
@
141.096 394.024 mo
141.096 397.322 li
@
133.301 395.673 mo
133.301 397.322 li
@
125.505 395.673 mo
125.505 397.322 li
@
117.71 395.673 mo
117.71 397.322 li
@
109.914 394.024 mo
109.914 397.322 li
@
102.119 395.673 mo
102.119 397.322 li
@
94.323 395.673 mo
94.323 397.322 li
@
86.528 395.673 mo
86.528 397.322 li
@
78.732 394.024 mo
78.732 397.322 li
@
70.937 395.673 mo
70.937 397.322 li
@
63.141 395.673 mo
63.141 397.322 li
@
55.346 395.673 mo
55.346 397.322 li
@
47.55 394.024 mo
47.55 397.322 li
@
141.096 394.024 mo
141.096 397.322 li
@
148.892 395.673 mo
148.892 397.322 li
@
47.55 394.024 mo
47.55 397.322 li
@
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 406.102 mo(2)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 412.254 mo(-)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 406.102 mo(0)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 406.102 mo(2)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 406.102 mo(4)shgrestore
156.531 287.384 mo
43.029 287.384 li
@
141.096 290.683 mo
141.096 287.384 li
@
133.301 289.034 mo
133.301 287.384 li
@
125.505 289.034 mo
125.505 287.384 li
@
117.71 289.034 mo
117.71 287.384 li
@
109.914 290.683 mo
109.914 287.384 li
@
102.119 289.034 mo
102.119 287.384 li
@
94.323 289.034 mo
94.323 287.384 li
@
86.528 289.034 mo
86.528 287.384 li
@
78.732 290.683 mo
78.732 287.384 li
@
70.937 289.034 mo
70.937 287.384 li
@
63.141 289.034 mo
63.141 287.384 li
@
55.346 289.034 mo
55.346 287.384 li
@
47.55 290.683 mo
47.55 287.384 li
@
141.096 290.683 mo
141.096 287.384 li
@
148.892 289.034 mo
148.892 287.384 li
@
47.55 290.683 mo
47.55 287.384 li
@
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 279.75 mo(2)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 285.428 mo(-)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 285.428 mo(0)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 285.428 mo(2)shgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 285.428 mo(4)shgrestore
102.617 302.075 mo
81.653 302.075 li
@
107.35 302.075 mo
128.314 302.075 li
@
113.61 314.073 mo
99.825 314.073 li
@
118.342 314.073 mo
132.127 314.073 li
@
107.948 329.988 mo
101.907 329.988 li
@
112.68 329.988 mo
118.721 329.988 li
@
81.505 346.148 mo
78.172 346.148 li
@
86.237 346.148 mo
89.57 346.148 li
@
95.214 358.391 mo
94.134 358.391 li
@
99.946 358.391 mo
101.026 358.391 li
@
104.983 304.536 mo
101.702 304.536 101.702 299.615 104.983 299.615 cv
108.264 299.615 108.264 304.536 104.983 304.536 cv
cp
115.976 316.534 mo
112.695 316.534 112.695 311.612 115.976 311.612 cv
119.257 311.612 119.257 316.534 115.976 316.534 cv
cp
110.314 332.449 mo
107.033 332.449 107.033 327.528 110.314 327.528 cv
113.595 327.528 113.595 332.449 110.314 332.449 cv
cp
83.871 348.609 mo
80.59 348.609 80.59 343.688 83.871 343.688 cv
87.152 343.688 87.152 348.609 83.871 348.609 cv
cp
97.58 360.852 mo
94.299 360.852 94.299 355.93 97.58 355.93 cv
100.861 355.93 100.861 360.852 97.58 360.852 cv
cp
92.052 369.911 mo
88.771 369.911 88.771 364.99 92.052 364.99 cv
95.333 364.99 95.333 369.911 92.052 369.911 cv
cp
92.693 376.522 mo
89.412 376.522 89.412 371.601 92.693 371.601 cv
95.974 371.601 95.974 376.522 92.693 376.522 cv
cp
93.455 381.174 mo
90.174 381.174 90.174 376.253 93.455 376.253 cv
96.736 376.253 96.736 381.174 93.455 381.174 cv
cp
94.588 384.357 mo
91.307 384.357 91.307 379.436 94.588 379.436 cv
97.869 379.436 97.869 384.357 94.588 384.357 cv
cp
f
85.672 303.022 mo
84.725 303.022 li
84.725 301.129 li
85.672 301.129 li
@
124.295 303.022 mo
125.242 303.022 li
125.242 301.129 li
124.295 301.129 li
@
104.298 315.02 mo
103.352 315.02 li
103.352 313.127 li
104.298 313.127 li
@
127.654 315.02 mo
128.6 315.02 li
128.6 313.127 li
127.654 313.127 li
@
105.047 330.935 mo
104.101 330.935 li
104.101 329.042 li
105.047 329.042 li
@
115.58 330.935 mo
116.527 330.935 li
116.527 329.042 li
115.58 329.042 li
@
79.957 347.095 mo
79.011 347.095 li
79.011 345.202 li
79.957 345.202 li
@
87.786 347.095 mo
88.732 347.095 li
88.732 345.202 li
87.786 345.202 li
@
95.006 302.075 mo
94.302 314.073 li
94.506 329.988 li
94.636 346.148 li
93.833 358.391 li
93.532 367.45 li
94.05 374.061 li
93.799 378.714 li
93.554 381.897 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
94.323 397.322 mo
94.323 287.384 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 372.029 mo(11.5 GeV)[-6.85025 -6.85025 -3.42514 -6.85025 -3.42511 -9.58545 -6.85025 0 ]yshgrestore
gsave
156.531 397.322 mo
156.531 287.384 li
43.029 287.384 li
43.029 397.322 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 13116 69 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
0000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/b 69 def
end
RKEPLI+Helvetica /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven 4{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 392.851 mo(\(b\))[-4.10269 -6.85025 0 ]yshgrestore
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
@
270.004 397.322 mo
270.004 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
ef
270.004 397.322 mo
270.004 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
@
.75 lw
270.004 397.322 mo
270.004 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
270.004 397.322 mo
270.004 287.384 li
@
266.221 385.08 mo
270.004 385.08 li
@
268.113 380.183 mo
270.004 380.183 li
@
268.113 375.286 mo
270.004 375.286 li
@
268.113 370.389 mo
270.004 370.389 li
@
268.113 365.492 mo
270.004 365.492 li
@
266.221 360.595 mo
270.004 360.595 li
@
268.113 355.698 mo
270.004 355.698 li
@
268.113 350.801 mo
270.004 350.801 li
@
268.113 345.904 mo
270.004 345.904 li
@
268.113 341.007 mo
270.004 341.007 li
@
266.221 336.11 mo
270.004 336.11 li
@
268.113 331.213 mo
270.004 331.213 li
@
268.113 326.316 mo
270.004 326.316 li
@
268.113 321.419 mo
270.004 321.419 li
@
268.113 316.522 mo
270.004 316.522 li
@
266.221 311.625 mo
270.004 311.625 li
@
266.221 385.08 mo
270.004 385.08 li
@
268.113 389.977 mo
270.004 389.977 li
@
268.113 394.874 mo
270.004 394.874 li
@
266.221 311.625 mo
270.004 311.625 li
@
268.113 306.728 mo
270.004 306.728 li
@
268.113 301.831 mo
270.004 301.831 li
@
268.113 296.934 mo
270.004 296.934 li
@
268.113 292.037 mo
270.004 292.037 li
@
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 388.592 mo(0)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 370.136 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 346.002 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 321.394 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 397.322 mo
156.531 287.384 li
@
160.314 385.08 mo
156.531 385.08 li
@
158.423 380.183 mo
156.531 380.183 li
@
158.423 375.286 mo
156.531 375.286 li
@
158.423 370.389 mo
156.531 370.389 li
@
158.423 365.492 mo
156.531 365.492 li
@
160.314 360.595 mo
156.531 360.595 li
@
158.423 355.698 mo
156.531 355.698 li
@
158.423 350.801 mo
156.531 350.801 li
@
158.423 345.904 mo
156.531 345.904 li
@
158.423 341.007 mo
156.531 341.007 li
@
160.314 336.11 mo
156.531 336.11 li
@
158.423 331.213 mo
156.531 331.213 li
@
158.423 326.316 mo
156.531 326.316 li
@
158.423 321.419 mo
156.531 321.419 li
@
158.423 316.522 mo
156.531 316.522 li
@
160.314 311.625 mo
156.531 311.625 li
@
160.314 385.08 mo
156.531 385.08 li
@
158.423 389.977 mo
156.531 389.977 li
@
158.423 394.874 mo
156.531 394.874 li
@
160.314 311.625 mo
156.531 311.625 li
@
158.423 306.728 mo
156.531 306.728 li
@
158.423 301.831 mo
156.531 301.831 li
@
158.423 296.934 mo
156.531 296.934 li
@
158.423 292.037 mo
156.531 292.037 li
@
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 388.592 mo(0)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 370.136 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 346.002 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 321.394 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
270.004 397.322 mo
156.531 397.322 li
@
254.573 394.354 mo
254.573 397.322 li
@
246.779 395.838 mo
246.779 397.322 li
@
238.986 395.838 mo
238.986 397.322 li
@
231.193 395.838 mo
231.193 397.322 li
@
223.399 394.354 mo
223.399 397.322 li
@
215.606 395.838 mo
215.606 397.322 li
@
207.812 395.838 mo
207.812 397.322 li
@
200.019 395.838 mo
200.019 397.322 li
@
192.225 394.354 mo
192.225 397.322 li
@
184.432 395.838 mo
184.432 397.322 li
@
176.639 395.838 mo
176.639 397.322 li
@
168.845 395.838 mo
168.845 397.322 li
@
161.052 394.354 mo
161.052 397.322 li
@
254.573 394.354 mo
254.573 397.322 li
@
262.366 395.838 mo
262.366 397.322 li
@
161.052 394.354 mo
161.052 397.322 li
@
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 406.102 mo(2)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 412.254 mo(-)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 406.102 mo(0)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 406.102 mo(2)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 406.102 mo(4)shgrestore
270.004 287.384 mo
156.531 287.384 li
@
254.573 290.353 mo
254.573 287.384 li
@
246.779 288.869 mo
246.779 287.384 li
@
238.986 288.869 mo
238.986 287.384 li
@
231.193 288.869 mo
231.193 287.384 li
@
223.399 290.353 mo
223.399 287.384 li
@
215.606 288.869 mo
215.606 287.384 li
@
207.812 288.869 mo
207.812 287.384 li
@
200.019 288.869 mo
200.019 287.384 li
@
192.225 290.353 mo
192.225 287.384 li
@
184.432 288.869 mo
184.432 287.384 li
@
176.639 288.869 mo
176.639 287.384 li
@
168.845 288.869 mo
168.845 287.384 li
@
161.052 290.353 mo
161.052 287.384 li
@
254.573 290.353 mo
254.573 287.384 li
@
262.366 288.869 mo
262.366 287.384 li
@
161.052 290.353 mo
161.052 287.384 li
@
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 279.75 mo(2)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 285.428 mo(-)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 285.428 mo(0)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 285.428 mo(2)shgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 285.428 mo(4)shgrestore
220.768 301.096 mo
207.648 301.096 li
@
225.501 301.096 mo
238.621 301.096 li
@
207.84 313.583 mo
199.346 313.583 li
@
212.572 313.583 mo
221.066 313.583 li
@
206.8 329.254 mo
204.022 329.254 li
@
211.533 329.254 mo
214.311 329.254 li
@
206.541 345.659 mo
205.852 345.659 li
@
211.274 345.659 mo
211.963 345.659 li
@
223.135 303.557 mo
219.854 303.557 219.854 298.635 223.135 298.635 cv
226.416 298.635 226.416 303.557 223.135 303.557 cv
cp
210.206 316.044 mo
206.925 316.044 206.925 311.123 210.206 311.123 cv
213.487 311.123 213.487 316.044 210.206 316.044 cv
cp
209.166 331.715 mo
205.885 331.715 205.885 326.793 209.166 326.793 cv
212.447 326.793 212.447 331.715 209.166 331.715 cv
cp
208.908 348.12 mo
205.626 348.12 205.626 343.198 208.908 343.198 cv
212.189 343.198 212.189 348.12 208.908 348.12 cv
cp
208.554 360.362 mo
205.273 360.362 205.273 355.44 208.554 355.44 cv
211.835 355.44 211.835 360.362 208.554 360.362 cv
cp
207.568 369.666 mo
204.287 369.666 204.287 364.745 207.568 364.745 cv
210.849 364.745 210.849 369.666 207.568 369.666 cv
cp
207.159 376.277 mo
203.878 376.277 203.878 371.356 207.159 371.356 cv
210.44 371.356 210.44 376.277 207.159 376.277 cv
cp
207.192 380.929 mo
203.911 380.929 203.911 376.008 207.192 376.008 cv
210.473 376.008 210.473 380.929 207.192 380.929 cv
cp
207.36 384.113 mo
204.079 384.113 204.079 379.191 207.36 379.191 cv
210.642 379.191 210.642 384.113 207.36 384.113 cv
cp
f
217.116 302.043 mo
216.17 302.043 li
216.17 300.15 li
217.116 300.15 li
@
229.153 302.043 mo
230.099 302.043 li
230.099 300.15 li
229.153 300.15 li
@
202.766 314.53 mo
201.819 314.53 li
201.819 312.637 li
202.766 312.637 li
@
217.646 314.53 mo
218.592 314.53 li
218.592 312.637 li
217.646 312.637 li
@
207.194 330.2 mo
206.247 330.2 li
206.247 328.307 li
207.194 328.307 li
@
211.139 330.2 mo
212.086 330.2 li
212.086 328.307 li
211.139 328.307 li
@
208.766 301.096 mo
208.053 313.583 li
208.357 329.254 li
208.087 345.659 li
208.106 357.901 li
207.755 367.206 li
207.472 373.817 li
207.155 378.469 li
206.952 381.652 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
207.812 397.322 mo
207.812 287.384 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 5032 28 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/nine 28 def
end
RKEPLI+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 372.029 mo(39 GeV)[-6.85025 -6.85025 -3.42514 -9.58542 -6.85025 0 ]yshgrestore
gsave
282.612 397.322 mo
282.612 287.384 li
156.531 287.384 li
156.531 397.322 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 14208 73 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/f 73 def
end
RKEPLI+Helvetica /Encoding get
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 392.851 mo(\(f\))[-4.10269 -3.42511 0 ]yshgrestore
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
@
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
ef
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
@
.75 lw
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
156.531 287.384 mo
156.531 177.447 li
@
153.126 275.142 mo
156.531 275.142 li
@
154.829 270.245 mo
156.531 270.245 li
@
154.829 265.348 mo
156.531 265.348 li
@
154.829 260.451 mo
156.531 260.451 li
@
154.829 255.554 mo
156.531 255.554 li
@
153.126 250.657 mo
156.531 250.657 li
@
154.829 245.76 mo
156.531 245.76 li
@
154.829 240.863 mo
156.531 240.863 li
@
154.829 235.966 mo
156.531 235.966 li
@
154.829 231.069 mo
156.531 231.069 li
@
153.126 226.172 mo
156.531 226.172 li
@
154.829 221.275 mo
156.531 221.275 li
@
154.829 216.378 mo
156.531 216.378 li
@
154.829 211.481 mo
156.531 211.481 li
@
154.829 206.584 mo
156.531 206.584 li
@
153.126 201.687 mo
156.531 201.687 li
@
153.126 275.142 mo
156.531 275.142 li
@
154.829 280.039 mo
156.531 280.039 li
@
154.829 284.936 mo
156.531 284.936 li
@
153.126 201.687 mo
156.531 201.687 li
@
154.829 196.79 mo
156.531 196.79 li
@
154.829 191.893 mo
156.531 191.893 li
@
154.829 186.996 mo
156.531 186.996 li
@
154.829 182.099 mo
156.531 182.099 li
@
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 278.803 mo(0)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 260.347 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 235.739 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 211.605 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
43.029 287.384 mo
43.029 177.447 li
@
46.434 275.142 mo
43.029 275.142 li
@
44.731 270.245 mo
43.029 270.245 li
@
44.731 265.348 mo
43.029 265.348 li
@
44.731 260.451 mo
43.029 260.451 li
@
44.731 255.554 mo
43.029 255.554 li
@
46.434 250.657 mo
43.029 250.657 li
@
44.731 245.76 mo
43.029 245.76 li
@
44.731 240.863 mo
43.029 240.863 li
@
44.731 235.966 mo
43.029 235.966 li
@
44.731 231.069 mo
43.029 231.069 li
@
46.434 226.172 mo
43.029 226.172 li
@
44.731 221.275 mo
43.029 221.275 li
@
44.731 216.378 mo
43.029 216.378 li
@
44.731 211.481 mo
43.029 211.481 li
@
44.731 206.584 mo
43.029 206.584 li
@
46.434 201.687 mo
43.029 201.687 li
@
46.434 275.142 mo
43.029 275.142 li
@
44.731 280.039 mo
43.029 280.039 li
@
44.731 284.936 mo
43.029 284.936 li
@
46.434 201.687 mo
43.029 201.687 li
@
44.731 196.79 mo
43.029 196.79 li
@
44.731 191.893 mo
43.029 191.893 li
@
44.731 186.996 mo
43.029 186.996 li
@
44.731 182.099 mo
43.029 182.099 li
@
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 278.803 mo(0)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 260.347 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 235.739 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 211.605 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 287.384 mo
43.029 287.384 li
@
141.096 284.086 mo
141.096 287.384 li
@
133.301 285.735 mo
133.301 287.384 li
@
125.505 285.735 mo
125.505 287.384 li
@
117.71 285.735 mo
117.71 287.384 li
@
109.914 284.086 mo
109.914 287.384 li
@
102.119 285.735 mo
102.119 287.384 li
@
94.323 285.735 mo
94.323 287.384 li
@
86.528 285.735 mo
86.528 287.384 li
@
78.732 284.086 mo
78.732 287.384 li
@
70.937 285.735 mo
70.937 287.384 li
@
63.141 285.735 mo
63.141 287.384 li
@
55.346 285.735 mo
55.346 287.384 li
@
47.55 284.086 mo
47.55 287.384 li
@
141.096 284.086 mo
141.096 287.384 li
@
148.892 285.735 mo
148.892 287.384 li
@
47.55 284.086 mo
47.55 287.384 li
@
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 295.839 mo(2)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 301.991 mo(-)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 295.839 mo(0)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 295.839 mo(2)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 295.839 mo(4)shgrestore
156.531 177.447 mo
43.029 177.447 li
@
141.096 180.745 mo
141.096 177.447 li
@
133.301 179.096 mo
133.301 177.447 li
@
125.505 179.096 mo
125.505 177.447 li
@
117.71 179.096 mo
117.71 177.447 li
@
109.914 180.745 mo
109.914 177.447 li
@
102.119 179.096 mo
102.119 177.447 li
@
94.323 179.096 mo
94.323 177.447 li
@
86.528 179.096 mo
86.528 177.447 li
@
78.732 180.745 mo
78.732 177.447 li
@
70.937 179.096 mo
70.937 177.447 li
@
63.141 179.096 mo
63.141 177.447 li
@
55.346 179.096 mo
55.346 177.447 li
@
47.55 180.745 mo
47.55 177.447 li
@
141.096 180.745 mo
141.096 177.447 li
@
148.892 179.096 mo
148.892 177.447 li
@
47.55 180.745 mo
47.55 177.447 li
@
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 169.96 mo(2)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 175.639 mo(-)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 175.639 mo(0)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 175.639 mo(2)shgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 175.639 mo(4)shgrestore
118.391 192.138 mo
99.822 192.138 li
@
123.123 192.138 mo
141.692 192.138 li
@
112.954 204.135 mo
98.082 204.135 li
@
117.686 204.135 mo
132.558 204.135 li
@
75.916 219.806 mo
69.57 219.806 li
@
80.649 219.806 mo
86.995 219.806 li
@
97.136 236.211 mo
93.769 236.211 li
@
101.869 236.211 mo
105.235 236.211 li
@
93.424 248.208 mo
92.014 248.208 li
@
98.156 248.208 mo
99.566 248.208 li
@
120.757 194.599 mo
117.476 194.599 117.476 189.677 120.757 189.677 cv
124.038 189.677 124.038 194.599 120.757 194.599 cv
cp
115.32 206.596 mo
112.039 206.596 112.039 201.675 115.32 201.675 cv
118.601 201.675 118.601 206.596 115.32 206.596 cv
cp
78.283 222.267 mo
75.002 222.267 75.002 217.345 78.283 217.345 cv
81.564 217.345 81.564 222.267 78.283 222.267 cv
cp
99.502 238.672 mo
96.221 238.672 96.221 233.75 99.502 233.75 cv
102.783 233.75 102.783 238.672 99.502 238.672 cv
cp
95.79 250.669 mo
92.509 250.669 92.509 245.748 95.79 245.748 cv
99.071 245.748 99.071 250.669 95.79 250.669 cv
cp
92.444 259.974 mo
89.163 259.974 89.163 255.052 92.444 255.052 cv
95.725 255.052 95.725 259.974 92.444 259.974 cv
cp
93.631 266.585 mo
90.35 266.585 90.35 261.663 93.631 261.663 cv
96.912 261.663 96.912 266.585 93.631 266.585 cv
cp
94.835 271.237 mo
91.553 271.237 91.553 266.315 94.835 266.315 cv
98.116 266.315 98.116 271.237 94.835 271.237 cv
cp
93.184 274.42 mo
89.903 274.42 89.903 269.498 93.184 269.498 cv
96.465 269.498 96.465 274.42 93.184 274.42 cv
cp
f
106.411 193.084 mo
105.465 193.084 li
105.465 191.191 li
106.411 191.191 li
@
135.103 193.084 mo
136.049 193.084 li
136.049 191.191 li
135.103 191.191 li
@
97.852 205.082 mo
96.906 205.082 li
96.906 203.189 li
97.852 203.189 li
@
132.787 205.082 mo
133.734 205.082 li
133.734 203.189 li
132.787 203.189 li
@
68.814 220.752 mo
67.867 220.752 li
67.867 218.859 li
68.814 218.859 li
@
87.751 220.752 mo
88.698 220.752 li
88.698 218.859 li
87.751 218.859 li
@
94.891 237.157 mo
93.945 237.157 li
93.945 235.264 li
94.891 235.264 li
@
104.113 237.157 mo
105.06 237.157 li
105.06 235.264 li
104.113 235.264 li
@
94.11 192.138 mo
93.491 204.135 li
94.204 219.806 li
93.639 236.211 li
92.679 248.208 li
93.267 257.513 li
93.239 264.124 li
93.035 268.776 li
93.697 271.959 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
94.323 287.384 mo
94.323 177.447 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 262.24 mo(14.5 GeV)[-6.85025 -6.85025 -3.42513 -6.85025 -3.42513 -9.58543 -6.85025 0 ]yshgrestore
gsave
156.531 287.384 mo
156.531 177.446 li
43.029 177.446 li
43.029 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 283.062 mo(\(c\))[-4.10269 -6.16028 0 ]yshgrestore
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
@
270.004 287.384 mo
270.004 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
ef
270.004 287.384 mo
270.004 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
@
.75 lw
270.004 287.384 mo
270.004 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
270.004 287.384 mo
270.004 177.447 li
@
266.221 275.142 mo
270.004 275.142 li
@
268.113 270.245 mo
270.004 270.245 li
@
268.113 265.348 mo
270.004 265.348 li
@
268.113 260.451 mo
270.004 260.451 li
@
268.113 255.554 mo
270.004 255.554 li
@
266.221 250.657 mo
270.004 250.657 li
@
268.113 245.76 mo
270.004 245.76 li
@
268.113 240.863 mo
270.004 240.863 li
@
268.113 235.966 mo
270.004 235.966 li
@
268.113 231.069 mo
270.004 231.069 li
@
266.221 226.172 mo
270.004 226.172 li
@
268.113 221.275 mo
270.004 221.275 li
@
268.113 216.378 mo
270.004 216.378 li
@
268.113 211.481 mo
270.004 211.481 li
@
268.113 206.584 mo
270.004 206.584 li
@
266.221 201.687 mo
270.004 201.687 li
@
266.221 275.142 mo
270.004 275.142 li
@
268.113 280.039 mo
270.004 280.039 li
@
268.113 284.936 mo
270.004 284.936 li
@
266.221 201.687 mo
270.004 201.687 li
@
268.113 196.79 mo
270.004 196.79 li
@
268.113 191.893 mo
270.004 191.893 li
@
268.113 186.996 mo
270.004 186.996 li
@
268.113 182.099 mo
270.004 182.099 li
@
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 278.803 mo(0)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 260.347 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 235.739 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 211.605 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 287.384 mo
156.531 177.447 li
@
160.314 275.142 mo
156.531 275.142 li
@
158.423 270.245 mo
156.531 270.245 li
@
158.423 265.348 mo
156.531 265.348 li
@
158.423 260.451 mo
156.531 260.451 li
@
158.423 255.554 mo
156.531 255.554 li
@
160.314 250.657 mo
156.531 250.657 li
@
158.423 245.76 mo
156.531 245.76 li
@
158.423 240.863 mo
156.531 240.863 li
@
158.423 235.966 mo
156.531 235.966 li
@
158.423 231.069 mo
156.531 231.069 li
@
160.314 226.172 mo
156.531 226.172 li
@
158.423 221.275 mo
156.531 221.275 li
@
158.423 216.378 mo
156.531 216.378 li
@
158.423 211.481 mo
156.531 211.481 li
@
158.423 206.584 mo
156.531 206.584 li
@
160.314 201.687 mo
156.531 201.687 li
@
160.314 275.142 mo
156.531 275.142 li
@
158.423 280.039 mo
156.531 280.039 li
@
158.423 284.936 mo
156.531 284.936 li
@
160.314 201.687 mo
156.531 201.687 li
@
158.423 196.79 mo
156.531 196.79 li
@
158.423 191.893 mo
156.531 191.893 li
@
158.423 186.996 mo
156.531 186.996 li
@
158.423 182.099 mo
156.531 182.099 li
@
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 278.803 mo(0)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 260.347 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 235.739 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 211.605 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
270.004 287.384 mo
156.531 287.384 li
@
254.573 284.416 mo
254.573 287.384 li
@
246.779 285.9 mo
246.779 287.384 li
@
238.986 285.9 mo
238.986 287.384 li
@
231.193 285.9 mo
231.193 287.384 li
@
223.399 284.416 mo
223.399 287.384 li
@
215.606 285.9 mo
215.606 287.384 li
@
207.812 285.9 mo
207.812 287.384 li
@
200.019 285.9 mo
200.019 287.384 li
@
192.225 284.416 mo
192.225 287.384 li
@
184.432 285.9 mo
184.432 287.384 li
@
176.639 285.9 mo
176.639 287.384 li
@
168.845 285.9 mo
168.845 287.384 li
@
161.052 284.416 mo
161.052 287.384 li
@
254.573 284.416 mo
254.573 287.384 li
@
262.366 285.9 mo
262.366 287.384 li
@
161.052 284.416 mo
161.052 287.384 li
@
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 295.839 mo(2)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 301.991 mo(-)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 295.839 mo(0)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 295.839 mo(2)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 295.839 mo(4)shgrestore
270.004 177.447 mo
156.531 177.447 li
@
254.573 180.415 mo
254.573 177.447 li
@
246.779 178.931 mo
246.779 177.447 li
@
238.986 178.931 mo
238.986 177.447 li
@
231.193 178.931 mo
231.193 177.447 li
@
223.399 180.415 mo
223.399 177.447 li
@
215.606 178.931 mo
215.606 177.447 li
@
207.812 178.931 mo
207.812 177.447 li
@
200.019 178.931 mo
200.019 177.447 li
@
192.225 180.415 mo
192.225 177.447 li
@
184.432 178.931 mo
184.432 177.447 li
@
176.639 178.931 mo
176.639 177.447 li
@
168.845 178.931 mo
168.845 177.447 li
@
161.052 180.415 mo
161.052 177.447 li
@
254.573 180.415 mo
254.573 177.447 li
@
262.366 178.931 mo
262.366 177.447 li
@
161.052 180.415 mo
161.052 177.447 li
@
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 169.96 mo(2)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 175.639 mo(-)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 175.639 mo(0)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 175.639 mo(2)shgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 175.639 mo(4)shgrestore
210.917 188.955 mo
193.294 188.955 li
@
215.649 188.955 mo
233.272 188.955 li
@
221.711 199.728 mo
210.277 199.728 li
@
226.443 199.728 mo
237.877 199.728 li
@
205.966 216.378 mo
201.524 216.378 li
@
210.698 216.378 mo
215.14 216.378 li
@
214.306 233.762 mo
212.69 233.762 li
@
219.039 233.762 mo
220.655 233.762 li
@
208.911 246.739 mo
208.808 246.739 li
@
213.643 246.739 mo
213.747 246.739 li
@
213.283 191.415 mo
210.002 191.415 210.002 186.494 213.283 186.494 cv
216.564 186.494 216.564 191.415 213.283 191.415 cv
cp
224.077 202.189 mo
220.796 202.189 220.796 197.267 224.077 197.267 cv
227.358 197.267 227.358 202.189 224.077 202.189 cv
cp
208.332 218.839 mo
205.051 218.839 205.051 213.917 208.332 213.917 cv
211.613 213.917 211.613 218.839 208.332 218.839 cv
cp
216.672 236.223 mo
213.391 236.223 213.391 231.301 216.672 231.301 cv
219.953 231.301 219.953 236.223 216.672 236.223 cv
cp
211.277 249.2 mo
207.996 249.2 207.996 244.279 211.277 244.279 cv
214.558 244.279 214.558 249.2 211.277 249.2 cv
cp
207.853 258.994 mo
204.572 258.994 204.572 254.073 207.853 254.073 cv
211.134 254.073 211.134 258.994 207.853 258.994 cv
cp
208.141 266.585 mo
204.859 266.585 204.859 261.663 208.141 261.663 cv
211.422 261.663 211.422 266.585 208.141 266.585 cv
cp
207.498 271.237 mo
204.216 271.237 204.216 266.315 207.498 266.315 cv
210.779 266.315 210.779 271.237 207.498 271.237 cv
cp
206.959 274.175 mo
203.678 274.175 203.678 269.253 206.959 269.253 cv
210.24 269.253 210.24 274.175 206.959 274.175 cv
cp
f
200.681 189.901 mo
199.735 189.901 li
199.735 188.008 li
200.681 188.008 li
@
225.885 189.901 mo
226.832 189.901 li
226.832 188.008 li
225.885 188.008 li
@
217.695 200.675 mo
216.748 200.675 li
216.748 198.782 li
217.695 198.782 li
@
230.459 200.675 mo
231.406 200.675 li
231.406 198.782 li
230.459 198.782 li
@
204.716 217.324 mo
203.77 217.324 li
203.77 215.431 li
204.716 215.431 li
@
211.948 217.324 mo
212.894 217.324 li
212.894 215.431 li
211.948 215.431 li
@
213.224 234.709 mo
212.278 234.709 li
212.278 232.816 li
213.224 232.816 li
@
220.121 234.709 mo
221.067 234.709 li
221.067 232.816 li
220.121 232.816 li
@
208.491 188.955 mo
207.274 199.728 li
207.189 216.378 li
207.611 233.762 li
207.283 246.739 li
207.698 256.533 li
207.164 264.124 li
207.064 268.776 li
206.618 271.714 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
207.812 287.384 mo
207.812 177.447 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 262.24 mo(62.4 GeV)[-6.85025 -6.85025 -3.42513 -6.85025 -3.42513 -9.58543 -6.85025 0 ]yshgrestore
gsave
282.612 287.384 mo
282.612 177.446 li
156.531 177.446 li
156.531 287.384 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 14360 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/g 74 def
end
RKEPLI+Helvetica /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f /g /.notdef /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 282.589 mo(\(g\))[-4.10269 -6.85025 0 ]yshgrestore
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
@
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
ef
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
@
.75 lw
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
156.531 177.447 mo
156.531 67.509 li
@
153.126 165.204 mo
156.531 165.204 li
@
154.829 160.307 mo
156.531 160.307 li
@
154.829 155.41 mo
156.531 155.41 li
@
154.829 150.513 mo
156.531 150.513 li
@
154.829 145.616 mo
156.531 145.616 li
@
153.126 140.719 mo
156.531 140.719 li
@
154.829 135.822 mo
156.531 135.822 li
@
154.829 130.925 mo
156.531 130.925 li
@
154.829 126.028 mo
156.531 126.028 li
@
154.829 121.131 mo
156.531 121.131 li
@
153.126 116.234 mo
156.531 116.234 li
@
154.829 111.337 mo
156.531 111.337 li
@
154.829 106.44 mo
156.531 106.44 li
@
154.829 101.543 mo
156.531 101.543 li
@
154.829 96.646 mo
156.531 96.646 li
@
153.126 91.749 mo
156.531 91.749 li
@
153.126 165.204 mo
156.531 165.204 li
@
154.829 170.101 mo
156.531 170.101 li
@
154.829 174.998 mo
156.531 174.998 li
@
153.126 91.749 mo
156.531 91.749 li
@
154.829 86.852 mo
156.531 86.852 li
@
154.829 81.955 mo
156.531 81.955 li
@
154.829 77.058 mo
156.531 77.058 li
@
154.829 72.161 mo
156.531 72.161 li
@
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 168.541 mo(0)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 150.558 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 125.95 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf167.245 101.342 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
43.029 177.447 mo
43.029 67.509 li
@
46.434 165.204 mo
43.029 165.204 li
@
44.731 160.307 mo
43.029 160.307 li
@
44.731 155.41 mo
43.029 155.41 li
@
44.731 150.513 mo
43.029 150.513 li
@
44.731 145.616 mo
43.029 145.616 li
@
46.434 140.719 mo
43.029 140.719 li
@
44.731 135.822 mo
43.029 135.822 li
@
44.731 130.925 mo
43.029 130.925 li
@
44.731 126.028 mo
43.029 126.028 li
@
44.731 121.131 mo
43.029 121.131 li
@
46.434 116.234 mo
43.029 116.234 li
@
44.731 111.337 mo
43.029 111.337 li
@
44.731 106.44 mo
43.029 106.44 li
@
44.731 101.543 mo
43.029 101.543 li
@
44.731 96.646 mo
43.029 96.646 li
@
46.434 91.749 mo
43.029 91.749 li
@
46.434 165.204 mo
43.029 165.204 li
@
44.731 170.101 mo
43.029 170.101 li
@
44.731 174.998 mo
43.029 174.998 li
@
46.434 91.749 mo
43.029 91.749 li
@
44.731 86.852 mo
43.029 86.852 li
@
44.731 81.955 mo
43.029 81.955 li
@
44.731 77.058 mo
43.029 77.058 li
@
44.731 72.161 mo
43.029 72.161 li
@
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 168.541 mo(0)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 150.558 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 125.95 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf41.839 101.342 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 177.447 mo
43.029 177.447 li
@
141.096 174.149 mo
141.096 177.447 li
@
133.301 175.798 mo
133.301 177.447 li
@
125.505 175.798 mo
125.505 177.447 li
@
117.71 175.798 mo
117.71 177.447 li
@
109.914 174.149 mo
109.914 177.447 li
@
102.119 175.798 mo
102.119 177.447 li
@
94.323 175.798 mo
94.323 177.447 li
@
86.528 175.798 mo
86.528 177.447 li
@
78.732 174.149 mo
78.732 177.447 li
@
70.937 175.798 mo
70.937 177.447 li
@
63.141 175.798 mo
63.141 177.447 li
@
55.346 175.798 mo
55.346 177.447 li
@
47.55 174.149 mo
47.55 177.447 li
@
141.096 174.149 mo
141.096 177.447 li
@
148.892 175.798 mo
148.892 177.447 li
@
47.55 174.149 mo
47.55 177.447 li
@
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 186.05 mo(2)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 192.202 mo(-)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 186.05 mo(0)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 186.05 mo(2)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 186.05 mo(4)shgrestore
156.531 67.509 mo
43.029 67.509 li
@
141.096 70.807 mo
141.096 67.509 li
@
133.301 69.158 mo
133.301 67.509 li
@
125.505 69.158 mo
125.505 67.509 li
@
117.71 69.158 mo
117.71 67.509 li
@
109.914 70.807 mo
109.914 67.509 li
@
102.119 69.158 mo
102.119 67.509 li
@
94.323 69.158 mo
94.323 67.509 li
@
86.528 69.158 mo
86.528 67.509 li
@
78.732 70.807 mo
78.732 67.509 li
@
70.937 69.158 mo
70.937 67.509 li
@
63.141 69.158 mo
63.141 67.509 li
@
55.346 69.158 mo
55.346 67.509 li
@
47.55 70.807 mo
47.55 67.509 li
@
141.096 70.807 mo
141.096 67.509 li
@
148.892 69.158 mo
148.892 67.509 li
@
47.55 70.807 mo
47.55 67.509 li
@
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 59.698 mo(2)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf145.477 65.377 mo(-)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf113.77 65.377 mo(0)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf83.01 65.377 mo(2)shgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf52.25 65.377 mo(4)shgrestore
122.063 81.71 mo
106.835 81.71 li
@
126.796 81.71 mo
142.023 81.71 li
@
85.815 94.198 mo
73.872 94.198 li
@
90.547 94.198 mo
102.489 94.198 li
@
101.255 109.868 mo
96.451 109.868 li
@
105.988 109.868 mo
110.792 109.868 li
@
89.734 126.028 mo
87.489 126.028 li
@
94.466 126.028 mo
96.711 126.028 li
@
96.66 138.271 mo
96.099 138.271 li
@
101.392 138.271 mo
101.952 138.271 li
@
124.429 84.171 mo
121.148 84.171 121.148 79.25 124.429 79.25 cv
127.71 79.25 127.71 84.171 124.429 84.171 cv
cp
88.181 96.659 mo
84.9 96.659 84.9 91.737 88.181 91.737 cv
91.462 91.737 91.462 96.659 88.181 96.659 cv
cp
103.621 112.329 mo
100.34 112.329 100.34 107.407 103.621 107.407 cv
106.903 107.407 106.903 112.329 103.621 112.329 cv
cp
92.1 128.489 mo
88.819 128.489 88.819 123.567 92.1 123.567 cv
95.381 123.567 95.381 128.489 92.1 128.489 cv
cp
99.026 140.732 mo
95.745 140.732 95.745 135.81 99.026 135.81 cv
102.307 135.81 102.307 140.732 99.026 140.732 cv
cp
94.984 149.791 mo
91.703 149.791 91.703 144.869 94.984 144.869 cv
98.265 144.869 98.265 149.791 94.984 149.791 cv
cp
94.486 156.647 mo
91.205 156.647 91.205 151.725 94.486 151.725 cv
97.767 151.725 97.767 156.647 94.486 156.647 cv
cp
92.998 161.299 mo
89.717 161.299 89.717 156.377 92.998 156.377 cv
96.279 156.377 96.279 161.299 92.998 161.299 cv
cp
94.117 164.237 mo
90.836 164.237 90.836 159.316 94.117 159.316 cv
97.398 159.316 97.398 164.237 94.117 164.237 cv
cp
f
104.852 82.657 mo
103.905 82.657 li
103.905 80.764 li
104.852 80.764 li
@
144.007 82.657 mo
144.954 82.657 li
144.954 80.764 li
144.007 80.764 li
@
78.424 95.144 mo
77.477 95.144 li
77.477 93.251 li
78.424 93.251 li
@
97.938 95.144 mo
98.885 95.144 li
98.885 93.251 li
97.938 93.251 li
@
95.962 110.815 mo
95.015 110.815 li
95.015 108.922 li
95.962 108.922 li
@
111.281 110.815 mo
112.227 110.815 li
112.227 108.922 li
111.281 108.922 li
@
89.659 126.975 mo
88.713 126.975 li
88.713 125.082 li
89.659 125.082 li
@
94.541 126.975 mo
95.487 126.975 li
95.487 125.082 li
94.541 125.082 li
@
97.044 139.217 mo
96.097 139.217 li
96.097 137.324 li
97.044 137.324 li
@
101.008 139.217 mo
101.954 139.217 li
101.954 137.324 li
101.008 137.324 li
@
95.559 81.71 mo
94.427 94.198 li
94.608 109.868 li
94.768 126.028 li
94.546 138.271 li
94.557 147.33 li
93.843 154.186 li
93.757 158.838 li
93.493 161.776 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
94.323 177.447 mo
94.323 67.509 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 151.978 mo(19.6 GeV)[-6.85025 -6.85025 -3.42513 -6.85025 -3.42513 -9.58543 -6.85025 0 ]yshgrestore
gsave
156.531 177.447 mo
156.531 67.509 li
43.029 67.509 li
43.029 177.447 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 13588 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/d 71 def
end
RKEPLI+Helvetica /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf58.402 172.8 mo(\(d\))[-4.10268 -6.85025 0 ]yshgrestore
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
0 0 0 0 cmyk
ef
.002 lw
[] 0 dsh
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
@
270.004 177.447 mo
270.004 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
ef
270.004 177.447 mo
270.004 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
@
.75 lw
270.004 177.447 mo
270.004 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
270.004 177.447 mo
270.004 67.509 li
@
266.221 165.204 mo
270.004 165.204 li
@
268.113 160.307 mo
270.004 160.307 li
@
268.113 155.41 mo
270.004 155.41 li
@
268.113 150.513 mo
270.004 150.513 li
@
268.113 145.616 mo
270.004 145.616 li
@
266.221 140.719 mo
270.004 140.719 li
@
268.113 135.822 mo
270.004 135.822 li
@
268.113 130.925 mo
270.004 130.925 li
@
268.113 126.028 mo
270.004 126.028 li
@
268.113 121.131 mo
270.004 121.131 li
@
266.221 116.234 mo
270.004 116.234 li
@
268.113 111.337 mo
270.004 111.337 li
@
268.113 106.44 mo
270.004 106.44 li
@
268.113 101.543 mo
270.004 101.543 li
@
268.113 96.646 mo
270.004 96.646 li
@
266.221 91.749 mo
270.004 91.749 li
@
266.221 165.204 mo
270.004 165.204 li
@
268.113 170.101 mo
270.004 170.101 li
@
268.113 174.998 mo
270.004 174.998 li
@
266.221 91.749 mo
270.004 91.749 li
@
268.113 86.852 mo
270.004 86.852 li
@
268.113 81.955 mo
270.004 81.955 li
@
268.113 77.058 mo
270.004 77.058 li
@
268.113 72.161 mo
270.004 72.161 li
@
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 168.541 mo(0)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 150.558 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 125.95 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf280.82 101.342 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
156.531 177.447 mo
156.531 67.509 li
@
160.314 165.204 mo
156.531 165.204 li
@
158.423 160.307 mo
156.531 160.307 li
@
158.423 155.41 mo
156.531 155.41 li
@
158.423 150.513 mo
156.531 150.513 li
@
158.423 145.616 mo
156.531 145.616 li
@
160.314 140.719 mo
156.531 140.719 li
@
158.423 135.822 mo
156.531 135.822 li
@
158.423 130.925 mo
156.531 130.925 li
@
158.423 126.028 mo
156.531 126.028 li
@
158.423 121.131 mo
156.531 121.131 li
@
160.314 116.234 mo
156.531 116.234 li
@
158.423 111.337 mo
156.531 111.337 li
@
158.423 106.44 mo
156.531 106.44 li
@
158.423 101.543 mo
156.531 101.543 li
@
158.423 96.646 mo
156.531 96.646 li
@
160.314 91.749 mo
156.531 91.749 li
@
160.314 165.204 mo
156.531 165.204 li
@
158.423 170.101 mo
156.531 170.101 li
@
158.423 174.998 mo
156.531 174.998 li
@
160.314 91.749 mo
156.531 91.749 li
@
158.423 86.852 mo
156.531 86.852 li
@
158.423 81.955 mo
156.531 81.955 li
@
158.423 77.058 mo
156.531 77.058 li
@
158.423 72.161 mo
156.531 72.161 li
@
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 168.541 mo(0)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 150.558 mo(100)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 125.95 mo(200)[-6.32333 -6.32333 0 ]yshgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf156.834 101.342 mo(300)[-6.32333 -6.32333 0 ]yshgrestore
270.004 177.447 mo
156.531 177.447 li
@
254.573 174.478 mo
254.573 177.447 li
@
246.779 175.963 mo
246.779 177.447 li
@
238.986 175.963 mo
238.986 177.447 li
@
231.193 175.963 mo
231.193 177.447 li
@
223.399 174.478 mo
223.399 177.447 li
@
215.606 175.963 mo
215.606 177.447 li
@
207.812 175.963 mo
207.812 177.447 li
@
200.019 175.963 mo
200.019 177.447 li
@
192.225 174.478 mo
192.225 177.447 li
@
184.432 175.963 mo
184.432 177.447 li
@
176.639 175.963 mo
176.639 177.447 li
@
168.845 175.963 mo
168.845 177.447 li
@
161.052 174.478 mo
161.052 177.447 li
@
254.573 174.478 mo
254.573 177.447 li
@
262.366 175.963 mo
262.366 177.447 li
@
161.052 174.478 mo
161.052 177.447 li
@
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 186.05 mo(2)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 192.202 mo(-)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 186.05 mo(0)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 186.05 mo(2)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 186.05 mo(4)shgrestore
270.004 67.509 mo
156.531 67.509 li
@
254.573 70.477 mo
254.573 67.509 li
@
246.779 68.993 mo
246.779 67.509 li
@
238.986 68.993 mo
238.986 67.509 li
@
231.193 68.993 mo
231.193 67.509 li
@
223.399 70.477 mo
223.399 67.509 li
@
215.606 68.993 mo
215.606 67.509 li
@
207.812 68.993 mo
207.812 67.509 li
@
200.019 68.993 mo
200.019 67.509 li
@
192.225 70.477 mo
192.225 67.509 li
@
184.432 68.993 mo
184.432 67.509 li
@
176.639 68.993 mo
176.639 67.509 li
@
168.845 68.993 mo
168.845 67.509 li
@
161.052 70.477 mo
161.052 67.509 li
@
254.573 70.477 mo
254.573 67.509 li
@
262.366 68.993 mo
262.366 67.509 li
@
161.052 70.477 mo
161.052 67.509 li
@
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 59.698 mo(2)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLJ+Symbol*1 [0 -11.3729 -11.3729 0 0 0 ]msf259.052 65.377 mo(-)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf227.345 65.377 mo(0)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf196.586 65.377 mo(2)shgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -11.3729 -11.3729 0 0 0 ]msf165.352 65.377 mo(4)shgrestore
202.577 79.017 mo
196.577 79.017 li
@
207.309 79.017 mo
213.309 79.017 li
@
200.528 89.79 mo
196.598 89.79 li
@
205.26 89.79 mo
209.19 89.79 li
@
201.04 106.44 mo
200.181 106.44 li
@
205.772 106.44 mo
206.631 106.44 li
@
204.943 81.478 mo
201.662 81.478 201.662 76.556 204.943 76.556 cv
208.224 76.556 208.224 81.478 204.943 81.478 cv
cp
202.894 92.251 mo
199.613 92.251 199.613 87.33 202.894 87.33 cv
206.175 87.33 206.175 92.251 202.894 92.251 cv
cp
203.406 108.901 mo
200.125 108.901 200.125 103.979 203.406 103.979 cv
206.687 103.979 206.687 108.901 203.406 108.901 cv
cp
204.952 126.285 mo
201.671 126.285 201.671 121.364 204.952 121.364 cv
208.233 121.364 208.233 126.285 204.952 126.285 cv
cp
205.371 139.262 mo
202.09 139.262 202.09 134.341 205.371 134.341 cv
208.652 134.341 208.652 139.262 205.371 139.262 cv
cp
206.142 149.056 mo
202.861 149.056 202.861 144.135 206.142 144.135 cv
209.423 144.135 209.423 149.056 206.142 149.056 cv
cp
207.014 156.647 mo
203.733 156.647 203.733 151.725 207.014 151.725 cv
210.295 151.725 210.295 156.647 207.014 156.647 cv
cp
208.051 161.299 mo
204.77 161.299 204.77 156.377 208.051 156.377 cv
211.333 156.377 211.333 161.299 208.051 161.299 cv
cp
207.408 164.237 mo
204.127 164.237 204.127 159.316 207.408 159.316 cv
210.689 159.316 210.689 164.237 207.408 164.237 cv
cp
f
199.817 79.963 mo
198.87 79.963 li
198.87 78.071 li
199.817 78.071 li
@
210.069 79.963 mo
211.016 79.963 li
211.016 78.071 li
210.069 78.071 li
@
200.065 90.737 mo
199.118 90.737 li
199.118 88.844 li
200.065 88.844 li
@
205.723 90.737 mo
206.67 90.737 li
206.67 88.844 li
205.723 88.844 li
@
201.279 107.387 mo
200.333 107.387 li
200.333 105.494 li
201.279 105.494 li
@
205.533 107.387 mo
206.479 107.387 li
206.479 105.494 li
205.533 105.494 li
@
206.204 79.017 mo
204.186 89.79 li
203.521 106.44 li
203.67 123.825 li
204.392 136.802 li
205.741 146.596 li
206.497 154.186 li
206.842 158.838 li
206.793 161.776 li
.883665 .769161 0 0 cmyk
@
[3 3 ] 0 dsh
207.812 177.447 mo
207.812 67.509 li
.75021 .679683 .670222 .90164 cmyk
@
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
RKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 151.978 mo(200 GeV)[-6.85025 -6.85025 -6.85025 -3.42513 -9.58543 -6.85025 0 ]yshgrestore
gsave
282.612 177.447 mo
282.612 67.509 li
156.531 67.509 li
156.531 177.447 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
1 14696 75 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc8000000>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/h 75 def
end
RKEPLI+Helvetica /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf171.504 172.8 mo(\(h\))[-4.10268 -6.85025 0 ]yshgrestore
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRKEPLJ+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/kappa <1C60D8A8C9B79676F4196ABC8A86404E95CAF6621FCFDB05048E4C24519DD02ABE513F45F41C1D017C52BF2C657545567C43200157FF13DE0EA9F6689068D04877949BE1DD0A8AA804F38EBE835F14E06D3FC115F5AA49034D3D4D35376C6E1DA723F511B5B6C5E5DFC11D5CEDAF2C1FCD9BD77371BF71F9214B5644F32BD156B6BD842E0C5283BA2416833B4F46EB10F9831A85B7> |-/sigma <1C60D8A8C9B7C05447F5912FBA2452AF183FCDA4EABE4B48A1B8CA2DB2FE27B5CA05184337E6A14471F4E4784E68DE4BCCB0F4CBDF4CF56943F8EAC4BE9236E53E561465B455434CB9B524ED6F54658755443A22EF90736E45BBEF02E32C0C302E57A2C333DCAF88A033C44D239492CE07F8959B883BCC98EFFD299A778B9FD0B07ABB4FAB7AAA28829714962ABE342EDDC72A559B> |-/angleleft <1C60D8A8C9B82356B10FCD292E28A34918F22876B1F372239AE8A900324628F51C2B237CCED37ECEB7F2E6634A> |-/angleright <1C60D8A8C9B82356B5C52639DD48AD56B3474DA019AA80EFABA6A931EA237F0563E0CF24B3608E5EA18EF34009> |-systemdict /gcheck known {setglobal} if end {end} ifendRKEPLJ+Symbol /Encoding getdup 107 /kappa putdup 115 /sigma putdup 225 /angleleft putdup 241 /angleright putpop%ADOEndSubsetFont
/RKEPLJ+Symbol*1 [45{/.notdef}rp /minus 61{/.notdef}rp /kappa 7{/.notdef}rp /sigma 109{/.notdef}rp /angleleft 15{/.notdef}rp /angleright 14{/.notdef}rp]RKEPLJ+Symbol nfRKEPLJ+Symbol*1 [0 -11.8307 -11.8307 0 0 0 ]msf296.91 275.964 mo(\361)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLI+Helvetica gcheck setglobal} if
2 232 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>RKEPLI+Helvetica AddT42Char 
RKEPLI+Helvetica /CharStrings get begin
/r 85 def
end
RKEPLI+Helvetica /Encoding get
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLI+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /slash /zero /one /two /three /four /five /six /seven /.notdef /nine 2{/.notdef}rp /less 5{/.notdef}rp /B /.notdef /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t 4{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLI+Helvetica nfRKEPLI+Helvetica*1 [0 -7.57167 -7.57167 0 0 0 ]msf301.642 293 mo(part)[-4.20987 -4.20984 -2.5213 0 ]yshRKEPLI+Helvetica*1 [0 -11.8307 -11.8307 0 0 0 ]msf296.91 304.358 mo( N)[-3.28894 0 ]yshRKEPLJ+Symbol*1 [0 -11.8307 -11.8307 0 0 0 ]msf296.91 308.143 mo(\341)shRKEPLI+Helvetica*1 [-9.93782 0 0 9.93782 0 0 ]msf147.843 526.775 mo(2)shRKEPLJ+Symbol*1 [-14.6701 0 0 14.6701 0 0 ]msf156.834 522.043 mo(s)sh165.352 522.043 mo(k)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/RKEPLI+Helvetica*1 uf/RKEPLI+Helvetica uf/Helvetica uf/RKEPLJ+Symbol*1 uf/RKEPLJ+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
