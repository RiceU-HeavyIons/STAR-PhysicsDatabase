%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: distribution.pdf
%%Creator: (Adobe Acrobat 11.0.20)
%%For: Xiaofeng
%%CreationDate: 8/29/17, 11:32 PM
%%BoundingBox: -250 250 317 567
%%HiResBoundingBox: -250 250 317 567
%%CropBox: -250 250 317 567
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 686 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c006 80.159825, 2016/09/16-03:31:08        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-07-31T22:00:24"
   xmp:CreatorTool="ROOT Version 6.09/02"
   pdf:Keywords="ROOT"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">/Users/love/Desktop/distribution.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -567 translate
pgsv
[0 1 -1 0 317 0 ]ct
gsave
np
gsave
0 0 mo
0 567 li
317 567 li
317 0 li
cp
clp
317 567 mo
317 .0709839 li
-.0639954 .0709839 li
-.0639954 567 li
cp
false sop
0 0 0 0 cmyk
ef
.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
317 567 mo
317 .0709839 li
-.0639954 .0709839 li
-.0639954 567 li
cp
@
286.245 518.811 mo
286.245 56.764 li
31.6428 56.764 li
31.6428 518.811 li
cp
ef
286.245 518.811 mo
286.245 56.764 li
31.6428 56.764 li
31.6428 518.811 li
cp
@
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
ef
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
@
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
ef
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
@
.75 lw
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
@
.75 lw
158.468 502.641 mo
158.468 397.584 li
43.766 397.584 li
43.766 502.641 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.468 502.641 mo
158.468 397.584 li
@
155.488 487.867 mo
158.468 487.867 li
@
156.978 479.66 mo
158.468 479.66 li
@
156.978 471.452 mo
158.468 471.452 li
@
156.978 463.244 mo
158.468 463.244 li
@
155.488 455.037 mo
158.468 455.037 li
@
156.978 446.829 mo
158.468 446.829 li
@
156.978 438.622 mo
158.468 438.622 li
@
156.978 430.414 mo
158.468 430.414 li
@
155.488 422.207 mo
158.468 422.207 li
@
155.488 487.867 mo
158.468 487.867 li
@
156.978 496.075 mo
158.468 496.075 li
@
155.488 422.207 mo
158.468 422.207 li
@
156.978 413.999 mo
158.468 413.999 li
@
156.978 405.791 mo
158.468 405.791 li
@
156.978 397.584 mo
158.468 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f321047244e000000cc000000606376
74208de93e9e0000012c0000036c6670676de80497d30000049800000a1d
676c7966dd2c6c9800005cf40003f58068656164d35a3c7a00000eb80000
003668686561af0f210900000ef000000024686d747839ad1f4300000f14
000022546c6f63610f66441800003168000022586d61787010ff0b2d0000
53c0000000206e616d6558b85cfc000053e00000054470726570bc836e31
00005924000003cf67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a40292a292827262524232221201f1e1d1c1b1a1918171615
14131211100d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b0004361
7d6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2c20b0032552582359212d2c69b04061b0008b
0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0112b
b0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0
172344b0177ae5182d2cb002254661658a46b040608b482d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019236a4445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005258b21a401a4523614459b0005058b219401945236144592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442d2c4569b014b0324b505821b0205961442db800
2b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db8002f2c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800302c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800312c2020456944b001
602020457d691844b001602db800322cb800312a2db800332c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800342c4b535845441b2121592db800352c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800362c202045
6944b001602db800372cb800362a212db800382c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
392c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8003b2c2020456944b001602020457d69
1844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800402c2020456944b001602d
b800412cb800402a212db800422c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db800432c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
00442c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db800452c2020456944b001602020457d691844b001602d
b800462cb800452a2db800472c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800482c
4b535845441b2121592db800492c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db8004a2c2020456944b001602db8004b2cb800
4a2a212db8004c2c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db8004d2c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db8004f2c2020456944b001602020457d691844b001602db800502cb800
4f2a2db800512c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db800522c4b535845441b
2121592db800532c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800542c2020456944b001602db800552cb800542a212db800
562c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800572c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800582c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800592c20
20456944b001602020457d691844b001602db8005a2cb800592a2db8005b
2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a
235920b0032653582321b800c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db8005c2c4b535845441b2121592d000000000100000000000037422dfa
5f0f3cf500110800000000005f4d8f0000000000cff2eef7f865fc270b91
08f9000000090001000100000000000100000629fe2900000c01f865fced
0b9100010000000000000000000000000000089505120042000000000239
000002390000023900ed02d700520473000004730040071d004205560059
0187009c02aa008e02aa0044031d004e04ac005c023900aa02aa00550239
00af0239000004730040047300c404730040047300310473003404730042
0473004d0473004b0473004204730049023900e3023900e304ac001c04ac
005c04ac001c0473009c081f00e10556001e0556009705c7005a05c700a5
055600af04e300af0639006305c700a1023900c9040000230556009c0473
009c06aa009705c7009c06390050055600af0639005005c700b405560060
04e3002105c700aa05560034078d00250556002a0556002a04e3002f0239
00800239ffbb0239002f03c100780473000002aa00260473005204730076
0400003b04730038047300480239001c0473003d0473008401c7008401c7
ffda0400008001c7008906aa0084047300840473003b047300760473003c
02aa00890400004202390017047300800400000b05c700120400000b0400
00150400003402acffd50214009002ac002a04ac00120556001e0556001e
05c7005a055600af05c7009c0639005005c700aa04730052047300520473
00520473005204730052047300520400003b047300480473004804730048
0473004802390067023900080239000002390025047300840473003b0473
003b0473003b0473003b0473003b04730080047300800473008004730080
047300500333006f04730068047300380473004b02cd0095044cfff504e3
00c705e5001505e50012080000ed02aa008a02aa00520464005c08000010
0639004205b4002a0464005c0464005a0464005c0473ffe1049cffb403f4
006a05b400280696001c0464002f0231ff7902f6003b02ec00310625005e
071d004904e3005c04e300ba02aa00e804ac005c0464ffef047300280464
005c04e50071047300c2047300c2080000ed023900000556001e0556001e
0639005008000049078d00470473fffb080000f102aa004e02aa004e01c7
008401c700aa0464005c03f40042040000150556002a0156feaa05f40060
02aa00b402aa00aa0400001c0400001c047300500239009701c700aa02aa
004e0800000e0556001e055600af0556001e055600af055600af0239006b
0239fff902390020023900020639005006390050065200690639005005c7
00aa05c700aa05c700aa023900bd02aa002a02aafff702aa001502aa0019
02aa00f702aa008402aa007902aaffff02aa00a102aa002a0473ffe801c7
ffd7055600600400004204e3002f040000340214009005c700210473003d
0556002a04000015055600800473008004ac005c04ac007402aa005702aa
000b02aa000706ac005a06ac00a306ac004b04730000063900630473003d
023900c9055600600400004205c7005a0400003b05c7005a0400003b0473
00380556001e047300520556001e047300520556001e0473005205c7005a
0400003b05c7005a0400003b05c700a505480038055600af047300480556
00af04730048055600af04730048055600af04730048055600af04730048
063900630473003d063900630473003d063900630473003d0473003d05c7
00a10473008405c700350473003e038f00690371004403330059031f0065
0239003501c7ffdf063900c9038e00840400002301c7ffa3055600320400
fff10473009c021f00830473009c01c7000c0473009c021a004e0473009c
027b008905c7009c0473008405c7002a0473000a05c7009c047300840473
000e063900500473003b063900500473003b063900500473003b05c700b4
02aa008905c7004902aa001705c700b402aa004205560060040000420556
00600400004204e300210239001704e3002102e1001704e30021028fffe2
05c700aa0473008005c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080078d002505c700120556002a
0400001504e3002f0400003404e3002f04000034055600600400004204e3
0021023900170473004b0000fcfc0000fcfc0000fc9c0000fc680000fc86
0000fc8a0000fd690000fcc40000fcf60000fc700000fc9c0000fd5b0000
fcea0000fd120000fc9105c70021063900630473003d0473009c01c70089
0556009c0400008005c7009c0473008405c700b402aa008901aaffdb0237
00e102aa005501c7ffda040000800239001c04730048047300480400003a
047300510000fd3c0000fc660000fc8a0239fffb0239fffb05c7009c0473
00840000fcc4056d0024054c00980556009804270098059c002505560098
07f0000a0554004505c7009805c7009805560098057e002506aa009805c7
00980639005005c700980556009805c7005004e3001d0556002f06d80041
0556002505db009805360060078d009807a1009806aa001d070900980536
009805c700640800009805b7006a04730056047300480462008703390087
04d9001c04730050063d00170400003304ab008704ab0087046200870498
001b055400870473008704730048047300870473007d0400004804000033
0400001706a800460400001404910087044e005c063900870657008704e3
001b05c7008703ff00870414002f06390087047700500556009804730050
0427009803390087023900ba01c700870400002305c70050040000480239
001d020300290800002506c3001b07e10098067c008701c7ffdd05560062
0639004e0473001b0556009804620087040000480617001b0473001b0556
002f0400001705c700980473008704730098031d00870000fd5b0000fd5b
0000fd5b0000fd5b0000fc700000fd930000fd2a0000fc8a0000fcfc0000
fcfc0000fc860000fd690000fcc40000fcf60000fd930000fc9c0000fc9c
0000fc8a0000fc8a0000fc680000fc860000fc660000fc680000fc860000
fc660000fc660000fd500000fc660000fd5b0000fc8a0000fc8d0000fd2a
000000000239001b0473008306aa008302aa008806aa008302aa008902aa
0088042b0052042b005302020087033afffd02390017023900170400000a
05c70011040000140473009c0473009d0473009c0400008004b2003904b2
003905c7005905c7002104890049055600af055600600400004204980039
06e600aa05950080060a0052021400b6037300b6023900c3048c002b0400
003b0134005102aa00c102aa00c20b06000e055600ed029600ed02aa004e
01c700aa02aa0055044cfff5042f00c1042f00c2056500c1056500c202aa
0055029600ed02aa0055080000f102d500a4011d00000000000000000000
000000000000000000000000000000000000000002390000023900000239
000002390000023900000239000002390000023900000239000002390000
00000000000000000000000000000000011d0000008f000002aafff70370
00b60473009c02aa005502aa0006044c0072044c00730556001e04e300ae
04730048071c00500568003b0000fd5e0000fd5e0000fd5e0000fd5e0000
fcc90000fcd20000fd980000fccd0000fcef0000fce10000fcd90000fcec
0000fc5e0000fd440000fd4a0000fccf0000fcd10000fc860000fc910000
fcc10000fcc10000fcc10000fcc20000fcc20000fc8a01550061027b0061
0155006101550061046400320464002b03f4002d03f4002f05b4011305b4
00280231006b0231fe830464ff330464ffef0464002b0464002d08fa006f
0816006f0556009c023900c9047200c906ab00c9078f00c905560034078f
003409c800340c010034078f00c90556002a078f002a09c8002a0473009c
05c7005a05c700a506aa009701c70084038e00840555008405c700840400
000b05c7000b078e000b0955000b05c700840400000b05c7000b078e000b
01c700890400003b0473003806aa008409e2007408c1004f07db003807da
006b05a7007102f7005808e7007106f0006b05a100530556001e04730052
0239001e0239ffff063900500473003b05c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa047300800556001e
047300520556001e0473005208000010071d0049063900630473003d0556
009c04000080063900500473003b063900500473003b01c7ffbe09cd0054
08fc006f07fb00380639006305c7009c047300840556001e047300520800
0010071d00490639004204e3005c0556001e047300520556001e04730052
055600af04730048055600af047300480239ff7101c7ff350239fff801c7
ffaa063900500473003b063900500473003b05c700b402aaffd605c700b4
02aa004f05c700aa0473008005c700aa0473008005c700a1047300840556
001e04730052055600af04730048063900500473003b063900500473003b
063900500473003b063900500473003b0556002a0400001502aa004e0239
00c90556001e047300520556009704730076055600970473007605560097
0473007605c7005a0400003b05c700a50473003805c700a50473003805c7
00a50473003805c700a50473003805c700a504730038055600af04730048
055600af04730048055600af04730048055600af04730048055600af0473
004804e300af0239001c063900630473003d05c700a10473008405c700a1
0473008405c700a10473008405c700390473001b05c700a1047300840239
ffec01c7ff9e02390027023900160556009c040000800556009c04000080
0556009c040000800473009c01c700890473009c01c7ff9d0473009c01c7
ffb50473009c01c7ffc006aa009706aa008406aa009706aa008406aa0097
06aa008405c7009c0473008405c7009c0473008405c7009c0473008405c7
009c04730084063900500473003b063900500473003b063900500473003b
063900500473003b055600af04730076055600af0473007605c700b402aa
008905c700b402aa008305c700b402aa004a05c700b402aa001805560060
040000420556006004000042055600600400004205560060040000420556
00600400004204e300210239001704e300210239001704e300210239ffe2
04e300210239ffe705c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080055600340400000b05560034
0400000b078d002505c70012078d002505c70012078d002505c70012078d
002505c70012078d002505c700120556002a0400000b0556002a0400000b
0556002a0400001504e3002f0400003404e3002f0400003404e3002f0400
0034047300840239001005c70012040000150239001c0556001e04730052
0556001e047300520556001e047300520556001e0473ffcb0556001e0473
00520556001e047300520556001e047300520556001e047300520556001e
047300520556001e047300520556001e047300520556001e047300520556
00af04730048055600af04730048055600af04730048055600af04730048
0556008c0473fff0055600af04730048055600af04730048055600af0473
0048023900ae02390099023900c701c70084063900500473003b06390050
0473003b063900500473003b063900500473ffd8063900500473003b0639
00500473003b063900500473003b071c00500568003b071c00500568003b
071c00500568003b071c00500568003b071c00500568003b05c700aa0473
008005c700aa0473008006e600aa0595008006e600aa0595008006e600aa
0595008006e600aa0595008006e600aa059500800556002a040000150556
002a040000150556002a040000150556002a04000015055600af04730048
055600af04730048056d007505df009604860052048600870723000a0589
0017056d002404860043056d002404860043056d00750486005208d90010
06dd0012054f0043040a003005df00960486008705df0096048600870655
00500486005205df006004120037056d001004120019056d001004120019
056d00100412001905ac005e047a0069074800980600008d08000010071d
004906aa009706aa008405c700b402aa004c0222ffc50556001b05c700c5
04e300d505c70029055600c504e3004805c700b006390071023900ba0556
00b00556002f071d00be05c700b004e300620639007105c700b0055600c5
04e3005804e1002f0556002905c700500558003d06a8007f063900640239
000a0556002904e3005a04e300b40473001204e3006804730077038d004a
04e3003b04e5008f023900b0047300b00473002504e300b8047300420400
007104e3006f04e300aa0473004c04e3006f0400003b04e300b805c70077
0473000e05c7008f0610006a0239000a04e300b80239009a0222000b0000
fd19023900b0016c0088016c00880000fcfc0000fcfc016c008802ca001a
02b5001a03050088031200880222002e0222002f031e00880362006f0333
00880362006f0735007f0625005e0639ffef01c7008401c700aa047200ed
06ac009c06ac00ed04730048047300480556001e04730052047300520556
00af04730048055600af04730048055600af047300480239fff00239ffdb
01c70079063900500473003b063900500473003b063900500473003b0556
00600400004205c700aa047300800400000b06e600aa0595008006020061
0473ffd605c7fff20473008406aa008403f0009c0460009a03a6005a03e9
000c02cf00020448005c06020061047300500655004e0486004c06390050
02aa001e07c6002407c6002408e6ffca0000f9200000fa0b0000fa0b0000
fa060000fa0606020061047300500655004e0486004c0222002f02b5001a
0473002504e3002f040000340473003b04d2008404dc00380473007204bd
003804d7003d0473008204d7008202220086078d00470387008802aa0086
04d2003c04b80032052b00320772003805600017043a001705ce001c04c2
008904b8008901a9008a01a9008a01c700aa0187007802aa000802aa00c1
02aa003a0187007802aa000802aa00c102aa003a01a9008a01a9008a02aa
001e02aafff7023a0042023a004100e4ffed015500450155004401c40044
02e400090200000b023a004e023a004f0256000e0256000e025600240256
002402aa00550256002e0256002e0256002e020000210200000600e30044
0256003a023a000902560024025600240256000e0256000e02aa0078023a
004f0000fccd0000fca20000fca20000fd6f0000fd6f0000fc490000fc49
0000fb9e0000fca20000fc490000fccd0000fcc20000fcc2000000000239
0000000000000000000000000000031d004e031d004e06da00c107c60024
023900e308e6009c07c60024071d00d00703001b02390080023900800000
00000000000000000000000000000000000000000000067b003a023a0020
0239001a02390021023a002702390025023a0021023900240256002e0155
002b0256002e0155004701550022023a0042023a0020023a006202390020
023900180239001a02390021023a002702390025023a0021023900240256
002e0155002b0256002e0155004701550022063c0011063900630473009c
0473009c0556002a06ab002806000030075600110473007207c8005806ac
005a05c7005a0556005904e500710696001c06ab003406ab0028055600af
04730076055600af0473007604e300020639005004c400a1024100230369
001105c7005002bb0023033afffd0473009c0473009c01c7002a01c7002a
0473003d04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a05c1005b05b3005b076c00880776008807760088078d0088
07ca006f07a0006f04730077047300770473007704730077047300770473
007706c2008806c200880874008808890088085b00880868008804e3003b
04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b0733
00880733008808e5008808fa008808cc008808d900880929006f0929006f
023900b0023900b002390041023900390239003d0239003d023900230239
002303a5008803a5008805570088056c0088053e0088054b0088059b006f
059b006f04e3006f04e3006f04e3006f04e3006f04e3006f04e3006f07a5
008807a5008809570088096c0088093e0088094b008804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b806c200880889
00880868008808b8006f0610006a0610006a0610006a0610006a0610006a
0610006a0610006a0610006a07910088079100880943008809580088092a
0088093700880987006f0987006f04e3005a04e3005a0473007704730077
04e3003b04e3003b023900b0023900b004e3006f04e3006f04e300b804e3
00b80610006a0610006a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a0811005b080c005b0991008809d80088097f
0088099b008809d3006f09ce006f04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b04e3003b04e3003b096c0088096c00880b1e00880b33
00880b0500880b1200880b62006f0b62006f0610006a0610006a0610006a
0610006a0610006a0610006a0610006a0610006a09ca008809ca00880b7c
00880b9100880b6300880b7000880bc0006f0bc0006f04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a0556001b0556001b0666
002e0661002f07a9001b04e3003b04e3003b04e3003b04e3003b04e3003b
06ac002e06a7002f06d2002e06ba002f083100b00239ffcf0239ffce0239
ffcc0239ffda0239ffdc0239ffc50239ffe10239ffee0343002e0348002f
04e300b804e300b804e300b804e300b804e300aa04e300aa04e300b804e3
00b8055600290556002906b1002e0713002f06c200880610006a0610006a
0610006a0610006a0610006a075a002e0789002f0792002e07a9002f0878
005e04e3005a0473007704e3003b023900b004e3006f04e300b80610006a
05d5007206a7002f06ba002f0348002f0789002f0713002f07a9002f0239
ffcb04e300b804ac002504ea011704f700a102f3001b02bb002304730025
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a0239ffd70239ffe40239ffd20239ffd70239ffdb0239ffdb0239
ffcd0239ffe00239ffc80239ffc30239ffdc0239ffdc0239ffd70239ffd7
0239ffd20239ffcd0239ffd20239ffd704e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b80666
002e0661002f05c1005b076c00880776008805b3005b07760088078d0088
0666002e0661002f05c1005b076c00880776008805b3005b07760088078d
00880343002e0348002f0348002f03a5008805570088053e008803a50088
056c0088054b00880343002e0348002f0348002f03a5008805570088053e
008803a50088056c0088054b008806b1002e0713002f0713002f06c20088
088900880868008806c20088088900880868008806b1002e0713002f0713
002f06c20088088900880868008806c20088088900880868008805c700b4
05c7005a0639005001c70020051d0029055600af05c700a10000fd310552
00680473003806390050047300480772005b0738004505e5001306ac003d
06ac003d06ac003a06ac003a066d001d04e3001b082200d005e1008a06a8
007f05c7008f0556001e0400000b079900d005cf008a04da003802ca0024
05d900160588003805c700b404730052031f000004da00a103eb00a10649
00a104cf00840556009c0400008004e3002f0400003408d9001406dd0030
054f0072040a0047056d00a50412007a05df00ac0486009105df00630412
003f04f8002b0412003a056d002e0412002405ac00ac047a007705ac00ac
047a00770556002a0556002a04d900bc037c009105ac00ac047a00770632
00a504df007a075f00ac059b00910556002a0556002a06fe0028054e0035
0748003a059400260748003a059400260772004805b3003805df00ac0486
009104730052054f00ac054f00ac06a8007f04dc005d0855004405e00026
05560025040000040556003404b6000b0400003b054f0072040a004705f1
0026049c0024023900bd056d002e04120024055600340556001e05c7005a
0400003b0473ffe804e3002101c7003e02bb002304e30021055600af0473
009c0473009c055600af047300480456002301c7ffda05c700aa01a90021
01a9002102aa003302aa003302aa003a02aaffe9023900e302aa003c02aa
003c057f005b04ac002504ac0074023900e304ac0025057c004c04ac0074
023900e3023900e3063900710412003f0412003f055600ae0473008005c7
005a06aa009705dd0097059b004605c7005a05c7005a05c7005a0400003b
0400003b0400003b0473003805ca003006c6002e063f002f031f001a062e
001904e900310488004502aa00be02aa00be02aa00be02aa00be0277003b
0277003b034b0000034b0000034b0000034b0000034b00000487001203f7
001e045e0054043600830436008302fd005d034f0012069900390655003e
052900300000f86506e1002204e9002001e0004b01e9004b015d0025015d
000a0199002a0198001202fb001703040017026700130257001202570012
02c8004b01d8000701d8000707e9003a097c004b0931004909310002013c
004b04570022058900050589000d04be00150442001801d8000701d80007
03fe003d03fe003d0404003a036f000b0467003c0000fb760000fcc10000
fc080000fc730000fc730000fa630000fce00000fe950000fc8e0000fc51
0000fa0b0000fc9f0465003604650022040100340401002407760017044c
001b03ea001d051a00340653003204c8003306c200880889008808680088
0556001b0556001b0239ffdf0239ffe105560029055600290404001505e5
001405e5001405e500140800ffeb0800ffeb080003b40800038c080003b4
0800038c0800ffe90800ffe9080003b40800038c0800ffe90800ffe90800
00000404001500e40042023a0029023a0024023a001e02000006023a0024
05c7005a0639006305c7005a047100220552002904e300210556001e04d0
002805c2004e04d9004e05c7005a06aa008405d0003106640037082d0035
0552006805520068039c003f0380003b039c003f0380003b039c00530381
003c039c00530381003c02eb005302e3005302e3005302e3005302eb0053
02eb000802e3000002e3000002e3000002eb000803630053036300530363
00530363005303630053027f00010330004503b2002603c3000b050b0031
069c00290390007f0000fc4f0000fc4f0000fc420000fc420000fc420000
fc420000fc010000fc010000fd4404650022040100240a3900500873003b
0436008304360083043600830329003a0329003a03550028050d00340329
005403290028032900330329003302f6003a02f6003a0329002b0143005e
02d7005b04bb005e0329005e0329002a02d70029032900270329002a0329
0054019400100329005b0373003704bb005e02d70008037800800329000d
0378004a04dc004d0632002a04be0033047300390473003b04e6003804e1
003a04fa0039076e003e0329000a0143005e01e400610329005b02d70008
037800800329000d037800790329000a042b005205c5001001c70084045e
0054070a002e06cb003504d6001b04fa001a02d8000d04e9001b0330000d
02d9000a02db000c01c700aa02aa004e01c700aa02aa004e01c700aa02aa
004e01c700aa02aa004e053d007a0708003b0310008f0574009708c00022
0473004002e00034047300400473003104730034047300420473004d0430
002b047300420473004903cc000903cc000903cc00090428005803b7006b
0497007104b0004f0797004a0418006a045a005505d5004c07a9004404bf
004b03e0003b0965004a03f900560419004e06ed004a0420003f04500050
06a3004a03f3004d0633006006b90047064000440419004b0667004503be
003e043d003d03d60052048400440412004a041600460497003903fa0058
0650002d03cd005e0560005604950032045e005503e9003e0462005406c2
0049044500f604d500b10473005e0473002f000000000000006c0000006c
0000006c0000006c000000cc0000011c0000028000000430000005c00000
07500000079400000824000008a80000099800000a0000000a6400000aa0
00000ae000000b2800000c0400000c5000000d6800000ec000000f5c0000
1084000011b000001244000013a8000014d40000152c000015a80000163c
0000168c0000172400001828000019d800001af000001bf800001d180000
1ddc00001e6400001ec80000201800002088000020b80000213c00002230
00002280000023980000244400002540000025ec00002760000028740000
2a0c00002a6800002af800002bb400002d4c00002e4400002f0800002fa0
00002ff800003058000030bc000031540000317c000031a80000333c0000
341000003514000035ec00003780000038180000396800003a0800003a64
00003ad800003bb800003bfc00003cf400003dac00003e9c00003f800000
4068000040f4000042b400004354000044080000453400004690000046f0
0000481c000048bc0000499c000049e000004adc00004b9800004bb00000
4bc800004d9000004da800004dc000004dd800004df000004e0800004e20
00004e3800004e5000004e6800004e800000502c000050440000505c0000
50740000508c000050a4000050bc000050d4000050ec000051040000511c
000051340000514c000051640000517c00005194000051ac000051c40000
51dc00005238000052b00000547400005600000057cc00005858000058cc
000059e400005b8400005ce800005dcc00005dfc00005e6400005f440000
60280000620400006358000063e000006480000065300000665000006750
0000688800006954000069b400006a6400006aec00006c4800006d1c0000
6e3c000070640000720c0000730400007368000073ac0000745c00007598
000076900000771c000077cc00007880000078ec000078ec000079040000
791c0000793400007a6000007c4000007c7800007cb400007d5400007de4
00007e4400007ea400007f1400007ffc000080140000802c0000808c0000
81f800008268000082d80000839c0000844c000084d0000085280000858c
0000862000008848000088600000887800008890000088a8000088c00000
890c0000897c000089fc00008a4800008a6000008a7800008b2000008b38
00008b5000008b6800008b8000008bd000008c1400008c9800008cc40000
8d2000008d5000008e6400008f4800008f900000905c0000909c0000916c
000091fc000092140000922c000092440000925c000092b8000093a80000
95100000952800009540000095f8000096c4000096ec000097a4000097f0
000098a80000999c00009a9400009ba400009d7000009e2800009f9c0000
a1140000a16c0000a39c0000a5d80000a5f00000a6080000a6200000a638
0000a7000000a7180000a7300000a7c80000a98c0000a9a40000a9bc0000
a9d40000a9ec0000aa040000aa1c0000aa340000ab6c0000ab840000ab9c
0000ac480000ad500000ad680000ad800000ad980000adb00000adc80000
ade00000adf80000ae100000ae280000ae400000ae580000ae700000ae88
0000aea00000aeb80000afa00000afb80000b0580000b0700000b0b40000
b0cc0000b1c40000b1dc0000b2640000b27c0000b2940000b2ac0000b2c4
0000b2dc0000b2f40000b30c0000b3240000b33c0000b3cc0000b42c0000
b4440000b45c0000b4740000b48c0000b4a40000b4bc0000b4d40000b4ec
0000b5040000b51c0000b5340000b6b00000b8180000b8300000b8480000
b8600000b8780000b8900000b8a80000b8c00000b8d80000b8f00000b908
0000b9200000b9380000b9500000b9680000b9800000ba980000bab00000
bac80000bae00000baf80000bb100000bb280000bbf40000bcdc0000bcf4
0000bd0c0000bd240000bd3c0000bd540000bd6c0000bd840000bd9c0000
bdb40000bdcc0000bde40000bdfc0000be140000be2c0000bfc00000c154
0000c1e80000c2e40000c44c0000c4780000c4a80000c4ec0000c5700000
c59c0000c5fc0000c62c0000c68c0000c79c0000c7e40000c8240000c878
0000c9540000ca200000ca4c0000cb380000cb500000cb6c0000cb840000
cb9c0000cbb40000cbcc0000cbe40000cbfc0000cc140000cc2c0000cca8
0000cd200000cd4c0000cd9c0000ce040000ce7c0000cf340000cfec0000
d0b00000d2340000d2f40000d3200000d3800000d3980000d3b00000d450
0000d5140000d55c0000d5b40000d6a80000d8380000d8740000d9440000
d9a40000da500000dbc40000dc5c0000dd240000dd900000de200000dedc
0000df640000e0b00000e1180000e1fc0000e2f00000e3380000e3a80000
e5500000e5bc0000e6400000e6e80000e75c0000e8080000e8fc0000e9f8
0000eae40000ebcc0000ecf40000ee6c0000eff80000f1c80000f3340000
f3700000f4340000f5200000f5c80000f7040000f79c0000f8640000f8cc
0000f9580000fa140000fa9c0000fbd80000fc3c0000fd880000fe7c0000
fec40000ff3000010178000101e000010264000103040001037800010424
0001051800010614000106fc000107c0000108dc00010a1c00010abc0001
0bc800010c2000010c7c00010cac00010cfc00010d8c00010e5c00010f18
00010f9800011018000111640001129c000113c0000114e4000115680001
16b8000117700001185c000118e80001197000011a5800011b9c00011c98
00011d4800011df400011e6800011edc00011f4800011fb4000120080001
205c000120b0000121040001215000012184000121ec000122600001228c
000122b8000122e4000123140001237400012484000124b4000124f40001
253800012594000125f400012678000126a4000126d00001275400012780
000127ac000127ec00012908000129480001299c000129fc00012a8c0001
2af400012af400012b9400012c2c00012cfc00012d6c00012e6800012ed8
00012f480001304400013190000131e40001326c0001330c000133b00001
33f800013470000134f4000135d8000136bc0001379c0001380c00013918
00013a2000013af800013c1800013d7c00013ddc00013f48000140440001
409c00014154000142240001438c000143bc000144200001447c0001452c
000145e80001463c0001466c0001469c00014a7c00014ae000014b100001
4bb800014c1400014c4000014cc400014d0c00014d5000014db000014e0c
00014e3800014e6800014e9400014ec000014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014ef4
00014ef400014ef400014ef400014ef400014ef400014ef400014ef40001
4ef400014ef400014ef400014ef400014ef400014ef400014ef400014f30
00014f94000150bc000150e8000150fc00015154000151b4000151cc0001
5224000152dc0001545c000155c800015620000156bc00015758000157b0
0001592c000159d400015a2000015b3400015bd800015c9000015d8c0001
5e2400015f0000015f740001601c00016060000160c0000161000001612c
00016194000161dc0001622400016270000162bc000163300001635c0001
63a0000163cc000163f80001641000016420000164380001644800016460
00016470000164880001649c000164b4000164c4000164dc000164ec0001
65040001651c0001652c0001653c00016554000165740001658c0001659c
000165b4000165d4000165fc00016614000166240001663c0001665c0001
666c0001667c0001668c0001669c000166ac000166c4000166e4000166fc
0001670c00016724000167440001676c0001678400016794000167ac0001
67cc000167dc000167ec000167fc0001680c0001682c0001684c0001686c
000168840001689c000168b4000168cc000168e4000168fc000169140001
692c000169440001695c000169740001698c000169a4000169bc000169dc
000169fc00016a1c00016a3c00016a5c00016a7c00016a9c00016abc0001
6adc00016afc00016b1c00016b3c00016b5400016b6c00016b8400016b9c
00016bb400016bcc00016be400016bfc00016c1c00016c3c00016c540001
6c6c00016c8400016c9c00016cb400016ccc00016ce400016d0400016d24
00016d3c00016d5400016d6c00016d8400016d9c00016db400016dcc0001
6de400016dfc00016e1400016e2c00016e4400016e5c00016e7400016e8c
00016ea400016ebc00016ed400016eec00016f0400016f1c00016f340001
6f4c00016f6400016f7c00016f9400016fac00016fc400016fdc00016ff4
0001700c000170240001703c000170540001707400017094000170b40001
70d4000170ec0001710400017124000171440001715c0001717400017184
00017194000171ac000171c4000171dc000171f40001720c000172240001
723c000172540001726c000172840001729c000172b4000172cc000172e4
000172fc000173140001732c000173440001735c00017374000173940001
73b4000173d4000173f40001740c000174240001743c0001745400017474
00017494000174ac000174c4000174dc000174f40001750c000175240001
753c000175540001756c000175840001759c000175b4000175cc000175e4
000175fc0001761400017634000176540001766c000176840001769c0001
76b4000176cc000176e4000176fc0001771400017734000177540001776c
000177840001779c000177b4000177cc000177e4000177fc000178140001
782c000178440001785c000178740001788c000178a4000178bc000178d4
000178ec0001790400017924000179440001796400017984000179a40001
79c4000179e400017a0400017a1c00017a3400017a4c00017a6400017a7c
00017a9400017aac00017ac400017ae400017b0400017b1c00017b340001
7b4c00017b6400017b7c00017b9400017bb400017bd400017bf400017c14
00017c3400017c5400017c6c00017c8400017c9c00017cb400017ccc0001
7ce400017cfc00017d1400017d2c00017d4400017d5c00017d7400017d8c
00017da400017dc400017de400017e0400017e2400017e3c00017e540001
7e6c00017e8400017e9c00017eb400017ecc00017ee400017efc00017f14
00017f2c00017f4400017f5c00017f7400017f8c00017fa400017fbc0001
7fd400017fec000180040001801c000180340001804c000180640001807c
00018094000180ac000180c4000180dc000180f40001810c000181240001
813c000181540001816c0001818c000181ac000181cc000181ec0001820c
0001822c0001824c0001826c0001828c000182ac000182cc000182ec0001
830c0001832c0001834c0001836c0001838c000183ac000183cc000183ec
000184040001841c000184340001844c000184640001847c0001849c0001
84bc000184dc000184fc0001851c0001853c0001855c0001857c0001859c
000185bc000185d4000185ec000186040001861c000186340001864c0001
86640001867c0001869c000186bc000186dc000186fc0001871c0001873c
0001875c0001877c0001879c000187bc000187d4000187ec000188040001
881c000188340001884c000188640001887c00018894000188ac000188c4
000188dc000188f40001890c000189240001893c000189540001896c0001
89840001899c000189b4000189cc000189e4000189fc00018a1400018a2c
00018a4400018a5c00018a7400018a8c00018aa400018abc00018adc0001
8afc00018b1c00018b3c00018b5400018b6c00018b8400018b9c00018bb4
00018bcc00018be400018bfc00018c1400018c2c00018c4400018c5c0001
8c7400018c8c00018ca400018cbc00018cd400018cec00018d0400018d1c
00018d3400018d4c00018d6400018d7c00018d9400018dac00018dc40001
8ddc00018df400018e0c00018e2400018e3c00018e5400018e6c00018e7c
00018e8c00018ea400018ebc00018ed400018eec00018fa4000190040001
9184000191c0000191fc0001925c000192a400019324000194a4000194d4
0001953c0001958400019638000196bc0001971000019878000198dc0001
99b000019a0800019a5000019ab000019c4000019cac00019dec00019f54
00019fdc0001a0740001a1bc0001a3840001a41c0001a5940001a6e80001
a8000001a8a00001a99c0001aa0c0001aa780001aaf40001abf40001ac38
0001adb00001aef00001b0140001b12c0001b27c0001b2fc0001b37c0001
b5080001b5d40001b6880001b8200001b8d00001b9880001b9d40001ba34
0001ba980001baf40001bb500001bbac0001bbd80001bc080001bc640001
bcfc0001bda00001be100001be800001beac0001bed80001bf480001bfd4
0001c0440001c0d80001c2680001c3d40001c5340001c5900001c5ec0001
c6040001c61c0001c6340001c6540001c6740001c6940001c6b40001c6d4
0001c6ec0001c7040001c7240001c7440001c7640001c7840001c7a40001
c7c40001c7dc0001c7f40001c80c0001c82c0001c84c0001c86c0001c88c
0001c8a40001c8bc0001c8dc0001c8fc0001c9140001c92c0001c9440001
ca000001caf00001cb980001cc2c0001cd380001cd740001ce500001cf4c
0001cfc00001d0380001d1740001d2300001d3200001d3d00001d4640001
d53c0001d5800001d5e40001d6480001d8900001d9380001d99c0001da00
0001da2c0001da580001da700001da880001daa00001dab80001dae40001
db7c0001dc0c0001dc800001dcf40001dd840001de4c0001df940001e0d0
0001e1f40001e3540001e4380001e5500001e5c40001e7200001e7dc0001
e8980001e9d80001eab00001eb680001eca80001ee940001ef940001f104
0001f2500001f2b40001f3140001f3b00001f40c0001f43c0001f4680001
f4980001f4c40001f4f40001f51c0001f5480001f5740001f5d40001f670
0001f6b00001f6f00001f78c0001f8700001f8dc0001f9500001f9cc0001
fa600001fad40001fb4c0001fc300001fd140001fd540001fd940001fdd8
0001fe1c0001fe480001feb00001ff180001ff84000200e8000201500002
0180000201cc00020268000202ac000202f0000203300002037000020480
00020564000205b0000205f00002063000020680000206d0000207300002
07900002080c0002084c000208b0000208fc000209d000020a0c00020a0c
00020a0c00020a0c00020a0c00020a0c00020aa000020bac00020c240002
0c8800020d1000020d2800020dd000020f0c00020fb0000210240002109c
0002109c0002109c0002109c0002109c0002109c0002109c0002124c0002
1374000213f8000214e0000216340002168400021868000219cc00021a34
00021a5c00021a9c00021b5000021bfc00021ca800021dd000021e100002
1ebc00021ff40002207800022160000222b400022304000224e400022648
000226b0000226d800022718000227cc00022878000228dc000229f80002
2a3400022a7000022acc00022b4c00022d4000022e2000022e9800022f70
00022fc8000230a80002324000023280000232f800023310000233200002
34000002352c0002360c0002372c000237b4000238f80002397800023a20
00023ab000023c2c00023cb800023d6800023ec000024014000240680002
40c0000241ec000242040002421c000242340002424c000242640002427c
00024294000242ac000242c4000242dc000242f40002430c000243240002
433c000243540002436c000243840002439c000243b4000243cc000243e4
000243fc000244140002442c000244440002445c000244740002448c0002
44a4000244bc000244d4000244ec000245040002451c000245340002454c
000245640002457c00024594000245ac000245c4000245dc000245f40002
460c000246240002463c000246540002466c000246840002469c000246b4
000246cc000246e4000246fc000247140002472c000247440002475c0002
47740002478c000247a4000247bc000247d4000247ec000248040002481c
000248340002484c000248640002487c00024894000248ac000248c40002
48dc000248f40002490c000249240002493c000249540002496c00024984
0002499c000249b4000249cc000249e4000249fc00024a1400024a2c0002
4a4400024a5c00024a7400024a8c00024aa400024abc00024ad400024aec
00024b0400024b1c00024b3400024b4c00024b6400024b7c00024b940002
4bac00024bc400024bdc00024bf400024c0c00024c2400024c3c00024c54
00024c6c00024c8400024c9c00024cbc00024cdc00024cfc00024d1c0002
4d3c00024d5c00024d7c00024d9c00024dbc00024ddc00024dfc00024e1c
00024e3c00024e5c00024e7c00024e9c00024ebc00024edc00024efc0002
4f1c00024f3c00024f5c00024f7c00024f9c00024fbc00024fdc00024ffc
0002501c0002503c0002505c0002507c0002509c000250bc000250dc0002
50fc0002511c0002513c0002515c0002517c0002519c000251bc000251dc
000251fc0002521c0002523c0002525c0002527c0002529c000252b40002
52cc000252ec00025304000253240002533c0002535c000253740002538c
000253a4000253bc000253d4000253f40002540c0002542c000254440002
54640002547c00025494000254ac000254c4000254dc000254f40002550c
000255240002553c000255540002556c000255840002559c000255b40002
55cc000255e4000255fc000256140002562c000256440002565c00025674
0002568c000256a4000256bc000256d4000256ec00025704000257240002
573c0002575c0002577400025794000257ac000257c4000257dc000257f4
0002580c000258240002583c000258540002586c000258840002589c0002
58b4000258cc000258e4000258fc000259140002592c000259440002595c
000259740002598c00025a5c00025aa800025afc00025bb400025c200002
5c3800025c5800025c7800025c9800025cb800025cd800025cf800025d18
00025d3800025d5800025d7800025d9800025db800025dd800025df80002
5e1800025e3800025e5800025e7800025e9800025eb800025ed800025ef8
00025f1800025f3800025f5800025f7800025f9800025fb800025fd80002
5ff80002601800026038000260580002607800026098000260b8000260d8
000260f80002611800026138000261580002617800026198000261b80002
61d8000261f80002621800026238000262580002627800026298000262b8
000262d0000262e800026300000263180002633000026348000263600002
637800026390000263a8000263c0000263d8000263f00002640800026420
00026438000264500002646800026488000264a0000264b8000264d00002
64e800026500000265180002653000026548000265680002658000026598
000265b0000265c8000265e0000265f80002661000026628000266480002
66600002667800026690000266a8000266c0000266d8000266f000026708
0002672800026740000267580002677000026788000267a0000267b80002
68e000026a0c00026b8c00026be400026c9800026dac00026e6800026ea0
00026f4000026f5800027040000270dc000272d800027508000276e00002
78fc00027bb800027da000027f04000280280002814c0002824800028310
000284500002850400028580000285fc000286d8000287c4000288740002
891800028a0000028b1800028c1400028e7000028f5800028fa400028ff0
000290840002912c000291c400029260000292c80002932c000294000002
94d4000296c400029924000299b400029a3800029ac800029b5800029c88
00029dac00029e1000029e7800029f0800029f9c0002a0300002a0dc0002
a1600002a1f40002a2500002a2ac0002a3040002a35c0002a41c0002a4d4
0002a5800002a61c0002a6e00002a7680002a80c0002a8900002a9280002
a9a80002aaa00002ab900002ad200002aeac0002af400002aff80002b098
0002b1440002b31c0002b4380002b5540002b6dc0002b8100002b95c0002
baac0002bb1c0002bb840002bc280002bcdc0002bdac0002bee00002c02c
0002c0d00002c1780002c1a80002c2480002c2e00002c3280002c39c0002
c4c00002c6000002c67c0002c7240002c7740002c7e00002c8480002c920
0002ca040002cacc0002cba80002ccfc0002cdb00002ce580002ceec0002
cf2c0002cf8c0002cfd40002d0200002d04c0002d0d00002d12c0002d194
0002d1d80002d2940002d3300002d3b00002d40c0002d4a80002d5800002
d6000002d6800002d7200002d7f80002d88c0002d9240002da140002db40
0002dc180002dce80002ddb00002df180002dff80002e0fc0002e2080002
e2d80002e3cc0002e4c40002e5fc0002e7ac0002e89c0002e9a00002ea54
0002eafc0002ebc00002ecc00002ecfc0002ed380002ed740002edac0002
edf80002ee340002ee780002eebc0002ef100002ef640002efbc0002eff8
0002f0540002f0d80002f1900002f2480002f3980002f40c0002f4ec0002
f6480002f7500002f7900002f8c80002fa040002fa400002fafc0002fb34
0002fb6c0002fc240002fce00002fd280002fdf00002ff0c0002ffa40003
003c000300ac000300d800030104000301ac000301d4000302180003025c
000302bc000303040003038400030404000304fc0003054c000305780003
05a400030754000308c40003099400030a6800030b7c00030c2800030c90
00030d0c00030d7c00030e1000030e6c00030ebc00030eec00030f800003
111000031174000311c000031290000313640003143800031514000316fc
000317f0000318f4000319e000031af400031c6c00031c8400031c9c0003
1cb400031d1c00031db800031dfc00031e7400031ed800031f7000032058
0003227000032488000326300003265c00032688000326bc000326f00003
272c00032768000327a4000327e00003281c0003285800032894000328d0
000328fc000329e400032a3000032bb000032c5800032d7000032dd80003
2e8800032fac00033104000332400003338c000334c40003356000033664
0003382c00033ab800033ccc00033e3000033fa4000340580003422c0003
43d8000344300003448c00034530000345ec000346900003474c000347f8
000348b80003496400034a2400034ae400034ba000034c5c00034d180003
4dd400034e9400034f500003500c000350c800035188000351c400035210
0003525c000352a8000352e4000353a4000353f40003549c000354e00003
5608000357dc000358340003597800035ac000035afc00035b3800035b74
00035bb000035c0400035c5400035cc800035d9c00035e7800035e900003
5ea800035f84000360440003610400036288000364000003651c00036724
0003682c00036930000369dc00036a8c00036b8400036c8400036db00003
6e0000036e7000036f480003701000037128000371f80003727800037348
0003747000037518000375bc0003769000037760000377a4000379640003
7a0000037b8800037c5c00037dac00037ec000037f94000380a8000381cc
000382a80003845c000385c000038690000386e000038754000387f80003
883c000389fc00038a9800038bbc00038c8c00038de400038e8400038ed4
00038f500003910000039258000393ec00039580000396d8000398880003
998800039a6000039bc400039c2000039cd000039d2c00039dd400039e34
00039ee000039f3c00039fe80003a1580003a1c00003a2e40003a4f80003
a5680003a6980003a6e00003a7cc0003a9640003a9ec0003aad80003ac30
0003ac840003ae700003afdc0003b0200003b05c0003b0a00003b1740003
b2f00003b4c40003b6140003b8640003b9300003bab80003bd240003bee0
0003bfe80003c1640003c3a80003c4fc0003c6a00003c8480003c9d00003
cb400003ccc00003cda00003d0b40003d2ac0003d52c0003d6080003d7c0
0003d8b00003da780003dbe40003ddb80003ded00003e08c0003e2640003
e3d00003e6b00003e8ec0003eb3c0003ecd00003ee100003efdc0003f178
0003f3880003f40c0003f45c0003f54c0003f58000010000089500920009
006b0007000200100010005d000007e80a1d000400010000002701da0001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f006000010000000000040009007f0001
000000000005000800880001000000000006000900900001000000000007
003200990001000000000012000900cb0001000000000100000900d40001
000000000101001000dd0001000000000102000e00ed0001000000000103
001400fb00010000000001040012010f0001000000000105000901210001
000000010007002f012a0001000000020007003c01590001000000030007
003001950001000000040007003a01c50001000000050007003601ff0001
000000060007003002350001000000070007003c02650003000104040002
000602a10003000104060002000e02a70003000104070002000c02b50003
000104090002000e02c100030001040b0002001002cf00030001040c0002
000c02df0003000104100002001002eb0003000104110002000a02fb0003
0001041200020006030500030001041300020010030b0003000104140002
000c031b0003000104160002000c03270003000104190002000e03330003
0001041d0002000c034100030001080400020006034d000300010c010002
00080353000300010c0a0002000c035ba920313939302d32303036204170
706c6520436f6d707574657220496e632e20a92031393831204c696e6f74
79706520414720a920313939302d3931205479706520536f6c7574696f6e
7320496e632e48656c766574696361526567756c617248656c7665746963
613b2031302e30643165313b20323031342d30372d323148656c76657469
636131302e306431653148656c76657469636148656c7665746963612069
73206120726567697374657265642074726164656d61726b206f66204c69
6e6f7479706520414748656c7665746963614c6967617475726573436f6d
6d6f6e204c69676174757265734e756d6265722053706163696e6750726f
706f7274696f6e616c204e756d626572734d6f6e6f737061636564204e75
6d626572734e6f204368616e676548656c7665746963612065737420756e
65206d617271756520648e706f738e65206465204c696e6f747970652041
4748656c766574696361206973742065696e2065696e676574726167656e
657320576172656e7a65696368656e20646572204c696e6f747970652041
4748656c766574696361208f20756e206d61726368696f20726567697374
7261746f206469204c696e6f7479706520414748656c7665746963612069
732065656e20676572656769737472656572642068616e64656c736d6572
6b2076616e204c696e6f7479706520414748656c766574696361208a7220
65747420726567697374726572617420766172756d8a726b6520669a7220
4c696e6f7479706520414748656c76657469636120657320756e61206d61
7263612072656769737472616461206465204c696e6f7479706520414748
656c76657469636120657220657420726567697374726572657420766172
656dbe726b652074696c68bf72656e6465204c696e6f747970652041476a
196e969ad4004f007200640069006e00e60072004e006f0072006d006100
6c0052006500670075006c00610072004e006f0072006d00610061006c00
69004e006f0072006d0061006c005200650067006f006c00610072006530
ec30ae30e530e930fcc77cbc18ccb40052006500670075006c0069006500
72004e006f0072006d0061006c004e006f0072006d0061006c041e043104
4b0447043d044b0439004e006f0072006d0061006c5e3889c44f53063906
27062f064a004e006f0072006d0061006c000000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[16257 16277 16153 16221 16373 16377 16265 16181 16381 16269 16333 16361 16205
16201 16177 15441 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2856 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>Helvetica AddT42Char 
1 3152 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/zero 19 def
/two 21 def
end
Helvetica /Encoding get
dup 48 /zero put
dup 50 /two put
pop
end
%ADOEndSubsetFont
/RKEPLS+Helvetica /Helvetica findfont ct_VMDictPut/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two 205{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf167.459 490.81 mo(20)[-5.27853 0 ]yshgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /minus putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B796769580DD10054882A804F7E2595926310CFCB4532E7C01> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RKEPLT+Symbol /Symbol findfont ct_VMDictPut/RKEPLT+Symbol*1 [45{/.notdef}rp /minus 210{/.notdef}rp]RKEPLT+Symbol nfRKEPLT+Symbol*1 [0 -9.49373 -9.49373 0 0 0 ]msf167.459 496.016 mo(-)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf167.459 458.157 mo(0)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf167.459 427.87 mo(20)[-5.27853 0 ]yshgrestore
43.766 502.641 mo
43.766 397.584 li
@
46.747 487.867 mo
43.766 487.867 li
@
45.257 479.66 mo
43.766 479.66 li
@
45.257 471.452 mo
43.766 471.452 li
@
45.257 463.244 mo
43.766 463.244 li
@
46.747 455.037 mo
43.766 455.037 li
@
45.257 446.829 mo
43.766 446.829 li
@
45.257 438.622 mo
43.766 438.622 li
@
45.257 430.414 mo
43.766 430.414 li
@
46.747 422.207 mo
43.766 422.207 li
@
46.747 487.867 mo
43.766 487.867 li
@
45.257 496.075 mo
43.766 496.075 li
@
46.747 422.207 mo
43.766 422.207 li
@
45.257 413.999 mo
43.766 413.999 li
@
45.257 405.791 mo
43.766 405.791 li
@
45.257 397.584 mo
43.766 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf42.527 490.81 mo(20)[-5.27853 0 ]yshgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLT+Symbol*1 [0 -9.49373 -9.49373 0 0 0 ]msf42.527 496.016 mo(-)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf42.527 458.157 mo(0)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf42.527 427.87 mo(20)[-5.27853 0 ]yshgrestore
158.468 502.641 mo
43.766 502.641 li
@
154.187 500.821 mo
154.187 502.641 li
@
151.647 500.821 mo
151.647 502.641 li
@
149.844 500.821 mo
149.844 502.641 li
@
148.446 500.821 mo
148.446 502.641 li
@
147.303 500.821 mo
147.303 502.641 li
@
146.337 500.821 mo
146.337 502.641 li
@
145.501 500.821 mo
145.501 502.641 li
@
144.763 500.821 mo
144.763 502.641 li
@
144.102 499.002 mo
144.102 502.641 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 3076 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/one 20 def
end
RKEPLS+Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two 205{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf147.584 515.891 mo(10)[-5.27853 0 ]yshgrestore
139.759 500.821 mo
139.759 502.641 li
@
137.218 500.821 mo
137.218 502.641 li
@
135.416 500.821 mo
135.416 502.641 li
@
134.018 500.821 mo
134.018 502.641 li
@
132.875 500.821 mo
132.875 502.641 li
@
131.909 500.821 mo
131.909 502.641 li
@
131.073 500.821 mo
131.073 502.641 li
@
130.335 500.821 mo
130.335 502.641 li
@
129.674 499.002 mo
129.674 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf130.074 509.266 mo(2)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf134.333 519.677 mo(10)[-5.27856 0 ]yshgrestore
125.331 500.821 mo
125.331 502.641 li
@
122.79 500.821 mo
122.79 502.641 li
@
120.988 500.821 mo
120.988 502.641 li
@
119.59 500.821 mo
119.59 502.641 li
@
118.447 500.821 mo
118.447 502.641 li
@
117.481 500.821 mo
117.481 502.641 li
@
116.645 500.821 mo
116.645 502.641 li
@
115.907 500.821 mo
115.907 502.641 li
@
115.246 499.002 mo
115.246 502.641 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 3432 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/three 22 def
end
RKEPLS+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf114.931 509.266 mo(3)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf119.663 519.677 mo(10)[-5.27856 0 ]yshgrestore
110.903 500.821 mo
110.903 502.641 li
@
108.362 500.821 mo
108.362 502.641 li
@
106.56 500.821 mo
106.56 502.641 li
@
105.162 500.821 mo
105.162 502.641 li
@
104.019 500.821 mo
104.019 502.641 li
@
103.053 500.821 mo
103.053 502.641 li
@
102.217 500.821 mo
102.217 502.641 li
@
101.479 500.821 mo
101.479 502.641 li
@
100.818 499.002 mo
100.818 502.641 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 3776 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/four 23 def
end
RKEPLS+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four 203{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf101.207 509.266 mo(4)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf105.466 519.677 mo(10)[-5.27856 0 ]yshgrestore
96.475 500.821 mo
96.475 502.641 li
@
93.934 500.821 mo
93.934 502.641 li
@
92.132 500.821 mo
92.132 502.641 li
@
90.734 500.821 mo
90.734 502.641 li
@
89.591 500.821 mo
89.591 502.641 li
@
88.625 500.821 mo
88.625 502.641 li
@
87.789 500.821 mo
87.789 502.641 li
@
87.051 500.821 mo
87.051 502.641 li
@
86.39 499.002 mo
86.39 502.641 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 3932 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/five 24 def
end
RKEPLS+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf86.064 509.266 mo(5)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf90.796 519.677 mo(10)[-5.27856 0 ]yshgrestore
82.047 500.821 mo
82.047 502.641 li
@
79.506 500.821 mo
79.506 502.641 li
@
77.704 500.821 mo
77.704 502.641 li
@
76.306 500.821 mo
76.306 502.641 li
@
75.163 500.821 mo
75.163 502.641 li
@
74.197 500.821 mo
74.197 502.641 li
@
73.361 500.821 mo
73.361 502.641 li
@
72.622 500.821 mo
72.622 502.641 li
@
71.962 499.002 mo
71.962 502.641 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 4228 25 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/six 25 def
end
RKEPLS+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four /five /six 201{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf71.867 509.266 mo(6)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf76.599 519.677 mo(10)[-5.27856 0 ]yshgrestore
67.619 500.821 mo
67.619 502.641 li
@
65.078 500.821 mo
65.078 502.641 li
@
63.276 500.821 mo
63.276 502.641 li
@
61.878 500.821 mo
61.878 502.641 li
@
60.735 500.821 mo
60.735 502.641 li
@
59.769 500.821 mo
59.769 502.641 li
@
58.932 500.821 mo
58.932 502.641 li
@
58.194 500.821 mo
58.194 502.641 li
@
57.534 499.002 mo
57.534 502.641 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 4528 26 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/seven 26 def
end
RKEPLS+Helvetica /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf57.67 509.266 mo(7)shgsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf61.929 519.677 mo(10)[-5.27856 0 ]yshgrestore
53.191 500.821 mo
53.191 502.641 li
@
50.65 500.821 mo
50.65 502.641 li
@
48.848 500.821 mo
48.848 502.641 li
@
47.45 500.821 mo
47.45 502.641 li
@
46.307 500.821 mo
46.307 502.641 li
@
45.341 500.821 mo
45.341 502.641 li
@
44.504 500.821 mo
44.504 502.641 li
@
158.468 397.584 mo
43.766 397.584 li
@
154.187 399.403 mo
154.187 397.584 li
@
151.647 399.403 mo
151.647 397.584 li
@
149.844 399.403 mo
149.844 397.584 li
@
148.446 399.403 mo
148.446 397.584 li
@
147.303 399.403 mo
147.303 397.584 li
@
146.337 399.403 mo
146.337 397.584 li
@
145.501 399.403 mo
145.501 397.584 li
@
144.763 399.403 mo
144.763 397.584 li
@
144.102 401.223 mo
144.102 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf147.584 394.271 mo(10)[-5.27853 0 ]yshgrestore
139.759 399.403 mo
139.759 397.584 li
@
137.218 399.403 mo
137.218 397.584 li
@
135.416 399.403 mo
135.416 397.584 li
@
134.018 399.403 mo
134.018 397.584 li
@
132.875 399.403 mo
132.875 397.584 li
@
131.909 399.403 mo
131.909 397.584 li
@
131.073 399.403 mo
131.073 397.584 li
@
130.335 399.403 mo
130.335 397.584 li
@
129.674 401.223 mo
129.674 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf130.074 383.86 mo(2)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf134.333 394.271 mo(10)[-5.27853 0 ]yshgrestore
125.331 399.403 mo
125.331 397.584 li
@
122.79 399.403 mo
122.79 397.584 li
@
120.988 399.403 mo
120.988 397.584 li
@
119.59 399.403 mo
119.59 397.584 li
@
118.447 399.403 mo
118.447 397.584 li
@
117.481 399.403 mo
117.481 397.584 li
@
116.645 399.403 mo
116.645 397.584 li
@
115.907 399.403 mo
115.907 397.584 li
@
115.246 401.223 mo
115.246 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf114.931 383.86 mo(3)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf119.663 394.271 mo(10)[-5.27853 0 ]yshgrestore
110.903 399.403 mo
110.903 397.584 li
@
108.362 399.403 mo
108.362 397.584 li
@
106.56 399.403 mo
106.56 397.584 li
@
105.162 399.403 mo
105.162 397.584 li
@
104.019 399.403 mo
104.019 397.584 li
@
103.053 399.403 mo
103.053 397.584 li
@
102.217 399.403 mo
102.217 397.584 li
@
101.479 399.403 mo
101.479 397.584 li
@
100.818 401.223 mo
100.818 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf101.207 383.86 mo(4)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf105.466 394.271 mo(10)[-5.27853 0 ]yshgrestore
96.475 399.403 mo
96.475 397.584 li
@
93.934 399.403 mo
93.934 397.584 li
@
92.132 399.403 mo
92.132 397.584 li
@
90.734 399.403 mo
90.734 397.584 li
@
89.591 399.403 mo
89.591 397.584 li
@
88.625 399.403 mo
88.625 397.584 li
@
87.789 399.403 mo
87.789 397.584 li
@
87.051 399.403 mo
87.051 397.584 li
@
86.39 401.223 mo
86.39 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf86.064 383.86 mo(5)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf90.796 394.271 mo(10)[-5.27853 0 ]yshgrestore
82.047 399.403 mo
82.047 397.584 li
@
79.506 399.403 mo
79.506 397.584 li
@
77.704 399.403 mo
77.704 397.584 li
@
76.306 399.403 mo
76.306 397.584 li
@
75.163 399.403 mo
75.163 397.584 li
@
74.197 399.403 mo
74.197 397.584 li
@
73.361 399.403 mo
73.361 397.584 li
@
72.622 399.403 mo
72.622 397.584 li
@
71.962 401.223 mo
71.962 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf71.867 383.86 mo(6)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf76.599 394.271 mo(10)[-5.27853 0 ]yshgrestore
67.619 399.403 mo
67.619 397.584 li
@
65.078 399.403 mo
65.078 397.584 li
@
63.276 399.403 mo
63.276 397.584 li
@
61.878 399.403 mo
61.878 397.584 li
@
60.735 399.403 mo
60.735 397.584 li
@
59.769 399.403 mo
59.769 397.584 li
@
58.932 399.403 mo
58.932 397.584 li
@
58.194 399.403 mo
58.194 397.584 li
@
57.534 401.223 mo
57.534 397.584 li
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf57.67 383.86 mo(7)shgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf61.929 394.271 mo(10)[-5.27853 0 ]yshgrestore
53.191 399.403 mo
53.191 397.584 li
@
50.65 399.403 mo
50.65 397.584 li
@
48.848 399.403 mo
48.848 397.584 li
@
47.45 399.403 mo
47.45 397.584 li
@
46.307 399.403 mo
46.307 397.584 li
@
45.341 399.403 mo
45.341 397.584 li
@
44.504 399.403 mo
44.504 397.584 li
@
148.446 467.789 mo
145.669 467.789 145.669 463.624 148.446 463.624 cv
151.222 463.624 151.222 467.789 148.446 467.789 cv
cp
137.431 466.147 mo
134.655 466.147 134.655 461.983 137.431 461.983 cv
140.207 461.983 140.207 466.147 137.431 466.147 cv
cp
129.612 464.506 mo
126.836 464.506 126.836 460.341 129.612 460.341 cv
132.388 460.341 132.388 464.506 129.612 464.506 cv
cp
122.043 462.864 mo
119.267 462.864 119.267 458.7 122.043 458.7 cv
124.819 458.7 124.819 462.864 122.043 462.864 cv
cp
115.067 461.223 mo
112.291 461.223 112.291 457.058 115.067 457.058 cv
117.844 457.058 117.844 461.223 115.067 461.223 cv
cp
109.438 459.581 mo
106.661 459.581 106.661 455.417 109.438 455.417 cv
112.214 455.417 112.214 459.581 109.438 459.581 cv
cp
104.402 457.94 mo
101.626 457.94 101.626 453.775 104.402 453.775 cv
107.179 453.775 107.179 457.94 104.402 457.94 cv
cp
100.793 456.298 mo
98.016 456.298 98.016 452.134 100.793 452.134 cv
103.569 452.134 103.569 456.298 100.793 456.298 cv
cp
97.853 454.657 mo
95.077 454.657 95.077 450.492 97.853 450.492 cv
100.63 450.492 100.63 454.657 97.853 454.657 cv
cp
95.924 453.015 mo
93.148 453.015 93.148 448.851 95.924 448.851 cv
98.7 448.851 98.7 453.015 95.924 453.015 cv
cp
94.887 451.374 mo
92.111 451.374 92.111 447.209 94.887 447.209 cv
97.663 447.209 97.663 451.374 94.887 451.374 cv
cp
94.583 449.732 mo
91.807 449.732 91.807 445.568 94.583 445.568 cv
97.359 445.568 97.359 449.732 94.583 449.732 cv
cp
95.239 448.091 mo
92.463 448.091 92.463 443.926 95.239 443.926 cv
98.016 443.926 98.016 448.091 95.239 448.091 cv
cp
96.346 446.449 mo
93.569 446.449 93.569 442.285 96.346 442.285 cv
99.122 442.285 99.122 446.449 96.346 446.449 cv
cp
98.382 444.808 mo
95.606 444.808 95.606 440.643 98.382 440.643 cv
101.158 440.643 101.158 444.808 98.382 444.808 cv
cp
100.946 443.166 mo
98.169 443.166 98.169 439.002 100.946 439.002 cv
103.722 439.002 103.722 443.166 100.946 443.166 cv
cp
104.019 441.525 mo
101.243 441.525 101.243 437.36 104.019 437.36 cv
106.795 437.36 106.795 441.525 104.019 441.525 cv
cp
107.826 439.883 mo
105.05 439.883 105.05 435.719 107.826 435.719 cv
110.603 435.719 110.603 439.883 107.826 439.883 cv
cp
111.992 438.242 mo
109.216 438.242 109.216 434.077 111.992 434.077 cv
114.768 434.077 114.768 438.242 111.992 438.242 cv
cp
116.287 436.6 mo
113.511 436.6 113.511 432.436 116.287 432.436 cv
119.063 432.436 119.063 436.6 116.287 436.6 cv
cp
121.146 434.959 mo
118.37 434.959 118.37 430.794 121.146 430.794 cv
123.923 430.794 123.923 434.959 121.146 434.959 cv
cp
127.303 433.317 mo
124.527 433.317 124.527 429.153 127.303 429.153 cv
130.079 429.153 130.079 433.317 127.303 433.317 cv
cp
131.561 431.676 mo
128.785 431.676 128.785 427.511 131.561 427.511 cv
134.337 427.511 134.337 431.676 131.561 431.676 cv
cp
137.431 430.034 mo
134.655 430.034 134.655 425.87 137.431 425.87 cv
140.207 425.87 140.207 430.034 137.431 430.034 cv
cp
146.337 428.393 mo
143.561 428.393 143.561 424.228 146.337 424.228 cv
149.114 424.228 149.114 428.393 146.337 428.393 cv
cp
154.187 426.751 mo
151.411 426.751 151.411 422.587 154.187 422.587 cv
156.963 422.587 156.963 426.751 154.187 426.751 cv
cp
@
150.528 466.147 mo
150.528 461.983 li
146.364 461.983 li
146.364 466.147 li
cp
143.24 464.506 mo
143.24 460.342 li
139.076 460.342 li
139.076 464.506 li
cp
126.62 462.864 mo
126.62 458.7 li
122.456 458.7 li
122.456 462.864 li
cp
114.57 461.223 mo
114.57 457.059 li
110.406 457.059 li
110.406 461.223 li
cp
103.488 459.581 mo
103.488 455.417 li
99.3236 455.417 li
99.3236 459.581 li
cp
94.617 457.94 mo
94.617 453.776 li
90.4526 453.776 li
90.4526 457.94 li
cp
88.802 456.298 mo
88.802 452.134 li
84.6376 452.134 li
84.6376 456.298 li
cp
88.071 454.657 mo
88.071 450.493 li
83.9066 450.493 li
83.9066 454.657 li
cp
90.377 453.015 mo
90.377 448.851 li
86.2126 448.851 li
86.2126 453.015 li
cp
94.76 451.374 mo
94.76 447.21 li
90.5956 447.21 li
90.5956 451.374 li
cp
100.627 449.732 mo
100.627 445.568 li
96.4626 445.568 li
96.4626 449.732 li
cp
107.574 448.091 mo
107.574 443.927 li
103.41 443.927 li
103.41 448.091 li
cp
115.851 446.449 mo
115.851 442.285 li
111.687 442.285 li
111.687 446.449 li
cp
125.021 444.808 mo
125.021 440.644 li
120.857 440.644 li
120.857 444.808 li
cp
134.266 443.166 mo
134.266 439.002 li
130.102 439.002 li
130.102 443.166 li
cp
145.042 441.525 mo
145.042 437.361 li
140.878 437.361 li
140.878 441.525 li
cp
151.926 439.883 mo
151.926 435.719 li
147.762 435.719 li
147.762 439.883 li
cp
0 .993988 1 0 cmyk
@
146.363 459.141 mo
147.802 458.673 li
147.802 457.16 li
148.691 458.384 li
150.13 457.917 li
149.241 459.141 li
150.13 460.364 li
148.691 459.897 li
147.802 461.121 li
147.802 459.608 li
cp
121.141 457.499 mo
122.579 457.032 li
122.579 455.519 li
123.469 456.743 li
124.907 456.275 li
124.018 457.499 li
124.907 458.723 li
123.469 458.256 li
122.579 459.479 li
122.579 457.967 li
cp
97.581 455.858 mo
99.02 455.39 li
99.02 453.877 li
99.909 455.101 li
101.348 454.634 li
100.459 455.858 li
101.348 457.081 li
99.909 456.614 li
99.02 457.838 li
99.02 456.325 li
cp
77.993 454.216 mo
79.432 453.749 li
79.432 452.236 li
80.321 453.46 li
81.76 452.992 li
80.871 454.216 li
81.76 455.44 li
80.321 454.972 li
79.432 456.196 li
79.432 454.684 li
cp
91.638 452.575 mo
93.077 452.107 li
93.077 450.594 li
93.966 451.818 li
95.405 451.351 li
94.515 452.575 li
95.405 453.798 li
93.966 453.331 li
93.077 454.555 li
93.077 453.042 li
cp
108.681 450.933 mo
110.12 450.466 li
110.12 448.953 li
111.009 450.177 li
112.448 449.709 li
111.559 450.933 li
112.448 452.157 li
111.009 451.689 li
110.12 452.913 li
110.12 451.401 li
cp
127.848 449.292 mo
129.287 448.824 li
129.287 447.311 li
130.176 448.535 li
131.615 448.068 li
130.725 449.292 li
131.615 450.515 li
130.176 450.048 li
129.287 451.272 li
129.287 449.759 li
cp
152.105 447.65 mo
153.544 447.183 li
153.544 445.67 li
154.433 446.894 li
155.872 446.426 li
154.982 447.65 li
155.872 448.874 li
154.433 448.406 li
153.544 449.63 li
153.544 448.117 li
cp
.883665 .769161 0 0 cmyk
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 1940 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>RKEPLS+Helvetica AddT42Char 
1 2084 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>RKEPLS+Helvetica AddT42Char 
1 12712 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/a 68 def
end
RKEPLS+Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven 41{/.notdef}rp /a 158{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -11.8672 -11.8672 0 0 0 ]msf55.304 499.801 mo(\(a\))[-3.95169 -6.59818 0 ]yshgrestore
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if

1 0 3 <> RKEPLS+Helvetica AddT42Char 
1 2720 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>RKEPLS+Helvetica AddT42Char 
1 7880 42 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>RKEPLS+Helvetica AddT42Char 
1 11000 57 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd000000>RKEPLS+Helvetica AddT42Char 
1 13804 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/space 3 def
/period 17 def
/G 42 def
/V 57 def
/e 72 def
end
RKEPLS+Helvetica /Encoding get
dup 32 /space put
dup 46 /period put
dup 71 /G put
dup 86 /V put
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven 15{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 154{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -9.49373 -9.49373 0 0 0 ]msf55.304 483.238 mo(7.7 GeV)[-5.27853 -2.63925 -5.2785 -2.63925 -7.38614 -5.2785 0 ]yshgrestore
95.46 498.158 mo
95.46 467.786 li
72.4852 467.786 li
72.4852 498.158 li
cp
0 0 0 0 cmyk
ef
.4 lw
95.46 498.158 mo
95.46 467.786 li
72.4852 467.786 li
72.4852 498.158 li
cp
@
.75 lw
95.46 498.158 mo
95.46 467.786 li
@
95.46 467.786 mo
72.485 467.786 li
@
72.485 467.786 mo
72.485 498.158 li
@
72.485 498.158 mo
95.46 498.158 li
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 1072 8 <00050042ffda06d00592000b000f001b0027003300f04052060c250c0237
0e580c670c960ca70cc60cd70cf60c0868080d0e0e46120f0f0c0e0f1218
0c0d2a301b2421f215240d272d240bf23324050a0f0e3517171a2a2402f2
302408ea12241ef218242419343f52182b4e10f44dedfcedf6edfced4e45
6544e6002f3c4d3fedfcfd2fc4edf4ed011112393911123939872e2b7d10
c43130184379405200322e0a301b002c002a1b011a22181b001020121b01
1626181b00141c121b013206301b0028042a1b012f092d1b012b012d1b01
19231b1b00111f1b1b001725151b01131d151b013107331b002903331b00
002b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b81015d710016151406232226
353436330333012312363534262322061514163312161514062322263534
36330036353426232206151416330604cccc9091cccc91916ffcdf6f3279
79565579795591cccc9190cccc90042b7979555679795602b8cc9090cccc
9090cc02dafa4803687955557978565579022bcd9090cccc9090cdfb2179
55557979555579000000>RKEPLS+Helvetica AddT42Char 
1 2660 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b90000
>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/percent 8 def
/hyphen 16 def
end
RKEPLS+Helvetica /Encoding get
dup 37 /percent put
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven 15{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 154{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf78.019 487.497 mo(0-5%)[-3.69498 -2.21292 -3.69498 0 ]ysh76.314 496.444 mo
73.538 496.444 73.538 492.279 76.314 492.279 cv
79.09 492.279 79.09 496.444 76.314 496.444 cv
cp
@
RKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf85.591 490.81 mo(30-40%)[-3.69498 -3.69495 -2.21295 -3.69495 -3.69498 0 ]ysh86.055 496.444 mo
86.055 492.279 li
81.8906 492.279 li
81.8906 496.444 li
cp
0 .993988 1 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 4676 27 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/eight 27 def
end
RKEPLS+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 14{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 154{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -6.64561 -6.64561 0 0 0 ]msf93.162 490.81 mo(70-80%)[-3.69498 -3.69495 -2.21295 -3.69495 -3.69498 0 ]ysh89.548 494.361 mo
90.987 493.894 li
90.987 492.381 li
91.876 493.605 li
93.315 493.138 li
92.426 494.361 li
93.315 495.585 li
91.876 495.118 li
90.987 496.342 li
90.987 494.829 li
cp
.883665 .769161 0 0 cmyk
@
gsave
158.641 518.811 mo
158.641 397.322 li
43.767 397.322 li
43.767 518.811 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 2560 15 <000100aafed0018000da000e002d401600230e0a64080a1017171a07340a
640008190f6365182b4e10f44d3cfded4e456544e6003f4dedd4ed313017
3637363534262723353315140607aa451c0f01026dd66076d10c552d2a07
0b07daca77b415000000>RKEPLS+Helvetica AddT42Char 
1 2784 18 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>RKEPLS+Helvetica AddT42Char 
1 5544 31 <0001001cffed04ad04280006006a40405703670387030300201203030202
20120100010620120304030420120505060306040200030505010106050a
03000104020503011a08060019070888215fb5182b2b4ef43c10f6173c11
1239003d3f3f111217392f044d1887102b10872b87102b87102b3130015d
130115090115011c0491fc4403bcfb6f025e01cab4fe97fe96b401cb>RKEPLS+Helvetica AddT42Char 
1 13328 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>RKEPLS+Helvetica AddT42Char 
2 1904 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>RKEPLS+Helvetica AddT42Char 
2 2588 95 <000100900000013b05d20003002940150200010a0517171a0300c1020119
0405c1217765182b2b4ef43c4dfd3c4e456544e6003f3f31302123113301
3babab05d2000000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/comma 15 def
/slash 18 def
/less 31 def
/c 70 def
/y 92 def
/bar 95 def
end
RKEPLS+Helvetica /Encoding get
dup 44 /comma put
dup 47 /slash put
dup 60 /less put
dup 99 /c put
dup 121 /y put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 3{/.notdef}rp /less 10{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 19{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -8.06967 -8.06967 0 0 0 ]msf66.188 471.881 mo(<1.6 GeV/c,|y|<0.5)[-4.71271 -4.48672 -2.24338 -4.48672 -2.24338 -6.2782 -4.48672 -5.38242 -2.24335 -4.03485 -2.24338 -2.09805 -4.03485 -2.09805 -4.71268 -4.48676 -2.24335 0 ]yshgrestore
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 10764 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>RKEPLS+Helvetica AddT42Char 
1 16028 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/T 55 def
/p 83 def
end
RKEPLS+Helvetica /Encoding get
dup 84 /T put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 3{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e 10{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -5.22155 -5.22155 0 0 0 ]msf70.447 475.193 mo(T)shRKEPLS+Helvetica*1 [0 -8.06967 -8.06967 0 0 0 ]msf66.188 497.908 mo(0.2< p)[-4.48676 -2.24335 -4.48676 -4.71268 -2.24338 0 ]ysh286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
0 0 0 0 cmyk
ef
.4 lw
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
@
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
ef
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
@
.75 lw
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
0 0 0 0 cmyk
ef
.4 lw
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
@
.75 lw
273.463 502.641 mo
273.463 397.584 li
158.641 397.584 li
158.641 502.641 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.463 502.641 mo
273.463 397.584 li
@
270.152 487.867 mo
273.463 487.867 li
@
271.808 479.66 mo
273.463 479.66 li
@
271.808 471.452 mo
273.463 471.452 li
@
271.808 463.244 mo
273.463 463.244 li
@
270.152 455.037 mo
273.463 455.037 li
@
271.808 446.829 mo
273.463 446.829 li
@
271.808 438.622 mo
273.463 438.622 li
@
271.808 430.414 mo
273.463 430.414 li
@
270.152 422.207 mo
273.463 422.207 li
@
270.152 487.867 mo
273.463 487.867 li
@
271.808 496.075 mo
273.463 496.075 li
@
270.152 422.207 mo
273.463 422.207 li
@
271.808 413.999 mo
273.463 413.999 li
@
271.808 405.791 mo
273.463 405.791 li
@
271.808 397.584 mo
273.463 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf283.874 491.283 mo(20)[-5.80493 0 ]yshgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4405 -10.4405 0 0 0 ]msf283.874 496.489 mo(-)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf283.874 458.157 mo(0)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf283.874 428.344 mo(20)[-5.80493 0 ]yshgrestore
158.641 502.641 mo
158.641 397.584 li
@
161.951 487.867 mo
158.641 487.867 li
@
160.296 479.66 mo
158.641 479.66 li
@
160.296 471.452 mo
158.641 471.452 li
@
160.296 463.244 mo
158.641 463.244 li
@
161.951 455.037 mo
158.641 455.037 li
@
160.296 446.829 mo
158.641 446.829 li
@
160.296 438.622 mo
158.641 438.622 li
@
160.296 430.414 mo
158.641 430.414 li
@
161.951 422.207 mo
158.641 422.207 li
@
161.951 487.867 mo
158.641 487.867 li
@
160.296 496.075 mo
158.641 496.075 li
@
161.951 422.207 mo
158.641 422.207 li
@
160.296 413.999 mo
158.641 413.999 li
@
160.296 405.791 mo
158.641 405.791 li
@
160.296 397.584 mo
158.641 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf157.048 491.283 mo(20)[-5.80493 0 ]yshgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4405 -10.4405 0 0 0 ]msf157.048 496.489 mo(-)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf157.048 458.157 mo(0)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf157.048 428.344 mo(20)[-5.80493 0 ]yshgrestore
273.463 502.641 mo
158.641 502.641 li
@
269.177 501.001 mo
269.177 502.641 li
@
266.634 501.001 mo
266.634 502.641 li
@
264.83 501.001 mo
264.83 502.641 li
@
263.43 501.001 mo
263.43 502.641 li
@
262.286 501.001 mo
262.286 502.641 li
@
261.319 501.001 mo
261.319 502.641 li
@
260.482 501.001 mo
260.482 502.641 li
@
259.743 501.001 mo
259.743 502.641 li
@
259.082 499.361 mo
259.082 502.641 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf262.105 515.891 mo(10)[-5.01334 0 ]yshgrestore
254.734 501.001 mo
254.734 502.641 li
@
252.191 501.001 mo
252.191 502.641 li
@
250.386 501.001 mo
250.386 502.641 li
@
248.987 501.001 mo
248.987 502.641 li
@
247.843 501.001 mo
247.843 502.641 li
@
246.876 501.001 mo
246.876 502.641 li
@
246.039 501.001 mo
246.039 502.641 li
@
245.3 501.001 mo
245.3 502.641 li
@
244.639 499.361 mo
244.639 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf245.069 509.266 mo(2)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf248.855 519.204 mo(10)[-5.01337 0 ]yshgrestore
240.291 501.001 mo
240.291 502.641 li
@
237.748 501.001 mo
237.748 502.641 li
@
235.943 501.001 mo
235.943 502.641 li
@
234.544 501.001 mo
234.544 502.641 li
@
233.4 501.001 mo
233.4 502.641 li
@
232.433 501.001 mo
232.433 502.641 li
@
231.595 501.001 mo
231.595 502.641 li
@
230.857 501.001 mo
230.857 502.641 li
@
230.196 499.361 mo
230.196 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf229.926 509.266 mo(3)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf234.185 519.204 mo(10)[-5.01337 0 ]yshgrestore
225.848 501.001 mo
225.848 502.641 li
@
223.304 501.001 mo
223.304 502.641 li
@
221.5 501.001 mo
221.5 502.641 li
@
220.1 501.001 mo
220.1 502.641 li
@
218.957 501.001 mo
218.957 502.641 li
@
217.99 501.001 mo
217.99 502.641 li
@
217.152 501.001 mo
217.152 502.641 li
@
216.413 501.001 mo
216.413 502.641 li
@
215.752 499.361 mo
215.752 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf216.202 509.266 mo(4)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf219.988 519.204 mo(10)[-5.01337 0 ]yshgrestore
211.405 501.001 mo
211.405 502.641 li
@
208.861 501.001 mo
208.861 502.641 li
@
207.057 501.001 mo
207.057 502.641 li
@
205.657 501.001 mo
205.657 502.641 li
@
204.513 501.001 mo
204.513 502.641 li
@
203.547 501.001 mo
203.547 502.641 li
@
202.709 501.001 mo
202.709 502.641 li
@
201.97 501.001 mo
201.97 502.641 li
@
201.309 499.361 mo
201.309 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf201.059 509.266 mo(5)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf205.318 519.204 mo(10)[-5.01337 0 ]yshgrestore
196.961 501.001 mo
196.961 502.641 li
@
194.418 501.001 mo
194.418 502.641 li
@
192.614 501.001 mo
192.614 502.641 li
@
191.214 501.001 mo
191.214 502.641 li
@
190.07 501.001 mo
190.07 502.641 li
@
189.103 501.001 mo
189.103 502.641 li
@
188.266 501.001 mo
188.266 502.641 li
@
187.527 501.001 mo
187.527 502.641 li
@
186.866 499.361 mo
186.866 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf186.862 509.266 mo(6)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf191.121 519.204 mo(10)[-5.01337 0 ]yshgrestore
182.518 501.001 mo
182.518 502.641 li
@
179.975 501.001 mo
179.975 502.641 li
@
178.17 501.001 mo
178.17 502.641 li
@
176.771 501.001 mo
176.771 502.641 li
@
175.627 501.001 mo
175.627 502.641 li
@
174.66 501.001 mo
174.66 502.641 li
@
173.823 501.001 mo
173.823 502.641 li
@
173.084 501.001 mo
173.084 502.641 li
@
172.423 499.361 mo
172.423 502.641 li
@
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf172.665 509.266 mo(7)shgsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf176.451 519.204 mo(10)[-5.01337 0 ]yshgrestore
168.075 501.001 mo
168.075 502.641 li
@
165.532 501.001 mo
165.532 502.641 li
@
163.727 501.001 mo
163.727 502.641 li
@
162.328 501.001 mo
162.328 502.641 li
@
161.184 501.001 mo
161.184 502.641 li
@
160.217 501.001 mo
160.217 502.641 li
@
159.379 501.001 mo
159.379 502.641 li
@
273.463 397.584 mo
158.641 397.584 li
@
269.177 399.224 mo
269.177 397.584 li
@
266.634 399.224 mo
266.634 397.584 li
@
264.83 399.224 mo
264.83 397.584 li
@
263.43 399.224 mo
263.43 397.584 li
@
262.286 399.224 mo
262.286 397.584 li
@
261.319 399.224 mo
261.319 397.584 li
@
260.482 399.224 mo
260.482 397.584 li
@
259.743 399.224 mo
259.743 397.584 li
@
259.082 400.863 mo
259.082 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf262.105 393.798 mo(10)[-5.01334 0 ]yshgrestore
254.734 399.224 mo
254.734 397.584 li
@
252.191 399.224 mo
252.191 397.584 li
@
250.386 399.224 mo
250.386 397.584 li
@
248.987 399.224 mo
248.987 397.584 li
@
247.843 399.224 mo
247.843 397.584 li
@
246.876 399.224 mo
246.876 397.584 li
@
246.039 399.224 mo
246.039 397.584 li
@
245.3 399.224 mo
245.3 397.584 li
@
244.639 400.863 mo
244.639 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf245.069 383.86 mo(2)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf248.855 393.798 mo(10)[-5.01334 0 ]yshgrestore
240.291 399.224 mo
240.291 397.584 li
@
237.748 399.224 mo
237.748 397.584 li
@
235.943 399.224 mo
235.943 397.584 li
@
234.544 399.224 mo
234.544 397.584 li
@
233.4 399.224 mo
233.4 397.584 li
@
232.433 399.224 mo
232.433 397.584 li
@
231.595 399.224 mo
231.595 397.584 li
@
230.857 399.224 mo
230.857 397.584 li
@
230.196 400.863 mo
230.196 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf229.926 383.86 mo(3)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf234.185 393.798 mo(10)[-5.01334 0 ]yshgrestore
225.848 399.224 mo
225.848 397.584 li
@
223.304 399.224 mo
223.304 397.584 li
@
221.5 399.224 mo
221.5 397.584 li
@
220.1 399.224 mo
220.1 397.584 li
@
218.957 399.224 mo
218.957 397.584 li
@
217.99 399.224 mo
217.99 397.584 li
@
217.152 399.224 mo
217.152 397.584 li
@
216.413 399.224 mo
216.413 397.584 li
@
215.752 400.863 mo
215.752 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf216.202 383.86 mo(4)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf219.988 393.798 mo(10)[-5.01334 0 ]yshgrestore
211.405 399.224 mo
211.405 397.584 li
@
208.861 399.224 mo
208.861 397.584 li
@
207.057 399.224 mo
207.057 397.584 li
@
205.657 399.224 mo
205.657 397.584 li
@
204.513 399.224 mo
204.513 397.584 li
@
203.547 399.224 mo
203.547 397.584 li
@
202.709 399.224 mo
202.709 397.584 li
@
201.97 399.224 mo
201.97 397.584 li
@
201.309 400.863 mo
201.309 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf201.059 383.86 mo(5)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf205.318 393.798 mo(10)[-5.01334 0 ]yshgrestore
196.961 399.224 mo
196.961 397.584 li
@
194.418 399.224 mo
194.418 397.584 li
@
192.614 399.224 mo
192.614 397.584 li
@
191.214 399.224 mo
191.214 397.584 li
@
190.07 399.224 mo
190.07 397.584 li
@
189.103 399.224 mo
189.103 397.584 li
@
188.266 399.224 mo
188.266 397.584 li
@
187.527 399.224 mo
187.527 397.584 li
@
186.866 400.863 mo
186.866 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf186.862 383.86 mo(6)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf191.121 393.798 mo(10)[-5.01334 0 ]yshgrestore
182.518 399.224 mo
182.518 397.584 li
@
179.975 399.224 mo
179.975 397.584 li
@
178.17 399.224 mo
178.17 397.584 li
@
176.771 399.224 mo
176.771 397.584 li
@
175.627 399.224 mo
175.627 397.584 li
@
174.66 399.224 mo
174.66 397.584 li
@
173.823 399.224 mo
173.823 397.584 li
@
173.084 399.224 mo
173.084 397.584 li
@
172.423 400.863 mo
172.423 397.584 li
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -6.16936 -6.16936 0 0 0 ]msf172.665 383.86 mo(7)shgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
RKEPLS+Helvetica*1 [0 -9.01675 -9.01675 0 0 0 ]msf176.451 393.798 mo(10)[-5.01334 0 ]yshgrestore
168.075 399.224 mo
168.075 397.584 li
@
165.532 399.224 mo
165.532 397.584 li
@
163.727 399.224 mo
163.727 397.584 li
@
162.328 399.224 mo
162.328 397.584 li
@
161.184 399.224 mo
161.184 397.584 li
@
160.217 399.224 mo
160.217 397.584 li
@
159.379 399.224 mo
159.379 397.584 li
@
261.319 480.921 mo
258.543 480.921 258.543 476.757 261.319 476.757 cv
264.096 476.757 264.096 480.921 261.319 480.921 cv
cp
255.056 479.28 mo
252.28 479.28 252.28 475.115 255.056 475.115 cv
257.832 475.115 257.832 479.28 255.056 479.28 cv
cp
248.741 477.638 mo
245.964 477.638 245.964 473.474 248.741 473.474 cv
251.517 473.474 251.517 477.638 248.741 477.638 cv
cp
241.73 475.997 mo
238.954 475.997 238.954 471.832 241.73 471.832 cv
244.506 471.832 244.506 475.997 241.73 475.997 cv
cp
235.943 474.355 mo
233.167 474.355 233.167 470.191 235.943 470.191 cv
238.719 470.191 238.719 474.355 235.943 474.355 cv
cp
231.026 472.713 mo
228.25 472.713 228.25 468.549 231.026 468.549 cv
233.802 468.549 233.802 472.713 231.026 472.713 cv
cp
226.259 471.072 mo
223.483 471.072 223.483 466.907 226.259 466.907 cv
229.036 466.907 229.036 471.072 226.259 471.072 cv
cp
221.53 469.43 mo
218.754 469.43 218.754 465.266 221.53 465.266 cv
224.306 465.266 224.306 469.43 221.53 469.43 cv
cp
217.407 467.789 mo
214.63 467.789 214.63 463.624 217.407 463.624 cv
220.183 463.624 220.183 467.789 217.407 467.789 cv
cp
213.406 466.147 mo
210.63 466.147 210.63 461.983 213.406 461.983 cv
216.183 461.983 216.183 466.147 213.406 466.147 cv
cp
209.98 464.506 mo
207.204 464.506 207.204 460.341 209.98 460.341 cv
212.756 460.341 212.756 464.506 209.98 464.506 cv
cp
206.938 462.864 mo
204.161 462.864 204.161 458.7 206.938 458.7 cv
209.714 458.7 209.714 462.864 206.938 462.864 cv
cp
204.256 461.223 mo
201.48 461.223 201.48 457.058 204.256 457.058 cv
207.032 457.058 207.032 461.223 204.256 461.223 cv
cp
202.05 459.581 mo
199.274 459.581 199.274 455.417 202.05 455.417 cv
204.826 455.417 204.826 459.581 202.05 459.581 cv
cp
200.239 457.94 mo
197.462 457.94 197.462 453.775 200.239 453.775 cv
203.015 453.775 203.015 457.94 200.239 457.94 cv
cp
198.809 456.298 mo
196.033 456.298 196.033 452.134 198.809 452.134 cv
201.585 452.134 201.585 456.298 198.809 456.298 cv
cp
197.874 454.657 mo
195.098 454.657 195.098 450.492 197.874 450.492 cv
200.65 450.492 200.65 454.657 197.874 454.657 cv
cp
197.336 453.015 mo
194.56 453.015 194.56 448.851 197.336 448.851 cv
200.112 448.851 200.112 453.015 197.336 453.015 cv
cp
197.188 451.374 mo
194.412 451.374 194.412 447.209 197.188 447.209 cv
199.964 447.209 199.964 451.374 197.188 451.374 cv
cp
197.515 449.732 mo
194.739 449.732 194.739 445.568 197.515 445.568 cv
200.292 445.568 200.292 449.732 197.515 449.732 cv
cp
198.19 448.091 mo
195.413 448.091 195.413 443.926 198.19 443.926 cv
200.966 443.926 200.966 448.091 198.19 448.091 cv
cp
199.306 446.449 mo
196.53 446.449 196.53 442.285 199.306 442.285 cv
202.083 442.285 202.083 446.449 199.306 446.449 cv
cp
200.809 444.808 mo
198.032 444.808 198.032 440.643 200.809 440.643 cv
203.585 440.643 203.585 444.808 200.809 444.808 cv
cp
202.681 443.166 mo
199.905 443.166 199.905 439.002 202.681 439.002 cv
205.457 439.002 205.457 443.166 202.681 443.166 cv
cp
204.982 441.525 mo
202.205 441.525 202.205 437.36 204.982 437.36 cv
207.758 437.36 207.758 441.525 204.982 441.525 cv
cp
207.552 439.883 mo
204.776 439.883 204.776 435.719 207.552 435.719 cv
210.328 435.719 210.328 439.883 207.552 439.883 cv
cp
210.464 438.242 mo
207.688 438.242 207.688 434.077 210.464 434.077 cv
213.24 434.077 213.24 438.242 210.464 438.242 cv
cp
213.646 436.6 mo
210.87 436.6 210.87 432.436 213.646 432.436 cv
216.423 432.436 216.423 436.6 213.646 436.6 cv
cp
217.419 434.959 mo
214.643 434.959 214.643 430.794 217.419 430.794 cv
220.195 430.794 220.195 434.959 217.419 434.959 cv
cp
221.188 433.317 mo
218.412 433.317 218.412 429.153 221.188 429.153 cv
223.964 429.153 223.964 433.317 221.188 433.317 cv
cp
225.31 431.676 mo
222.534 431.676 222.534 427.511 225.31 427.511 cv
228.086 427.511 228.086 431.676 225.31 431.676 cv
cp
230.004 430.034 mo
227.228 430.034 227.228 425.87 230.004 425.87 cv
232.781 425.87 232.781 430.034 230.004 430.034 cv
cp
234.932 428.393 mo
232.155 428.393 232.155 424.228 234.932 424.228 cv
237.708 424.228 237.708 428.393 234.932 428.393 cv
cp
239.333 426.751 mo
236.557 426.751 236.557 422.587 239.333 422.587 cv
242.109 422.587 242.109 426.751 239.333 426.751 cv
cp
244.83 425.109 mo
242.054 425.109 242.054 420.945 244.83 420.945 cv
247.606 420.945 247.606 425.109 244.83 425.109 cv
cp
251.224 423.468 mo
248.448 423.468 248.448 419.304 251.224 419.304 cv
254 419.304 254 423.468 251.224 423.468 cv
cp
255.056 421.826 mo
252.28 421.826 252.28 417.662 255.056 417.662 cv
257.832 417.662 257.832 421.826 255.056 421.826 cv
cp
263.43 420.185 mo
260.654 420.185 260.654 416.021 263.43 416.021 cv
266.206 416.021 266.206 420.185 263.43 420.185 cv
cp
@
271.26 474.355 mo
271.26 470.19 li
267.095 470.19 li
267.095 474.355 li
cp
261.164 472.713 mo
261.164 468.549 li
257 468.549 li
257 472.713 li
cp
252.163 471.072 mo
252.163 466.908 li
247.998 466.908 li
247.998 471.072 li
cp
239.893 469.43 mo
239.893 465.266 li
235.729 465.266 li
235.729 469.43 li
cp
230.769 467.789 mo
230.769 463.624 li
226.604 463.624 li
226.604 467.789 li
cp
222.253 466.147 mo
222.253 461.983 li
218.089 461.983 li
218.089 466.147 li
cp
214.336 464.506 mo
214.336 460.342 li
210.172 460.342 li
210.172 464.506 li
cp
207.359 462.864 mo
207.359 458.7 li
203.195 458.7 li
203.195 462.864 li
cp
201.395 461.223 mo
201.395 457.059 li
197.231 457.059 li
197.231 461.223 li
cp
196.575 459.581 mo
196.575 455.417 li
192.411 455.417 li
192.411 459.581 li
cp
193.125 457.94 mo
193.125 453.776 li
188.961 453.776 li
188.961 457.94 li
cp
191.199 456.298 mo
191.199 452.134 li
187.035 452.134 li
187.035 456.298 li
cp
190.948 454.657 mo
190.948 450.493 li
186.784 450.493 li
186.784 454.657 li
cp
192.263 453.015 mo
192.263 448.851 li
188.099 448.851 li
188.099 453.015 li
cp
194.903 451.374 mo
194.903 447.21 li
190.739 447.21 li
190.739 451.374 li
cp
198.699 449.732 mo
198.699 445.568 li
194.535 445.568 li
194.535 449.732 li
cp
203.439 448.091 mo
203.439 443.927 li
199.275 443.927 li
199.275 448.091 li
cp
209.108 446.449 mo
209.108 442.285 li
204.944 442.285 li
204.944 446.449 li
cp
215.411 444.808 mo
215.411 440.644 li
211.247 440.644 li
211.247 444.808 li
cp
222.346 443.166 mo
222.346 439.002 li
218.182 439.002 li
218.182 443.166 li
cp
230.239 441.525 mo
230.239 437.361 li
226.075 437.361 li
226.075 441.525 li
cp
238.089 439.883 mo
238.089 435.719 li
233.924 435.719 li
233.924 439.883 li
cp
247.382 438.242 mo
247.382 434.078 li
243.218 434.078 li
243.218 438.242 li
cp
256.51 436.6 mo
256.51 432.436 li
252.346 432.436 li
252.346 436.6 li
cp
263.402 434.959 mo
263.402 430.795 li
259.237 430.795 li
259.237 434.959 li
cp
0 .993988 1 0 cmyk
@
267.095 462.424 mo
268.534 461.956 li
268.534 460.443 li
269.423 461.667 li
270.862 461.2 li
269.973 462.424 li
270.862 463.648 li
269.423 463.18 li
268.534 464.404 li
268.534 462.891 li
cp
244.361 460.782 mo
245.8 460.315 li
245.8 458.802 li
246.689 460.026 li
248.128 459.558 li
247.239 460.782 li
248.128 462.006 li
246.689 461.539 li
245.8 462.762 li
245.8 461.25 li
cp
224.465 459.141 mo
225.904 458.673 li
225.904 457.16 li
226.793 458.384 li
228.232 457.917 li
227.342 459.141 li
228.232 460.364 li
226.793 459.897 li
225.904 461.121 li
225.904 459.608 li
cp
206.741 457.499 mo
208.18 457.032 li
208.18 455.519 li
209.069 456.743 li
210.508 456.275 li
209.618 457.499 li
210.508 458.723 li
209.069 458.256 li
208.18 459.479 li
208.18 457.967 li
cp
191.039 455.858 mo
192.478 455.39 li
192.478 453.877 li
193.367 455.101 li
194.806 454.634 li
193.916 455.858 li
194.806 457.081 li
193.367 456.614 li
192.478 457.838 li
192.478 456.325 li
cp
179.261 454.216 mo
180.7 453.749 li
180.7 452.236 li
181.589 453.46 li
183.028 452.992 li
182.139 454.216 li
183.028 455.44 li
181.589 454.972 li
180.7 456.196 li
180.7 454.684 li
cp
189.193 452.575 mo
190.632 452.107 li
190.632 450.594 li
191.521 451.818 li
192.96 451.351 li
192.071 452.575 li
192.96 453.798 li
191.521 453.331 li
190.632 454.555 li
190.632 453.042 li
cp
202.982 450.933 mo
204.421 450.466 li
204.421 448.953 li
205.31 450.177 li
206.749 449.709 li
205.86 450.933 li
206.749 452.157 li
205.31 451.689 li
204.421 452.913 li
204.421 451.401 li
cp
218.806 449.292 mo
220.244 448.824 li
220.244 447.311 li
221.134 448.535 li
222.572 448.068 li
221.683 449.292 li
222.572 450.515 li
221.134 450.048 li
220.244 451.272 li
220.244 449.759 li
cp
235.987 447.65 mo
237.426 447.183 li
237.426 445.67 li
238.315 446.894 li
239.754 446.426 li
238.865 447.65 li
239.754 448.874 li
238.315 448.406 li
237.426 449.63 li
237.426 448.117 li
cp
254.889 446.008 mo
256.328 445.541 li
256.328 444.028 li
257.217 445.252 li
258.656 444.785 li
257.767 446.008 li
258.656 447.232 li
257.217 446.765 li
256.328 447.989 li
256.328 446.476 li
cp
.883665 .769161 0 0 cmyk
@
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -12.3387 -12.3387 0 0 0 ]msf170.299 499.801 mo(\(e\))[-4.1087 -6.86032 0 ]yshgrestore
gsave
286.245 518.811 mo
286.245 397.322 li
158.641 397.322 li
158.641 518.811 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4405 -10.4405 0 0 0 ]msf170.299 483.238 mo(27 GeV)[-5.80493 -5.8049 -2.90247 -8.12271 -5.80493 0 ]yshgrestore
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
@
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
ef
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
@
.75 lw
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
@
.75 lw
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 397.322 mo
158.641 287.384 li
@
155.194 381.862 mo
158.641 381.862 li
@
156.917 373.273 mo
158.641 373.273 li
@
156.917 364.684 mo
158.641 364.684 li
@
156.917 356.096 mo
158.641 356.096 li
@
155.194 347.507 mo
158.641 347.507 li
@
156.917 338.918 mo
158.641 338.918 li
@
156.917 330.329 mo
158.641 330.329 li
@
156.917 321.74 mo
158.641 321.74 li
@
155.194 313.151 mo
158.641 313.151 li
@
155.194 381.862 mo
158.641 381.862 li
@
156.917 390.451 mo
158.641 390.451 li
@
155.194 313.151 mo
158.641 313.151 li
@
156.917 304.562 mo
158.641 304.562 li
@
156.917 295.973 mo
158.641 295.973 li
@
156.917 287.384 mo
158.641 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 385.28 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 390.485 mo(-)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 350.734 mo(0)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 319.028 mo(20)[-5.79636 0 ]yshgrestore
43.766 397.322 mo
43.766 287.384 li
@
47.213 381.862 mo
43.766 381.862 li
@
45.49 373.273 mo
43.766 373.273 li
@
45.49 364.684 mo
43.766 364.684 li
@
45.49 356.096 mo
43.766 356.096 li
@
47.213 347.507 mo
43.766 347.507 li
@
45.49 338.918 mo
43.766 338.918 li
@
45.49 330.329 mo
43.766 330.329 li
@
45.49 321.74 mo
43.766 321.74 li
@
47.213 313.151 mo
43.766 313.151 li
@
47.213 381.862 mo
43.766 381.862 li
@
45.49 390.451 mo
43.766 390.451 li
@
47.213 313.151 mo
43.766 313.151 li
@
45.49 304.562 mo
43.766 304.562 li
@
45.49 295.973 mo
43.766 295.973 li
@
45.49 287.384 mo
43.766 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 385.28 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 390.485 mo(-)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 350.734 mo(0)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 319.028 mo(20)[-5.79636 0 ]yshgrestore
158.641 397.322 mo
43.766 397.322 li
@
154.353 395.673 mo
154.353 397.322 li
@
151.809 395.673 mo
151.809 397.322 li
@
150.003 395.673 mo
150.003 397.322 li
@
148.603 395.673 mo
148.603 397.322 li
@
147.459 395.673 mo
147.459 397.322 li
@
146.492 395.673 mo
146.492 397.322 li
@
145.654 395.673 mo
145.654 397.322 li
@
144.914 395.673 mo
144.914 397.322 li
@
144.253 394.024 mo
144.253 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 408.468 mo(10)[-3.95209 0 ]yshgrestore
139.904 395.673 mo
139.904 397.322 li
@
137.359 395.673 mo
137.359 397.322 li
@
135.554 395.673 mo
135.554 397.322 li
@
134.153 395.673 mo
134.153 397.322 li
@
133.009 395.673 mo
133.009 397.322 li
@
132.042 395.673 mo
132.042 397.322 li
@
131.204 395.673 mo
131.204 397.322 li
@
130.465 395.673 mo
130.465 397.322 li
@
129.804 394.024 mo
129.804 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 403.263 mo(2)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 411.307 mo(10)[-3.95209 0 ]yshgrestore
125.454 395.673 mo
125.454 397.322 li
@
122.909 395.673 mo
122.909 397.322 li
@
121.104 395.673 mo
121.104 397.322 li
@
119.704 395.673 mo
119.704 397.322 li
@
118.56 395.673 mo
118.56 397.322 li
@
117.592 395.673 mo
117.592 397.322 li
@
116.754 395.673 mo
116.754 397.322 li
@
116.015 395.673 mo
116.015 397.322 li
@
115.354 394.024 mo
115.354 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 403.263 mo(3)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 411.307 mo(10)[-3.95209 0 ]yshgrestore
111.004 395.673 mo
111.004 397.322 li
@
108.46 395.673 mo
108.46 397.322 li
@
106.654 395.673 mo
106.654 397.322 li
@
105.254 395.673 mo
105.254 397.322 li
@
104.11 395.673 mo
104.11 397.322 li
@
103.142 395.673 mo
103.142 397.322 li
@
102.304 395.673 mo
102.304 397.322 li
@
101.565 395.673 mo
101.565 397.322 li
@
100.904 394.024 mo
100.904 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 403.263 mo(4)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 411.307 mo(10)[-3.95209 0 ]yshgrestore
96.554 395.673 mo
96.554 397.322 li
@
94.01 395.673 mo
94.01 397.322 li
@
92.205 395.673 mo
92.205 397.322 li
@
90.804 395.673 mo
90.804 397.322 li
@
89.66 395.673 mo
89.66 397.322 li
@
88.693 395.673 mo
88.693 397.322 li
@
87.855 395.673 mo
87.855 397.322 li
@
87.116 395.673 mo
87.116 397.322 li
@
86.454 394.024 mo
86.454 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 403.263 mo(5)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 411.307 mo(10)[-3.95209 0 ]yshgrestore
82.105 395.673 mo
82.105 397.322 li
@
79.56 395.673 mo
79.56 397.322 li
@
77.755 395.673 mo
77.755 397.322 li
@
76.355 395.673 mo
76.355 397.322 li
@
75.21 395.673 mo
75.21 397.322 li
@
74.243 395.673 mo
74.243 397.322 li
@
73.405 395.673 mo
73.405 397.322 li
@
72.666 395.673 mo
72.666 397.322 li
@
72.005 394.024 mo
72.005 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 403.263 mo(6)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 411.307 mo(10)[-3.95209 0 ]yshgrestore
67.655 395.673 mo
67.655 397.322 li
@
65.11 395.673 mo
65.11 397.322 li
@
63.305 395.673 mo
63.305 397.322 li
@
61.905 395.673 mo
61.905 397.322 li
@
60.761 395.673 mo
60.761 397.322 li
@
59.793 395.673 mo
59.793 397.322 li
@
58.955 395.673 mo
58.955 397.322 li
@
58.216 395.673 mo
58.216 397.322 li
@
57.555 394.024 mo
57.555 397.322 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 403.263 mo(7)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 411.307 mo(10)[-3.95209 0 ]yshgrestore
53.205 395.673 mo
53.205 397.322 li
@
50.661 395.673 mo
50.661 397.322 li
@
48.855 395.673 mo
48.855 397.322 li
@
47.455 395.673 mo
47.455 397.322 li
@
46.311 395.673 mo
46.311 397.322 li
@
45.344 395.673 mo
45.344 397.322 li
@
44.506 395.673 mo
44.506 397.322 li
@
158.641 287.384 mo
43.766 287.384 li
@
154.353 289.034 mo
154.353 287.384 li
@
151.809 289.034 mo
151.809 287.384 li
@
150.003 289.034 mo
150.003 287.384 li
@
148.603 289.034 mo
148.603 287.384 li
@
147.459 289.034 mo
147.459 287.384 li
@
146.492 289.034 mo
146.492 287.384 li
@
145.654 289.034 mo
145.654 287.384 li
@
144.914 289.034 mo
144.914 287.384 li
@
144.253 290.683 mo
144.253 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 284.009 mo(10)[-3.95209 0 ]yshgrestore
139.904 289.034 mo
139.904 287.384 li
@
137.359 289.034 mo
137.359 287.384 li
@
135.554 289.034 mo
135.554 287.384 li
@
134.153 289.034 mo
134.153 287.384 li
@
133.009 289.034 mo
133.009 287.384 li
@
132.042 289.034 mo
132.042 287.384 li
@
131.204 289.034 mo
131.204 287.384 li
@
130.465 289.034 mo
130.465 287.384 li
@
129.804 290.683 mo
129.804 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 275.964 mo(2)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 284.009 mo(10)[-3.95209 0 ]yshgrestore
125.454 289.034 mo
125.454 287.384 li
@
122.909 289.034 mo
122.909 287.384 li
@
121.104 289.034 mo
121.104 287.384 li
@
119.704 289.034 mo
119.704 287.384 li
@
118.56 289.034 mo
118.56 287.384 li
@
117.592 289.034 mo
117.592 287.384 li
@
116.754 289.034 mo
116.754 287.384 li
@
116.015 289.034 mo
116.015 287.384 li
@
115.354 290.683 mo
115.354 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 275.964 mo(3)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 284.009 mo(10)[-3.95209 0 ]yshgrestore
111.004 289.034 mo
111.004 287.384 li
@
108.46 289.034 mo
108.46 287.384 li
@
106.654 289.034 mo
106.654 287.384 li
@
105.254 289.034 mo
105.254 287.384 li
@
104.11 289.034 mo
104.11 287.384 li
@
103.142 289.034 mo
103.142 287.384 li
@
102.304 289.034 mo
102.304 287.384 li
@
101.565 289.034 mo
101.565 287.384 li
@
100.904 290.683 mo
100.904 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 275.964 mo(4)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 284.009 mo(10)[-3.95209 0 ]yshgrestore
96.554 289.034 mo
96.554 287.384 li
@
94.01 289.034 mo
94.01 287.384 li
@
92.205 289.034 mo
92.205 287.384 li
@
90.804 289.034 mo
90.804 287.384 li
@
89.66 289.034 mo
89.66 287.384 li
@
88.693 289.034 mo
88.693 287.384 li
@
87.855 289.034 mo
87.855 287.384 li
@
87.116 289.034 mo
87.116 287.384 li
@
86.454 290.683 mo
86.454 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 275.964 mo(5)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 284.009 mo(10)[-3.95209 0 ]yshgrestore
82.105 289.034 mo
82.105 287.384 li
@
79.56 289.034 mo
79.56 287.384 li
@
77.755 289.034 mo
77.755 287.384 li
@
76.355 289.034 mo
76.355 287.384 li
@
75.21 289.034 mo
75.21 287.384 li
@
74.243 289.034 mo
74.243 287.384 li
@
73.405 289.034 mo
73.405 287.384 li
@
72.666 289.034 mo
72.666 287.384 li
@
72.005 290.683 mo
72.005 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 275.964 mo(6)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 284.009 mo(10)[-3.95209 0 ]yshgrestore
67.655 289.034 mo
67.655 287.384 li
@
65.11 289.034 mo
65.11 287.384 li
@
63.305 289.034 mo
63.305 287.384 li
@
61.905 289.034 mo
61.905 287.384 li
@
60.761 289.034 mo
60.761 287.384 li
@
59.793 289.034 mo
59.793 287.384 li
@
58.955 289.034 mo
58.955 287.384 li
@
58.216 289.034 mo
58.216 287.384 li
@
57.555 290.683 mo
57.555 287.384 li
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 275.964 mo(7)shgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 284.009 mo(10)[-3.95209 0 ]yshgrestore
53.205 289.034 mo
53.205 287.384 li
@
50.661 289.034 mo
50.661 287.384 li
@
48.855 289.034 mo
48.855 287.384 li
@
47.455 289.034 mo
47.455 287.384 li
@
46.311 289.034 mo
46.311 287.384 li
@
45.344 289.034 mo
45.344 287.384 li
@
44.506 289.034 mo
44.506 287.384 li
@
151.809 365.908 mo
149.032 365.908 149.032 361.743 151.809 361.743 cv
154.585 361.743 154.585 365.908 151.809 365.908 cv
cp
146.492 364.19 mo
143.715 364.19 143.715 360.026 146.492 360.026 cv
149.268 360.026 149.268 364.19 146.492 364.19 cv
cp
135.1 362.472 mo
132.324 362.472 132.324 358.308 135.1 358.308 cv
137.876 358.308 137.876 362.472 135.1 362.472 cv
cp
127.386 360.754 mo
124.61 360.754 124.61 356.59 127.386 356.59 cv
130.162 356.59 130.162 360.754 127.386 360.754 cv
cp
120.421 359.037 mo
117.645 359.037 117.645 354.872 120.421 354.872 cv
123.197 354.872 123.197 359.037 120.421 359.037 cv
cp
115.024 357.319 mo
112.248 357.319 112.248 353.154 115.024 353.154 cv
117.8 353.154 117.8 357.319 115.024 357.319 cv
cp
109.319 355.601 mo
106.543 355.601 106.543 351.437 109.319 351.437 cv
112.095 351.437 112.095 355.601 109.319 355.601 cv
cp
104.755 353.883 mo
101.978 353.883 101.978 349.719 104.755 349.719 cv
107.531 349.719 107.531 353.883 104.755 353.883 cv
cp
100.924 352.166 mo
98.147 352.166 98.147 348.001 100.924 348.001 cv
103.7 348.001 103.7 352.166 100.924 352.166 cv
cp
97.527 350.448 mo
94.751 350.448 94.751 346.283 97.527 346.283 cv
100.303 346.283 100.303 350.448 97.527 350.448 cv
cp
94.768 348.73 mo
91.992 348.73 91.992 344.566 94.768 344.566 cv
97.545 344.566 97.545 348.73 94.768 348.73 cv
cp
92.719 347.012 mo
89.943 347.012 89.943 342.848 92.719 342.848 cv
95.496 342.848 95.496 347.012 92.719 347.012 cv
cp
91.329 345.294 mo
88.553 345.294 88.553 341.13 91.329 341.13 cv
94.106 341.13 94.106 345.294 91.329 345.294 cv
cp
90.587 343.577 mo
87.81 343.577 87.81 339.412 90.587 339.412 cv
93.363 339.412 93.363 343.577 90.587 343.577 cv
cp
90.522 341.859 mo
87.745 341.859 87.745 337.694 90.522 337.694 cv
93.298 337.694 93.298 341.859 90.522 341.859 cv
cp
91.005 340.141 mo
88.229 340.141 88.229 335.977 91.005 335.977 cv
93.781 335.977 93.781 340.141 91.005 340.141 cv
cp
92.094 338.423 mo
89.317 338.423 89.317 334.259 92.094 334.259 cv
94.87 334.259 94.87 338.423 92.094 338.423 cv
cp
93.721 336.706 mo
90.945 336.706 90.945 332.541 93.721 332.541 cv
96.498 332.541 96.498 336.706 93.721 336.706 cv
cp
95.865 334.988 mo
93.089 334.988 93.089 330.823 95.865 330.823 cv
98.642 330.823 98.642 334.988 95.865 334.988 cv
cp
98.532 333.27 mo
95.756 333.27 95.756 329.106 98.532 329.106 cv
101.308 329.106 101.308 333.27 98.532 333.27 cv
cp
101.637 331.552 mo
98.861 331.552 98.861 327.388 101.637 327.388 cv
104.413 327.388 104.413 331.552 101.637 331.552 cv
cp
105.09 329.834 mo
102.314 329.834 102.314 325.67 105.09 325.67 cv
107.867 325.67 107.867 329.834 105.09 329.834 cv
cp
109.072 328.117 mo
106.296 328.117 106.296 323.952 109.072 323.952 cv
111.848 323.952 111.848 328.117 109.072 328.117 cv
cp
113.378 326.399 mo
110.602 326.399 110.602 322.234 113.378 322.234 cv
116.155 322.234 116.155 326.399 113.378 326.399 cv
cp
117.971 324.681 mo
115.195 324.681 115.195 320.517 117.971 320.517 cv
120.747 320.517 120.747 324.681 117.971 324.681 cv
cp
122.994 322.963 mo
120.217 322.963 120.217 318.799 122.994 318.799 cv
125.77 318.799 125.77 322.963 122.994 322.963 cv
cp
129.497 321.246 mo
126.721 321.246 126.721 317.081 129.497 317.081 cv
132.274 317.081 132.274 321.246 129.497 321.246 cv
cp
133.555 319.528 mo
130.779 319.528 130.779 315.363 133.555 315.363 cv
136.332 315.363 136.332 319.528 133.555 319.528 cv
cp
142.607 317.81 mo
139.831 317.81 139.831 313.646 142.607 313.646 cv
145.383 313.646 145.383 317.81 142.607 317.81 cv
cp
147.459 316.092 mo
144.683 316.092 144.683 311.928 147.459 311.928 cv
150.235 311.928 150.235 316.092 147.459 316.092 cv
cp
151.809 314.374 mo
149.032 314.374 149.032 310.21 151.809 310.21 cv
154.585 310.21 154.585 314.374 151.809 314.374 cv
cp
154.353 312.657 mo
151.577 312.657 151.577 308.492 154.353 308.492 cv
157.129 308.492 157.129 312.657 154.353 312.657 cv
cp
@
150.685 360.754 mo
150.685 356.59 li
146.521 356.59 li
146.521 360.754 li
cp
134.785 359.037 mo
134.785 354.873 li
130.621 354.873 li
130.621 359.037 li
cp
123.031 357.319 mo
123.031 353.155 li
118.867 353.155 li
118.867 357.319 li
cp
112.463 355.601 mo
112.463 351.437 li
108.299 351.437 li
108.299 355.601 li
cp
102.869 353.883 mo
102.869 349.719 li
98.7046 349.719 li
98.7046 353.883 li
cp
94.794 352.166 mo
94.794 348.002 li
90.6296 348.002 li
90.6296 352.166 li
cp
88.548 350.448 mo
88.548 346.284 li
84.3836 346.284 li
84.3836 350.448 li
cp
84.679 348.73 mo
84.679 344.566 li
80.5146 344.566 li
80.5146 348.73 li
cp
84.004 347.012 mo
84.004 342.848 li
79.8396 342.848 li
79.8396 347.012 li
cp
85.707 345.294 mo
85.707 341.13 li
81.5426 341.13 li
81.5426 345.294 li
cp
89.198 343.577 mo
89.198 339.413 li
85.0336 339.413 li
85.0336 343.577 li
cp
94.112 341.859 mo
94.112 337.695 li
89.9476 337.695 li
89.9476 341.859 li
cp
100.038 340.141 mo
100.038 335.977 li
95.8736 335.977 li
95.8736 340.141 li
cp
107.062 338.423 mo
107.062 334.259 li
102.898 334.259 li
102.898 338.423 li
cp
114.98 336.706 mo
114.98 332.542 li
110.816 332.542 li
110.816 336.706 li
cp
123.377 334.988 mo
123.377 330.824 li
119.213 330.824 li
119.213 334.988 li
cp
131.58 333.27 mo
131.58 329.106 li
127.416 329.106 li
127.416 333.27 li
cp
142.647 331.552 mo
142.647 327.388 li
138.483 327.388 li
138.483 331.552 li
cp
153.891 329.834 mo
153.891 325.67 li
149.727 325.67 li
149.727 329.834 li
cp
0 .993988 1 0 cmyk
@
149.727 353.519 mo
151.165 353.051 li
151.165 351.539 li
152.055 352.762 li
153.493 352.295 li
152.604 353.519 li
153.493 354.743 li
152.055 354.275 li
151.165 355.499 li
151.165 353.986 li
cp
132.198 351.801 mo
133.637 351.334 li
133.637 349.821 li
134.526 351.045 li
135.965 350.577 li
135.075 351.801 li
135.965 353.025 li
134.526 352.557 li
133.637 353.781 li
133.637 352.269 li
cp
109.832 350.083 mo
111.271 349.616 li
111.271 348.103 li
112.16 349.327 li
113.599 348.859 li
112.709 350.083 li
113.599 351.307 li
112.16 350.84 li
111.271 352.064 li
111.271 350.551 li
cp
89.645 348.366 mo
91.084 347.898 li
91.084 346.385 li
91.973 347.609 li
93.412 347.142 li
92.523 348.366 li
93.412 349.589 li
91.973 349.122 li
91.084 350.346 li
91.084 348.833 li
cp
73.593 346.648 mo
75.031 346.18 li
75.031 344.667 li
75.921 345.891 li
77.359 345.424 li
76.47 346.648 li
77.359 347.872 li
75.921 347.404 li
75.031 348.628 li
75.031 347.115 li
cp
85.665 344.93 mo
87.104 344.462 li
87.104 342.95 li
87.993 344.174 li
89.432 343.706 li
88.543 344.93 li
89.432 346.154 li
87.993 345.686 li
87.104 346.91 li
87.104 345.397 li
cp
101.419 343.212 mo
102.858 342.745 li
102.858 341.232 li
103.747 342.456 li
105.186 341.988 li
104.297 343.212 li
105.186 344.436 li
103.747 343.969 li
102.858 345.192 li
102.858 343.68 li
cp
119.753 341.494 mo
121.192 341.027 li
121.192 339.514 li
122.081 340.738 li
123.52 340.271 li
122.631 341.494 li
123.52 342.718 li
122.081 342.251 li
121.192 343.475 li
121.192 341.962 li
cp
139.627 339.777 mo
141.065 339.309 li
141.065 337.796 li
141.955 339.02 li
143.393 338.553 li
142.504 339.777 li
143.393 341.001 li
141.955 340.533 li
141.065 341.757 li
141.065 340.244 li
cp
.883665 .769161 0 0 cmyk
@
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 13116 69 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
0000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/b 69 def
end
RKEPLS+Helvetica /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 3{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e 10{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf55.304 394.271 mo(\(b\))[-4.10269 -6.85025 0 ]yshgrestore
gsave
158.641 397.322 mo
158.641 287.384 li
43.767 287.384 li
43.767 397.322 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf55.304 376.762 mo(11.5 GeV)[-5.79636 -5.79636 -2.89819 -5.79636 -2.89816 -8.11072 -5.79636 0 ]yshgrestore
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
0 0 0 0 cmyk
ef
.4 lw
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
@
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
ef
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
@
.75 lw
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
0 0 0 0 cmyk
ef
.4 lw
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
@
.75 lw
273.484 397.322 mo
273.484 287.384 li
158.64 287.384 li
158.64 397.322 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 397.322 mo
273.484 287.384 li
@
269.656 381.862 mo
273.484 381.862 li
@
271.57 373.273 mo
273.484 373.273 li
@
271.57 364.684 mo
273.484 364.684 li
@
271.57 356.096 mo
273.484 356.096 li
@
269.656 347.507 mo
273.484 347.507 li
@
271.57 338.918 mo
273.484 338.918 li
@
271.57 330.329 mo
273.484 330.329 li
@
271.57 321.74 mo
273.484 321.74 li
@
269.656 313.151 mo
273.484 313.151 li
@
269.656 381.862 mo
273.484 381.862 li
@
271.57 390.451 mo
273.484 390.451 li
@
269.656 313.151 mo
273.484 313.151 li
@
271.57 304.562 mo
273.484 304.562 li
@
271.57 295.973 mo
273.484 295.973 li
@
271.57 287.384 mo
273.484 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 385.28 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 390.485 mo(-)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 350.734 mo(0)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 319.028 mo(20)[-5.79636 0 ]yshgrestore
158.641 397.322 mo
158.641 287.384 li
@
162.469 381.862 mo
158.641 381.862 li
@
160.555 373.273 mo
158.641 373.273 li
@
160.555 364.684 mo
158.641 364.684 li
@
160.555 356.096 mo
158.641 356.096 li
@
162.469 347.507 mo
158.641 347.507 li
@
160.555 338.918 mo
158.641 338.918 li
@
160.555 330.329 mo
158.641 330.329 li
@
160.555 321.74 mo
158.641 321.74 li
@
162.469 313.151 mo
158.641 313.151 li
@
162.469 381.862 mo
158.641 381.862 li
@
160.555 390.451 mo
158.641 390.451 li
@
162.469 313.151 mo
158.641 313.151 li
@
160.555 304.562 mo
158.641 304.562 li
@
160.555 295.973 mo
158.641 295.973 li
@
160.555 287.384 mo
158.641 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 385.28 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 390.485 mo(-)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 350.734 mo(0)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 319.028 mo(20)[-5.79636 0 ]yshgrestore
273.484 397.322 mo
158.641 397.322 li
@
269.198 395.838 mo
269.198 397.322 li
@
266.654 395.838 mo
266.654 397.322 li
@
264.849 395.838 mo
264.849 397.322 li
@
263.45 395.838 mo
263.45 397.322 li
@
262.306 395.838 mo
262.306 397.322 li
@
261.339 395.838 mo
261.339 397.322 li
@
260.501 395.838 mo
260.501 397.322 li
@
259.762 395.838 mo
259.762 397.322 li
@
259.101 394.354 mo
259.101 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 408.468 mo(10)[-3.95209 0 ]yshgrestore
254.752 395.838 mo
254.752 397.322 li
@
252.208 395.838 mo
252.208 397.322 li
@
250.404 395.838 mo
250.404 397.322 li
@
249.004 395.838 mo
249.004 397.322 li
@
247.86 395.838 mo
247.86 397.322 li
@
246.893 395.838 mo
246.893 397.322 li
@
246.055 395.838 mo
246.055 397.322 li
@
245.316 395.838 mo
245.316 397.322 li
@
244.655 394.354 mo
244.655 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 403.263 mo(2)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 411.307 mo(10)[-3.95209 0 ]yshgrestore
240.306 395.838 mo
240.306 397.322 li
@
237.763 395.838 mo
237.763 397.322 li
@
235.958 395.838 mo
235.958 397.322 li
@
234.558 395.838 mo
234.558 397.322 li
@
233.414 395.838 mo
233.414 397.322 li
@
232.447 395.838 mo
232.447 397.322 li
@
231.609 395.838 mo
231.609 397.322 li
@
230.87 395.838 mo
230.87 397.322 li
@
230.209 394.354 mo
230.209 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 403.263 mo(3)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 411.307 mo(10)[-3.95209 0 ]yshgrestore
225.86 395.838 mo
225.86 397.322 li
@
223.317 395.838 mo
223.317 397.322 li
@
221.512 395.838 mo
221.512 397.322 li
@
220.112 395.838 mo
220.112 397.322 li
@
218.968 395.838 mo
218.968 397.322 li
@
218.001 395.838 mo
218.001 397.322 li
@
217.163 395.838 mo
217.163 397.322 li
@
216.424 395.838 mo
216.424 397.322 li
@
215.763 394.354 mo
215.763 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 403.263 mo(4)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 411.307 mo(10)[-3.95209 0 ]yshgrestore
211.415 395.838 mo
211.415 397.322 li
@
208.871 395.838 mo
208.871 397.322 li
@
207.066 395.838 mo
207.066 397.322 li
@
205.666 395.838 mo
205.666 397.322 li
@
204.522 395.838 mo
204.522 397.322 li
@
203.555 395.838 mo
203.555 397.322 li
@
202.717 395.838 mo
202.717 397.322 li
@
201.978 395.838 mo
201.978 397.322 li
@
201.317 394.354 mo
201.317 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 403.263 mo(5)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 411.307 mo(10)[-3.95209 0 ]yshgrestore
196.969 395.838 mo
196.969 397.322 li
@
194.425 395.838 mo
194.425 397.322 li
@
192.62 395.838 mo
192.62 397.322 li
@
191.22 395.838 mo
191.22 397.322 li
@
190.076 395.838 mo
190.076 397.322 li
@
189.109 395.838 mo
189.109 397.322 li
@
188.271 395.838 mo
188.271 397.322 li
@
187.532 395.838 mo
187.532 397.322 li
@
186.871 394.354 mo
186.871 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 403.263 mo(6)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 411.307 mo(10)[-3.95209 0 ]yshgrestore
182.523 395.838 mo
182.523 397.322 li
@
179.979 395.838 mo
179.979 397.322 li
@
178.174 395.838 mo
178.174 397.322 li
@
176.774 395.838 mo
176.774 397.322 li
@
175.63 395.838 mo
175.63 397.322 li
@
174.663 395.838 mo
174.663 397.322 li
@
173.825 395.838 mo
173.825 397.322 li
@
173.086 395.838 mo
173.086 397.322 li
@
172.425 394.354 mo
172.425 397.322 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 403.263 mo(7)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 411.307 mo(10)[-3.95209 0 ]yshgrestore
168.077 395.838 mo
168.077 397.322 li
@
165.533 395.838 mo
165.533 397.322 li
@
163.728 395.838 mo
163.728 397.322 li
@
162.328 395.838 mo
162.328 397.322 li
@
161.184 395.838 mo
161.184 397.322 li
@
160.217 395.838 mo
160.217 397.322 li
@
159.38 395.838 mo
159.38 397.322 li
@
273.484 287.384 mo
158.641 287.384 li
@
269.198 288.869 mo
269.198 287.384 li
@
266.654 288.869 mo
266.654 287.384 li
@
264.849 288.869 mo
264.849 287.384 li
@
263.45 288.869 mo
263.45 287.384 li
@
262.306 288.869 mo
262.306 287.384 li
@
261.339 288.869 mo
261.339 287.384 li
@
260.501 288.869 mo
260.501 287.384 li
@
259.762 288.869 mo
259.762 287.384 li
@
259.101 290.353 mo
259.101 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 284.009 mo(10)[-3.95209 0 ]yshgrestore
254.752 288.869 mo
254.752 287.384 li
@
252.208 288.869 mo
252.208 287.384 li
@
250.404 288.869 mo
250.404 287.384 li
@
249.004 288.869 mo
249.004 287.384 li
@
247.86 288.869 mo
247.86 287.384 li
@
246.893 288.869 mo
246.893 287.384 li
@
246.055 288.869 mo
246.055 287.384 li
@
245.316 288.869 mo
245.316 287.384 li
@
244.655 290.353 mo
244.655 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 275.964 mo(2)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 284.009 mo(10)[-3.95209 0 ]yshgrestore
240.306 288.869 mo
240.306 287.384 li
@
237.763 288.869 mo
237.763 287.384 li
@
235.958 288.869 mo
235.958 287.384 li
@
234.558 288.869 mo
234.558 287.384 li
@
233.414 288.869 mo
233.414 287.384 li
@
232.447 288.869 mo
232.447 287.384 li
@
231.609 288.869 mo
231.609 287.384 li
@
230.87 288.869 mo
230.87 287.384 li
@
230.209 290.353 mo
230.209 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 275.964 mo(3)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 284.009 mo(10)[-3.95209 0 ]yshgrestore
225.86 288.869 mo
225.86 287.384 li
@
223.317 288.869 mo
223.317 287.384 li
@
221.512 288.869 mo
221.512 287.384 li
@
220.112 288.869 mo
220.112 287.384 li
@
218.968 288.869 mo
218.968 287.384 li
@
218.001 288.869 mo
218.001 287.384 li
@
217.163 288.869 mo
217.163 287.384 li
@
216.424 288.869 mo
216.424 287.384 li
@
215.763 290.353 mo
215.763 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 275.964 mo(4)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 284.009 mo(10)[-3.95209 0 ]yshgrestore
211.415 288.869 mo
211.415 287.384 li
@
208.871 288.869 mo
208.871 287.384 li
@
207.066 288.869 mo
207.066 287.384 li
@
205.666 288.869 mo
205.666 287.384 li
@
204.522 288.869 mo
204.522 287.384 li
@
203.555 288.869 mo
203.555 287.384 li
@
202.717 288.869 mo
202.717 287.384 li
@
201.978 288.869 mo
201.978 287.384 li
@
201.317 290.353 mo
201.317 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 275.964 mo(5)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 284.009 mo(10)[-3.95209 0 ]yshgrestore
196.969 288.869 mo
196.969 287.384 li
@
194.425 288.869 mo
194.425 287.384 li
@
192.62 288.869 mo
192.62 287.384 li
@
191.22 288.869 mo
191.22 287.384 li
@
190.076 288.869 mo
190.076 287.384 li
@
189.109 288.869 mo
189.109 287.384 li
@
188.271 288.869 mo
188.271 287.384 li
@
187.532 288.869 mo
187.532 287.384 li
@
186.871 290.353 mo
186.871 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 275.964 mo(6)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 284.009 mo(10)[-3.95209 0 ]yshgrestore
182.523 288.869 mo
182.523 287.384 li
@
179.979 288.869 mo
179.979 287.384 li
@
178.174 288.869 mo
178.174 287.384 li
@
176.774 288.869 mo
176.774 287.384 li
@
175.63 288.869 mo
175.63 287.384 li
@
174.663 288.869 mo
174.663 287.384 li
@
173.825 288.869 mo
173.825 287.384 li
@
173.086 288.869 mo
173.086 287.384 li
@
172.425 290.353 mo
172.425 287.384 li
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 275.964 mo(7)shgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 284.009 mo(10)[-3.95209 0 ]yshgrestore
168.077 288.869 mo
168.077 287.384 li
@
165.533 288.869 mo
165.533 287.384 li
@
163.728 288.869 mo
163.728 287.384 li
@
162.328 288.869 mo
162.328 287.384 li
@
161.184 288.869 mo
161.184 287.384 li
@
160.217 288.869 mo
160.217 287.384 li
@
159.38 288.869 mo
159.38 287.384 li
@
269.198 379.65 mo
266.422 379.65 266.422 375.486 269.198 375.486 cv
271.974 375.486 271.974 379.65 269.198 379.65 cv
cp
260.501 377.932 mo
257.725 377.932 257.725 373.768 260.501 373.768 cv
263.277 373.768 263.277 377.932 260.501 377.932 cv
cp
255.413 376.214 mo
252.637 376.214 252.637 372.05 255.413 372.05 cv
258.189 372.05 258.189 376.214 255.413 376.214 cv
cp
248.182 374.497 mo
245.405 374.497 245.405 370.332 248.182 370.332 cv
250.958 370.332 250.958 374.497 248.182 374.497 cv
cp
241.18 372.779 mo
238.404 372.779 238.404 368.614 241.18 368.614 cv
243.956 368.614 243.956 372.779 241.18 372.779 cv
cp
235.864 371.061 mo
233.088 371.061 233.088 366.897 235.864 366.897 cv
238.641 366.897 238.641 371.061 235.864 371.061 cv
cp
229.715 369.343 mo
226.938 369.343 226.938 365.179 229.715 365.179 cv
232.491 365.179 232.491 369.343 229.715 369.343 cv
cp
224.891 367.625 mo
222.115 367.625 222.115 363.461 224.891 363.461 cv
227.668 363.461 227.668 367.625 224.891 367.625 cv
cp
219.812 365.908 mo
217.035 365.908 217.035 361.743 219.812 361.743 cv
222.588 361.743 222.588 365.908 219.812 365.908 cv
cp
215.186 364.19 mo
212.41 364.19 212.41 360.026 215.186 360.026 cv
217.963 360.026 217.963 364.19 215.186 364.19 cv
cp
211.005 362.472 mo
208.229 362.472 208.229 358.308 211.005 358.308 cv
213.782 358.308 213.782 362.472 211.005 362.472 cv
cp
207.022 360.754 mo
204.246 360.754 204.246 356.59 207.022 356.59 cv
209.798 356.59 209.798 360.754 207.022 360.754 cv
cp
203.577 359.037 mo
200.8 359.037 200.8 354.872 203.577 354.872 cv
206.353 354.872 206.353 359.037 203.577 359.037 cv
cp
200.483 357.319 mo
197.707 357.319 197.707 353.154 200.483 353.154 cv
203.259 353.154 203.259 357.319 200.483 357.319 cv
cp
197.742 355.601 mo
194.966 355.601 194.966 351.437 197.742 351.437 cv
200.519 351.437 200.519 355.601 197.742 355.601 cv
cp
195.43 353.883 mo
192.653 353.883 192.653 349.719 195.43 349.719 cv
198.206 349.719 198.206 353.883 195.43 353.883 cv
cp
193.506 352.166 mo
190.73 352.166 190.73 348.001 193.506 348.001 cv
196.282 348.001 196.282 352.166 193.506 352.166 cv
cp
191.988 350.448 mo
189.212 350.448 189.212 346.283 191.988 346.283 cv
194.765 346.283 194.765 350.448 191.988 350.448 cv
cp
190.913 348.73 mo
188.137 348.73 188.137 344.566 190.913 344.566 cv
193.689 344.566 193.689 348.73 190.913 348.73 cv
cp
190.246 347.012 mo
187.469 347.012 187.469 342.848 190.246 342.848 cv
193.022 342.848 193.022 347.012 190.246 347.012 cv
cp
189.981 345.294 mo
187.205 345.294 187.205 341.13 189.981 341.13 cv
192.758 341.13 192.758 345.294 189.981 345.294 cv
cp
190.155 343.577 mo
187.379 343.577 187.379 339.412 190.155 339.412 cv
192.931 339.412 192.931 343.577 190.155 343.577 cv
cp
190.703 341.859 mo
187.927 341.859 187.927 337.694 190.703 337.694 cv
193.48 337.694 193.48 341.859 190.703 341.859 cv
cp
191.646 340.141 mo
188.87 340.141 188.87 335.977 191.646 335.977 cv
194.423 335.977 194.423 340.141 191.646 340.141 cv
cp
193.026 338.423 mo
190.249 338.423 190.249 334.259 193.026 334.259 cv
195.802 334.259 195.802 338.423 193.026 338.423 cv
cp
194.739 336.706 mo
191.962 336.706 191.962 332.541 194.739 332.541 cv
197.515 332.541 197.515 336.706 194.739 336.706 cv
cp
196.85 334.988 mo
194.074 334.988 194.074 330.823 196.85 330.823 cv
199.627 330.823 199.627 334.988 196.85 334.988 cv
cp
199.337 333.27 mo
196.56 333.27 196.56 329.106 199.337 329.106 cv
202.113 329.106 202.113 333.27 199.337 333.27 cv
cp
202.125 331.552 mo
199.348 331.552 199.348 327.388 202.125 327.388 cv
204.901 327.388 204.901 331.552 202.125 331.552 cv
cp
205.264 329.834 mo
202.488 329.834 202.488 325.67 205.264 325.67 cv
208.04 325.67 208.04 329.834 205.264 329.834 cv
cp
208.792 328.117 mo
206.016 328.117 206.016 323.952 208.792 323.952 cv
211.569 323.952 211.569 328.117 208.792 328.117 cv
cp
212.585 326.399 mo
209.809 326.399 209.809 322.234 212.585 322.234 cv
215.362 322.234 215.362 326.399 212.585 326.399 cv
cp
216.792 324.681 mo
214.016 324.681 214.016 320.517 216.792 320.517 cv
219.569 320.517 219.569 324.681 216.792 324.681 cv
cp
221.027 322.963 mo
218.251 322.963 218.251 318.799 221.027 318.799 cv
223.804 318.799 223.804 322.963 221.027 322.963 cv
cp
225.798 321.246 mo
223.022 321.246 223.022 317.081 225.798 317.081 cv
228.574 317.081 228.574 321.246 225.798 321.246 cv
cp
230.746 319.528 mo
227.97 319.528 227.97 315.363 230.746 315.363 cv
233.522 315.363 233.522 319.528 230.746 319.528 cv
cp
235.818 317.81 mo
233.042 317.81 233.042 313.646 235.818 313.646 cv
238.594 313.646 238.594 317.81 235.818 317.81 cv
cp
240.728 316.092 mo
237.952 316.092 237.952 311.928 240.728 311.928 cv
243.504 311.928 243.504 316.092 240.728 316.092 cv
cp
247.358 314.374 mo
244.581 314.374 244.581 310.21 247.358 310.21 cv
250.134 310.21 250.134 314.374 247.358 314.374 cv
cp
253.608 312.657 mo
250.832 312.657 250.832 308.492 253.608 308.492 cv
256.385 308.492 256.385 312.657 253.608 312.657 cv
cp
256.557 310.939 mo
253.781 310.939 253.781 306.774 256.557 306.774 cv
259.333 306.774 259.333 310.939 256.557 310.939 cv
cp
263.45 309.221 mo
260.673 309.221 260.673 305.057 263.45 305.057 cv
266.226 305.057 266.226 309.221 263.45 309.221 cv
cp
266.654 307.503 mo
263.878 307.503 263.878 303.339 266.654 303.339 cv
269.431 303.339 269.431 307.503 266.654 307.503 cv
cp
@
266.932 369.343 mo
266.932 365.179 li
262.767 365.179 li
262.767 369.343 li
cp
259.537 367.625 mo
259.537 363.461 li
255.373 363.461 li
255.373 367.625 li
cp
247.831 365.908 mo
247.831 361.744 li
243.667 361.744 li
243.667 365.908 li
cp
238.495 364.19 mo
238.495 360.026 li
234.331 360.026 li
234.331 364.19 li
cp
228.878 362.472 mo
228.878 358.308 li
224.713 358.308 li
224.713 362.472 li
cp
220.258 360.754 mo
220.258 356.59 li
216.094 356.59 li
216.094 360.754 li
cp
212.26 359.037 mo
212.26 354.873 li
208.096 354.873 li
208.096 359.037 li
cp
204.987 357.319 mo
204.987 353.155 li
200.823 353.155 li
200.823 357.319 li
cp
198.587 355.601 mo
198.587 351.437 li
194.423 351.437 li
194.423 355.601 li
cp
193.106 353.883 mo
193.106 349.719 li
188.942 349.719 li
188.942 353.883 li
cp
188.778 352.166 mo
188.778 348.002 li
184.614 348.002 li
184.614 352.166 li
cp
185.722 350.448 mo
185.722 346.284 li
181.558 346.284 li
181.558 350.448 li
cp
184.138 348.73 mo
184.138 344.566 li
179.974 344.566 li
179.974 348.73 li
cp
184.123 347.012 mo
184.123 342.848 li
179.959 342.848 li
179.959 347.012 li
cp
185.566 345.294 mo
185.566 341.13 li
181.402 341.13 li
181.402 345.294 li
cp
188.306 343.577 mo
188.306 339.413 li
184.142 339.413 li
184.142 343.577 li
cp
192.146 341.859 mo
192.146 337.695 li
187.982 337.695 li
187.982 341.859 li
cp
196.95 340.141 mo
196.95 335.977 li
192.786 335.977 li
192.786 340.141 li
cp
202.564 338.423 mo
202.564 334.259 li
198.4 334.259 li
198.4 338.423 li
cp
208.93 336.706 mo
208.93 332.542 li
204.766 332.542 li
204.766 336.706 li
cp
215.902 334.988 mo
215.902 330.824 li
211.738 330.824 li
211.738 334.988 li
cp
223.539 333.27 mo
223.539 329.106 li
219.375 329.106 li
219.375 333.27 li
cp
231.625 331.552 mo
231.625 327.388 li
227.461 327.388 li
227.461 331.552 li
cp
240.255 329.834 mo
240.255 325.67 li
236.091 325.67 li
236.091 329.834 li
cp
249.44 328.117 mo
249.44 323.953 li
245.275 323.953 li
245.275 328.117 li
cp
257.854 326.399 mo
257.854 322.235 li
253.69 322.235 li
253.69 326.399 li
cp
266.932 324.681 mo
266.932 320.517 li
262.767 320.517 li
262.767 324.681 li
cp
0 .993988 1 0 cmyk
@
256.421 355.237 mo
257.859 354.769 li
257.859 353.256 li
258.749 354.48 li
260.188 354.013 li
259.298 355.237 li
260.188 356.461 li
258.749 355.993 li
257.859 357.217 li
257.859 355.704 li
cp
235.85 353.519 mo
237.289 353.051 li
237.289 351.539 li
238.178 352.762 li
239.617 352.295 li
238.727 353.519 li
239.617 354.743 li
238.178 354.275 li
237.289 355.499 li
237.289 353.986 li
cp
217.231 351.801 mo
218.669 351.334 li
218.669 349.821 li
219.559 351.045 li
220.997 350.577 li
220.108 351.801 li
220.997 353.025 li
219.559 352.557 li
218.669 353.781 li
218.669 352.269 li
cp
200.651 350.083 mo
202.09 349.616 li
202.09 348.103 li
202.979 349.327 li
204.418 348.859 li
203.528 350.083 li
204.418 351.307 li
202.979 350.84 li
202.09 352.064 li
202.09 350.551 li
cp
186.219 348.366 mo
187.658 347.898 li
187.658 346.385 li
188.547 347.609 li
189.986 347.142 li
189.097 348.366 li
189.986 349.589 li
188.547 349.122 li
187.658 350.346 li
187.658 348.833 li
cp
175.665 346.648 mo
177.103 346.18 li
177.103 344.667 li
177.993 345.891 li
179.431 345.424 li
178.542 346.648 li
179.431 347.872 li
177.993 347.404 li
177.103 348.628 li
177.103 347.115 li
cp
184.801 344.93 mo
186.24 344.462 li
186.24 342.95 li
187.129 344.174 li
188.568 343.706 li
187.679 344.93 li
188.568 346.154 li
187.129 345.686 li
186.24 346.91 li
186.24 345.397 li
cp
197.845 343.212 mo
199.284 342.745 li
199.284 341.232 li
200.173 342.456 li
201.612 341.988 li
200.723 343.212 li
201.612 344.436 li
200.173 343.969 li
199.284 345.192 li
199.284 343.68 li
cp
212.974 341.494 mo
214.413 341.027 li
214.413 339.514 li
215.302 340.738 li
216.741 340.271 li
215.852 341.494 li
216.741 342.718 li
215.302 342.251 li
214.413 343.475 li
214.413 341.962 li
cp
229.519 339.777 mo
230.958 339.309 li
230.958 337.796 li
231.847 339.02 li
233.286 338.553 li
232.396 339.777 li
233.286 341.001 li
231.847 340.533 li
230.958 341.757 li
230.958 340.244 li
cp
246.556 338.059 mo
247.995 337.591 li
247.995 336.079 li
248.884 337.302 li
250.323 336.835 li
249.433 338.059 li
250.323 339.283 li
248.884 338.815 li
247.995 340.039 li
247.995 338.526 li
cp
267.116 336.341 mo
268.555 335.874 li
268.555 334.361 li
269.444 335.585 li
270.883 335.117 li
269.993 336.341 li
270.883 337.565 li
269.444 337.097 li
268.555 338.321 li
268.555 336.809 li
cp
.883665 .769161 0 0 cmyk
@
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 14208 73 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/f 73 def
end
RKEPLS+Helvetica /Encoding get
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight 3{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f 9{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf170.299 394.271 mo(\(f\))[-4.10269 -3.42511 0 ]yshgrestore
gsave
286.245 397.322 mo
286.245 287.384 li
158.641 287.384 li
158.641 397.322 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 5032 28 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/nine 28 def
end
RKEPLS+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 2{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f 9{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf170.299 376.762 mo(39 GeV)[-5.79636 -5.79636 -2.89819 -8.11072 -5.79636 0 ]yshgrestore
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
@
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
ef
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
@
.75 lw
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
@
.75 lw
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 287.384 mo
158.641 177.447 li
@
155.194 271.924 mo
158.641 271.924 li
@
156.917 263.336 mo
158.641 263.336 li
@
156.917 254.747 mo
158.641 254.747 li
@
156.917 246.158 mo
158.641 246.158 li
@
155.194 237.569 mo
158.641 237.569 li
@
156.917 228.98 mo
158.641 228.98 li
@
156.917 220.391 mo
158.641 220.391 li
@
156.917 211.802 mo
158.641 211.802 li
@
155.194 203.213 mo
158.641 203.213 li
@
155.194 271.924 mo
158.641 271.924 li
@
156.917 280.513 mo
158.641 280.513 li
@
155.194 203.213 mo
158.641 203.213 li
@
156.917 194.625 mo
158.641 194.625 li
@
156.917 186.036 mo
158.641 186.036 li
@
156.917 177.447 mo
158.641 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 275.491 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 280.696 mo(-)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 240.472 mo(0)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 209.238 mo(20)[-5.79636 0 ]yshgrestore
43.766 287.384 mo
43.766 177.447 li
@
47.213 271.924 mo
43.766 271.924 li
@
45.49 263.336 mo
43.766 263.336 li
@
45.49 254.747 mo
43.766 254.747 li
@
45.49 246.158 mo
43.766 246.158 li
@
47.213 237.569 mo
43.766 237.569 li
@
45.49 228.98 mo
43.766 228.98 li
@
45.49 220.391 mo
43.766 220.391 li
@
45.49 211.802 mo
43.766 211.802 li
@
47.213 203.213 mo
43.766 203.213 li
@
47.213 271.924 mo
43.766 271.924 li
@
45.49 280.513 mo
43.766 280.513 li
@
47.213 203.213 mo
43.766 203.213 li
@
45.49 194.625 mo
43.766 194.625 li
@
45.49 186.036 mo
43.766 186.036 li
@
45.49 177.447 mo
43.766 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 275.491 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 280.696 mo(-)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 240.472 mo(0)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 209.238 mo(20)[-5.79636 0 ]yshgrestore
158.641 287.384 mo
43.766 287.384 li
@
154.353 285.735 mo
154.353 287.384 li
@
151.809 285.735 mo
151.809 287.384 li
@
150.003 285.735 mo
150.003 287.384 li
@
148.603 285.735 mo
148.603 287.384 li
@
147.459 285.735 mo
147.459 287.384 li
@
146.492 285.735 mo
146.492 287.384 li
@
145.654 285.735 mo
145.654 287.384 li
@
144.914 285.735 mo
144.914 287.384 li
@
144.253 284.086 mo
144.253 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 298.679 mo(10)[-3.95209 0 ]yshgrestore
139.904 285.735 mo
139.904 287.384 li
@
137.359 285.735 mo
137.359 287.384 li
@
135.554 285.735 mo
135.554 287.384 li
@
134.153 285.735 mo
134.153 287.384 li
@
133.009 285.735 mo
133.009 287.384 li
@
132.042 285.735 mo
132.042 287.384 li
@
131.204 285.735 mo
131.204 287.384 li
@
130.465 285.735 mo
130.465 287.384 li
@
129.804 284.086 mo
129.804 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 293.473 mo(2)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 301.518 mo(10)[-3.95209 0 ]yshgrestore
125.454 285.735 mo
125.454 287.384 li
@
122.909 285.735 mo
122.909 287.384 li
@
121.104 285.735 mo
121.104 287.384 li
@
119.704 285.735 mo
119.704 287.384 li
@
118.56 285.735 mo
118.56 287.384 li
@
117.592 285.735 mo
117.592 287.384 li
@
116.754 285.735 mo
116.754 287.384 li
@
116.015 285.735 mo
116.015 287.384 li
@
115.354 284.086 mo
115.354 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 293.473 mo(3)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 301.518 mo(10)[-3.95209 0 ]yshgrestore
111.004 285.735 mo
111.004 287.384 li
@
108.46 285.735 mo
108.46 287.384 li
@
106.654 285.735 mo
106.654 287.384 li
@
105.254 285.735 mo
105.254 287.384 li
@
104.11 285.735 mo
104.11 287.384 li
@
103.142 285.735 mo
103.142 287.384 li
@
102.304 285.735 mo
102.304 287.384 li
@
101.565 285.735 mo
101.565 287.384 li
@
100.904 284.086 mo
100.904 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 293.473 mo(4)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 301.518 mo(10)[-3.95209 0 ]yshgrestore
96.554 285.735 mo
96.554 287.384 li
@
94.01 285.735 mo
94.01 287.384 li
@
92.205 285.735 mo
92.205 287.384 li
@
90.804 285.735 mo
90.804 287.384 li
@
89.66 285.735 mo
89.66 287.384 li
@
88.693 285.735 mo
88.693 287.384 li
@
87.855 285.735 mo
87.855 287.384 li
@
87.116 285.735 mo
87.116 287.384 li
@
86.454 284.086 mo
86.454 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 293.473 mo(5)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 301.518 mo(10)[-3.95209 0 ]yshgrestore
82.105 285.735 mo
82.105 287.384 li
@
79.56 285.735 mo
79.56 287.384 li
@
77.755 285.735 mo
77.755 287.384 li
@
76.355 285.735 mo
76.355 287.384 li
@
75.21 285.735 mo
75.21 287.384 li
@
74.243 285.735 mo
74.243 287.384 li
@
73.405 285.735 mo
73.405 287.384 li
@
72.666 285.735 mo
72.666 287.384 li
@
72.005 284.086 mo
72.005 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 293.473 mo(6)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 301.518 mo(10)[-3.95209 0 ]yshgrestore
67.655 285.735 mo
67.655 287.384 li
@
65.11 285.735 mo
65.11 287.384 li
@
63.305 285.735 mo
63.305 287.384 li
@
61.905 285.735 mo
61.905 287.384 li
@
60.761 285.735 mo
60.761 287.384 li
@
59.793 285.735 mo
59.793 287.384 li
@
58.955 285.735 mo
58.955 287.384 li
@
58.216 285.735 mo
58.216 287.384 li
@
57.555 284.086 mo
57.555 287.384 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 293.473 mo(7)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 301.518 mo(10)[-3.95209 0 ]yshgrestore
53.205 285.735 mo
53.205 287.384 li
@
50.661 285.735 mo
50.661 287.384 li
@
48.855 285.735 mo
48.855 287.384 li
@
47.455 285.735 mo
47.455 287.384 li
@
46.311 285.735 mo
46.311 287.384 li
@
45.344 285.735 mo
45.344 287.384 li
@
44.506 285.735 mo
44.506 287.384 li
@
158.641 177.447 mo
43.766 177.447 li
@
154.353 179.096 mo
154.353 177.447 li
@
151.809 179.096 mo
151.809 177.447 li
@
150.003 179.096 mo
150.003 177.447 li
@
148.603 179.096 mo
148.603 177.447 li
@
147.459 179.096 mo
147.459 177.447 li
@
146.492 179.096 mo
146.492 177.447 li
@
145.654 179.096 mo
145.654 177.447 li
@
144.914 179.096 mo
144.914 177.447 li
@
144.253 180.745 mo
144.253 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 174.219 mo(10)[-3.95207 0 ]yshgrestore
139.904 179.096 mo
139.904 177.447 li
@
137.359 179.096 mo
137.359 177.447 li
@
135.554 179.096 mo
135.554 177.447 li
@
134.153 179.096 mo
134.153 177.447 li
@
133.009 179.096 mo
133.009 177.447 li
@
132.042 179.096 mo
132.042 177.447 li
@
131.204 179.096 mo
131.204 177.447 li
@
130.465 179.096 mo
130.465 177.447 li
@
129.804 180.745 mo
129.804 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 166.174 mo(2)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 174.219 mo(10)[-3.95207 0 ]yshgrestore
125.454 179.096 mo
125.454 177.447 li
@
122.909 179.096 mo
122.909 177.447 li
@
121.104 179.096 mo
121.104 177.447 li
@
119.704 179.096 mo
119.704 177.447 li
@
118.56 179.096 mo
118.56 177.447 li
@
117.592 179.096 mo
117.592 177.447 li
@
116.754 179.096 mo
116.754 177.447 li
@
116.015 179.096 mo
116.015 177.447 li
@
115.354 180.745 mo
115.354 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 166.174 mo(3)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 174.219 mo(10)[-3.95207 0 ]yshgrestore
111.004 179.096 mo
111.004 177.447 li
@
108.46 179.096 mo
108.46 177.447 li
@
106.654 179.096 mo
106.654 177.447 li
@
105.254 179.096 mo
105.254 177.447 li
@
104.11 179.096 mo
104.11 177.447 li
@
103.142 179.096 mo
103.142 177.447 li
@
102.304 179.096 mo
102.304 177.447 li
@
101.565 179.096 mo
101.565 177.447 li
@
100.904 180.745 mo
100.904 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 166.174 mo(4)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 174.219 mo(10)[-3.95207 0 ]yshgrestore
96.554 179.096 mo
96.554 177.447 li
@
94.01 179.096 mo
94.01 177.447 li
@
92.205 179.096 mo
92.205 177.447 li
@
90.804 179.096 mo
90.804 177.447 li
@
89.66 179.096 mo
89.66 177.447 li
@
88.693 179.096 mo
88.693 177.447 li
@
87.855 179.096 mo
87.855 177.447 li
@
87.116 179.096 mo
87.116 177.447 li
@
86.454 180.745 mo
86.454 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 166.174 mo(5)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 174.219 mo(10)[-3.95207 0 ]yshgrestore
82.105 179.096 mo
82.105 177.447 li
@
79.56 179.096 mo
79.56 177.447 li
@
77.755 179.096 mo
77.755 177.447 li
@
76.355 179.096 mo
76.355 177.447 li
@
75.21 179.096 mo
75.21 177.447 li
@
74.243 179.096 mo
74.243 177.447 li
@
73.405 179.096 mo
73.405 177.447 li
@
72.666 179.096 mo
72.666 177.447 li
@
72.005 180.745 mo
72.005 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 166.174 mo(6)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 174.219 mo(10)[-3.95207 0 ]yshgrestore
67.655 179.096 mo
67.655 177.447 li
@
65.11 179.096 mo
65.11 177.447 li
@
63.305 179.096 mo
63.305 177.447 li
@
61.905 179.096 mo
61.905 177.447 li
@
60.761 179.096 mo
60.761 177.447 li
@
59.793 179.096 mo
59.793 177.447 li
@
58.955 179.096 mo
58.955 177.447 li
@
58.216 179.096 mo
58.216 177.447 li
@
57.555 180.745 mo
57.555 177.447 li
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 166.174 mo(7)shgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 174.219 mo(10)[-3.95207 0 ]yshgrestore
53.205 179.096 mo
53.205 177.447 li
@
50.661 179.096 mo
50.661 177.447 li
@
48.855 179.096 mo
48.855 177.447 li
@
47.455 179.096 mo
47.455 177.447 li
@
46.311 179.096 mo
46.311 177.447 li
@
45.344 179.096 mo
45.344 177.447 li
@
44.506 179.096 mo
44.506 177.447 li
@
144.914 257.688 mo
142.138 257.688 142.138 253.523 144.914 253.523 cv
147.691 253.523 147.691 257.688 144.914 257.688 cv
cp
138.257 255.97 mo
135.481 255.97 135.481 251.806 138.257 251.806 cv
141.033 251.806 141.033 255.97 138.257 255.97 cv
cp
131.283 254.252 mo
128.507 254.252 128.507 250.088 131.283 250.088 cv
134.059 250.088 134.059 254.252 131.283 254.252 cv
cp
125.36 252.534 mo
122.584 252.534 122.584 248.37 125.36 248.37 cv
128.137 248.37 128.137 252.534 125.36 252.534 cv
cp
118.518 250.817 mo
115.742 250.817 115.742 246.652 118.518 246.652 cv
121.294 246.652 121.294 250.817 118.518 250.817 cv
cp
113.527 249.099 mo
110.75 249.099 110.75 244.935 113.527 244.935 cv
116.303 244.935 116.303 249.099 113.527 249.099 cv
cp
108.327 247.381 mo
105.551 247.381 105.551 243.217 108.327 243.217 cv
111.103 243.217 111.103 247.381 108.327 247.381 cv
cp
103.708 245.663 mo
100.931 245.663 100.931 241.499 103.708 241.499 cv
106.484 241.499 106.484 245.663 103.708 245.663 cv
cp
99.652 243.946 mo
96.875 243.946 96.875 239.781 99.652 239.781 cv
102.428 239.781 102.428 243.946 99.652 243.946 cv
cp
96.268 242.228 mo
93.491 242.228 93.491 238.063 96.268 238.063 cv
99.044 238.063 99.044 242.228 96.268 242.228 cv
cp
93.352 240.51 mo
90.576 240.51 90.576 236.346 93.352 236.346 cv
96.128 236.346 96.128 240.51 93.352 240.51 cv
cp
91.095 238.792 mo
88.318 238.792 88.318 234.628 91.095 234.628 cv
93.871 234.628 93.871 238.792 91.095 238.792 cv
cp
89.356 237.074 mo
86.58 237.074 86.58 232.91 89.356 232.91 cv
92.132 232.91 92.132 237.074 89.356 237.074 cv
cp
88.281 235.357 mo
85.504 235.357 85.504 231.192 88.281 231.192 cv
91.057 231.192 91.057 235.357 88.281 235.357 cv
cp
87.749 233.639 mo
84.973 233.639 84.973 229.475 87.749 229.475 cv
90.525 229.475 90.525 233.639 87.749 233.639 cv
cp
87.725 231.921 mo
84.949 231.921 84.949 227.757 87.725 227.757 cv
90.501 227.757 90.501 231.921 87.725 231.921 cv
cp
88.247 230.203 mo
85.471 230.203 85.471 226.039 88.247 226.039 cv
91.023 226.039 91.023 230.203 88.247 230.203 cv
cp
89.38 228.486 mo
86.603 228.486 86.603 224.321 89.38 224.321 cv
92.156 224.321 92.156 228.486 89.38 228.486 cv
cp
90.938 226.768 mo
88.161 226.768 88.161 222.603 90.938 222.603 cv
93.714 222.603 93.714 226.768 90.938 226.768 cv
cp
92.985 225.05 mo
90.208 225.05 90.208 220.886 92.985 220.886 cv
95.761 220.886 95.761 225.05 92.985 225.05 cv
cp
95.527 223.332 mo
92.751 223.332 92.751 219.168 95.527 219.168 cv
98.304 219.168 98.304 223.332 95.527 223.332 cv
cp
98.469 221.615 mo
95.693 221.615 95.693 217.45 98.469 217.45 cv
101.245 217.45 101.245 221.615 98.469 221.615 cv
cp
101.851 219.897 mo
99.074 219.897 99.074 215.732 101.851 215.732 cv
104.627 215.732 104.627 219.897 101.851 219.897 cv
cp
105.53 218.179 mo
102.753 218.179 102.753 214.015 105.53 214.015 cv
108.306 214.015 108.306 218.179 105.53 218.179 cv
cp
109.664 216.461 mo
106.888 216.461 106.888 212.297 109.664 212.297 cv
112.441 212.297 112.441 216.461 109.664 216.461 cv
cp
114.289 214.743 mo
111.512 214.743 111.512 210.579 114.289 210.579 cv
117.065 210.579 117.065 214.743 114.289 214.743 cv
cp
119.06 213.026 mo
116.284 213.026 116.284 208.861 119.06 208.861 cv
121.836 208.861 121.836 213.026 119.06 213.026 cv
cp
124.028 211.308 mo
121.252 211.308 121.252 207.143 124.028 207.143 cv
126.805 207.143 126.805 211.308 124.028 211.308 cv
cp
129.93 209.59 mo
127.154 209.59 127.154 205.426 129.93 205.426 cv
132.707 205.426 132.707 209.59 129.93 209.59 cv
cp
135.399 207.872 mo
132.622 207.872 132.622 203.708 135.399 203.708 cv
138.175 203.708 138.175 207.872 135.399 207.872 cv
cp
142.607 206.155 mo
139.831 206.155 139.831 201.99 142.607 201.99 cv
145.383 201.99 145.383 206.155 142.607 206.155 cv
cp
150.003 204.437 mo
147.227 204.437 147.227 200.272 150.003 200.272 cv
152.78 200.272 152.78 204.437 150.003 204.437 cv
cp
151.809 202.719 mo
149.032 202.719 149.032 198.555 151.809 198.555 cv
154.585 198.555 154.585 202.719 151.809 202.719 cv
cp
@
156.435 252.534 mo
156.435 248.37 li
152.271 248.37 li
152.271 252.534 li
cp
137.038 250.817 mo
137.038 246.653 li
132.874 246.653 li
132.874 250.817 li
cp
125.055 249.099 mo
125.055 244.935 li
120.891 244.935 li
120.891 249.099 li
cp
114.946 247.381 mo
114.946 243.217 li
110.782 243.217 li
110.782 247.381 li
cp
105.502 245.663 mo
105.502 241.499 li
101.338 241.499 li
101.338 245.663 li
cp
97.032 243.946 mo
97.032 239.782 li
92.8676 239.782 li
92.8676 243.946 li
cp
90.015 242.228 mo
90.015 238.064 li
85.8506 238.064 li
85.8506 242.228 li
cp
84.665 240.51 mo
84.665 236.346 li
80.5006 236.346 li
80.5006 240.51 li
cp
81.443 238.792 mo
81.443 234.628 li
77.2786 234.628 li
77.2786 238.792 li
cp
80.867 237.074 mo
80.867 232.91 li
76.7026 232.91 li
76.7026 237.074 li
cp
82.438 235.357 mo
82.438 231.193 li
78.2736 231.193 li
78.2736 235.357 li
cp
85.632 233.639 mo
85.632 229.475 li
81.4676 229.475 li
81.4676 233.639 li
cp
90.19 231.921 mo
90.19 227.757 li
86.0256 227.757 li
86.0256 231.921 li
cp
95.877 230.203 mo
95.877 226.039 li
91.7126 226.039 li
91.7126 230.203 li
cp
102.437 228.486 mo
102.437 224.322 li
98.2726 224.322 li
98.2726 228.486 li
cp
109.665 226.768 mo
109.665 222.604 li
105.501 222.604 li
105.501 226.768 li
cp
117.692 225.05 mo
117.692 220.886 li
113.528 220.886 li
113.528 225.05 li
cp
125.794 223.332 mo
125.794 219.168 li
121.63 219.168 li
121.63 223.332 li
cp
135.304 221.615 mo
135.304 217.451 li
131.14 217.451 li
131.14 221.615 li
cp
144.224 219.897 mo
144.224 215.733 li
140.06 215.733 li
140.06 219.897 li
cp
156.435 218.179 mo
156.435 214.015 li
152.271 214.015 li
152.271 218.179 li
cp
0 .993988 1 0 cmyk
@
147.921 243.581 mo
149.36 243.114 li
149.36 241.601 li
150.249 242.825 li
151.688 242.357 li
150.799 243.581 li
151.688 244.805 li
150.249 244.338 li
149.36 245.561 li
149.36 244.049 li
cp
126.271 241.863 mo
127.71 241.396 li
127.71 239.883 li
128.599 241.107 li
130.038 240.639 li
129.149 241.863 li
130.038 243.087 li
128.599 242.62 li
127.71 243.844 li
127.71 242.331 li
cp
104.613 240.146 mo
106.052 239.678 li
106.052 238.165 li
106.941 239.389 li
108.38 238.922 li
107.49 240.146 li
108.38 241.369 li
106.941 240.902 li
106.052 242.126 li
106.052 240.613 li
cp
86.122 238.428 mo
87.561 237.96 li
87.561 236.448 li
88.45 237.671 li
89.889 237.204 li
89 238.428 li
89.889 239.652 li
88.45 239.184 li
87.561 240.408 li
87.561 238.895 li
cp
71.606 236.71 mo
73.045 236.243 li
73.045 234.73 li
73.934 235.954 li
75.373 235.486 li
74.484 236.71 li
75.373 237.934 li
73.934 237.466 li
73.045 238.69 li
73.045 237.178 li
cp
82.789 234.992 mo
84.228 234.525 li
84.228 233.012 li
85.117 234.236 li
86.556 233.768 li
85.667 234.992 li
86.556 236.216 li
85.117 235.749 li
84.228 236.973 li
84.228 235.46 li
cp
97.813 233.275 mo
99.252 232.807 li
99.252 231.294 li
100.141 232.518 li
101.58 232.051 li
100.691 233.275 li
101.58 234.498 li
100.141 234.031 li
99.252 235.255 li
99.252 233.742 li
cp
115.474 231.557 mo
116.913 231.089 li
116.913 229.576 li
117.802 230.8 li
119.241 230.333 li
118.352 231.557 li
119.241 232.781 li
117.802 232.313 li
116.913 233.537 li
116.913 232.024 li
cp
133.018 229.839 mo
134.456 229.371 li
134.456 227.859 li
135.346 229.083 li
136.784 228.615 li
135.895 229.839 li
136.784 231.063 li
135.346 230.595 li
134.456 231.819 li
134.456 230.306 li
cp
147.921 228.121 mo
149.36 227.654 li
149.36 226.141 li
150.249 227.365 li
151.688 226.897 li
150.799 228.121 li
151.688 229.345 li
150.249 228.878 li
149.36 230.101 li
149.36 228.589 li
cp
.883665 .769161 0 0 cmyk
@
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf55.304 284.009 mo(\(c\))[-4.10269 -6.16028 0 ]yshgrestore
gsave
158.641 287.384 mo
158.641 177.446 li
43.767 177.446 li
43.767 287.384 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf55.304 266.972 mo(14.5 GeV)[-5.79636 -5.79636 -2.89818 -5.79636 -2.89818 -8.11072 -5.79636 0 ]yshgrestore
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
0 0 0 0 cmyk
ef
.4 lw
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
@
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
ef
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
@
.75 lw
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
0 0 0 0 cmyk
ef
.4 lw
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
@
.75 lw
273.484 287.384 mo
273.484 177.446 li
158.64 177.446 li
158.64 287.384 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 287.384 mo
273.484 177.447 li
@
269.656 271.924 mo
273.484 271.924 li
@
271.57 263.336 mo
273.484 263.336 li
@
271.57 254.747 mo
273.484 254.747 li
@
271.57 246.158 mo
273.484 246.158 li
@
269.656 237.569 mo
273.484 237.569 li
@
271.57 228.98 mo
273.484 228.98 li
@
271.57 220.391 mo
273.484 220.391 li
@
271.57 211.802 mo
273.484 211.802 li
@
269.656 203.213 mo
273.484 203.213 li
@
269.656 271.924 mo
273.484 271.924 li
@
271.57 280.513 mo
273.484 280.513 li
@
269.656 203.213 mo
273.484 203.213 li
@
271.57 194.625 mo
273.484 194.625 li
@
271.57 186.036 mo
273.484 186.036 li
@
271.57 177.447 mo
273.484 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 275.491 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 280.696 mo(-)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 240.472 mo(0)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 209.238 mo(20)[-5.79636 0 ]yshgrestore
158.641 287.384 mo
158.641 177.447 li
@
162.469 271.924 mo
158.641 271.924 li
@
160.555 263.336 mo
158.641 263.336 li
@
160.555 254.747 mo
158.641 254.747 li
@
160.555 246.158 mo
158.641 246.158 li
@
162.469 237.569 mo
158.641 237.569 li
@
160.555 228.98 mo
158.641 228.98 li
@
160.555 220.391 mo
158.641 220.391 li
@
160.555 211.802 mo
158.641 211.802 li
@
162.469 203.213 mo
158.641 203.213 li
@
162.469 271.924 mo
158.641 271.924 li
@
160.555 280.513 mo
158.641 280.513 li
@
162.469 203.213 mo
158.641 203.213 li
@
160.555 194.625 mo
158.641 194.625 li
@
160.555 186.036 mo
158.641 186.036 li
@
160.555 177.447 mo
158.641 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 275.491 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 280.696 mo(-)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 240.472 mo(0)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 209.238 mo(20)[-5.79636 0 ]yshgrestore
273.484 287.384 mo
158.641 287.384 li
@
269.198 285.9 mo
269.198 287.384 li
@
266.654 285.9 mo
266.654 287.384 li
@
264.849 285.9 mo
264.849 287.384 li
@
263.45 285.9 mo
263.45 287.384 li
@
262.306 285.9 mo
262.306 287.384 li
@
261.339 285.9 mo
261.339 287.384 li
@
260.501 285.9 mo
260.501 287.384 li
@
259.762 285.9 mo
259.762 287.384 li
@
259.101 284.416 mo
259.101 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 298.679 mo(10)[-3.95209 0 ]yshgrestore
254.752 285.9 mo
254.752 287.384 li
@
252.208 285.9 mo
252.208 287.384 li
@
250.404 285.9 mo
250.404 287.384 li
@
249.004 285.9 mo
249.004 287.384 li
@
247.86 285.9 mo
247.86 287.384 li
@
246.893 285.9 mo
246.893 287.384 li
@
246.055 285.9 mo
246.055 287.384 li
@
245.316 285.9 mo
245.316 287.384 li
@
244.655 284.416 mo
244.655 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 293.473 mo(2)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 301.518 mo(10)[-3.95209 0 ]yshgrestore
240.306 285.9 mo
240.306 287.384 li
@
237.763 285.9 mo
237.763 287.384 li
@
235.958 285.9 mo
235.958 287.384 li
@
234.558 285.9 mo
234.558 287.384 li
@
233.414 285.9 mo
233.414 287.384 li
@
232.447 285.9 mo
232.447 287.384 li
@
231.609 285.9 mo
231.609 287.384 li
@
230.87 285.9 mo
230.87 287.384 li
@
230.209 284.416 mo
230.209 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 293.473 mo(3)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 301.518 mo(10)[-3.95209 0 ]yshgrestore
225.86 285.9 mo
225.86 287.384 li
@
223.317 285.9 mo
223.317 287.384 li
@
221.512 285.9 mo
221.512 287.384 li
@
220.112 285.9 mo
220.112 287.384 li
@
218.968 285.9 mo
218.968 287.384 li
@
218.001 285.9 mo
218.001 287.384 li
@
217.163 285.9 mo
217.163 287.384 li
@
216.424 285.9 mo
216.424 287.384 li
@
215.763 284.416 mo
215.763 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 293.473 mo(4)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 301.518 mo(10)[-3.95209 0 ]yshgrestore
211.415 285.9 mo
211.415 287.384 li
@
208.871 285.9 mo
208.871 287.384 li
@
207.066 285.9 mo
207.066 287.384 li
@
205.666 285.9 mo
205.666 287.384 li
@
204.522 285.9 mo
204.522 287.384 li
@
203.555 285.9 mo
203.555 287.384 li
@
202.717 285.9 mo
202.717 287.384 li
@
201.978 285.9 mo
201.978 287.384 li
@
201.317 284.416 mo
201.317 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 293.473 mo(5)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 301.518 mo(10)[-3.95209 0 ]yshgrestore
196.969 285.9 mo
196.969 287.384 li
@
194.425 285.9 mo
194.425 287.384 li
@
192.62 285.9 mo
192.62 287.384 li
@
191.22 285.9 mo
191.22 287.384 li
@
190.076 285.9 mo
190.076 287.384 li
@
189.109 285.9 mo
189.109 287.384 li
@
188.271 285.9 mo
188.271 287.384 li
@
187.532 285.9 mo
187.532 287.384 li
@
186.871 284.416 mo
186.871 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 293.473 mo(6)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 301.518 mo(10)[-3.95209 0 ]yshgrestore
182.523 285.9 mo
182.523 287.384 li
@
179.979 285.9 mo
179.979 287.384 li
@
178.174 285.9 mo
178.174 287.384 li
@
176.774 285.9 mo
176.774 287.384 li
@
175.63 285.9 mo
175.63 287.384 li
@
174.663 285.9 mo
174.663 287.384 li
@
173.825 285.9 mo
173.825 287.384 li
@
173.086 285.9 mo
173.086 287.384 li
@
172.425 284.416 mo
172.425 287.384 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 293.473 mo(7)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 301.518 mo(10)[-3.95209 0 ]yshgrestore
168.077 285.9 mo
168.077 287.384 li
@
165.533 285.9 mo
165.533 287.384 li
@
163.728 285.9 mo
163.728 287.384 li
@
162.328 285.9 mo
162.328 287.384 li
@
161.184 285.9 mo
161.184 287.384 li
@
160.217 285.9 mo
160.217 287.384 li
@
159.38 285.9 mo
159.38 287.384 li
@
273.484 177.447 mo
158.641 177.447 li
@
269.198 178.931 mo
269.198 177.447 li
@
266.654 178.931 mo
266.654 177.447 li
@
264.849 178.931 mo
264.849 177.447 li
@
263.45 178.931 mo
263.45 177.447 li
@
262.306 178.931 mo
262.306 177.447 li
@
261.339 178.931 mo
261.339 177.447 li
@
260.501 178.931 mo
260.501 177.447 li
@
259.762 178.931 mo
259.762 177.447 li
@
259.101 180.415 mo
259.101 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 174.219 mo(10)[-3.95207 0 ]yshgrestore
254.752 178.931 mo
254.752 177.447 li
@
252.208 178.931 mo
252.208 177.447 li
@
250.404 178.931 mo
250.404 177.447 li
@
249.004 178.931 mo
249.004 177.447 li
@
247.86 178.931 mo
247.86 177.447 li
@
246.893 178.931 mo
246.893 177.447 li
@
246.055 178.931 mo
246.055 177.447 li
@
245.316 178.931 mo
245.316 177.447 li
@
244.655 180.415 mo
244.655 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 166.174 mo(2)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 174.219 mo(10)[-3.95207 0 ]yshgrestore
240.306 178.931 mo
240.306 177.447 li
@
237.763 178.931 mo
237.763 177.447 li
@
235.958 178.931 mo
235.958 177.447 li
@
234.558 178.931 mo
234.558 177.447 li
@
233.414 178.931 mo
233.414 177.447 li
@
232.447 178.931 mo
232.447 177.447 li
@
231.609 178.931 mo
231.609 177.447 li
@
230.87 178.931 mo
230.87 177.447 li
@
230.209 180.415 mo
230.209 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 166.174 mo(3)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 174.219 mo(10)[-3.95207 0 ]yshgrestore
225.86 178.931 mo
225.86 177.447 li
@
223.317 178.931 mo
223.317 177.447 li
@
221.512 178.931 mo
221.512 177.447 li
@
220.112 178.931 mo
220.112 177.447 li
@
218.968 178.931 mo
218.968 177.447 li
@
218.001 178.931 mo
218.001 177.447 li
@
217.163 178.931 mo
217.163 177.447 li
@
216.424 178.931 mo
216.424 177.447 li
@
215.763 180.415 mo
215.763 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 166.174 mo(4)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 174.219 mo(10)[-3.95207 0 ]yshgrestore
211.415 178.931 mo
211.415 177.447 li
@
208.871 178.931 mo
208.871 177.447 li
@
207.066 178.931 mo
207.066 177.447 li
@
205.666 178.931 mo
205.666 177.447 li
@
204.522 178.931 mo
204.522 177.447 li
@
203.555 178.931 mo
203.555 177.447 li
@
202.717 178.931 mo
202.717 177.447 li
@
201.978 178.931 mo
201.978 177.447 li
@
201.317 180.415 mo
201.317 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 166.174 mo(5)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 174.219 mo(10)[-3.95207 0 ]yshgrestore
196.969 178.931 mo
196.969 177.447 li
@
194.425 178.931 mo
194.425 177.447 li
@
192.62 178.931 mo
192.62 177.447 li
@
191.22 178.931 mo
191.22 177.447 li
@
190.076 178.931 mo
190.076 177.447 li
@
189.109 178.931 mo
189.109 177.447 li
@
188.271 178.931 mo
188.271 177.447 li
@
187.532 178.931 mo
187.532 177.447 li
@
186.871 180.415 mo
186.871 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 166.174 mo(6)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 174.219 mo(10)[-3.95207 0 ]yshgrestore
182.523 178.931 mo
182.523 177.447 li
@
179.979 178.931 mo
179.979 177.447 li
@
178.174 178.931 mo
178.174 177.447 li
@
176.774 178.931 mo
176.774 177.447 li
@
175.63 178.931 mo
175.63 177.447 li
@
174.663 178.931 mo
174.663 177.447 li
@
173.825 178.931 mo
173.825 177.447 li
@
173.086 178.931 mo
173.086 177.447 li
@
172.425 180.415 mo
172.425 177.447 li
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 166.174 mo(7)shgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 174.219 mo(10)[-3.95207 0 ]yshgrestore
168.077 178.931 mo
168.077 177.447 li
@
165.533 178.931 mo
165.533 177.447 li
@
163.728 178.931 mo
163.728 177.447 li
@
162.328 178.931 mo
162.328 177.447 li
@
161.184 178.931 mo
161.184 177.447 li
@
160.217 178.931 mo
160.217 177.447 li
@
159.38 178.931 mo
159.38 177.447 li
@
264.849 271.43 mo
262.073 271.43 262.073 267.266 264.849 267.266 cv
267.626 267.266 267.626 271.43 264.849 271.43 cv
cp
266.654 269.712 mo
263.878 269.712 263.878 265.548 266.654 265.548 cv
269.431 265.548 269.431 269.712 266.654 269.712 cv
cp
253.875 267.994 mo
251.099 267.994 251.099 263.83 253.875 263.83 cv
256.652 263.83 256.652 267.994 253.875 267.994 cv
cp
247.654 266.277 mo
244.878 266.277 244.878 262.112 247.654 262.112 cv
250.43 262.112 250.43 266.277 247.654 266.277 cv
cp
243.67 264.559 mo
240.894 264.559 240.894 260.394 243.67 260.394 cv
246.446 260.394 246.446 264.559 243.67 264.559 cv
cp
237.762 262.841 mo
234.986 262.841 234.986 258.677 237.762 258.677 cv
240.539 258.677 240.539 262.841 237.762 262.841 cv
cp
232.031 261.123 mo
229.254 261.123 229.254 256.959 232.031 256.959 cv
234.807 256.959 234.807 261.123 232.031 261.123 cv
cp
227.229 259.406 mo
224.453 259.406 224.453 255.241 227.229 255.241 cv
230.005 255.241 230.005 259.406 227.229 259.406 cv
cp
222.853 257.688 mo
220.077 257.688 220.077 253.523 222.853 253.523 cv
225.63 253.523 225.63 257.688 222.853 257.688 cv
cp
218.583 255.97 mo
215.806 255.97 215.806 251.806 218.583 251.806 cv
221.359 251.806 221.359 255.97 218.583 255.97 cv
cp
214.487 254.252 mo
211.711 254.252 211.711 250.088 214.487 250.088 cv
217.263 250.088 217.263 254.252 214.487 254.252 cv
cp
210.866 252.534 mo
208.09 252.534 208.09 248.37 210.866 248.37 cv
213.643 248.37 213.643 252.534 210.866 252.534 cv
cp
207.642 250.817 mo
204.865 250.817 204.865 246.652 207.642 246.652 cv
210.418 246.652 210.418 250.817 207.642 250.817 cv
cp
204.625 249.099 mo
201.849 249.099 201.849 244.935 204.625 244.935 cv
207.401 244.935 207.401 249.099 204.625 249.099 cv
cp
202.005 247.381 mo
199.229 247.381 199.229 243.217 202.005 243.217 cv
204.782 243.217 204.782 247.381 202.005 247.381 cv
cp
199.793 245.663 mo
197.017 245.663 197.017 241.499 199.793 241.499 cv
202.57 241.499 202.57 245.663 199.793 245.663 cv
cp
197.889 243.946 mo
195.113 243.946 195.113 239.781 197.889 239.781 cv
200.666 239.781 200.666 243.946 197.889 243.946 cv
cp
196.346 242.228 mo
193.57 242.228 193.57 238.063 196.346 238.063 cv
199.123 238.063 199.123 242.228 196.346 242.228 cv
cp
195.194 240.51 mo
192.418 240.51 192.418 236.346 195.194 236.346 cv
197.971 236.346 197.971 240.51 195.194 240.51 cv
cp
194.42 238.792 mo
191.643 238.792 191.643 234.628 194.42 234.628 cv
197.196 234.628 197.196 238.792 194.42 238.792 cv
cp
193.992 237.074 mo
191.215 237.074 191.215 232.91 193.992 232.91 cv
196.768 232.91 196.768 237.074 193.992 237.074 cv
cp
193.964 235.357 mo
191.188 235.357 191.188 231.192 193.964 231.192 cv
196.741 231.192 196.741 235.357 193.964 235.357 cv
cp
194.257 233.639 mo
191.481 233.639 191.481 229.475 194.257 229.475 cv
197.033 229.475 197.033 233.639 194.257 233.639 cv
cp
194.997 231.921 mo
192.221 231.921 192.221 227.757 194.997 227.757 cv
197.774 227.757 197.774 231.921 194.997 231.921 cv
cp
196.059 230.203 mo
193.282 230.203 193.282 226.039 196.059 226.039 cv
198.835 226.039 198.835 230.203 196.059 230.203 cv
cp
197.487 228.486 mo
194.71 228.486 194.71 224.321 197.487 224.321 cv
200.263 224.321 200.263 228.486 197.487 228.486 cv
cp
199.229 226.768 mo
196.453 226.768 196.453 222.603 199.229 222.603 cv
202.005 222.603 202.005 226.768 199.229 226.768 cv
cp
201.347 225.05 mo
198.571 225.05 198.571 220.886 201.347 220.886 cv
204.124 220.886 204.124 225.05 201.347 225.05 cv
cp
203.783 223.332 mo
201.007 223.332 201.007 219.168 203.783 219.168 cv
206.559 219.168 206.559 223.332 203.783 223.332 cv
cp
206.508 221.615 mo
203.731 221.615 203.731 217.45 206.508 217.45 cv
209.284 217.45 209.284 221.615 206.508 221.615 cv
cp
209.604 219.897 mo
206.828 219.897 206.828 215.732 209.604 215.732 cv
212.38 215.732 212.38 219.897 209.604 219.897 cv
cp
212.962 218.179 mo
210.185 218.179 210.185 214.015 212.962 214.015 cv
215.738 214.015 215.738 218.179 212.962 218.179 cv
cp
216.675 216.461 mo
213.899 216.461 213.899 212.297 216.675 212.297 cv
219.451 212.297 219.451 216.461 216.675 216.461 cv
cp
220.563 214.743 mo
217.787 214.743 217.787 210.579 220.563 210.579 cv
223.339 210.579 223.339 214.743 220.563 214.743 cv
cp
224.605 213.026 mo
221.829 213.026 221.829 208.861 224.605 208.861 cv
227.382 208.861 227.382 213.026 224.605 213.026 cv
cp
229.311 211.308 mo
226.534 211.308 226.534 207.143 229.311 207.143 cv
232.087 207.143 232.087 211.308 229.311 211.308 cv
cp
234.052 209.59 mo
231.275 209.59 231.275 205.426 234.052 205.426 cv
236.828 205.426 236.828 209.59 234.052 209.59 cv
cp
238.709 207.872 mo
235.932 207.872 235.932 203.708 238.709 203.708 cv
241.485 203.708 241.485 207.872 238.709 207.872 cv
cp
245.316 206.155 mo
242.54 206.155 242.54 201.99 245.316 201.99 cv
248.092 201.99 248.092 206.155 245.316 206.155 cv
cp
250.249 204.437 mo
247.472 204.437 247.472 200.272 250.249 200.272 cv
253.025 200.272 253.025 204.437 250.249 204.437 cv
cp
256.557 202.719 mo
253.781 202.719 253.781 198.555 256.557 198.555 cv
259.333 198.555 259.333 202.719 256.557 202.719 cv
cp
260.501 201.001 mo
257.725 201.001 257.725 196.837 260.501 196.837 cv
263.277 196.837 263.277 201.001 260.501 201.001 cv
cp
@
265.532 259.406 mo
265.532 255.242 li
261.367 255.242 li
261.367 259.406 li
cp
258.234 257.688 mo
258.234 253.524 li
254.07 253.524 li
254.07 257.688 li
cp
245.337 255.97 mo
245.337 251.806 li
241.173 251.806 li
241.173 255.97 li
cp
236.922 254.252 mo
236.922 250.088 li
232.758 250.088 li
232.758 254.252 li
cp
228.405 252.534 mo
228.405 248.37 li
224.24 248.37 li
224.24 252.534 li
cp
220.539 250.817 mo
220.539 246.653 li
216.375 246.653 li
216.375 250.817 li
cp
213.21 249.099 mo
213.21 244.935 li
209.046 244.935 li
209.046 249.099 li
cp
206.643 247.381 mo
206.643 243.217 li
202.479 243.217 li
202.479 247.381 li
cp
200.862 245.663 mo
200.862 241.499 li
196.698 241.499 li
196.698 245.663 li
cp
196.007 243.946 mo
196.007 239.782 li
191.843 239.782 li
191.843 243.946 li
cp
192.193 242.228 mo
192.193 238.064 li
188.029 238.064 li
188.029 242.228 li
cp
189.609 240.51 mo
189.609 236.346 li
185.445 236.346 li
185.445 240.51 li
cp
188.357 238.792 mo
188.357 234.628 li
184.193 234.628 li
184.193 238.792 li
cp
188.531 237.074 mo
188.531 232.91 li
184.367 232.91 li
184.367 237.074 li
cp
190.049 235.357 mo
190.049 231.193 li
185.885 231.193 li
185.885 235.357 li
cp
192.747 233.639 mo
192.747 229.475 li
188.583 229.475 li
188.583 233.639 li
cp
196.511 231.921 mo
196.511 227.757 li
192.347 227.757 li
192.347 231.921 li
cp
201.187 230.203 mo
201.187 226.039 li
197.023 226.039 li
197.023 230.203 li
cp
206.669 228.486 mo
206.669 224.322 li
202.505 224.322 li
202.505 228.486 li
cp
212.925 226.768 mo
212.925 222.604 li
208.761 222.604 li
208.761 226.768 li
cp
219.605 225.05 mo
219.605 220.886 li
215.441 220.886 li
215.441 225.05 li
cp
227.359 223.332 mo
227.359 219.168 li
223.195 219.168 li
223.195 223.332 li
cp
235.17 221.615 mo
235.17 217.451 li
231.006 217.451 li
231.006 221.615 li
cp
242.844 219.897 mo
242.844 215.733 li
238.679 215.733 li
238.679 219.897 li
cp
252.645 218.179 mo
252.645 214.015 li
248.48 214.015 li
248.48 218.179 li
cp
261.183 216.461 mo
261.183 212.297 li
257.019 212.297 li
257.019 216.461 li
cp
265.532 214.743 mo
265.532 210.579 li
261.367 210.579 li
261.367 214.743 li
cp
0 .993988 1 0 cmyk
@
257.68 245.299 mo
259.118 244.831 li
259.118 243.319 li
260.008 244.543 li
261.446 244.075 li
260.557 245.299 li
261.446 246.523 li
260.008 246.055 li
259.118 247.279 li
259.118 245.766 li
cp
237.948 243.581 mo
239.387 243.114 li
239.387 241.601 li
240.276 242.825 li
241.715 242.357 li
240.826 243.581 li
241.715 244.805 li
240.276 244.338 li
239.387 245.561 li
239.387 244.049 li
cp
220.07 241.863 mo
221.508 241.396 li
221.508 239.883 li
222.398 241.107 li
223.837 240.639 li
222.947 241.863 li
223.837 243.087 li
222.398 242.62 li
221.508 243.844 li
221.508 242.331 li
cp
204.142 240.146 mo
205.58 239.678 li
205.58 238.165 li
206.47 239.389 li
207.908 238.922 li
207.019 240.146 li
207.908 241.369 li
206.47 240.902 li
205.58 242.126 li
205.58 240.613 li
cp
190.317 238.428 mo
191.756 237.96 li
191.756 236.448 li
192.645 237.671 li
194.084 237.204 li
193.195 238.428 li
194.084 239.652 li
192.645 239.184 li
191.756 240.408 li
191.756 238.895 li
cp
180.374 236.71 mo
181.812 236.243 li
181.812 234.73 li
182.702 235.954 li
184.14 235.486 li
183.251 236.71 li
184.14 237.934 li
182.702 237.466 li
181.812 238.69 li
181.812 237.178 li
cp
189.344 234.992 mo
190.783 234.525 li
190.783 233.012 li
191.672 234.236 li
193.111 233.768 li
192.221 234.992 li
193.111 236.216 li
191.672 235.749 li
190.783 236.973 li
190.783 235.46 li
cp
202.226 233.275 mo
203.665 232.807 li
203.665 231.294 li
204.554 232.518 li
205.993 232.051 li
205.104 233.275 li
205.993 234.498 li
204.554 234.031 li
203.665 235.255 li
203.665 233.742 li
cp
217.262 231.557 mo
218.701 231.089 li
218.701 229.576 li
219.59 230.8 li
221.029 230.333 li
220.139 231.557 li
221.029 232.781 li
219.59 232.313 li
218.701 233.537 li
218.701 232.024 li
cp
233.66 229.839 mo
235.098 229.371 li
235.098 227.859 li
235.988 229.083 li
237.426 228.615 li
236.537 229.839 li
237.426 231.063 li
235.988 230.595 li
235.098 231.819 li
235.098 230.306 li
cp
252.072 228.121 mo
253.511 227.654 li
253.511 226.141 li
254.4 227.365 li
255.839 226.897 li
254.95 228.121 li
255.839 229.345 li
254.4 228.878 li
253.511 230.101 li
253.511 228.589 li
cp
.883665 .769161 0 0 cmyk
@
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 14360 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/g 74 def
end
RKEPLS+Helvetica /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 2{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f /g 8{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf170.299 284.009 mo(\(g\))[-4.10269 -6.85025 0 ]yshgrestore
gsave
286.245 287.384 mo
286.245 177.446 li
158.641 177.446 li
158.641 287.384 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf170.299 266.972 mo(62.4 GeV)[-5.79636 -5.79636 -2.89818 -5.79636 -2.89818 -8.11072 -5.79636 0 ]yshgrestore
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
@
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
ef
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
@
.75 lw
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
0 0 0 0 cmyk
ef
.4 lw
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
@
.75 lw
158.641 177.447 mo
158.641 67.619 li
43.767 67.619 li
43.767 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.641 177.447 mo
158.641 67.619 li
@
155.198 162.002 mo
158.641 162.002 li
@
156.919 153.422 mo
158.641 153.422 li
@
156.919 144.842 mo
158.641 144.842 li
@
156.919 136.261 mo
158.641 136.261 li
@
155.198 127.681 mo
158.641 127.681 li
@
156.919 119.101 mo
158.641 119.101 li
@
156.919 110.52 mo
158.641 110.52 li
@
156.919 101.94 mo
158.641 101.94 li
@
155.198 93.36 mo
158.641 93.36 li
@
155.198 162.002 mo
158.641 162.002 li
@
156.919 170.583 mo
158.641 170.583 li
@
155.198 93.36 mo
158.641 93.36 li
@
156.919 84.78 mo
158.641 84.78 li
@
156.919 76.199 mo
158.641 76.199 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 165.701 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 170.907 mo(-)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 130.682 mo(0)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf167.459 99.449 mo(20)[-5.79636 0 ]yshgrestore
43.766 177.447 mo
43.766 67.619 li
@
47.209 162.002 mo
43.766 162.002 li
@
45.488 153.422 mo
43.766 153.422 li
@
45.488 144.842 mo
43.766 144.842 li
@
45.488 136.261 mo
43.766 136.261 li
@
47.209 127.681 mo
43.766 127.681 li
@
45.488 119.101 mo
43.766 119.101 li
@
45.488 110.52 mo
43.766 110.52 li
@
45.488 101.94 mo
43.766 101.94 li
@
47.209 93.36 mo
43.766 93.36 li
@
47.209 162.002 mo
43.766 162.002 li
@
45.488 170.583 mo
43.766 170.583 li
@
47.209 93.36 mo
43.766 93.36 li
@
45.488 84.78 mo
43.766 84.78 li
@
45.488 76.199 mo
43.766 76.199 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 165.701 mo(20)[-5.79636 0 ]yshgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 170.907 mo(-)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 130.682 mo(0)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf43.473 99.449 mo(20)[-5.79636 0 ]yshgrestore
158.641 177.447 mo
43.766 177.447 li
@
154.353 175.798 mo
154.353 177.447 li
@
151.809 175.798 mo
151.809 177.447 li
@
150.003 175.798 mo
150.003 177.447 li
@
148.603 175.798 mo
148.603 177.447 li
@
147.459 175.798 mo
147.459 177.447 li
@
146.492 175.798 mo
146.492 177.447 li
@
145.654 175.798 mo
145.654 177.447 li
@
144.914 175.798 mo
144.914 177.447 li
@
144.253 174.149 mo
144.253 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 188.416 mo(10)[-3.95207 0 ]yshgrestore
139.904 175.798 mo
139.904 177.447 li
@
137.359 175.798 mo
137.359 177.447 li
@
135.554 175.798 mo
135.554 177.447 li
@
134.153 175.798 mo
134.153 177.447 li
@
133.009 175.798 mo
133.009 177.447 li
@
132.042 175.798 mo
132.042 177.447 li
@
131.204 175.798 mo
131.204 177.447 li
@
130.465 175.798 mo
130.465 177.447 li
@
129.804 174.149 mo
129.804 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 183.211 mo(2)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 191.256 mo(10)[-3.95207 0 ]yshgrestore
125.454 175.798 mo
125.454 177.447 li
@
122.909 175.798 mo
122.909 177.447 li
@
121.104 175.798 mo
121.104 177.447 li
@
119.704 175.798 mo
119.704 177.447 li
@
118.56 175.798 mo
118.56 177.447 li
@
117.592 175.798 mo
117.592 177.447 li
@
116.754 175.798 mo
116.754 177.447 li
@
116.015 175.798 mo
116.015 177.447 li
@
115.354 174.149 mo
115.354 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 183.211 mo(3)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 191.256 mo(10)[-3.95207 0 ]yshgrestore
111.004 175.798 mo
111.004 177.447 li
@
108.46 175.798 mo
108.46 177.447 li
@
106.654 175.798 mo
106.654 177.447 li
@
105.254 175.798 mo
105.254 177.447 li
@
104.11 175.798 mo
104.11 177.447 li
@
103.142 175.798 mo
103.142 177.447 li
@
102.304 175.798 mo
102.304 177.447 li
@
101.565 175.798 mo
101.565 177.447 li
@
100.904 174.149 mo
100.904 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 183.211 mo(4)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 191.256 mo(10)[-3.95207 0 ]yshgrestore
96.554 175.798 mo
96.554 177.447 li
@
94.01 175.798 mo
94.01 177.447 li
@
92.205 175.798 mo
92.205 177.447 li
@
90.804 175.798 mo
90.804 177.447 li
@
89.66 175.798 mo
89.66 177.447 li
@
88.693 175.798 mo
88.693 177.447 li
@
87.855 175.798 mo
87.855 177.447 li
@
87.116 175.798 mo
87.116 177.447 li
@
86.454 174.149 mo
86.454 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 183.211 mo(5)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 191.256 mo(10)[-3.95207 0 ]yshgrestore
82.105 175.798 mo
82.105 177.447 li
@
79.56 175.798 mo
79.56 177.447 li
@
77.755 175.798 mo
77.755 177.447 li
@
76.355 175.798 mo
76.355 177.447 li
@
75.21 175.798 mo
75.21 177.447 li
@
74.243 175.798 mo
74.243 177.447 li
@
73.405 175.798 mo
73.405 177.447 li
@
72.666 175.798 mo
72.666 177.447 li
@
72.005 174.149 mo
72.005 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 183.211 mo(6)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 191.256 mo(10)[-3.95207 0 ]yshgrestore
67.655 175.798 mo
67.655 177.447 li
@
65.11 175.798 mo
65.11 177.447 li
@
63.305 175.798 mo
63.305 177.447 li
@
61.905 175.798 mo
61.905 177.447 li
@
60.761 175.798 mo
60.761 177.447 li
@
59.793 175.798 mo
59.793 177.447 li
@
58.955 175.798 mo
58.955 177.447 li
@
58.216 175.798 mo
58.216 177.447 li
@
57.555 174.149 mo
57.555 177.447 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 183.211 mo(7)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 191.256 mo(10)[-3.95207 0 ]yshgrestore
53.205 175.798 mo
53.205 177.447 li
@
50.661 175.798 mo
50.661 177.447 li
@
48.855 175.798 mo
48.855 177.447 li
@
47.455 175.798 mo
47.455 177.447 li
@
46.311 175.798 mo
46.311 177.447 li
@
45.344 175.798 mo
45.344 177.447 li
@
44.506 175.798 mo
44.506 177.447 li
@
158.641 67.619 mo
43.766 67.619 li
@
154.353 69.268 mo
154.353 67.619 li
@
151.809 69.268 mo
151.809 67.619 li
@
150.003 69.268 mo
150.003 67.619 li
@
148.603 69.268 mo
148.603 67.619 li
@
147.459 69.268 mo
147.459 67.619 li
@
146.492 69.268 mo
146.492 67.619 li
@
145.654 69.268 mo
145.654 67.619 li
@
144.914 69.268 mo
144.914 67.619 li
@
144.253 70.917 mo
144.253 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf146.637 64.43 mo(10)[-3.95207 0 ]yshgrestore
139.904 69.268 mo
139.904 67.619 li
@
137.359 69.268 mo
137.359 67.619 li
@
135.554 69.268 mo
135.554 67.619 li
@
134.153 69.268 mo
134.153 67.619 li
@
133.009 69.268 mo
133.009 67.619 li
@
132.042 69.268 mo
132.042 67.619 li
@
131.204 69.268 mo
131.204 67.619 li
@
130.465 69.268 mo
130.465 67.619 li
@
129.804 70.917 mo
129.804 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf130.074 56.385 mo(2)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf132.914 64.43 mo(10)[-3.95207 0 ]yshgrestore
125.454 69.268 mo
125.454 67.619 li
@
122.909 69.268 mo
122.909 67.619 li
@
121.104 69.268 mo
121.104 67.619 li
@
119.704 69.268 mo
119.704 67.619 li
@
118.56 69.268 mo
118.56 67.619 li
@
117.592 69.268 mo
117.592 67.619 li
@
116.754 69.268 mo
116.754 67.619 li
@
116.015 69.268 mo
116.015 67.619 li
@
115.354 70.917 mo
115.354 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf114.931 56.385 mo(3)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf118.244 64.43 mo(10)[-3.95207 0 ]yshgrestore
111.004 69.268 mo
111.004 67.619 li
@
108.46 69.268 mo
108.46 67.619 li
@
106.654 69.268 mo
106.654 67.619 li
@
105.254 69.268 mo
105.254 67.619 li
@
104.11 69.268 mo
104.11 67.619 li
@
103.142 69.268 mo
103.142 67.619 li
@
102.304 69.268 mo
102.304 67.619 li
@
101.565 69.268 mo
101.565 67.619 li
@
100.904 70.917 mo
100.904 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf101.207 56.385 mo(4)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf104.047 64.43 mo(10)[-3.95207 0 ]yshgrestore
96.554 69.268 mo
96.554 67.619 li
@
94.01 69.268 mo
94.01 67.619 li
@
92.205 69.268 mo
92.205 67.619 li
@
90.804 69.268 mo
90.804 67.619 li
@
89.66 69.268 mo
89.66 67.619 li
@
88.693 69.268 mo
88.693 67.619 li
@
87.855 69.268 mo
87.855 67.619 li
@
87.116 69.268 mo
87.116 67.619 li
@
86.454 70.917 mo
86.454 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf86.064 56.385 mo(5)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf89.377 64.43 mo(10)[-3.95207 0 ]yshgrestore
82.105 69.268 mo
82.105 67.619 li
@
79.56 69.268 mo
79.56 67.619 li
@
77.755 69.268 mo
77.755 67.619 li
@
76.355 69.268 mo
76.355 67.619 li
@
75.21 69.268 mo
75.21 67.619 li
@
74.243 69.268 mo
74.243 67.619 li
@
73.405 69.268 mo
73.405 67.619 li
@
72.666 69.268 mo
72.666 67.619 li
@
72.005 70.917 mo
72.005 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf71.867 56.385 mo(6)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf75.18 64.43 mo(10)[-3.95207 0 ]yshgrestore
67.655 69.268 mo
67.655 67.619 li
@
65.11 69.268 mo
65.11 67.619 li
@
63.305 69.268 mo
63.305 67.619 li
@
61.905 69.268 mo
61.905 67.619 li
@
60.761 69.268 mo
60.761 67.619 li
@
59.793 69.268 mo
59.793 67.619 li
@
58.955 69.268 mo
58.955 67.619 li
@
58.216 69.268 mo
58.216 67.619 li
@
57.555 70.917 mo
57.555 67.619 li
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf57.67 56.385 mo(7)shgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf60.51 64.43 mo(10)[-3.95207 0 ]yshgrestore
53.205 69.268 mo
53.205 67.619 li
@
50.661 69.268 mo
50.661 67.619 li
@
48.855 69.268 mo
48.855 67.619 li
@
47.455 69.268 mo
47.455 67.619 li
@
46.311 69.268 mo
46.311 67.619 li
@
45.344 69.268 mo
45.344 67.619 li
@
44.506 69.268 mo
44.506 67.619 li
@
154.353 152.93 mo
151.577 152.93 151.577 148.766 154.353 148.766 cv
157.129 148.766 157.129 152.93 154.353 152.93 cv
cp
150.003 151.214 mo
147.227 151.214 147.227 147.05 150.003 147.05 cv
152.78 147.05 152.78 151.214 150.003 151.214 cv
cp
139.903 149.498 mo
137.127 149.498 137.127 145.334 139.903 145.334 cv
142.68 145.334 142.68 149.498 139.903 149.498 cv
cp
133.907 147.782 mo
131.131 147.782 131.131 143.617 133.907 143.617 cv
136.684 143.617 136.684 147.782 133.907 147.782 cv
cp
127.828 146.066 mo
125.052 146.066 125.052 141.901 127.828 141.901 cv
130.604 141.901 130.604 146.066 127.828 146.066 cv
cp
121.199 144.35 mo
118.423 144.35 118.423 140.185 121.199 140.185 cv
123.975 140.185 123.975 144.35 121.199 144.35 cv
cp
116.257 142.634 mo
113.48 142.634 113.48 138.469 116.257 138.469 cv
119.033 138.469 119.033 142.634 116.257 142.634 cv
cp
111.369 140.918 mo
108.593 140.918 108.593 136.753 111.369 136.753 cv
114.145 136.753 114.145 140.918 111.369 140.918 cv
cp
106.698 139.202 mo
103.922 139.202 103.922 135.037 106.698 135.037 cv
109.475 135.037 109.475 139.202 106.698 139.202 cv
cp
102.689 137.486 mo
99.912 137.486 99.912 133.321 102.689 133.321 cv
105.465 133.321 105.465 137.486 102.689 137.486 cv
cp
99.141 135.769 mo
96.365 135.769 96.365 131.605 99.141 131.605 cv
101.917 131.605 101.917 135.769 99.141 135.769 cv
cp
95.908 134.053 mo
93.132 134.053 93.132 129.889 95.908 129.889 cv
98.685 129.889 98.685 134.053 95.908 134.053 cv
cp
93.138 132.337 mo
90.362 132.337 90.362 128.173 93.138 128.173 cv
95.914 128.173 95.914 132.337 93.138 132.337 cv
cp
90.781 130.621 mo
88.005 130.621 88.005 126.457 90.781 126.457 cv
93.557 126.457 93.557 130.621 90.781 130.621 cv
cp
89.025 128.905 mo
86.249 128.905 86.249 124.741 89.025 124.741 cv
91.801 124.741 91.801 128.905 89.025 128.905 cv
cp
87.687 127.189 mo
84.911 127.189 84.911 123.025 87.687 123.025 cv
90.464 123.025 90.464 127.189 87.687 127.189 cv
cp
86.815 125.473 mo
84.038 125.473 84.038 121.309 86.815 121.309 cv
89.591 121.309 89.591 125.473 86.815 125.473 cv
cp
86.413 123.757 mo
83.637 123.757 83.637 119.593 86.413 119.593 cv
89.189 119.593 89.189 123.757 86.413 123.757 cv
cp
86.458 122.041 mo
83.682 122.041 83.682 117.877 86.458 117.877 cv
89.234 117.877 89.234 122.041 86.458 122.041 cv
cp
86.984 120.325 mo
84.207 120.325 84.207 116.161 86.984 116.161 cv
89.76 116.161 89.76 120.325 86.984 120.325 cv
cp
87.927 118.609 mo
85.151 118.609 85.151 114.444 87.927 114.444 cv
90.703 114.444 90.703 118.609 87.927 118.609 cv
cp
89.315 116.893 mo
86.539 116.893 86.539 112.728 89.315 112.728 cv
92.091 112.728 92.091 116.893 89.315 116.893 cv
cp
91.13 115.177 mo
88.353 115.177 88.353 111.012 91.13 111.012 cv
93.906 111.012 93.906 115.177 91.13 115.177 cv
cp
93.326 113.461 mo
90.55 113.461 90.55 109.296 93.326 109.296 cv
96.102 109.296 96.102 113.461 93.326 113.461 cv
cp
95.782 111.745 mo
93.006 111.745 93.006 107.58 95.782 107.58 cv
98.559 107.58 98.559 111.745 95.782 111.745 cv
cp
98.704 110.029 mo
95.927 110.029 95.927 105.864 98.704 105.864 cv
101.48 105.864 101.48 110.029 98.704 110.029 cv
cp
102.069 108.313 mo
99.293 108.313 99.293 104.148 102.069 104.148 cv
104.845 104.148 104.845 108.313 102.069 108.313 cv
cp
105.676 106.596 mo
102.899 106.596 102.899 102.432 105.676 102.432 cv
108.452 102.432 108.452 106.596 105.676 106.596 cv
cp
109.902 104.88 mo
107.126 104.88 107.126 100.716 109.902 100.716 cv
112.678 100.716 112.678 104.88 109.902 104.88 cv
cp
114.009 103.164 mo
111.233 103.164 111.233 99 114.009 99 cv
116.785 99 116.785 103.164 114.009 103.164 cv
cp
118.718 101.448 mo
115.942 101.448 115.942 97.284 118.718 97.284 cv
121.495 97.284 121.495 101.448 118.718 101.448 cv
cp
123.856 99.732 mo
121.079 99.732 121.079 95.568 123.856 95.568 cv
126.632 95.568 126.632 99.732 123.856 99.732 cv
cp
128.712 98.016 mo
125.936 98.016 125.936 93.852 128.712 93.852 cv
131.488 93.852 131.488 98.016 128.712 98.016 cv
cp
136.761 96.3 mo
133.985 96.3 133.985 92.136 136.761 92.136 cv
139.537 92.136 139.537 96.3 136.761 96.3 cv
cp
139.597 94.584 mo
136.821 94.584 136.821 90.42 139.597 90.42 cv
142.374 90.42 142.374 94.584 139.597 94.584 cv
cp
151.809 92.868 mo
149.032 92.868 149.032 88.704 151.809 88.704 cv
154.585 88.704 154.585 92.868 151.809 92.868 cv
cp
151.809 89.436 mo
149.032 89.436 149.032 85.271 151.809 85.271 cv
154.585 85.271 154.585 89.436 151.809 89.436 cv
cp
@
150.685 144.35 mo
150.685 140.186 li
146.521 140.186 li
146.521 144.35 li
cp
136.111 142.634 mo
136.111 138.47 li
131.947 138.47 li
131.947 142.634 li
cp
125.962 140.918 mo
125.962 136.754 li
121.798 136.754 li
121.798 140.918 li
cp
116.106 139.202 mo
116.106 135.038 li
111.942 135.038 li
111.942 139.202 li
cp
107.457 137.486 mo
107.457 133.322 li
103.293 133.322 li
103.293 137.486 li
cp
99.47 135.769 mo
99.47 131.605 li
95.3056 131.605 li
95.3056 135.769 li
cp
92.505 134.053 mo
92.505 129.889 li
88.3406 129.889 li
88.3406 134.053 li
cp
86.889 132.337 mo
86.889 128.173 li
82.7246 128.173 li
82.7246 132.337 li
cp
82.774 130.621 mo
82.774 126.457 li
78.6096 126.457 li
78.6096 130.621 li
cp
80.314 128.905 mo
80.314 124.741 li
76.1496 124.741 li
76.1496 128.905 li
cp
79.834 127.189 mo
79.834 123.025 li
75.6696 123.025 li
75.6696 127.189 li
cp
81.059 125.473 mo
81.059 121.309 li
76.8946 121.309 li
76.8946 125.473 li
cp
83.793 123.757 mo
83.793 119.593 li
79.6286 119.593 li
79.6286 123.757 li
cp
87.686 122.041 mo
87.686 117.877 li
83.5216 117.877 li
83.5216 122.041 li
cp
92.626 120.325 mo
92.626 116.161 li
88.4616 116.161 li
88.4616 120.325 li
cp
98.5 118.609 mo
98.5 114.445 li
94.3356 114.445 li
94.3356 118.609 li
cp
104.968 116.893 mo
104.968 112.729 li
100.804 112.729 li
100.804 116.893 li
cp
112.389 115.177 mo
112.389 111.013 li
108.225 111.013 li
108.225 115.177 li
cp
120.091 113.461 mo
120.091 109.297 li
115.927 109.297 li
115.927 113.461 li
cp
128.338 111.745 mo
128.338 107.581 li
124.174 107.581 li
124.174 111.745 li
cp
138.474 110.029 mo
138.474 105.865 li
134.31 105.865 li
134.31 110.029 li
cp
152.086 108.313 mo
152.086 104.149 li
147.922 104.149 li
147.922 108.313 li
cp
153.891 106.596 mo
153.891 102.432 li
149.727 102.432 li
149.727 106.596 li
cp
0 .993988 1 0 cmyk
@
139.222 133.687 mo
140.66 133.22 li
140.66 131.707 li
141.55 132.931 li
142.988 132.463 li
142.099 133.687 li
142.988 134.911 li
141.55 134.444 li
140.66 135.668 li
140.66 134.155 li
cp
116.014 131.971 mo
117.452 131.504 li
117.452 129.991 li
118.342 131.215 li
119.78 130.747 li
118.891 131.971 li
119.78 133.195 li
118.342 132.728 li
117.452 133.951 li
117.452 132.439 li
cp
97.752 130.255 mo
99.191 129.788 li
99.191 128.275 li
100.08 129.499 li
101.519 129.031 li
100.63 130.255 li
101.519 131.479 li
100.08 131.012 li
99.191 132.235 li
99.191 130.723 li
cp
81.074 128.539 mo
82.512 128.072 li
82.512 126.559 li
83.402 127.783 li
84.84 127.315 li
83.951 128.539 li
84.84 129.763 li
83.402 129.296 li
82.512 130.519 li
82.512 129.007 li
cp
68.269 126.823 mo
69.708 126.356 li
69.708 124.843 li
70.597 126.067 li
72.036 125.599 li
71.147 126.823 li
72.036 128.047 li
70.597 127.579 li
69.708 128.803 li
69.708 127.29 li
cp
78.555 125.107 mo
79.994 124.639 li
79.994 123.127 li
80.883 124.351 li
82.322 123.883 li
81.432 125.107 li
82.322 126.331 li
80.883 125.863 li
79.994 127.087 li
79.994 125.574 li
cp
92.691 123.391 mo
94.13 122.923 li
94.13 121.411 li
95.019 122.634 li
96.458 122.167 li
95.568 123.391 li
96.458 124.615 li
95.019 124.147 li
94.13 125.371 li
94.13 123.858 li
cp
109.045 121.675 mo
110.484 121.207 li
110.484 119.695 li
111.373 120.918 li
112.812 120.451 li
111.923 121.675 li
112.812 122.899 li
111.373 122.431 li
110.484 123.655 li
110.484 122.142 li
cp
126.271 119.959 mo
127.71 119.491 li
127.71 117.979 li
128.599 119.202 li
130.038 118.735 li
129.149 119.959 li
130.038 121.183 li
128.599 120.715 li
127.71 121.939 li
127.71 120.426 li
cp
147.921 118.243 mo
149.36 117.775 li
149.36 116.262 li
150.249 117.486 li
151.688 117.019 li
150.799 118.243 li
151.688 119.467 li
150.249 118.999 li
149.36 120.223 li
149.36 118.71 li
cp
.883665 .769161 0 0 cmyk
@
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 13588 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/d 71 def
end
RKEPLS+Helvetica /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 2{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g 8{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf55.304 174.219 mo(\(d\))[-4.10268 -6.85025 0 ]yshgrestore
gsave
158.641 177.447 mo
158.641 67.509 li
43.767 67.509 li
43.767 177.447 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf55.304 157.183 mo(19.6 GeV)[-5.79636 -5.79636 -2.89818 -5.79636 -2.89818 -8.11072 -5.79635 0 ]yshgrestore
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
0 0 0 0 cmyk
ef
.4 lw
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
@
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
ef
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
@
.75 lw
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
0 0 0 0 cmyk
ef
.4 lw
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
@
.75 lw
273.484 177.447 mo
273.484 67.509 li
158.64 67.509 li
158.64 177.447 li
cp
.75021 .679683 .670222 .90164 cmyk
@
273.484 177.447 mo
273.484 67.509 li
@
269.656 161.987 mo
273.484 161.987 li
@
271.57 153.398 mo
273.484 153.398 li
@
271.57 144.809 mo
273.484 144.809 li
@
271.57 136.22 mo
273.484 136.22 li
@
269.656 127.631 mo
273.484 127.631 li
@
271.57 119.042 mo
273.484 119.042 li
@
271.57 110.453 mo
273.484 110.453 li
@
271.57 101.865 mo
273.484 101.865 li
@
269.656 93.276 mo
273.484 93.276 li
@
269.656 161.987 mo
273.484 161.987 li
@
271.57 170.576 mo
273.484 170.576 li
@
269.656 93.276 mo
273.484 93.276 li
@
271.57 84.687 mo
273.484 84.687 li
@
271.57 76.098 mo
273.484 76.098 li
@
271.57 67.509 mo
273.484 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 165.701 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 170.907 mo(-)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 130.682 mo(0)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf283.401 98.976 mo(20)[-5.79636 0 ]yshgrestore
158.641 177.447 mo
158.641 67.509 li
@
162.469 161.987 mo
158.641 161.987 li
@
160.555 153.398 mo
158.641 153.398 li
@
160.555 144.809 mo
158.641 144.809 li
@
160.555 136.22 mo
158.641 136.22 li
@
162.469 127.631 mo
158.641 127.631 li
@
160.555 119.042 mo
158.641 119.042 li
@
160.555 110.453 mo
158.641 110.453 li
@
160.555 101.865 mo
158.641 101.865 li
@
162.469 93.276 mo
158.641 93.276 li
@
162.469 161.987 mo
158.641 161.987 li
@
160.555 170.576 mo
158.641 170.576 li
@
162.469 93.276 mo
158.641 93.276 li
@
160.555 84.687 mo
158.641 84.687 li
@
160.555 76.098 mo
158.641 76.098 li
@
160.555 67.509 mo
158.641 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 165.701 mo(20)[-5.79636 0 ]yshgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLT+Symbol*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 170.907 mo(-)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 130.682 mo(0)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf158.468 98.976 mo(20)[-5.79636 0 ]yshgrestore
273.484 177.447 mo
158.641 177.447 li
@
269.198 175.963 mo
269.198 177.447 li
@
266.654 175.963 mo
266.654 177.447 li
@
264.849 175.963 mo
264.849 177.447 li
@
263.45 175.963 mo
263.45 177.447 li
@
262.306 175.963 mo
262.306 177.447 li
@
261.339 175.963 mo
261.339 177.447 li
@
260.501 175.963 mo
260.501 177.447 li
@
259.762 175.963 mo
259.762 177.447 li
@
259.101 174.478 mo
259.101 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 188.416 mo(10)[-3.95207 0 ]yshgrestore
254.752 175.963 mo
254.752 177.447 li
@
252.208 175.963 mo
252.208 177.447 li
@
250.404 175.963 mo
250.404 177.447 li
@
249.004 175.963 mo
249.004 177.447 li
@
247.86 175.963 mo
247.86 177.447 li
@
246.893 175.963 mo
246.893 177.447 li
@
246.055 175.963 mo
246.055 177.447 li
@
245.316 175.963 mo
245.316 177.447 li
@
244.655 174.478 mo
244.655 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 183.211 mo(2)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 191.256 mo(10)[-3.95207 0 ]yshgrestore
240.306 175.963 mo
240.306 177.447 li
@
237.763 175.963 mo
237.763 177.447 li
@
235.958 175.963 mo
235.958 177.447 li
@
234.558 175.963 mo
234.558 177.447 li
@
233.414 175.963 mo
233.414 177.447 li
@
232.447 175.963 mo
232.447 177.447 li
@
231.609 175.963 mo
231.609 177.447 li
@
230.87 175.963 mo
230.87 177.447 li
@
230.209 174.478 mo
230.209 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 183.211 mo(3)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 191.256 mo(10)[-3.95207 0 ]yshgrestore
225.86 175.963 mo
225.86 177.447 li
@
223.317 175.963 mo
223.317 177.447 li
@
221.512 175.963 mo
221.512 177.447 li
@
220.112 175.963 mo
220.112 177.447 li
@
218.968 175.963 mo
218.968 177.447 li
@
218.001 175.963 mo
218.001 177.447 li
@
217.163 175.963 mo
217.163 177.447 li
@
216.424 175.963 mo
216.424 177.447 li
@
215.763 174.478 mo
215.763 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 183.211 mo(4)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 191.256 mo(10)[-3.95207 0 ]yshgrestore
211.415 175.963 mo
211.415 177.447 li
@
208.871 175.963 mo
208.871 177.447 li
@
207.066 175.963 mo
207.066 177.447 li
@
205.666 175.963 mo
205.666 177.447 li
@
204.522 175.963 mo
204.522 177.447 li
@
203.555 175.963 mo
203.555 177.447 li
@
202.717 175.963 mo
202.717 177.447 li
@
201.978 175.963 mo
201.978 177.447 li
@
201.317 174.478 mo
201.317 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 183.211 mo(5)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 191.256 mo(10)[-3.95207 0 ]yshgrestore
196.969 175.963 mo
196.969 177.447 li
@
194.425 175.963 mo
194.425 177.447 li
@
192.62 175.963 mo
192.62 177.447 li
@
191.22 175.963 mo
191.22 177.447 li
@
190.076 175.963 mo
190.076 177.447 li
@
189.109 175.963 mo
189.109 177.447 li
@
188.271 175.963 mo
188.271 177.447 li
@
187.532 175.963 mo
187.532 177.447 li
@
186.871 174.478 mo
186.871 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 183.211 mo(6)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 191.256 mo(10)[-3.95207 0 ]yshgrestore
182.523 175.963 mo
182.523 177.447 li
@
179.979 175.963 mo
179.979 177.447 li
@
178.174 175.963 mo
178.174 177.447 li
@
176.774 175.963 mo
176.774 177.447 li
@
175.63 175.963 mo
175.63 177.447 li
@
174.663 175.963 mo
174.663 177.447 li
@
173.825 175.963 mo
173.825 177.447 li
@
173.086 175.963 mo
173.086 177.447 li
@
172.425 174.478 mo
172.425 177.447 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 183.211 mo(7)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 191.256 mo(10)[-3.95207 0 ]yshgrestore
168.077 175.963 mo
168.077 177.447 li
@
165.533 175.963 mo
165.533 177.447 li
@
163.728 175.963 mo
163.728 177.447 li
@
162.328 175.963 mo
162.328 177.447 li
@
161.184 175.963 mo
161.184 177.447 li
@
160.217 175.963 mo
160.217 177.447 li
@
159.38 175.963 mo
159.38 177.447 li
@
273.484 67.509 mo
158.641 67.509 li
@
269.198 68.993 mo
269.198 67.509 li
@
266.654 68.993 mo
266.654 67.509 li
@
264.849 68.993 mo
264.849 67.509 li
@
263.45 68.993 mo
263.45 67.509 li
@
262.306 68.993 mo
262.306 67.509 li
@
261.339 68.993 mo
261.339 67.509 li
@
260.501 68.993 mo
260.501 67.509 li
@
259.762 68.993 mo
259.762 67.509 li
@
259.101 70.477 mo
259.101 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf261.632 64.43 mo(10)[-3.95207 0 ]yshgrestore
254.752 68.993 mo
254.752 67.509 li
@
252.208 68.993 mo
252.208 67.509 li
@
250.404 68.993 mo
250.404 67.509 li
@
249.004 68.993 mo
249.004 67.509 li
@
247.86 68.993 mo
247.86 67.509 li
@
246.893 68.993 mo
246.893 67.509 li
@
246.055 68.993 mo
246.055 67.509 li
@
245.316 68.993 mo
245.316 67.509 li
@
244.655 70.477 mo
244.655 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf245.069 56.385 mo(2)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf247.908 64.43 mo(10)[-3.95207 0 ]yshgrestore
240.306 68.993 mo
240.306 67.509 li
@
237.763 68.993 mo
237.763 67.509 li
@
235.958 68.993 mo
235.958 67.509 li
@
234.558 68.993 mo
234.558 67.509 li
@
233.414 68.993 mo
233.414 67.509 li
@
232.447 68.993 mo
232.447 67.509 li
@
231.609 68.993 mo
231.609 67.509 li
@
230.87 68.993 mo
230.87 67.509 li
@
230.209 70.477 mo
230.209 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf229.926 56.385 mo(3)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf233.238 64.43 mo(10)[-3.95207 0 ]yshgrestore
225.86 68.993 mo
225.86 67.509 li
@
223.317 68.993 mo
223.317 67.509 li
@
221.512 68.993 mo
221.512 67.509 li
@
220.112 68.993 mo
220.112 67.509 li
@
218.968 68.993 mo
218.968 67.509 li
@
218.001 68.993 mo
218.001 67.509 li
@
217.163 68.993 mo
217.163 67.509 li
@
216.424 68.993 mo
216.424 67.509 li
@
215.763 70.477 mo
215.763 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf216.202 56.385 mo(4)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf219.041 64.43 mo(10)[-3.95207 0 ]yshgrestore
211.415 68.993 mo
211.415 67.509 li
@
208.871 68.993 mo
208.871 67.509 li
@
207.066 68.993 mo
207.066 67.509 li
@
205.666 68.993 mo
205.666 67.509 li
@
204.522 68.993 mo
204.522 67.509 li
@
203.555 68.993 mo
203.555 67.509 li
@
202.717 68.993 mo
202.717 67.509 li
@
201.978 68.993 mo
201.978 67.509 li
@
201.317 70.477 mo
201.317 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf201.059 56.385 mo(5)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf204.371 64.43 mo(10)[-3.95207 0 ]yshgrestore
196.969 68.993 mo
196.969 67.509 li
@
194.425 68.993 mo
194.425 67.509 li
@
192.62 68.993 mo
192.62 67.509 li
@
191.22 68.993 mo
191.22 67.509 li
@
190.076 68.993 mo
190.076 67.509 li
@
189.109 68.993 mo
189.109 67.509 li
@
188.271 68.993 mo
188.271 67.509 li
@
187.532 68.993 mo
187.532 67.509 li
@
186.871 70.477 mo
186.871 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf186.862 56.385 mo(6)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf190.174 64.43 mo(10)[-3.95207 0 ]yshgrestore
182.523 68.993 mo
182.523 67.509 li
@
179.979 68.993 mo
179.979 67.509 li
@
178.174 68.993 mo
178.174 67.509 li
@
176.774 68.993 mo
176.774 67.509 li
@
175.63 68.993 mo
175.63 67.509 li
@
174.663 68.993 mo
174.663 67.509 li
@
173.825 68.993 mo
173.825 67.509 li
@
173.086 68.993 mo
173.086 67.509 li
@
172.425 70.477 mo
172.425 67.509 li
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -4.73869 -4.73869 0 0 0 ]msf172.665 56.385 mo(7)shgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
RKEPLS+Helvetica*1 [0 -7.10804 -7.10804 0 0 0 ]msf175.504 64.43 mo(10)[-3.95207 0 ]yshgrestore
168.077 68.993 mo
168.077 67.509 li
@
165.533 68.993 mo
165.533 67.509 li
@
163.728 68.993 mo
163.728 67.509 li
@
162.328 68.993 mo
162.328 67.509 li
@
161.184 68.993 mo
161.184 67.509 li
@
160.217 68.993 mo
160.217 67.509 li
@
159.38 68.993 mo
159.38 67.509 li
@
261.339 166.646 mo
258.562 166.646 258.562 162.481 261.339 162.481 cv
264.115 162.481 264.115 166.646 261.339 166.646 cv
cp
254.446 164.928 mo
251.67 164.928 251.67 160.763 254.446 160.763 cv
257.222 160.763 257.222 164.928 254.446 164.928 cv
cp
247.075 163.21 mo
244.298 163.21 244.298 159.046 247.075 159.046 cv
249.851 159.046 249.851 163.21 247.075 163.21 cv
cp
242.324 161.492 mo
239.548 161.492 239.548 157.328 242.324 157.328 cv
245.1 157.328 245.1 161.492 242.324 161.492 cv
cp
237.868 159.775 mo
235.092 159.775 235.092 155.61 237.868 155.61 cv
240.644 155.61 240.644 159.775 237.868 159.775 cv
cp
232.253 158.057 mo
229.476 158.057 229.476 153.892 232.253 153.892 cv
235.029 153.892 235.029 158.057 232.253 158.057 cv
cp
227.439 156.339 mo
224.663 156.339 224.663 152.175 227.439 152.175 cv
230.216 152.175 230.216 156.339 227.439 156.339 cv
cp
222.908 154.621 mo
220.132 154.621 220.132 150.457 222.908 150.457 cv
225.684 150.457 225.684 154.621 222.908 154.621 cv
cp
218.664 152.903 mo
215.888 152.903 215.888 148.739 218.664 148.739 cv
221.44 148.739 221.44 152.903 218.664 152.903 cv
cp
214.303 151.186 mo
211.527 151.186 211.527 147.021 214.303 147.021 cv
217.08 147.021 217.08 151.186 214.303 151.186 cv
cp
210.556 149.468 mo
207.78 149.468 207.78 145.303 210.556 145.303 cv
213.332 145.303 213.332 149.468 210.556 149.468 cv
cp
206.991 147.75 mo
204.215 147.75 204.215 143.586 206.991 143.586 cv
209.767 143.586 209.767 147.75 206.991 147.75 cv
cp
203.546 146.032 mo
200.77 146.032 200.77 141.868 203.546 141.868 cv
206.322 141.868 206.322 146.032 203.546 146.032 cv
cp
200.51 144.315 mo
197.733 144.315 197.733 140.15 200.51 140.15 cv
203.286 140.15 203.286 144.315 200.51 144.315 cv
cp
197.713 142.597 mo
194.937 142.597 194.937 138.432 197.713 138.432 cv
200.49 138.432 200.49 142.597 197.713 142.597 cv
cp
195.222 140.879 mo
192.446 140.879 192.446 136.715 195.222 136.715 cv
197.999 136.715 197.999 140.879 195.222 140.879 cv
cp
192.993 139.161 mo
190.217 139.161 190.217 134.997 192.993 134.997 cv
195.77 134.997 195.77 139.161 192.993 139.161 cv
cp
191.074 137.443 mo
188.298 137.443 188.298 133.279 191.074 133.279 cv
193.85 133.279 193.85 137.443 191.074 137.443 cv
cp
189.447 135.726 mo
186.671 135.726 186.671 131.561 189.447 131.561 cv
192.223 131.561 192.223 135.726 189.447 135.726 cv
cp
188.135 134.008 mo
185.359 134.008 185.359 129.843 188.135 129.843 cv
190.911 129.843 190.911 134.008 188.135 134.008 cv
cp
187.125 132.29 mo
184.349 132.29 184.349 128.126 187.125 128.126 cv
189.902 128.126 189.902 132.29 187.125 132.29 cv
cp
186.419 130.572 mo
183.643 130.572 183.643 126.408 186.419 126.408 cv
189.195 126.408 189.195 130.572 186.419 130.572 cv
cp
186.034 128.855 mo
183.257 128.855 183.257 124.69 186.034 124.69 cv
188.81 124.69 188.81 128.855 186.034 128.855 cv
cp
185.946 127.137 mo
183.17 127.137 183.17 122.972 185.946 122.972 cv
188.723 122.972 188.723 127.137 185.946 127.137 cv
cp
186.188 125.419 mo
183.412 125.419 183.412 121.255 186.188 121.255 cv
188.964 121.255 188.964 125.419 186.188 125.419 cv
cp
186.713 123.701 mo
183.937 123.701 183.937 119.537 186.713 119.537 cv
189.49 119.537 189.49 123.701 186.713 123.701 cv
cp
187.572 121.983 mo
184.796 121.983 184.796 117.819 187.572 117.819 cv
190.348 117.819 190.348 121.983 187.572 121.983 cv
cp
188.73 120.266 mo
185.954 120.266 185.954 116.101 188.73 116.101 cv
191.506 116.101 191.506 120.266 188.73 120.266 cv
cp
190.178 118.548 mo
187.402 118.548 187.402 114.383 190.178 114.383 cv
192.954 114.383 192.954 118.548 190.178 118.548 cv
cp
191.945 116.83 mo
189.168 116.83 189.168 112.666 191.945 112.666 cv
194.721 112.666 194.721 116.83 191.945 116.83 cv
cp
193.973 115.112 mo
191.197 115.112 191.197 110.948 193.973 110.948 cv
196.75 110.948 196.75 115.112 193.973 115.112 cv
cp
196.317 113.395 mo
193.541 113.395 193.541 109.23 196.317 109.23 cv
199.094 109.23 199.094 113.395 196.317 113.395 cv
cp
198.911 111.677 mo
196.135 111.677 196.135 107.512 198.911 107.512 cv
201.688 107.512 201.688 111.677 198.911 111.677 cv
cp
201.813 109.959 mo
199.037 109.959 199.037 105.795 201.813 105.795 cv
204.589 105.795 204.589 109.959 201.813 109.959 cv
cp
204.971 108.241 mo
202.194 108.241 202.194 104.077 204.971 104.077 cv
207.747 104.077 207.747 108.241 204.971 108.241 cv
cp
208.288 106.523 mo
205.512 106.523 205.512 102.359 208.288 102.359 cv
211.064 102.359 211.064 106.523 208.288 106.523 cv
cp
211.998 104.806 mo
209.222 104.806 209.222 100.641 211.998 100.641 cv
214.775 100.641 214.775 104.806 211.998 104.806 cv
cp
215.983 103.088 mo
213.207 103.088 213.207 98.923 215.983 98.923 cv
218.76 98.923 218.76 103.088 215.983 103.088 cv
cp
220.148 101.37 mo
217.372 101.37 217.372 97.206 220.148 97.206 cv
222.925 97.206 222.925 101.37 220.148 101.37 cv
cp
224.554 99.652 mo
221.778 99.652 221.778 95.488 224.554 95.488 cv
227.33 95.488 227.33 99.652 224.554 99.652 cv
cp
229.134 97.935 mo
226.357 97.935 226.357 93.77 229.134 93.77 cv
231.91 93.77 231.91 97.935 229.134 97.935 cv
cp
233.725 96.217 mo
230.948 96.217 230.948 92.052 233.725 92.052 cv
236.501 92.052 236.501 96.217 233.725 96.217 cv
cp
239.215 94.499 mo
236.439 94.499 236.439 90.335 239.215 90.335 cv
241.991 90.335 241.991 94.499 239.215 94.499 cv
cp
244.655 92.781 mo
241.879 92.781 241.879 88.617 244.655 88.617 cv
247.431 88.617 247.431 92.781 244.655 92.781 cv
cp
251.423 91.063 mo
248.647 91.063 248.647 86.899 251.423 86.899 cv
254.199 86.899 254.199 91.063 251.423 91.063 cv
cp
258.503 89.346 mo
255.727 89.346 255.727 85.181 258.503 85.181 cv
261.279 85.181 261.279 89.346 258.503 89.346 cv
cp
264.849 87.628 mo
262.073 87.628 262.073 83.464 264.849 83.464 cv
267.626 83.464 267.626 87.628 264.849 87.628 cv
cp
264.849 85.91 mo
262.073 85.91 262.073 81.746 264.849 81.746 cv
267.626 81.746 267.626 85.91 264.849 85.91 cv
cp
@
265.532 154.621 mo
265.532 150.457 li
261.367 150.457 li
261.367 154.621 li
cp
259.072 152.903 mo
259.072 148.739 li
254.908 148.739 li
254.908 152.903 li
cp
250.047 151.186 mo
250.047 147.022 li
245.883 147.022 li
245.883 151.186 li
cp
241.706 149.468 mo
241.706 145.304 li
237.541 145.304 li
237.541 149.468 li
cp
234.054 147.75 mo
234.054 143.586 li
229.89 143.586 li
229.89 147.75 li
cp
225.697 146.032 mo
225.697 141.868 li
221.532 141.868 li
221.532 146.032 li
cp
218.572 144.315 mo
218.572 140.151 li
214.408 140.151 li
214.408 144.315 li
cp
211.621 142.597 mo
211.621 138.433 li
207.457 138.433 li
207.457 142.597 li
cp
205.27 140.879 mo
205.27 136.715 li
201.106 136.715 li
201.106 140.879 li
cp
199.489 139.161 mo
199.489 134.997 li
195.325 134.997 li
195.325 139.161 li
cp
194.349 137.443 mo
194.349 133.279 li
190.185 133.279 li
190.185 137.443 li
cp
189.92 135.726 mo
189.92 131.562 li
185.756 131.562 li
185.756 135.726 li
cp
186.277 134.008 mo
186.277 129.844 li
182.113 129.844 li
182.113 134.008 li
cp
183.506 132.29 mo
183.506 128.126 li
179.342 128.126 li
179.342 132.29 li
cp
181.688 130.572 mo
181.688 126.408 li
177.524 126.408 li
177.524 130.572 li
cp
180.905 128.855 mo
180.905 124.691 li
176.741 124.691 li
176.741 128.855 li
cp
181.238 127.137 mo
181.238 122.973 li
177.074 122.973 li
177.074 127.137 li
cp
182.604 125.419 mo
182.604 121.255 li
178.44 121.255 li
178.44 125.419 li
cp
184.925 123.701 mo
184.925 119.537 li
180.761 119.537 li
180.761 123.701 li
cp
188.117 121.983 mo
188.117 117.819 li
183.953 117.819 li
183.953 121.983 li
cp
192.098 120.266 mo
192.098 116.102 li
187.934 116.102 li
187.934 120.266 li
cp
196.785 118.548 mo
196.785 114.384 li
192.621 114.384 li
192.621 118.548 li
cp
202.106 116.83 mo
202.106 112.666 li
197.942 112.666 li
197.942 116.83 li
cp
208.058 115.112 mo
208.058 110.948 li
203.894 110.948 li
203.894 115.112 li
cp
214.473 113.395 mo
214.473 109.231 li
210.309 109.231 li
210.309 113.395 li
cp
221.226 111.677 mo
221.226 107.513 li
217.062 107.513 li
217.062 111.677 li
cp
228.713 109.959 mo
228.713 105.795 li
224.548 105.795 li
224.548 109.959 li
cp
236.528 108.241 mo
236.528 104.077 li
232.364 104.077 li
232.364 108.241 li
cp
244.449 106.523 mo
244.449 102.359 li
240.285 102.359 li
240.285 106.523 li
cp
252.975 104.806 mo
252.975 100.642 li
248.81 100.642 li
248.81 104.806 li
cp
265.532 103.088 mo
265.532 98.9236 li
261.367 98.9236 li
261.367 103.088 li
cp
0 .993988 1 0 cmyk
@
254.475 137.079 mo
255.914 136.612 li
255.914 135.099 li
256.803 136.323 li
258.242 135.855 li
257.352 137.079 li
258.242 138.303 li
256.803 137.835 li
255.914 139.059 li
255.914 137.546 li
cp
237.43 135.361 mo
238.868 134.894 li
238.868 133.381 li
239.758 134.605 li
241.196 134.137 li
240.307 135.361 li
241.196 136.585 li
239.758 136.118 li
238.868 137.341 li
238.868 135.829 li
cp
221.295 133.643 mo
222.734 133.176 li
222.734 131.663 li
223.623 132.887 li
225.062 132.42 li
224.173 133.643 li
225.062 134.867 li
223.623 134.4 li
222.734 135.624 li
222.734 134.111 li
cp
205.789 131.926 mo
207.227 131.458 li
207.227 129.945 li
208.117 131.169 li
209.555 130.702 li
208.666 131.926 li
209.555 133.15 li
208.117 132.682 li
207.227 133.906 li
207.227 132.393 li
cp
191.802 130.208 mo
193.24 129.74 li
193.24 128.228 li
194.13 129.452 li
195.568 128.984 li
194.679 130.208 li
195.568 131.432 li
194.13 130.964 li
193.24 132.188 li
193.24 130.675 li
cp
180.001 128.49 mo
181.44 128.023 li
181.44 126.51 li
182.329 127.734 li
183.768 127.266 li
182.879 128.49 li
183.768 129.714 li
182.329 129.247 li
181.44 130.47 li
181.44 128.958 li
cp
171.975 126.772 mo
173.414 126.305 li
173.414 124.792 li
174.303 126.016 li
175.742 125.548 li
174.853 126.772 li
175.742 127.996 li
174.303 127.529 li
173.414 128.753 li
173.414 127.24 li
cp
179.569 125.055 mo
181.007 124.587 li
181.007 123.074 li
181.897 124.298 li
183.335 123.831 li
182.446 125.055 li
183.335 126.278 li
181.897 125.811 li
181.007 127.035 li
181.007 125.522 li
cp
190.951 123.337 mo
192.39 122.869 li
192.39 121.357 li
193.279 122.58 li
194.718 122.113 li
193.828 123.337 li
194.718 124.561 li
193.279 124.093 li
192.39 125.317 li
192.39 123.804 li
cp
204.512 121.619 mo
205.951 121.152 li
205.951 119.639 li
206.84 120.863 li
208.279 120.395 li
207.39 121.619 li
208.279 122.843 li
206.84 122.375 li
205.951 123.599 li
205.951 122.086 li
cp
219.645 119.901 mo
221.084 119.434 li
221.084 117.921 li
221.973 119.145 li
223.412 118.677 li
222.522 119.901 li
223.412 121.125 li
221.973 120.658 li
221.084 121.882 li
221.084 120.369 li
cp
235.556 118.183 mo
236.995 117.716 li
236.995 116.203 li
237.884 117.427 li
239.323 116.96 li
238.434 118.183 li
239.323 119.407 li
237.884 118.94 li
236.995 120.164 li
236.995 118.651 li
cp
253.69 116.466 mo
255.128 115.998 li
255.128 114.485 li
256.018 115.709 li
257.456 115.242 li
256.567 116.466 li
257.456 117.69 li
256.018 117.222 li
255.128 118.446 li
255.128 116.933 li
cp
.883665 .769161 0 0 cmyk
@
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 14696 75 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc8000000>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/h 75 def
end
RKEPLS+Helvetica /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 2{/.notdef}rp /less 10{/.notdef}rp /G 12{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h 7{/.notdef}rp /p 8{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -12.3206 -12.3206 0 0 0 ]msf170.299 174.219 mo(\(h\))[-4.10268 -6.85025 0 ]yshgrestore
gsave
286.245 177.447 mo
286.245 67.509 li
158.641 67.509 li
158.641 177.447 li
cp
clp
.75021 .679683 .670222 .90164 cmyk
RKEPLS+Helvetica*1 [0 -10.4251 -10.4251 0 0 0 ]msf170.299 157.183 mo(200 GeV)[-5.79636 -5.79636 -5.79636 -2.89818 -8.11072 -5.79636 0 ]yshgrestore
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RKEPLS+Helvetica gcheck setglobal} if
1 7644 40 <000200af000004ed05bd000b000c004e4024071e04040b031e0100020908
1e0a0b080c020c0c02000669023b091a0e03082500190d0eb8010bb32195
89182b2b4ef44dfd3c4e10f64df4e41112392f003f3f3cfd3c3f3ced1239
2ffd313013211521112115211121152101af042ffc93032bfcd5037cfbc2
021f05bdb4fe42aafe0eaf05bd000000>RKEPLS+Helvetica AddT42Char 
1 8508 46 <0001009c0000054e05bd000b00ba407a0605250527084807580777058803
9803b803c803e7070ba603a60402050528082909a809f902050705070805
0903d4020105050608080709020228030325120404090605052512080807
050409080705040302070609080502040a040301020a0706086b067b06e8
0603061a0d010a250b00190c0dd621765e182b2b4ef43c4dfd3c194e10e6
5d18003f3c3c3f3c3c1217390111173908874d2e2b057d10c5872e182b04
104b52787ac510083c083c31300072715d01715d13331101210901210107
11239cc202cc0113fd9d0274fefdfdfeebc205bdfd3402ccfdb0fc9302e1
e1fe0000>RKEPLS+Helvetica AddT42Char 
1 9112 49 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>RKEPLS+Helvetica AddT42Char 
1 15356 80 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>RKEPLS+Helvetica AddT42Char 
1 15604 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>RKEPLS+Helvetica AddT42Char 
1 15788 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>RKEPLS+Helvetica AddT42Char 
2 232 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>RKEPLS+Helvetica AddT42Char 
2 372 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>RKEPLS+Helvetica AddT42Char 
2 820 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>RKEPLS+Helvetica AddT42Char 
2 980 88 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>RKEPLS+Helvetica AddT42Char 
2 1160 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>RKEPLS+Helvetica AddT42Char 
RKEPLS+Helvetica /CharStrings get begin
/E 40 def
/K 46 def
/N 49 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/v 89 def
end
RKEPLS+Helvetica /Encoding get
dup 69 /E put
dup 75 /K put
dup 78 /N put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RKEPLS+Helvetica*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 2{/.notdef}rp /less 8{/.notdef}rp /E /.notdef /G 3{/.notdef}rp /K 2{/.notdef}rp /N 5{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h 4{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 2{/.notdef}rp /bar 131{/.notdef}rp]RKEPLS+Helvetica nfRKEPLS+Helvetica*1 [0 -9.93782 -9.93782 0 0 0 ]msf301.857 281.643 mo(K)shRKEPLS+Helvetica*1 [0 -14.6701 -14.6701 0 0 0 ]msf297.598 291.58 mo(N)sh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRKEPLT+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Delta <1C60D8A8C9B7D7E8B58AC9FD34B39998D3256E49F56D5FA18F9F4C57470315626B2281AF826BF69338320709CB716378> |-systemdict /gcheck known {setglobal} if end {end} ifendRKEPLT+Symbol /Encoding getdup 68 /Delta putpop%ADOEndSubsetFont
/RKEPLT+Symbol*1 [45{/.notdef}rp /minus 22{/.notdef}rp /Delta 187{/.notdef}rp]RKEPLT+Symbol nfRKEPLT+Symbol*1 [0 -14.6701 -14.6701 0 0 0 ]msf297.598 300.572 mo(D)shRKEPLS+Helvetica*1 [-11.8307 0 0 11.8307 0 0 ]msf202.478 528.195 mo(Number of Events)[-8.5416 -6.57787 -9.85489 -6.57787 -6.57787 -3.93953 -3.28894 -6.57787 -3.28893 -3.28894 -7.89098 -5.91534 -6.57787 -6.57787 -3.28893 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/RKEPLS+Helvetica*1 uf/RKEPLS+Helvetica uf/Helvetica uf/RKEPLT+Symbol*1 uf/RKEPLT+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
