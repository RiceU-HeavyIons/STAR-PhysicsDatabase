%!PS-Adobe-3.1 EPSF-3.0
%%Title: DAuMeanPt.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Patricia Fachini
%%CreationDate: 11/1/2006
%%CropBox: 0.000000 0.000000 642.350586 439.507813
%%BoundingBox: 0 0 643 440 
%%HiResBoundingBox: 0.000000 0.000000 642.350586 439.507813
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -439.508 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 439.508 ln
642.351 439.508 ln
642.351 0 ln
clp
0.75 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
81.9082 383.439 mo
81.9082 14.4395 ln
626.158 14.4395 ln
626.158 383.439 ln
81.9082 383.439 ln
cp
false op
0 0 0 1 cmyk
s
81.9082 383.439 mo
81.9082 14.4395 ln
626.158 14.4395 ln
626.158 383.439 ln
81.9082 383.439 ln
cp
81.9082 383.439 mo
626.158 383.439 ln
81.9082 372.439 mo
81.9082 383.439 ln
97.1582 377.939 mo
97.1582 383.439 ln
112.158 377.939 mo
112.158 383.439 ln
127.408 377.939 mo
127.408 383.439 ln
142.408 372.439 mo
142.408 383.439 ln
157.408 377.939 mo
157.408 383.439 ln
172.658 377.939 mo
172.658 383.439 ln
187.658 377.939 mo
187.658 383.439 ln
202.908 372.439 mo
202.908 383.439 ln
217.908 377.939 mo
217.908 383.439 ln
233.158 377.939 mo
233.158 383.439 ln
248.158 377.939 mo
248.158 383.439 ln
263.408 372.439 mo
263.408 383.439 ln
278.408 377.939 mo
278.408 383.439 ln
293.658 377.939 mo
293.658 383.439 ln
308.658 377.939 mo
308.658 383.439 ln
323.908 372.439 mo
323.908 383.439 ln
338.908 377.939 mo
338.908 383.439 ln
354.158 377.939 mo
354.158 383.439 ln
369.158 377.939 mo
369.158 383.439 ln
384.408 372.439 mo
384.408 383.439 ln
399.408 377.939 mo
399.408 383.439 ln
414.658 377.939 mo
414.658 383.439 ln
429.658 377.939 mo
429.658 383.439 ln
444.658 372.439 mo
444.658 383.439 ln
459.908 377.939 mo
459.908 383.439 ln
474.908 377.939 mo
474.908 383.439 ln
490.158 377.939 mo
490.158 383.439 ln
505.158 372.439 mo
505.158 383.439 ln
520.408 377.939 mo
520.408 383.439 ln
535.408 377.939 mo
535.408 383.439 ln
550.658 377.939 mo
550.658 383.439 ln
565.658 372.439 mo
565.658 383.439 ln
580.908 377.939 mo
580.908 383.439 ln
595.908 377.939 mo
595.908 383.439 ln
611.158 377.939 mo
611.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec117da7ee51b33a5a233cda9aa5c3> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
76.4082 406.439 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
129.158 406.439 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
140.837 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
189.908 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
201.587 406.439 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
207.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
250.408 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
262.087 406.439 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
267.922 406.439 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
311.158 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
322.837 406.439 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
328.672 406.439 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
379.408 406.439 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
431.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
443.087 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
491.908 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
503.587 406.439 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
509.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
552.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
564.087 406.439 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
569.922 406.439 mov
(6) sh
restore_ctm
81.9082 383.439 mo
81.9082 14.4395 ln
98.1582 383.439 mo
81.9082 383.439 ln
90.1582 371.939 mo
81.9082 371.939 ln
90.1582 360.439 mo
81.9082 360.439 ln
90.1582 348.939 mo
81.9082 348.939 ln
98.1582 337.439 mo
81.9082 337.439 ln
90.1582 325.939 mo
81.9082 325.939 ln
90.1582 314.439 mo
81.9082 314.439 ln
90.1582 302.939 mo
81.9082 302.939 ln
98.1582 291.189 mo
81.9082 291.189 ln
90.1582 279.689 mo
81.9082 279.689 ln
90.1582 268.189 mo
81.9082 268.189 ln
90.1582 256.689 mo
81.9082 256.689 ln
98.1582 245.189 mo
81.9082 245.189 ln
90.1582 233.689 mo
81.9082 233.689 ln
90.1582 222.189 mo
81.9082 222.189 ln
90.1582 210.439 mo
81.9082 210.439 ln
98.1582 198.939 mo
81.9082 198.939 ln
90.1582 187.439 mo
81.9082 187.439 ln
90.1582 175.939 mo
81.9082 175.939 ln
90.1582 164.439 mo
81.9082 164.439 ln
98.1582 152.939 mo
81.9082 152.939 ln
90.1582 141.439 mo
81.9082 141.439 ln
90.1582 129.689 mo
81.9082 129.689 ln
90.1582 118.189 mo
81.9082 118.189 ln
98.1582 106.689 mo
81.9082 106.689 ln
90.1582 95.1895 mo
81.9082 95.1895 ln
90.1582 83.6895 mo
81.9082 83.6895 ln
90.1582 72.1895 mo
81.9082 72.1895 ln
98.1582 60.6895 mo
81.9082 60.6895 ln
90.1582 49.1895 mo
81.9082 49.1895 ln
90.1582 37.4395 mo
81.9082 37.4395 ln
90.1582 25.9395 mo
81.9082 25.9395 ln
98.1582 14.4395 mo
81.9082 14.4395 ln
s
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
613.158 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
624.837 406.439 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
630.672 406.439 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
52.8291 390.689 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 344.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 344.689 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 298.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 298.689 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 298.689 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 252.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 252.689 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 252.689 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 206.939 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 206.939 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 206.939 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
54.8291 159.939 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 113.939 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 113.939 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 67.9395 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 67.9395 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 67.9395 mov
(4) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 22.1895 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 22.1895 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 22.1895 mov
(6) sh
481.408 167.564 mo
489.283 151.814 ln
473.533 151.814 ln
481.408 167.564 ln
0.956863 0.929412 0 0 cmyk
ef
419.158 216.064 mo
427.033 200.314 ln
411.283 200.314 ln
419.158 216.064 ln
ef
365.658 232.314 mo
373.533 216.564 ln
357.783 216.564 ln
365.658 232.314 ln
ef
232.408 253.064 mo
240.283 237.314 ln
224.533 237.314 ln
232.408 253.064 ln
ef
231.158 273.814 mo
239.033 258.064 ln
223.283 258.064 ln
231.158 273.814 ln
ef
124.158 310.814 mo
132.033 295.064 ln
116.283 295.064 ln
124.158 310.814 ln
ef
232.408 237.439 mo
232.408 231.189 ln
230.408 231.189 mo
234.408 231.189 ln
232.408 252.939 mo
232.408 258.939 ln
230.408 258.939 mo
234.408 258.939 ln
365.658 216.439 mo
365.658 212.939 ln
363.658 212.939 mo
367.658 212.939 ln
365.658 232.189 mo
365.658 235.939 ln
363.658 235.939 mo
367.658 235.939 ln
419.158 200.439 mo
419.158 192.189 ln
417.408 192.189 mo
421.158 192.189 ln
419.158 215.939 mo
419.158 224.439 ln
417.408 224.439 mo
421.158 224.439 ln
481.408 151.939 mo
481.408 127.439 ln
479.408 127.439 mo
483.408 127.439 ln
481.408 167.689 mo
481.408 192.189 ln
479.408 192.189 mo
483.408 192.189 ln
0 0 0 1 cmyk
s
81.9082 383.439 mo
81.9082 14.4395 ln
626.158 14.4395 ln
626.158 383.439 ln
81.9082 383.439 ln
cp
81.9082 383.439 mo
626.158 383.439 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
end end
end
/ArialMT findfont /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
41{/.notdef}repeat /parenright 214{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
619.908 432.689 mov
(\)) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [16 0 0 -16 0 0 ]mfnt sfnt
BuildWidthShowArray
609.158 424.939 mov
(2) sh
restore_ctm
81.9082 372.439 mo
81.9082 383.439 ln
97.1582 377.939 mo
97.1582 383.439 ln
112.158 377.939 mo
112.158 383.439 ln
127.408 377.939 mo
127.408 383.439 ln
142.408 372.439 mo
142.408 383.439 ln
157.408 377.939 mo
157.408 383.439 ln
172.658 377.939 mo
172.658 383.439 ln
187.658 377.939 mo
187.658 383.439 ln
202.908 372.439 mo
202.908 383.439 ln
217.908 377.939 mo
217.908 383.439 ln
233.158 377.939 mo
233.158 383.439 ln
248.158 377.939 mo
248.158 383.439 ln
263.408 372.439 mo
263.408 383.439 ln
278.408 377.939 mo
278.408 383.439 ln
293.658 377.939 mo
293.658 383.439 ln
308.658 377.939 mo
308.658 383.439 ln
323.908 372.439 mo
323.908 383.439 ln
338.908 377.939 mo
338.908 383.439 ln
354.158 377.939 mo
354.158 383.439 ln
369.158 377.939 mo
369.158 383.439 ln
384.408 372.439 mo
384.408 383.439 ln
399.408 377.939 mo
399.408 383.439 ln
414.658 377.939 mo
414.658 383.439 ln
429.658 377.939 mo
429.658 383.439 ln
444.658 372.439 mo
444.658 383.439 ln
459.908 377.939 mo
459.908 383.439 ln
474.908 377.939 mo
474.908 383.439 ln
490.158 377.939 mo
490.158 383.439 ln
505.158 372.439 mo
505.158 383.439 ln
520.408 377.939 mo
520.408 383.439 ln
535.408 377.939 mo
535.408 383.439 ln
550.658 377.939 mo
550.658 383.439 ln
565.658 372.439 mo
565.658 383.439 ln
580.908 377.939 mo
580.908 383.439 ln
595.908 377.939 mo
595.908 383.439 ln
611.158 377.939 mo
611.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
s
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/slash 
<10bf317079c7734b2b2d10870fa08bf22c5d2d2b831224fa01d492> ND 
/G 
<10bf317032094fc341dd3fe1e9917e7219e3088328e93e3f86c5266dab4a
4b6a0dbbd499ac2f08f52498a1230ac74b9126578260e72bf920c6626e18
e52befca2ad4c5c494a757a5861d225d61833e7b6db104708e0fcf59a03e
ddf773c2fe0a4faea092dc7a4d01275005fb3564e1d1f76f67c0ded9002e
e506fbb65143c90d6526880b9b4967a1233028aa9e8c3e30f59ec7f29cd2
713cffb71673b8ee9c01e77581750db787f4754cdac76007b210e32a2dfc
77791af6ea67a232e72999312d> ND 
/M 
<10bf317027e82ad35cdddc2b5c741dc6db294c8b4a0d6704b3828695c903
74c6f490906b329d29d44205638bbfe80126114fe37407e2e312c7bcbd2c
1b7b9e7fac2817224e19> ND 
/V 
<10bf31707d937b42ca5aa917fb8735867898e231374dce1d715d27566dcf
115e95280405ef7103dd8183790f381980b4f25c32c305> ND 
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 47 /slash put
dup 71 /G put
dup 77 /M put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft 6{/.notdef}repeat /slash 23{/.notdef}repeat /G 
5{/.notdef}repeat /M 8{/.notdef}repeat /V 10{/.notdef}repeat /a /.notdef /c 
/.notdef /e 13{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
485.408 432.689 mov
(Mass \(GeV/c) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
76.4082 406.439 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
129.158 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
140.837 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
189.908 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
201.587 406.439 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
207.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
250.408 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
262.087 406.439 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
267.922 406.439 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
311.158 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
322.837 406.439 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
328.672 406.439 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
379.408 406.439 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
431.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
443.087 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
491.908 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
503.587 406.439 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
509.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
552.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
564.087 406.439 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
569.922 406.439 mov
(6) sh
restore_ctm
81.9082 383.439 mo
81.9082 14.4395 ln
s
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
613.158 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
624.837 406.439 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
630.672 406.439 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/greater 
<10bf317030abe1cb512ce1388878d2456bf1fc64a861764b528474e09f50
3fb9a632454a658f719bbd> ND 
end end
end
/ArialMT findfont /Encoding get
dup 62 /greater put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
62{/.notdef}repeat /greater 193{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [0 -21 -21 0 0 0 ]mfnt sfnt
BuildWidthShowArray
21 90.4395 mov
(>) sh
/ArialMT*8 findfont [0 -21 -21 0 0 0 ]mfnt sfnt
BuildWidthShowArray
21 78.1758 mov
( \(GeV/c) sh
/ArialMT*7 findfont [0 -21 -21 0 0 0 ]mfnt sfnt
BuildWidthShowArray
21 6.99316 mov
(\)) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
84{/.notdef}repeat /T 171{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [0 -16 -16 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32 101.439 mov
(T) sh
restore_ctm
98.1582 383.439 mo
81.9082 383.439 ln
90.1582 371.939 mo
81.9082 371.939 ln
90.1582 360.439 mo
81.9082 360.439 ln
90.1582 348.939 mo
81.9082 348.939 ln
98.1582 337.439 mo
81.9082 337.439 ln
90.1582 325.939 mo
81.9082 325.939 ln
90.1582 314.439 mo
81.9082 314.439 ln
90.1582 302.939 mo
81.9082 302.939 ln
98.1582 291.189 mo
81.9082 291.189 ln
90.1582 279.689 mo
81.9082 279.689 ln
90.1582 268.189 mo
81.9082 268.189 ln
90.1582 256.689 mo
81.9082 256.689 ln
98.1582 245.189 mo
81.9082 245.189 ln
90.1582 233.689 mo
81.9082 233.689 ln
90.1582 222.189 mo
81.9082 222.189 ln
90.1582 210.439 mo
81.9082 210.439 ln
98.1582 198.939 mo
81.9082 198.939 ln
90.1582 187.439 mo
81.9082 187.439 ln
90.1582 175.939 mo
81.9082 175.939 ln
90.1582 164.439 mo
81.9082 164.439 ln
98.1582 152.939 mo
81.9082 152.939 ln
90.1582 141.439 mo
81.9082 141.439 ln
90.1582 129.689 mo
81.9082 129.689 ln
90.1582 118.189 mo
81.9082 118.189 ln
98.1582 106.689 mo
81.9082 106.689 ln
90.1582 95.1895 mo
81.9082 95.1895 ln
90.1582 83.6895 mo
81.9082 83.6895 ln
90.1582 72.1895 mo
81.9082 72.1895 ln
98.1582 60.6895 mo
81.9082 60.6895 ln
90.1582 49.1895 mo
81.9082 49.1895 ln
90.1582 37.4395 mo
81.9082 37.4395 ln
90.1582 25.9395 mo
81.9082 25.9395 ln
98.1582 14.4395 mo
81.9082 14.4395 ln
s
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/less 
<10bf317030abe1cb512ceea0449cd815b1f6ae31114cd5e64ac5f3e96d86
2e69bcc80ee2b040b2534f> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 60 /less put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
60{/.notdef}repeat /less 51{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [0 -21 -21 0 0 0 ]mfnt sfnt
BuildWidthShowArray
21 124.939 mov
(<p) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
52.8291 390.689 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 344.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 344.689 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 298.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 298.689 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 298.689 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 252.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 252.689 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 252.689 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 206.939 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 206.939 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 206.939 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
54.8291 159.939 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 113.939 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 113.939 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 67.9395 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 67.9395 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 67.9395 mov
(4) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 22.1895 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 22.1895 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 22.1895 mov
(6) sh
541.408 142.314 mo
549.283 126.564 ln
533.533 126.564 ln
541.408 142.314 ln
0.956863 0.929412 0 0 cmyk
ef
500.658 156.064 mo
508.533 140.314 ln
492.783 140.314 ln
500.658 156.064 ln
ef
454.408 245.564 mo
462.283 229.814 ln
446.533 229.814 ln
454.408 245.564 ln
ef
390.158 202.314 mo
398.033 186.564 ln
382.283 186.564 ln
390.158 202.314 ln
ef
378.158 248.814 mo
386.033 233.064 ln
370.283 233.064 ln
378.158 248.814 ln
ef
351.658 204.564 mo
359.533 188.814 ln
343.783 188.814 ln
351.658 204.564 ln
ef
316.158 243.814 mo
324.033 228.064 ln
308.283 228.064 ln
316.158 243.814 ln
ef
316.158 228.189 mo
316.158 222.189 ln
314.408 222.189 mo
318.158 222.189 ln
316.158 243.689 mo
316.158 249.689 ln
314.408 249.689 mo
318.158 249.689 ln
351.658 188.939 mo
351.658 164.439 ln
349.658 164.439 mo
353.658 164.439 ln
351.658 204.439 mo
351.658 228.939 ln
349.658 228.939 mo
353.658 228.939 ln
378.158 233.189 mo
378.158 213.189 ln
376.408 213.189 mo
380.158 213.189 ln
378.158 248.689 mo
378.158 268.689 ln
376.408 268.689 mo
380.158 268.689 ln
390.158 186.689 mo
390.158 175.939 ln
388.158 175.939 mo
392.158 175.939 ln
390.158 202.189 mo
390.158 212.939 ln
388.158 212.939 mo
392.158 212.939 ln
454.408 229.939 mo
454.408 207.189 ln
452.408 207.189 mo
456.408 207.189 ln
454.408 245.689 mo
454.408 268.189 ln
452.408 268.189 mo
456.408 268.189 ln
500.658 140.439 mo
500.658 132.189 ln
498.658 132.189 mo
502.658 132.189 ln
500.658 156.189 mo
500.658 164.439 ln
498.658 164.439 mo
502.658 164.439 ln
541.408 126.689 mo
541.408 104.439 ln
539.408 104.439 mo
543.408 104.439 ln
541.408 142.189 mo
541.408 164.439 ln
539.408 164.439 mo
543.408 164.439 ln
0 0 0 1 cmyk
s
81.9082 383.439 mo
81.9082 14.4395 ln
626.158 14.4395 ln
626.158 383.439 ln
81.9082 383.439 ln
cp
81.9082 383.439 mo
626.158 383.439 ln
81.9082 372.439 mo
81.9082 383.439 ln
97.1582 377.939 mo
97.1582 383.439 ln
112.158 377.939 mo
112.158 383.439 ln
127.408 377.939 mo
127.408 383.439 ln
142.408 372.439 mo
142.408 383.439 ln
157.408 377.939 mo
157.408 383.439 ln
172.658 377.939 mo
172.658 383.439 ln
187.658 377.939 mo
187.658 383.439 ln
202.908 372.439 mo
202.908 383.439 ln
217.908 377.939 mo
217.908 383.439 ln
233.158 377.939 mo
233.158 383.439 ln
248.158 377.939 mo
248.158 383.439 ln
263.408 372.439 mo
263.408 383.439 ln
278.408 377.939 mo
278.408 383.439 ln
293.658 377.939 mo
293.658 383.439 ln
308.658 377.939 mo
308.658 383.439 ln
323.908 372.439 mo
323.908 383.439 ln
338.908 377.939 mo
338.908 383.439 ln
354.158 377.939 mo
354.158 383.439 ln
369.158 377.939 mo
369.158 383.439 ln
384.408 372.439 mo
384.408 383.439 ln
399.408 377.939 mo
399.408 383.439 ln
414.658 377.939 mo
414.658 383.439 ln
429.658 377.939 mo
429.658 383.439 ln
444.658 372.439 mo
444.658 383.439 ln
459.908 377.939 mo
459.908 383.439 ln
474.908 377.939 mo
474.908 383.439 ln
490.158 377.939 mo
490.158 383.439 ln
505.158 372.439 mo
505.158 383.439 ln
520.408 377.939 mo
520.408 383.439 ln
535.408 377.939 mo
535.408 383.439 ln
550.658 377.939 mo
550.658 383.439 ln
565.658 372.439 mo
565.658 383.439 ln
580.908 377.939 mo
580.908 383.439 ln
595.908 377.939 mo
595.908 383.439 ln
611.158 377.939 mo
611.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
s
save_ctm
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
76.4082 406.439 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
129.158 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
140.837 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
189.908 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
201.587 406.439 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
207.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
250.408 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
262.087 406.439 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
267.922 406.439 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
311.158 406.439 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
322.837 406.439 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
328.672 406.439 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
379.408 406.439 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
431.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
443.087 406.439 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
491.908 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
503.587 406.439 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
509.422 406.439 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
552.408 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
564.087 406.439 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
569.922 406.439 mov
(6) sh
restore_ctm
81.9082 383.439 mo
81.9082 14.4395 ln
98.1582 383.439 mo
81.9082 383.439 ln
90.1582 371.939 mo
81.9082 371.939 ln
90.1582 360.439 mo
81.9082 360.439 ln
90.1582 348.939 mo
81.9082 348.939 ln
98.1582 337.439 mo
81.9082 337.439 ln
90.1582 325.939 mo
81.9082 325.939 ln
90.1582 314.439 mo
81.9082 314.439 ln
90.1582 302.939 mo
81.9082 302.939 ln
98.1582 291.189 mo
81.9082 291.189 ln
90.1582 279.689 mo
81.9082 279.689 ln
90.1582 268.189 mo
81.9082 268.189 ln
90.1582 256.689 mo
81.9082 256.689 ln
98.1582 245.189 mo
81.9082 245.189 ln
90.1582 233.689 mo
81.9082 233.689 ln
90.1582 222.189 mo
81.9082 222.189 ln
90.1582 210.439 mo
81.9082 210.439 ln
98.1582 198.939 mo
81.9082 198.939 ln
90.1582 187.439 mo
81.9082 187.439 ln
90.1582 175.939 mo
81.9082 175.939 ln
90.1582 164.439 mo
81.9082 164.439 ln
98.1582 152.939 mo
81.9082 152.939 ln
90.1582 141.439 mo
81.9082 141.439 ln
90.1582 129.689 mo
81.9082 129.689 ln
90.1582 118.189 mo
81.9082 118.189 ln
98.1582 106.689 mo
81.9082 106.689 ln
90.1582 95.1895 mo
81.9082 95.1895 ln
90.1582 83.6895 mo
81.9082 83.6895 ln
90.1582 72.1895 mo
81.9082 72.1895 ln
98.1582 60.6895 mo
81.9082 60.6895 ln
90.1582 49.1895 mo
81.9082 49.1895 ln
90.1582 37.4395 mo
81.9082 37.4395 ln
90.1582 25.9395 mo
81.9082 25.9395 ln
98.1582 14.4395 mo
81.9082 14.4395 ln
s
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
613.158 406.439 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
624.837 406.439 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
630.672 406.439 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
52.8291 390.689 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 344.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 344.689 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 298.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 298.689 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 298.689 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 252.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 252.689 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 252.689 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 206.939 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 206.939 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 206.939 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
54.8291 159.939 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 113.939 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 113.939 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 67.9395 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 67.9395 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 67.9395 mov
(4) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 22.1895 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 22.1895 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 22.1895 mov
(6) sh
541.408 142.314 mo
549.283 126.564 ln
533.533 126.564 ln
541.408 142.314 ln
0.956863 0.929412 0 0 cmyk
ef
500.658 156.064 mo
508.533 140.314 ln
492.783 140.314 ln
500.658 156.064 ln
ef
454.408 245.564 mo
462.283 229.814 ln
446.533 229.814 ln
454.408 245.564 ln
ef
390.158 202.314 mo
398.033 186.564 ln
382.283 186.564 ln
390.158 202.314 ln
ef
378.158 248.814 mo
386.033 233.064 ln
370.283 233.064 ln
378.158 248.814 ln
ef
351.658 204.564 mo
359.533 188.814 ln
343.783 188.814 ln
351.658 204.564 ln
ef
316.158 243.814 mo
324.033 228.064 ln
308.283 228.064 ln
316.158 243.814 ln
ef
316.158 228.189 mo
316.158 222.189 ln
314.408 222.189 mo
318.158 222.189 ln
316.158 243.689 mo
316.158 249.689 ln
314.408 249.689 mo
318.158 249.689 ln
351.658 188.939 mo
351.658 164.439 ln
349.658 164.439 mo
353.658 164.439 ln
351.658 204.439 mo
351.658 228.939 ln
349.658 228.939 mo
353.658 228.939 ln
378.158 233.189 mo
378.158 213.189 ln
376.408 213.189 mo
380.158 213.189 ln
378.158 248.689 mo
378.158 268.689 ln
376.408 268.689 mo
380.158 268.689 ln
390.158 186.689 mo
390.158 175.939 ln
388.158 175.939 mo
392.158 175.939 ln
390.158 202.189 mo
390.158 212.939 ln
388.158 212.939 mo
392.158 212.939 ln
454.408 229.939 mo
454.408 207.189 ln
452.408 207.189 mo
456.408 207.189 ln
454.408 245.689 mo
454.408 268.189 ln
452.408 268.189 mo
456.408 268.189 ln
500.658 140.439 mo
500.658 132.189 ln
498.658 132.189 mo
502.658 132.189 ln
500.658 156.189 mo
500.658 164.439 ln
498.658 164.439 mo
502.658 164.439 ln
541.408 126.689 mo
541.408 104.439 ln
539.408 104.439 mo
543.408 104.439 ln
541.408 142.189 mo
541.408 164.439 ln
539.408 164.439 mo
543.408 164.439 ln
0 0 0 1 cmyk
s
81.9082 383.439 mo
81.9082 14.4395 ln
626.158 14.4395 ln
626.158 383.439 ln
81.9082 383.439 ln
cp
81.9082 383.439 mo
626.158 383.439 ln
81.9082 372.439 mo
81.9082 383.439 ln
97.1582 377.939 mo
97.1582 383.439 ln
112.158 377.939 mo
112.158 383.439 ln
127.408 377.939 mo
127.408 383.439 ln
142.408 372.439 mo
142.408 383.439 ln
157.408 377.939 mo
157.408 383.439 ln
172.658 377.939 mo
172.658 383.439 ln
187.658 377.939 mo
187.658 383.439 ln
202.908 372.439 mo
202.908 383.439 ln
217.908 377.939 mo
217.908 383.439 ln
233.158 377.939 mo
233.158 383.439 ln
248.158 377.939 mo
248.158 383.439 ln
263.408 372.439 mo
263.408 383.439 ln
278.408 377.939 mo
278.408 383.439 ln
293.658 377.939 mo
293.658 383.439 ln
308.658 377.939 mo
308.658 383.439 ln
323.908 372.439 mo
323.908 383.439 ln
338.908 377.939 mo
338.908 383.439 ln
354.158 377.939 mo
354.158 383.439 ln
369.158 377.939 mo
369.158 383.439 ln
384.408 372.439 mo
384.408 383.439 ln
399.408 377.939 mo
399.408 383.439 ln
414.658 377.939 mo
414.658 383.439 ln
429.658 377.939 mo
429.658 383.439 ln
444.658 372.439 mo
444.658 383.439 ln
459.908 377.939 mo
459.908 383.439 ln
474.908 377.939 mo
474.908 383.439 ln
490.158 377.939 mo
490.158 383.439 ln
505.158 372.439 mo
505.158 383.439 ln
520.408 377.939 mo
520.408 383.439 ln
535.408 377.939 mo
535.408 383.439 ln
550.658 377.939 mo
550.658 383.439 ln
565.658 372.439 mo
565.658 383.439 ln
580.908 377.939 mo
580.908 383.439 ln
595.908 377.939 mo
595.908 383.439 ln
611.158 377.939 mo
611.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
626.158 372.439 mo
626.158 383.439 ln
s
81.9082 383.439 mo
81.9082 14.4395 ln
98.1582 383.439 mo
81.9082 383.439 ln
90.1582 371.939 mo
81.9082 371.939 ln
90.1582 360.439 mo
81.9082 360.439 ln
90.1582 348.939 mo
81.9082 348.939 ln
98.1582 337.439 mo
81.9082 337.439 ln
90.1582 325.939 mo
81.9082 325.939 ln
90.1582 314.439 mo
81.9082 314.439 ln
90.1582 302.939 mo
81.9082 302.939 ln
98.1582 291.189 mo
81.9082 291.189 ln
90.1582 279.689 mo
81.9082 279.689 ln
90.1582 268.189 mo
81.9082 268.189 ln
90.1582 256.689 mo
81.9082 256.689 ln
98.1582 245.189 mo
81.9082 245.189 ln
90.1582 233.689 mo
81.9082 233.689 ln
90.1582 222.189 mo
81.9082 222.189 ln
90.1582 210.439 mo
81.9082 210.439 ln
98.1582 198.939 mo
81.9082 198.939 ln
90.1582 187.439 mo
81.9082 187.439 ln
90.1582 175.939 mo
81.9082 175.939 ln
90.1582 164.439 mo
81.9082 164.439 ln
98.1582 152.939 mo
81.9082 152.939 ln
90.1582 141.439 mo
81.9082 141.439 ln
90.1582 129.689 mo
81.9082 129.689 ln
90.1582 118.189 mo
81.9082 118.189 ln
98.1582 106.689 mo
81.9082 106.689 ln
90.1582 95.1895 mo
81.9082 95.1895 ln
90.1582 83.6895 mo
81.9082 83.6895 ln
90.1582 72.1895 mo
81.9082 72.1895 ln
98.1582 60.6895 mo
81.9082 60.6895 ln
90.1582 49.1895 mo
81.9082 49.1895 ln
90.1582 37.4395 mo
81.9082 37.4395 ln
90.1582 25.9395 mo
81.9082 25.9395 ln
98.1582 14.4395 mo
81.9082 14.4395 ln
s
save_ctm
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
52.8291 390.689 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 344.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 344.689 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 298.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 298.689 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 298.689 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 252.689 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 252.689 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 252.689 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 206.939 mov
(0) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 206.939 mov
(.) sh
/ArialMT*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 206.939 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
54.8291 159.939 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 113.939 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 113.939 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 67.9395 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 67.9395 mov
(.) sh
/ArialMT*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 67.9395 mov
(4) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
38.0791 22.1895 mov
(1) sh
/ArialMT*2 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
49.7583 22.1895 mov
(.) sh
/ArialMT*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
55.5928 22.1895 mov
(6) sh
541.408 142.314 mo
549.283 126.564 ln
533.533 126.564 ln
541.408 142.314 ln
0.956863 0.929412 0 0 cmyk
ef
500.658 156.064 mo
508.533 140.314 ln
492.783 140.314 ln
500.658 156.064 ln
ef
454.408 245.564 mo
462.283 229.814 ln
446.533 229.814 ln
454.408 245.564 ln
ef
390.158 202.314 mo
398.033 186.564 ln
382.283 186.564 ln
390.158 202.314 ln
ef
378.158 248.814 mo
386.033 233.064 ln
370.283 233.064 ln
378.158 248.814 ln
ef
351.658 204.564 mo
359.533 188.814 ln
343.783 188.814 ln
351.658 204.564 ln
ef
316.158 243.814 mo
324.033 228.064 ln
308.283 228.064 ln
316.158 243.814 ln
ef
316.158 228.189 mo
316.158 222.189 ln
314.408 222.189 mo
318.158 222.189 ln
316.158 243.689 mo
316.158 249.689 ln
314.408 249.689 mo
318.158 249.689 ln
351.658 188.939 mo
351.658 164.439 ln
349.658 164.439 mo
353.658 164.439 ln
351.658 204.439 mo
351.658 228.939 ln
349.658 228.939 mo
353.658 228.939 ln
378.158 233.189 mo
378.158 213.189 ln
376.408 213.189 mo
380.158 213.189 ln
378.158 248.689 mo
378.158 268.689 ln
376.408 268.689 mo
380.158 268.689 ln
390.158 186.689 mo
390.158 175.939 ln
388.158 175.939 mo
392.158 175.939 ln
390.158 202.189 mo
390.158 212.939 ln
388.158 212.939 mo
392.158 212.939 ln
454.408 229.939 mo
454.408 207.189 ln
452.408 207.189 mo
456.408 207.189 ln
454.408 245.689 mo
454.408 268.189 ln
452.408 268.189 mo
456.408 268.189 ln
500.658 140.439 mo
500.658 132.189 ln
498.658 132.189 mo
502.658 132.189 ln
500.658 156.189 mo
500.658 164.439 ln
498.658 164.439 mo
502.658 164.439 ln
541.408 126.689 mo
541.408 104.439 ln
539.408 104.439 mo
543.408 104.439 ln
541.408 142.189 mo
541.408 164.439 ln
539.408 164.439 mo
543.408 164.439 ln
0 0 0 1 cmyk
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol Initial
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/version (001.008) def
/FullName (Symbol) def
/FamilyName (Symbol) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -180 -293 1090 1010 } def
/XUID [6 42996 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECAB94698AF
13A4485757691763CAA8023293C6742E3899EDC5BE94ADFC42A0C0027CA6214B
7F8D5F616C6C2330D450A707B93BDD387F8829CFEF02A72B512D93C14DC1F17C
3175B113E267D8BD6A1447D88A441810C35BAC725EC0017275261A74EB5067CD
9834D1E000DA4929128802A4406C63EAAE5098C3B673FB571CE4AA66227384BC
D1F9516217661F446651CBD433BDBB210B8CB1C0AE7FE1EE2E21077BC11F9270
69E30D1E3AF26358279873C2B62D3AA5368EC87D6A567E789674A8EEED694D74
E8AE78AD599DE625132DC2B96E4C1518B04F598401F1080D43B1530D7089A208
39AB479C8D65D6823FDE8C7085D829EBF9BFD791C95C71C65AE4EC2A01CBA5FA
992ED2E4C180E84DC6E14861844CD132B73A4AA658AD9BE20B35514AC67BF58E
E4587AAC0BA16313B83C2C222F018E737313614351D1EFBF36BD83A38ED9DB6B
D6191BB6160AAC9612D574C3028C8C52B52925658ED342DA958D4100DABE516F
4733BF895741A1EA34A4707864910DD7E8EFE407898B7BCC27AC062D1BA4F11A
73F4342E2D8EF6E101C80AABBFD820974B1F3CC33D070E3C0CF97490AE3CCF18
630A6E2BD4007310EF65E793C445E48BC171043FCE380624354787BC936241D0
3306C33061D7EDD92FAC67F671457CD23F6931B947E97BDA7754E5F56D611220
5C4E82C2815584BF47A854236D460FE90AEE8B7FC419C26F68EB007CE6ED0053
856FABF9D7B6E5E6D910A77FDC4019BC55466E90A87476719B3A8CE5B38E4592
40DEDD91E229FB5784ED9E5A05747D938589B5554723ABC8F7F565F9F7AE6BCF
106F2212EAA54EE7DDD86863B30DFFB84D259A8FD24352AD855813AA02791C07
3824963AA973AEB925BCB75D7B8B65680FFF2B750A7939CBD880C8467D1104DF
9F15B0A8B2E43C7F445BA84DDD777444FD9E2416992213E6D0A936603D381689
9E5E55FFC73083C43CA8A15EAD3BEE4D6AFAD49938AC763CA6CEFF4F499F6EB0
303C5FD86A6DA9601B64F321DE385311C18C43E18842F9D2B0445C853100194C
0EB4F0E368EF73081F98B787C0FD723F3DC0FFF2116676894617D05260524DFA
1C1424BBA73EEF75D8DBD86066850389ABCFEBF01C39C364A46182E47BEB9F55
679298A5A04190FF534218EAB65BEEFD74CF10AB8678EF1F6D0571C160A9603A
CDD271F08AD4812C1D7BD5CCE2DAE0170DD34BEB8CEFCD53644795C872A14E50
D6AAD6F1B8D7189729AE7ADFDCB5DF991B245C81CE2308BCC82D48707AFFA4C9
A4C87D5DC67236E08C7B144AA696669DC25D82589F7BBC7ECEFD474AB108069A
375F2B6B927C6D4C970478E059126CFAAFAE963C89B348FA0CEE452DBAB4A8AA
DC47F03B0A479DA258DE4F981B8B1519E8142B98A32C065A92D354FBE9ECD7A3
B1C375B7A9245CB30CCF340911CC422189F990E3418482CD6CF4F35ADD3E562C
9C2391CCE0BC7EF1E69D56098942185668986A56A4A0D19F38F5CB7F3C74FC3B
42142B407F463695F0ADF9B6158C34068957E9D7D9FEEF7B435CFE978B7EC0C7
00F76FE789B06AD24C5BD06223C30408B9C46CDACCE21878FA4B554CCA7CB6E8
F2CE434C2BACE1742728FAAC35872353CD267F7D29A5AB98969346605E56B10B
44F28CDF98BC332319DD4EA2CEBEE602C2E8685C0DD97A42F4E08F3621379DD8
8D1BC56DF1F4B07B95B59D6296FE53C8E9C4E3F1D7CBC2A5309C647FFD05B861
1913E0F096965FF11C6DE59A7744E409FF5A976820321BFF3DA465FB38DAA26E
B26AFAA4D8DC9DD4D675FD60C31E8664DFADFAFD7E61D60054EBAF2C2E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 112 /pi put
pop
%ADOEndSubsetFont
/Symbol*1 
[
112{/.notdef}repeat /pi 143{/.notdef}repeat
] /Symbol nfnt
/Symbol*1 findfont [23 0 0 -23 0 0 ]mfnt sfnt
BuildWidthShowArray
122.408 360.189 mov
(p) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
243.658 349.439 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
243.658 336.689 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/K 
<10bf317026ba62062704f9ba87c1ab1fc7730cdfdacc88df1e45004269f1
b43137c9251fe2841c5423281c9858682237f26a47da9c17460f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 75 /K put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
75{/.notdef}repeat /K 180{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
228.908 345.439 mov
(K) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [19 0 0 -19 0 0 ]mfnt sfnt
BuildWidthShowArray
245.658 362.189 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
229.908 371.939 mov
(K) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9C61B1AF530D86A
EA027C70855C41E9C9B209B65E4C9F7B8832A013F3E89248FF22CF3B4F31335D
50716B1434B372B7001778D95030E7515283DF5AD258A00E6A33C7B314F933B3
7CAF420F6B5BB57D32B8BCAF2524587ED535219031A7C10FC8F3424BEF7375A3
911F69612A72E03820D3CE8F3448707E5EA7578BB6E35A4CF693BEBA5EE4B8BA
4B8E2689391D86A44CF2218F0719B9FD478062833F9792F7EF595A50A2A71684
959E7B093CDDB9C221CE3211606804EDC36DD2B2F130DD60411EEEB53ECC4A18
185B50D6F32B2C713E0B9D886DC8CDFEBD500E186ACB5FB55F031D88FE1095BE
BBC6D9D40B6E6DD4E54DAF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 114 /rho put
pop
%ADOEndSubsetFont
/Symbol*2 
[
114{/.notdef}repeat /rho 141{/.notdef}repeat
] /Symbol nfnt
/Symbol*2 findfont [22 0 0 -22 0 0 ]mfnt sfnt
BuildWidthShowArray
313.908 353.439 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/asterisk 
<10bf3170586c89409dd2665c962f73917ff1d99d25547eb97d8d7a1b746b
52bd73aee63f25b04e33ffea373408cea5b18d57735103adadf0d2b607ad
784041cc4f31b413e027687ce43b3535a4680ad8bc60fcb7acaa8519fa55
5f8158dcfff6de858c7134> ND 
end end
end
/ArialMT findfont /Encoding get
dup 42 /asterisk put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
42{/.notdef}repeat /asterisk 213{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
355.158 350.689 mov
(*) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
341.408 353.439 mov
(K) sh
restore_ctm
362.908 358.189 mo
373.658 358.189 ln
s
save_ctm
/ArialMT*11 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
362.908 371.939 mov
(p) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
384.408 343.689 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
102{/.notdef}repeat /f 153{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
377.408 353.439 mov
(f) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9F8A5890CFA471E
FA6E448FC89BAEED45C2A2C33EDCA439FA961BC7082B6687577EEB52D920EBB8
5FD93C63BFC5830BDF031B91CF2A55D53C2B3F96310561E454DFD2AB16D8E18F
BC37D21AA910DDA6A30A52508A75934F5D24F71C094C7B000E4157C128EBC2A4
75F751D0813EA1A8D5F848E886CFA01B25D4393D86DA3F84CA0932F8DDD3A2ED
890CBEE497F1A48EC5CEF1B786AFB224C278332E8F3EB0004884CFADB5D926C7
FF440DC79F5228405377D92199B3ED36E9DE47F716C40F41E0A8251232E22A28
504F187C4D6B0032AFF4D9D5FED0FB7FCE8CCD106AD7434A42EE4DB1252EE98B
A189478BFB4748B33DB50E27BFE4C8D3B5BD19F92C503520C8F1FDA1C41F7827
E6BF02576DEC0785AFA4222F5F9266
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 76 /Lambda put
dup 102 /phi put
pop
%ADOEndSubsetFont
/Symbol*3 
[
76{/.notdef}repeat /Lambda 25{/.notdef}repeat /phi 153{/.notdef}repeat
] /Symbol nfnt
/Symbol*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
393.158 353.439 mov
15.918 0 (fL) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
43{/.notdef}repeat /plus 212{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
448.908 344.689 mov
(++) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9F0349F697CA426
6AE2982BEC2D25793C326A9B9964A6722F60D7A967FB9FEE225395B703A5DBA4
67BF47C2C03467B5D057A3CDCAFB24A11829AB421433E0A997046E57B69A5ED1
C342F329CB642F19C056A00E677DD9E2FB148CFF48245B7AD6B00C9C4608
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 68 /Delta put
pop
%ADOEndSubsetFont
/Symbol*4 
[
68{/.notdef}repeat /Delta 187{/.notdef}repeat
] /Symbol nfnt
/Symbol*4 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
438.158 353.439 mov
(D) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
485.158 339.689 mov
(-) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9EC7E148A427B7E
8FC423DCB93B22A32B5CD215D42D90CCCCD1CE3BC2B682A8B07EFD210C2B7024
81C76DAC22FE16C2A72343F39A623285E47F2BC801FFAA4FDE8EE68A37D43BF3
5353FEBB7C87397C8A320391572EDCCD744BB8223C0482FA763E5C8CB0E9CB74
0089C6A749A886794B56C16839F1B87DDFB2A667C2CF35F2A4A32A2302F9315D
E8669E691186FC6D90230FF2E0C874047DACA26EFA80773C0F2AE87D55B9E8FD
80A4CFB2BA298A5076466DE47D18BC7525FCF9033E5ACF449EA88B2975137F00
DDF558162B2A64AD50D80BA71385F501EE9F68EFCCC1FD51C8EB1ECCF9B4211C
632DA77530262D2E55EE81A4458CE92A5ABBF142AD54E12FC5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 88 /Xi put
pop
%ADOEndSubsetFont
/Symbol*5 
[
88{/.notdef}repeat /Xi 167{/.notdef}repeat
] /Symbol nfnt
/Symbol*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
471.408 348.439 mov
(X) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
483.158 365.189 mov
(+) sh
restore_ctm
471.408 358.439 mo
483.158 358.439 ln
s
save_ctm
/Symbol*5 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
471.408 371.939 mov
(X) sh
restore_ctm
save_ctm
/ArialMT*14 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
512.408 341.689 mov
(*) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9E766B1CAF21878
312E0497AF828EA9C4436A032435DFC750A4117A43A9C3B41DD6C1D8168AE52E
23F9416C6F0B1BBC12AF8595D8968F233123E95506448C83CFB0712C2D9C0DFB
5548AB8F6B2EE546A002085B7514A575F2A55EEC4DF522880BB870C238C500A7
39C0F212A86346702747909348F622E240CF67A41133231EA204443824
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 83 /Sigma put
pop
%ADOEndSubsetFont
/Symbol*6 
[
83{/.notdef}repeat /Sigma 172{/.notdef}repeat
] /Symbol nfnt
/Symbol*6 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
501.658 353.439 mov
(S) sh
restore_ctm
save_ctm
/ArialMT*14 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
547.658 341.689 mov
(*) sh
restore_ctm
save_ctm
/Symbol*3 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
534.908 353.439 mov
(L) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
590.658 343.689 mov
(-) sh
restore_ctm
124.158 285.939 mo
124.158 284.939 ln
124.158 301.689 mo
124.158 302.939 ln
419.158 166.939 mo
419.158 166.189 ln
419.158 182.689 mo
419.158 183.439 ln
481.408 126.189 mo
481.408 124.939 ln
481.408 141.689 mo
481.408 142.939 ln
587.408 57.9395 mo
587.408 56.9395 ln
587.408 73.4395 mo
587.408 74.4395 ln
s
0 0 0 1 cmyk
%ADOBeginSubsetFont: Symbol AddGlyphs


currentfile eexec A0B00ED553C885B054407600D8001EF7E731258E500186
3D60D7087C9E5BD9B77926DD398D7FAC548A8FD69776502A7C17563724620FE9
028CEA772E687B2DABA3D45FCF81F001DFE7CEE78E8EF8B5CB9D6F8D0538C498
22F2E8F630154A865F7681DBD12D362F4797F99F6C459D5AB9FB5DC0771C7431
445087EF37BD6F374FBC05DB8DD8F04A951674F396ED52BFC00E3B169FD9E68E
00334456E9E592575EAC9DBB4BF418660C8E3B1E70FE7155DF60A772A36EBEE1
518B2203C417FE65C11202C17F62F87BD037306DE03C671714E91969E640D2A1
27886D38AED8EFB7029474B3497129A8139EDCB8085A5CB3D4AFE1B375C56FCC
E36FC7ACE6D9CBA378D9F7B6EE0BC29FE763CF4BCB4F222BF1FCB55D5A79BE4F
7D9026FA140B90FE33D02CA6F05ED7EFFEFC11F2B6E48275312E136586BC4E68
76120777CA38AB19C947B7FD10924AAB8CC2AE3AE6A55F69FA7782EB11D04B14
B3BAB8CC1508A9E27A1527A43DA5951963E72D4ACF743F373145AE24647E54A8
54CD943DDF0D8AAE293A2740A8EB719DF98AA1167C40FB568D9D669D1E72AE39
EB2CEB3B02BE7131
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Symbol findfont /Encoding get
dup 87 /Omega put
pop
%ADOEndSubsetFont
/Symbol*7 
[
87{/.notdef}repeat /Omega 168{/.notdef}repeat
] /Symbol nfnt
/Symbol*7 findfont [21 0 0 -21 0 0 ]mfnt sfnt
BuildWidthShowArray
576.908 353.439 mov
(W) sh
595.223 65.6895 mo
595.223 61.3423 591.695 57.8145 587.348 57.8145 cv
583.001 57.8145 579.473 61.3423 579.473 65.6895 cv
579.473 70.0366 583.001 73.5645 587.348 73.5645 cv
591.695 73.5645 595.223 70.0366 595.223 65.6895 cv
0.886275 0.0627451 0.980392 0.00784314 cmyk
ef
489.263 133.969 mo
489.263 129.623 485.735 126.094 481.388 126.094 cv
477.041 126.094 473.513 129.623 473.513 133.969 cv
473.513 138.316 477.041 141.844 481.388 141.844 cv
485.735 141.844 489.263 138.316 489.263 133.969 cv
ef
426.983 174.649 mo
426.983 170.303 423.455 166.774 419.108 166.774 cv
414.761 166.774 411.233 170.303 411.233 174.649 cv
411.233 178.996 414.761 182.524 419.108 182.524 cv
423.455 182.524 426.983 178.996 426.983 174.649 cv
ef
373.463 211.729 mo
373.463 207.383 369.936 203.854 365.588 203.854 cv
361.241 203.854 357.713 207.383 357.713 211.729 cv
357.713 216.076 361.241 219.604 365.588 219.604 cv
369.936 219.604 373.463 216.076 373.463 211.729 cv
ef
240.264 210.17 mo
240.264 205.822 236.735 202.295 232.389 202.295 cv
228.041 202.295 224.514 205.822 224.514 210.17 cv
224.514 214.517 228.041 218.045 232.389 218.045 cv
236.735 218.045 240.264 214.517 240.264 210.17 cv
ef
239.063 251.689 mo
239.063 247.343 235.535 243.814 231.188 243.814 cv
226.841 243.814 223.313 247.343 223.313 251.689 cv
223.313 256.036 226.841 259.564 231.188 259.564 cv
235.535 259.564 239.063 256.036 239.063 251.689 cv
ef
132.023 293.93 mo
132.023 289.582 128.495 286.055 124.148 286.055 cv
119.801 286.055 116.273 289.582 116.273 293.93 cv
116.273 298.276 119.801 301.805 124.148 301.805 cv
128.495 301.805 132.023 298.276 132.023 293.93 cv
ef
316.158 189.439 mo
316.158 174.189 ln
316.158 204.939 mo
316.158 220.189 ln
390.158 148.689 mo
390.158 123.689 ln
390.158 164.439 mo
390.158 189.689 ln
454.408 171.189 mo
454.408 159.439 ln
454.408 186.689 mo
454.408 198.439 ln
500.658 114.939 mo
500.658 78.6895 ln
500.658 130.689 mo
500.658 167.189 ln
0 0 0 1 cmyk
s
549.263 113.209 mo
549.263 108.862 545.735 105.334 541.388 105.334 cv
537.041 105.334 533.513 108.862 533.513 113.209 cv
533.513 117.557 537.041 121.084 541.388 121.084 cv
545.735 121.084 549.263 117.557 549.263 113.209 cv
0.886275 0.0627451 0.980392 0.00784314 cmyk
ef
508.583 122.93 mo
508.583 118.583 505.055 115.055 500.708 115.055 cv
496.361 115.055 492.833 118.583 492.833 122.93 cv
492.833 127.276 496.361 130.805 500.708 130.805 cv
505.055 130.805 508.583 127.276 508.583 122.93 cv
ef
462.263 178.97 mo
462.263 174.622 458.735 171.095 454.388 171.095 cv
450.041 171.095 446.513 174.622 446.513 178.97 cv
446.513 183.316 450.041 186.845 454.388 186.845 cv
458.735 186.845 462.263 183.316 462.263 178.97 cv
ef
398.063 156.649 mo
398.063 152.302 394.535 148.774 390.188 148.774 cv
385.841 148.774 382.313 152.302 382.313 156.649 cv
382.313 160.997 385.841 164.524 390.188 164.524 cv
394.535 164.524 398.063 160.997 398.063 156.649 cv
ef
359.543 162.41 mo
359.543 158.063 356.016 154.535 351.668 154.535 cv
347.321 154.535 343.793 158.063 343.793 162.41 cv
343.793 166.757 347.321 170.284 351.668 170.284 cv
356.016 170.284 359.543 166.757 359.543 162.41 cv
ef
324.023 197.209 mo
324.023 192.862 320.495 189.334 316.148 189.334 cv
311.801 189.334 308.273 192.862 308.273 197.209 cv
308.273 201.557 311.801 205.084 316.148 205.084 cv
320.495 205.084 324.023 201.557 324.023 197.209 cv
ef
231.158 210.439 mo
231.158 206.689 ln
231.158 225.939 mo
231.158 229.689 ln
232.408 191.189 mo
232.408 187.439 ln
232.408 206.939 mo
232.408 210.439 ln
365.658 120.939 mo
365.658 112.689 ln
365.658 136.439 mo
365.658 144.689 ln
419.158 133.439 mo
419.158 120.689 ln
419.158 149.189 mo
419.158 162.189 ln
481.408 119.689 mo
481.408 106.689 ln
481.408 135.439 mo
481.408 148.189 ln
587.408 85.1895 mo
587.408 72.1895 ln
587.408 100.689 mo
587.408 113.689 ln
0 0 0 1 cmyk
s
587.408 85.0645 mo
579.533 100.814 ln
595.283 100.814 ln
587.408 85.0645 ln
0.0117647 0.960784 0.913726 0 cmyk
ef
481.408 119.564 mo
473.533 135.314 ln
489.283 135.314 ln
481.408 119.564 ln
ef
419.158 133.564 mo
411.283 149.314 ln
427.033 149.314 ln
419.158 133.564 ln
ef
365.658 120.814 mo
357.783 136.564 ln
373.533 136.564 ln
365.658 120.814 ln
ef
232.408 191.064 mo
224.533 206.814 ln
240.283 206.814 ln
232.408 191.064 ln
ef
231.158 210.314 mo
223.283 226.064 ln
239.033 226.064 ln
231.158 210.314 ln
ef
124.158 276.814 mo
116.283 292.564 ln
132.033 292.564 ln
124.158 276.814 ln
ef
232.408 237.439 mo
232.408 231.189 ln
230.408 231.189 mo
234.408 231.189 ln
232.408 252.939 mo
232.408 258.939 ln
230.408 258.939 mo
234.408 258.939 ln
365.658 216.439 mo
365.658 212.939 ln
363.658 212.939 mo
367.658 212.939 ln
365.658 232.189 mo
365.658 235.939 ln
363.658 235.939 mo
367.658 235.939 ln
419.158 200.439 mo
419.158 192.189 ln
417.408 192.189 mo
421.158 192.189 ln
419.158 215.939 mo
419.158 224.439 ln
417.408 224.439 mo
421.158 224.439 ln
481.408 151.939 mo
481.408 127.439 ln
479.408 127.439 mo
483.408 127.439 ln
481.408 167.689 mo
481.408 192.189 ln
479.408 192.189 mo
483.408 192.189 ln
0 0 0 1 cmyk
s
481.408 167.564 mo
489.283 151.814 ln
473.533 151.814 ln
481.408 167.564 ln
0.956863 0.929412 0 0 cmyk
ef
419.158 216.064 mo
427.033 200.314 ln
411.283 200.314 ln
419.158 216.064 ln
ef
365.658 232.314 mo
373.533 216.564 ln
357.783 216.564 ln
365.658 232.314 ln
ef
232.408 253.064 mo
240.283 237.314 ln
224.533 237.314 ln
232.408 253.064 ln
ef
231.158 273.814 mo
239.033 258.064 ln
223.283 258.064 ln
231.158 273.814 ln
ef
124.158 310.814 mo
132.033 295.064 ln
116.283 295.064 ln
124.158 310.814 ln
ef
316.158 228.189 mo
316.158 222.189 ln
314.408 222.189 mo
318.158 222.189 ln
316.158 243.689 mo
316.158 249.689 ln
314.408 249.689 mo
318.158 249.689 ln
351.658 188.939 mo
351.658 164.439 ln
349.658 164.439 mo
353.658 164.439 ln
351.658 204.439 mo
351.658 228.939 ln
349.658 228.939 mo
353.658 228.939 ln
378.158 233.189 mo
378.158 213.189 ln
376.408 213.189 mo
380.158 213.189 ln
378.158 248.689 mo
378.158 268.689 ln
376.408 268.689 mo
380.158 268.689 ln
390.158 186.689 mo
390.158 175.939 ln
388.158 175.939 mo
392.158 175.939 ln
390.158 202.189 mo
390.158 212.939 ln
388.158 212.939 mo
392.158 212.939 ln
454.408 229.939 mo
454.408 207.189 ln
452.408 207.189 mo
456.408 207.189 ln
454.408 245.689 mo
454.408 268.189 ln
452.408 268.189 mo
456.408 268.189 ln
500.658 140.439 mo
500.658 132.189 ln
498.658 132.189 mo
502.658 132.189 ln
500.658 156.189 mo
500.658 164.439 ln
498.658 164.439 mo
502.658 164.439 ln
541.408 126.689 mo
541.408 104.439 ln
539.408 104.439 mo
543.408 104.439 ln
541.408 142.189 mo
541.408 164.439 ln
539.408 164.439 mo
543.408 164.439 ln
0 0 0 1 cmyk
s
541.408 142.314 mo
549.283 126.564 ln
533.533 126.564 ln
541.408 142.314 ln
0.956863 0.929412 0 0 cmyk
ef
500.658 156.064 mo
508.533 140.314 ln
492.783 140.314 ln
500.658 156.064 ln
ef
454.408 245.564 mo
462.283 229.814 ln
446.533 229.814 ln
454.408 245.564 ln
ef
390.158 202.314 mo
398.033 186.564 ln
382.283 186.564 ln
390.158 202.314 ln
ef
378.158 248.814 mo
386.033 233.064 ln
370.283 233.064 ln
378.158 248.814 ln
ef
351.658 204.564 mo
359.533 188.814 ln
343.783 188.814 ln
351.658 204.564 ln
ef
316.158 243.814 mo
324.033 228.064 ln
308.283 228.064 ln
316.158 243.814 ln
ef
231.158 210.439 mo
231.158 206.689 ln
229.158 206.689 mo
233.158 206.689 ln
231.158 225.939 mo
231.158 229.689 ln
229.158 229.689 mo
233.158 229.689 ln
232.408 191.189 mo
232.408 187.439 ln
230.408 187.439 mo
234.408 187.439 ln
232.408 206.939 mo
232.408 210.439 ln
230.408 210.439 mo
234.408 210.439 ln
365.658 120.939 mo
365.658 112.689 ln
363.658 112.689 mo
367.658 112.689 ln
365.658 136.439 mo
365.658 144.689 ln
363.658 144.689 mo
367.658 144.689 ln
419.158 133.439 mo
419.158 120.689 ln
417.408 120.689 mo
421.158 120.689 ln
419.158 149.189 mo
419.158 162.189 ln
417.408 162.189 mo
421.158 162.189 ln
481.408 119.689 mo
481.408 106.689 ln
479.408 106.689 mo
483.408 106.689 ln
481.408 135.439 mo
481.408 148.189 ln
479.408 148.189 mo
483.408 148.189 ln
587.408 85.1895 mo
587.408 72.1895 ln
585.658 72.1895 mo
589.408 72.1895 ln
587.408 100.689 mo
587.408 113.689 ln
585.658 113.689 mo
589.408 113.689 ln
0 0 0 1 cmyk
s
587.408 85.0645 mo
579.533 100.814 ln
595.283 100.814 ln
587.408 85.0645 ln
0.0117647 0.960784 0.913726 0 cmyk
ef
481.408 119.564 mo
473.533 135.314 ln
489.283 135.314 ln
481.408 119.564 ln
ef
419.158 133.564 mo
411.283 149.314 ln
427.033 149.314 ln
419.158 133.564 ln
ef
365.658 120.814 mo
357.783 136.564 ln
373.533 136.564 ln
365.658 120.814 ln
ef
232.408 191.064 mo
224.533 206.814 ln
240.283 206.814 ln
232.408 191.064 ln
ef
231.158 210.314 mo
223.283 226.064 ln
239.033 226.064 ln
231.158 210.314 ln
ef
124.158 276.814 mo
116.283 292.564 ln
132.033 292.564 ln
124.158 276.814 ln
ef
351.658 126.689 mo
351.658 106.689 ln
349.658 106.689 mo
353.658 106.689 ln
351.658 142.189 mo
351.658 162.189 ln
349.658 162.189 mo
353.658 162.189 ln
390.158 151.939 mo
390.158 137.439 ln
388.158 137.439 mo
392.158 137.439 ln
390.158 167.689 mo
390.158 182.189 ln
388.158 182.189 mo
392.158 182.189 ln
500.658 80.4395 mo
500.658 46.6895 ln
498.658 46.6895 mo
502.658 46.6895 ln
500.658 96.1895 mo
500.658 129.689 ln
498.658 129.689 mo
502.658 129.689 ln
0 0 0 1 cmyk
s
500.658 80.3145 mo
492.783 96.0645 ln
508.533 96.0645 ln
500.658 80.3145 ln
0.0117647 0.960784 0.913726 0 cmyk
ef
390.158 151.814 mo
382.283 167.564 ln
398.033 167.564 ln
390.158 151.814 ln
ef
351.658 126.564 mo
343.783 142.314 ln
359.533 142.314 ln
351.658 126.564 ln
ef
save_ctm
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 67 /C put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
65{/.notdef}repeat /A /.notdef /C 40{/.notdef}repeat /l /.notdef /n 
3{/.notdef}repeat /r /.notdef /t /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
147.908 48.6895 mov
(C) sh
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
166.685 48.6895 mov
(e) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
181.145 48.6895 mov
(ntr) sh
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
211.486 48.6895 mov
(a) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
225.946 48.6895 mov
(l) sh
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
231.723 48.6895 mov
( ) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
238.946 48.6895 mov
(Au) sh
/ArialMT*16 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
270.748 48.6895 mov
(+) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
285.932 48.6895 mov
(Au) sh
125.408 29.5645 mo
117.533 45.3145 ln
133.283 45.3145 ln
125.408 29.5645 ln
0.0117647 0.960784 0.913726 0 cmyk
ef
save_ctm
restore_ctm
0 0 0 1 cmyk
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
147.908 85.6895 mov
(M) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/B 
<10bf317026ba62063ac1fc9b1b7da70a4283bca66508b7487db96d3b5e50
ebb26d781c08b71d8c60e86f5f95e258aadae78cebfccceace7d1e24a04f
7a0ebebb84d24fd6e0dcc7805db6e5cdf4eb0699290a048d32bdfc7bda09
b014801b6912f42581f07cfc0dad1f3a0fda97cccb6dc64f3c2133712b38
17f9dcf78f219a31023477457afb4124f2e67688f81d2fae0a3d889fa20e
a1e4d003c07fa3b1c5e475e398065490772a2317b8a1741177b48843cacc
98258835f7713d01ccd04d20a02276a9eaa215ecd7e642af0d478b9844bc
79867bee2d8cdbfd06> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
end end
end
/ArialMT findfont /Encoding get
dup 66 /B put
dup 100 /d put
dup 105 /i put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
66{/.notdef}repeat /B 33{/.notdef}repeat /d 4{/.notdef}repeat /i 150{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
169.566 85.6895 mov
(i) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
175.343 85.6895 mov
(n) sh
/ArialMT*18 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
189.803 85.6895 mov
(Bi) sh
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
212.921 85.6895 mov
(as ) sh
/ArialMT*18 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
247.604 85.6895 mov
(d) sh
/ArialMT*16 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
262.064 85.6895 mov
(+) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
277.248 85.6895 mov
(Au) sh
133.224 74.4492 mo
133.224 70.1025 129.695 66.5742 125.349 66.5742 cv
121.001 66.5742 117.474 70.1025 117.474 74.4492 cv
117.474 78.7964 121.001 82.3242 125.349 82.3242 cv
129.695 82.3242 133.224 78.7964 133.224 74.4492 cv
0.886275 0.0627451 0.980392 0.00784314 cmyk
ef
save_ctm
restore_ctm
0 0 0 1 cmyk
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
147.908 121.939 mov
(M) sh
/ArialMT*18 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
169.566 121.939 mov
(i) sh
/ArialMT*17 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
175.343 121.939 mov
(n) sh
/ArialMT*18 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
189.803 121.939 mov
(Bi) sh
/ArialMT*8 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
212.921 121.939 mov
(as ) sh
/ArialMT*11 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
247.604 121.939 mov
(p) sh
/ArialMT*16 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
262.064 121.939 mov
(+) sh
/ArialMT*11 findfont [26 0 0 -26 0 0 ]mfnt sfnt
BuildWidthShowArray
277.248 121.939 mov
(p) sh
125.408 119.314 mo
133.283 103.564 ln
117.533 103.564 ln
125.408 119.314 ln
0.956863 0.929412 0 0 cmyk
ef
save_ctm
restore_ctm
0 0 0 1 cmyk
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
323.829 344.064 mov
(0) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
